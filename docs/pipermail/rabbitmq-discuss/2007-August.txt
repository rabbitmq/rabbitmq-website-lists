From rob.j.godfrey at gmail.com  Wed Aug  1 11:22:22 2007
From: rob.j.godfrey at gmail.com (Robert Godfrey)
Date: Wed, 1 Aug 2007 11:22:22 +0100
Subject: [rabbitmq-discuss] Javascript client
In-Reply-To: <lybqdupi0j.fsf@tanto.lshift.net>
References: <6323D01C-D9F1-4331-9FDB-08ED1324F12D@mu.dk>
	<lyk5sjpf2g.fsf@tanto.lshift.net>
	<0759D870-2AB3-4821-BD56-CA7D8AC397B6@mu.dk>
	<lybqdupi0j.fsf@tanto.lshift.net>
Message-ID: <fde171c00708010322l195a3db2te597fd893f64dfbe@mail.gmail.com>

Hi Matthias,


NB: This code is RabbitMQ-specific since the AMQ WG has not (yet)
> defined an HTTP transport.


Do you guys have any plans to bring this up to the AMQP working group as a
proposal for incorporation?

Cheers,
Rob
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20070801/f7413a2b/attachment.htm 

From matthias at lshift.net  Wed Aug  1 11:43:14 2007
From: matthias at lshift.net (Matthias Radestock)
Date: Wed, 01 Aug 2007 11:43:14 +0100
Subject: [rabbitmq-discuss] Javascript client
In-Reply-To: <fde171c00708010322l195a3db2te597fd893f64dfbe@mail.gmail.com>
	(Robert Godfrey's message of "Wed, 1 Aug 2007 11:22:22 +0100")
References: <6323D01C-D9F1-4331-9FDB-08ED1324F12D@mu.dk>
	<lyk5sjpf2g.fsf@tanto.lshift.net>
	<0759D870-2AB3-4821-BD56-CA7D8AC397B6@mu.dk>
	<lybqdupi0j.fsf@tanto.lshift.net>
	<fde171c00708010322l195a3db2te597fd893f64dfbe@mail.gmail.com>
Message-ID: <lyhcnjwn5p.fsf@tanto.lshift.net>

Rob,

"Robert Godfrey" <rob.j.godfrey at gmail.com> writes:

>> NB: This code is RabbitMQ-specific since the AMQ WG has not (yet)
>> defined an HTTP transport.
>
> Do you guys have any plans to bring this up to the AMQP working group
> as a proposal for incorporation?

Yes, once the dust has settled on AMQP 0-10 and we have incorporated the
changes resulting from that into the design.


Matthias.



From rob.j.godfrey at gmail.com  Wed Aug  1 11:52:35 2007
From: rob.j.godfrey at gmail.com (Robert Godfrey)
Date: Wed, 1 Aug 2007 11:52:35 +0100
Subject: [rabbitmq-discuss] Javascript client
In-Reply-To: <lyhcnjwn5p.fsf@tanto.lshift.net>
References: <6323D01C-D9F1-4331-9FDB-08ED1324F12D@mu.dk>
	<lyk5sjpf2g.fsf@tanto.lshift.net>
	<0759D870-2AB3-4821-BD56-CA7D8AC397B6@mu.dk>
	<lybqdupi0j.fsf@tanto.lshift.net>
	<fde171c00708010322l195a3db2te597fd893f64dfbe@mail.gmail.com>
	<lyhcnjwn5p.fsf@tanto.lshift.net>
Message-ID: <fde171c00708010352r48f232fcof0a32625f86e8c6e@mail.gmail.com>

On 01/08/07, Matthias Radestock <matthias at lshift.net> wrote:
>
> Rob,
>
> "Robert Godfrey" <rob.j.godfrey at gmail.com> writes:
>
> >> NB: This code is RabbitMQ-specific since the AMQ WG has not (yet)
> >> defined an HTTP transport.
> >
> > Do you guys have any plans to bring this up to the AMQP working group
> > as a proposal for incorporation?
>
> Yes, once the dust has settled on AMQP 0-10 and we have incorporated the
> changes resulting from that into the design.



Excellent :-)  Do you have any documentation / thoughts right now that can
be put on the AMQP wiki for discussion?  On reason I ask is that we have
been asked to do something similar in <insert name of another AMQP
implementation here :-)> and would be good to make these things work
together...

Cheers,
Rob

Matthias.
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20070801/5a94d2bc/attachment.htm 

From trapexit.rabbitmq at erlang-consulting.com  Wed Aug  1 11:59:35 2007
From: trapexit.rabbitmq at erlang-consulting.com (trapexit.rabbitmq at erlang-consulting.com)
Date: Wed, 1 Aug 2007 11:59:35 +0100 (BST)
Subject: [rabbitmq-discuss] RabbitMQ mailing list on Trapexit
Message-ID: <36951.81.149.81.161.1185965975.squirrel@webmail.erlangsystems.com>

Hi,

Just sending a message to tell you that the rabbitmg-discuss mailing list
now can be read on Trapexit.

By collecting mailing list and mirror them we try to give Erlang projects
more exposure and make it easier for people in the Erlang community to
follow discussions on the various Erlang related mailing lists.

This mail is also a test to see if the mailing list to forum bridge is
working.

Best Regards,
Ulf Eliasson and the Trapexit Team
http://www.trapexit.org/

--
Erlang Training & Consulting
http://www.erlang-consulting.com/




From matthias at lshift.net  Wed Aug  1 12:09:30 2007
From: matthias at lshift.net (Matthias Radestock)
Date: Wed, 01 Aug 2007 12:09:30 +0100
Subject: [rabbitmq-discuss] RabbitMQ 1.1.0-alpha released
Message-ID: <ly643zwlxx.fsf@tanto.lshift.net>

The RabbitMQ team is pleased to announce the release of RabbitMQ
1.1.0-alpha.

This release contains several bug fixes and enhancements in the
RabbitMQ server, the Java client libraries, and the examples, as well
as improvements to the documentation and packaging. A summary of the
changes is included below.

Binary and source distributions of the new release can be found in the
usual place, at
  http://www.rabbitmq.com/download.html

The release implements AMQP 0-8, which is unchanged from the previous
release. For details of compatibility see
  http://www.rabbitmq.com/compatibility.html

We recommend that all users of earlier versions of RabbitMQ upgrade to
the new version.

As always, we welcome any questions, bug reports, and other feedback on
this release, as well as general suggestions for features and
enhancements in future releases. Mail us via the RabbitMQ discussion
list at rabbitmq-discuss at lists.rabbitmq.com, or directly at
info at rabbitmq.com

We have started work on implementing the upcoming 0-10 version of the
AMQP specification, and expect to issue our next major release of
RabbitMQ when we have made sufficient progress on that. Before then we
may schedule in some minor bug fix releases.


Meanwhile, have fun with RabbitMQ 1.1.0-alpha!


Regards,

The RabbitMQ Team

-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: README-1.1.0-alpha.txt
Url: http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20070801/ad3b64c8/attachment.txt 

From 0x6e6562 at gmail.com  Wed Aug  1 19:32:47 2007
From: 0x6e6562 at gmail.com (Ben Hood)
Date: Wed, 1 Aug 2007 19:32:47 +0100
Subject: [rabbitmq-discuss] FW: Multiple consumers
In-Reply-To: <269388e30708011126r206cfa8egefa8323aab81e945@mail.gmail.com>
References: <AE8FD6F8A5C7A74EB55A0639892B0A6C13A90D@SPR3V4.office.local>
	<lyk5skqfm8.fsf@tanto.lshift.net>
	<269388e30707281726l7f9d2acfp19fbc765bf8f677d@mail.gmail.com>
	<lybqdvr6le.fsf@tanto.lshift.net>
	<269388e30707290201r715fbbcdm2a0a41faa64ee8e1@mail.gmail.com>
	<lyvec3pgc2.fsf@tanto.lshift.net>
	<269388e30707290519h27e37a1ck58d0625948a5f231@mail.gmail.com>
	<lyfy37pdmx.fsf@tanto.lshift.net>
	<269388e30707311653x339b0efehdda8cf91c1385675@mail.gmail.com>
	<269388e30708011126r206cfa8egefa8323aab81e945@mail.gmail.com>
Message-ID: <269388e30708011132n28b10e85q4ad07ec922e9acbd@mail.gmail.com>

Matthias,

> Here is the latest patch based on the design discussion we have been
> having. This demonstrates how the connection initiation, opening

Sorry, I didn't realize that you were going to release 1.1.0 so soon.
I'll download that and incorporate the client into that and resubmit
the patch.

Ben



From 0x6e6562 at gmail.com  Wed Aug  1 19:26:40 2007
From: 0x6e6562 at gmail.com (Ben Hood)
Date: Wed, 1 Aug 2007 19:26:40 +0100
Subject: [rabbitmq-discuss]  FW: Multiple consumers
In-Reply-To: <269388e30707311653x339b0efehdda8cf91c1385675@mail.gmail.com>
References: <AE8FD6F8A5C7A74EB55A0639892B0A6C13A90D@SPR3V4.office.local>
	<269388e30707280654ha7b6ef7hc185221530f57131@mail.gmail.com>
	<lyk5skqfm8.fsf@tanto.lshift.net>
	<269388e30707281726l7f9d2acfp19fbc765bf8f677d@mail.gmail.com>
	<lybqdvr6le.fsf@tanto.lshift.net>
	<269388e30707290201r715fbbcdm2a0a41faa64ee8e1@mail.gmail.com>
	<lyvec3pgc2.fsf@tanto.lshift.net>
	<269388e30707290519h27e37a1ck58d0625948a5f231@mail.gmail.com>
	<lyfy37pdmx.fsf@tanto.lshift.net>
	<269388e30707311653x339b0efehdda8cf91c1385675@mail.gmail.com>
Message-ID: <269388e30708011126r206cfa8egefa8323aab81e945@mail.gmail.com>

Sorry, I forwarded this accidentally to erlang-questions....

---------- Forwarded message ----------
From: Ben Hood <0x6e6562 at gmail.com>
Date: Aug 1, 2007 12:53 AM
Subject: Re: [rabbitmq-discuss] FW: Multiple consumers
To: Matthias Radestock <matthias at lshift.net>


Matthias,

Here is the latest patch based on the design discussion we have been
having. This demonstrates how the connection initiation, opening
channel 0, opening channel 1 and doing an access request for both the
direct and networked cases. Please bear in mind that I was
concentrating on getting a working prototype to you based on the
design you described, so there are a lot of rough edges that require
refactoring, cleaning up and polishing, as well as going through the
complete spec for each case (direct and network).

You can best see the flow by executing the amqp_client_test module
which has a test case for the direct and network cases.

To get a unified API, what I have done is to parameterize the client
with a direct driver and a network driver that implement the necessary
callbacks to provide connectivity in the 2 scenarios
(amqp_direct_driver and amqp_network_driver). By doing this I can use
amqp_send() and amqp_receive() functions in the higher level client in
a transparent fashion, so the actual protocol handling is common.

In the direct case, a new process for a client channel is spawned and
this maintains connectivity to the server peer.

In the network case, a new process for the initial AMQP network
connection is spawned which handles the connection tuning. This
process handles the socket connectivity (to be exact, there's a reader
process and a writer process). Then when a user calls open_channel, a
new amqp_client process is spawned for that channel, this process is
registered with the relevant socket reader/writer processes, and
normal message passing occurs from here on in. This way the same
send() and recv() for AMQP can be used in the direct and network
cases.

There are a lot of things that require attention, for example

- The way the new channel processes are send to the socket reader (I
have been reading the gen_tcp man pages for a cleaner way to do this)
- Making sure that exits are trapped correctly
- Taking out all of the io:format() statements (is a logging strategy
worth considering?)
- Streamlining the messages that get passed, so the amqp_send/receive
functions are simpler and easier to understand (there's probably
redundancy in there) and to get rid of some case statements that
currently exist.
- General refactoring in the client to make it neater and easier to maintain.
- Considering refactoring commonalities between the client and the
server, such as the header files and the server modules used by the
client
- I patched rabbit_framing.erl, which I have subsequently learned is a
generated file, so that needs cleaning up.
- The patch probably also contains changes to server modules that are
not entirely necessary, these need to be identified and reviewed.
- Do some real testing with it :-)
- Benchmark the direct and network drivers to see what difference it
makes, if any ;-)

But I just wanted to find out if this is going in the right direction
before I do too much on these points. Also, there are some
dependencies on refactoring the server modules.

So I'll just answer some of your comments now:

> > 1. In the direct case, the host and channel would be set in the
> > start() call, so just passing the Pid is fine.
>
> There is no 'host' in the direct case.

Fine. This is how it has been implemented.

> The initialisation sequence for the networked client is:
>
> 1) open socket,
>
> 2) spawn reader process, parameterised by the socket.
>
> 3) open channels by sending a message to the reader process. This should
> result in the spawning a new channel process, parameterised by the
> channel number, ReaderPid and WriterPid, and the necessary book-keeping
> (mapping channel numbers to pids) - i.e. everything
> rabbit_reader:open_channel does currently. The reply message to the
> sender of the 'open_channel' message should contain the Pid of the new
> channel process.

This is IMHO exactly how it works now.

>
> > 2. Should the processes be linked at all? That is, if a channel
> > process dies, should the user process die as well?

This requires some review to check that it is done properly in the
code, but is not really a big deal.

>
> Channel processes should be (and are) linked to their reader process. As
> for linking them to the user process, i.e. the process that initiated
> the opening of a channel, I reckon we should leave that up to the user.

OK.

HTH,

Ben
-------------- next part --------------
A non-text attachment was scrubbed...
Name: erlang_client_3.patch
Type: application/octet-stream
Size: 50801 bytes
Desc: not available
Url : http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20070801/59b50649/attachment.obj 

From matthias at lshift.net  Wed Aug  1 21:11:08 2007
From: matthias at lshift.net (Matthias Radestock)
Date: Wed, 01 Aug 2007 21:11:08 +0100
Subject: [rabbitmq-discuss] FW: Multiple consumers
In-Reply-To: <269388e30708011132n28b10e85q4ad07ec922e9acbd@mail.gmail.com>
	(Ben Hood's message of "Wed, 1 Aug 2007 19:32:47 +0100")
References: <AE8FD6F8A5C7A74EB55A0639892B0A6C13A90D@SPR3V4.office.local>
	<lyk5skqfm8.fsf@tanto.lshift.net>
	<269388e30707281726l7f9d2acfp19fbc765bf8f677d@mail.gmail.com>
	<lybqdvr6le.fsf@tanto.lshift.net>
	<269388e30707290201r715fbbcdm2a0a41faa64ee8e1@mail.gmail.com>
	<lyvec3pgc2.fsf@tanto.lshift.net>
	<269388e30707290519h27e37a1ck58d0625948a5f231@mail.gmail.com>
	<lyfy37pdmx.fsf@tanto.lshift.net>
	<269388e30707311653x339b0efehdda8cf91c1385675@mail.gmail.com>
	<269388e30708011126r206cfa8egefa8323aab81e945@mail.gmail.com>
	<269388e30708011132n28b10e85q4ad07ec922e9acbd@mail.gmail.com>
Message-ID: <lybqdruiar.fsf@tanto.lshift.net>

Ben,

"Ben Hood" <0x6e6562 at gmail.com> writes:

> Sorry, I didn't realize that you were going to release 1.1.0 so soon.
> I'll download that and incorporate the client into that and resubmit
> the patch.

That would be great. The required changes should hopefully be quite
minimal.


Matthias.



From matthias at lshift.net  Thu Aug  2 07:14:40 2007
From: matthias at lshift.net (Matthias Radestock)
Date: Thu, 02 Aug 2007 07:14:40 +0100
Subject: [rabbitmq-discuss] Javascript client
In-Reply-To: <fde171c00708010352r48f232fcof0a32625f86e8c6e@mail.gmail.com>
	(Robert Godfrey's message of "Wed, 1 Aug 2007 11:52:35 +0100")
References: <6323D01C-D9F1-4331-9FDB-08ED1324F12D@mu.dk>
	<lyk5sjpf2g.fsf@tanto.lshift.net>
	<0759D870-2AB3-4821-BD56-CA7D8AC397B6@mu.dk>
	<lybqdupi0j.fsf@tanto.lshift.net>
	<fde171c00708010322l195a3db2te597fd893f64dfbe@mail.gmail.com>
	<lyhcnjwn5p.fsf@tanto.lshift.net>
	<fde171c00708010352r48f232fcof0a32625f86e8c6e@mail.gmail.com>
Message-ID: <lymyxatqcv.fsf@tanto.lshift.net>

Rob,

"Robert Godfrey" <rob.j.godfrey at gmail.com> writes:

> Excellent :-)  Do you have any documentation / thoughts right now that can
> be put on the AMQP wiki for discussion?

As I mentioned in response to Michael, we do have some working code and
will make that available shortly. Turning that into a proposal will take
some time, and I'd definitely want to revisit what we have now in the
context of AMQP 0-10.

> On reason I ask is that we have been asked to do something similar in
> <insert name of another AMQP implementation here :-)> and would be
> good to make these things work together...

Agreed. Take a look at the code once it's out and let us know what you
think.


Matthias.



From 0x6e6562 at gmail.com  Fri Aug  3 19:36:50 2007
From: 0x6e6562 at gmail.com (Ben Hood)
Date: Fri, 3 Aug 2007 19:36:50 +0100
Subject: [rabbitmq-discuss] FW: Multiple consumers
In-Reply-To: <lybqdruiar.fsf@tanto.lshift.net>
References: <AE8FD6F8A5C7A74EB55A0639892B0A6C13A90D@SPR3V4.office.local>
	<lybqdvr6le.fsf@tanto.lshift.net>
	<269388e30707290201r715fbbcdm2a0a41faa64ee8e1@mail.gmail.com>
	<lyvec3pgc2.fsf@tanto.lshift.net>
	<269388e30707290519h27e37a1ck58d0625948a5f231@mail.gmail.com>
	<lyfy37pdmx.fsf@tanto.lshift.net>
	<269388e30707311653x339b0efehdda8cf91c1385675@mail.gmail.com>
	<269388e30708011126r206cfa8egefa8323aab81e945@mail.gmail.com>
	<269388e30708011132n28b10e85q4ad07ec922e9acbd@mail.gmail.com>
	<lybqdruiar.fsf@tanto.lshift.net>
Message-ID: <269388e30708031136r7a32af53yee5711c684935c89@mail.gmail.com>

Matthias,

> > Sorry, I didn't realize that you were going to release 1.1.0 so soon.
> > I'll download that and incorporate the client into that and resubmit
> > the patch.

Here's the patch for the 1.1.0 release. Conceptually it is no
different than the patch I submitted earlier this week, albeit for the
fact that a lot of methods are now implemented for both the direct and
network cases, so my previous observations still hold water.

This patch implements the following API methods (which have been
tested with both the network and direct variants):

open_channel/3
access_request/2
queue_declare/3
exchange_declare/8
queue_bind/5
basic_publish/6
basic_consume/4
basic_get/4

In addition to my previous observations, the way the consumer tag is
mapped to a consumer pid during the delivery in the network case needs
some attention.

HTH,

Ben
-------------- next part --------------
A non-text attachment was scrubbed...
Name: rabbit_1.1.0_client_1.patch
Type: application/octet-stream
Size: 53375 bytes
Desc: not available
Url : http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20070803/dee710ce/attachment.obj 

From 0x6e6562 at gmail.com  Sun Aug  5 20:45:23 2007
From: 0x6e6562 at gmail.com (Ben Hood)
Date: Sun, 5 Aug 2007 20:45:23 +0100
Subject: [rabbitmq-discuss] FW: Multiple consumers
In-Reply-To: <269388e30708031136r7a32af53yee5711c684935c89@mail.gmail.com>
References: <AE8FD6F8A5C7A74EB55A0639892B0A6C13A90D@SPR3V4.office.local>
	<269388e30707290201r715fbbcdm2a0a41faa64ee8e1@mail.gmail.com>
	<lyvec3pgc2.fsf@tanto.lshift.net>
	<269388e30707290519h27e37a1ck58d0625948a5f231@mail.gmail.com>
	<lyfy37pdmx.fsf@tanto.lshift.net>
	<269388e30707311653x339b0efehdda8cf91c1385675@mail.gmail.com>
	<269388e30708011126r206cfa8egefa8323aab81e945@mail.gmail.com>
	<269388e30708011132n28b10e85q4ad07ec922e9acbd@mail.gmail.com>
	<lybqdruiar.fsf@tanto.lshift.net>
	<269388e30708031136r7a32af53yee5711c684935c89@mail.gmail.com>
Message-ID: <269388e30708051245o7bcdd229se4d9344e584b2b5a@mail.gmail.com>

> In addition to my previous observations, the way the consumer tag is
> mapped to a consumer pid during the delivery in the network case needs
> some attention.

I've been investigating this and I've noticed a problem with
basic.cancel methods in the direct API. Should this method be sent to
channel, in order that the channel cancels the client or should the
message be sent directly to the consumer? Should the direct channel
maintain a list of consumers, even if it is not necessarily
interacting with them in the normal course of events (because the
server channel dispatches directly to the subscriber)? What are the
advantages/disadvantages?

Ben



From matthias at lshift.net  Mon Aug  6 10:08:12 2007
From: matthias at lshift.net (Matthias Radestock)
Date: Mon, 06 Aug 2007 10:08:12 +0100
Subject: [rabbitmq-discuss] FW: Multiple consumers
In-Reply-To: <269388e30708031136r7a32af53yee5711c684935c89@mail.gmail.com>
	(Ben Hood's message of "Fri, 3 Aug 2007 19:36:50 +0100")
References: <AE8FD6F8A5C7A74EB55A0639892B0A6C13A90D@SPR3V4.office.local>
	<lybqdvr6le.fsf@tanto.lshift.net>
	<269388e30707290201r715fbbcdm2a0a41faa64ee8e1@mail.gmail.com>
	<lyvec3pgc2.fsf@tanto.lshift.net>
	<269388e30707290519h27e37a1ck58d0625948a5f231@mail.gmail.com>
	<lyfy37pdmx.fsf@tanto.lshift.net>
	<269388e30707311653x339b0efehdda8cf91c1385675@mail.gmail.com>
	<269388e30708011126r206cfa8egefa8323aab81e945@mail.gmail.com>
	<269388e30708011132n28b10e85q4ad07ec922e9acbd@mail.gmail.com>
	<lybqdruiar.fsf@tanto.lshift.net>
	<269388e30708031136r7a32af53yee5711c684935c89@mail.gmail.com>
Message-ID: <ly1wehrpxf.fsf@tanto.lshift.net>

Ben,

"Ben Hood" <0x6e6562 at gmail.com> writes:

> Here's the patch for the 1.1.0 release.

Some comments:

1)
I am not convinced parameterised modules are the way to go. You can
tell that something isn't quite right by the large number of places
amqp_client has different branches for the network and direct case.

Related to this, your current startup/shutdown sequence is

    AMQPClient = amqp_client:new(amqp_direct_driver),
    {ok, Connection} = AMQPClient:start(User, Password),
    Channel = AMQPClient:open_channel(Connection, ChannelNumber, ""),
    Ticket = AMQPClient:access_request(Channel, Realm),
    ...
    AMQPClient:stop(Channel),
    AMQPClient:stop(Connection).

when I think it should be

    {ok, Connection} = amqp_network_client:start(User, Password),
    Channel = amqp_connection:open_channel(Connection, ChannelNumber, ""),
    Ticket = amqp_channel:access_request(Channel, Realm)
    ...
    amqp_channel:close(Channel),
    amqp_connection:close(Connection).

The module parameterisation and general client module structure is
driven largely by the need to support both the direct and network
client. I reckon we are trying to bite off too much in one go
here, and suggest concentrating on the network client first.

2)
I wonder whether it would make sense to get rid of most of the channel
functions and instead get the user to construct requests
directly. E.g. instead of

    #'queue.declare_ok'{queue = Q1,
                        message_count = MessageCount,
                        consumer_count = ConsumerCount}
                        = AMQPClient:queue_declare(Channel, Ticket, Q)

you'd write

    #'queue.declare_ok'{queue = Q1,
                        message_count = MessageCount,
                        consumer_count = ConsumerCount}
                        = amqp_channel:rpc(
                            #'queue.declare'{ticket = Ticket,
                                             queue = binary(Q)}),

This is more symmetric and takes advantage of Erlang's light-weight
record manipulation syntax. It does however require reasonable
defaults for all the record fields, which isn't the case right now. As
an alternative you could define a bunch of record constants that have
their fields set to reasonable default values and then use record
update to construct the record instances you need.

3)
Why does amqp_client use an ets table instead of a record to record the
username, password etc?

4)
The method reading in rabbit_channel should be refactored so that you
can call it from amqp_receive, rather than duplicating code.

rabbit_reader should be refactored so that amqp_network_driver doesn't
have to duplicate so much code.


I am pleased by how little code there is and how little you had to
change the server modules to support the direct case. That will help
when carrying this code base forward when we tackle AMQP 0-10.


Matthias



From matthias at lshift.net  Mon Aug  6 17:41:12 2007
From: matthias at lshift.net (Matthias Radestock)
Date: Mon, 06 Aug 2007 17:41:12 +0100
Subject: [rabbitmq-discuss] AMQP-over-HTTP libs and Javascript client
	available
Message-ID: <lywsw8obtj.fsf@tanto.lshift.net>

I have made a snapshot of RabbitMQ's experimental AMQP-over-HTTP
protocol binding and Javascript client libraries available for download
at
  http://www.rabbitmq.com/download.html#rabbitmq-http

It comes with two small examples - a basic comms test and a shared
whiteboard application.

The API is still incomplete, and the code requires some refactoring,
better error handling, automated tests, and documentation. Patches are
welcome.


Regards,

Matthias.



From 0x6e6562 at gmail.com  Mon Aug  6 19:19:16 2007
From: 0x6e6562 at gmail.com (Ben Hood)
Date: Mon, 6 Aug 2007 19:19:16 +0100
Subject: [rabbitmq-discuss]  FW: Multiple consumers
In-Reply-To: <AE8FD6F8A5C7A74EB55A0639892B0A6C13A93C@SPR3V4.office.local>
References: <AE8FD6F8A5C7A74EB55A0639892B0A6C13A93C@SPR3V4.office.local>
Message-ID: <269388e30708061119r62fa635r85574aba5ab6e4ff@mail.gmail.com>

>>>>I am not convinced parameterised modules are the way to go.
>>>>You can tell that something isn't quite right by the large
>>number of
>>>>places amqp_client has different branches for the network
>>and direct
>>>>case.
>>
Do you feel that parameterised modules are not appropriate
generally, or in this specific case?

Would you stance change if the number of different branches
were reduced, e.g. by refactoring the underlying message
passing to make it more consistent between both cases?

The rational behind the parameterization is to reduce as much
AMQP specific message passing down to a lowest common
denominator as possible, so whether than can be achieved by
another means, that would be fine by me.

Just thinking on my feet here, maybe you extract the API
calls to a separate module and then implement separate
gen_server instances for the network case and the direct
case. These separate servers would then implement their own
init/1 and handle_call(open_channel,_) methods. The amqp_send
and amqp_receive functions could be extracted out to amqp_util.

>>>>
>>>>Related to this, your current startup/shutdown sequence is
>>>>
>>>>    AMQPClient = amqp_client:new(amqp_direct_driver),
>>>>    {ok, Connection} = AMQPClient:start(User, Password),
>>>>    Channel = AMQPClient:open_channel(Connection,
>>ChannelNumber, ""),
>>>>    Ticket = AMQPClient:access_request(Channel, Realm),
>>>>    ...
>>>>    AMQPClient:stop(Channel),
>>>>    AMQPClient:stop(Connection).
>>>>
>>>>when I think it should be
>>>>
>>>>    {ok, Connection} = amqp_network_client:start(User, Password),
>>>>    Channel = amqp_connection:open_channel(Connection,
>>>>ChannelNumber, ""),
>>>>    Ticket = amqp_channel:access_request(Channel, Realm)
>>>>    ...
>>>>    amqp_channel:close(Channel),
>>>>    amqp_connection:close(Connection).
>>

I think that would work without too much modification, if
that's what you want. What I am trying to say is that this is
quite doable, I would just like some confirmation of the direction.

>>
>>>>
>>>>The module parameterisation and general client module structure is
>>>>driven largely by the need to support both the direct and network
>>>>client. I reckon we are trying to bite off too much in one go here,
>>>>and suggest concentrating on the network client first.
>>

Fair point. However, it is the direct case that I am
primarily interested in for my own purposes, so with all due
respect, from my personal perspective I would be slightly
reticent to let go of this :-)

Furthermore, I think this is implementable, I just think IMHO
we may be hanging up on the how the client interface is going
to look, which is a soluble problem.

As a suggestion:

{ok, Connection} = amqp_direct_client:start(User, Password),

%% This is where you need to differentiate between the direct and
networked case
Channel = amqp_connection:open_channel(Connection, ChannelNumber, ""),
Ticket = amqp_channel:access_request(Channel, Realm)
    ...
amqp_channel:close(Channel),
amqp_connection:close(Connection).

Where Connection is a {Pid, direct} tuple or a {Pid, network}
tuple as opposed to just a Pid term.

>>>>
>>>>2)
>>>>I wonder whether it would make sense to get rid of most of
>>the channel
>>>>functions and instead get the user to construct requests directly.
>>>>E.g. instead of
>>>>
>>>>    #'queue.declare_ok'{queue = Q1,
>>>>                        message_count = MessageCount,
>>>>                        consumer_count = ConsumerCount}
>>>>                        = AMQPClient:queue_declare(Channel,
>>Ticket, Q)
>>>>
>>>>you'd write
>>>>
>>>>    #'queue.declare_ok'{queue = Q1,
>>>>                        message_count = MessageCount,
>>>>                        consumer_count = ConsumerCount}
>>>>                        = amqp_channel:rpc(
>>>>                            #'queue.declare'{ticket = Ticket,
>>>>                                             queue = binary(Q)}),
>>>>
>>>>This is more symmetric and takes advantage of Erlang's light-weight
>>>>record manipulation syntax. It does however require reasonable
>>>>defaults for all the record fields, which isn't the case
>>right now. As
>>>>an alternative you could define a bunch of record constants
>>that have
>>>>their fields set to reasonable default values and then use record
>>>>update to construct the record instances you need.
>>
>>
I was thinking about this myself because passing in single
parameters and expecting a structured tuple as a return type
is inconsistent, so I was already tending towards the latter.

Again, this is quite reasonable and doable, and I think that
putting the defaults into the record definitions would make
the code a lot cleaner, because clients would only pattern
match on the fields that they know and care about, so it
would also be a lot more *erlangy*, IMHO.

>>>>
>>>>3)
>>>>Why does amqp_client use an ets table instead of a record to record
>>>>the username, password etc?

This was one of the issues I raised against the patch in a
previous post. One of the todo items is to move this over to
a record, I just started with the ets table and left it that
way for now, so this is low hanging fruit.

>>>>
>>>>4)
>>>>The method reading in rabbit_channel should be refactored
>>so that you
>>>>can call it from amqp_receive, rather than duplicating code.
>>>>
>>>>rabbit_reader should be refactored so that
>>amqp_network_driver doesn't
>>>>have to duplicate so much code.
>>
Granted. However, this is IMHO a pure refactoring and
maintenance exercise as opposed to doing something
fundamental, such as the module parameterization discussed above.

Throughout the development of this patch I've tried to find a
balance of code reuse and actually getting a working end to
end for both the network and direct clients. So the emphasis
has been on getting something working in a way that you can
refine what you have within the safety net of unit tests that
make sure that the functionality doesn't break during refactoring.

So unless this is imperative for the acceptance of this patch
into the rabbit tree (which hasn't been discussed yet), I
would take this on as a todo, because I think this would have
to be discussed in context of some other refactoring that
would also be necessary (e.g. moving the portion of  rabbit_*
modules that the client uses into common non-rabbit-specific
modules for redistribution).

>>>>
>>>>
>>>>I am pleased by how little code there is and how little you had to
>>>>change the server modules to support the direct case.
>>>>That will help when carrying this code base forward when we tackle
>>>>AMQP 0-10.
>>>>

This is why I introduced the driver concept, so that I could
use a common message passing sequence specific to the high
level protocol rather than the transport. Maybe calling them
drivers was wrong, perhaps transport is a better term.

Anyway, at some stage I would like to touch base with you to
discuss some issues that are inefficient to discuss over the
list (e.g. patch management).

Ben

*****************************************************
This email is issued by a VocaLink group company. It is confidential
and intended for the exclusive use of the addressee only. You should
not disclose its contents to any other person. If you are not the
addressee (or responsible for delivery of the message to the
addressee), please notify the originator immediately by return message
and destroy the original message. The contents of this email will have
no contractual effect unless it is otherwise agreed between a specific
VocaLink group company and the recipient.

The VocaLink group companies include, among others: VocaLink Limited
(Company No 06119048, [VAT applied for]) which is registered in
England and Wales at registered office Drake House, Homestead Road,
Rickmansworth, WD3 1FX. United Kingdom, Voca Limited (Company no
1023742, VAT No. 226 6112 87) which is registered in England and Wales
at registered office Drake House, Three Rivers Court, Homestead Road,
Rickmansworth, Hertfordshire. WD3 1FX. United Kingdom, LINK
Interchange Network Limited (Company No 3565766, VAT No. 721 6162 62)
which is registered in England and Wales at registered office Arundel
House, 1 Liverpool Gardens, Worthing, West Sussex, BN11 1SL and
VocaLink Holdings Limited (Company No 06119036, [VAT applied for])
which is registered in England and Wales at registered office Drake
House, Homestead Road, Rickmansworth, WD3 1FX. United Kingdom.

The views and opinions expressed in this email may not reflect those
of any member of the VocaLink group. This message and any attachments
have been scanned for viruses prior to leaving the VocaLink group
network; however, VocaLink does not guarantee the security of this
message and will not be responsible for any damages arising as a
result of any virus being passed on or arising from any alteration of
this message by a third party. The VocaLink group may monitor emails
sent to and from the VocaLink group network.

This message has been checked for all email viruses by MessageLabs.
*************************************************************



From stevej at pobox.com  Tue Aug  7 03:42:31 2007
From: stevej at pobox.com (Steve Jenson)
Date: Mon, 6 Aug 2007 19:42:31 -0700
Subject: [rabbitmq-discuss] Intro
In-Reply-To: <lyr6mgo6ht.fsf@tanto.lshift.net>
References: <8CA961BE-2CFB-41AB-9FD0-54DDA8DC0FC0@athena.com>
	<167204d20708061025m5e008b49ka80f6562f775b630@mail.gmail.com>
	<lyr6mgo6ht.fsf@tanto.lshift.net>
Message-ID: <81d74c280708061942p1f56a28dv63f162f9a03393ef@mail.gmail.com>

Hey Guys,

Nice to meet the both of you.

I just added myself to the rabbitmq-discuss list. I've CC'd this
discussion there (and removed all the original CC email addresses) so
we can keep it flying!

Thanks!
Steve

On 8/6/07, Matthias Radestock <matthias at lshift.net> wrote:
> Steve,
>
> pleased to meet you.
>
> "Alexis Richardson" <alexis.richardson at cohesiveft.com> writes:
>
> > Steve - great to meet you.  I am on vacation till next Monday but
> > please can I point you at Matthias Radestock who is also a RabbitMQ
> > guy, and CTO of our partner LShift.  Matthias has looked at Scala too.
>
> I also spent a few years working on/with an actor-based language.
>
> > On 8/3/07, David Pollak <dpp at athena.com> wrote:
> >> Maybe Steve could do some work to make RabbitMQ the transport layer for
> >> Scala Remote Actors.
>
> One could create an AMQP exchange and queue for every remoting-enabled
> actor. The combination of amqp broker + exchange name is the actor's
> address. The queue is the mailbox. Permanent addresses, e.g. for
> services, can be supported by creating additional appropriately named
> exchanges and binding existing queues to them.
>
> Initially one would tie the lifetime of the exchanges + queues to the
> lifetime of the actors, but more sophisticated models, e.g. taking
> advantage of AMQP's durable structures and persistent messages, are
> possible.
>
> Steve, are you subscribed to the rabbitmq-discuss list? If not, you can
> sign up at
>   http://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss
>
> It would be good to continue this conversation over there so that others
> can chime in.
>
>
> Regards,
>
> Matthias
>



From matthias at lshift.net  Tue Aug  7 06:10:09 2007
From: matthias at lshift.net (Matthias Radestock)
Date: Tue, 07 Aug 2007 06:10:09 +0100
Subject: [rabbitmq-discuss] Scala remote actors [was Re: Intro]
In-Reply-To: <81d74c280708061942p1f56a28dv63f162f9a03393ef@mail.gmail.com>
	(Steve Jenson's message of "Mon, 6 Aug 2007 19:42:31 -0700")
References: <8CA961BE-2CFB-41AB-9FD0-54DDA8DC0FC0@athena.com>
	<167204d20708061025m5e008b49ka80f6562f775b630@mail.gmail.com>
	<lyr6mgo6ht.fsf@tanto.lshift.net>
	<81d74c280708061942p1f56a28dv63f162f9a03393ef@mail.gmail.com>
Message-ID: <lyejignd5a.fsf_-_@tanto.lshift.net>

Steve,

"Steve Jenson" <stevej at pobox.com> writes:

> I just added myself to the rabbitmq-discuss list. I've CC'd this
> discussion there (and removed all the original CC email addresses) so
> we can keep it flying!

Cheers.

I have just looked at API docs for Scala's actors. Looks like they have
moved on quite a bit since I last checked them out and have become much
more Erlang-like. Has anybody investigated hooking them into an Erlang
system directly, via Erlang's Jinterface?

This would only give you AMQP interop via a rather indirect route,
i.e. by invoking RabbitMQ's Erlang API, which Ben Hood has been working
on; see mailing list archives. So it is no substitute for an AMQP
binding along the lines I suggested. It would be an interesting project
though, providing seamless interop between Erlang processes and Scala
actors.


Matthias.



From jwolstenholme at gmail.com  Tue Aug  7 08:51:51 2007
From: jwolstenholme at gmail.com (James Wolstenholme)
Date: Tue, 7 Aug 2007 08:51:51 +0100
Subject: [rabbitmq-discuss] Socket Exceptions
In-Reply-To: <lyir811zf7.fsf@tanto.lshift.net>
References: <724b561a0707300915t75c68d3dj1ad6b43705b9bdd8@mail.gmail.com>
	<724b561a0707300950y46937568h3a33125c5929ba77@mail.gmail.com>
	<lyir811zf7.fsf@tanto.lshift.net>
Message-ID: <724b561a0708070051g70707d02m92073e556aea1046@mail.gmail.com>

Hi Matthias & Ben -

Thanks very much for your replies - I had been pulled off on to another task
for a little while last week so apologies for the late response.

I did try 'toning down' the load a bit - introducing a limit akin to that in
the examples did resolve the Socket Exceptions I had previously described. I
have also tried the same code against version 1.1.0-alpha and have had no
recurrence of the problem even without limits in place.

Thanks & regards

jgw
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20070807/f4bca6db/attachment.htm 

From matthias at lshift.net  Tue Aug  7 09:01:42 2007
From: matthias at lshift.net (Matthias Radestock)
Date: Tue, 07 Aug 2007 09:01:42 +0100
Subject: [rabbitmq-discuss] Socket Exceptions
In-Reply-To: <724b561a0708070051g70707d02m92073e556aea1046@mail.gmail.com>
	(James Wolstenholme's message of "Tue, 7 Aug 2007 08:51:51 +0100")
References: <724b561a0707300915t75c68d3dj1ad6b43705b9bdd8@mail.gmail.com>
	<724b561a0707300950y46937568h3a33125c5929ba77@mail.gmail.com>
	<lyir811zf7.fsf@tanto.lshift.net>
	<724b561a0708070051g70707d02m92073e556aea1046@mail.gmail.com>
Message-ID: <lyejiflqmx.fsf@tanto.lshift.net>

James,

"James Wolstenholme" <jwolstenholme at gmail.com> writes:

> I did try 'toning down' the load a bit - introducing a limit akin to
> that in the examples did resolve the Socket Exceptions I had
> previously described. I have also tried the same code against version
> 1.1.0-alpha and have had no recurrence of the problem even without
> limits in place.

Excellent. Let us know if you make any other interesting discoveries.


Matthias.



From 0x6e6562 at gmail.com  Tue Aug  7 17:39:38 2007
From: 0x6e6562 at gmail.com (Ben Hood)
Date: Tue, 7 Aug 2007 17:39:38 +0100
Subject: [rabbitmq-discuss] FW: Multiple consumers
In-Reply-To: <269388e30708070821l5e0e97eu848ac61b0e578225@mail.gmail.com>
References: <AE8FD6F8A5C7A74EB55A0639892B0A6C13A90D@SPR3V4.office.local>
	<269388e30707290519h27e37a1ck58d0625948a5f231@mail.gmail.com>
	<lyfy37pdmx.fsf@tanto.lshift.net>
	<269388e30707311653x339b0efehdda8cf91c1385675@mail.gmail.com>
	<269388e30708011126r206cfa8egefa8323aab81e945@mail.gmail.com>
	<269388e30708011132n28b10e85q4ad07ec922e9acbd@mail.gmail.com>
	<lybqdruiar.fsf@tanto.lshift.net>
	<269388e30708031136r7a32af53yee5711c684935c89@mail.gmail.com>
	<ly1wehrpxf.fsf@tanto.lshift.net>
	<269388e30708070821l5e0e97eu848ac61b0e578225@mail.gmail.com>
Message-ID: <269388e30708070939w6029499l89886413dd5c8cf@mail.gmail.com>

> > Why does amqp_client use an ets table instead of a record to record the
> > username, password etc?
>
> I'll look into this as another patch in the stack next as this is low
> hanging fruit.

Here's an incremental patch that solves this.  Let me know if you need
a full patch.

HTH,

Ben
-------------- next part --------------
A non-text attachment was scrubbed...
Name: removed_ets_from_client.patch
Type: application/octet-stream
Size: 17026 bytes
Desc: not available
Url : http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20070807/8df9c9b0/attachment.obj 

From 0x6e6562 at gmail.com  Tue Aug  7 17:40:06 2007
From: 0x6e6562 at gmail.com (Ben Hood)
Date: Tue, 7 Aug 2007 17:40:06 +0100
Subject: [rabbitmq-discuss]  FW: Multiple consumers
In-Reply-To: <269388e30708070821l5e0e97eu848ac61b0e578225@mail.gmail.com>
References: <AE8FD6F8A5C7A74EB55A0639892B0A6C13A90D@SPR3V4.office.local>
	<269388e30707290519h27e37a1ck58d0625948a5f231@mail.gmail.com>
	<lyfy37pdmx.fsf@tanto.lshift.net>
	<269388e30707311653x339b0efehdda8cf91c1385675@mail.gmail.com>
	<269388e30708011126r206cfa8egefa8323aab81e945@mail.gmail.com>
	<269388e30708011132n28b10e85q4ad07ec922e9acbd@mail.gmail.com>
	<lybqdruiar.fsf@tanto.lshift.net>
	<269388e30708031136r7a32af53yee5711c684935c89@mail.gmail.com>
	<ly1wehrpxf.fsf@tanto.lshift.net>
	<269388e30708070821l5e0e97eu848ac61b0e578225@mail.gmail.com>
Message-ID: <269388e30708070940j102151ccm1c2268b5d42a06d7@mail.gmail.com>

Matthias,

I've reworked your comments into this patch, which I've responded to
inline. In essence, the amqp_client module has been thinned and
de-parameterized and I've introduced the modules amqp_connection and
amqp_channel.

BTW, since this is get quite patchy, I've started to use a patch stack
to keep things maintainable and separated, so you can have any patch
as a diff of the vanilla 1.1.0 tree or as a patch series, whichever
you'd prefer.

> I am not convinced parameterised modules are the way to go. You can
> tell that something isn't quite right by the large number of places
> amqp_client has different branches for the network and direct case.
--snip--
> when I think it should be
>
>     {ok, Connection} = amqp_network_client:start(User, Password),
>     Channel = amqp_connection:open_channel(Connection, ChannelNumber, ""),
>     Ticket = amqp_channel:access_request(Channel, Realm)
>     ...
>     amqp_channel:close(Channel),
>     amqp_connection:close(Connection).
>
> The module parameterisation and general client module structure is
> driven largely by the need to support both the direct and network
> client. I reckon we are trying to bite off too much in one go
> here, and suggest concentrating on the network client first.

I've removed the parameterization so the user code looks like this:

{ok, Connection} = amqp_connection:start(User, Password, Host),
Channel = amqp_connection:open_channel(Connection, ChannelNumber, ""),
amqp_channel:access_request(Channel, Realm),
%%...
amqp_channel:stop(Channel),
amqp_connection:stop(Connection).

This differs only marginally from your suggestion in that I don't use
a separate amqp_network_client module, because when I did so, I
realized that this was very thin and in actual fact quite tied to the
amqp_connection module.

Part of the root cause for the parameterization was the direct/network
branching in the amqp_client akin to ifdef macros in C. I've reduced
the use of these and made them dependent on an internal flag, so they
haven't gone away (yet). Whether they should completely disappear is a
matter of design - amqp_send could be implemented in a specific driver
rather than the generic client, but I think that may be 6 of one and
half a dozen of the other. I think this is something we need to
discuss.

> 2)
> directly. E.g. instead of
>
>     #'queue.declare_ok'{queue = Q1,
>                         message_count = MessageCount,
>                         consumer_count = ConsumerCount}
>                         = AMQPClient:queue_declare(Channel, Ticket, Q)
>
> you'd write
>
>     #'queue.declare_ok'{queue = Q1,
>                         message_count = MessageCount,
>                         consumer_count = ConsumerCount}
>                         = amqp_channel:rpc(
>                             #'queue.declare'{ticket = Ticket,
>                                              queue = binary(Q)}),

I'll look into this as another patch in the stack, with the 2nd
highest priority.

> Why does amqp_client use an ets table instead of a record to record the
> username, password etc?

I'll look into this as another patch in the stack next as this is low
hanging fruit.

Ben
-------------- next part --------------
A non-text attachment was scrubbed...
Name: client_patch_series-3.patch
Type: application/octet-stream
Size: 56018 bytes
Desc: not available
Url : http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20070807/b2a38b77/attachment.obj 

From 0x6e6562 at gmail.com  Wed Aug  8 22:38:34 2007
From: 0x6e6562 at gmail.com (Ben Hood)
Date: Wed, 8 Aug 2007 22:38:34 +0100
Subject: [rabbitmq-discuss] FW: Multiple consumers
In-Reply-To: <ly1wehrpxf.fsf@tanto.lshift.net>
References: <AE8FD6F8A5C7A74EB55A0639892B0A6C13A90D@SPR3V4.office.local>
	<lyvec3pgc2.fsf@tanto.lshift.net>
	<269388e30707290519h27e37a1ck58d0625948a5f231@mail.gmail.com>
	<lyfy37pdmx.fsf@tanto.lshift.net>
	<269388e30707311653x339b0efehdda8cf91c1385675@mail.gmail.com>
	<269388e30708011126r206cfa8egefa8323aab81e945@mail.gmail.com>
	<269388e30708011132n28b10e85q4ad07ec922e9acbd@mail.gmail.com>
	<lybqdruiar.fsf@tanto.lshift.net>
	<269388e30708031136r7a32af53yee5711c684935c89@mail.gmail.com>
	<ly1wehrpxf.fsf@tanto.lshift.net>
Message-ID: <269388e30708081438y6129552ewfdf1f0d3dbc786a4@mail.gmail.com>

Matthias,

> I am not convinced parameterised modules are the way to go. You can
> tell that something isn't quite right by the large number of places
> amqp_client has different branches for the network and direct case.

This (incremental) patch introduces the concept of an internal rpc
mechanism for the amqp_client and thereby simplifies the generic
message passing to the network and direct drivers as well as making
their differentation virtually transparent (apart from one case that I
think I can refactor out as well). It also thins the amqp_client
module by 30 lines or so.

HTH,

Ben
-------------- next part --------------
A non-text attachment was scrubbed...
Name: introduced_rpc.patch
Type: application/octet-stream
Size: 13097 bytes
Desc: not available
Url : http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20070808/8c07997b/attachment.obj 

From 0x6e6562 at gmail.com  Sat Aug 11 19:01:15 2007
From: 0x6e6562 at gmail.com (Ben Hood)
Date: Sat, 11 Aug 2007 19:01:15 +0100
Subject: [rabbitmq-discuss] Socket Exceptions
In-Reply-To: <724b561a0707300950y46937568h3a33125c5929ba77@mail.gmail.com>
References: <724b561a0707300915t75c68d3dj1ad6b43705b9bdd8@mail.gmail.com>
	<724b561a0707300950y46937568h3a33125c5929ba77@mail.gmail.com>
Message-ID: <269388e30708111101x3194c95cuaedfcdca137d751a@mail.gmail.com>

James,

> 2x
>     * 4 core AMD Opteron
>     * 8G memory
>     * eth0 interface with MTU set to 9000
>     * Centos OS - kernel version 2.6.18
>

Just a longshot but what chipset does your NIC have? Is this perhaps
an Nvidia nforce chipset on board?

I ask this because I had a problem with jumbo frames and the forcedeth
driver with the 2.6.18 kernel. I got around this by updating to the
2.6.21 kernel, but as I was googling it, I gathered that you can also
download the latest driver from Nvidia to patch that kernel series.

Was this problem provokable with the 1.1.0 rabbit release?

HTH,

Ben



From md at hudora.de  Tue Aug 14 07:06:12 2007
From: md at hudora.de (Maximillian Dornseif)
Date: Tue, 14 Aug 2007 08:06:12 +0200
Subject: [rabbitmq-discuss] Python Client for RabbitMQ/AMQP?
Message-ID: <6C9F6144-557F-470A-A32D-26288C517860@hudora.de>

Since being somewhat dissatisfied with ActiveMQ I'm shopping for  
other messaging solutions with a focus on correctness and  
reliability.  (See http://blogs.23.nu/c0re/?day=20070813# for some  
background.)

I'm looking for a simple (just send_bytes_to_queue() and  
receive_bytes_from_queue(), no transactions, fancy routing etc.) way  
to use the broker in Python and Java. RabbitMQ comes wit Java client  
libraries, so this is no issue.

I'm more concerned about Python. I'm aware of QPid's Python code but  
obviously this code is meant to break thinks and not to be simple   
and reliable. Has anybody suggestions of how to send and receive  
messages from Python other than re-implementing (and testing) AMQP  
from the ground up?

Regards

Maximillian Dornseif
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20070814/e36eddf0/attachment.htm 

From 0x6e6562 at gmail.com  Tue Aug 14 07:22:24 2007
From: 0x6e6562 at gmail.com (Ben Hood)
Date: Tue, 14 Aug 2007 07:22:24 +0100
Subject: [rabbitmq-discuss] Python Client for RabbitMQ/AMQP?
In-Reply-To: <6C9F6144-557F-470A-A32D-26288C517860@hudora.de>
References: <6C9F6144-557F-470A-A32D-26288C517860@hudora.de>
Message-ID: <269388e30708132322n74837025xdf9229dc6d933372@mail.gmail.com>

Max,

> I'm more concerned about Python. I'm aware of QPid's Python code but
> obviously this code is meant to break thinks and not to be simple  and
> reliable.

In what way is QPid's python lib meant to break things?

Ben



From rob.j.godfrey at gmail.com  Tue Aug 14 09:07:50 2007
From: rob.j.godfrey at gmail.com (Robert Godfrey)
Date: Tue, 14 Aug 2007 09:07:50 +0100
Subject: [rabbitmq-discuss] Python Client for RabbitMQ/AMQP?
In-Reply-To: <269388e30708132322n74837025xdf9229dc6d933372@mail.gmail.com>
References: <6C9F6144-557F-470A-A32D-26288C517860@hudora.de>
	<269388e30708132322n74837025xdf9229dc6d933372@mail.gmail.com>
Message-ID: <fde171c00708140107y58065ab5m6b6a7e09a040eb33@mail.gmail.com>

On 14/08/07, Ben Hood <0x6e6562 at gmail.com> wrote:
>
> Max,
>
> > I'm more concerned about Python. I'm aware of QPid's Python code but
> > obviously this code is meant to break thinks and not to be simple  and
> > reliable.
>
> In what way is QPid's python lib meant to break things?



Speaking for Qpid here :-) it's certainly not meant to break things -
although we do use the library to write our cross-platform system test
cases.  I can't really speak to simplicity - the API is certainly closer to
the AMQP spec than a high level JMS style API...  If anyone has suggestions
for improvement then we would certainly welcome them over on the Qpid
mailing list.

The AMQP v0-8 Python client should work with any compliant AMQP v0-8 broker
(e.g. RabbitMQ or Qpid) similarly you should be able to choose between any
0-8 complaint Java client library (this rather being the point of AMQP).

-- Rob Godfrey




Ben
>
> _______________________________________________
> rabbitmq-discuss mailing list
> rabbitmq-discuss at lists.rabbitmq.com
> http://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20070814/110639be/attachment.htm 

From matthias at lshift.net  Tue Aug 14 09:42:45 2007
From: matthias at lshift.net (Matthias Radestock)
Date: Tue, 14 Aug 2007 09:42:45 +0100
Subject: [rabbitmq-discuss] Python Client for RabbitMQ/AMQP?
In-Reply-To: <fde171c00708140107y58065ab5m6b6a7e09a040eb33@mail.gmail.com>
	(Robert Godfrey's message of "Tue, 14 Aug 2007 09:07:50 +0100")
References: <6C9F6144-557F-470A-A32D-26288C517860@hudora.de>
	<269388e30708132322n74837025xdf9229dc6d933372@mail.gmail.com>
	<fde171c00708140107y58065ab5m6b6a7e09a040eb33@mail.gmail.com>
Message-ID: <lyy7ge7bi2.fsf@tanto.lshift.net>

"Robert Godfrey" <rob.j.godfrey at gmail.com> writes:

> The AMQP v0-8 Python client should work with any compliant AMQP v0-8
> broker (e.g. RabbitMQ or Qpid) similarly you should be able to choose
> between any 0-8 complaint Java client library (this rather being the
> point of AMQP).

FWIW, we run QPid's Python-client-based 0-8 tests against our RabbitMQ
server as part of our automated tests. Definitely works.


Matthias.



From alexis.richardson at cohesiveft.com  Tue Aug 14 09:20:56 2007
From: alexis.richardson at cohesiveft.com (Alexis Richardson)
Date: Tue, 14 Aug 2007 09:20:56 +0100
Subject: [rabbitmq-discuss] Python Client for RabbitMQ/AMQP?
In-Reply-To: <fde171c00708140107y58065ab5m6b6a7e09a040eb33@mail.gmail.com>
References: <6C9F6144-557F-470A-A32D-26288C517860@hudora.de>
	<269388e30708132322n74837025xdf9229dc6d933372@mail.gmail.com>
	<fde171c00708140107y58065ab5m6b6a7e09a040eb33@mail.gmail.com>
Message-ID: <167204d20708140120s2d105bf7ud91467dbaa27bdb6@mail.gmail.com>

Hi Max, all,

We like to use the Qpid clients for unit testing and feel strongly
that AMQP needs a standard set of unit tests and a behaviourally
complete TCK.  As Rob points out, the Python libs could be a key part
of a unit test suite in the future, but the Working Group will not
look at this issue until after AMQP 0-10 is out (soon).

In the RabbitMQ team, we also distribute some specially written
clients to work with.  Our intent is that unless these are marked
'experimental' these are released to the same quality standard as the
RabbitMQ broker.  Currently our Java client is not optimised for
performance, for example.  Also, we have released experimental code
for AMQP over HTTP.  More clients are coming and please let us know
what you want to work on, or see, via this list.  Thanks are due to
Ben Hood for his recent Erlang work.

BUT - modulo the spec version, any client should interoperate with any broker.

Max - I have looked at your blog.  Please tell us more about what you
want to achieve since then we can help you.

alexis






On 8/14/07, Robert Godfrey <rob.j.godfrey at gmail.com> wrote:
>
>
> On 14/08/07, Ben Hood <0x6e6562 at gmail.com> wrote:
> > Max,
> >
> > > I'm more concerned about Python. I'm aware of QPid's Python code but
> > > obviously this code is meant to break thinks and not to be simple  and
> > > reliable.
> >
> > In what way is QPid's python lib meant to break things?
>
>
> Speaking for Qpid here :-) it's certainly not meant to break things -
> although we do use the library to write our cross-platform system test
> cases.  I can't really speak to simplicity - the API is certainly closer to
> the AMQP spec than a high level JMS style API...  If anyone has suggestions
> for improvement then we would certainly welcome them over on the Qpid
> mailing list.
>
> The AMQP v0-8 Python client should work with any compliant AMQP v0-8 broker
> (e.g. RabbitMQ or Qpid) similarly you should be able to choose between any
> 0-8 complaint Java client library (this rather being the point of AMQP).
>
> -- Rob Godfrey
>
>
>
> > Ben
> >
> > _______________________________________________
> > rabbitmq-discuss mailing list
> > rabbitmq-discuss at lists.rabbitmq.com
> >
> http://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss
> >
>
>
> _______________________________________________
> rabbitmq-discuss mailing list
> rabbitmq-discuss at lists.rabbitmq.com
> http://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss
>
>


-- 
Alexis Richardson
+44 20 7617 7339 (UK)
+44 77 9865 2911 (cell)
+1 650 206 2517 (US)



From alexis.richardson at cohesiveft.com  Tue Aug 14 09:26:32 2007
From: alexis.richardson at cohesiveft.com (Alexis Richardson)
Date: Tue, 14 Aug 2007 09:26:32 +0100
Subject: [rabbitmq-discuss] erlang on infoq
Message-ID: <167204d20708140126i7349e2bbt5884e72c205c936b@mail.gmail.com>

Hi all,

InfoQ has just published this article which makes some points about
Erlang as being better suited to a multicore, message passing world,
than Java.  Maybe so, maybe not.

http://www.infoq.com/news/2007/08/erlang-java-for-concurrent-futur

I am still mulling over a suitable comment, and have sent this link to
some of the Scala guys too.

alexis


-- 
Alexis Richardson
+44 20 7617 7339 (UK)
+44 77 9865 2911 (cell)
+1 650 206 2517 (US)



From chime at mu.dk  Tue Aug 14 21:35:57 2007
From: chime at mu.dk (Michael Arnoldus)
Date: Tue, 14 Aug 2007 22:35:57 +0200
Subject: [rabbitmq-discuss] Channels on a single connection
Message-ID: <81EFEBC2-3919-4E18-B19A-AB29927F2C1B@mu.dk>

As far as I understand, it should be possible to open several  
channels on a single connection. Is this feature implemented in  
RabbitMQ?

Michael Arnoldus
-------------- next part --------------
A non-text attachment was scrubbed...
Name: smime.p7s
Type: application/pkcs7-signature
Size: 1844 bytes
Desc: not available
Url : http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20070814/77ca9ad2/attachment.bin 

From 0x6e6562 at gmail.com  Tue Aug 14 22:34:16 2007
From: 0x6e6562 at gmail.com (Ben Hood)
Date: Tue, 14 Aug 2007 22:34:16 +0100
Subject: [rabbitmq-discuss] Channels on a single connection
In-Reply-To: <81EFEBC2-3919-4E18-B19A-AB29927F2C1B@mu.dk>
References: <81EFEBC2-3919-4E18-B19A-AB29927F2C1B@mu.dk>
Message-ID: <269388e30708141434t70213671nbfea39dc727cb186@mail.gmail.com>

On 8/14/07, Michael Arnoldus <chime at mu.dk> wrote:
> As far as I understand, it should be possible to open several
> channels on a single connection. Is this feature implemented in
> RabbitMQ?

Yes.



From tanmay.goel at intel.com  Mon Aug 13 23:24:39 2007
From: tanmay.goel at intel.com (Goel, Tanmay)
Date: Mon, 13 Aug 2007 15:24:39 -0700
Subject: [rabbitmq-discuss] Error while starting server
Message-ID: <DE8632162CB73D4CB22D1D15387409E410231C@scsmsx414.amr.corp.intel.com>

Hi,

I have recently started using RabbitMQ. It has been working fine for me
until today. When I try to start the server, I get this error. I have
also attached the auto-generated crash/dump report. Please have a look
and see if somebody has a suggestion about what the problem might be.

 

------------------------------------------------------------------------
--------

C:\Program
Files\erl5.5.5\lib\rabbitmq-server-1.1.0-alpha\sbin>rabbitmq-server.bat

RabbitMQ 1.1.0-alpha (AMQP 8-0)

Copyright (C) 2007 LShift Ltd., Cohesive Financial Technologies LLC.,
and Rabbit

 Technologies Ltd.

Licensed under the MPL.  See http://www.rabbitmq.com/

 

starting database             ...done

starting core processes       ...done

starting recovery             ...done

starting persister            ...{"init terminating in
do_boot",{{nocatch,{error

,{cannot_start_rabbit,{bad_return,{{rabbit,start,[normal,[]]},{'EXIT',{{
badmatch

,{error,{shutdown,{child,undefined,rabbit_persister_sup,{rabbit_persiste
r_sup,st

art_link,[]},transient,infinity,supervisor,[rabbit_persister_sup]}}}},[{
rabbit,s

tart_persister,0},{rabbit,'-start/2-fun-4-',0},{rabbit,'-start/2-fun-0-'
,1},{lis

ts,foreach,2},{rabbit,start,2},{application_master,start_it_old,4}]}}}}}
}},[{ini

t,start_it,1},{init,start_em,1}]}}

 

Crash dump was written to: erl_crash.dump

init terminating in do_boot ()

------------------------------------------------------------------------
--------

 

Thanks,

Tanmay

 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20070813/c8fee2cd/attachment.htm 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: erl_crash.dump
Type: application/octet-stream
Size: 575202 bytes
Desc: erl_crash.dump
Url : http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20070813/c8fee2cd/attachment.obj 

From 0x6e6562 at gmail.com  Wed Aug 15 07:20:33 2007
From: 0x6e6562 at gmail.com (Ben Hood)
Date: Wed, 15 Aug 2007 07:20:33 +0100
Subject: [rabbitmq-discuss] Error while starting server
In-Reply-To: <DE8632162CB73D4CB22D1D15387409E410231C@scsmsx414.amr.corp.intel.com>
References: <DE8632162CB73D4CB22D1D15387409E410231C@scsmsx414.amr.corp.intel.com>
Message-ID: <269388e30708142320j62dcef09vf5af0cc163c2fbaa@mail.gmail.com>

Tanmay,

> I have recently started using RabbitMQ. It has been working fine for me
> until today. When I try to start the server, I get this error. I have also
> attached the auto-generated crash/dump report. Please have a look and see if
> somebody has a suggestion about what the problem might be.

Do you get the same error if you start rabbit using an erlang shell, i.e.

C:\Program Files\erl5.5.5\lib\rabbitmq-server-1.1.0-alpha> erl -pa
ebin -boot start_sasl -mnesia dir <SOME_DIRECTORY> -s rabbit

?

HTH,

Ben



From matthias at lshift.net  Wed Aug 15 09:06:06 2007
From: matthias at lshift.net (Matthias Radestock)
Date: Wed, 15 Aug 2007 09:06:06 +0100
Subject: [rabbitmq-discuss] Error while starting server
In-Reply-To: <DE8632162CB73D4CB22D1D15387409E410231C@scsmsx414.amr.corp.intel.com>
References: <DE8632162CB73D4CB22D1D15387409E410231C@scsmsx414.amr.corp.intel.com>
Message-ID: <46C2B3EE.9070703@lshift.net>

Tanmay,

Goel, Tanmay wrote:
> I have recently started using RabbitMQ. It has been working fine for me 
> until today. When I try to start the server, I get this error. I have 
> also attached the auto-generated crash/dump report. Please have a look 
> and see if somebody has a suggestion about what the problem might be.

Did anything get written to the rabbit.log and rabbit-sasl.log files? I 
see you are running on Windows, where these files are normally found in 
the rabbitmq sub-directory of your home directory, i.e. usually 
C:\Documents and Settings\<User>\rabbitmq.

Regards,

Matthias.



From md at hudora.de  Wed Aug 15 11:34:49 2007
From: md at hudora.de (Maximillian Dornseif)
Date: Wed, 15 Aug 2007 12:34:49 +0200
Subject: [rabbitmq-discuss] Python Client for RabbitMQ/AMQP?
Message-ID: <3F273888-127C-4E0F-B6F2-2F0FD0593566@hudora.de>

[probably I was to confident in Nabble (http://www.nabble.com/ 
RabbitMQ-f25704.html#) to use it to post to this list - seems the  
message never got through. So I repost it - please excuse if this  
becomes a dupe -md]

Robert Godfrey wrote:
On 14/08/07, Ben Hood <0x6e6562 at gmail.com> wrote:
 > > I'm more concerned about Python. I'm aware of QPid's Python code  
but
 > > obviously this code is meant to break thinks and not to be  
simple  and
 > > reliable.
 >
 > In what way is QPid's python lib meant to break things?
I assume in as many ways as the authors come up with. Isn't that the  
purpose of compliance suites? Try all the corner cases until you a)  
break something or b) are satisfied that the test subject is fully  
compliant. Compare that to a client coded with reliability in mind:  
such a client would be carefully crafted to avoid corner cases, be  
well documented and well tested.

Then again, perhaps we just have a different understanding of  
"breaking things".

Robert Godfrey wrote:
Speaking for Qpid here :-) it's certainly not meant to break things -  
although we do use the library to write our cross-platform system  
test cases.

I can't really speak to simplicity - the API is certainly closer to  
the AMQP spec than a high level JMS style API...  If anyone has  
suggestions for improvement then we would certainly welcome them over  
on the Qpid mailing list.
That said, I now understand that https://svn.apache.org/repos/asf/ 
incubator/qpid/trunk/qpid/python/qpid is not only meant to be a  
testing vehicle but also a stand alone AMQP client library. It also  
seems so far to be the only AMQP implementation in Python so it is  
way to go for me.

Regards

Maximillian




From alexis.richardson at cohesiveft.com  Wed Aug 15 16:19:34 2007
From: alexis.richardson at cohesiveft.com (Alexis Richardson)
Date: Wed, 15 Aug 2007 16:19:34 +0100
Subject: [rabbitmq-discuss] Python Client for RabbitMQ/AMQP?
In-Reply-To: <3F273888-127C-4E0F-B6F2-2F0FD0593566@hudora.de>
References: <3F273888-127C-4E0F-B6F2-2F0FD0593566@hudora.de>
Message-ID: <167204d20708150819n6d8fa81ay847b67f01c2f583d@mail.gmail.com>

Max

I was hoping that was what you meant by 'break' :-)

It would be great if you could try out the Python clients with
RabbitMQ and let the list know how you get on.  As I have mentioned
previously we are very committed to interop since it is both
technically and commercially important to our users.  We want RabbitMQ
to work really well with any AMQP client.

alexis






On 8/15/07, Maximillian Dornseif <md at hudora.de> wrote:
> [probably I was to confident in Nabble (http://www.nabble.com/
> RabbitMQ-f25704.html#) to use it to post to this list - seems the
> message never got through. So I repost it - please excuse if this
> becomes a dupe -md]
>
> Robert Godfrey wrote:
> On 14/08/07, Ben Hood <0x6e6562 at gmail.com> wrote:
>  > > I'm more concerned about Python. I'm aware of QPid's Python code
> but
>  > > obviously this code is meant to break thinks and not to be
> simple  and
>  > > reliable.
>  >
>  > In what way is QPid's python lib meant to break things?
> I assume in as many ways as the authors come up with. Isn't that the
> purpose of compliance suites? Try all the corner cases until you a)
> break something or b) are satisfied that the test subject is fully
> compliant. Compare that to a client coded with reliability in mind:
> such a client would be carefully crafted to avoid corner cases, be
> well documented and well tested.
>
> Then again, perhaps we just have a different understanding of
> "breaking things".
>
> Robert Godfrey wrote:
> Speaking for Qpid here :-) it's certainly not meant to break things -
> although we do use the library to write our cross-platform system
> test cases.
>
> I can't really speak to simplicity - the API is certainly closer to
> the AMQP spec than a high level JMS style API...  If anyone has
> suggestions for improvement then we would certainly welcome them over
> on the Qpid mailing list.
> That said, I now understand that https://svn.apache.org/repos/asf/
> incubator/qpid/trunk/qpid/python/qpid is not only meant to be a
> testing vehicle but also a stand alone AMQP client library. It also
> seems so far to be the only AMQP implementation in Python so it is
> way to go for me.
>
> Regards
>
> Maximillian
>
>
> _______________________________________________
> rabbitmq-discuss mailing list
> rabbitmq-discuss at lists.rabbitmq.com
> http://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss
>


-- 
Alexis Richardson
+44 20 7617 7339 (UK)
+44 77 9865 2911 (cell)
+1 650 206 2517 (US)



From tanmay.goel at intel.com  Wed Aug 15 18:38:40 2007
From: tanmay.goel at intel.com (Goel, Tanmay)
Date: Wed, 15 Aug 2007 10:38:40 -0700
Subject: [rabbitmq-discuss] Error while starting server
In-Reply-To: <46C2B3EE.9070703@lshift.net>
References: <DE8632162CB73D4CB22D1D15387409E410231C@scsmsx414.amr.corp.intel.com>
	<46C2B3EE.9070703@lshift.net>
Message-ID: <DE8632162CB73D4CB22D1D15387409E410288B@scsmsx414.amr.corp.intel.com>

Yes, here they are.

-----Original Message-----
From: Matthias Radestock [mailto:matthias at lshift.net] 
Sent: Wednesday, August 15, 2007 1:06 AM
To: Goel, Tanmay
Cc: rabbitmq-discuss at lists.rabbitmq.com
Subject: Re: [rabbitmq-discuss] Error while starting server

Tanmay,

Goel, Tanmay wrote:
> I have recently started using RabbitMQ. It has been working fine for
me 
> until today. When I try to start the server, I get this error. I have 
> also attached the auto-generated crash/dump report. Please have a look

> and see if somebody has a suggestion about what the problem might be.

Did anything get written to the rabbit.log and rabbit-sasl.log files? I 
see you are running on Windows, where these files are normally found in 
the rabbitmq sub-directory of your home directory, i.e. usually 
C:\Documents and Settings\<User>\rabbitmq.

Regards,

Matthias.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: rabbit.log
Type: application/octet-stream
Size: 2221 bytes
Desc: rabbit.log
Url : http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20070815/c2b9eb44/attachment.obj 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: rabbit-sasl.log
Type: application/octet-stream
Size: 11300 bytes
Desc: rabbit-sasl.log
Url : http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20070815/c2b9eb44/attachment-0001.obj 

From matthias at lshift.net  Wed Aug 15 18:58:14 2007
From: matthias at lshift.net (Matthias Radestock)
Date: Wed, 15 Aug 2007 18:58:14 +0100
Subject: [rabbitmq-discuss] Error while starting server
In-Reply-To: <DE8632162CB73D4CB22D1D15387409E410288B@scsmsx414.amr.corp.intel.com>
	(Tanmay Goel's message of "Wed, 15 Aug 2007 10:38:40 -0700")
References: <DE8632162CB73D4CB22D1D15387409E410231C@scsmsx414.amr.corp.intel.com>
	<46C2B3EE.9070703@lshift.net>
	<DE8632162CB73D4CB22D1D15387409E410288B@scsmsx414.amr.corp.intel.com>
Message-ID: <lyk5rw65op.fsf@tanto.lshift.net>

Tanmay,

"Goel, Tanmay" <tanmay.goel at intel.com> writes:

> Yes, here they are.

Congratulations. You have found a bug!

It's a simple arity error when attempting to redeliver persistet
messages after a restart.

The fix for the bug will be in the next release.

Meanwhile, the easiest workaround to get you up and running again is to
delete the existing persistet messages, assuming of course that you can
afford to lose them. To do so just delete the rabbit_persister.LOG and
rabbit_persister.LOG.previous files. These normally reside in
C:\Documents and Settings\<User>\rabbitmq\rabbit-mnesia.


Regards,

Matthias.



From tanmay.goel at intel.com  Thu Aug 16 01:38:39 2007
From: tanmay.goel at intel.com (Goel, Tanmay)
Date: Wed, 15 Aug 2007 17:38:39 -0700
Subject: [rabbitmq-discuss] Problems while trying interoperability
Message-ID: <DE8632162CB73D4CB22D1D15387409E413D3E1@scsmsx414.amr.corp.intel.com>

Hi,

 

Thanks Matthias. I got the server running.

 

Right now I am conducting some basic experiments with interoperability
among the various implementations but haven't received any positive
results yet. For example, when I try to run a RabbitMQ client (attached,
SimpleProducer.java) against Qpid broker (with the default configuration
provided when I first downloaded it, no change), I get the following
exception. The exception is thrown on this like of code: 

int ticket = ch.accessRequest("/test");

Intuitively, this method is not provided by the Qpid broker. Is it?

Also, there is no "client-name" passed as a parameter at the time of
establishing connection to the RabbitMQ connection constructor but is
passed to the Qpid connection constructor. If and how will this effect?

 

------------------------------------------------------------------------
------------------------------------------------------------------------
------------------------------------------------------------------------
--------

AMQConnection.mainLoop: connection close

Main thread caught exception: java.io.IOException

java.io.IOException

      at com.rabbitmq.client.impl.AMQChannel.wrap(AMQChannel.java:112)

      at
com.rabbitmq.client.impl.AMQChannel.exnWrappingRpc(AMQChannel.java:126)

      at
com.rabbitmq.client.impl.ChannelN.accessRequest(ChannelN.java:326)

      at
com.rabbitmq.client.impl.ChannelN.accessRequest(ChannelN.java:309)

      at
com.rabbitmq.examples.SimpleProducer.main(SimpleProducer.java:44)

Caused by: com.rabbitmq.client.ShutdownSignalException (connection
error; reason: java.io.EOFException)

      at
com.rabbitmq.client.impl.AMQConnection.shutdown(AMQConnection.java:536)

      at
com.rabbitmq.client.impl.AMQConnection$MainLoop.run(AMQConnection.java:4
24)

Caused by: java.io.EOFException

      at java.io.DataInputStream.readUnsignedByte(Unknown Source)

      at com.rabbitmq.client.impl.Frame.readFrom(Frame.java:105)

      at
com.rabbitmq.client.impl.SocketFrameHandler.readFrame(SocketFrameHandler
.java:119)

      at
com.rabbitmq.client.impl.AMQConnection.readFrame(AMQConnection.java:277)

      at
com.rabbitmq.client.impl.AMQConnection$MainLoop.run(AMQConnection.java:3
94)

 

 

------------------------------------------------------------------------
------------------------------------------------------------------------
------------------------------------------------------------------------
--------

 

Alternatively, when I tried to run a Qpid client against a RabbitMQ
broker (again, with the default settings, virtual hosts, etc). I got the
following error message at the first line of code: _connection = new
AMQConnection("localhost", 5672, "guest", "guest", "clientid", "/data");

 

------------------------------------------------------------------------
------------------------------------------------------------------------
------------------------------------------------------------------------
--------

main 2007-08-15 17:30:36,519 INFO [apache.qpid.client.AMQConnection]
Connection:amqp://guest:guest at clientid/data?brokerlist='tcp://localhost:
5672'

main 2007-08-15 17:30:36,597 WARN
[qpid.client.transport.TransportConnection] Using Mina NIO

main 2007-08-15 17:30:36,612 INFO
[qpid.client.transport.SocketTransportConnection] send-buffer-size =
32768

main 2007-08-15 17:30:36,612 INFO
[qpid.client.transport.SocketTransportConnection] recv-buffer-size =
32768

main 2007-08-15 17:30:36,628 INFO
[qpid.client.transport.SocketTransportConnection] Attempting connection
to localhost/127.0.0.1:5672

AnonymousIoService-2 2007-08-15 17:30:36,831 INFO
[qpid.client.security.CallbackHandlerRegistry] Available SASL
mechanisms: CRAM-MD5 PLAIN

AnonymousIoService-4 2007-08-15 17:30:36,847 INFO
[qpid.client.handler.ConnectionCloseMethodHandler] ConnectionClose frame
received

AnonymousIoService-4 2007-08-15 17:30:36,847 INFO
[qpid.client.handler.ConnectionCloseMethodHandler] Connection close
received with error code 403

main 2007-08-15 17:30:36,847 INFO [apache.qpid.client.AMQConnection]
Unable to connect to broker at tcp://localhost:5672

AnonymousIoService-4 2007-08-15 17:30:36,847 INFO
[qpid.client.protocol.AMQProtocolHandler] Exception caught therefore
going to attempt failover: org.apache.qpid.AMQConnectionClosedException:
Error: ACCESS_REFUSED [error code 403]

org.apache.qpid.AMQConnectionClosedException: Error: ACCESS_REFUSED
[error code 403]

      at
org.apache.qpid.client.handler.ConnectionCloseMethodHandler.methodReceiv
ed(ConnectionCloseMethodHandler.java:82)

      at
org.apache.qpid.client.state.AMQStateManager.methodReceived(AMQStateMana
ger.java:151)

      at
org.apache.qpid.client.protocol.AMQProtocolHandler$1.methodReceived(AMQP
rotocolHandler.java:106)

      at
org.apache.qpid.client.protocol.AMQProtocolHandler.messageReceived(AMQPr
otocolHandler.java:323)

      at
org.apache.mina.common.support.AbstractIoFilterChain$2.messageReceived(A
bstractIoFilterChain.java:189)

      at
org.apache.mina.common.support.AbstractIoFilterChain.callNextMessageRece
ived(AbstractIoFilterChain.java:502)

      at
org.apache.mina.common.support.AbstractIoFilterChain.access$1000(Abstrac
tIoFilterChain.java:52)

      at
org.apache.mina.common.support.AbstractIoFilterChain$EntryImpl$1.message
Received(AbstractIoFilterChain.java:777)

      at
org.apache.mina.filter.codec.support.SimpleProtocolDecoderOutput.flush(S
impleProtocolDecoderOutput.java:60)

      at
org.apache.mina.filter.codec.ProtocolCodecFilter.messageReceived(Protoco
lCodecFilter.java:185)

      at
org.apache.mina.common.support.AbstractIoFilterChain.callNextMessageRece
ived(AbstractIoFilterChain.java:502)

      at
org.apache.mina.common.support.AbstractIoFilterChain.access$1000(Abstrac
tIoFilterChain.java:52)

      at
org.apache.mina.common.support.AbstractIoFilterChain$EntryImpl$1.message
Received(AbstractIoFilterChain.java:777)

      at
org.apache.mina.filter.executor.ExecutorFilter.processEvent(ExecutorFilt
er.java:243)

      at
org.apache.mina.filter.executor.ExecutorFilter$ProcessEventsRunnable.run
(ExecutorFilter.java:305)

      at
edu.emory.mathcs.backport.java.util.concurrent.ThreadPoolExecutor$Worker
.runTask(ThreadPoolExecutor.java:665)

      at
edu.emory.mathcs.backport.java.util.concurrent.ThreadPoolExecutor$Worker
.run(ThreadPoolExecutor.java:690)

      at java.lang.Thread.run(Unknown Source)

AnonymousIoService-4 2007-08-15 17:30:36,847 INFO
[qpid.client.protocol.AMQProtocolHandler] Session closed called with
failover state currently FailoverState: NOT STARTED

AnonymousIoService-4 2007-08-15 17:30:36,847 INFO
[qpid.client.protocol.AMQProtocolHandler] FAILOVER STARTING

AnonymousIoService-4 2007-08-15 17:30:36,847 INFO
[qpid.client.protocol.AMQProtocolHandler] Protocol Session
[org.apache.qpid.client.protocol.AMQProtocolHandler at e2dae9] closed

Failover 2007-08-15 17:30:36,847 INFO
[qpid.client.failover.FailoverHandler] Starting failover process

Failover 2007-08-15 17:30:36,847 WARN
[qpid.client.transport.TransportConnection] Using Mina NIO

Failover 2007-08-15 17:30:36,847 INFO
[qpid.client.transport.SocketTransportConnection] send-buffer-size =
32768

Failover 2007-08-15 17:30:36,847 INFO
[qpid.client.transport.SocketTransportConnection] recv-buffer-size =
32768

Failover 2007-08-15 17:30:36,847 INFO
[qpid.client.transport.SocketTransportConnection] Attempting connection
to localhost/127.0.0.1:5672

AnonymousIoService-4 2007-08-15 17:30:36,847 INFO
[qpid.client.protocol.AMQProtocolHandler] Session closed called with
failover state currently FailoverState: IN PROGRESS

AnonymousIoService-4 2007-08-15 17:30:36,847 INFO
[qpid.client.protocol.AMQProtocolHandler] Failover not allowed by
policy.

AnonymousIoService-4 2007-08-15 17:30:36,847 INFO
[qpid.client.protocol.AMQProtocolHandler] sessionClose() failover in
progress

AnonymousIoService-4 2007-08-15 17:30:36,847 INFO
[qpid.client.protocol.AMQProtocolHandler] Protocol Session
[org.apache.qpid.client.protocol.AMQProtocolHandler at e2dae9] closed

AnonymousIoService-8 2007-08-15 17:30:36,862 INFO
[qpid.client.handler.ConnectionCloseMethodHandler] ConnectionClose frame
received

AnonymousIoService-8 2007-08-15 17:30:36,862 INFO
[qpid.client.handler.ConnectionCloseMethodHandler] Connection close
received with error code 403

Failover 2007-08-15 17:30:36,862 INFO [apache.qpid.client.AMQConnection]
Error: ACCESS_REFUSED [error code 403]:Unable to connect to broker at
tcp://localhost:5672

AnonymousIoService-8 2007-08-15 17:30:36,862 INFO
[qpid.client.protocol.AMQProtocolHandler] Session closed called with
failover state currently FailoverState: IN PROGRESS

AnonymousIoService-8 2007-08-15 17:30:36,862 INFO
[qpid.client.protocol.AMQProtocolHandler] Failover not allowed by
policy.

AnonymousIoService-8 2007-08-15 17:30:36,862 INFO
[qpid.client.protocol.AMQProtocolHandler] sessionClose() failover in
progress

AnonymousIoService-8 2007-08-15 17:30:36,862 INFO
[qpid.client.protocol.AMQProtocolHandler] Protocol Session
[org.apache.qpid.client.protocol.AMQProtocolHandler at e2dae9] closed

Failover 2007-08-15 17:30:36,862 INFO [apache.qpid.client.AMQConnection]
Closing AMQConnection due to :Server closed connection and no failover
was successful

org.apache.qpid.AMQConnectionClosedException: Error: ACCESS_REFUSED
[error code 403]

      at
org.apache.qpid.client.handler.ConnectionCloseMethodHandler.methodReceiv
ed(ConnectionCloseMethodHandler.java:82)

      at
org.apache.qpid.client.state.AMQStateManager.methodReceived(AMQStateMana
ger.java:151)

      at
org.apache.qpid.client.protocol.AMQProtocolHandler$1.methodReceived(AMQP
rotocolHandler.java:106)

      at
org.apache.qpid.client.protocol.AMQProtocolHandler.messageReceived(AMQPr
otocolHandler.java:323)

      at
org.apache.mina.common.support.AbstractIoFilterChain$2.messageReceived(A
bstractIoFilterChain.java:189)

      at
org.apache.mina.common.support.AbstractIoFilterChain.callNextMessageRece
ived(AbstractIoFilterChain.java:502)

      at
org.apache.mina.common.support.AbstractIoFilterChain.access$1000(Abstrac
tIoFilterChain.java:52)

      at
org.apache.mina.common.support.AbstractIoFilterChain$EntryImpl$1.message
Received(AbstractIoFilterChain.java:777)

      at
org.apache.mina.filter.codec.support.SimpleProtocolDecoderOutput.flush(S
impleProtocolDecoderOutput.java:60)

      at
org.apache.mina.filter.codec.ProtocolCodecFilter.messageReceived(Protoco
lCodecFilter.java:185)

      at
org.apache.mina.common.support.AbstractIoFilterChain.callNextMessageRece
ived(AbstractIoFilterChain.java:502)

      at
org.apache.mina.common.support.AbstractIoFilterChain.access$1000(Abstrac
tIoFilterChain.java:52)

      at
org.apache.mina.common.support.AbstractIoFilterChain$EntryImpl$1.message
Received(AbstractIoFilterChain.java:777)main 2007-08-15 17:30:36,956
ERROR [qpid.example.publisher.Publisher]
org.apache.qpid.AMQConnectionClosedException: Error: ACCESS_REFUSED
[error code 403]

 

      at
org.apache.mina.filter.executor.ExecutorFilter.processEvent(ExecutorFilt
er.java:243)

      at
org.apache.mina.filter.executor.ExecutorFilter$ProcessEventsRunnable.run
(ExecutorFilter.java:305)

      at
edu.emory.mathcs.backport.java.util.concurrent.ThreadPoolExecutor$Worker
.runTask(ThreadPoolExecutor.java:665)

      at
edu.emory.mathcs.backport.java.util.concurrent.ThreadPoolExecutor$Worker
.run(ThreadPoolExecutor.java:690)

      at java.lang.Thread.run(Unknown Source)

main 2007-08-15 17:30:36,956 ERROR
[qpid.example.publisher.FileMessageDispatcher] Error trying to dispatch
message: java.lang.NullPointerException

 

------------------------------------------------------------------------
------------------------------------------------------------------------
------------------------------------------------------------------------
--------

 

Any suggestions that I can try out to make the interoperability work?

 

Thanks.

 

Regards,

Tanmay

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20070815/202d8f3b/attachment.htm 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: SimpleProducer.java
Type: application/octet-stream
Size: 2190 bytes
Desc: SimpleProducer.java
Url : http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20070815/202d8f3b/attachment.obj 

From md at hudora.de  Thu Aug 16 06:58:44 2007
From: md at hudora.de (Maximillian Dornseif)
Date: Thu, 16 Aug 2007 07:58:44 +0200
Subject: [rabbitmq-discuss] RabbitMQ & QPid test suite
Message-ID: <9196394E-9C86-4444-8FD8-E05350338803@hudora.de>

I'm trying to use RabbitMQ (rabbitmq-server-1.1.0-alpha locally and  
the public test server) with QPid's Python test suite. But seemingly  
I do something wrong here since the tests are hanging. Any hints what  
happening here?

$ svn info
URL: https://svn.apache.org/repos/asf/incubator/qpid/trunk/qpid/python
Revision: 565728
Last Changed Date: 2007-08-10 17:55:16 +0200 (Fri, 10 Aug 2007)
[...]
$ uname -a  # MaxOS X 10.4.10, Python 2.5.1 (r251:54863, Jun 14 2007,  
15:08:59)
Darwin lichtblick.local 8.10.1 Darwin Kernel Version 8.10.1: Wed May  
23 16:33:00 PDT 2007; root:xnu-792.22.5~1/RELEASE_I386 i386 i386

$ time ./run-tests -b guest/guest at dev.rabbitmq.com -v
Using specification from: ../specs/amqp.0-8.xml
Warning: duplicate id: Constant(name=xa_rbrollback, id=1)
Warning: duplicate id: Constant(name=xa_rbtimeout, id=2)
Warning: duplicate id: Constant(name=xa_heurhaz, id=3)
Warning: duplicate id: Constant(name=xa_rdonly, id=7)
test_bit1 (tests.codec.BitTestCase) ... ok
test_bit2 (tests.codec.BitTestCase) ... ok
test_bit3 (tests.codec.BitTestCase) ... ok
test_bit_decode_0 (tests.codec.BitTestCase) ... ok
test_bit_decode_1 (tests.codec.BitTestCase) ... ok
test_content_inline (tests.codec.ContentTestCase) ... ok
test_content_inline_decode (tests.codec.ContentTestCase) ... ok
test_content_reference (tests.codec.ContentTestCase) ... ok
test_content_reference_decode (tests.codec.ContentTestCase) ... ok
test_field_table_decode (tests.codec.FieldTableTestCase) ... ok
test_field_table_invalid_field_name_length  
(tests.codec.FieldTableTestCase) ... ok
test_field_table_multiple_name_value_pair  
(tests.codec.FieldTableTestCase) ... ok
test_field_table_name_value_pair (tests.codec.FieldTableTestCase) ... ok
test_octet_out_of_upper_range (tests.codec.IntegerTestCase) ... ok
test_ulong_int (tests.codec.IntegerTestCase) ... ok
test_ulong_int_decode (tests.codec.IntegerTestCase) ... ok
test_ulong_int_out_of_lower_range (tests.codec.IntegerTestCase) ... ok
test_ulong_int_out_of_upper_range (tests.codec.IntegerTestCase) ... ok
test_ulong_int_with_fraction (tests.codec.IntegerTestCase) ... [...]/ 
codec.py:98: DeprecationWarning: integer argument expected, got float
   self.write(pack(fmt, *args))
ok
test_ulong_long_int (tests.codec.IntegerTestCase) ... ok
test_ulong_long_int_decode (tests.codec.IntegerTestCase) ... ok
test_ulong_long_int_out_of_lower_range  
(tests.codec.IntegerTestCase) ... ok
test_ulong_long_int_out_of_upper_range  
(tests.codec.IntegerTestCase) ... ok
test_ulong_long_int_with_fraction (tests.codec.IntegerTestCase) ... ok
test_unsigned_octet (tests.codec.IntegerTestCase) ... ok
test_unsigned_octet_decode (tests.codec.IntegerTestCase) ... ok
test_uoctet_out_of_lower_range (tests.codec.IntegerTestCase) ... ok
test_uoctet_with_fraction (tests.codec.IntegerTestCase) ... ok
test_ushort_int (tests.codec.IntegerTestCase) ... ok
test_ushort_int_decode (tests.codec.IntegerTestCase) ... ok
test_ushort_int_out_of_lower_range (tests.codec.IntegerTestCase) ... ok
test_ushort_int_out_of_upper_range (tests.codec.IntegerTestCase) ... ok
test_ushort_int_with_fraction (tests.codec.IntegerTestCase) ... ok
test_long_string_decode (tests.codec.StringTestCase) ... ok
test_long_string_positive_length (tests.codec.StringTestCase) ... ok
test_long_string_zero_length (tests.codec.StringTestCase) ... ok
test_short_string_decode (tests.codec.StringTestCase) ... ok
test_short_string_out_of_upper_range (tests.codec.StringTestCase) ... ok
test_short_string_positive_length (tests.codec.StringTestCase) ... ok
test_short_string_zero_length (tests.codec.StringTestCase) ... ok
test_oldtestcases (tests.codec.oldTests) ... ok
test_close (tests.queue.QueueTest) ... ok
test_listen (tests.queue.QueueTest) ... ok
test_load_0_10 (tests.spec.SpecTest) ... Warning: duplicate id:  
Constant(name=xa_rbrollback, id=1)
Warning: duplicate id: Constant(name=xa_rbtimeout, id=2)
Warning: duplicate id: Constant(name=xa_heurhaz, id=3)
Warning: duplicate id: Constant(name=xa_rdonly, id=7)
ok
test_load_0_8 (tests.spec.SpecTest) ... ok
test_load_0_9 (tests.spec.SpecTest) ... ok
test_load_0_9_errata (tests.spec.SpecTest) ... ok
test_ack (tests_0-8.basic.BasicTests) ...

Here it hangs and I have to forcefully terminate the Python instance  
(^Z kill %1;fg ^C) to get to the shell again.

If I run a local broker instead of using dev.rabbitmq.com I also see  
the same hangs in test_ack.

Regards

Maximillian




From md at hudora.de  Thu Aug 16 07:09:54 2007
From: md at hudora.de (Maximillian Dornseif)
Date: Thu, 16 Aug 2007 08:09:54 +0200
Subject: [rabbitmq-discuss] RabbitMQ on FreeBSD and MacOS
Message-ID: <7E101F0D-F9B2-47CE-8398-B61BAF9A5FA1@hudora.de>

I have some very brief blog postings describing the installation of  
RabbitMQ on FreeBSD and MacOS X. Nothing fancy there, but I thought  
it would be good to have these links in the mailing list archives for  
reference purposes

http://blogs.23.nu/c0re/stories/15658/ - FreeBSD 6.2
http://blogs.23.nu/c0re/stories/15657/ - MacOS X 10.4.10

I'm not sure about the filesystem policy in the erlang community, but  
from a FreeBSD standpoint the "correct" paths for an installation are

/usr/local/lib/erlang/lib
/var/log/rabbitmq
/var/db/rabbitmq or /var/db/rabbitmq/mnesia
/usr/local/etc/ or /usr/local/etc/rabbitmq

For MacOS it is more difficult to standartize in paths, but together  
with MacPorts stuff should go to

/opt/local/lib/erlang/lib/
/var/log/rabbitmq
/var/db/rabbitmq or /var/db/rabbitmq/mnesia
/usr/local/etc or /usr/local/etc/rabbitmq

Regards

Maximillian



From matthias at lshift.net  Thu Aug 16 08:08:26 2007
From: matthias at lshift.net (Matthias Radestock)
Date: Thu, 16 Aug 2007 08:08:26 +0100
Subject: [rabbitmq-discuss] RabbitMQ & QPid test suite
In-Reply-To: <9196394E-9C86-4444-8FD8-E05350338803@hudora.de>
References: <9196394E-9C86-4444-8FD8-E05350338803@hudora.de>
Message-ID: <46C3F7EA.7050701@lshift.net>

Maximillian Dornseif wrote:
> I'm trying to use RabbitMQ (rabbitmq-server-1.1.0-alpha locally and  
> the public test server) with QPid's Python test suite. But seemingly  
> I do something wrong here since the tests are hanging. Any hints what  
> happening here?

The 0-8 spec file that ships with the qpid test suite is not the same as 
the one published by the AMQP working group.

If you download the 0-8 "AMQP class definitions (XML)" from
   http://www.amqp.org/tikiwiki/tiki-index.php?page=Download
and run the test suite with the "-s <spec-file>" option pointing to that 
file then the tests go through.

A small number of tests fail because they test qpid-specific extensions, 
but all the rest pass.

Regards,

Matthias.



From matthias at lshift.net  Thu Aug 16 08:35:29 2007
From: matthias at lshift.net (Matthias Radestock)
Date: Thu, 16 Aug 2007 08:35:29 +0100
Subject: [rabbitmq-discuss] Problems while trying interoperability
In-Reply-To: <DE8632162CB73D4CB22D1D15387409E413D3E1@scsmsx414.amr.corp.intel.com>
References: <DE8632162CB73D4CB22D1D15387409E413D3E1@scsmsx414.amr.corp.intel.com>
Message-ID: <46C3FE41.6050205@lshift.net>

Tanmay,

Goel, Tanmay wrote:
> when I try to run a RabbitMQ client (attached, 
> SimpleProducer.java) against Qpid broker (with the default configuration 
> provided when I first downloaded it, no change), I get the following 
> exception. The exception is thrown on this like of code: *
> 
> *int ticket = ch.accessRequest("/test");*
> 
> *Intuitively, this method is not provided by the Qpid broker. Is it?*

You are probably right and this method is indeed unimplemented in Qpid. 
It certainly wasn't when we ran the tests ~6 months ago, as noted in
http://www.rabbitmq.com/interoperability.html

You can probably just skip that request and use a ticket number of 0, 
with RabbitMQ's lax_mode enabled (which it is by default - see above page).

> *Also, there is no ?client-name? passed as a parameter at the time of 
> establishing connection to the RabbitMQ connection constructor but is 
> passed to the Qpid connection constructor. If and how will this effect?*

I have no idea what the "client-name" value is for. Perhaps the QPid 
client passes that value as part of the peer properties exchanged during 
connection negotiation, in which case it's informational only, i.e. it 
shouldn't affect the behaviour.

> *Alternatively, when I tried to run a Qpid client against a RabbitMQ 
> broker (again, with the default settings, virtual hosts, etc). I got the 
> following error message at the first line of code: _connection = new 
> AMQConnection("localhost", 5672, "guest", "guest", "clientid", "/data");*

What do the RabbitMQ server logs (stdout, rabbit.log, rabbit-sasl.log) say?

What version of QPid are you running? The M1 release?

Regards,

Matthias.



From rob.j.godfrey at gmail.com  Thu Aug 16 10:08:13 2007
From: rob.j.godfrey at gmail.com (Robert Godfrey)
Date: Thu, 16 Aug 2007 10:08:13 +0100
Subject: [rabbitmq-discuss] Problems while trying interoperability
In-Reply-To: <46C3FE41.6050205@lshift.net>
References: <DE8632162CB73D4CB22D1D15387409E413D3E1@scsmsx414.amr.corp.intel.com>
	<46C3FE41.6050205@lshift.net>
Message-ID: <fde171c00708160208h5189552bu1851c2cb273e412d@mail.gmail.com>

Hi, at some point I added implementations of access ticket to the Qpid
client to allow us to interoperate with the RabbitMQ broker... if the code
has disappeared I can put it back in.

At present Qpid does not implement the access ticket / realm parts of AMQP.

Hope this helps,
Rob

On 16/08/07, Matthias Radestock <matthias at lshift.net> wrote:
>
> Tanmay,
>
> Goel, Tanmay wrote:
> > when I try to run a RabbitMQ client (attached,
> > SimpleProducer.java) against Qpid broker (with the default configuration
> > provided when I first downloaded it, no change), I get the following
> > exception. The exception is thrown on this like of code: *
> >
> > *int ticket = ch.accessRequest("/test");*
> >
> > *Intuitively, this method is not provided by the Qpid broker. Is it?*
>
> You are probably right and this method is indeed unimplemented in Qpid.
> It certainly wasn't when we ran the tests ~6 months ago, as noted in
> http://www.rabbitmq.com/interoperability.html
>
> You can probably just skip that request and use a ticket number of 0,
> with RabbitMQ's lax_mode enabled (which it is by default - see above
> page).
>
> > *Also, there is no "client-name" passed as a parameter at the time of
> > establishing connection to the RabbitMQ connection constructor but is
> > passed to the Qpid connection constructor. If and how will this effect?*
>
> I have no idea what the "client-name" value is for. Perhaps the QPid
> client passes that value as part of the peer properties exchanged during
> connection negotiation, in which case it's informational only, i.e. it
> shouldn't affect the behaviour.
>
> > *Alternatively, when I tried to run a Qpid client against a RabbitMQ
> > broker (again, with the default settings, virtual hosts, etc). I got the
> > following error message at the first line of code: _connection = new
> > AMQConnection("localhost", 5672, "guest", "guest", "clientid",
> "/data");*
>
> What do the RabbitMQ server logs (stdout, rabbit.log, rabbit-sasl.log)
> say?
>
> What version of QPid are you running? The M1 release?
>
> Regards,
>
> Matthias.
>
> _______________________________________________
> rabbitmq-discuss mailing list
> rabbitmq-discuss at lists.rabbitmq.com
> http://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20070816/567f224f/attachment.htm 

From alexis.richardson at cohesiveft.com  Thu Aug 16 12:33:31 2007
From: alexis.richardson at cohesiveft.com (Alexis Richardson)
Date: Thu, 16 Aug 2007 12:33:31 +0100
Subject: [rabbitmq-discuss] Problems while trying interoperability
In-Reply-To: <fde171c00708160208h5189552bu1851c2cb273e412d@mail.gmail.com>
References: <DE8632162CB73D4CB22D1D15387409E413D3E1@scsmsx414.amr.corp.intel.com>
	<46C3FE41.6050205@lshift.net>
	<fde171c00708160208h5189552bu1851c2cb273e412d@mail.gmail.com>
Message-ID: <167204d20708160433q232c167bmb7b03ac0260e6971@mail.gmail.com>

Rob,

Anything to minimise Qpid / RabbitMQ deltas on how the spec is
implemented would be great - thanks.  We'll do the same if the case
arises.  And thanks very much for being on this group so we can work
with your team to ensure interop is real and not vapour.

Tanmay,

As Matthias pointed out, pending a patch of the type Rob mentions, you
can also do this as an interop workaround:

1) Qpid client -> RabbitMQ broker --- run RabbitMQ in "lax" mode (ie
we reduce our spec implementation surface for interop).
2) RabbitMQ client -> QPid server --- do not do the accessRequest and
use a hard-coded ticket# instead

For (1) lax mode is enabled by default so please *do* send us your logs.

Cheers

alexis






On 8/16/07, Robert Godfrey <rob.j.godfrey at gmail.com> wrote:
> Hi, at some point I added implementations of access ticket to the Qpid
> client to allow us to interoperate with the RabbitMQ broker... if the code
> has disappeared I can put it back in.
>
> At present Qpid does not implement the access ticket / realm parts of AMQP.
>
> Hope this helps,
> Rob
>
>
> On 16/08/07, Matthias Radestock <matthias at lshift.net> wrote:
> > Tanmay,
> >
> > Goel, Tanmay wrote:
> > > when I try to run a RabbitMQ client (attached,
> > > SimpleProducer.java) against Qpid broker (with the default configuration
> > > provided when I first downloaded it, no change), I get the following
> > > exception. The exception is thrown on this like of code: *
> > >
> > > *int ticket = ch.accessRequest("/test");*
> > >
> > > *Intuitively, this method is not provided by the Qpid broker. Is it?*
> >
> > You are probably right and this method is indeed unimplemented in Qpid.
> > It certainly wasn't when we ran the tests ~6 months ago, as noted in
> > http://www.rabbitmq.com/interoperability.html
> >
> > You can probably just skip that request and use a ticket number of 0,
> > with RabbitMQ's lax_mode enabled (which it is by default - see above
> page).
> >
> > > *Also, there is no "client-name" passed as a parameter at the time of
> > > establishing connection to the RabbitMQ connection constructor but is
> > > passed to the Qpid connection constructor. If and how will this effect?*
> >
> > I have no idea what the "client-name" value is for. Perhaps the QPid
> > client passes that value as part of the peer properties exchanged during
> > connection negotiation, in which case it's informational only, i.e. it
> > shouldn't affect the behaviour.
> >
> > > *Alternatively, when I tried to run a Qpid client against a RabbitMQ
> > > broker (again, with the default settings, virtual hosts, etc). I got the
> > > following error message at the first line of code: _connection = new
> > > AMQConnection("localhost", 5672, "guest", "guest", "clientid",
> "/data");*
> >
> > What do the RabbitMQ server logs (stdout, rabbit.log, rabbit-sasl.log)
> say?
> >
> > What version of QPid are you running? The M1 release?
> >
> > Regards,
> >
> > Matthias.
> >
> > _______________________________________________
> > rabbitmq-discuss mailing list
> > rabbitmq-discuss at lists.rabbitmq.com
> >
> http://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss
> >
>
>
> _______________________________________________
> rabbitmq-discuss mailing list
> rabbitmq-discuss at lists.rabbitmq.com
> http://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss
>
>


-- 
Alexis Richardson
+44 20 7617 7339 (UK)
+44 77 9865 2911 (cell)
+1 650 206 2517 (US)



From ritchiem at apache.org  Thu Aug 16 13:04:24 2007
From: ritchiem at apache.org (Martin Ritchie)
Date: Thu, 16 Aug 2007 13:04:24 +0100
Subject: [rabbitmq-discuss] Problems while trying interoperability
In-Reply-To: <167204d20708160433q232c167bmb7b03ac0260e6971@mail.gmail.com>
References: <DE8632162CB73D4CB22D1D15387409E413D3E1@scsmsx414.amr.corp.intel.com>
	<46C3FE41.6050205@lshift.net>
	<fde171c00708160208h5189552bu1851c2cb273e412d@mail.gmail.com>
	<167204d20708160433q232c167bmb7b03ac0260e6971@mail.gmail.com>
Message-ID: <99e30fe50708160504s79ce73bby6a69d9b69fc0a18e@mail.gmail.com>

On 16/08/07, Alexis Richardson <alexis.richardson at cohesiveft.com> wrote:
> Rob,
>
> Anything to minimise Qpid / RabbitMQ deltas on how the spec is
> implemented would be great - thanks.  We'll do the same if the case
> arises.  And thanks very much for being on this group so we can work
> with your team to ensure interop is real and not vapour.
>
> Tanmay,
>
> As Matthias pointed out, pending a patch of the type Rob mentions, you
> can also do this as an interop workaround:
>
> 1) Qpid client -> RabbitMQ broker --- run RabbitMQ in "lax" mode (ie
> we reduce our spec implementation surface for interop).
> 2) RabbitMQ client -> QPid server --- do not do the accessRequest and
> use a hard-coded ticket# instead
>
> For (1) lax mode is enabled by default so please *do* send us your logs.
>
> Cheers
>
> alexis

For (1) you may also want to set java system property STRICT_AMQP=true
this will disabled all the Qpid JMS extensions to the AMQP protocol.
Disabling things such as selectors and queue browsing that AMQP 0_8
does not support, if you attempt to do something that uses extended
behaviour it will log a warning. Alternatively STRICT_AMQP_FATAL=true
will cause your app to System.exit in addition.

>
>
>
>
>
> On 8/16/07, Robert Godfrey <rob.j.godfrey at gmail.com> wrote:
> > Hi, at some point I added implementations of access ticket to the Qpid
> > client to allow us to interoperate with the RabbitMQ broker... if the code
> > has disappeared I can put it back in.
> >
> > At present Qpid does not implement the access ticket / realm parts of AMQP.
> >
> > Hope this helps,
> > Rob
> >
> >
> > On 16/08/07, Matthias Radestock <matthias at lshift.net> wrote:
> > > Tanmay,
> > >
> > > Goel, Tanmay wrote:
> > > > when I try to run a RabbitMQ client (attached,
> > > > SimpleProducer.java) against Qpid broker (with the default configuration
> > > > provided when I first downloaded it, no change), I get the following
> > > > exception. The exception is thrown on this like of code: *
> > > >
> > > > *int ticket = ch.accessRequest("/test");*
> > > >
> > > > *Intuitively, this method is not provided by the Qpid broker. Is it?*
> > >
> > > You are probably right and this method is indeed unimplemented in Qpid.
> > > It certainly wasn't when we ran the tests ~6 months ago, as noted in
> > > http://www.rabbitmq.com/interoperability.html
> > >
> > > You can probably just skip that request and use a ticket number of 0,
> > > with RabbitMQ's lax_mode enabled (which it is by default - see above
> > page).
> > >
> > > > *Also, there is no "client-name" passed as a parameter at the time of
> > > > establishing connection to the RabbitMQ connection constructor but is
> > > > passed to the Qpid connection constructor. If and how will this effect?*
> > >
> > > I have no idea what the "client-name" value is for. Perhaps the QPid
> > > client passes that value as part of the peer properties exchanged during
> > > connection negotiation, in which case it's informational only, i.e. it
> > > shouldn't affect the behaviour.
> > >
> > > > *Alternatively, when I tried to run a Qpid client against a RabbitMQ
> > > > broker (again, with the default settings, virtual hosts, etc). I got the
> > > > following error message at the first line of code: _connection = new
> > > > AMQConnection("localhost", 5672, "guest", "guest", "clientid",
> > "/data");*
> > >
> > > What do the RabbitMQ server logs (stdout, rabbit.log, rabbit-sasl.log)
> > say?
> > >
> > > What version of QPid are you running? The M1 release?
> > >
> > > Regards,
> > >
> > > Matthias.
> > >
> > > _______________________________________________
> > > rabbitmq-discuss mailing list
> > > rabbitmq-discuss at lists.rabbitmq.com
> > >
> > http://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss
> > >
> >
> >
> > _______________________________________________
> > rabbitmq-discuss mailing list
> > rabbitmq-discuss at lists.rabbitmq.com
> > http://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss
> >
> >
>
>
> --
> Alexis Richardson
> +44 20 7617 7339 (UK)
> +44 77 9865 2911 (cell)
> +1 650 206 2517 (US)
>
> _______________________________________________
> rabbitmq-discuss mailing list
> rabbitmq-discuss at lists.rabbitmq.com
> http://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss
>


-- 
Martin Ritchie



From stevej at pobox.com  Sun Aug 19 01:49:56 2007
From: stevej at pobox.com (Steve Jenson)
Date: Sat, 18 Aug 2007 17:49:56 -0700
Subject: [rabbitmq-discuss] Scala remote actors [was Re: Intro]
In-Reply-To: <lyejignd5a.fsf_-_@tanto.lshift.net>
References: <8CA961BE-2CFB-41AB-9FD0-54DDA8DC0FC0@athena.com>
	<167204d20708061025m5e008b49ka80f6562f775b630@mail.gmail.com>
	<lyr6mgo6ht.fsf@tanto.lshift.net>
	<81d74c280708061942p1f56a28dv63f162f9a03393ef@mail.gmail.com>
	<lyejignd5a.fsf_-_@tanto.lshift.net>
Message-ID: <81d74c280708181749l594a30ceqc5d3a21bec996f84@mail.gmail.com>

That's an interesting idea. So far, the Java libraries are working
fine for me, though. Speaking of, I wrote a quick hack to serialize
objects into a RabbitMQ cluster using Scala.

Client:
http://sieve.net/websvn/filedetails.php?repname=Steve%27s+Happy+Time+Petri+Dish&path=%2Fhacks%2FClient.scala

"Server":
http://sieve.net/websvn/filedetails.php?repname=Steve%27s+Happy+Time+Petri+Dish&path=%2Fhacks%2FServer.scala

And the class definition for Multiplication lies in here:
http://sieve.net/websvn/filedetails.php?repname=Steve%27s+Happy+Time+Petri+Dish&path=%2Fhacks%2FMain.scala

One thing that's not clear to me from the javadoc is how to keep my
client processing new messages coming into the queue instead of
exiting at the end. Am I supposed to wrap the call to
channel.basicConsume around a busy-loop or is there a better
mechanism?

Thanks,
Steve

On 8/6/07, Matthias Radestock <matthias at lshift.net> wrote:
> Steve,
>
> "Steve Jenson" <stevej at pobox.com> writes:
>
> > I just added myself to the rabbitmq-discuss list. I've CC'd this
> > discussion there (and removed all the original CC email addresses) so
> > we can keep it flying!
>
> Cheers.
>
> I have just looked at API docs for Scala's actors. Looks like they have
> moved on quite a bit since I last checked them out and have become much
> more Erlang-like. Has anybody investigated hooking them into an Erlang
> system directly, via Erlang's Jinterface?
>
> This would only give you AMQP interop via a rather indirect route,
> i.e. by invoking RabbitMQ's Erlang API, which Ben Hood has been working
> on; see mailing list archives. So it is no substitute for an AMQP
> binding along the lines I suggested. It would be an interesting project
> though, providing seamless interop between Erlang processes and Scala
> actors.
>
>
> Matthias.
>



From matthias at lshift.net  Sun Aug 19 02:35:35 2007
From: matthias at lshift.net (Matthias Radestock)
Date: Sun, 19 Aug 2007 02:35:35 +0100
Subject: [rabbitmq-discuss] Scala remote actors [was Re: Intro]
In-Reply-To: <81d74c280708181749l594a30ceqc5d3a21bec996f84@mail.gmail.com>
References: <8CA961BE-2CFB-41AB-9FD0-54DDA8DC0FC0@athena.com>	<167204d20708061025m5e008b49ka80f6562f775b630@mail.gmail.com>	<lyr6mgo6ht.fsf@tanto.lshift.net>	<81d74c280708061942p1f56a28dv63f162f9a03393ef@mail.gmail.com>	<lyejignd5a.fsf_-_@tanto.lshift.net>
	<81d74c280708181749l594a30ceqc5d3a21bec996f84@mail.gmail.com>
Message-ID: <46C79E67.4030102@lshift.net>

Steve Jenson wrote:
> I wrote a quick hack to serialize objects into a RabbitMQ cluster using Scala.

That looks pretty neat.

> One thing that's not clear to me from the javadoc is how to keep my
> client processing new messages coming into the queue instead of
> exiting at the end. Am I supposed to wrap the call to
> channel.basicConsume around a busy-loop or is there a better
> mechanism?

Any mechanism that stops the program from terminating will do. So, for 
example, you could spawn a thread and make it wait for something.


Matthias



From alexis.richardson at cohesiveft.com  Mon Aug 20 14:58:38 2007
From: alexis.richardson at cohesiveft.com (Alexis Richardson)
Date: Mon, 20 Aug 2007 14:58:38 +0100
Subject: [rabbitmq-discuss] another article on infoq - about mnesia
Message-ID: <167204d20708200658m7e8945ecy9cc21e5e7f076201@mail.gmail.com>

Hi all

InfoQ has an article about Erlang/OTP Mnesia --

http://www.infoq.com/news/2007/08/mnesia

alexis


-- 
Alexis Richardson
+44 20 7617 7339 (UK)
+44 77 9865 2911 (cell)
+1 650 206 2517 (US)



From alexis.richardson at cohesiveft.com  Mon Aug 20 16:15:42 2007
From: alexis.richardson at cohesiveft.com (Alexis Richardson)
Date: Mon, 20 Aug 2007 16:15:42 +0100
Subject: [rabbitmq-discuss] OT but FYI - London Haskell User Group
Message-ID: <167204d20708200815gf8daea9wa94e90349d7e34c3@mail.gmail.com>

Hi everyone

For Londoners interested in FP there is a HUG meeting this week on Wednesday.

http://www.londonhug.net/

alexis


-- 
Alexis Richardson
+44 20 7617 7339 (UK)
+44 77 9865 2911 (cell)
+1 650 206 2517 (US)



From tanmay.goel at intel.com  Tue Aug 21 20:51:11 2007
From: tanmay.goel at intel.com (Goel, Tanmay)
Date: Tue, 21 Aug 2007 12:51:11 -0700
Subject: [rabbitmq-discuss] Problems while trying interoperability
In-Reply-To: <46C3FE41.6050205@lshift.net>
References: <DE8632162CB73D4CB22D1D15387409E413D3E1@scsmsx414.amr.corp.intel.com>
	<46C3FE41.6050205@lshift.net>
Message-ID: <DE8632162CB73D4CB22D1D15387409E413DF7A@scsmsx414.amr.corp.intel.com>

Yes, I'm currently running the M1 release.
Rabbit-sasl.log is empty and I also couldn't find stdout that you
mentioned.

Thanks,
Tanmay


-----Original Message-----
From: Matthias Radestock [mailto:matthias at lshift.net] 
Sent: Thursday, August 16, 2007 12:35 AM
To: Goel, Tanmay
Cc: rabbitmq-discuss at lists.rabbitmq.com
Subject: Re: [rabbitmq-discuss] Problems while trying interoperability

Tanmay,

Goel, Tanmay wrote:
> when I try to run a RabbitMQ client (attached, 
> SimpleProducer.java) against Qpid broker (with the default
configuration 
> provided when I first downloaded it, no change), I get the following 
> exception. The exception is thrown on this like of code: *
> 
> *int ticket = ch.accessRequest("/test");*
> 
> *Intuitively, this method is not provided by the Qpid broker. Is it?*

You are probably right and this method is indeed unimplemented in Qpid. 
It certainly wasn't when we ran the tests ~6 months ago, as noted in
http://www.rabbitmq.com/interoperability.html

You can probably just skip that request and use a ticket number of 0, 
with RabbitMQ's lax_mode enabled (which it is by default - see above
page).

> *Also, there is no "client-name" passed as a parameter at the time of 
> establishing connection to the RabbitMQ connection constructor but is 
> passed to the Qpid connection constructor. If and how will this
effect?*

I have no idea what the "client-name" value is for. Perhaps the QPid 
client passes that value as part of the peer properties exchanged during

connection negotiation, in which case it's informational only, i.e. it 
shouldn't affect the behaviour.

> *Alternatively, when I tried to run a Qpid client against a RabbitMQ 
> broker (again, with the default settings, virtual hosts, etc). I got
the 
> following error message at the first line of code: _connection = new 
> AMQConnection("localhost", 5672, "guest", "guest", "clientid",
"/data");*

What do the RabbitMQ server logs (stdout, rabbit.log, rabbit-sasl.log)
say?

What version of QPid are you running? The M1 release?

Regards,

Matthias.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: rabbit-sasl.log
Type: application/octet-stream
Size: 0 bytes
Desc: rabbit-sasl.log
Url : http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20070821/72e3095e/attachment.obj 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: rabbit.log
Type: application/octet-stream
Size: 1303 bytes
Desc: rabbit.log
Url : http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20070821/72e3095e/attachment-0001.obj 

From tanmay.goel at intel.com  Tue Aug 21 21:15:06 2007
From: tanmay.goel at intel.com (Goel, Tanmay)
Date: Tue, 21 Aug 2007 13:15:06 -0700
Subject: [rabbitmq-discuss] Reliability and AMQP
Message-ID: <DE8632162CB73D4CB22D1D15387409E413DF90@scsmsx414.amr.corp.intel.com>

Hi,

 

So, I'm still trying to understand. There seems to be reliability
missing in the protocol. The protocol supports acknowledgements from the
consumer to the queue but there are no acks from the queue/broker back
to the publisher in any of the schemes (store-forward, pub-sub, etc). I
mean, for example, the publisher sends a series of 10K messages to the
broker and one message gets dropped/lost in the network before reaching
the broker. The publisher will not get an ack and the broker will never
know the message was supposed to come. Will problems of this sort be
taken care of in the later versions of the spec or am I missing reading
something?

 

Are you guys working with the 0.9 version of the spec or do you have a
copy of the 0.10 release since I couldn't find it online?

 

Thanks.

 

Regards,

Tanmay

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20070821/c19d0323/attachment.htm 

From alexis.richardson at cohesiveft.com  Wed Aug 22 00:44:06 2007
From: alexis.richardson at cohesiveft.com (Alexis Richardson)
Date: Wed, 22 Aug 2007 00:44:06 +0100
Subject: [rabbitmq-discuss] Reliability and AMQP
In-Reply-To: <DE8632162CB73D4CB22D1D15387409E413DF90@scsmsx414.amr.corp.intel.com>
References: <DE8632162CB73D4CB22D1D15387409E413DF90@scsmsx414.amr.corp.intel.com>
Message-ID: <167204d20708211644t4fbaf84bm4dfe5964bfcafee@mail.gmail.com>

Tanmay

The kind of reliability that you refer to will appear in AMQP 0-10.
We have been working on this or over six months, along with others
from the AMQP Working Group.  It's an important future enhancement to
AMQP, and to RabbitMQ, and one that we are all excited about.

Existing users will be able to continue using 0-8 and 0-9 (which is
almost the same as 0-8), but for those who need 'acks', that will
become a built-in feature of the spec, and of RabbitMQ.

The 0-10 draft is not strictly speaking for general consumption, as
you might expect with a work in progress.  But we welcome commentary
and it is an 'open' spec, so do please let me know if you would like
to get involved.

alexis



On 8/21/07, Goel, Tanmay <tanmay.goel at intel.com> wrote:
>
>
>
>
> Hi,
>
>
>
> So, I'm still trying to understand. There seems to be reliability missing in
> the protocol. The protocol supports acknowledgements from the consumer to
> the queue but there are no acks from the queue/broker back to the publisher
> in any of the schemes (store-forward, pub-sub, etc). I mean, for example,
> the publisher sends a series of 10K messages to the broker and one message
> gets dropped/lost in the network before reaching the broker. The publisher
> will not get an ack and the broker will never know the message was supposed
> to come. Will problems of this sort be taken care of in the later versions
> of the spec or am I missing reading something?
>
>
>
> Are you guys working with the 0.9 version of the spec or do you have a copy
> of the 0.10 release since I couldn't find it online?
>
>
>
> Thanks.
>
>
>
> Regards,
>
> Tanmay
> _______________________________________________
> rabbitmq-discuss mailing list
> rabbitmq-discuss at lists.rabbitmq.com
> http://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss
>
>


-- 
Alexis Richardson
+44 20 7617 7339 (UK)
+44 77 9865 2911 (cell)
+1 650 206 2517 (US)



From matthias at lshift.net  Wed Aug 22 18:02:11 2007
From: matthias at lshift.net (Matthias Radestock)
Date: Wed, 22 Aug 2007 18:02:11 +0100
Subject: [rabbitmq-discuss] Problems while trying interoperability
In-Reply-To: <DE8632162CB73D4CB22D1D15387409E413DF7A@scsmsx414.amr.corp.intel.com>
References: <DE8632162CB73D4CB22D1D15387409E413D3E1@scsmsx414.amr.corp.intel.com>	<46C3FE41.6050205@lshift.net>
	<DE8632162CB73D4CB22D1D15387409E413DF7A@scsmsx414.amr.corp.intel.com>
Message-ID: <46CC6C13.5060802@lshift.net>

Tanmay,

Goel, Tanmay wrote:
> Yes, I'm currently running the M1 release.
> Rabbit-sasl.log is empty and I also couldn't find stdout that you
> mentioned.

And there is nothing unusual in the rabbit.log either?

One useful debugging tool is the protocol tracer that comes as part of 
the RabbitMQ examples and is documented at
   http://www.rabbitmq.com/examples.html#tracer
This will show you what messages are being sent between the client and 
server and may reveal the cause of the problems you are seeing.

Btw, what Qpid client code were you running? One of the provided examples?

I have managed to get the Qpid's service{Providing,Requesting}Client.sh 
and topic{Listener,Publisher}.sh tests to run against RabbitMQ, but it 
did require some hacks to the broker code in order to work around the 
lack of access.request / realm / ticket handling in the QPid Java 
client. I will add these changes to RabbitMQ's "lax_mode" (as documented 
at http://www.rabbitmq.com/interoperability.html) in the next release.


Matthias



From matthias at lshift.net  Wed Aug 22 18:11:01 2007
From: matthias at lshift.net (Matthias Radestock)
Date: Wed, 22 Aug 2007 18:11:01 +0100
Subject: [rabbitmq-discuss] Problems while trying interoperability
In-Reply-To: <46CC6C13.5060802@lshift.net>
References: <DE8632162CB73D4CB22D1D15387409E413D3E1@scsmsx414.amr.corp.intel.com>	<46C3FE41.6050205@lshift.net>
	<DE8632162CB73D4CB22D1D15387409E413DF7A@scsmsx414.amr.corp.intel.com>
	<46CC6C13.5060802@lshift.net>
Message-ID: <46CC6E25.9050108@lshift.net>

Matthias Radestock wrote:

> And there is nothing unusual in the rabbit.log either?

Ah, I have just noticed that you attached the rabbit.log in your 
previous message.

This shows the error

VHost access refused: no mapping for User <<"guest">>, VHost <<"/data">>

Are you sure "/data" is the VHost you want to use? I am asking because 
"/data" is the name of a pre-defined realm so perhaps some of the 
connection parameters got mixed up.

Anyway, if you see the above error, and the VHost is correct, use 
rabbitmqctl to grant the user access to the VHost, e.g.

   rabbitmqctl map_user_vhost <username> <vhostpath>

and give the user appropriate permissions to access realm, usually the 
"/data" realm, e.g.

   rabbitmqctl set_permissions <username> <vhostpath> /data all


Regards,

Matthias.



From tanmay.goel at intel.com  Wed Aug 22 19:22:06 2007
From: tanmay.goel at intel.com (Goel, Tanmay)
Date: Wed, 22 Aug 2007 11:22:06 -0700
Subject: [rabbitmq-discuss] Reliability and AMQP
In-Reply-To: <167204d20708211644t4fbaf84bm4dfe5964bfcafee@mail.gmail.com>
References: <DE8632162CB73D4CB22D1D15387409E413DF90@scsmsx414.amr.corp.intel.com>
	<167204d20708211644t4fbaf84bm4dfe5964bfcafee@mail.gmail.com>
Message-ID: <DE8632162CB73D4CB22D1D15387409E413E254@scsmsx414.amr.corp.intel.com>

Hi Alexis, Matthias, 

Thanks for that information. I understand that 0-10 is not completely
finished. But, could you point me to the changes/proposal for reliable
messaging? Also, if there is a bullet list to the changes that have been
made/proposed for the 0-10 release, it'd be great if you could send it
to me or tell me where I can find that too. I would like to review the
scope of changes to reliable messaging, among other things like
transaction processing. For example, will the acknowledgement back to
the publisher feature provided for all types of messaging, like P2P,
Pub-sub, etc.

Thanks.

Regards,
Tanmay



-----Original Message-----
From: alexis.richardson at gmail.com [mailto:alexis.richardson at gmail.com]
On Behalf Of Alexis Richardson
Sent: Tuesday, August 21, 2007 4:44 PM
To: Goel, Tanmay
Cc: Matthias Radestock; rabbitmq-discuss at lists.rabbitmq.com
Subject: Re: [rabbitmq-discuss] Reliability and AMQP

Tanmay

The kind of reliability that you refer to will appear in AMQP 0-10.
We have been working on this or over six months, along with others
from the AMQP Working Group.  It's an important future enhancement to
AMQP, and to RabbitMQ, and one that we are all excited about.

Existing users will be able to continue using 0-8 and 0-9 (which is
almost the same as 0-8), but for those who need 'acks', that will
become a built-in feature of the spec, and of RabbitMQ.

The 0-10 draft is not strictly speaking for general consumption, as
you might expect with a work in progress.  But we welcome commentary
and it is an 'open' spec, so do please let me know if you would like
to get involved.

alexis



On 8/21/07, Goel, Tanmay <tanmay.goel at intel.com> wrote:
>
>
>
>
> Hi,
>
>
>
> So, I'm still trying to understand. There seems to be reliability
missing in
> the protocol. The protocol supports acknowledgements from the consumer
to
> the queue but there are no acks from the queue/broker back to the
publisher
> in any of the schemes (store-forward, pub-sub, etc). I mean, for
example,
> the publisher sends a series of 10K messages to the broker and one
message
> gets dropped/lost in the network before reaching the broker. The
publisher
> will not get an ack and the broker will never know the message was
supposed
> to come. Will problems of this sort be taken care of in the later
versions
> of the spec or am I missing reading something?
>
>
>
> Are you guys working with the 0.9 version of the spec or do you have a
copy
> of the 0.10 release since I couldn't find it online?
>
>
>
> Thanks.
>
>
>
> Regards,
>
> Tanmay
> _______________________________________________
> rabbitmq-discuss mailing list
> rabbitmq-discuss at lists.rabbitmq.com
> http://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss
>
>


-- 
Alexis Richardson
+44 20 7617 7339 (UK)
+44 77 9865 2911 (cell)
+1 650 206 2517 (US)



From alexis.richardson at cohesiveft.com  Wed Aug 22 21:51:10 2007
From: alexis.richardson at cohesiveft.com (Alexis Richardson)
Date: Wed, 22 Aug 2007 21:51:10 +0100
Subject: [rabbitmq-discuss] Reliability and AMQP
In-Reply-To: <DE8632162CB73D4CB22D1D15387409E413E254@scsmsx414.amr.corp.intel.com>
References: <DE8632162CB73D4CB22D1D15387409E413DF90@scsmsx414.amr.corp.intel.com>
	<167204d20708211644t4fbaf84bm4dfe5964bfcafee@mail.gmail.com>
	<DE8632162CB73D4CB22D1D15387409E413E254@scsmsx414.amr.corp.intel.com>
Message-ID: <167204d20708221351k52e2a5c9g242cb38daa91bb44@mail.gmail.com>

Tanmay

Acks will be provided for any publishing party with an appropriate
'session' (new in 0-10) with the AMQP broker.  All brokers and in
particular exchanges will be able to manage a session.

To answer your last question: both direct and topic based routing will
be available inside a session, and the broker will be able to ack p2p
type cases and various pub/sub type cases.  Thus, delegation from an
unreliable sender to a reliable client *will* work.

I.e.: "What goes in, must come out".

Messaging from broker to receiving parties will be analogous, but will
not in 0-10 deliver 'reliable multicast' as is normally understood in
the literature.  Look forward to multicast support being introduced
soon after.

I'll check with the WG on what I can show you from the current draft
of 0-10.  As I said, it's an open spec.

alexis





On 8/22/07, Goel, Tanmay <tanmay.goel at intel.com> wrote:
> Hi Alexis, Matthias,
>
> Thanks for that information. I understand that 0-10 is not completely
> finished. But, could you point me to the changes/proposal for reliable
> messaging? Also, if there is a bullet list to the changes that have been
> made/proposed for the 0-10 release, it'd be great if you could send it
> to me or tell me where I can find that too. I would like to review the
> scope of changes to reliable messaging, among other things like
> transaction processing. For example, will the acknowledgement back to
> the publisher feature provided for all types of messaging, like P2P,
> Pub-sub, etc.
>
> Thanks.
>
> Regards,
> Tanmay
>
>
>
> -----Original Message-----
> From: alexis.richardson at gmail.com [mailto:alexis.richardson at gmail.com]
> On Behalf Of Alexis Richardson
> Sent: Tuesday, August 21, 2007 4:44 PM
> To: Goel, Tanmay
> Cc: Matthias Radestock; rabbitmq-discuss at lists.rabbitmq.com
> Subject: Re: [rabbitmq-discuss] Reliability and AMQP
>
> Tanmay
>
> The kind of reliability that you refer to will appear in AMQP 0-10.
> We have been working on this or over six months, along with others
> from the AMQP Working Group.  It's an important future enhancement to
> AMQP, and to RabbitMQ, and one that we are all excited about.
>
> Existing users will be able to continue using 0-8 and 0-9 (which is
> almost the same as 0-8), but for those who need 'acks', that will
> become a built-in feature of the spec, and of RabbitMQ.
>
> The 0-10 draft is not strictly speaking for general consumption, as
> you might expect with a work in progress.  But we welcome commentary
> and it is an 'open' spec, so do please let me know if you would like
> to get involved.
>
> alexis
>
>
>
> On 8/21/07, Goel, Tanmay <tanmay.goel at intel.com> wrote:
> >
> >
> >
> >
> > Hi,
> >
> >
> >
> > So, I'm still trying to understand. There seems to be reliability
> missing in
> > the protocol. The protocol supports acknowledgements from the consumer
> to
> > the queue but there are no acks from the queue/broker back to the
> publisher
> > in any of the schemes (store-forward, pub-sub, etc). I mean, for
> example,
> > the publisher sends a series of 10K messages to the broker and one
> message
> > gets dropped/lost in the network before reaching the broker. The
> publisher
> > will not get an ack and the broker will never know the message was
> supposed
> > to come. Will problems of this sort be taken care of in the later
> versions
> > of the spec or am I missing reading something?
> >
> >
> >
> > Are you guys working with the 0.9 version of the spec or do you have a
> copy
> > of the 0.10 release since I couldn't find it online?
> >
> >
> >
> > Thanks.
> >
> >
> >
> > Regards,
> >
> > Tanmay
> > _______________________________________________
> > rabbitmq-discuss mailing list
> > rabbitmq-discuss at lists.rabbitmq.com
> > http://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss
> >
> >
>
>
> --
> Alexis Richardson
> +44 20 7617 7339 (UK)
> +44 77 9865 2911 (cell)
> +1 650 206 2517 (US)
>


-- 
Alexis Richardson
+44 20 7617 7339 (UK)
+44 77 9865 2911 (cell)
+1 650 206 2517 (US)



From alexis.richardson at cohesiveft.com  Wed Aug 22 23:05:46 2007
From: alexis.richardson at cohesiveft.com (Alexis Richardson)
Date: Wed, 22 Aug 2007 23:05:46 +0100
Subject: [rabbitmq-discuss] Reliability and AMQP
In-Reply-To: <167204d20708221351k52e2a5c9g242cb38daa91bb44@mail.gmail.com>
References: <DE8632162CB73D4CB22D1D15387409E413DF90@scsmsx414.amr.corp.intel.com>
	<167204d20708211644t4fbaf84bm4dfe5964bfcafee@mail.gmail.com>
	<DE8632162CB73D4CB22D1D15387409E413E254@scsmsx414.amr.corp.intel.com>
	<167204d20708221351k52e2a5c9g242cb38daa91bb44@mail.gmail.com>
Message-ID: <167204d20708221505s5c462e22k6f5039f83f1fffd8@mail.gmail.com>

Tanmay,

Here is the URL for the pre draft of 0-10, in subversion.  There is
also a JIRA and Wiki that I can help you with if needed.

https://svn.amqp.org/amqp/trunk/amqp_spec/amqp-spec-0-10-working.html

All,

This stuff is 'open' (eg: public, indexed by google) but please be
aware this is work in progress and changing quickly as we finalise it.
 I think the whole WG would appreciate it if people did not copy and
paste obviously draft text to casual passers by.  That said, as I have
stated, we *welcome* feedback and participation.  Talk to us.

alexis



On 8/22/07, Alexis Richardson <alexis.richardson at cohesiveft.com> wrote:
> Tanmay
>
> Acks will be provided for any publishing party with an appropriate
> 'session' (new in 0-10) with the AMQP broker.  All brokers and in
> particular exchanges will be able to manage a session.
>
> To answer your last question: both direct and topic based routing will
> be available inside a session, and the broker will be able to ack p2p
> type cases and various pub/sub type cases.  Thus, delegation from an
> unreliable sender to a reliable client *will* work.
>
> I.e.: "What goes in, must come out".
>
> Messaging from broker to receiving parties will be analogous, but will
> not in 0-10 deliver 'reliable multicast' as is normally understood in
> the literature.  Look forward to multicast support being introduced
> soon after.
>
> I'll check with the WG on what I can show you from the current draft
> of 0-10.  As I said, it's an open spec.
>
> alexis
>
>
>
>
>
> On 8/22/07, Goel, Tanmay <tanmay.goel at intel.com> wrote:
> > Hi Alexis, Matthias,
> >
> > Thanks for that information. I understand that 0-10 is not completely
> > finished. But, could you point me to the changes/proposal for reliable
> > messaging? Also, if there is a bullet list to the changes that have been
> > made/proposed for the 0-10 release, it'd be great if you could send it
> > to me or tell me where I can find that too. I would like to review the
> > scope of changes to reliable messaging, among other things like
> > transaction processing. For example, will the acknowledgement back to
> > the publisher feature provided for all types of messaging, like P2P,
> > Pub-sub, etc.
> >
> > Thanks.
> >
> > Regards,
> > Tanmay
> >
> >
> >
> > -----Original Message-----
> > From: alexis.richardson at gmail.com [mailto:alexis.richardson at gmail.com]
> > On Behalf Of Alexis Richardson
> > Sent: Tuesday, August 21, 2007 4:44 PM
> > To: Goel, Tanmay
> > Cc: Matthias Radestock; rabbitmq-discuss at lists.rabbitmq.com
> > Subject: Re: [rabbitmq-discuss] Reliability and AMQP
> >
> > Tanmay
> >
> > The kind of reliability that you refer to will appear in AMQP 0-10.
> > We have been working on this or over six months, along with others
> > from the AMQP Working Group.  It's an important future enhancement to
> > AMQP, and to RabbitMQ, and one that we are all excited about.
> >
> > Existing users will be able to continue using 0-8 and 0-9 (which is
> > almost the same as 0-8), but for those who need 'acks', that will
> > become a built-in feature of the spec, and of RabbitMQ.
> >
> > The 0-10 draft is not strictly speaking for general consumption, as
> > you might expect with a work in progress.  But we welcome commentary
> > and it is an 'open' spec, so do please let me know if you would like
> > to get involved.
> >
> > alexis
> >
> >
> >
> > On 8/21/07, Goel, Tanmay <tanmay.goel at intel.com> wrote:
> > >
> > >
> > >
> > >
> > > Hi,
> > >
> > >
> > >
> > > So, I'm still trying to understand. There seems to be reliability
> > missing in
> > > the protocol. The protocol supports acknowledgements from the consumer
> > to
> > > the queue but there are no acks from the queue/broker back to the
> > publisher
> > > in any of the schemes (store-forward, pub-sub, etc). I mean, for
> > example,
> > > the publisher sends a series of 10K messages to the broker and one
> > message
> > > gets dropped/lost in the network before reaching the broker. The
> > publisher
> > > will not get an ack and the broker will never know the message was
> > supposed
> > > to come. Will problems of this sort be taken care of in the later
> > versions
> > > of the spec or am I missing reading something?
> > >
> > >
> > >
> > > Are you guys working with the 0.9 version of the spec or do you have a
> > copy
> > > of the 0.10 release since I couldn't find it online?
> > >
> > >
> > >
> > > Thanks.
> > >
> > >
> > >
> > > Regards,
> > >
> > > Tanmay
> > > _______________________________________________
> > > rabbitmq-discuss mailing list
> > > rabbitmq-discuss at lists.rabbitmq.com
> > > http://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss
> > >
> > >
> >
> >
> > --
> > Alexis Richardson
> > +44 20 7617 7339 (UK)
> > +44 77 9865 2911 (cell)
> > +1 650 206 2517 (US)
> >
>
>
> --
> Alexis Richardson
> +44 20 7617 7339 (UK)
> +44 77 9865 2911 (cell)
> +1 650 206 2517 (US)
>


-- 
Alexis Richardson
+44 20 7617 7339 (UK)
+44 77 9865 2911 (cell)
+1 650 206 2517 (US)



From sustrik at imatix.com  Thu Aug 23 14:05:20 2007
From: sustrik at imatix.com (Martin Sustrik)
Date: Thu, 23 Aug 2007 15:05:20 +0200
Subject: [rabbitmq-discuss] AMQP v0-9
Message-ID: <46CD8610.8000604@imatix.com>

Matthias,

We've had OpenAMQ/RabbitMQ compatibility issue raised once more on 
OpenAMQ mailing list:

"And one more important thing that we identified was  interoperability 
of the brokers. say for example unlike the other middleware systems, 
AMQP defines the protocol itself we should be able to send the messages 
written in OpenAMQ client to RabitMQ server and vice versa. But with the 
current implementations we cant do it. If you all can address that it 
will be nice."

We've had discussion about this issue some time ago and at that point it 
was unclear whether you are going to support 0-9 version of the 
protocol. Was there any decision made meanwhile?

Martin



From dvrsn at diphi.com  Thu Aug 23 18:35:10 2007
From: dvrsn at diphi.com (Jeff Rogers)
Date: Thu, 23 Aug 2007 10:35:10 -0700
Subject: [rabbitmq-discuss] Python Client for RabbitMQ/AMQP?
In-Reply-To: <167204d20708140120s2d105bf7ud91467dbaa27bdb6@mail.gmail.com>
References: <6C9F6144-557F-470A-A32D-26288C517860@hudora.de>	<269388e30708132322n74837025xdf9229dc6d933372@mail.gmail.com>	<fde171c00708140107y58065ab5m6b6a7e09a040eb33@mail.gmail.com>
	<167204d20708140120s2d105bf7ud91467dbaa27bdb6@mail.gmail.com>
Message-ID: <46CDC54E.4000803@diphi.com>

Alexis Richardson wrote:

> BUT - modulo the spec version, any client should interoperate with any broker.

I'm not sure if it is the differences in spec version or just
incompletely or differently implemented servers but my limited
experience has not borne this out.  I was working on a tcl client and
ran into a number of small but annoying differences in how rabbitmq and
OpenAMQ deal with things.  For example, rabbitmq requires an
access.request call before accessing anything while openamq doesn't
implement access.request at all and gives you a channel error if you
even make the call.  On the side of rabbitmq doing things wrong, the
authentication is completely screwy - the server response says that it
only supports PLAIN authentication but the server only implements AMQPLAIN.

Maybe this just points out a need for multiple independent clients to
test against;  particularly in the case of the authentication rabbitmq
seems to be making specific allowances for qpid even tho it appears qpid
is not following the spec exactly.

-J




From alexis.richardson at cohesiveft.com  Thu Aug 23 18:38:18 2007
From: alexis.richardson at cohesiveft.com (Alexis Richardson)
Date: Thu, 23 Aug 2007 18:38:18 +0100
Subject: [rabbitmq-discuss] Python Client for RabbitMQ/AMQP?
In-Reply-To: <46CDC54E.4000803@diphi.com>
References: <6C9F6144-557F-470A-A32D-26288C517860@hudora.de>
	<269388e30708132322n74837025xdf9229dc6d933372@mail.gmail.com>
	<fde171c00708140107y58065ab5m6b6a7e09a040eb33@mail.gmail.com>
	<167204d20708140120s2d105bf7ud91467dbaa27bdb6@mail.gmail.com>
	<46CDC54E.4000803@diphi.com>
Message-ID: <167204d20708231038hcabee3bp9b6be867b2c6209b@mail.gmail.com>

Jeff

We want to fix this.  Do you have any other examples of mismatch
between OpenAMQ and RabbitMQ?

I think we've managed to nail down the ones for Qpid -- Matthias any comments?

alexis



On 8/23/07, Jeff Rogers <dvrsn at diphi.com> wrote:
> Alexis Richardson wrote:
>
> > BUT - modulo the spec version, any client should interoperate with any broker.
>
> I'm not sure if it is the differences in spec version or just
> incompletely or differently implemented servers but my limited
> experience has not borne this out.  I was working on a tcl client and
> ran into a number of small but annoying differences in how rabbitmq and
> OpenAMQ deal with things.  For example, rabbitmq requires an
> access.request call before accessing anything while openamq doesn't
> implement access.request at all and gives you a channel error if you
> even make the call.  On the side of rabbitmq doing things wrong, the
> authentication is completely screwy - the server response says that it
> only supports PLAIN authentication but the server only implements AMQPLAIN.
>
> Maybe this just points out a need for multiple independent clients to
> test against;  particularly in the case of the authentication rabbitmq
> seems to be making specific allowances for qpid even tho it appears qpid
> is not following the spec exactly.
>
> -J
>
>
> _______________________________________________
> rabbitmq-discuss mailing list
> rabbitmq-discuss at lists.rabbitmq.com
> http://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss
>


-- 
Alexis Richardson
+44 20 7617 7339 (UK)
+44 77 9865 2911 (cell)
+1 650 206 2517 (US)



From dvrsn at diphi.com  Thu Aug 23 19:08:36 2007
From: dvrsn at diphi.com (Jeff Rogers)
Date: Thu, 23 Aug 2007 11:08:36 -0700
Subject: [rabbitmq-discuss] Python Client for RabbitMQ/AMQP?
In-Reply-To: <167204d20708231038hcabee3bp9b6be867b2c6209b@mail.gmail.com>
References: <6C9F6144-557F-470A-A32D-26288C517860@hudora.de>	
	<269388e30708132322n74837025xdf9229dc6d933372@mail.gmail.com>	
	<fde171c00708140107y58065ab5m6b6a7e09a040eb33@mail.gmail.com>	
	<167204d20708140120s2d105bf7ud91467dbaa27bdb6@mail.gmail.com>	
	<46CDC54E.4000803@diphi.com>
	<167204d20708231038hcabee3bp9b6be867b2c6209b@mail.gmail.com>
Message-ID: <46CDCD24.4050509@diphi.com>

Alexis Richardson wrote:
> Jeff
> 
> We want to fix this.  Do you have any other examples of mismatch
> between OpenAMQ and RabbitMQ?

I don't recall any others off the top of my head.    I think OpemAMQ 
doesn't implement persistence across broker restarts but that is a 
design decision and doesn't affect what clients need to do.

For the client at least, most of the differences between 8.0 (0.8 has 
the major/minor version swapped in the xml file) and 0.9 are handled by 
just swapping the automatically generated framing definitions file.

-J



From matthias at lshift.net  Thu Aug 23 19:09:15 2007
From: matthias at lshift.net (Matthias Radestock)
Date: Thu, 23 Aug 2007 19:09:15 +0100
Subject: [rabbitmq-discuss] Python Client for RabbitMQ/AMQP?
In-Reply-To: <167204d20708231038hcabee3bp9b6be867b2c6209b@mail.gmail.com>
References: <6C9F6144-557F-470A-A32D-26288C517860@hudora.de>	<269388e30708132322n74837025xdf9229dc6d933372@mail.gmail.com>	<fde171c00708140107y58065ab5m6b6a7e09a040eb33@mail.gmail.com>	<167204d20708140120s2d105bf7ud91467dbaa27bdb6@mail.gmail.com>	<46CDC54E.4000803@diphi.com>
	<167204d20708231038hcabee3bp9b6be867b2c6209b@mail.gmail.com>
Message-ID: <46CDCD4B.8050402@lshift.net>

Alexis Richardson wrote:

> We want to fix this.  Do you have any other examples of mismatch
> between OpenAMQ and RabbitMQ?

I thought OpenAMQ implements 0-9.

> I think we've managed to nail down the ones for Qpid -- Matthias any comments?

Interop with the Java client and server of Qpid's M1 release is working 
now. It required a few tweaks, which will be in the next RabbitMQ release.

 >> For example, rabbitmq requires an
 >> access.request call before accessing anything while openamq doesn't
 >> implement access.request at all and gives you a channel error if you
 >> even make the call.

Looks like OpenAMQ behaves the same as Qpid in this regard, so the hacks 
we put in place to work with the latter should also work for OpenAMQ.

 >> On the side of rabbitmq doing things wrong, the
 >> authentication is completely screwy - the server response says that
 >> it only supports PLAIN authentication but the server only implements
 >> AMQPLAIN.
 >> [...]
 >> particularly in the case of the authentication rabbitmq
 >> seems to be making specific allowances for qpid even tho it appears
 >> qpid is not following the spec exactly.

We have hacked the PLAIN authentication to match Qpids. Our AMQPLAIN 
authentication is what the spec defines as PLAIN authentication.

Is OpenAMQ doing PLAIN authentication in conformance with the spec?

If so, the only way I can think of addressing the discrepancy at our end 
is to check what client is trying to connect to the RabbitMQ server and 
make PLAIN auth behave accordingly. Same in our client code. That's 
rather gross and brittle though.

Does anybody know how things are looking on the OpenAMQ <-> Qpid interop 
front?


matthias.



From dvrsn at diphi.com  Thu Aug 23 19:57:20 2007
From: dvrsn at diphi.com (Jeff Rogers)
Date: Thu, 23 Aug 2007 11:57:20 -0700
Subject: [rabbitmq-discuss] Python Client for RabbitMQ/AMQP?
In-Reply-To: <46CDCD4B.8050402@lshift.net>
References: <6C9F6144-557F-470A-A32D-26288C517860@hudora.de>	<269388e30708132322n74837025xdf9229dc6d933372@mail.gmail.com>	<fde171c00708140107y58065ab5m6b6a7e09a040eb33@mail.gmail.com>	<167204d20708140120s2d105bf7ud91467dbaa27bdb6@mail.gmail.com>	<46CDC54E.4000803@diphi.com>
	<167204d20708231038hcabee3bp9b6be867b2c6209b@mail.gmail.com>
	<46CDCD4B.8050402@lshift.net>
Message-ID: <46CDD890.8090908@diphi.com>

Matthias Radestock wrote:
> Alexis Richardson wrote:
> 
>> We want to fix this.  Do you have any other examples of mismatch
>> between OpenAMQ and RabbitMQ?
> 
> I thought OpenAMQ implements 0-9.
>
>  >> On the side of rabbitmq doing things wrong, the
>  >> authentication is completely screwy - the server response says that
>  >> it only supports PLAIN authentication but the server only implements
>  >> AMQPLAIN.
>  >> [...]
>  >> particularly in the case of the authentication rabbitmq
>  >> seems to be making specific allowances for qpid even tho it appears
>  >> qpid is not following the spec exactly.
> 
> We have hacked the PLAIN authentication to match Qpids. Our AMQPLAIN 
> authentication is what the spec defines as PLAIN authentication.
> 
> Is OpenAMQ doing PLAIN authentication in conformance with the spec?
> 
> If so, the only way I can think of addressing the discrepancy at our end 
> is to check what client is trying to connect to the RabbitMQ server and 
> make PLAIN auth behave accordingly. Same in our client code. That's 
> rather gross and brittle though.

I think part of the problem is that the 0.8 spec is confusing on this 
point.  It says:
"The contents of this data are defined by the SASL security 
mechanism.For the PLAIN security mechanism this is defined as a field 
table holding two fields,LOGIN and PASSWORD."

However, SASL also defines a mechanism called PLAIN in rfc4616 which is
    message   = [authzid] UTF8NUL authcid UTF8NUL passwd
This is what OpenAMQ implements as PLAIN and probably what qpid is doing 
also (I have a vague recollection that qpid incorrectly leaves off the 
initial null but that may be bad memory on my part).

So which PLAIN is PLAIN?  Considering that the security is specified in 
several places as using SASL mechanisms and that language about a 
LOGIN/PASSWORD field table has been dropped in the 0.9 spec, I think the 
SASL PLAIN mechanism is the right one to follow.

Confusion in the spec notwithstanding, my bigger gripe about how 
rabbitmq is handling it is that the AMQPLAIN method is not advertised at 
all in the connection.start call, so any use of it is going to be well, 
gross and brittle as you say.

ejabberd appears to have implementations of SASL-PLAIN and 
SASL-DIGEST-MD5 - I wonder if it would be worth adapting their code.

-J



From matthias at lshift.net  Thu Aug 23 20:14:09 2007
From: matthias at lshift.net (Matthias Radestock)
Date: Thu, 23 Aug 2007 20:14:09 +0100
Subject: [rabbitmq-discuss] Python Client for RabbitMQ/AMQP?
In-Reply-To: <46CDD890.8090908@diphi.com>
References: <6C9F6144-557F-470A-A32D-26288C517860@hudora.de>	<269388e30708132322n74837025xdf9229dc6d933372@mail.gmail.com>	<fde171c00708140107y58065ab5m6b6a7e09a040eb33@mail.gmail.com>	<167204d20708140120s2d105bf7ud91467dbaa27bdb6@mail.gmail.com>	<46CDC54E.4000803@diphi.com>	<167204d20708231038hcabee3bp9b6be867b2c6209b@mail.gmail.com>	<46CDCD4B.8050402@lshift.net>
	<46CDD890.8090908@diphi.com>
Message-ID: <46CDDC81.50908@lshift.net>

Jeff,

Jeff Rogers wrote:
> I think part of the problem is that the 0.8 spec is confusing on this 
> point.  It says:
> "The contents of this data are defined by the SASL security 
> mechanism.For the PLAIN security mechanism this is defined as a field 
> table holding two fields,LOGIN and PASSWORD."
> 
> However, SASL also defines a mechanism called PLAIN in rfc4616 which is
>    message   = [authzid] UTF8NUL authcid UTF8NUL passwd
> This is what OpenAMQ implements as PLAIN and probably what qpid is doing 
> also (I have a vague recollection that qpid incorrectly leaves off the 
> initial null but that may be bad memory on my part).

So it looks like OpenAMQ, Qpid, and RabbitMQ all use the SASL 
definition, in which case there should be no interop problems in this 
particular area, right?

> So which PLAIN is PLAIN?  Considering that the security is specified in 
> several places as using SASL mechanisms and that language about a 
> LOGIN/PASSWORD field table has been dropped in the 0.9 spec, I think the 
> SASL PLAIN mechanism is the right one to follow.

Agreed.

> Confusion in the spec notwithstanding, my bigger gripe about how 
> rabbitmq is handling it is that the AMQPLAIN method is not advertised at 
> all in the connection.start call, so any use of it is going to be well, 
> gross and brittle as you say.

Given the above, I am tempted to simply remove AMQPLAIN.


Matthias.



From sustrik at imatix.com  Thu Aug 23 20:28:59 2007
From: sustrik at imatix.com (Martin Sustrik)
Date: Thu, 23 Aug 2007 21:28:59 +0200
Subject: [rabbitmq-discuss] Python Client for RabbitMQ/AMQP?
In-Reply-To: <46CDCD24.4050509@diphi.com>
References: <6C9F6144-557F-470A-A32D-26288C517860@hudora.de>		<269388e30708132322n74837025xdf9229dc6d933372@mail.gmail.com>		<fde171c00708140107y58065ab5m6b6a7e09a040eb33@mail.gmail.com>		<167204d20708140120s2d105bf7ud91467dbaa27bdb6@mail.gmail.com>		<46CDC54E.4000803@diphi.com>	<167204d20708231038hcabee3bp9b6be867b2c6209b@mail.gmail.com>
	<46CDCD24.4050509@diphi.com>
Message-ID: <46CDDFFB.7060306@imatix.com>


> I don't recall any others off the top of my head.    I think OpemAMQ 
> doesn't implement persistence across broker restarts but that is a 
> design decision and doesn't affect what clients need to do.
> 
> For the client at least, most of the differences between 8.0 (0.8 has 
> the major/minor version swapped in the xml file) and 0.9 are handled by 
> just swapping the automatically generated framing definitions file.

This 0.8/0.9 thing is quite annoying... We would even revert to 0.8 to 
get compatibility with RabbitMQ and Qpid, but we desperately need 
Queue.Unbind which was added only in 0.9. Without Queue.Unbind we would 
face severe performance problems in production :(

Sorry about that.

Martin (OpenAMQ team)



From matthias at lshift.net  Thu Aug 23 20:55:07 2007
From: matthias at lshift.net (Matthias Radestock)
Date: Thu, 23 Aug 2007 20:55:07 +0100
Subject: [rabbitmq-discuss] AMQP v0-9
In-Reply-To: <46CD8610.8000604@imatix.com>
References: <46CD8610.8000604@imatix.com>
Message-ID: <46CDE61B.1060203@lshift.net>

Martin,

Martin Sustrik wrote:
> We've had OpenAMQ/RabbitMQ compatibility issue raised once more on 
> OpenAMQ mailing list:
> [...]
> We've had discussion about this issue some time ago and at that point it 
> was unclear whether you are going to support 0-9 version of the 
> protocol. Was there any decision made meanwhile?

I am trying to figure out how to best get RabbitMQ to interop with both 
Qpid and OpenAMQ. As you may have seen from the other messages, we've 
made some tweaks to get interop with Qpid M1 to work, and will release 
those shortly.

The question is, if we move RabbitMQ to 0-9 in order to get interop with 
OpenAMQ, how do we maintain interop with Qpid?

Are we going to have to have code that supports both 0-8 and 0-9 and 
picks the right one during connection negotiation? That is certainly 
possible, but it is quite a bit of work that I'd rather avoid.


Matthias.



From rob.j.godfrey at gmail.com  Thu Aug 23 20:59:06 2007
From: rob.j.godfrey at gmail.com (Robert Godfrey)
Date: Thu, 23 Aug 2007 20:59:06 +0100
Subject: [rabbitmq-discuss] Python Client for RabbitMQ/AMQP?
In-Reply-To: <46CDDFFB.7060306@imatix.com>
References: <6C9F6144-557F-470A-A32D-26288C517860@hudora.de>
	<269388e30708132322n74837025xdf9229dc6d933372@mail.gmail.com>
	<fde171c00708140107y58065ab5m6b6a7e09a040eb33@mail.gmail.com>
	<167204d20708140120s2d105bf7ud91467dbaa27bdb6@mail.gmail.com>
	<46CDC54E.4000803@diphi.com>
	<167204d20708231038hcabee3bp9b6be867b2c6209b@mail.gmail.com>
	<46CDCD24.4050509@diphi.com> <46CDDFFB.7060306@imatix.com>
Message-ID: <fde171c00708231259n33fabdb4xe57546e9c402e654@mail.gmail.com>

I was thinking that I could probably get the Java Qpid broker to support
AMQP 0-9 (non-WIP) if there is demand.  For the production uses of Qpid that
I know about 0-8 is all that will be used however.

Martin - does OpenAMQ still accept clients wanting to talk 0-8 to it?  I
can't remember any changes off the top of my head between 0-8 and 0-9
(non-WIP) that would prevent a 0-9 broker from accepting communication from
a 0-8 client [sorry for hijacking a Rabbit-MQ list for a Qpid / OpenAMQ
question].

Thanks,
Rob

On 23/08/07, Martin Sustrik <sustrik at imatix.com> wrote:
>
>
> > I don't recall any others off the top of my head.    I think OpemAMQ
> > doesn't implement persistence across broker restarts but that is a
> > design decision and doesn't affect what clients need to do.
> >
> > For the client at least, most of the differences between 8.0 (0.8 has
> > the major/minor version swapped in the xml file) and 0.9 are handled by
> > just swapping the automatically generated framing definitions file.
>
> This 0.8/0.9 thing is quite annoying... We would even revert to 0.8 to
> get compatibility with RabbitMQ and Qpid, but we desperately need
> Queue.Unbind which was added only in 0.9. Without Queue.Unbind we would
> face severe performance problems in production :(
>
> Sorry about that.
>
> Martin (OpenAMQ team)
>
> _______________________________________________
> rabbitmq-discuss mailing list
> rabbitmq-discuss at lists.rabbitmq.com
> http://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20070823/d2c26823/attachment.htm 

From rob.j.godfrey at gmail.com  Thu Aug 23 21:03:04 2007
From: rob.j.godfrey at gmail.com (Robert Godfrey)
Date: Thu, 23 Aug 2007 21:03:04 +0100
Subject: [rabbitmq-discuss] AMQP v0-9
In-Reply-To: <46CDE61B.1060203@lshift.net>
References: <46CD8610.8000604@imatix.com> <46CDE61B.1060203@lshift.net>
Message-ID: <fde171c00708231303m65a9cfc8v68b3ef4062c4a635@mail.gmail.com>

My feeling is that any broker that supports 0-9 (non-WIP) should be able to
also trivially support 0-8... So as long as our broker and client code
follow the spec on how to negotiate version then we should be able to get
interoperability.  In Qpid the Java simply didn't move forward to 0-9 (non
WIP) as there wasn't a demand...  A lot of work was done on the C++ side for
the 0-9 WIP proposals, but these have been superceded by the 0-10
proposals.

-- Rob

On 23/08/07, Matthias Radestock <matthias at lshift.net> wrote:
>
> Martin,
>
> Martin Sustrik wrote:
> > We've had OpenAMQ/RabbitMQ compatibility issue raised once more on
> > OpenAMQ mailing list:
> > [...]
> > We've had discussion about this issue some time ago and at that point it
> > was unclear whether you are going to support 0-9 version of the
> > protocol. Was there any decision made meanwhile?
>
> I am trying to figure out how to best get RabbitMQ to interop with both
> Qpid and OpenAMQ. As you may have seen from the other messages, we've
> made some tweaks to get interop with Qpid M1 to work, and will release
> those shortly.
>
> The question is, if we move RabbitMQ to 0-9 in order to get interop with
> OpenAMQ, how do we maintain interop with Qpid?
>
> Are we going to have to have code that supports both 0-8 and 0-9 and
> picks the right one during connection negotiation? That is certainly
> possible, but it is quite a bit of work that I'd rather avoid.
>
>
> Matthias.
>
> _______________________________________________
> rabbitmq-discuss mailing list
> rabbitmq-discuss at lists.rabbitmq.com
> http://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20070823/8996f860/attachment.htm 

From matthias at lshift.net  Thu Aug 23 21:14:36 2007
From: matthias at lshift.net (Matthias Radestock)
Date: Thu, 23 Aug 2007 21:14:36 +0100
Subject: [rabbitmq-discuss] AMQP v0-9
In-Reply-To: <fde171c00708231303m65a9cfc8v68b3ef4062c4a635@mail.gmail.com>
References: <46CD8610.8000604@imatix.com> <46CDE61B.1060203@lshift.net>
	<fde171c00708231303m65a9cfc8v68b3ef4062c4a635@mail.gmail.com>
Message-ID: <46CDEAAC.8060505@lshift.net>

Robert Godfrey wrote:
> My feeling is that any broker that supports 0-9 (non-WIP) should be able 
> to also trivially support 0-8.

It's not that easy, unfortunately. 0-9 makes some changes to existing 
methods. For example, channel.open-ok gets an additional channel-id 
field, and basic.consume gets an additional filter field. If, like us, 
you are auto-generating the codec from the spec then this poses a problem.

Matthias.



From sustrik at imatix.com  Thu Aug 23 21:20:09 2007
From: sustrik at imatix.com (Martin Sustrik)
Date: Thu, 23 Aug 2007 22:20:09 +0200
Subject: [rabbitmq-discuss] [Fwd: Re:  Python Client for RabbitMQ/AMQP?]
Message-ID: <46CDEBF9.1080704@imatix.com>


-------------- next part --------------
An embedded message was scrubbed...
From: Martin Sustrik <sustrik at imatix.com>
Subject: Re: [rabbitmq-discuss] Python Client for RabbitMQ/AMQP?
Date: Thu, 23 Aug 2007 22:17:57 +0200
Size: 2534
Url: http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20070823/d8cb04aa/attachment.eml 

From rob.j.godfrey at gmail.com  Thu Aug 23 21:36:15 2007
From: rob.j.godfrey at gmail.com (Robert Godfrey)
Date: Thu, 23 Aug 2007 21:36:15 +0100
Subject: [rabbitmq-discuss] AMQP v0-9
In-Reply-To: <46CDEAAC.8060505@lshift.net>
References: <46CD8610.8000604@imatix.com> <46CDE61B.1060203@lshift.net>
	<fde171c00708231303m65a9cfc8v68b3ef4062c4a635@mail.gmail.com>
	<46CDEAAC.8060505@lshift.net>
Message-ID: <fde171c00708231336t6d38f5bcj91e963faa8f2a82f@mail.gmail.com>

On 23/08/07, Matthias Radestock <matthias at lshift.net> wrote:
>
> Robert Godfrey wrote:
> > My feeling is that any broker that supports 0-9 (non-WIP) should be able
> > to also trivially support 0-8.
>
> It's not that easy, unfortunately. 0-9 makes some changes to existing
> methods. For example, channel.open-ok gets an additional channel-id
> field, and basic.consume gets an additional filter field. If, like us,
> you are auto-generating the codec from the spec then this poses a problem.



Qpid auto generates code from the spec, but with changes this small I would
think we could work in a few bits of non-generated code to support both
versions.  Given the degree of change in 0-10 I'm not wanting to expend much
effort on 0-9 - but I think that having 0-9 compatability at the broker
really shouldn't be a big deal (it may not be able to be done with
particular beauty though).  [For instance I think Qpid actually already has
the basic.consume filter argument].

Given Martin's claim that it took them 1 day to implement the changes... i
would think that it should be possible for Qpid (and Rabbit if you like) to
have versions that work with both protocol revisions.  However the real
focus will be on getting 0-10 implemented.


-- Rob

Matthias.
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20070823/9f0e9972/attachment.htm 

From matthias at lshift.net  Thu Aug 23 21:42:19 2007
From: matthias at lshift.net (Matthias Radestock)
Date: Thu, 23 Aug 2007 21:42:19 +0100
Subject: [rabbitmq-discuss] [Fwd: Re: Python Client for RabbitMQ/AMQP?]
In-Reply-To: <46CDEBF9.1080704@imatix.com>
References: <46CDEBF9.1080704@imatix.com>
Message-ID: <46CDF12B.60504@lshift.net>

Martin Sustrik wrote:
> 1. There was channel-id parameter added to channel.open-ok.
> 2. Few methods have changed IDs.
> 3. Matching algorithm for headers exchange was changes slightly.
> 4. New parameter to Basic.Consume (not used).
> 5. Maybe something similarly simple here... I don't recall exactly.

There are also two new error codes - 'no-route' and 'no-consumers', 
which need to be used in place of more generic errors in 0-8.

> What about defining the minimal set of changes to 0.8 (like the five 
> points above) all of us have to do to get 0.9 (sans WIP) and implement 
> that. That way we would all be interoperable and nobody would have to 
> support 2 different versions of the protocol.

I like that idea.

We'd need to do a careful comparison of the *text* of the spec. Things 
like new methods and fields are easy to spot and easy to implement (at 
least as stubs), but subtle changes/clarifications to the semantics are 
much harder to identify.


Matthias.



From ritchiem at apache.org  Thu Aug 23 21:44:14 2007
From: ritchiem at apache.org (Martin Ritchie)
Date: Thu, 23 Aug 2007 21:44:14 +0100
Subject: [rabbitmq-discuss] Python Client for RabbitMQ/AMQP?
In-Reply-To: <167204d20708231038hcabee3bp9b6be867b2c6209b@mail.gmail.com>
References: <6C9F6144-557F-470A-A32D-26288C517860@hudora.de>
	<269388e30708132322n74837025xdf9229dc6d933372@mail.gmail.com>
	<fde171c00708140107y58065ab5m6b6a7e09a040eb33@mail.gmail.com>
	<167204d20708140120s2d105bf7ud91467dbaa27bdb6@mail.gmail.com>
	<46CDC54E.4000803@diphi.com>
	<167204d20708231038hcabee3bp9b6be867b2c6209b@mail.gmail.com>
Message-ID: <99e30fe50708231344j4a3c6aem9f3b6bdc308100a9@mail.gmail.com>

Alexis,

I'd be very interested in your list of mismatches with Qpid. I know
the Qpid Java client deviates from the AMQP spec to fully be JMS
compliant but I did add a property AMQP_STRICT which should turn all
that off so you can use the JMS client that will fit on the standard
0_8 AMQP. If there is somthing I have missed then I will gladly fix
it.

Our long over due M2 release will be available with the next week or
so. If you have been working with M1 then this is a major leap
forward.

I think it is great that our different groups can write clients and
brokers and use each others clients/test suites to validate our own
work.

Cheers

On 23/08/07, Alexis Richardson <alexis.richardson at cohesiveft.com> wrote:
> Jeff
>
> We want to fix this.  Do you have any other examples of mismatch
> between OpenAMQ and RabbitMQ?
>
> I think we've managed to nail down the ones for Qpid -- Matthias any comments?
>
> alexis
>
>
>
> On 8/23/07, Jeff Rogers <dvrsn at diphi.com> wrote:
> > Alexis Richardson wrote:
> >
> > > BUT - modulo the spec version, any client should interoperate with any broker.
> >
> > I'm not sure if it is the differences in spec version or just
> > incompletely or differently implemented servers but my limited
> > experience has not borne this out.  I was working on a tcl client and
> > ran into a number of small but annoying differences in how rabbitmq and
> > OpenAMQ deal with things.  For example, rabbitmq requires an
> > access.request call before accessing anything while openamq doesn't
> > implement access.request at all and gives you a channel error if you
> > even make the call.  On the side of rabbitmq doing things wrong, the
> > authentication is completely screwy - the server response says that it
> > only supports PLAIN authentication but the server only implements AMQPLAIN.
> >
> > Maybe this just points out a need for multiple independent clients to
> > test against;  particularly in the case of the authentication rabbitmq
> > seems to be making specific allowances for qpid even tho it appears qpid
> > is not following the spec exactly.
> >
> > -J
> >
> >
> > _______________________________________________
> > rabbitmq-discuss mailing list
> > rabbitmq-discuss at lists.rabbitmq.com
> > http://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss
> >
>
>
> --
> Alexis Richardson
> +44 20 7617 7339 (UK)
> +44 77 9865 2911 (cell)
> +1 650 206 2517 (US)
>
> _______________________________________________
> rabbitmq-discuss mailing list
> rabbitmq-discuss at lists.rabbitmq.com
> http://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss
>


-- 
Martin Ritchie



From matthias at lshift.net  Thu Aug 23 22:03:50 2007
From: matthias at lshift.net (Matthias Radestock)
Date: Thu, 23 Aug 2007 22:03:50 +0100
Subject: [rabbitmq-discuss] basic.consume filter arg [was: Re: AMQP v0-9]
In-Reply-To: <fde171c00708231336t6d38f5bcj91e963faa8f2a82f@mail.gmail.com>
References: <46CD8610.8000604@imatix.com>
	<46CDE61B.1060203@lshift.net>	<fde171c00708231303m65a9cfc8v68b3ef4062c4a635@mail.gmail.com>	<46CDEAAC.8060505@lshift.net>
	<fde171c00708231336t6d38f5bcj91e963faa8f2a82f@mail.gmail.com>
Message-ID: <46CDF636.6040807@lshift.net>

Robert Godfrey wrote:
>[For instance I think Qpid actually 
> already has the basic.consume filter argument].

When you say "already", do you mean in M1? I have been working with the 
Qpid M1 source distribution and the auto-generated codec there certainly 
does not have the additional arg. Perhaps the binary distributions do?

Can you find out? I am asking because I want to make sure I am not 
missing something in my interop testing.

I know that the 0-8 spec in the current Qpid svn repo is different from 
the official spec, and the addtional arg to basic.consume is part of that.

What flavour of the 0-8 spec will the M2 release be based on?


Matthias.



From chime at wiinz.com  Thu Aug 23 21:45:53 2007
From: chime at wiinz.com (Michael Arnoldus)
Date: Thu, 23 Aug 2007 22:45:53 +0200
Subject: [rabbitmq-discuss] [Fwd: Re: Python Client for RabbitMQ/AMQP?]
In-Reply-To: <46CDF12B.60504@lshift.net>
References: <46CDEBF9.1080704@imatix.com> <46CDF12B.60504@lshift.net>
Message-ID: <942904B6-E38E-4D09-83BC-6E29FF96BD30@wiinz.com>

Guys,

I cannot tell you how happy I am to see you discussing and taking  
this interop thing so seriously. It just make me think I have made  
the right choice going with AMQP at this point in time. Thank you so  
much!!!

Michael Arnoldus

Den 23/08/2007 kl. 22.42 skrev Matthias Radestock:

> Martin Sustrik wrote:
>> 1. There was channel-id parameter added to channel.open-ok.
>> 2. Few methods have changed IDs.
>> 3. Matching algorithm for headers exchange was changes slightly.
>> 4. New parameter to Basic.Consume (not used).
>> 5. Maybe something similarly simple here... I don't recall exactly.
>
> There are also two new error codes - 'no-route' and 'no-consumers',
> which need to be used in place of more generic errors in 0-8.
>
>> What about defining the minimal set of changes to 0.8 (like the five
>> points above) all of us have to do to get 0.9 (sans WIP) and  
>> implement
>> that. That way we would all be interoperable and nobody would have to
>> support 2 different versions of the protocol.
>
> I like that idea.
>
> We'd need to do a careful comparison of the *text* of the spec. Things
> like new methods and fields are easy to spot and easy to implement (at
> least as stubs), but subtle changes/clarifications to the semantics  
> are
> much harder to identify.
>
>
> Matthias.
>
> _______________________________________________
> rabbitmq-discuss mailing list
> rabbitmq-discuss at lists.rabbitmq.com
> http://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss




From alexis.richardson at cohesiveft.com  Thu Aug 23 22:38:19 2007
From: alexis.richardson at cohesiveft.com (Alexis Richardson)
Date: Thu, 23 Aug 2007 22:38:19 +0100
Subject: [rabbitmq-discuss] AMQP v0-9
In-Reply-To: <fde171c00708231336t6d38f5bcj91e963faa8f2a82f@mail.gmail.com>
References: <46CD8610.8000604@imatix.com> <46CDE61B.1060203@lshift.net>
	<fde171c00708231303m65a9cfc8v68b3ef4062c4a635@mail.gmail.com>
	<46CDEAAC.8060505@lshift.net>
	<fde171c00708231336t6d38f5bcj91e963faa8f2a82f@mail.gmail.com>
Message-ID: <167204d20708231438k5ac5fe1em7e66b30dc9260cd8@mail.gmail.com>

Rob

That would be great.  Then we have a baseline to work from when
dealing with implementation upgrades (eg your M2 release), and spec
changes (eg 0-10).

alexis


On 8/23/07, Robert Godfrey <rob.j.godfrey at gmail.com> wrote:
>
> On 23/08/07, Matthias Radestock <matthias at lshift.net> wrote:
> > Robert Godfrey wrote:
> > > My feeling is that any broker that supports 0-9 (non-WIP) should be able
> > > to also trivially support 0-8.
> >
> > It's not that easy, unfortunately. 0-9 makes some changes to existing
> > methods. For example, channel.open-ok gets an additional channel-id
> > field, and basic.consume gets an additional filter field. If, like us,
> > you are auto-generating the codec from the spec then this poses a problem.
>
>
> Qpid auto generates code from the spec, but with changes this small I would
> think we could work in a few bits of non-generated code to support both
> versions.  Given the degree of change in 0-10 I'm not wanting to expend much
> effort on 0-9 - but I think that having 0-9 compatability at the broker
> really shouldn't be a big deal (it may not be able to be done with
> particular beauty though).  [For instance I think Qpid actually already has
> the basic.consume filter argument].
>
> Given Martin's claim that it took them 1 day to implement the changes... i
> would think that it should be possible for Qpid (and Rabbit if you like) to
> have versions that work with both protocol revisions.  However the real
> focus will be on getting 0-10 implemented.
>
>
> -- Rob
>
> > Matthias.
> >
>
>
> _______________________________________________
> rabbitmq-discuss mailing list
> rabbitmq-discuss at lists.rabbitmq.com
> http://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss
>
>


-- 
Alexis Richardson
+44 20 7617 7339 (UK)
+44 77 9865 2911 (cell)
+1 650 206 2517 (US)



From alexis.richardson at cohesiveft.com  Thu Aug 23 22:45:45 2007
From: alexis.richardson at cohesiveft.com (Alexis Richardson)
Date: Thu, 23 Aug 2007 22:45:45 +0100
Subject: [rabbitmq-discuss] Python Client for RabbitMQ/AMQP?
In-Reply-To: <99e30fe50708231344j4a3c6aem9f3b6bdc308100a9@mail.gmail.com>
References: <6C9F6144-557F-470A-A32D-26288C517860@hudora.de>
	<269388e30708132322n74837025xdf9229dc6d933372@mail.gmail.com>
	<fde171c00708140107y58065ab5m6b6a7e09a040eb33@mail.gmail.com>
	<167204d20708140120s2d105bf7ud91467dbaa27bdb6@mail.gmail.com>
	<46CDC54E.4000803@diphi.com>
	<167204d20708231038hcabee3bp9b6be867b2c6209b@mail.gmail.com>
	<99e30fe50708231344j4a3c6aem9f3b6bdc308100a9@mail.gmail.com>
Message-ID: <167204d20708231445y6622ec1yc565da9eb6ea457b@mail.gmail.com>

Martin

Let's checkpoint a list of mismatches once M2 comes out, running it in
strict mode.

I agree it is very good we can cross check clients and servers, and
appreciate everyone's efforts!

alexis



On 8/23/07, Martin Ritchie <ritchiem at apache.org> wrote:
> Alexis,
>
> I'd be very interested in your list of mismatches with Qpid. I know
> the Qpid Java client deviates from the AMQP spec to fully be JMS
> compliant but I did add a property AMQP_STRICT which should turn all
> that off so you can use the JMS client that will fit on the standard
> 0_8 AMQP. If there is somthing I have missed then I will gladly fix
> it.
>
> Our long over due M2 release will be available with the next week or
> so. If you have been working with M1 then this is a major leap
> forward.
>
> I think it is great that our different groups can write clients and
> brokers and use each others clients/test suites to validate our own
> work.
>
> Cheers
>
> On 23/08/07, Alexis Richardson <alexis.richardson at cohesiveft.com> wrote:
> > Jeff
> >
> > We want to fix this.  Do you have any other examples of mismatch
> > between OpenAMQ and RabbitMQ?
> >
> > I think we've managed to nail down the ones for Qpid -- Matthias any comments?
> >
> > alexis
> >
> >
> >
> > On 8/23/07, Jeff Rogers <dvrsn at diphi.com> wrote:
> > > Alexis Richardson wrote:
> > >
> > > > BUT - modulo the spec version, any client should interoperate with any broker.
> > >
> > > I'm not sure if it is the differences in spec version or just
> > > incompletely or differently implemented servers but my limited
> > > experience has not borne this out.  I was working on a tcl client and
> > > ran into a number of small but annoying differences in how rabbitmq and
> > > OpenAMQ deal with things.  For example, rabbitmq requires an
> > > access.request call before accessing anything while openamq doesn't
> > > implement access.request at all and gives you a channel error if you
> > > even make the call.  On the side of rabbitmq doing things wrong, the
> > > authentication is completely screwy - the server response says that it
> > > only supports PLAIN authentication but the server only implements AMQPLAIN.
> > >
> > > Maybe this just points out a need for multiple independent clients to
> > > test against;  particularly in the case of the authentication rabbitmq
> > > seems to be making specific allowances for qpid even tho it appears qpid
> > > is not following the spec exactly.
> > >
> > > -J
> > >
> > >
> > > _______________________________________________
> > > rabbitmq-discuss mailing list
> > > rabbitmq-discuss at lists.rabbitmq.com
> > > http://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss
> > >
> >
> >
> > --
> > Alexis Richardson
> > +44 20 7617 7339 (UK)
> > +44 77 9865 2911 (cell)
> > +1 650 206 2517 (US)
> >
> > _______________________________________________
> > rabbitmq-discuss mailing list
> > rabbitmq-discuss at lists.rabbitmq.com
> > http://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss
> >
>
>
> --
> Martin Ritchie
>
> _______________________________________________
> rabbitmq-discuss mailing list
> rabbitmq-discuss at lists.rabbitmq.com
> http://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss
>


-- 
Alexis Richardson
+44 20 7617 7339 (UK)
+44 77 9865 2911 (cell)
+1 650 206 2517 (US)



From alexis.richardson at cohesiveft.com  Thu Aug 23 22:47:13 2007
From: alexis.richardson at cohesiveft.com (Alexis Richardson)
Date: Thu, 23 Aug 2007 22:47:13 +0100
Subject: [rabbitmq-discuss] [Fwd: Re: Python Client for RabbitMQ/AMQP?]
In-Reply-To: <942904B6-E38E-4D09-83BC-6E29FF96BD30@wiinz.com>
References: <46CDEBF9.1080704@imatix.com> <46CDF12B.60504@lshift.net>
	<942904B6-E38E-4D09-83BC-6E29FF96BD30@wiinz.com>
Message-ID: <167204d20708231447w2fe61aebg2adc994a215e5bc9@mail.gmail.com>

Michael

Thanks!  Now please let us know if you think everything works :-)

Do you have the client code that you were looking for a few weeks ago?
 Does it work with your broker set-up?

alexis


On 8/23/07, Michael Arnoldus <chime at wiinz.com> wrote:
> Guys,
>
> I cannot tell you how happy I am to see you discussing and taking
> this interop thing so seriously. It just make me think I have made
> the right choice going with AMQP at this point in time. Thank you so
> much!!!
>
> Michael Arnoldus
>
> Den 23/08/2007 kl. 22.42 skrev Matthias Radestock:
>
> > Martin Sustrik wrote:
> >> 1. There was channel-id parameter added to channel.open-ok.
> >> 2. Few methods have changed IDs.
> >> 3. Matching algorithm for headers exchange was changes slightly.
> >> 4. New parameter to Basic.Consume (not used).
> >> 5. Maybe something similarly simple here... I don't recall exactly.
> >
> > There are also two new error codes - 'no-route' and 'no-consumers',
> > which need to be used in place of more generic errors in 0-8.
> >
> >> What about defining the minimal set of changes to 0.8 (like the five
> >> points above) all of us have to do to get 0.9 (sans WIP) and
> >> implement
> >> that. That way we would all be interoperable and nobody would have to
> >> support 2 different versions of the protocol.
> >
> > I like that idea.
> >
> > We'd need to do a careful comparison of the *text* of the spec. Things
> > like new methods and fields are easy to spot and easy to implement (at
> > least as stubs), but subtle changes/clarifications to the semantics
> > are
> > much harder to identify.
> >
> >
> > Matthias.
> >
> > _______________________________________________
> > rabbitmq-discuss mailing list
> > rabbitmq-discuss at lists.rabbitmq.com
> > http://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss
>
>
> _______________________________________________
> rabbitmq-discuss mailing list
> rabbitmq-discuss at lists.rabbitmq.com
> http://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss
>


-- 
Alexis Richardson
+44 20 7617 7339 (UK)
+44 77 9865 2911 (cell)
+1 650 206 2517 (US)



From rob.j.godfrey at gmail.com  Fri Aug 24 02:27:21 2007
From: rob.j.godfrey at gmail.com (Robert Godfrey)
Date: Fri, 24 Aug 2007 02:27:21 +0100
Subject: [rabbitmq-discuss] basic.consume filter arg [was: Re: AMQP v0-9]
In-Reply-To: <46CDF636.6040807@lshift.net>
References: <46CD8610.8000604@imatix.com> <46CDE61B.1060203@lshift.net>
	<fde171c00708231303m65a9cfc8v68b3ef4062c4a635@mail.gmail.com>
	<46CDEAAC.8060505@lshift.net>
	<fde171c00708231336t6d38f5bcj91e963faa8f2a82f@mail.gmail.com>
	<46CDF636.6040807@lshift.net>
Message-ID: <fde171c00708231827g1066c77di2382bd15f113e720@mail.gmail.com>

Hi Matthias,

M1 was before my time :-)

M2 will be using the 0-8 spec file that is within the specs directory in the
qpid apache svn repository.  It has an "arguments" argument (essentially the
filters argument from 0-9 with the 0-10 name, not that names are important
at the wire level).  There are some other additions to the correct 0-8
specbut these are essentially additions, and as long as the strict amqp flag
is passed to the qpid client then the client won't use them ...

-- Rob

On 23/08/07, Matthias Radestock <matthias at lshift.net> wrote:
>
> Robert Godfrey wrote:
> >[For instance I think Qpid actually
> > already has the basic.consume filter argument].
>
> When you say "already", do you mean in M1? I have been working with the
> Qpid M1 source distribution and the auto-generated codec there certainly
> does not have the additional arg. Perhaps the binary distributions do?
>
> Can you find out? I am asking because I want to make sure I am not
> missing something in my interop testing.
>
> I know that the 0-8 spec in the current Qpid svn repo is different from
> the official spec, and the addtional arg to basic.consume is part of that.
>
> What flavour of the 0-8 spec will the M2 release be based on?
>
>
> Matthias.
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20070824/69d50500/attachment.htm 

From matthias at lshift.net  Fri Aug 24 06:59:24 2007
From: matthias at lshift.net (Matthias Radestock)
Date: Fri, 24 Aug 2007 06:59:24 +0100
Subject: [rabbitmq-discuss] basic.consume filter arg [was: Re: AMQP v0-9]
In-Reply-To: <fde171c00708231827g1066c77di2382bd15f113e720@mail.gmail.com>
References: <46CD8610.8000604@imatix.com>
	<46CDE61B.1060203@lshift.net>	<fde171c00708231303m65a9cfc8v68b3ef4062c4a635@mail.gmail.com>	<46CDEAAC.8060505@lshift.net>	<fde171c00708231336t6d38f5bcj91e963faa8f2a82f@mail.gmail.com>	<46CDF636.6040807@lshift.net>
	<fde171c00708231827g1066c77di2382bd15f113e720@mail.gmail.com>
Message-ID: <46CE73BC.9020109@lshift.net>

Robert Godfrey wrote:
> M2 will be using the 0-8 spec file that is within the specs directory in 
> the qpid apache svn repository.

I have to say that calling that file "amq.0-8.xml" in your source tree, 
when it is different from the official spec is rather confusing. It took 
me a while to notice that difference.

> It has an "arguments" argument 
> (essentially the filters argument from 0-9 with the 0-10 name, not that 
> names are important at the wire level).  There are some other additions 
> to the correct 0-8 specbut these are essentially additions, and as long 
> as the strict amqp flag is passed to the qpid client then the client 
> won't use them ...

Please make sure that flag is documented very prominently. Otherwise we 
are bound to get complaints from people who try to get interop to work.

Will the flag also work for the python test suite?

What about the server side of things, i.e. ensuring that a client which 
conforms to the official 0-8 spec can talk to a Qpid server? Looking at 
the differences between the official spec and the one in the qpid source 
tree, there are two places where interop will get broken if the server 
is not constrained to official 0-8 behaviour:

- it must accept basic.consume messages without the filter arg

- it must not send a basic.recover-ok response

How are you planning to handle this?


Matthias.



From sustrik at imatix.com  Fri Aug 24 12:17:58 2007
From: sustrik at imatix.com (Martin Sustrik)
Date: Fri, 24 Aug 2007 13:17:58 +0200
Subject: [rabbitmq-discuss] AMQP v0-9
In-Reply-To: <fde171c00708231336t6d38f5bcj91e963faa8f2a82f@mail.gmail.com>
References: <46CD8610.8000604@imatix.com> <46CDE61B.1060203@lshift.net>	
	<fde171c00708231303m65a9cfc8v68b3ef4062c4a635@mail.gmail.com>	
	<46CDEAAC.8060505@lshift.net>
	<fde171c00708231336t6d38f5bcj91e963faa8f2a82f@mail.gmail.com>
Message-ID: <46CEBE66.9050701@imatix.com>


> Given Martin's claim that it took them 1 day to implement the changes... 
> i would think that it should be possible for Qpid (and Rabbit if you 
> like) to have versions that work with both protocol revisions.  However 
> the real focus will be on getting 0-10 implemented.

It's really not much work (the most difficult task being Queue.Unbind 
which is important for clients anyway) and that way we'll show to 
outside world that AMQP is really about interoperability - that the 
claim in not a total bogus.

It would also allow Qpid and RabbitMQ teams to use Wireshark to dissect 
AMQP packets, which is quite useful IMO.

Martin



From matthias at lshift.net  Sat Aug 25 08:30:29 2007
From: matthias at lshift.net (Matthias Radestock)
Date: Sat, 25 Aug 2007 08:30:29 +0100
Subject: [rabbitmq-discuss] Python Client for RabbitMQ/AMQP?
In-Reply-To: <46CDDC81.50908@lshift.net>
References: <6C9F6144-557F-470A-A32D-26288C517860@hudora.de>	<269388e30708132322n74837025xdf9229dc6d933372@mail.gmail.com>	<fde171c00708140107y58065ab5m6b6a7e09a040eb33@mail.gmail.com>	<167204d20708140120s2d105bf7ud91467dbaa27bdb6@mail.gmail.com>	<46CDC54E.4000803@diphi.com>	<167204d20708231038hcabee3bp9b6be867b2c6209b@mail.gmail.com>	<46CDCD4B.8050402@lshift.net>
	<46CDD890.8090908@diphi.com> <46CDDC81.50908@lshift.net>
Message-ID: <46CFDA95.8070601@lshift.net>

Jeff,

Matthias Radestock wrote:
> Jeff Rogers wrote:
>> Confusion in the spec notwithstanding, my bigger gripe about how 
>> rabbitmq is handling it is that the AMQPLAIN method is not advertised 
>> at all in the connection.start call, so any use of it is going to be 
>> well, gross and brittle as you say.
> 
> Given the above, I am tempted to simply remove AMQPLAIN.

It turns out that AMQPLAIN is used by the Qpid python test suite. So 
instead of removing it I've added it to the list of security mechanisms 
advertised by the RabbitMQ broker.

Matthias



From alexis.richardson at cohesiveft.com  Tue Aug 28 14:54:06 2007
From: alexis.richardson at cohesiveft.com (Alexis Richardson)
Date: Tue, 28 Aug 2007 14:54:06 +0100
Subject: [rabbitmq-discuss] Invitation to get together this week
Message-ID: <167204d20708280654u6f90a4c6qc36e9ebb26a52f01@mail.gmail.com>

Hi everyone

We are doing a 'Birds of a Feather' session this Thursday evening.
ALL ARE WELCOME!

http://www.lshift.net/blog/2007/08/28/217

alexis


-- 
Alexis Richardson
+44 20 7617 7339 (UK)
+44 77 9865 2911 (cell)
+1 650 206 2517 (US)



From dmercer at gmail.com  Tue Aug 28 15:17:05 2007
From: dmercer at gmail.com (David Mercer)
Date: Tue, 28 Aug 2007 09:17:05 -0500
Subject: [rabbitmq-discuss] Erlang AMQP Client?
Message-ID: <002b01c7e97e$1d7beb40$891ea8c0@SSI.CORP>

I understand RabbitMQ is the server portion of AMQP, and that we are
expected to utilize another language in order to utilize the client.  Is
there an Erlang client or any plans for one?

 

Thank-you in advance.

 

Cheers,

 

David

 

 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20070828/d5eeb434/attachment.htm 

From alexis.richardson at cohesiveft.com  Tue Aug 28 15:27:39 2007
From: alexis.richardson at cohesiveft.com (Alexis Richardson)
Date: Tue, 28 Aug 2007 15:27:39 +0100
Subject: [rabbitmq-discuss] Erlang AMQP Client?
In-Reply-To: <002b01c7e97e$1d7beb40$891ea8c0@SSI.CORP>
References: <002b01c7e97e$1d7beb40$891ea8c0@SSI.CORP>
Message-ID: <167204d20708280727xfc48375td1820f8da2d39516@mail.gmail.com>

David

Ben Hood has written an Erlang client which we are hoping, with Ben,
to make available.  You can see some discussions about this in the
archives.  Watch this space.

Ben, Matthias, please do comment.

alexis


On 8/28/07, David Mercer <dmercer at gmail.com> wrote:
>
>
>
>
> I understand RabbitMQ is the server portion of AMQP, and that we are
> expected to utilize another language in order to utilize the client.  Is
> there an Erlang client or any plans for one?
>
>
>
> Thank-you in advance.
>
>
>
> Cheers,
>
>
>
> David
>
>
>
>
> _______________________________________________
> rabbitmq-discuss mailing list
> rabbitmq-discuss at lists.rabbitmq.com
> http://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss
>
>


-- 
Alexis Richardson
+44 20 7617 7339 (UK)
+44 77 9865 2911 (cell)
+1 650 206 2517 (US)



From matthias at lshift.net  Tue Aug 28 18:35:49 2007
From: matthias at lshift.net (Matthias Radestock)
Date: Tue, 28 Aug 2007 18:35:49 +0100
Subject: [rabbitmq-discuss] [Fwd: Re: basic.consume filter arg [was: Re:
	AMQP v0-9]]
In-Reply-To: <99e30fe50708280944g72781bfcn301ea4debec60913@mail.gmail.com>
References: <46D44426.4070707@lshift.net>
	<99e30fe50708280944g72781bfcn301ea4debec60913@mail.gmail.com>
Message-ID: <46D45CF5.7030509@lshift.net>

Martin,

Martin Ritchie wrote:
> On 28/08/07, Matthias Radestock <matthias at lshift.net> wrote:
>> Will the flag also work for the python test suite?
> 
> I haven't done any development work on the Python.
> I only implemented the flag for the Java Client suite so the python
> may need to be rebuilt against a true 0_8 spec file.

That is fine, in a way, and is what we are doing now.

The problem though is, again, the confusion arising from the fact that 
the test suite pulls in the Qpid-modified 0-8 spec - both by default and 
when specifying "0-8" as the specfile. We have had complaints from 
people who ran the test suite that way against RabbitMQ and were 
surprised to see errors.

>> What about the server side of things, i.e. ensuring that a client which
>> conforms to the official 0-8 spec can talk to a Qpid server? Looking at
>> the differences between the official spec and the one in the qpid source
>> tree, there are two places where interop will get broken if the server
>> is not constrained to official 0-8 behaviour:
>>
>> - it must accept basic.consume messages without the filter arg
>>
>> - it must not send a basic.recover-ok response
>>
>> How are you planning to handle this?
>>
> Indeed this will be an issue for interop. Currently the broker always
> sends a recover-ok and from what I can see taking a brief look the
> Consume method always reads the arguments field from the consume body.
> What I guess that the Qpid C++ and .Net clients work correctly with
> the Java broker as they all use the same spec file.
> 
> Unfortunately we are to late to make changes to the M2 release which
> should be just as soon as we can get it voted through... though there
> is an argument that this is a fairly major interop issue and a similar
> STRICT_AMQP flag should be added to the Java M2 Broker to facility
> AMQP interop. The changes wouldn't take much work so I've copied the
> Qpid-Dev list in to see if they are happy to make this change for M2.

A flag would be good but is still far from ideal, for two reasons:

1) as I mentioned above, it causes all sorts of headaches for other 
implementations and users when an AMQP broker advertises support for 0-8 
during protocol negotiation but the departs from the spec in crucial 
areas that break interop at fairly low levels of the protocol.

2) the protocol flavour (i.e. official 0-8 vs Qpid-modified 0-8) should 
be settable on a per-connection basis. Otherwise, for example, you will 
not be able to connect to a Qpid broker with a non-Qpid client unless a) 
the broker was started with that flag, and b) all Qpid clients are 
started with that flag.

The cleanest solution to all the above would be to use a version number 
other than 0-8 for the Qpid-modified 0-8 protocol, and for the broker 
and clients to support both that and the official 0-8, and negotiate an 
appropriate fit. That is problematic though because there isn't room in 
the version numbering scheme for, say, a 0-8-1.

An alternative might be for the Qpid clients and servers to detect each 
other via the product info passed as part of connection negotiation. 
Then, when a Qpid client meets a Qpid broker they could automatically 
speak Qpid-modified 0-8 whereas when paired up with anything else they 
would revert to standard 0-8.


Regards,

Matthias
PS: I have copied the rabbitmq-discuss list, where this thread originated.



From matthias at lshift.net  Tue Aug 28 20:09:42 2007
From: matthias at lshift.net (Matthias Radestock)
Date: Tue, 28 Aug 2007 20:09:42 +0100
Subject: [rabbitmq-discuss] [Fwd: Re: basic.consume filter arg [was: Re:
 AMQP v0-9]]
In-Reply-To: <46D45CF5.7030509@lshift.net>
References: <46D44426.4070707@lshift.net>	<99e30fe50708280944g72781bfcn301ea4debec60913@mail.gmail.com>
	<46D45CF5.7030509@lshift.net>
Message-ID: <46D472F6.1040001@lshift.net>

Matthias Radestock wrote:

> The cleanest solution to all the above would be to use a version number 
> other than 0-8 for the Qpid-modified 0-8 protocol, and for the broker 
> and clients to support both that and the official 0-8, and negotiate an 
> appropriate fit. That is problematic though because there isn't room in 
> the version numbering scheme for, say, a 0-8-1.
> 
> An alternative might be for the Qpid clients and servers to detect each 
> other via the product info passed as part of connection negotiation. 
> Then, when a Qpid client meets a Qpid broker they could automatically 
> speak Qpid-modified 0-8 whereas when paired up with anything else they 
> would revert to standard 0-8.

Another option is to stick to the published 0-8 spec. Does Qpid 
definitely require the modifications you have made to the spec? If yes, 
is there perhaps a way to achieve the same functionality with extensions 
that do not break 0-8 interop?


Matthias.



From tanmay.goel at intel.com  Tue Aug 28 22:20:04 2007
From: tanmay.goel at intel.com (Goel, Tanmay)
Date: Tue, 28 Aug 2007 14:20:04 -0700
Subject: [rabbitmq-discuss] Transactions in AMQP
Message-ID: <DE8632162CB73D4CB22D1D15387409E417E643@scsmsx414.amr.corp.intel.com>

 

Hi, 

 

1. I have a basic question about transactions in AMQP. What exactly does
a transaction include/mean? For example, does it include the
administrative features like creation of queues, exchanges, etc that
will be auto-deleted if the client aborts the transaction. I'm not
entirely clear about this, so I'm just trying to understand and figure
out possibilities. The spec says that messages and acknowledgments are
covered in a transaction. What would happen if the publisher sends a
message to the broker/queue, consumer receives (reads it from the queue)
and processes it, sends an ack to the broker and then the publisher
decides to abort the transaction? How can this transaction be atomic
and/or rolled-back since the message is already gone? 

 

Please help me understand this. I'm trying to understand the scope of a
transaction. 

 

2. Is the protocol currently assuming a reliable transport layer (TCP,
SCTP, etc) and no unreliable connection (say, UDP)? If yes, will the
later releases work on including unreliable transport layer protocols?

 

Thanks,

 

Tanmay

 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20070828/7580ca82/attachment.htm 

From cctrieloff at redhat.com  Tue Aug 28 22:44:46 2007
From: cctrieloff at redhat.com (Carl Trieloff)
Date: Tue, 28 Aug 2007 17:44:46 -0400
Subject: [rabbitmq-discuss] Transactions in AMQP
In-Reply-To: <DE8632162CB73D4CB22D1D15387409E417E643@scsmsx414.amr.corp.intel.com>
References: <DE8632162CB73D4CB22D1D15387409E417E643@scsmsx414.amr.corp.intel.com>
Message-ID: <46D4974E.9050205@redhat.com>


In 0-10 AMQP has full DTX and TX. we assume a reliable transport. AMQP 
does not yet have a UDP transport so the behavior for UDP is undefined, 
especially with txn. Any UDP L1 AMQP binding would need frame 
reliability to be able to support txns (we could do this, but it is 
currently unspecified.)

Arnuad Simon, Mark Little, Gordon Sim drove most of the transaction work 
with Cisco. I can connect you with Arnuad directly if you like. In terms 
of txns spanning queue.declare etc, the spec supports/makes that possible.

dtx for 0-10 is here https://jira.amqp.org/jira/browse/AMQP-4
tx is existing in the spec docs.

"2. Is the protocol currently assuming a reliable transport layer (TCP, 
SCTP, etc) and no unreliable connection (say, UDP)? If yes, will the 
later releases work on including unreliable transport layer protocols""

-- > we have framework that will allow us to make UDP reliable, this 
work has not been done in the spec(provision has been made so it can be 
done), but if done then we 'should' be able to support txns on UDP.

Do you have an interest in UDP, and if so why?


Hope that helps
Carl.


Goel, Tanmay wrote:
>
>  
>
> Hi,
>
>  
>
> 1. I have a basic question about transactions in AMQP. What exactly 
> does a transaction include/mean? For example, does it include the 
> administrative features like creation of queues, exchanges, etc that 
> will be auto-deleted if the client aborts the transaction. I'm not 
> entirely clear about this, so I'm just trying to understand and figure 
> out possibilities. The spec says that messages and acknowledgments are 
> covered in a transaction. What would happen if the publisher sends a 
> message to the broker/queue, consumer receives (reads it from the 
> queue) and processes it, sends an ack to the broker and then the 
> publisher decides to abort the transaction? How can this transaction 
> be atomic and/or rolled-back since the message is already gone?
>
>  
>
> Please help me understand this. I'm trying to understand the scope of 
> a transaction.
>
>  
>
> 2. Is the protocol currently assuming a reliable transport layer (TCP, 
> SCTP, etc) and no unreliable connection (say, UDP)? If yes, will the 
> later releases work on including unreliable transport layer protocols?
>
>  
>
> Thanks,
>
>  
>
> Tanmay
>
>  
>
> ------------------------------------------------------------------------
>
> _______________________________________________
> rabbitmq-discuss mailing list
> rabbitmq-discuss at lists.rabbitmq.com
> http://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss
>   

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20070828/17cda450/attachment.htm 

From peterson at orbitec.com.au  Wed Aug 29 02:04:29 2007
From: peterson at orbitec.com.au (David Peterson)
Date: Wed, 29 Aug 2007 11:04:29 +1000
Subject: [rabbitmq-discuss] Ruby client?
Message-ID: <46D4C61D.3040203@orbitec.com.au>


Just wondering whether there is a Ruby client, or plans for one?

Also, I'm guessing there's not (yet) a Haskell client?

David



From alexis.richardson at cohesiveft.com  Wed Aug 29 07:50:16 2007
From: alexis.richardson at cohesiveft.com (Alexis Richardson)
Date: Wed, 29 Aug 2007 07:50:16 +0100
Subject: [rabbitmq-discuss] Ruby client?
In-Reply-To: <46D4C61D.3040203@orbitec.com.au>
References: <46D4C61D.3040203@orbitec.com.au>
Message-ID: <167204d20708282350n185d99a2g5d4335036702ae06@mail.gmail.com>

David

There are plans for a Ruby client and someone is working on one.  As
far as I am aware there is no Haskell client yet.  Both are of
interest to us and contributions are most welcome.

alexis



On 8/29/07, David Peterson <peterson at orbitec.com.au> wrote:
>
> Just wondering whether there is a Ruby client, or plans for one?
>
> Also, I'm guessing there's not (yet) a Haskell client?
>
> David
>
> _______________________________________________
> rabbitmq-discuss mailing list
> rabbitmq-discuss at lists.rabbitmq.com
> http://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss
>


-- 
Alexis Richardson
+44 20 7617 7339 (UK)
+44 77 9865 2911 (cell)
+1 650 206 2517 (US)



From alexis.richardson at cohesiveft.com  Wed Aug 29 08:57:29 2007
From: alexis.richardson at cohesiveft.com (Alexis Richardson)
Date: Wed, 29 Aug 2007 08:57:29 +0100
Subject: [rabbitmq-discuss] Transactions in AMQP
In-Reply-To: <DE8632162CB73D4CB22D1D15387409E417E643@scsmsx414.amr.corp.intel.com>
References: <DE8632162CB73D4CB22D1D15387409E417E643@scsmsx414.amr.corp.intel.com>
Message-ID: <167204d20708290057w3b7769aclc28a3397bcc9b023@mail.gmail.com>

Tanmay

In the spec:

AMQP supports three kinds of transactions:

   1.      Automatic transactions, in which every published message
and acknowledgement is processed as a stand-alone transaction.
   2.      Server local transactions, in which the server will buffer
published messages and acknowledgements and commit them on demand from
the client.
   3.      Distributed transactions, in which the server will
synchronise its transactions with an external transaction coordinator.

You ask:

1)  "How can this transaction be atomic and/or rolled-back since the
message is already gone?"

The answer is that the message is not already gone, but held at the
broker as part of a partially (or pre-) committed transaction.  This
is because, for the publisher to have an explicit 'abort' we are
talking about case 2, server local "TX" or case 3, "DTX".

In more detail --

In 0-8, 0-9 and 0-10, there is a notion of 'command'.  Commands are
basically control ('admin') expressions sent between the broker and
its communicating peers, for example queue creation.  Each command is
atomic (cf. txn type 1 above).

When there is no explicit transaction (TX or DTX) then messages are
processed atomically too - like commands.

In 0-8, 0-9 and 0-10, there is a notion of transactional message
*group*, or TX.  The full details of TX are in the spec.

Your question was about just such a 'group' -- it contained just one
message atom, followed by an abort/commit atom.  In pseudocode your
example could be written as a group of three: "open_txn ;  send
message M ; commit_txn".  The consumer won't see M until the broker
sees and commits (commit_txn).

Sidebar: in 0-10, commands have an internal sequencing enabling
correlation for in-order execution.  The precise relationship between
command execution and session management is new in 0-10 since sessions
are new in 0-10 (they manage ack behaviour and message order).

Your puzzlement seemed to arise due to the interplay between ack and
abort/commit.  Would the broker ack the message, knowing it to be in a
transaction (TX), before waiting for a commit message?  The answer is
subtle and to do with the architecture for 0-10.  Let's go back to the
pseudocode above.

* The producer, in the example, has a session relationship with the
broker.  In this scope, the message M can have been acked before the
broker sees 'commit_txn'.
* But all this ack means is that the broker has seen M, and the
producer does not need to resend M.  I.e. the ack is being used as a
'control frame' to manage session state between producer and broker.
We need this because the broker and producer may be connected by a
network.  If they shared a physical address space (reliably) then we
would not need this.
* The sending of this ack does not imply that the broker has yet made
M visible to consumers.  In fact, in this case M will not be visible
to consumers because M is in a server local (TX) transaction.  M will
sit in the brokers precommitted state until told to commit.  Once the
command to commit arrives, then M will be committed and the consumer
can see M.

The above analysis would also cover the case where there was more than
one message sent, say "open_txn ;  send message M ; send message N ;
send message O ; commit_txn".  In this case the consumer won't see any
messages at all, until commit.  But acks will be used under the hood,
to enable the broker and producer to manage questions like 'do I need
to resend N, even though M and O have been acked?'.

You need this architectural layering in order to scale in the presence
of multiple implementation scenarios.

Finally....

In 0-10 the notion of a distributed transaction, DTX, is defined so
that XA compliance is achieved.  You could use this for grouping
commands when sharing broker state with another transactional entity,
for instance an RDBMS.

The guys who did the DTX work did a really good job and as Carl
mentioned, you can find DTX details in the JIRA:
https://jira.amqp.org/jira/browse/AMQP-4

You also asked:

2) "Is the protocol currently assuming a reliable transport layer
(TCP, SCTP, etc) and no unreliable connection (say, UDP)? If yes, will
the later releases work on including unreliable transport layer
protocols?"

As Carl explained, the answer is:

--- 0-8 and 0-9 assume TCP
--- 0-10 sessions enable reliability in the presence of UDP (or
'provide a framework for it')
--- But the full details will provided in later releases

HTH!

alexis





On 8/28/07, Goel, Tanmay <tanmay.goel at intel.com> wrote:
>
>
>
>
>
>
> Hi,
>
>
>
> 1. I have a basic question about transactions in AMQP. What exactly does a
> transaction include/mean? For example, does it include the administrative
> features like creation of queues, exchanges, etc that will be auto-deleted
> if the client aborts the transaction. I'm not entirely clear about this, so
> I'm just trying to understand and figure out possibilities. The spec says
> that messages and acknowledgments are covered in a transaction. What would
> happen if the publisher sends a message to the broker/queue, consumer
> receives (reads it from the queue) and processes it, sends an ack to the
> broker and then the publisher decides to abort the transaction? How can this
> transaction be atomic and/or rolled-back since the message is already gone?
>
>
>
> Please help me understand this. I'm trying to understand the scope of a
> transaction.
>
>
>
> 2. Is the protocol currently assuming a reliable transport layer (TCP, SCTP,
> etc) and no unreliable connection (say, UDP)? If yes, will the later
> releases work on including unreliable transport layer protocols?
>
>
>
> Thanks,
>
>
>
> Tanmay
>
>


-- 
Alexis Richardson
+44 20 7617 7339 (UK)
+44 77 9865 2911 (cell)
+1 650 206 2517 (US)



From rob.j.godfrey at gmail.com  Wed Aug 29 09:46:13 2007
From: rob.j.godfrey at gmail.com (Robert Godfrey)
Date: Wed, 29 Aug 2007 09:46:13 +0100
Subject: [rabbitmq-discuss] Ruby client?
In-Reply-To: <167204d20708282350n185d99a2g5d4335036702ae06@mail.gmail.com>
References: <46D4C61D.3040203@orbitec.com.au>
	<167204d20708282350n185d99a2g5d4335036702ae06@mail.gmail.com>
Message-ID: <fde171c00708290146o64fcf69bk8a5d532fd72b61d4@mail.gmail.com>

There is a Ruby client in Qpid - I'm not sure if anyone has tested
interoperability with the Rabbit broker yet?

-- Rob

On 29/08/2007, Alexis Richardson <alexis.richardson at cohesiveft.com> wrote:
>
> David
>
> There are plans for a Ruby client and someone is working on one.  As
> far as I am aware there is no Haskell client yet.  Both are of
> interest to us and contributions are most welcome.
>
> alexis
>
>
>
> On 8/29/07, David Peterson <peterson at orbitec.com.au> wrote:
> >
> > Just wondering whether there is a Ruby client, or plans for one?
> >
> > Also, I'm guessing there's not (yet) a Haskell client?
> >
> > David
> >
> > _______________________________________________
> > rabbitmq-discuss mailing list
> > rabbitmq-discuss at lists.rabbitmq.com
> > http://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss
> >
>
>
> --
> Alexis Richardson
> +44 20 7617 7339 (UK)
> +44 77 9865 2911 (cell)
> +1 650 206 2517 (US)
>
> _______________________________________________
> rabbitmq-discuss mailing list
> rabbitmq-discuss at lists.rabbitmq.com
> http://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20070829/d613e610/attachment.htm 

From matthias at lshift.net  Wed Aug 29 16:30:48 2007
From: matthias at lshift.net (Matthias Radestock)
Date: Wed, 29 Aug 2007 16:30:48 +0100
Subject: [rabbitmq-discuss] RabbitMQ 1.1.1 released
Message-ID: <46D59128.20103@lshift.net>

The RabbitMQ team is pleased to announce the release of RabbitMQ 1.1.1.

This release has beta status and focuses on two areas:

- improved interoperability with Qpid M1 Java client and server. For 
details see http://www.rabbitmq.com/interoperability.html

- some bug fixes and minor enhancements. For details see the attached 
release notes.

Binary and source distributions of the new release can be found in the 
usual place, at http://www.rabbitmq.com/download.html

We recommend that all users of earlier versions of RabbitMQ upgrade to 
this latest release.

As always, we welcome any questions, bug reports, and other feedback on 
this release, as well as general suggestions for features and 
enhancements in future releases. Mail us via the RabbitMQ discussion 
list at rabbitmq-discuss at lists.rabbitmq.com, or directly at 
info at rabbitmq.com.


Regards,

The RabbitMQ Team
-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: README-1.1.1.txt
Url: http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20070829/e887b52a/attachment.txt 

From 0x6e6562 at gmail.com  Wed Aug 29 18:32:09 2007
From: 0x6e6562 at gmail.com (Ben Hood)
Date: Wed, 29 Aug 2007 18:32:09 +0100
Subject: [rabbitmq-discuss] Erlang AMQP Client?
In-Reply-To: <167204d20708280727xfc48375td1820f8da2d39516@mail.gmail.com>
References: <002b01c7e97e$1d7beb40$891ea8c0@SSI.CORP>
	<167204d20708280727xfc48375td1820f8da2d39516@mail.gmail.com>
Message-ID: <269388e30708291032h5b8eaf7cm35491e2792a93f9a@mail.gmail.com>

David,

On 8/28/07, Alexis Richardson <alexis.richardson at cohesiveft.com> wrote:
> Ben Hood has written an Erlang client which we are hoping, with Ben,
> to make available.  You can see some discussions about this in the
> archives.  Watch this space.

As Alexis mentions, Matthias and I have been working on an Erlang
client that offers both networked (i.e. TCP based) conectivity and
native Erlang connectivity (i.e. without any network framing) using
the same user interface (so that you can use an embedded rabbit
instance or any remote AMQP server transparently). We went through
many design iterations and have come up with something useable, which
at some stage may go into the rabbit release in the future.
Unfortunately I have just gone on holiday so I didn't get any time to
finish off the last issues that Matthias and I have discussed. So if
you can wait until I get back (mid Sept) you can get a beta-version.
You can also get what I've currently got, but there are some pending
fixes and API changes. I'd like to get it done whilst being away, but
I would incur the wrath of my girlfriend :-(

HTH,

Ben



