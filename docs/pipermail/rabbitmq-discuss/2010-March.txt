From zirpubolci at gmail.com  Mon Mar  1 02:41:19 2010
From: zirpubolci at gmail.com (allan bailey)
Date: Sun, 28 Feb 2010 18:41:19 -0800
Subject: [rabbitmq-discuss] problem with an HA pair of rabbitmq servers
Message-ID: <621b44ae1002281841o35f958f8pf1fd3d9443430c87@mail.gmail.com>

We have a pair of rabbitmq servers.   The 1st server periodically does a lot
of intense I/O copying data
out to the 2nd server.   This apparently causes timeouts that then cause a
partitioning of the cluster.

My main question is this:  can we set the timeout value higher?  and if so,
how?  I found nothing in the
manual pages about a timeout setting between cluster nodes.

When we see this problem, the quickest solution is to shutdown the 2nd
server, nuke the mnesia dir and
rebuild it w/ a cluster file pointing to the 1st server.  Then start up
again and all is well.  (it even gets the users and vhosts from the 1st.)


Below are the errors we see when this problem happens.


1st server sees this error:
===
[=ERROR REPORT==== 28-Feb-2010::16:28:52 ===
Mnesia(rabbit at rq101): ** ERROR ** mnesia_event got {inconsistent_database,
running_partitioned_network, rabbit at rq102}]

===


2nd server sees these errors:
===
[=ERROR REPORT==== 28-Feb-2010::16:27:08 ===
** Node rabbit at rq101 not responding **
** Removing (timedout) connection **]
[=ERROR REPORT==== 28-Feb-2010::16:28:38 ===
** Node rabbit at rq101 not responding **
** Removing (timedout) connection **]
=INFO REPORT==== 28-Feb-2010::16:28:52 ===
node rabbit at rq101 up
=WARNING REPORT==== 28-Feb-2010::16:28:52 ===
The global_name_server locker process received an unexpected message:
{{#Ref<0.0.0.186122>,rabbit at rq101},true}
=WARNING REPORT==== 28-Feb-2010::16:28:52 ===
The global_name_server locker process received an unexpected message:
{{#Ref<0.0.0.186227>,rabbit at rq101},true}
[=ERROR REPORT==== 28-Feb-2010::16:28:52 ===
Mnesia(rabbit at rq102): ** ERROR ** mnesia_event got {inconsistent_database,
running_partitioned_network, rabbit at rq101}]

===


thanks,
Allan
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20100228/0b7d5746/attachment.htm 

From matthew at lshift.net  Mon Mar  1 10:24:37 2010
From: matthew at lshift.net (Matthew Sackman)
Date: Mon, 1 Mar 2010 10:24:37 +0000
Subject: [rabbitmq-discuss] Erlang Client Example Code
In-Reply-To: <6cfccb3d1002271350j6fe74bf4x7a0515b18a7b0e43@mail.gmail.com>
References: <6cfccb3d1002242126y62352efahd95564b02d12c727@mail.gmail.com>
	<e40d4f541002251150v6b44946ayd19a5a4ab278a06b@mail.gmail.com>
	<269388e31002251537q57c400c5t3b128179be97ab87@mail.gmail.com>
	<6cfccb3d1002252153p5ba83d62hec0bbd10db255e86@mail.gmail.com>
	<269388e31002252318r27002d5r92bdf40794979990@mail.gmail.com>
	<6cfccb3d1002261414x2cdbd761i293aab07a00a9846@mail.gmail.com>
	<6cfccb3d1002271350j6fe74bf4x7a0515b18a7b0e43@mail.gmail.com>
Message-ID: <20100301102437.GA1641@mrnibble.lshift.net>

On Sat, Feb 27, 2010 at 01:50:17PM -0800, Glenn Rempe wrote:
> I took a look at the amqp_dbq module in the client test dir.
> Unfortunately, I'm not clear how I would make use of that module and
> I've found no mention of it in my search of the mailing list (Google
> finds only a single result which is the commit message).

If, in the erlang client, you do a make run, and you then run some of
the functions in the amqp_dbg module, and you then run some client code
then you'll find that all sorts of interesting debugging output appears
in the erlang shell. The functions are really just suitable predefined
wrappers around the erlang dbg module (which in turn wraps the standard
erlang tracer).

Matthew



From matthew at lshift.net  Mon Mar  1 10:38:08 2010
From: matthew at lshift.net (Matthew Sackman)
Date: Mon, 1 Mar 2010 10:38:08 +0000
Subject: [rabbitmq-discuss] Queue durability
In-Reply-To: <84fb38e31002271020k537293b8y33c377641ca12612@mail.gmail.com>
References: <84fb38e31002261159j2a2fb54as1e361a78da370746@mail.gmail.com>
	<4B88568E.9040900@lshift.net>
	<84fb38e31002271020k537293b8y33c377641ca12612@mail.gmail.com>
Message-ID: <20100301103808.GB1641@mrnibble.lshift.net>

On Sat, Feb 27, 2010 at 12:20:07PM -0600, tsuraan wrote:
> > Do you know why your systems are running out of memory? It certainly
> > shouldn't be due to rabbit, if you have the memory thresholds configured
> > correctly.
> 
> They're running out of memory because they have too much stuff running
> on them that uses memory :)  Rabbit is one of the processes
> (apparently the hungriest single process), but it's far from the only
> process.  To be honest, I'm not sure why it's the hungriest process
> either, but perhaps my other thread will help resolve that.

The vm_memory_high_watermark threshold sets the point at which
channel.flow is raised. Internally, we aim to use 0.4 of that threshold,
to give some space for GC and generally some buffer room, given the
async nature of the controls.

As Matthias said, disks are not fast. Rabbit will happily accept
messages far faster than it can write them to disk, hence the need for
the channel.flow mechanism. If you need to maximise the speed at which
you're writing to disk (and you should use some disk-monitoring tools to
work out how fast rabbit is writing to disk. Also, use the deadline
scheduler, not cfq), then you really will probably want to give an SSD
to Rabbit alone, and have nothing else write to that disk. Even just
giving Rabbit its own hard disk is pretty beneficial. Running rabbit on
the same box as other services, and having them all access the same
disks at the same time is not a good idea, if you really care about
performance.

Also, OS caching is a very good idea. Generally, try to make sure you've
always got a couple of GB RAM free for the OS to use as disk cache -
generally, on my 8GB box here, the default 0.4 vm_memory_high_watermark
threshold gives rabbit 3151MB, and pretty much the remainder is used as
disk cache. As a result, most of the time, reads can be satisfied from
RAM, avoiding expensive disk seeks (one of the reasons why SSDs are
beneficial).

> > You certainly shouldn't be losing entire queues, and if you do I would
> > at the very least expect there to be some errors in the logs.

Indeed. The existance or not of a queue really has nothing to do with
the new persister - it's still stored in mnesia just as it was before.

You should make sure you update to the latest bug21673 at least weekly
if not more frequently.

Matthew



From akalend at mail.ru  Mon Mar  1 11:55:57 2010
From: akalend at mail.ru (Alexandre Kalendarev)
Date: Mon, 01 Mar 2010 14:55:57 +0300
Subject: [rabbitmq-discuss] Draft of C++ rabbitMq API
Message-ID: <E1Nm4E9-0000gH-00.akalend-mail-ru@f289.mail.ru>

Hi colleagues!

I developed the C++ interface, see below

If You have any ideas - wellcome! 

the Draft of C++ API

Connection class

class AMQPConnection {
	AMQPConnection();
	AMQPConnection( string connectionString );
	AMQPConnection( string connectionString , int channelNumber);
	
	void Open( string connectionString );
	void Open( string connectionString , int channelNumber);
	
	void Close();
	
	setChannel(int channelNumber);
}

const AMQPCnnDebug = "localhost:5672"

the example:
	AMQPConnection * cnn = new AMQPConnection(  "guest:guest at localhost:5673/somevhost" );

	default connection string is "localhost:5672"
	the debug connection string   AMQPCnnDebug  is "guest:guest at localhost:5673" 


Exchange class

class AMQPExchange {
	AMQPExchange( AMQPConnection * cnn );
	
	void Declare(string name);
	void Declare(string name, int parms);
	void Declare(string name, int parms, map properties ); // *)?

	void Delete(string name)
}

the parms is set of constants as AMQPDurable, AMQPAutodelete etc
the type of exchange is AMQPDirect default or AMQPFanout, or AMQPTopic 


Example:
	AMQPExchange * ex = new  AMQPExchange(new AMQPConnection());
	ex->Declare("my_exchange");

Queue class

class AMQPQueue {
	AMQPQueue(AMQPConnection * cnn);

	void Declare(string name);
	void Declare(string name, int parms);
	void Declare(string name, int parms, map properties ); // *)?

	void Delete(string name)

	void Purge (string name)

}
the parms is set of constants as AMQPDurable, AMQPAutodelete etc


example:
	AMQPEQueue * qu = new AMQPEQueue(new AMQPConnection());
	qu->Declare("qu_mylife");

Basic class:

class AMQPBasic {
	AMQPBasic(AMQPConnection * cnn);

	void setProperty(string name, string value  );
	void setProperty(string name, int value  );

	void Bind (string exchangeName, string queueName );
	void Bind (string exchangeName, string queueName , string key);

	void Publish( string exchangeName, string message);
	void Publish( string exchangeName, uchar* message);
	void Publish( string exchangeName, string message, string key);
	void Publish( string exchangeName, uchar* message, string key);

	void Cancel( string queueName)

	AMQPMessage *  Get( string queueName)


	void Ask( string queueName ) ????

	void Reject( string queueName ) ????

	void Consume( string queueName , IAMQPCallback * callbackName );

}

class AMQPMessage  ????
 int timestamp
 int expiration
 string contentType
 string deliveryTag
 uchar* message or string 
 int number // internal number message
 string exchange 
 string key
....

 IAMQPCallback is abstract class, the callbackName is derived from IAMQPCallback.
after received each the message call the method run of derived AMQPCallback base class.


*) properties is map of addional property, it will to resolve in future.

Examples:

	// publish message	
	AMQPConnection * cnn = new AMQPConnection();
	AMQPExchange * ex = new  AMQPExchange(cnn);
	ex->Declare("my_exchange", AMQPTopic);
	basic = new AMQPBasic(cnn);
	basic->Bind("my_exchange", "qu_mylive", "news" );
	basic->Publish("my_exchange", "12345" , "news");


	// consume message
	class printMessage : IAMQPCallback {
		void run (uchar* message) {
			std::cout << message << std::endl;
		}
	}
	
	AMQPConnection * cnn = new AMQPConnection();
	basic = new AMQPBasic(cnn);
	printMessage * pm = new printMessage();
	basic->Consume("qu_mylive", pm); 




unrealise classes(it will to resolve in future):  AMQPFile, AMQPStreams etc ...

exceptions:

AMQPnoConnectException
AMQPnonAutorizeException
AMQPnotFoundException 
AMQPnotAllowedException 
...
AMQPerrorException (AMQPcommandInvalidException  )








From scottblanc at gmail.com  Mon Mar  1 17:35:29 2010
From: scottblanc at gmail.com (scott w)
Date: Mon, 1 Mar 2010 09:35:29 -0800
Subject: [rabbitmq-discuss] Queue slow to come up with a lot of messages
	stored on disk w/ bug21637 branch
Message-ID: <401b577e1003010935n23548840r9a349d4cc704b124@mail.gmail.com>

I've noticed the following behavior when there are a large number of
messages persisted to disk, e.g. > 1M, and I restart rabbitmq. Initially,
when I list the queues using rabbitmqctl it says there are no queues. Then
after a minute or two a couple queues begin to appear and then after ~5-10
minutes all the queues show up. I am using branch bug21637. Is this expected
behaviour? FWIW, I would have expected all of the queues themselves to show
up immediately assuming that the queues and their sizes are indexed and
stored separately from the actual data files.

thanks,
Scott
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20100301/500f4d9c/attachment.htm 

From g at rre.tt  Mon Mar  1 17:46:26 2010
From: g at rre.tt (Garrett Smith)
Date: Mon, 1 Mar 2010 11:46:26 -0600
Subject: [rabbitmq-discuss] Exposing Erlang nodes/proceses through RabbitMQ
Message-ID: <ce2570e21003010946g3f205aa3h5292ba7b48323bc9@mail.gmail.com>

I know that AMQP is all about language neutrality. That's all good.
I'm not trying to change that :)

But, a quick diversion into some Erlang specific topics...

Erlang has some really nice automagical network features (e.g. auto
replicated global process registries) that enable pretty seamless
distributed application development. I've found the stuff to be
incredibly cool and easy to use. But I've also run into some
limitations. These include practical limits on the number of connected
nodes (the network mesh Erlang sets up uses node_count * node_count -
1 connections), security issues (Erlang nodes want to run in a trusted
network), and the general complications of maintaining a peer-to-peer
network for longish running systems.

I think brokers are a natural next step in dealing with these issues.

Has there been any discussion (or coding efforts) on using rabbitmq as
an alternative "transport layer" (that's not the right term, but it's
close) for Erlang node-to-node communications? The pieces this entails
would include :

* Marshalling Erlang terms
* Global process registry (e.g. sync'd fanout)
* remote_process() ! term()
* rpc:xxx

The point of this would be to make transitioning to rabbitmq from a
standard Erlang mesh as seamless as possible. E.g. gen_server:call/2
would just work without much/any work for the developer.

The payoff would be (I think) a far more scalable architecture in
terms of supported nodes as well as the AMQP features (durability,
persistence, access control, etc.)

And in the spirit of AMQP's ecumenicalism, this scheme could be
applied to other languages, but I'm thinking specifically of Erlang at
the moment.

Garrett



From matthew at lshift.net  Mon Mar  1 17:49:56 2010
From: matthew at lshift.net (Matthew Sackman)
Date: Mon, 1 Mar 2010 17:49:56 +0000
Subject: [rabbitmq-discuss] Queue slow to come up with a lot of messages
 stored on disk w/ bug21673 branch
In-Reply-To: <401b577e1003010935n23548840r9a349d4cc704b124@mail.gmail.com>
References: <401b577e1003010935n23548840r9a349d4cc704b124@mail.gmail.com>
Message-ID: <20100301174956.GL1641@mrnibble.lshift.net>

Hi Scott,

On Mon, Mar 01, 2010 at 09:35:29AM -0800, scott w wrote:
> I've noticed the following behavior when there are a large number of
> messages persisted to disk, e.g. > 1M, and I restart rabbitmq. Initially,
> when I list the queues using rabbitmqctl it says there are no queues. Then
> after a minute or two a couple queues begin to appear and then after ~5-10
> minutes all the queues show up. I am using branch bug21637. Is this expected
> behaviour? FWIW, I would have expected all of the queues themselves to show
> up immediately assuming that the queues and their sizes are indexed and
> stored separately from the actual data files.

Yes, that is expected. Firstly, although ctl will respond, the tcp
listeners won't be started at that point, so you are "safe" in the sense
that nothing else can come along and start creating or deleting queues.

Secondly, what is going on is basically a pretty thorough fsck of the
data. I have spent a long time optimising this and basically it really
can't be made to go much faster - the main reason why storing "clean"
shutdown and then restoring state isn't sufficient for instant start up
is that on start up we have to go through the disk and delete any
messages that are transient (i.e. they only got pushed to disk due to
memory pressure). As such, we have to walk over every queue on disk.
This can take a long time.

Finally, what you're suggesting would require that we write out, eg
queue size (and flush disk caches), on every single publish and
deliver/get to and from the queue. Doing such a thing would be
phenominally expensive.

If it wasn't for the fact that people (and AMQP) expect queues to know
their own length, we could probably drop transient messages lazily.
However, at the end of the day, the same amount of work has to be done.
It's really just a matter of when it gets done.

Matthew



From mrdunn at gmail.com  Mon Mar  1 22:27:45 2010
From: mrdunn at gmail.com (Matthew Dunn)
Date: Tue, 2 Mar 2010 08:57:45 +1030
Subject: [rabbitmq-discuss] Node/Broker failover and recreating queues on
	another node
Message-ID: <4d260fa71003011427h43fd576ej18bf5b46766174b3@mail.gmail.com>

Hello,

I have a use case where;

*It's OK for a few messages to be dropped when a broker goes down
*I need to load balance these messages
*Availability is more important than dropping the ocassional message
*I would prefer messages only be proccessed once.

As RabbitMQ doesn't currently support queue Migration I was thinking of
implementing the following

Multiple consumers listening to a single public queue.

If the broker hosting the public queue crashes or is unavailable. Each
consumer will connect to a new available broker and recreate the queue there
with the same name.

The question I have is, if I have created a public queue on a different
broker, when the crashed broker comes back online will there be a problem
with conflicting queues?

*Broker A with Queue A Crashes
*Consumers failover to Broker B
*A consumer recreates Queue A on Broker B
*Broker A is restored -- Will Broker A have problems starting because Queue
A has been recreated elsewhere?

Thanks for your time

Matthew
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20100302/fc16ddea/attachment.htm 

From scottblanc at gmail.com  Mon Mar  1 23:58:39 2010
From: scottblanc at gmail.com (scott w)
Date: Mon, 1 Mar 2010 15:58:39 -0800
Subject: [rabbitmq-discuss] Queue slow to come up with a lot of messages
	stored on disk w/ bug21673 branch
In-Reply-To: <20100301174956.GL1641@mrnibble.lshift.net>
References: <401b577e1003010935n23548840r9a349d4cc704b124@mail.gmail.com>
	<20100301174956.GL1641@mrnibble.lshift.net>
Message-ID: <401b577e1003011558nb358021hba1ff5e577f0f974@mail.gmail.com>

Hi Matthew --

Ok thanks for explaining in such detail the issue at hand. The queues aren't
supposed to normally be as big as they were so hopefully with smaller
queues, the problem will be less pronounced in the future.

thanks,
Scott

On Mon, Mar 1, 2010 at 9:49 AM, Matthew Sackman <matthew at lshift.net> wrote:

> Hi Scott,
>
> On Mon, Mar 01, 2010 at 09:35:29AM -0800, scott w wrote:
> > I've noticed the following behavior when there are a large number of
> > messages persisted to disk, e.g. > 1M, and I restart rabbitmq. Initially,
> > when I list the queues using rabbitmqctl it says there are no queues.
> Then
> > after a minute or two a couple queues begin to appear and then after
> ~5-10
> > minutes all the queues show up. I am using branch bug21637. Is this
> expected
> > behaviour? FWIW, I would have expected all of the queues themselves to
> show
> > up immediately assuming that the queues and their sizes are indexed and
> > stored separately from the actual data files.
>
> Yes, that is expected. Firstly, although ctl will respond, the tcp
> listeners won't be started at that point, so you are "safe" in the sense
> that nothing else can come along and start creating or deleting queues.
>
> Secondly, what is going on is basically a pretty thorough fsck of the
> data. I have spent a long time optimising this and basically it really
> can't be made to go much faster - the main reason why storing "clean"
> shutdown and then restoring state isn't sufficient for instant start up
> is that on start up we have to go through the disk and delete any
> messages that are transient (i.e. they only got pushed to disk due to
> memory pressure). As such, we have to walk over every queue on disk.
> This can take a long time.
>
> Finally, what you're suggesting would require that we write out, eg
> queue size (and flush disk caches), on every single publish and
> deliver/get to and from the queue. Doing such a thing would be
> phenominally expensive.
>
> If it wasn't for the fact that people (and AMQP) expect queues to know
> their own length, we could probably drop transient messages lazily.
> However, at the end of the day, the same amount of work has to be done.
> It's really just a matter of when it gets done.
>
> Matthew
>
> _______________________________________________
> rabbitmq-discuss mailing list
> rabbitmq-discuss at lists.rabbitmq.com
> http://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20100301/aefe9a57/attachment.htm 

From scottblanc at gmail.com  Tue Mar  2 04:36:42 2010
From: scottblanc at gmail.com (scott w)
Date: Mon, 1 Mar 2010 20:36:42 -0800
Subject: [rabbitmq-discuss] Crash reports for bug21673 branch
Message-ID: <401b577e1003012036n522f28b0s939a86237d69a0cf@mail.gmail.com>

One of my rabbitmq boxes (with bug21673 branc)  stopped responding and
dumped a boat load of crash reports to rabbit-sasl.log. Below are the last
four crash reports excerpted from the file. Two questions:

1) when I stopped and restarted rabbitmq, after quite some time only half
about half the queues are showing up, the other half haven't showed up after
several hours, is there a way to recover the other queues and the data
associated with them, also

2) Any ideas from these crash reports what might be going on?

thanks,
Scott

=CRASH REPORT==== 1-Mar-2010::23:25:56 ===
  crasher:
    initial call: gen:init_it/6
    pid: <0.26578.21>
    registered_name: []
    exception exit: {{{badarg,
                          [{ets,lookup,
                               [rabbit_msg_store_cache,
                                <<184,164,57,196,186,77,197,52,166,133,102,
                                  139,114,25,127,109>>]},
                           {rabbit_msg_store,fetch_and_increment_cache,1},
                           {rabbit_msg_store,read,2},
                           {rabbit_variable_queue,fetch_from_q3_or_delta,1},
                           {rabbit_amqqueue_process,handle_call,3},
                           {gen_server2,handle_msg,7},
                           {proc_lib,wake_up,3}]},
                      {gen_server2,call,
                          [<0.4306.0>,
                           {basic_get,<0.26578.21>,false},
                           infinity]}},
                     [{gen_server2,call,3},
                      {rabbit_misc,with_exit_handler,2},
                      {rabbit_channel,handle_method,3},
                      {rabbit_channel,handle_cast,2},
                      {gen_server2,handle_msg,7},
                      {proc_lib,wake_up,3}]}
      in function  gen_server2:terminate/6
    ancestors: [<0.26577.21>]
    messages: []
    links: [<0.26576.21>,<0.26577.21>]
    dictionary: [{permission_cache,
                      [{{resource,<<"/">>,queue,<<"scoring-completed">>},
                        read},
                       {{resource,<<"/">>,exchange,<<"scoring">>},write}]},
                  {guid,{{4,<0.26578.21>},920577}}]
    trap_exit: true
    status: running
    heap_size: 121393
    stack_size: 24
    reductions: 330830447
  neighbours:
    neighbour: [{pid,<0.26576.21>},
                  {registered_name,[]},
                  {initial_call,{rabbit_writer,mainloop,1}},
                  {current_function,{erlang,hibernate,3}},
                  {ancestors,[]},
                  {messages,[shutdown]},
                  {links,[<0.26578.21>]},
                  {dictionary,[]},
                  {trap_exit,false},
                  {status,runnable},
                  {heap_size,7},
                  {stack_size,0},
                  {reductions,13080564}]


=CRASH REPORT==== 1-Mar-2010::23:46:28 ===
  crasher:
    initial call: gen:init_it/6
    pid: <0.1518.0>
    registered_name: []
    exception exit: {badarg,[{ets,lookup,
                                  [217134,
                                   <<6,83,78,49,79,166,176,26,232,128,113,
                                     103,68,127,144,203>>]},
                             {rabbit_msg_store_ets_index,lookup,2},
                             {rabbit_msg_store,read,2},

{rabbit_variable_queue,fetch_from_q3_or_delta,1},
                             {rabbit_amqqueue_process,handle_call,3},
                             {gen_server2,handle_msg,7},
                             {proc_lib,wake_up,3}]}
      in function  gen_server2:terminate/6
    ancestors: [rabbit_amqqueue_sup,rabbit_sup,<0.101.0>]
    messages: []
    links: [<0.1267.0>]
    dictionary: [{fhc_age_tree,{0,nil}}]
    trap_exit: true
    status: running
    heap_size: 317811
    stack_size: 24
    reductions: 106370888
  neighbours:

=CRASH REPORT==== 1-Mar-2010::23:46:28 ===
  crasher:
    initial call: gen:init_it/6
    pid: <0.9205.23>
    registered_name: []
    exception exit: {{{badarg,
                          [{ets,lookup,
                               [217134,
                                <<6,83,78,49,79,166,176,26,232,128,113,103,
                                  68,127,144,203>>]},
                           {rabbit_msg_store_ets_index,lookup,2},
                           {rabbit_msg_store,read,2},
                           {rabbit_variable_queue,fetch_from_q3_or_delta,1},
                           {rabbit_amqqueue_process,handle_call,3},
                           {gen_server2,handle_msg,7},
                           {proc_lib,wake_up,3}]},
                      {gen_server2,call,
                          [<0.1518.0>,
                           {basic_get,<0.9205.23>,false},
                           infinity]}},
                     [{gen_server2,call,3},
                      {rabbit_misc,with_exit_handler,2},
                      {rabbit_channel,handle_method,3},
                      {rabbit_channel,handle_cast,2},
                      {gen_server2,handle_msg,7},
                      {proc_lib,wake_up,3}]}
      in function  gen_server2:terminate/6
    ancestors: [<0.9204.23>]
    messages: []
    links: [<0.9203.23>,<0.9204.23>]
    dictionary: [{permission_cache,
                      [{{resource,<<"/">>,queue,<<"update-HIGH">>},
                        read}]},
                  {guid,{{4,<0.9205.23>},94}}]
    trap_exit: true
    status: running
    heap_size: 610
    stack_size: 24
    reductions: 47972
  neighbours:
    neighbour: [{pid,<0.9203.23>},
                  {registered_name,[]},
                  {initial_call,{rabbit_writer,mainloop,1}},
                  {current_function,{erlang,hibernate,3}},
                  {ancestors,[]},
                  {messages,[shutdown]},
                  {links,[<0.9205.23>]},
                  {dictionary,[]},
                  {trap_exit,false},
                  {status,runnable},
                  {heap_size,7},
                  {stack_size,0},
                  {reductions,278}]


=CRASH REPORT==== 1-Mar-2010::23:46:28 ===
  crasher:
    initial call: gen:init_it/6
    pid: <0.9205.23>
    registered_name: []
    exception exit: {{{badarg,
                          [{ets,lookup,
                               [217134,
                                <<6,83,78,49,79,166,176,26,232,128,113,103,
                                  68,127,144,203>>]},
                           {rabbit_msg_store_ets_index,lookup,2},
                           {rabbit_msg_store,read,2},
                           {rabbit_variable_queue,fetch_from_q3_or_delta,1},
                           {rabbit_amqqueue_process,handle_call,3},
                           {gen_server2,handle_msg,7},
                           {proc_lib,wake_up,3}]},
                      {gen_server2,call,
                          [<0.1518.0>,
                           {basic_get,<0.9205.23>,false},
                           infinity]}},
                     [{gen_server2,call,3},
                      {rabbit_misc,with_exit_handler,2},
                      {rabbit_channel,handle_method,3},
                      {rabbit_channel,handle_cast,2},
                      {gen_server2,handle_msg,7},
                      {proc_lib,wake_up,3}]}
      in function  gen_server2:terminate/6
    ancestors: [<0.9204.23>]
    messages: []
    links: [<0.9203.23>,<0.9204.23>]
    dictionary: [{permission_cache,
                      [{{resource,<<"/">>,queue,<<"update-HIGH">>},
                        read}]},
                  {guid,{{4,<0.9205.23>},94}}]
    trap_exit: true
    status: running
    heap_size: 610
    stack_size: 24
    reductions: 47972
  neighbours:
    neighbour: [{pid,<0.9203.23>},
                  {registered_name,[]},
                  {initial_call,{rabbit_writer,mainloop,1}},
                  {current_function,{erlang,hibernate,3}},
                  {ancestors,[]},
                  {messages,[shutdown]},
                  {links,[<0.9205.23>]},
                  {dictionary,[]},
                  {trap_exit,false},
                  {status,runnable},
                  {heap_size,7},
                  {stack_size,0},
                  {reductions,278}]
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20100301/97d28e2b/attachment.htm 

From matthias at lshift.net  Tue Mar  2 04:56:06 2010
From: matthias at lshift.net (Matthias Radestock)
Date: Tue, 02 Mar 2010 04:56:06 +0000
Subject: [rabbitmq-discuss] Crash reports for bug21673 branch
In-Reply-To: <401b577e1003012036n522f28b0s939a86237d69a0cf@mail.gmail.com>
References: <401b577e1003012036n522f28b0s939a86237d69a0cf@mail.gmail.com>
Message-ID: <4B8C9A66.30709@lshift.net>

Scott,

scott w wrote:
> One of my rabbitmq boxes (with bug21673 branc)  stopped responding and 
> dumped a boat load of crash reports to rabbit-sasl.log. Below are the 
> last four crash reports excerpted from the file.

It's usually the *first* few reports that are the most interesting. Can 
you upload the entire rabbit.log and rabbit-sasl.log somewhere for us to 
see?


Regards,

Matthias.



From chen650 at yahoo.com  Tue Mar  2 08:38:28 2010
From: chen650 at yahoo.com (alex chen)
Date: Tue, 2 Mar 2010 00:38:28 -0800 (PST)
Subject: [rabbitmq-discuss] limit number of messages buffered in memory in
	new persister
Message-ID: <908041.74697.qm@web31808.mail.mud.yahoo.com>

Hi,

We are using new persister.  When client publishes at high rate, messages are buffered in memory before writing to disk.  In this case if the server crashes, those messages are lost.  I am wondering if rabbitmq could add a configuration parameter on server side to limit the number of messages that have not been written to the disk?
thanks.

-alex



      



From matthew at lshift.net  Tue Mar  2 11:23:09 2010
From: matthew at lshift.net (Matthew Sackman)
Date: Tue, 2 Mar 2010 11:23:09 +0000
Subject: [rabbitmq-discuss] limit number of messages buffered in memory
 in new persister
In-Reply-To: <908041.74697.qm@web31808.mail.mud.yahoo.com>
References: <908041.74697.qm@web31808.mail.mud.yahoo.com>
Message-ID: <20100302112309.GO1641@mrnibble.lshift.net>

Hi Alex,

On Tue, Mar 02, 2010 at 12:38:28AM -0800, alex chen wrote:
> We are using new persister.  When client publishes at high rate, messages are buffered in memory before writing to disk.  In this case if the server crashes, those messages are lost.  I am wondering if rabbitmq could add a configuration parameter on server side to limit the number of messages that have not been written to the disk?

There is no such parameter, and adding one would be very tricky indeed
giving the number of processes and corresponding mailboxes that messages
can sit in. Your best bet to limit this is to use transactions - if you
put the publishing channel in transactional mode, and then issue a
commit every, say, 100 publishes, then you will ensure that no more than
100 messages (from that publisher) are ever pending being written to
disk. However, be warned that a commit must also fsync various files,
which is an expensive operation on rotating disks. SSDs can do fsyncs in
constant time, about 1000 times faster than rotating disks. Thus if
performance is important here, you will want to carefully balance the
number of outstanding messages, and maybe investigate SSDs if you find
performance suffers too much.

Note that in the case of multiple publishers doing multiple commits at
the same time, we coalesce commits thus the worst case is one fsync per
commit, and it's frequently less than one fsync per commit.

Matthew



From matthew at lshift.net  Tue Mar  2 11:58:57 2010
From: matthew at lshift.net (Matthew Sackman)
Date: Tue, 2 Mar 2010 11:58:57 +0000
Subject: [rabbitmq-discuss] Crash reports for bug21673 branch
In-Reply-To: <4B8C9A66.30709@lshift.net>
References: <401b577e1003012036n522f28b0s939a86237d69a0cf@mail.gmail.com>
	<4B8C9A66.30709@lshift.net>
Message-ID: <20100302115856.GP1641@mrnibble.lshift.net>

On Tue, Mar 02, 2010 at 04:56:06AM +0000, Matthias Radestock wrote:
> scott w wrote:
> > One of my rabbitmq boxes (with bug21673 branc)  stopped responding and 
> > dumped a boat load of crash reports to rabbit-sasl.log. Below are the 
> > last four crash reports excerpted from the file.
> 
> It's usually the *first* few reports that are the most interesting. Can 
> you upload the entire rabbit.log and rabbit-sasl.log somewhere for us to 
> see?

The log entries you've shown us show that the rabbit_msg_store process
has crashed (which is why ets:lookup is failing with badarg - the table
has disappeared because its owner - the msg_store process - has died).
The log entries you've shown us do not suggest why the msg_store process
has crashed. The earliest entries in the logs which show something going
wrong may be more helpful. Also, which revision are you using?: I fixed
a number of bugs in the last couple of weeks which you may be hitting if
you've not kept up to date.

Matthew



From matthew at lshift.net  Tue Mar  2 12:19:29 2010
From: matthew at lshift.net (Matthew Sackman)
Date: Tue, 2 Mar 2010 12:19:29 +0000
Subject: [rabbitmq-discuss] problem with an HA pair of rabbitmq servers
In-Reply-To: <621b44ae1002281841o35f958f8pf1fd3d9443430c87@mail.gmail.com>
References: <621b44ae1002281841o35f958f8pf1fd3d9443430c87@mail.gmail.com>
Message-ID: <20100302121928.GQ1641@mrnibble.lshift.net>

Hi Allan,

On Sun, Feb 28, 2010 at 06:41:19PM -0800, allan bailey wrote:
> We have a pair of rabbitmq servers.   The 1st server periodically does a lot
> of intense I/O copying data
> out to the 2nd server.   This apparently causes timeouts that then cause a
> partitioning of the cluster.

Very interesting problem - this isn't something we've come across.

I think the fix is to change the net ticktime. The default here is
apparently 60 seconds, and the below diff changes that to 500 seconds.
Obviously with larger values, the cluster will take longer to notice an
error if something bad happens. Please do let us know how you get on.

Obviously, this'll require building from source...

--- a/src/rabbit_node_monitor.erl       Sun Feb 28 10:25:51 2010 +0000
+++ b/src/rabbit_node_monitor.erl       Tue Mar 02 12:15:45 2010 +0000
@@ -48,6 +48,7 @@
 %%--------------------------------------------------------------------
 
 init([]) ->
+    net_kernel:set_net_ticktime(500),
     ok = net_kernel:monitor_nodes(true),
     {ok, no_state}.
 
Matthew



From matthew at lshift.net  Tue Mar  2 12:26:59 2010
From: matthew at lshift.net (Matthew Sackman)
Date: Tue, 2 Mar 2010 12:26:59 +0000
Subject: [rabbitmq-discuss] problem with an HA pair of rabbitmq servers
In-Reply-To: <20100302121928.GQ1641@mrnibble.lshift.net>
References: <621b44ae1002281841o35f958f8pf1fd3d9443430c87@mail.gmail.com>
	<20100302121928.GQ1641@mrnibble.lshift.net>
Message-ID: <20100302122659.GR1641@mrnibble.lshift.net>

On Tue, Mar 02, 2010 at 12:19:29PM +0000, Matthew Sackman wrote:
> Obviously, this'll require building from source...

Actually, you shouldn't need that patch - it would seem that the
parameters -kernel net_ticktime 500 should do the same. If you put in
your rabbitmq.conf file (which under linux should live in
/etc/rabbitmq/rabbitmq.conf):

SERVER_START_ARGS="-kernel net_ticktime 500"

Then you should find that works as well as the patch (and doesn't
require building from source).

Matthew



From matthew at lshift.net  Tue Mar  2 12:43:37 2010
From: matthew at lshift.net (Matthew Sackman)
Date: Tue, 2 Mar 2010 12:43:37 +0000
Subject: [rabbitmq-discuss] Node/Broker failover and recreating queues
 on another node
In-Reply-To: <4d260fa71003011427h43fd576ej18bf5b46766174b3@mail.gmail.com>
References: <4d260fa71003011427h43fd576ej18bf5b46766174b3@mail.gmail.com>
Message-ID: <20100302124337.GB18790@mrnibble.lshift.net>

Hi Matthew,

On Tue, Mar 02, 2010 at 08:57:45AM +1030, Matthew Dunn wrote:
> *It's OK for a few messages to be dropped when a broker goes down
> *I need to load balance these messages
> *Availability is more important than dropping the ocassional message
> *I would prefer messages only be proccessed once.

Is this in fact rather similar to what the standard MySQL master/slave
HA setup is - i.e. async from the master to the slave, but instant
availability of the slave when the master fails, and the slave is
(pretty much) unusable up until the master fails?

> If the broker hosting the public queue crashes or is unavailable. Each
> consumer will connect to a new available broker and recreate the queue there
> with the same name.

Your entire plan can be implemented using the new rabbitmq-shovel
plugin. I would recommend you try this out as it was written for exactly
these situations.

> The question I have is, if I have created a public queue on a different
> broker, when the crashed broker comes back online will there be a problem
> with conflicting queues?

No, provided you don't use clustering.

> *Broker A with Queue A Crashes
> *Consumers failover to Broker B
> *A consumer recreates Queue A on Broker B
> *Broker A is restored -- Will Broker A have problems starting because Queue
> A has been recreated elsewhere?

I would suggest a slight variation. Brokers A and B are both up. The
shovel connects from your local "leaf" broker to both brokers, creating
queues and consuming from both queues. The publishers can then publish
to either broker and the messages will get through to the consumers, who
are consuming via their local leaf brokers.

In event of failure, hopefully the queues on A and B will be pretty
short, if not empty, so you shouldn't lose much. The shovels will
continue, and as soon as the failed node comes back up, will reconnect
to the node, recreating the queues and consuming as necessary. The
publishers simply need to have some logic to be able to switch between
either broker if they find a node has failed.

Is that sufficient for your needs?

Matthew



From matthias at lshift.net  Tue Mar  2 12:50:21 2010
From: matthias at lshift.net (Matthias Radestock)
Date: Tue, 02 Mar 2010 12:50:21 +0000
Subject: [rabbitmq-discuss] problem with an HA pair of rabbitmq servers
In-Reply-To: <20100302122659.GR1641@mrnibble.lshift.net>
References: <621b44ae1002281841o35f958f8pf1fd3d9443430c87@mail.gmail.com>	<20100302121928.GQ1641@mrnibble.lshift.net>
	<20100302122659.GR1641@mrnibble.lshift.net>
Message-ID: <4B8D098D.7010600@lshift.net>

Matthew Sackman wrote:
> If you put in your rabbitmq.conf file (which under linux should live
> in /etc/rabbitmq/rabbitmq.conf):
> SERVER_START_ARGS="-kernel net_ticktime 500"

or stick
   [{kernel, [{net_ticktime, 500}]}].
in rabbitmq.config in the same dir as above, i.e. typically /etc/rabbitmq/.


Matthias.



From matthias at lshift.net  Tue Mar  2 12:53:45 2010
From: matthias at lshift.net (Matthias Radestock)
Date: Tue, 02 Mar 2010 12:53:45 +0000
Subject: [rabbitmq-discuss] Node/Broker failover and recreating queues
 on another node
In-Reply-To: <20100302124337.GB18790@mrnibble.lshift.net>
References: <4d260fa71003011427h43fd576ej18bf5b46766174b3@mail.gmail.com>
	<20100302124337.GB18790@mrnibble.lshift.net>
Message-ID: <4B8D0A59.3020805@lshift.net>

Matthew Sackman wrote:
> On Tue, Mar 02, 2010 at 08:57:45AM +1030, Matthew Dunn wrote:
>> The question I have is, if I have created a public queue on a different
>> broker, when the crashed broker comes back online will there be a problem
>> with conflicting queues?
> 
> No, provided you don't use clustering.

Alternatively, use clustering but make sure the queues are non-durable.


Matthias.



From glenn at rempe.us  Tue Mar  2 20:50:55 2010
From: glenn at rempe.us (Glenn Rempe)
Date: Tue, 2 Mar 2010 12:50:55 -0800
Subject: [rabbitmq-discuss] Erlang Client Example Code
In-Reply-To: <20100301102437.GA1641@mrnibble.lshift.net>
References: <6cfccb3d1002242126y62352efahd95564b02d12c727@mail.gmail.com> 
	<e40d4f541002251150v6b44946ayd19a5a4ab278a06b@mail.gmail.com> 
	<269388e31002251537q57c400c5t3b128179be97ab87@mail.gmail.com> 
	<6cfccb3d1002252153p5ba83d62hec0bbd10db255e86@mail.gmail.com> 
	<269388e31002252318r27002d5r92bdf40794979990@mail.gmail.com> 
	<6cfccb3d1002261414x2cdbd761i293aab07a00a9846@mail.gmail.com> 
	<6cfccb3d1002271350j6fe74bf4x7a0515b18a7b0e43@mail.gmail.com> 
	<20100301102437.GA1641@mrnibble.lshift.net>
Message-ID: <6cfccb3d1003021250o39a7d606radca3319f934968b@mail.gmail.com>

Thanks for the tip Matthew, I'll try that out. :-)

G

On Mon, Mar 1, 2010 at 2:24 AM, Matthew Sackman <matthew at lshift.net> wrote:
> On Sat, Feb 27, 2010 at 01:50:17PM -0800, Glenn Rempe wrote:
>> I took a look at the amqp_dbq module in the client test dir.
>> Unfortunately, I'm not clear how I would make use of that module and
>> I've found no mention of it in my search of the mailing list (Google
>> finds only a single result which is the commit message).
>
> If, in the erlang client, you do a make run, and you then run some of
> the functions in the amqp_dbg module, and you then run some client code
> then you'll find that all sorts of interesting debugging output appears
> in the erlang shell. The functions are really just suitable predefined
> wrappers around the erlang dbg module (which in turn wraps the standard
> erlang tracer).
>
> Matthew
>
> _______________________________________________
> rabbitmq-discuss mailing list
> rabbitmq-discuss at lists.rabbitmq.com
> http://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss
>



-- 
Glenn Rempe

email                 : glenn at rempe.us
voice                 : (415) 894-5366 or (415)-89G-LENN
twitter                : @grempe
contact info        : http://www.rempe.us/contact.html
pgp                    : http://www.rempe.us/gnupg.txt



From zirpubolci at gmail.com  Tue Mar  2 22:58:18 2010
From: zirpubolci at gmail.com (allan bailey)
Date: Tue, 2 Mar 2010 14:58:18 -0800
Subject: [rabbitmq-discuss] problem with an HA pair of rabbitmq servers
In-Reply-To: <20100302122659.GR1641@mrnibble.lshift.net>
References: <621b44ae1002281841o35f958f8pf1fd3d9443430c87@mail.gmail.com>
	<20100302121928.GQ1641@mrnibble.lshift.net>
	<20100302122659.GR1641@mrnibble.lshift.net>
Message-ID: <621b44ae1003021458y93e1af3n8bfb8313a24ad36@mail.gmail.com>

We've decided to just move the processing that happens on that box to
another server, and leave the HA pair dedicated to being
a rabbitmq cluster.

If it happens again though, I'll test this out.

-allan


On Tue, Mar 2, 2010 at 4:26 AM, Matthew Sackman <matthew at lshift.net> wrote:

> On Tue, Mar 02, 2010 at 12:19:29PM +0000, Matthew Sackman wrote:
> > Obviously, this'll require building from source...
>
> Actually, you shouldn't need that patch - it would seem that the
> parameters -kernel net_ticktime 500 should do the same. If you put in
> your rabbitmq.conf file (which under linux should live in
> /etc/rabbitmq/rabbitmq.conf):
>
> SERVER_START_ARGS="-kernel net_ticktime 500"
>
> Then you should find that works as well as the patch (and doesn't
> require building from source).
>
> Matthew
>
> _______________________________________________
> rabbitmq-discuss mailing list
> rabbitmq-discuss at lists.rabbitmq.com
> http://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20100302/cad86c4f/attachment.htm 

From matthias at lshift.net  Wed Mar  3 00:55:35 2010
From: matthias at lshift.net (Matthias Radestock)
Date: Wed, 03 Mar 2010 00:55:35 +0000
Subject: [rabbitmq-discuss] Crash reports for bug21673 branch
In-Reply-To: <401b577e1003021402ne106f2exb6e7edd1419597c1@mail.gmail.com>
References: <401b577e1003012036n522f28b0s939a86237d69a0cf@mail.gmail.com>	
	<4B8C9A66.30709@lshift.net>
	<401b577e1003021402ne106f2exb6e7edd1419597c1@mail.gmail.com>
Message-ID: <4B8DB387.1020802@lshift.net>

Scott,

scott w wrote:
> The whole file is hundreds of MB. I've attached a gzipped copy of the 
> first 10K lines of output from rabbit-sasl.log. The rabbit.log file 
> doesn't have anything interesting, just info level messages about 
> connections being established.
> 
> I'm not forwarding to the main list since I don't want to send 66K of 
> data to everyone.
> 
> Also to answer Matthew's question about which version I am using, here 
> is what "hg summary" reports:
> 
> parent: 2781:9e0c76ab1039 tip
>  merge default ? bug 21673
> branch: bug21673
> commit: 182 unknown (clean)
> update: (current)
> 
> Any feedback would be helpful.

The first entry in the sasl log does indeed point to the problem:

=CRASH REPORT==== 27-Feb-2010::22:18:11 ===
   crasher:
     initial call: gen:init_it/7
     pid: <0.194.0>
     registered_name: rabbit_msg_store_gc
     exception exit: {unhandled_info,
                         {file_handle_cache,maximum_eldest_since_use,
                             1586.6666666666667}}
       in function  gen_server2:terminate/6
     ancestors: [rabbit_msg_store,rabbit_sup,<0.76.0>]
     messages: []
     links: [<0.193.0>]
     dictionary: [{fhc_age_tree,{0,nil}}]
     trap_exit: false
     status: running
     heap_size: 10946
     stack_size: 24
     reductions: 42501230341
   neighbours:

The bug that causes this got fixed on 18-Feb, whereas the version you 
are running is two days older. So updating your checkout to the latest 
version will give you happier rabbit.


Regards,

Matthias.



From mrdunn at gmail.com  Wed Mar  3 06:08:39 2010
From: mrdunn at gmail.com (Matthew Dunn)
Date: Wed, 3 Mar 2010 16:38:39 +1030
Subject: [rabbitmq-discuss] Node/Broker failover and recreating queues
	on another node
In-Reply-To: <20100302124337.GB18790@mrnibble.lshift.net>
References: <4d260fa71003011427h43fd576ej18bf5b46766174b3@mail.gmail.com>
	<20100302124337.GB18790@mrnibble.lshift.net>
Message-ID: <4d260fa71003022208j12f23709uef3ac65a8186aa60@mail.gmail.com>

Hi Matthew,

Thank you very much. That was very informative and has given me plenty to
think about for now.

I will be engaging in some prototyping of this over the next few weeks.

Thanks again,

Matt.

On Tue, Mar 2, 2010 at 11:13 PM, Matthew Sackman <matthew at lshift.net> wrote:

> Hi Matthew,
>
> On Tue, Mar 02, 2010 at 08:57:45AM +1030, Matthew Dunn wrote:
> > *It's OK for a few messages to be dropped when a broker goes down
> > *I need to load balance these messages
> > *Availability is more important than dropping the ocassional message
> > *I would prefer messages only be proccessed once.
>
> Is this in fact rather similar to what the standard MySQL master/slave
> HA setup is - i.e. async from the master to the slave, but instant
> availability of the slave when the master fails, and the slave is
> (pretty much) unusable up until the master fails?
>
> > If the broker hosting the public queue crashes or is unavailable. Each
> > consumer will connect to a new available broker and recreate the queue
> there
> > with the same name.
>
> Your entire plan can be implemented using the new rabbitmq-shovel
> plugin. I would recommend you try this out as it was written for exactly
> these situations.
>
> > The question I have is, if I have created a public queue on a different
> > broker, when the crashed broker comes back online will there be a problem
> > with conflicting queues?
>
> No, provided you don't use clustering.
>
> > *Broker A with Queue A Crashes
> > *Consumers failover to Broker B
> > *A consumer recreates Queue A on Broker B
> > *Broker A is restored -- Will Broker A have problems starting because
> Queue
> > A has been recreated elsewhere?
>
> I would suggest a slight variation. Brokers A and B are both up. The
> shovel connects from your local "leaf" broker to both brokers, creating
> queues and consuming from both queues. The publishers can then publish
> to either broker and the messages will get through to the consumers, who
> are consuming via their local leaf brokers.
>
> In event of failure, hopefully the queues on A and B will be pretty
> short, if not empty, so you shouldn't lose much. The shovels will
> continue, and as soon as the failed node comes back up, will reconnect
> to the node, recreating the queues and consuming as necessary. The
> publishers simply need to have some logic to be able to switch between
> either broker if they find a node has failed.
>
> Is that sufficient for your needs?
>
> Matthew
>
> _______________________________________________
> rabbitmq-discuss mailing list
> rabbitmq-discuss at lists.rabbitmq.com
> http://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20100303/e9c8b6f8/attachment.htm 

From chen650 at yahoo.com  Wed Mar  3 08:39:31 2010
From: chen650 at yahoo.com (alex chen)
Date: Wed, 3 Mar 2010 00:39:31 -0800 (PST)
Subject: [rabbitmq-discuss] limit number of messages buffered in memory
	in new persister
In-Reply-To: <20100302112309.GO1641@mrnibble.lshift.net>
References: <908041.74697.qm@web31808.mail.mud.yahoo.com>
	<20100302112309.GO1641@mrnibble.lshift.net>
Message-ID: <663717.67511.qm@web31813.mail.mud.yahoo.com>

Thanks a lot Matthew!  We will try commit on every 100 publishes as you suggested.  One problem is that client needs to keep a copy of uncommitted messages to handle broker restart.

Looking into the server's src code, it seems to me rabbit_reader is the process that accepts the publish.  I am wondering when it sends to message to the message writer's inbox, can it wait for the ack from message writer?  then it can stop accepting publish from client if there are too many un-acked messages.   This will simplify client's publish a lot - no need to use commit, and no need to listen for channel flow.

thanks.

-alex



> From: Matthew Sackman <matthew at lshift.net>

> There is no such parameter, and adding one would be very tricky indeed
giving the number of processes and corresponding mailboxes that messages
can sit in. Your best bet to limit this is to use transactions - if you
put the publishing channel in transactional mode, and then issue a
commit every, say, 100 publishes,


      



From matthias at lshift.net  Wed Mar  3 09:22:35 2010
From: matthias at lshift.net (Matthias Radestock)
Date: Wed, 03 Mar 2010 09:22:35 +0000
Subject: [rabbitmq-discuss] limit number of messages buffered in memory
 in new persister
In-Reply-To: <663717.67511.qm@web31813.mail.mud.yahoo.com>
References: <908041.74697.qm@web31808.mail.mud.yahoo.com>	<20100302112309.GO1641@mrnibble.lshift.net>
	<663717.67511.qm@web31813.mail.mud.yahoo.com>
Message-ID: <4B8E2A5B.4040509@lshift.net>

Alex,

alex chen wrote:

> One problem is that client needs to keep a copy of uncommitted
> messages to handle broker restart.

Publishing is asynchronous. Hence a publisher has no idea when a 
particular message has been accepted by the server and safely written to 
disk for recovery in the event of a restart, *except* by using 
transaction. So if you don't use transactions, you'd still have to keep 
copies of messages ...but you won't know how many and for how long.

> Looking into the server's src code, it seems to me rabbit_reader is 
> the process that accepts the publish.  I am wondering when it sends 
> to message to the message writer's inbox, can it wait for the ack 
> from message writer?  then it can stop accepting publish from client 
> if there are too many un-acked messages.

We have spent a good few person weeks discussing various options along
those lines. Here are a few points to note:

1) introducing any synchrony into the message flow carries significant
performance penalties.

2) there is no way for a server to stop accepting publishes without also
stopping to accept anything else, notably acks, since any AMQP
connection can carry a mixture of commands.

3) AMQP 0-8/9/9-1 are in desperate need of an inexpensive mechanism that
allows clients to find out when publishes have been accepted. We have a
few design ideas here and may extend the protocol to implement them. Not 
any time soon though.

> This will simplify client's publish a lot - no need to use commit

I don't see commits as overly burdensome. After all, what you are
suggesting above is in effect a synchronous publish, in which case just
introduce a helper method that does a publish followed by a commit.

> no need to listen for channel flow.

There are good reasons for the existence of something like channel.flow. 
It allows clients to continue performing operations other than publish, 
notably ack'ing of messages.


Regards,

Matthias.



From jmann at versatile.com  Wed Mar  3 11:42:31 2010
From: jmann at versatile.com (John Mann)
Date: Wed, 3 Mar 2010 06:42:31 -0500
Subject: [rabbitmq-discuss] Duplicate Messages received after
	basicRecoveryAsync() is called.
In-Reply-To: <4B886C51.4090505@lshift.net>
References: <B72F8B56-A8B0-409D-9297-2C3D6F37136E@versatile.com>	<4B86FA53.6080700@lshift.net>	<BDEF84F6-B09B-4DA3-AE7A-E92DF440852D@versatile.com>	<4B87B3C3.9080203@lshift.net>	<0D8650CD-1B4F-4689-84AB-025A34EBD26C@versatile.com>
	<4B87F217.3010906@lshift.net> <4B886C51.4090505@lshift.net>
Message-ID: <A2F999AF-2AD9-4910-9036-1983B90C8B46@versatile.com>

Thanks for all of the help.  I got it working!

I had no luck with calling basicCancel() and then waiting for the handleCancelOK() method to be called.  I realized after stepping through the source with a debugger that a Channel disassociates the Consumer when basicCancel() is called:

ChannelN.java: line 645:

                Consumer callback = _consumers.remove(consumerTag);

The only way that I knew I could reestablish this association was by calling Channel.basicConsume().  Unfortunately this didn't work.  Messages after that point were never delivered.  

I finally used the close and re-open the Channel approach.  This worked as expected.

If anyone would like to see my solution code, let me know.

Thanks.

-John

On Feb 26, 2010, at 7:50 PM, Tony Garnock-Jones wrote:

> Matthias Radestock wrote:
>> 1) send basic.cancel
>> 2) wait for basic.cancel-ok
>> The hook for step 2 is provided by overriding the handleCancelOk method 
>> on the consumer class.
> 
> Note also that basicCancel() doesn't return to the caller until the
> basic.cancel-ok has been received and completely processed by the client
> library and the Consumer object.
> 
> Regards,
>  Tony

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20100303/0bc15a77/attachment.htm 

From matthias at lshift.net  Wed Mar  3 13:00:10 2010
From: matthias at lshift.net (Matthias Radestock)
Date: Wed, 03 Mar 2010 13:00:10 +0000
Subject: [rabbitmq-discuss] Duplicate Messages received
 after	basicRecoveryAsync() is called.
In-Reply-To: <A2F999AF-2AD9-4910-9036-1983B90C8B46@versatile.com>
References: <B72F8B56-A8B0-409D-9297-2C3D6F37136E@versatile.com>	<4B86FA53.6080700@lshift.net>	<BDEF84F6-B09B-4DA3-AE7A-E92DF440852D@versatile.com>	<4B87B3C3.9080203@lshift.net>	<0D8650CD-1B4F-4689-84AB-025A34EBD26C@versatile.com>	<4B87F217.3010906@lshift.net>
	<4B886C51.4090505@lshift.net>
	<A2F999AF-2AD9-4910-9036-1983B90C8B46@versatile.com>
Message-ID: <4B8E5D5A.40804@lshift.net>

John,

John Mann wrote:
> I had no luck with calling basicCancel() and then waiting for the 
> handleCancelOK() method to be called.  I realized after stepping through 
> the source with a debugger that a Channel disassociates the Consumer 
> when basicCancel() is called:
> 
> ChannelN.java: line 645:
> 
>                 Consumer callback = _consumers.remove(consumerTag);

That codes is part of an rpc continuation. It gets called when the 
cancel-ok arrives, and the call to handleCancelOk happens right after 
the above line.

> The only way that I knew I could reestablish this association was by 
> calling Channel.basicConsume().  Unfortunately this didn't work. 
>  Messages after that point were never delivered.  

Here is the sequence of client actions I proposed:

1) send basic.cancel
2) wait for basic.cancel-ok
3) send basic.recover
4) send basic.consume

So you do indeed need a basic.consume to re-establish the consumer.

One needs to be very careful with the threading here though. For 
example, the basic.consume must not be issued from the handleCancelOk 
callback. Doing so would most likely cause a deadlock. Perhaps that's 
what you were seeing.

Anyway, I'm glad the channel close/re-open works as expected.


Regards,

Matthias.



From jmann at versatile.com  Wed Mar  3 14:16:28 2010
From: jmann at versatile.com (John Mann)
Date: Wed, 3 Mar 2010 09:16:28 -0500
Subject: [rabbitmq-discuss] Duplicate Messages received after
	basicRecoveryAsync() is called.
In-Reply-To: <4B8E5D5A.40804@lshift.net>
References: <B72F8B56-A8B0-409D-9297-2C3D6F37136E@versatile.com>
	<4B86FA53.6080700@lshift.net>
	<BDEF84F6-B09B-4DA3-AE7A-E92DF440852D@versatile.com>
	<4B87B3C3.9080203@lshift.net>
	<0D8650CD-1B4F-4689-84AB-025A34EBD26C@versatile.com>
	<4B87F217.3010906@lshift.net> <4B886C51.4090505@lshift.net>
	<A2F999AF-2AD9-4910-9036-1983B90C8B46@versatile.com>
	<4B8E5D5A.40804@lshift.net>
Message-ID: <2014b3701003030616i121a95eah946c61c5c1868539@mail.gmail.com>

On Wed, Mar 3, 2010 at 8:00 AM, Matthias Radestock <matthias at lshift.net> wrote:
> John,
>
> John Mann wrote:
>>
>> I had no luck with calling basicCancel() and then waiting for the
>> handleCancelOK() method to be called. ?I realized after stepping through the
>> source with a debugger that a Channel disassociates the Consumer when
>> basicCancel() is called:
>>
>> ChannelN.java: line 645:
>>
>> ? ? ? ? ? ? ? ?Consumer callback = _consumers.remove(consumerTag);
>
> That codes is part of an rpc continuation. It gets called when the cancel-ok
> arrives, and the call to handleCancelOk happens right after the above line.
>
>> The only way that I knew I could reestablish this association was by
>> calling Channel.basicConsume(). ?Unfortunately this didn't work. ?Messages
>> after that point were never delivered.
>
> Here is the sequence of client actions I proposed:
>
> 1) send basic.cancel
> 2) wait for basic.cancel-ok
> 3) send basic.recover
> 4) send basic.consume
>
> So you do indeed need a basic.consume to re-establish the consumer.
>
> One needs to be very careful with the threading here though. For example,
> the basic.consume must not be issued from the handleCancelOk callback. Doing
> so would most likely cause a deadlock. Perhaps that's what you were seeing.
>
> Anyway, I'm glad the channel close/re-open works as expected.
>

That's exactly what I was seeing.

> Anyway, I'm glad the channel close/re-open works as expected.

Me too.  Thanks again for your help.



-- 
-JC



From scottblanc at gmail.com  Wed Mar  3 16:30:05 2010
From: scottblanc at gmail.com (scott w)
Date: Wed, 3 Mar 2010 08:30:05 -0800
Subject: [rabbitmq-discuss] Crash reports for bug21673 branch
In-Reply-To: <4B8DB387.1020802@lshift.net>
References: <401b577e1003012036n522f28b0s939a86237d69a0cf@mail.gmail.com>
	<4B8C9A66.30709@lshift.net>
	<401b577e1003021402ne106f2exb6e7edd1419597c1@mail.gmail.com>
	<4B8DB387.1020802@lshift.net>
Message-ID: <401b577e1003030830m51aa1043mc00dab8fe4582e68@mail.gmail.com>

Ah ok great to know. Thanks Matthias!

On Tue, Mar 2, 2010 at 4:55 PM, Matthias Radestock <matthias at lshift.net>wrote:

> Scott,
>
>
> scott w wrote:
>
>> The whole file is hundreds of MB. I've attached a gzipped copy of the
>> first 10K lines of output from rabbit-sasl.log. The rabbit.log file doesn't
>> have anything interesting, just info level messages about connections being
>> established.
>>
>> I'm not forwarding to the main list since I don't want to send 66K of data
>> to everyone.
>>
>> Also to answer Matthew's question about which version I am using, here is
>> what "hg summary" reports:
>>
>> parent: 2781:9e0c76ab1039 tip
>>  merge default ? bug 21673
>> branch: bug21673
>> commit: 182 unknown (clean)
>> update: (current)
>>
>> Any feedback would be helpful.
>>
>
> The first entry in the sasl log does indeed point to the problem:
>
> =CRASH REPORT==== 27-Feb-2010::22:18:11 ===
>  crasher:
>    initial call: gen:init_it/7
>    pid: <0.194.0>
>    registered_name: rabbit_msg_store_gc
>    exception exit: {unhandled_info,
>                        {file_handle_cache,maximum_eldest_since_use,
>                            1586.6666666666667}}
>
>      in function  gen_server2:terminate/6
>    ancestors: [rabbit_msg_store,rabbit_sup,<0.76.0>]
>    messages: []
>    links: [<0.193.0>]
>
>    dictionary: [{fhc_age_tree,{0,nil}}]
>    trap_exit: false
>    status: running
>    heap_size: 10946
>    stack_size: 24
>    reductions: 42501230341
>  neighbours:
>
> The bug that causes this got fixed on 18-Feb, whereas the version you are
> running is two days older. So updating your checkout to the latest version
> will give you happier rabbit.
>
>
> Regards,
>
> Matthias.
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20100303/e8d1b52d/attachment.htm 

From lvh at laurensvh.be  Wed Mar  3 18:25:24 2010
From: lvh at laurensvh.be (Laurens Van Houtven)
Date: Wed, 3 Mar 2010 19:25:24 +0100
Subject: [rabbitmq-discuss] Writing applications using AMQP,
	basic design questions
Message-ID: <cedc0c091003031025p1146093byef88a2ac2c40fd1d@mail.gmail.com>

ello :-)


I'm stuck with a few questions about designing an application based on
AMQP messaging, and using RabbitMQ. I'm not sure how much of this is
RabbitMQ-specific. If anyone knows a mailing list for AMQP apps in
general or if rabbitmq-discuss is not the right place for this
message, please feel free to shout :-)

I realise it's a bunch of text, but I've tried to keep it as short as
possible without omitting stuff I thought was relevant.

Redux: a bunch of mobile clients send stuff to us. That stuff has to
be persisted, and potentially tracked live by someone monitoring a
particular mobile client through a browser. Mobile clients have UUIDs
and pre-shared certificates, signed by me. Browser clients might have
a pre-shared cert (not really necessary), but they can be uniquely
identified for auth purposes (through OpenID).

Because people want to track one particular mobile client, I think the
AMQP thing to do would be to have one queue per mobile client. As long
as we're not in AMQP/1.0 which gets rid of them there would be one
exchange, and the routing key would be the unique identifier of the
mobile client. (Sending everything to everyone is not acceptable,
because the information is sensitive.)

I'm interested in temporary queues, so that only active mobile clients
have queues running. I have read the AMQP specification (v0.8),
section 2.2.8, specifically the part about temporary queues.
Apparently any client can cause a queue to be created, and the client
creating it is responsible for creating a consumer on it.

I take it that means letting the mobile clients (with untrustworthy
software) do AMQP is a bad idea. The first idea is to have an
HTTP(S)->AMQP bridge. Why?

1. As said before, if the client (soon to be producer) is responsible
for creating a consumer, a malicious client might refuse to do that.
I'm not sure what happens then. The bridge could be responsible for
creating the consumer that persists the data. I trust the bridge.
Giving the clients the power to start a consumer that talks to a
database sounds like a disaster waiting to happen anyway.
2. Perhaps not every stupid mobile client can be taught to speak AMQP,
but *everyone* understands HTTPS.
3. AMQP seems to be more catered towards doing messaging for your
app's internals, as opposed to, for example, XMPP or perhaps even
STOMP, which is built for going to clients.
4. Authentication through pre-shared certs means client's don't have
to tell me who they are (and, as a result, attackers can't lie about
it either).
5. Not telling the mobile clients about my internal messaging means
more flexibility to change it later.

Basically, I don't really know anything about AMQP yet, and I might be
completely wrong about everything, but I'd love to pick you guy's
brains' on the matter. I have some other question regarding the other
end (monitoring in browsers: an AMQP -> HTTPS bridge to do Comet-like
things), but perhaps asking too many questions about that when I don't
even know the mobile client side makes sense is any good might be a
bit of a waste of time.


Thanks for reading this admittedly long post, and thanks in advance
for your comments and insights :-)
Laurens



From mmistroni at gmail.com  Wed Mar  3 20:31:56 2010
From: mmistroni at gmail.com (Marco Mistroni)
Date: Wed, 3 Mar 2010 20:31:56 +0000
Subject: [rabbitmq-discuss] spring - rabbitmq
Message-ID: <7e346e131003031231l1cddc3c2p30cd56e7bcb8ce9c@mail.gmail.com>

Hello all,
 i am looking for a 'spring' implementation for rabbitmq
i saw on the main rabbitmq page links to spring-rabbitmq and amqp/spring,
but  i saw no links to an ftp site or jars..
could anyone help?
do ihave to checkout hte whole project?

regards
 marco
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20100303/452a216a/attachment.htm 

From alexis.richardson at gmail.com  Wed Mar  3 20:34:52 2010
From: alexis.richardson at gmail.com (Alexis Richardson)
Date: Wed, 3 Mar 2010 20:34:52 +0000
Subject: [rabbitmq-discuss] spring - rabbitmq
In-Reply-To: <7e346e131003031231l1cddc3c2p30cd56e7bcb8ce9c@mail.gmail.com>
References: <7e346e131003031231l1cddc3c2p30cd56e7bcb8ce9c@mail.gmail.com>
Message-ID: <167204d21003031234o7025d4e3l6f36119e9bdfbbff@mail.gmail.com>

Marco

Does this help?

http://delicious.com/alexisrichardson/rabbitmq+spring

You will need to install RabbitMQ before using any of these projects.

alexis


On Wed, Mar 3, 2010 at 8:31 PM, Marco Mistroni <mmistroni at gmail.com> wrote:
> Hello all,
> ?i am looking for a 'spring' implementation for rabbitmq
> i saw on the main rabbitmq page links to spring-rabbitmq and amqp/spring,
> but? i saw no links to an ftp site or jars..
> could anyone help?
> do ihave to checkout hte whole project?
>
> regards
> ?marco
>
> _______________________________________________
> rabbitmq-discuss mailing list
> rabbitmq-discuss at lists.rabbitmq.com
> http://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss
>
>



From marcelo.cantos at gmail.com  Wed Mar  3 21:47:10 2010
From: marcelo.cantos at gmail.com (Marcelo Cantos)
Date: Wed, 3 Mar 2010 13:47:10 -0800 (PST)
Subject: [rabbitmq-discuss]  Observe metadata operations in RabbitMQ
Message-ID: <27773082.post@talk.nabble.com>


I want to send a message whenever RabbitMQ creates or deletes a queue,
exchange or binding. Is this feasible from a client API? What about as a
plug-in?
-- 
View this message in context: http://old.nabble.com/Observe-metadata-operations-in-RabbitMQ-tp27773082p27773082.html
Sent from the RabbitMQ mailing list archive at Nabble.com.




From tonyg at lshift.net  Wed Mar  3 22:54:13 2010
From: tonyg at lshift.net (Tony Garnock-Jones)
Date: Thu, 04 Mar 2010 11:54:13 +1300
Subject: [rabbitmq-discuss] message in queue
In-Reply-To: <ffa595bc1002250346m7f99dd2cr276b11ccdcd43e29@mail.gmail.com>
References: <99f8bdb8-15ec-4786-bac5-1dbf2388770f@u5g2000prd.googlegroups.com>	<4B863D2D.6040906@lshift.net>
	<ffa595bc1002250346m7f99dd2cr276b11ccdcd43e29@mail.gmail.com>
Message-ID: <4B8EE895.7090007@lshift.net>

Akhil Kodali wrote:
> The queue doesnot duplicate the message, the application happens to post
> it as it is unable to determine what is in the queue.

Is it doing something like resending a request if it doesn't receive a
reply quickly enough? The only way you can deal with this is to somehow
make requests idempotent, by discarding duplicates on the receiving side.

> To avoid duplicates one way is to expire out the messages in the queue
> after certain period of time, anyway to configure it.
> Currently I am checking it at the application level.

The application level is all there is at the moment. There is an
"expiration" field associated with each message that is intended to be
used to permit the server to GC old messages, but RabbitMQ does not
currently implement it, in part because it's tricky technically (I know,
I know, it shouldn't be, but there you have it), and in part because the
AMQP standard is in fact silent on both the syntax and the meaning of
the field (!!).

So it sounds like you're currently on the right approach: discarding
duplicates at the receiving end, based on either or both of an expiry
time and a unique message ID.

Regards,
  Tony




From matthias at lshift.net  Wed Mar  3 22:56:53 2010
From: matthias at lshift.net (Matthias Radestock)
Date: Wed, 03 Mar 2010 22:56:53 +0000
Subject: [rabbitmq-discuss] Observe metadata operations in RabbitMQ
In-Reply-To: <27773082.post@talk.nabble.com>
References: <27773082.post@talk.nabble.com>
Message-ID: <4B8EE935.6030708@lshift.net>

Marcelo,

Marcelo Cantos wrote:
> I want to send a message whenever RabbitMQ creates or deletes a queue,
> exchange or binding. Is this feasible from a client API? What about as a
> plug-in?

There is no direct support in AMQP for these resource lifecycle events, 
but ...

- this is definitely something we want to see added to rabbit at some 
point, and we have explored various experimental implementations. See 
the 'bug19230' branch for an example (beware, this code hasn't been 
touched for a while)

- there is indeed a way to implement the distribution of such events as 
a plug-in, though you will need to know a fair amount about RabbitMQ 
internals (which may change) and Erlang. Each of the activities you 
mention above results in a mnesia table event (see 
http://www.erlang.org/doc/apps/mnesia/Mnesia_chap5.html) that a plug-in 
could subscribe to, convert into a suitable AMQP message and send to an 
exchange either via the erlang client or using rabbit's internal APIs.


Regards,

Matthias.



From tonyg at lshift.net  Wed Mar  3 23:03:34 2010
From: tonyg at lshift.net (Tony Garnock-Jones)
Date: Thu, 04 Mar 2010 12:03:34 +1300
Subject: [rabbitmq-discuss] Draft of C++ rabbitMq API
In-Reply-To: <E1Nm4E9-0000gH-00.akalend-mail-ru@f289.mail.ru>
References: <E1Nm4E9-0000gH-00.akalend-mail-ru@f289.mail.ru>
Message-ID: <4B8EEAC6.8030300@lshift.net>

Hi Alexandre,

Thanks for this, it's a great start.

Alexandre Kalendarev wrote:
> Exchange class
> class AMQPExchange {
> 	AMQPExchange( AMQPConnection * cnn );
> 	void Declare(string name);
> 	void Declare(string name, int parms);
> 	void Declare(string name, int parms, map properties ); // *)?
> 	void Delete(string name)
> }

The only question I have is why these are classes. I would have expected
"factory" methods such as Declare to live on AMQPConnection itself. (Do
you intend, by the way, to support multiple channels per connection? I
can't say I recommend it, but for some scenarios it's probably pretty
useful.)

I would have expected something more like:

class AMQPConnection {
  ...
  AMQPExchange *ExchangeDeclare( ... );
  AMQPQueue *QueueDeclare( ... );
  ...
}

class AMQPExchange {
  void Delete();
  void Publish(string routingKey, ...);

  string getName();
  // etc
}

I'm afraid my C++ years are approximately a decade behind me, so please
don't read my suggestions too literally :-) It'll take me a while to get
back up to speed with what's considered good modern C++ style...

(Also, could AMQPExchange be a valuetype? It's pretty tiny, it's
stateless, and it'd be nice to avoid memory-management headaches where
possible.)

Regards,
  Tony



From tonyg at lshift.net  Wed Mar  3 23:10:54 2010
From: tonyg at lshift.net (Tony Garnock-Jones)
Date: Thu, 04 Mar 2010 12:10:54 +1300
Subject: [rabbitmq-discuss] Exposing Erlang nodes/proceses through
	RabbitMQ
In-Reply-To: <ce2570e21003010946g3f205aa3h5292ba7b48323bc9@mail.gmail.com>
References: <ce2570e21003010946g3f205aa3h5292ba7b48323bc9@mail.gmail.com>
Message-ID: <4B8EEC7E.8040909@lshift.net>

Hi Garrett,

This is really interesting topic. We thought about this a bit way back
when Rabbit was new. Things have moved on a bit since then, so perhaps
the time is right for taking another look.

Initially, we only had Erlang (and Java) libraries for speaking AMQP.
Since then, I've hacked together rabbitmq-c, which makes implementing an
Erlang distribution protocol perhaps possible, as the Erlang VM needs
its distribution protocols to be implemented in C, IIUC.

Garrett Smith wrote:
> I think brokers are a natural next step in dealing with these issues.

Yes, this makes sense. Some abstraction over the details of the network,
in a similar vein to the way SQL databases permit abstraction over the
file system.

> * Marshalling Erlang terms

term_to_binary/1 and binary_to_term/1 do nicely here :-)

> * Global process registry (e.g. sync'd fanout)

Hmm. State sync is tricky, but could be done, perhaps by addition of a
new stateful-exchange plugin? Like a "hashtable" exchange type.
(Actually maybe MikeB's LVC plugin could step in here?
http://github.com/squaremo/rabbitmq-lvc-plugin)

Alternatively, standard election techniques for use with multicast media
could be implemented. Ick.

> * remote_process() ! term()

This is where the C-level VM hackery would come in.

> * rpc:xxx

I *think* this is mostly done at the Erlang level.

> The point of this would be to make transitioning to rabbitmq from a
> standard Erlang mesh as seamless as possible. E.g. gen_server:call/2
> would just work without much/any work for the developer.

It's a lovely idea.

Regards,
  Tony



From tonyg at lshift.net  Wed Mar  3 23:20:27 2010
From: tonyg at lshift.net (Tony Garnock-Jones)
Date: Thu, 04 Mar 2010 12:20:27 +1300
Subject: [rabbitmq-discuss] SimpleRpcServer send generated queue name to
 client
In-Reply-To: <27624063.post@talk.nabble.com>
References: <27624063.post@talk.nabble.com>
Message-ID: <4B8EEEBB.4070708@lshift.net>

Hi,

glenner wrote:
> And, more general, is this a valid design using RabbitMQ/AMQP? I'm still new
> to RabbitMQ/AMQP so maybe i overlooked a more approriate way to do this..

It sounds reasonable; but it might be possible to leverage the features
of the RabbitMQ server even more than you have in mind.

For example, could it work to design a topic hierarchy for your system's
events, and then simply use an AMQP topic exchange to broadcast them to
the correct consumers?

The application-level server would then blindly send events, with an
appropriate routing key, to a named exchange it had set up, and the
clients would create private queues (using queueDeclare()) and bind them
(using queueBind()) to the exchange with appropriate binding key for
selecting the subset of events they are interested in. There need then
be no direct communication between the clients and the application-level
server.

You mentioned there were custom filter predicates. These are a potential
missing piece. If the event types don't fit nicely onto the routing keys
usable with topic exchanges, then you will be relying on client-side
filtering, which may or may not be suitable for your application. On the
other hand, if routing keys and a topic exchange get you 99% of the way
there, then the remaining small amount of filtering can easily be done
on the client side. A final option would be to implement a custom
exchange type which is capable of understanding your filter predicates
within the AMQP server itself.

Regards,
  Tony



From g at rre.tt  Wed Mar  3 23:32:09 2010
From: g at rre.tt (Garrett Smith)
Date: Wed, 3 Mar 2010 17:32:09 -0600
Subject: [rabbitmq-discuss] Writing applications using AMQP,
	basic design 	questions
In-Reply-To: <cedc0c091003031025p1146093byef88a2ac2c40fd1d@mail.gmail.com>
References: <cedc0c091003031025p1146093byef88a2ac2c40fd1d@mail.gmail.com>
Message-ID: <ce2570e21003031532v6f81701bh81e02dab32e783c4@mail.gmail.com>

Hi Laurens,

On Wed, Mar 3, 2010 at 12:25 PM, Laurens Van Houtven <lvh at laurensvh.be> wrote:
> ello :-)
>
>
> I'm stuck with a few questions about designing an application based on
> AMQP messaging, and using RabbitMQ. I'm not sure how much of this is
> RabbitMQ-specific. If anyone knows a mailing list for AMQP apps in
> general or if rabbitmq-discuss is not the right place for this
> message, please feel free to shout :-)

-snip-

> Because people want to track one particular mobile client, I think the
> AMQP thing to do would be to have one queue per mobile client. As long
> as we're not in AMQP/1.0 which gets rid of them there would be one
> exchange, and the routing key would be the unique identifier of the
> mobile client. (Sending everything to everyone is not acceptable,
> because the information is sensitive.)

Are you talking about exposing your mobile apps to external users via AMQP?

What's the nature of the public API. Is there a performance or
throughput requirement?

Working with an AMQP interface is considerably different from working
with a REST or other RPC interface. If you're thinking along these
lines, I'd float the idea by some of your users to see what they think
of the approach. That's also assuming you have a technical requirement
to use AMQP for the public interface.

> I'm interested in temporary queues, so that only active mobile clients
> have queues running. I have read the AMQP specification (v0.8),
> section 2.2.8, specifically the part about temporary queues.
> Apparently any client can cause a queue to be created, and the client
> creating it is responsible for creating a consumer on it.

You can create your queues as exclusive, which tells rabbit to auto
delete the queue once the declaring connection is closed.

> I take it that means letting the mobile clients (with untrustworthy
> software) do AMQP is a bad idea. The first idea is to have an
> HTTP(S)->AMQP bridge. Why?
>
> 1. As said before, if the client (soon to be producer) is responsible
> for creating a consumer, a malicious client might refuse to do that.
> I'm not sure what happens then. The bridge could be responsible for
> creating the consumer that persists the data. I trust the bridge.
> Giving the clients the power to start a consumer that talks to a
> database sounds like a disaster waiting to happen anyway.
> 2. Perhaps not every stupid mobile client can be taught to speak AMQP,
> but *everyone* understands HTTPS.
> 3. AMQP seems to be more catered towards doing messaging for your
> app's internals, as opposed to, for example, XMPP or perhaps even
> STOMP, which is built for going to clients.
> 4. Authentication through pre-shared certs means client's don't have
> to tell me who they are (and, as a result, attackers can't lie about
> it either).
> 5. Not telling the mobile clients about my internal messaging means
> more flexibility to change it later.

Running AMQP on mobile clients would make for a cool demo, but you're
thinking is sound here.

> Basically, I don't really know anything about AMQP yet, and I might be
> completely wrong about everything, but I'd love to pick you guy's
> brains' on the matter. I have some other question regarding the other
> end (monitoring in browsers: an AMQP -> HTTPS bridge to do Comet-like
> things), but perhaps asking too many questions about that when I don't
> even know the mobile client side makes sense is any good might be a
> bit of a waste of time.

In my block-and-tackle understanding, you would opt for a message
oriented approach for a few reasons:

- Out-of-the-box support async application patterns
- Latency requirements prohibit the use of expensive transports like HTTP
- Flexibility in provisioning services

(I hope others weigh in with their thoughts here.)

You may very well be fine with an HTTP server and a database. I think
you'll want to be pretty clear on why you need a broker, else you'll
end up spending a lot of time horsing around with the tech for minimal
or no payoff. You've already signed up for an HTTPS interface for the
mobile clients, so that's a sunk cost.

>
> Thanks for reading this admittedly long post, and thanks in advance
> for your comments and insights :-)
> Laurens
>
> _______________________________________________
> rabbitmq-discuss mailing list
> rabbitmq-discuss at lists.rabbitmq.com
> http://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss
>

Garrett



From akalend at mail.ru  Thu Mar  4 15:49:16 2010
From: akalend at mail.ru (Alexandre Kalendarev)
Date: Thu, 04 Mar 2010 18:49:16 +0300
Subject: [rabbitmq-discuss] =?windows-1251?q?Draft_of_C++_rabbitMq_API?=
In-Reply-To: <4B8EEAC6.8030300@lshift.net>
References: <4B8EEAC6.8030300@lshift.net>
Message-ID: <E1NnDIa-0003sw-00.akalend-mail-ru@f249.mail.ru>

the new version of draft:

the Draft of C++ API

Connection class

class AMQP {
	AMQP();
	AMQP( string connectionString );
	AMQP( string connectionString , int channelNumber);
	
	void Open( string connectionString );
	void Open( string connectionString , int channelNumber);
	
	void Close();
	
	setChannel(int channelNumber);

	AMQPExchange 	createQueue( );
	AMQPExchange 	createQueue(int channelNumber );
	AMQPExchange 	createQueue( string  queueName);	
	AMQPExchange 	createQueue( const char *  queueName);
	AMQPExchange 	createQueue( string  queueName, int channelNumber);	
	AMQPExchange 	createQueue( const char *  queueName, int channelNumber);

	AMQPQueue 	createExchange();
	AMQPQueue 	createExchange(int channelNumber);
	AMQPQueue 	createExchange(string  exchangeName);
	AMQPQueue 	createExchange(const char *  exchangeName);
	AMQPQueue 	createExchange(string  exchangeName, int channelNumber);
	AMQPQueue 	createExchange( const char *  exchangeName, int channelNumber);

}

const AMQPCnnDebug = "localhost:5672"

the example:

	AMQP amqp("guest:guest at localhost:5673/somevhost");
	AMQPExchange * exchange = amgp.createExchange();  

	
	default connection string is "localhost:5672"
	the debug connection string   AMQPCnnDebug  is "guest:guest at localhost:5673" 

	AMQP amqp( AMQPCnnDebug );


Exchange class

class AMQPExchange {
	AMQPExchange( AMQPConnection * cnn );
	
	void Declare(string name);
	void Declare(string name, int parms);
	void Declare(string name, int parms, map properties ); // *)?

	void Delete(string name)

	void Bind ( string queueName );
	void Bind ( string queueName , string key);

	void Ubind ( string queueName );
	void Ubind ( string queueName , string key);

	void Publish(  string message);
	void Publish(  uchar* message);
	void Publish(  string message, const char * key);
	void Publish(  uchar* message, const char * key);

}


the parms is set of constants as AMQPDurable, AMQPAutodelete etc
the type of exchange is AMQPDirect default or AMQPFanout, or AMQPTopic 


Example:
	AMQP amqp();
	AMQPExchange * ex = amqp.createExchange();
	ex->Declare("my_exchange");
or:
	AMQP amqp();
	AMQPExchange * ex = amqp.createExchange("my_exchange"); // if exchange "my_exchange" alredy declared.
	ex->Bind("qu1", "spb.news");



Queue class

class AMQPQueue {
	AMQPQueue(AMQPConnection * cnn);

	void Declare(string name);
	void Declare(string name, int parms);
	void Declare(string name, int parms, map properties ); // *)?

	void Delete(string name)

	void Purge (string name)

	void Bind ( string exchangeName );
	void Bind ( string exchangeName , string key);

	void Ubind ( string exchangeName );
	void Ubind ( string exchangeName , string key);

	void Cancel()


	AMQPMessage *  Get()
	AMQPMessage *  Get( string queueName)

	void Ask( ) 
	void Ask( string queueName ) ????

	void Reject(  ) ????
	void Reject( string queueName )

	void addEvents( enum eventName,  IAMQPEvents events );

	void Consume( );
	void Consume( string queueName , IAMQPEvents * callback );
}


the parms is set of constants as AMQPDurable, AMQPAutodelete etc


example:
	AMQP amqp();
	AMQPEQueue * qu = amqp.createQueue();
	qu->Declare("qu_mylife");




class AMQPMessage  ????
 int timestamp
 int expiration
 string contentType
 string deliveryTag
 uchar* message or string 
 int number // internal number message
 string exchange 
 string key
....

 AMQPEvents is the abstract class, the callbackName is derived from IAMQPEvent.

after received each the message call the method run of derived AMQPCallback base class.


*) properties is map of addional property, it will to resolve in future.

Examples:

	// publish message	
	AMQP amqp();

	AMQPExchange * ex = amqp.createExchange();
	ex->Declare("my_exchange", AMQPTopic);	
	ex->Bind("my_exchange", "qu_mylive", "news" );
	ex->Publish("my_exchange", "12345" , "news");

	// deteting ex will after exit from scope of amqp variable;


	// consume message
	class printMessage : IAMQPEvents {
		void run (uchar* message) {
			std::cout << message << std::endl;
		}
	}
	
	AMQP amqp();

	AMQPQueue * queue = amqp.createQueue("qu_mylive");
	queue->addEvent(AMQPonMessage, printMessage);	
	queue->Consume( pm); 



unrealise classes(it will to resolve in future):  AMQPFile, AMQPStreams etc ...

exceptions:

AMQPnoConnectException
AMQPnonAutorizeException
AMQPnotFoundException 
AMQPnotAllowedException 
...
AMQPerrorException (AMQPcommandInvalidException  )








Hi Alexandre,
> 
> Thanks for this, it's a great start.
> 
> Alexandre Kalendarev wrote:
> > Exchange class
> > class AMQPExchange {
> > 	AMQPExchange( AMQPConnection * cnn );
> > 	void Declare(string name);
> > 	void Declare(string name, int parms);
> > 	void Declare(string name, int parms, map properties ); // *)?
> > 	void Delete(string name)
> > }
> 
> The only question I have is why these are classes. I would have expected
> "factory" methods such as Declare to live on AMQPConnection itself. (Do
> you intend, by the way, to support multiple channels per connection? I
> can't say I recommend it, but for some scenarios it's probably pretty
> useful.)
> 
> I would have expected something more like:
> 
> class AMQPConnection {
>   ...
>   AMQPExchange *ExchangeDeclare( ... );
>   AMQPQueue *QueueDeclare( ... );
>   ...
> }
> 
> class AMQPExchange {
>   void Delete();
>   void Publish(string routingKey, ...);
> 
>   string getName();
>   // etc
> }
> 
> I'm afraid my C++ years are approximately a decade behind me, so please
> don't read my suggestions too literally :-) It'll take me a while to get
> back up to speed with what's considered good modern C++ style...
> 
> (Also, could AMQPExchange be a valuetype? It's pretty tiny, it's
> stateless, and it'd be nice to avoid memory-management headaches where
> possible.)
> 
> Regards,
>   Tony
> 



From lvh at laurensvh.be  Thu Mar  4 17:30:04 2010
From: lvh at laurensvh.be (Laurens Van Houtven)
Date: Thu, 4 Mar 2010 18:30:04 +0100
Subject: [rabbitmq-discuss] Writing applications using AMQP,
	basic design 	questions
In-Reply-To: <ce2570e21003031532v6f81701bh81e02dab32e783c4@mail.gmail.com>
References: <cedc0c091003031025p1146093byef88a2ac2c40fd1d@mail.gmail.com>
	<ce2570e21003031532v6f81701bh81e02dab32e783c4@mail.gmail.com>
Message-ID: <cedc0c091003040930v6aa18743t142fbd86ef9927b7@mail.gmail.com>

(Messages were cut liberally for brevity reasons.)

On Thu, Mar 4, 2010 at 12:32 AM, Garrett Smith <g at rre.tt> wrote:
> Are you talking about exposing your mobile apps to external users via AMQP?

Possibly. I'm definitely not considering letting the mobile users be
AMQP producers themselves for the reasons mentioned below. Whether or
not letting the monitoring users be actual AMQP consumers, or having
another abstraction layer there is a good idea, I'm not sure.

The people doing the monitoring will primarily use a webapp that does
two things:
1. Get previous data from the persistence layer (a classic webapp that
gets stuff from a database somewhere, not AMQP so not relevant to this
discussion)
2. Follow data coming in from the mobile clients live, through a Comet
implementation.

Alternatively, later, mobile apps could request this data too, but
there's no reason they couldn't use the same Comet implementation the
browsers of the webapp users do.

AMQP sounds very well suited to the latter. I'm not sure RabbitMQ's
plugins for letting browsers talk AMQP through JS. Because of the
sensitive nature of the data, I'm not sure if
rabbitmq-jsonrpc-channel/rabbitmq-jsonrpc are applicable. The
advantage of an AMQP->Comet bridge at the end (analogous to the
HTTP->AMQP bridge at the beginning) would be that I can do the same
pre-shared SSL certificate tricks for verifying and authenticating
clients.

> What's the nature of the public API. Is there a performance or
> throughput requirement?

Not a particularly big one. Lots of writers, very low amount of data,
regular reporting. Think less than a hundred bytes, every ten seconds
to a minute or so, for a few hours a day, times potentially a few
thousand mobile clients.

I know making guesses about bottlenecks in complex systems is stupid
without any data to back it up, but I'm guessing the proposed
HTTPS->AMQP bridge will start running out of steam long before the
broker will. Hopefully this can be fixed by adding more of them, and
using classic load balancing ideas for web servers.

> Working with an AMQP interface is considerably different from working
> with a REST or other RPC interface. If you're thinking along these
> lines, I'd float the idea by some of your users to see what they think
> of the approach. That's also assuming you have a technical requirement
> to use AMQP for the public interface.

I'm mostly interested in using it for the internal interfaces for
flexibility reasons. I don't think any of the properties of AMQP
particularly interest my monitoring users (which would be AMQP
consumers if we let them speak AMQP). The mobile clients just want
their data to be persisted and possibly reported, they don't really
care what I do internally to make it happen.

>> I'm interested in temporary queues, so that only active mobile clients
>> have queues running. I have read the AMQP specification (v0.8),
>> section 2.2.8, specifically the part about temporary queues.
>> Apparently any client can cause a queue to be created, and the client
>> creating it is responsible for creating a consumer on it.
>
> You can create your queues as exclusive, which tells rabbit to auto
> delete the queue once the declaring connection is closed.

In that case, the proposed HTTPS->AMQP bridge would be responsible for
creating the mandatory consumer responsible for persistence every time
a previously inactive client starts sending data? Does that mean the
bridge has to keep the connection open? (creating a queue and
attaching a consumer sounds like an expensive operation.) That would
have implications for the load balancing I can do later.

>> I take it that means letting the mobile clients (with untrustworthy
>> software) do AMQP is a bad idea. The first idea is to have an
>> HTTP(S)->AMQP bridge. Why?

> Running AMQP on mobile clients would make for a cool demo, but you're
> thinking is sound here.

Yay! I'm not insane.

> In my block-and-tackle understanding, you would opt for a message
> oriented approach for a few reasons:
>
> - Out-of-the-box support async application patterns

Definitely true. Everything is being powered by Twisted/txAMQP, so
everything else is already asynchronous in nature.

> - Latency requirements prohibit the use of expensive transports like HTTP

Internally? Sure. As long as the only HTTP latency being introduced is
that at the start (the HTTPS->AMQP bridge) and at the end (AMQP->Comet
like thing), I'm happy.

> - Flexibility in provisioning services

Definitely.

> Garrett

Thanks for your reply,
Laurens



From g at rre.tt  Thu Mar  4 17:34:10 2010
From: g at rre.tt (Garrett Smith)
Date: Thu, 4 Mar 2010 11:34:10 -0600
Subject: [rabbitmq-discuss] Writing applications using AMQP,
	basic design 	questions
In-Reply-To: <cedc0c091003040930v6aa18743t142fbd86ef9927b7@mail.gmail.com>
References: <cedc0c091003031025p1146093byef88a2ac2c40fd1d@mail.gmail.com>
	<ce2570e21003031532v6f81701bh81e02dab32e783c4@mail.gmail.com>
	<cedc0c091003040930v6aa18743t142fbd86ef9927b7@mail.gmail.com>
Message-ID: <ce2570e21003040934q5e7c05c6g787b6067c45089ff@mail.gmail.com>

On Thu, Mar 4, 2010 at 11:30 AM, Laurens Van Houtven <lvh at laurensvh.be> wrote:
> (Messages were cut liberally for brevity reasons.)
>
> On Thu, Mar 4, 2010 at 12:32 AM, Garrett Smith <g at rre.tt> wrote:

-snip-

>> Working with an AMQP interface is considerably different from working
>> with a REST or other RPC interface. If you're thinking along these
>> lines, I'd float the idea by some of your users to see what they think
>> of the approach. That's also assuming you have a technical requirement
>> to use AMQP for the public interface.
>
> I'm mostly interested in using it for the internal interfaces for
> flexibility reasons. I don't think any of the properties of AMQP
> particularly interest my monitoring users (which would be AMQP
> consumers if we let them speak AMQP). The mobile clients just want
> their data to be persisted and possibly reported, they don't really
> care what I do internally to make it happen.

Okay, I think I have a bead on what you've got going.

For AMQP's role, I'd approach this as an internal-only problem, which
will simplify your thinking. I'd keep everything external facing
strictly HTTP based.

You can opt to introduce the broker early in the process, but you
don't *need* to. I'd recommend starting with a relational database
(avoiding the temptation to go with some "nosql" thing) for your
persistence layer. This is super simple and, from what I'm
understanding, will work just fine to start. Once you have the rest of
your system working, you can introduce a messaging tier to address
specific pain points.

System architectures evolve so don't think you need to build
everything up front.

On the other hand, it sounds like you've got an itch to explore this
stuff. If your project can tolerate some speculative R&D work, go for
it! As far as selecting an AMQP platform, I think you're looking at
the right one.

Garrett



From tonyg at lshift.net  Thu Mar  4 20:23:12 2010
From: tonyg at lshift.net (Tony Garnock-Jones)
Date: Fri, 05 Mar 2010 09:23:12 +1300
Subject: [rabbitmq-discuss] Draft of C++ rabbitMq API
In-Reply-To: <E1Nn9IP-0003iD-00.akalend-mail-ru@f292.mail.ru>
References: <4B8EEAC6.8030300@lshift.net>
	<E1Nn9IP-0003iD-00.akalend-mail-ru@f292.mail.ru>
Message-ID: <4B9016B0.6050109@lshift.net>

Alexandre Kalendarev wrote:
> participate in the Open Source project is best practics to improve the coding style.

That sounds about right :-)

> Do You reviw my PHP rabbit interface 
> ( http://code.google.com/p/php-rabbit )? Is it more friendly interface?

Ah, I think I see the motivation for the style now. If it were me, I'd
be going for overloaded constructors in C++, all of which take at least
the name of the exchange/queue, where the variants are:

 - one which does no declare at all, and just lets you use the
   resource;

 - one which declares actively, with other parameters as specified; and

 - one which declares passively, with other parameters as specified.

> I use the basic classes: AMQPConnect, AMQPQueue and AMQPExchange. But when I designed
> of the C++ Interfce, I think, that he should be closest to the AMQP standard.
> Could be to design of the PHP analogy?

I don't know. The AMQP standard uses the word "class" in a way that I
think is misleading. It seems to deal in terms of certain remote
*resources* of different *types*, but they do not feel like methods in
an object-oriented sense, no matter what the terms the spec uses :-)

> Tonny, 
> Do You have the librabbitmq examples of the use the File&Stream AMQP methods? 
> It is absent into C-library examples. It is need for design of the C++ interface.

I do not, no; the reason is that RabbitMQ does not implement File or
Stream, because their behaviour is not specified in the standard.
Because they have no specified behaviour, I can't see the use of them.
If other vendors implement them, they will be effectively implemented as
custom extensions; if they ever get standardised, we'll no doubt follow.

Regards,
  Tony




From celldee at gmail.com  Thu Mar  4 20:39:09 2010
From: celldee at gmail.com (Chris Duncan)
Date: Thu, 4 Mar 2010 20:39:09 +0000
Subject: [rabbitmq-discuss] Handling Channel.Flow method
In-Reply-To: <4B7B91E0.8000805@lshift.net>
References: <e1542d31001050421j5e8b3b0dn8b81ce80dd53d976@mail.gmail.com>
	<4B7B91E0.8000805@lshift.net>
Message-ID: <6EF81B1B-38B5-4D4A-B365-45F30A37F505@gmail.com>

Hi Tony,

Thanks for the response. Sorry I've taken a while to reply.

On 17 Feb 2010, at 06:51, Tony Garnock-Jones wrote:

> Chris Duncan wrote:
>> Transactions may give me what I want but I don't think that I  
>> should be
>> enforcing the use of transactions in my client library just so  
>> that it
>> will handle Channel.Flow methods properly.
>
> The way channel.flow works, if I understand it correctly, is that the
> server sends channel.flow, the client receives it, and eventually  
> sends
> a channel.flow-ok in response, which acts as a promise not to send any
> more content until another channel.flow lets it continue. The key word
> is "eventually", meaning that the server has to give it a little  
> slack,
> and sometimes quite a lot of slack, heuristically.
>
> Clients must be permitted to continue sending content frames, and
> servers should probably go to reasonable lengths to handle such  
> content
> frames, after the channel.flow is sent and before the channel.flow- 
> ok is
> received by the server, simply because of the separation between  
> the two
> parties.
>
> If you defer emitting your channel.flow-ok until all in-progress
> channel.publish operations have cleared the line, then you should be
> cool. There should be no need to interact with the transaction  
> machinery
> at all. Your client library API should reflect the fact that the  
> client
> has been asked and has promised to be silent, perhaps by indicating
> failure somehow for *subsequent* publish operations after the
> channel.flow is received.
>
> Um. I'm not sure that was the clearest explanation of what I mean :-)
> I'm basically trying to get at the fact that you don't have to stop
> sending content until you've sent the channel.flow-ok, and you can use
> that to make a clean switch from XON to XOFF state, more or less. Does
> that make sense?
>
> Tony
>

It was a clear explanation and does make very good sense.

Regards,

Chris



From tonyg at lshift.net  Thu Mar  4 22:22:27 2010
From: tonyg at lshift.net (Tony Garnock-Jones)
Date: Fri, 05 Mar 2010 11:22:27 +1300
Subject: [rabbitmq-discuss] Pluggable exchange types (bug 22169) landed on
	default
Message-ID: <4B9032A3.3090604@lshift.net>

How exciting!

So now, in the default branch, there's a mechanism for building
pluggable exchange types for extending the AMQP core direct, fanout,
topic and headers exchanges with custom functionality, like mikeb's
prototype LVC plugin, http://github.com/squaremo/rabbitmq-lvc-plugin.

I'm playing idly with shelling out to Spidermonkey, couchdb style, for a
"javascript" exchange. I'm looking forward to seeing what others come up
with!

(BTW, the AMQP spec requires that exchange type names start with "x-" if
they're not blessed by the standards committee, so my JS exchange will
probably be something like "x-javascript" or similar for now)

Tony



From alexis.richardson at gmail.com  Thu Mar  4 22:27:47 2010
From: alexis.richardson at gmail.com (Alexis Richardson)
Date: Thu, 4 Mar 2010 22:27:47 +0000
Subject: [rabbitmq-discuss] Pluggable exchange types (bug 22169) landed
	on default
In-Reply-To: <4B9032A3.3090604@lshift.net>
References: <4B9032A3.3090604@lshift.net>
Message-ID: <167204d21003041427g7e20af58j7ad24241a2d9dcad@mail.gmail.com>

We need to tell more people about this!  Our list is small and I hope
perfectly formed, but this is a big step...

a


On Thu, Mar 4, 2010 at 10:22 PM, Tony Garnock-Jones <tonyg at lshift.net> wrote:
> How exciting!
>
> So now, in the default branch, there's a mechanism for building
> pluggable exchange types for extending the AMQP core direct, fanout,
> topic and headers exchanges with custom functionality, like mikeb's
> prototype LVC plugin, http://github.com/squaremo/rabbitmq-lvc-plugin.
>
> I'm playing idly with shelling out to Spidermonkey, couchdb style, for a
> "javascript" exchange. I'm looking forward to seeing what others come up
> with!
>
> (BTW, the AMQP spec requires that exchange type names start with "x-" if
> they're not blessed by the standards committee, so my JS exchange will
> probably be something like "x-javascript" or similar for now)
>
> Tony
>
> _______________________________________________
> rabbitmq-discuss mailing list
> rabbitmq-discuss at lists.rabbitmq.com
> http://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss
>



From chen650 at yahoo.com  Fri Mar  5 02:25:52 2010
From: chen650 at yahoo.com (alex chen)
Date: Thu, 4 Mar 2010 18:25:52 -0800 (PST)
Subject: [rabbitmq-discuss] limit number of messages buffered in memory
	in new persister
In-Reply-To: <4B8E2A5B.4040509@lshift.net>
References: <908041.74697.qm@web31808.mail.mud.yahoo.com>
	<20100302112309.GO1641@mrnibble.lshift.net>
	<663717.67511.qm@web31813.mail.mud.yahoo.com>
	<4B8E2A5B.4040509@lshift.net>
Message-ID: <738510.88277.qm@web31803.mail.mud.yahoo.com>

Matthias,


> I don't see commits as overly burdensome. After all, what you are
suggesting above is in effect a synchronous publish, in which case just
introduce a helper method that does a publish followed by a commit.

We tested publish+commit and found that it is much slower than publish only.
For single client with commit on every publish, it can do about 20 msg/sec.
It took about 40ms for client to get the tx_commit_ok from server.
It seems to me the bottleneck was not fsync, because disk was not busy.
also i tried commenting out file:sync() from the src code and it has no effect.

if commit on 100 publishes, the performance increases to above 1000 msg/sec.
Is there anyway to speed up the performance for commit on every publish?  


thanks.

-alex



      



From tonyg at lshift.net  Fri Mar  5 03:16:18 2010
From: tonyg at lshift.net (Tony Garnock-Jones)
Date: Fri, 05 Mar 2010 16:16:18 +1300
Subject: [rabbitmq-discuss] limit number of messages buffered in memory
 in new persister
In-Reply-To: <738510.88277.qm@web31803.mail.mud.yahoo.com>
References: <908041.74697.qm@web31808.mail.mud.yahoo.com>	<20100302112309.GO1641@mrnibble.lshift.net>	<663717.67511.qm@web31813.mail.mud.yahoo.com>	<4B8E2A5B.4040509@lshift.net>
	<738510.88277.qm@web31803.mail.mud.yahoo.com>
Message-ID: <4B907782.4010308@lshift.net>

alex chen wrote:
> For single client with commit on every publish, it can do about 20 msg/sec.
> It took about 40ms for client to get the tx_commit_ok from server.
> if commit on 100 publishes, the performance increases to above 1000 msg/sec.
> Is there anyway to speed up the performance for commit on every publish?  

Part of this can be nagling and general turnaround time. Tx.commit is
synchronous, unfortunately.

How close to exactly 20 msgs/sec was it? If it was startlingly close, we
could be seeing some kind of nagling-like delay being introduced by the
TCP stack: 20 msgs/sec is 50 ms/msg. Does that seem like a familiar
delay-constant to anyone?

Tony




From matthias at lshift.net  Fri Mar  5 09:04:08 2010
From: matthias at lshift.net (Matthias Radestock)
Date: Fri, 05 Mar 2010 09:04:08 +0000
Subject: [rabbitmq-discuss] limit number of messages buffered in memory
 in new persister
In-Reply-To: <4B907782.4010308@lshift.net>
References: <908041.74697.qm@web31808.mail.mud.yahoo.com>	<20100302112309.GO1641@mrnibble.lshift.net>	<663717.67511.qm@web31813.mail.mud.yahoo.com>	<4B8E2A5B.4040509@lshift.net>
	<738510.88277.qm@web31803.mail.mud.yahoo.com>
	<4B907782.4010308@lshift.net>
Message-ID: <4B90C908.1060308@lshift.net>

Tony Garnock-Jones wrote:
> alex chen wrote:
>> For single client with commit on every publish, it can do about 20 msg/sec.
> [...] 
> Part of this can be nagling and general turnaround time. Tx.commit is
> synchronous, unfortunately.

I am pretty sure the root cause is a) fsync, and b) delays coded into 
the persister:

transactional and persistent:
$ sh build/dist/runjava.sh com.rabbitmq.examples.MulticastMain -m 1 -a 
-f persistent -i 2 -z 1
starting consumer #0
starting producer #0
recving rate avg: 9 msg/s
sending rate avg: 9 msg/s

transactional and non-persistent:
$ sh build/dist/runjava.sh com.rabbitmq.examples.MulticastMain -m 1 -a 
-i 2 -z 1
starting consumer #0
starting producer #0
recving rate avg: 2365 msg/s
sending rate avg: 2378 msg/s


Matthew can probably provide a more detailed explanation.


Matthias.



From glenn.ergeerts at artesis.be  Fri Mar  5 09:27:29 2010
From: glenn.ergeerts at artesis.be (Ergeerts Glenn)
Date: Fri, 5 Mar 2010 10:27:29 +0100
Subject: [rabbitmq-discuss] SimpleRpcServer send generated queue name to
 client
In-Reply-To: <4B8EEEBB.4070708@lshift.net>
References: <27624063.post@talk.nabble.com> <4B8EEEBB.4070708@lshift.net>
Message-ID: <5429EF528F02C34281C8573452C749431AC0E2E538@ca-win-mbs02.artesis.be>

Hi,

I thought about that option, but I think it is not flexible enough for our application.
Like you said the custom filer predicates are very flexible. It could be possible to map them 
to routing keys and use client side filtering as you said, but for security reasons I want control exactly which client receives which messages.
So this rules out client side filtering I guess?

I did not know about the option of implementing a custom exchange type.. Is it hard to do?
I don't know if this would be an ideal solution.. it feels strange pulling this application specific logic into the communication infrastructure (so tying our application to RabbitMQ) to me.. ?

What would be the disadvantages of doing it with the multiple queues as first suggested? 
Is it performance related? Would it make a big difference using a topic exchange compared to for example 20 queues + subscriptions?
Are there other disadvantages?

Thanks,
Glenn

-----Oorspronkelijk bericht-----
Van: Tony Garnock-Jones [mailto:tonyg at lshift.net] 
Verzonden: donderdag 4 maart 2010 0:20
Aan: Ergeerts Glenn
CC: rabbitmq-discuss at lists.rabbitmq.com
Onderwerp: Re: [rabbitmq-discuss] SimpleRpcServer send generated queue name to client

Hi,

glenner wrote:
> And, more general, is this a valid design using RabbitMQ/AMQP? I'm still new
> to RabbitMQ/AMQP so maybe i overlooked a more approriate way to do this..

It sounds reasonable; but it might be possible to leverage the features
of the RabbitMQ server even more than you have in mind.

For example, could it work to design a topic hierarchy for your system's
events, and then simply use an AMQP topic exchange to broadcast them to
the correct consumers?

The application-level server would then blindly send events, with an
appropriate routing key, to a named exchange it had set up, and the
clients would create private queues (using queueDeclare()) and bind them
(using queueBind()) to the exchange with appropriate binding key for
selecting the subset of events they are interested in. There need then
be no direct communication between the clients and the application-level
server.

You mentioned there were custom filter predicates. These are a potential
missing piece. If the event types don't fit nicely onto the routing keys
usable with topic exchanges, then you will be relying on client-side
filtering, which may or may not be suitable for your application. On the
other hand, if routing keys and a topic exchange get you 99% of the way
there, then the remaining small amount of filtering can easily be done
on the client side. A final option would be to implement a custom
exchange type which is capable of understanding your filter predicates
within the AMQP server itself.

Regards,
  Tony



From matthew at lshift.net  Fri Mar  5 11:49:57 2010
From: matthew at lshift.net (Matthew Sackman)
Date: Fri, 5 Mar 2010 11:49:57 +0000
Subject: [rabbitmq-discuss] limit number of messages buffered in memory
 in new persister
In-Reply-To: <4B90C908.1060308@lshift.net>
References: <908041.74697.qm@web31808.mail.mud.yahoo.com>
	<20100302112309.GO1641@mrnibble.lshift.net>
	<663717.67511.qm@web31813.mail.mud.yahoo.com>
	<4B8E2A5B.4040509@lshift.net>
	<738510.88277.qm@web31803.mail.mud.yahoo.com>
	<4B907782.4010308@lshift.net> <4B90C908.1060308@lshift.net>
Message-ID: <20100305114957.GD6896@mrnibble.lshift.net>

On Fri, Mar 05, 2010 at 09:04:08AM +0000, Matthias Radestock wrote:
> transactional and persistent:
> $ sh build/dist/runjava.sh com.rabbitmq.examples.MulticastMain -m 1 -a 
> -f persistent -i 2 -z 1
> starting consumer #0
> starting producer #0
> recving rate avg: 9 msg/s
> sending rate avg: 9 msg/s

Note this test was done on a recent ubuntu, which is running ext4 on its
fs, with barriers turned on. On my machine, Debian Sid, which runs ext3
with data=ordered, I get

recving rate avg: 487 msg/s
sending rate avg: 487 msg/s

On my machine on an SSD, which is mounted ext4 barrier=1,
data=writeback, I get

recving rate avg: 1138 msg/s
sending rate avg: 1138 msg/s

On another ubuntu karmic box, with ext3, we get

recving rate avg: 220 msg/s
sending rate avg: 220 msg/s

all on the same test.

Also it's a good idea to make sure the disk schedular is set to
deadline, not cfq, as it normally is by default. You also really want to
stop anything else from writing to disk, and turn of CPU Frequency
Scaling. Basically, give Rabbit its own disk, and very carefully tune
and test. You may have good results with the latest btrfs too, depends
how bleeding edge you want to be. As you can see, SSD performance is
astonishing, because fsyncs on SSDs are constant time and an order of
magnitude faster than rotating media.

Matthew



From matthew at lshift.net  Fri Mar  5 11:59:17 2010
From: matthew at lshift.net (Matthew Sackman)
Date: Fri, 5 Mar 2010 11:59:17 +0000
Subject: [rabbitmq-discuss] limit number of messages buffered in memory
 in new persister
In-Reply-To: <738510.88277.qm@web31803.mail.mud.yahoo.com>
References: <908041.74697.qm@web31808.mail.mud.yahoo.com>
	<20100302112309.GO1641@mrnibble.lshift.net>
	<663717.67511.qm@web31813.mail.mud.yahoo.com>
	<4B8E2A5B.4040509@lshift.net>
	<738510.88277.qm@web31803.mail.mud.yahoo.com>
Message-ID: <20100305115917.GE6896@mrnibble.lshift.net>

Alex,

On Thu, Mar 04, 2010 at 06:25:52PM -0800, alex chen wrote:
> We tested publish+commit and found that it is much slower than publish only.

It always will be. Rabbit buffers messages in several locations before
they hit disk. By issuing the commit, you're forcing all those buffers
to be drained and the message to be fsync'd to disk. At the end of the
day, you are going to be limited by the speed at which you can fsync.

What you can do, is publish messages in parallel, using different
channels. The server can coalesce these commits under some circumstances
and so you could publish, say, 100 messages on one channel, and then
issue the commit. Whilst you're waiting for the commit_ok to come back,
you could publish on another channel. You'd need to build your client in
this way, but it would mean you're never halting publishes.

> For single client with commit on every publish, it can do about 20 msg/sec.

That's pretty low. See my other email - you should be able get much much
higer than that with some careful tuning. Experimentation and testing is
the order of the day - it's very dependent on your hard disc, what else
is being written to the disk, the file system, kernel and the direction
of the prevailing wind.

> It took about 40ms for client to get the tx_commit_ok from server.
> It seems to me the bottleneck was not fsync, because disk was not busy.
> also i tried commenting out file:sync() from the src code and it has no effect.

That is very curious. Also, don't do that - if it crashes at that point
you're not going to be able to recover much data from disk ;) How big
are the messages you're writing?

> if commit on 100 publishes, the performance increases to above 1000 msg/sec.
> Is there anyway to speed up the performance for commit on every publish?  

Yes. Better hard discs / SSDs and kernel/fs tuning.

Matthew



From scott at beamdog.com  Fri Mar  5 14:51:15 2010
From: scott at beamdog.com (Scott Brooks)
Date: Fri, 5 Mar 2010 09:51:15 -0500
Subject: [rabbitmq-discuss] limit number of messages buffered in memory
	in new persister
In-Reply-To: <20100305115917.GE6896@mrnibble.lshift.net>
References: <908041.74697.qm@web31808.mail.mud.yahoo.com>
	<20100302112309.GO1641@mrnibble.lshift.net>
	<663717.67511.qm@web31813.mail.mud.yahoo.com>
	<4B8E2A5B.4040509@lshift.net>
	<738510.88277.qm@web31803.mail.mud.yahoo.com>
	<20100305115917.GE6896@mrnibble.lshift.net>
Message-ID: <ad81937d1003050651y1f51c36at1e5ab45b196aa9c@mail.gmail.com>

If by 40 ms he was talking about the network latency between himself and the
Rabbit Server, then at best you will see
1000ms/40 ms = 25 messages/second.

I did tests ranging from 60 ms through to 200 ms, and the above formula
pretty much held true.

If his rabbit server is local then ignore the above.

Scott

> For single client with commit on every publish, it can do about 20
> msg/sec.
> > It took about 40ms for client to get the tx_commit_ok from server.
> > It seems to me the bottleneck was not fsync, because disk was not busy.
> > also i tried commenting out file:sync() from the src code and it has no
> effect.
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20100305/5d46bd16/attachment.htm 

From tsuraan at gmail.com  Fri Mar  5 15:49:37 2010
From: tsuraan at gmail.com (tsuraan)
Date: Fri, 5 Mar 2010 09:49:37 -0600
Subject: [rabbitmq-discuss] limit number of messages buffered in memory
	in new persister
In-Reply-To: <4B907782.4010308@lshift.net>
References: <908041.74697.qm@web31808.mail.mud.yahoo.com>
	<20100302112309.GO1641@mrnibble.lshift.net>
	<663717.67511.qm@web31813.mail.mud.yahoo.com>
	<4B8E2A5B.4040509@lshift.net>
	<738510.88277.qm@web31803.mail.mud.yahoo.com>
	<4B907782.4010308@lshift.net>
Message-ID: <84fb38e31003050749w3d362c44oa302b53b1cbcf858@mail.gmail.com>

> How close to exactly 20 msgs/sec was it? If it was startlingly close, we
> could be seeing some kind of nagling-like delay being introduced by the
> TCP stack: 20 msgs/sec is 50 ms/msg. Does that seem like a familiar
> delay-constant to anyone?

Along this thought, I didn't notice what client alex chen is using,
but the amqplib doesn't disable Nagle.  I don't know if nagle has to
be disabled client and server side, but I would think it would.
Anyhow, for amqplib adding a TCP_NODELAY after the socket creation is
an easy thing to try, if alex is using amqplib.



From chen650 at yahoo.com  Fri Mar  5 19:31:49 2010
From: chen650 at yahoo.com (alex chen)
Date: Fri, 5 Mar 2010 11:31:49 -0800 (PST)
Subject: [rabbitmq-discuss] limit number of messages buffered in memory
	in new persister
In-Reply-To: <20100305115917.GE6896@mrnibble.lshift.net>
References: <908041.74697.qm@web31808.mail.mud.yahoo.com>
	<20100302112309.GO1641@mrnibble.lshift.net>
	<663717.67511.qm@web31813.mail.mud.yahoo.com>
	<4B8E2A5B.4040509@lshift.net>
	<738510.88277.qm@web31803.mail.mud.yahoo.com>
	<20100305115917.GE6896@mrnibble.lshift.net>
Message-ID: <881495.18983.qm@web31807.mail.mud.yahoo.com>

Matthew,



> What you can do, is publish messages in parallel, using different
> channels. The server can coalesce these commits under some 

There is a requirement in our application that messages have to be published/received in order,
so we have to use single channel.

>> It seems to me the bottleneck was 
>> not fsync, because disk was not busy.
>> also i tried commenting out 
>> file:sync() from the src code and it has no effect.

> That is very curious. Also, don't do that - if it crashes at that point
> you're not going to be able to recover much data from disk ;) How big
> are the messages you're writing?

I disabled file:sync() just to test if the bottleneck is caused by fsync.
The result showed it was not.  In your previous email you mentioned using ext3 with data=ordered you could get close to 500 msg/sec.  that means it is affected by disk.  However, i still think 20/sec is slow.

thanks!

-alex


      



From tsuraan at gmail.com  Fri Mar  5 21:20:14 2010
From: tsuraan at gmail.com (tsuraan)
Date: Fri, 5 Mar 2010 15:20:14 -0600
Subject: [rabbitmq-discuss] limit number of messages buffered in memory
	in new persister
In-Reply-To: <881495.18983.qm@web31807.mail.mud.yahoo.com>
References: <908041.74697.qm@web31808.mail.mud.yahoo.com>
	<20100302112309.GO1641@mrnibble.lshift.net>
	<663717.67511.qm@web31813.mail.mud.yahoo.com>
	<4B8E2A5B.4040509@lshift.net>
	<738510.88277.qm@web31803.mail.mud.yahoo.com>
	<20100305115917.GE6896@mrnibble.lshift.net>
	<881495.18983.qm@web31807.mail.mud.yahoo.com>
Message-ID: <84fb38e31003051320v66ae0f28ya3e52888d639f069@mail.gmail.com>

> I disabled file:sync() just to test if the bottleneck is caused by fsync.
> The result showed it was not.  In your previous email you mentioned using
> ext3 with data=ordered you could get close to 500 msg/sec.  that means it is
> affected by disk.  However, i still think 20/sec is slow.

What client are you using?  If it's the python amqplib, can you try
putting this line:

self.sock.setsockopt(socket.SOL_TCP, socket.TCP_NODELAY, 0)

in the client Connection constructor, after the self.sock =
socket.socket(...) line and see if that changes anything?



From chen650 at yahoo.com  Sat Mar  6 01:56:25 2010
From: chen650 at yahoo.com (alex chen)
Date: Fri, 5 Mar 2010 17:56:25 -0800 (PST)
Subject: [rabbitmq-discuss] limit number of messages buffered in memory
	in new persister
In-Reply-To: <84fb38e31003051320v66ae0f28ya3e52888d639f069@mail.gmail.com>
References: <908041.74697.qm@web31808.mail.mud.yahoo.com>
	<20100302112309.GO1641@mrnibble.lshift.net>
	<663717.67511.qm@web31813.mail.mud.yahoo.com>
	<4B8E2A5B.4040509@lshift.net>
	<738510.88277.qm@web31803.mail.mud.yahoo.com>
	<20100305115917.GE6896@mrnibble.lshift.net>
	<881495.18983.qm@web31807.mail.mud.yahoo.com>
	<84fb38e31003051320v66ae0f28ya3e52888d639f069@mail.gmail.com>
Message-ID: <568711.20450.qm@web31812.mail.mud.yahoo.com>

Tsuraan,


> What client are you using?  If it's the python amqplib, can you try
> putting this line:
> self.sock.setsockopt(socket.SOL_TCP, socket.TCP_NODELAY, 0)

Thanks for the suggestion!  We are using rabbitmq-c.  I tried setting (TCP_NODELAY, 1) and the troughput increased from 20 msg/sec to 200 msg/sec.  As Tony pointed out in the previous email it was indeed caused by nagling.   it did not happen to tx_select but it happened to tx_commit.

Many thanks to everyone who helped on this thread!  it is greatly appreciated!

-alex



      



From tsuraan at gmail.com  Sat Mar  6 05:15:06 2010
From: tsuraan at gmail.com (tsuraan)
Date: Fri, 5 Mar 2010 23:15:06 -0600
Subject: [rabbitmq-discuss] limit number of messages buffered in memory
	in new persister
In-Reply-To: <568711.20450.qm@web31812.mail.mud.yahoo.com>
References: <908041.74697.qm@web31808.mail.mud.yahoo.com>
	<20100302112309.GO1641@mrnibble.lshift.net>
	<663717.67511.qm@web31813.mail.mud.yahoo.com>
	<4B8E2A5B.4040509@lshift.net>
	<738510.88277.qm@web31803.mail.mud.yahoo.com>
	<20100305115917.GE6896@mrnibble.lshift.net>
	<881495.18983.qm@web31807.mail.mud.yahoo.com>
	<84fb38e31003051320v66ae0f28ya3e52888d639f069@mail.gmail.com>
	<568711.20450.qm@web31812.mail.mud.yahoo.com>
Message-ID: <84fb38e31003052115v75698ac3r607ee0e77c8de3b1@mail.gmail.com>

>> self.sock.setsockopt(socket.SOL_TCP, socket.TCP_NODELAY, 0)
>
> Thanks for the suggestion! ?We are using rabbitmq-c. ?I tried setting (TCP_NODELAY, 1) and the troughput increased from 20 msg/sec to 200 msg/sec. ?As Tony pointed out in the previous email it was indeed caused by nagling. ? it did not happen to tx_select but it happened to tx_commit.

Yeah, I suppose enabling tcp_nodelay would be more useful than
disabling it :)  Anyhow, glad to hear that it helped.



From peterke at gmail.com  Sat Mar  6 12:17:41 2010
From: peterke at gmail.com (=?ISO-8859-1?Q?P=E9ter_Szil=E1gyi?=)
Date: Sat, 6 Mar 2010 14:17:41 +0200
Subject: [rabbitmq-discuss] Flag implemented in exchange.delete but not in
	queue.delete?
Message-ID: <1d492d71003060417v26dd3692k67c8fbd1b9016a2a@mail.gmail.com>

Hi,

  I have an interesting problem (I'm using version 1.7.0 of the broker):
both the exchange.delete and queue.delete have a if_unused flag. The specs
state, that if the if_unused flag is true, then an exchange will only be
deleted if it does not have any bindings (basically I don't have to keep
track of everything, but simply ask the server to only delete if nobody is
using it any more). Now my problem is, that the queue.delete also has such a
flag, but alas does nothing (and I also haven't found any infos about it).
My reasoning would be that it should do exactly the same thing: if there are
exchanges still bound to the queue, it shouldn't be deleted, nonetheless it
deletes it. Any ideas why this strange behaviour?

Thanks,
  Peter

PS: I'm using the erlang client.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20100306/2bc37263/attachment.htm 

From sustrik at 250bpm.com  Sat Mar  6 12:22:51 2010
From: sustrik at 250bpm.com (Martin Sustrik)
Date: Sat, 06 Mar 2010 13:22:51 +0100
Subject: [rabbitmq-discuss] Flag implemented in exchange.delete but not
 in	queue.delete?
In-Reply-To: <1d492d71003060417v26dd3692k67c8fbd1b9016a2a@mail.gmail.com>
References: <1d492d71003060417v26dd3692k67c8fbd1b9016a2a@mail.gmail.com>
Message-ID: <4B92491B.3070309@250bpm.com>

Peter,

>   I have an interesting problem (I'm using version 1.7.0 of the broker): 
> both the exchange.delete and queue.delete have a if_unused flag. The 
> specs state, that if the if_unused flag is true, then an exchange will 
> only be deleted if it does not have any bindings (basically I don't have 
> to keep track of everything, but simply ask the server to only delete if 
> nobody is using it any more). Now my problem is, that the queue.delete 
> also has such a flag, but alas does nothing (and I also haven't found 
> any infos about it). My reasoning would be that it should do exactly the 
> same thing: if there are exchanges still bound to the queue, it 
> shouldn't be deleted, nonetheless it deletes it. Any ideas why this 
> strange behaviour?

Here's what AMQP documentation says:

       The server SHOULD allow for a reasonable delay between the point
       when it determines that a queue is not being used (or no longer
       used), and the point when it deletes the queue.  At the least it
       must allow a client to create a queue and then create a consumer
       to read from it, with a small but non-zero delay between these
       two actions.  The server should equally allow for clients that may
       be disconnected prematurely, and wish to re-consume from the same
       queue without losing messages.  We would recommend a configurable
       timeout, with a suitable default value being one minute.


Martin



From peterke at gmail.com  Sat Mar  6 12:31:23 2010
From: peterke at gmail.com (=?ISO-8859-1?Q?P=E9ter_Szil=E1gyi?=)
Date: Sat, 6 Mar 2010 14:31:23 +0200
Subject: [rabbitmq-discuss] Flag implemented in exchange.delete but not
	in queue.delete?
In-Reply-To: <4B92491B.3070309@250bpm.com>
References: <1d492d71003060417v26dd3692k67c8fbd1b9016a2a@mail.gmail.com>
	<4B92491B.3070309@250bpm.com>
Message-ID: <1d492d71003060431u420abca1te2d72d6873127e86@mail.gmail.com>

Hi,

  Hmm... ok, I've checked the AMQP specs and now I see, that the if-unused
flag for queues is different than the is-unused flag for exchanges. I
thought the two would be the same.

Thanks and have a great weekend,
   Peter

2010/3/6 Martin Sustrik <sustrik at 250bpm.com>

> Peter,
>
>
>   I have an interesting problem (I'm using version 1.7.0 of the broker):
>> both the exchange.delete and queue.delete have a if_unused flag. The specs
>> state, that if the if_unused flag is true, then an exchange will only be
>> deleted if it does not have any bindings (basically I don't have to keep
>> track of everything, but simply ask the server to only delete if nobody is
>> using it any more). Now my problem is, that the queue.delete also has such a
>> flag, but alas does nothing (and I also haven't found any infos about it).
>> My reasoning would be that it should do exactly the same thing: if there are
>> exchanges still bound to the queue, it shouldn't be deleted, nonetheless it
>> deletes it. Any ideas why this strange behaviour?
>>
>
> Here's what AMQP documentation says:
>
>      The server SHOULD allow for a reasonable delay between the point
>      when it determines that a queue is not being used (or no longer
>      used), and the point when it deletes the queue.  At the least it
>      must allow a client to create a queue and then create a consumer
>      to read from it, with a small but non-zero delay between these
>      two actions.  The server should equally allow for clients that may
>      be disconnected prematurely, and wish to re-consume from the same
>      queue without losing messages.  We would recommend a configurable
>      timeout, with a suitable default value being one minute.
>
>
> Martin
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20100306/743d27d4/attachment.htm 

From mabrek at gmail.com  Sat Mar  6 19:05:18 2010
From: mabrek at gmail.com (mabrek)
Date: Sat, 06 Mar 2010 22:05:18 +0300
Subject: [rabbitmq-discuss] erlang client direct connection fails with
	bug21673
Message-ID: <4B92A76E.8020104@gmail.com>

Hello.

'make test_direct' fails for rabbitmq-erlang-client rev 9e68cf722551 and rabbitmq-server branch bug21673 rev ad7aeb14e0e4 with messages similar to:

direct_client_SUITE: basic_get_test...*failed*
::error:{badmatch,{error,{undef,[{rabbit_reader,server_properties,[]},
                               {amqp_direct_connection,init,1},
                               {gen_server,init_it,6},
                               {proc_lib,init_p_do_apply,3}]}}}
  in function amqp_connection:start_direct_internal/2
  in call from direct_client_SUITE:basic_get_test/0

When I tried rabbitmq-server branch default rev 1c3dcccb5e2d test_direct passed successfully.

Best regards,
Anton Lebedevich.



From matthew at lshift.net  Sun Mar  7 18:54:00 2010
From: matthew at lshift.net (Matthew Sackman)
Date: Sun, 7 Mar 2010 18:54:00 +0000
Subject: [rabbitmq-discuss] erlang client direct connection fails with
 bug21673
In-Reply-To: <4B92A76E.8020104@gmail.com>
References: <4B92A76E.8020104@gmail.com>
Message-ID: <20100307185400.GA18601@wellquite.org>

On Sat, Mar 06, 2010 at 10:05:18PM +0300, mabrek wrote:
> ::error:{badmatch,{error,{undef,[{rabbit_reader,server_properties,[]},

Yes, the erlang client had bug 21949 QA+'d. This affected both erlang
client and server. I had not merged default into bug 21673. I've now
done this. It should now compile fine on bug 21673.

Matthew



From matthew at lshift.net  Mon Mar  8 11:46:13 2010
From: matthew at lshift.net (Matthew Sackman)
Date: Mon, 8 Mar 2010 11:46:13 +0000
Subject: [rabbitmq-discuss] RabbitMQ-shovel
In-Reply-To: <20100201105648.GO11819@mrnibble.lshift.net>
References: <20100201105648.GO11819@mrnibble.lshift.net>
Message-ID: <20100308114613.GF6896@mrnibble.lshift.net>

On Mon, Feb 01, 2010 at 10:56:48AM +0000, Matthew Sackman wrote:
> Several people have recently been asking about a shovel for Rabbit,
> which can consume messages from one consumer and deliver them to
> another.

Just to let you all know, the changes that this plugin required to the
server have been merged into default and from there to the new persister
so you can now use the shovel straight off the default branch or new
persister branch of the server.

For those of you theoretically inclined, note that you can use the
shovel to create cycles, and even duplication of messages. This could be
used for iteration (think ! in ?-calculus or actually maybe just
restriction). This alone doesn't make it turning complete. The challenge
is to come up with the minimum pluggable exchange type and an encoding
of instructions as messages to represent instructions such that you can
demonstrate Turing-completeness. ?, TM, ? or SKI are all equally valid.

Then, in your encoding, send messages in, which represent the
instructions for factorial. Then send further messages in (peano
encoding) being the argument, and on another queue should appear the
result. Prizes will be awarded for the most elegant and concise
solution.

Matthew



From kapouer at melix.org  Mon Mar  8 16:48:50 2010
From: kapouer at melix.org (=?UTF-8?B?SsOpcsOpbXkgTGFs?=)
Date: Mon, 08 Mar 2010 17:48:50 +0100
Subject: [rabbitmq-discuss] impossible to start after erlang update (on
	debian)
Message-ID: <4B952A72.7080205@melix.org>

Hi,
i'm using debian/unstable, rabbitmq works great there.
However, there is some trouble where erlang package is upgraded :
- install rabbitmq 1.7.2
- install rabbitmq-stomp (or 1.7.2) plugin, as a single ez file, then rabbitmq-activate-plugins
- restart : ok
- upgrade erlang at some point
- restart : crash
- uninstall completely rabbitmq-stomp plugin, then reinstall
- restart : ok

I'm asking here since i guess this problem is not caused by the debian install.

Regards,
J?r?my Lal

-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 198 bytes
Desc: OpenPGP digital signature
Url : http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20100308/2bcb0e9a/attachment.pgp 

From matthew at lshift.net  Mon Mar  8 16:52:30 2010
From: matthew at lshift.net (Matthew Sackman)
Date: Mon, 8 Mar 2010 16:52:30 +0000
Subject: [rabbitmq-discuss] impossible to start after erlang update (on
 debian)
In-Reply-To: <4B952A72.7080205@melix.org>
References: <4B952A72.7080205@melix.org>
Message-ID: <20100308165230.GH6896@mrnibble.lshift.net>

Hi J?r?my,

On Mon, Mar 08, 2010 at 05:48:50PM +0100, J?r?my Lal wrote:
> - upgrade erlang at some point
> - restart : crash

Do you happen to have the error message and logs that you get at this
point? I'm curious to know what has changed to the point where you have
to recompile the stomp plugin. Does just running activate-plugins again
not solve the issue?

Matthew



From pauljones23 at gmail.com  Mon Mar  8 17:37:39 2010
From: pauljones23 at gmail.com (Paul Jones)
Date: Mon, 8 Mar 2010 17:37:39 +0000
Subject: [rabbitmq-discuss] impossible to start after erlang update (on
	debian)
In-Reply-To: <20100308165230.GH6896@mrnibble.lshift.net>
References: <4B952A72.7080205@melix.org>
	<20100308165230.GH6896@mrnibble.lshift.net>
Message-ID: <29598b611003080937x55bd63ai3318845d5fa22a46@mail.gmail.com>

The boot file generated as part of the plugin activation will not work
across an Erlang upgrade. This is an unfortunate side-effect of the way that
the Erlang release management system works. As Matthew says, simply
re-running the plugin activation script should more than likely correct the
problem.

On Mon, Mar 8, 2010 at 4:52 PM, Matthew Sackman <matthew at lshift.net> wrote:

> Hi J?r?my,
>
> On Mon, Mar 08, 2010 at 05:48:50PM +0100, J?r?my Lal wrote:
> > - upgrade erlang at some point
> > - restart : crash
>
> Do you happen to have the error message and logs that you get at this
> point? I'm curious to know what has changed to the point where you have
> to recompile the stomp plugin. Does just running activate-plugins again
> not solve the issue?
>
> Matthew
>
> _______________________________________________
> rabbitmq-discuss mailing list
> rabbitmq-discuss at lists.rabbitmq.com
> http://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20100308/1a33f75f/attachment.htm 

From appel at dvs.tu-darmstadt.de  Mon Mar  8 17:56:24 2010
From: appel at dvs.tu-darmstadt.de (SteAp)
Date: Mon, 8 Mar 2010 09:56:24 -0800 (PST)
Subject: [rabbitmq-discuss]  RabbitMQ and Qpid Java Client
Message-ID: <27824111.post@talk.nabble.com>


Hey,

I'm playing around with RabbitMQ 1.7.2 and the SVN version (0.7) of the Qpid
Java Client (JMS). I did create the vhost, a user and set permission. Now
when trying to connect I get the following error:

     [java] Caused by: org.apache.qpid.AMQConnectionFailureException: Unable
to Connect
     [java] 	at
org.apache.qpid.client.AMQConnection.<init>(AMQConnection.java:619)
     [java] 	at
org.apache.qpid.client.AMQConnectionFactory.createConnection(AMQConnectionFactory.java:276)
     [java] 	... 4 more
     [java] Caused by: org.apache.qpid.AMQException: cannot connect to
broker [error code 504: channel error]
     [java] 	at
org.apache.qpid.client.AMQConnectionDelegate_0_10.makeBrokerConnection(AMQConnectionDelegate_0_10.java:209)
     [java] 	at
org.apache.qpid.client.AMQConnection.makeBrokerConnection(AMQConnection.java:760)
     [java] 	at
org.apache.qpid.client.AMQConnection.<init>(AMQConnection.java:546)
     [java] 	... 5 more

Could be due to an AMQP version mismatch; the client works fine with Qpid
which is at AMQP 0-10 while RabbitMQ is at AMQP 0-9 (?). But I'm not sure
about this...
Has anybody seen this error before or an idea how to fix it?

Thanks!
Cheers,
Stefan
-- 
View this message in context: http://old.nabble.com/RabbitMQ-and-Qpid-Java-Client-tp27824111p27824111.html
Sent from the RabbitMQ mailing list archive at Nabble.com.




From natester at gmail.com  Mon Mar  8 18:38:13 2010
From: natester at gmail.com (Nathaniel Haggard)
Date: Mon, 8 Mar 2010 11:38:13 -0700
Subject: [rabbitmq-discuss] Fatal error: record_overflow {ssl_upgrade_error,
	esslerrssl}
Message-ID: <4adac7a31003081038x54b049c6je36389d19ca6ad2@mail.gmail.com>

./ssl_record.erl:292:Fatal error: record_overflow and
{ssl_upgrade_error,esslerrssl} is the error rabbitmq throws when this
txamqp python client tries to connect over ssl.

I assume the client needs hacking.  Can you point me in the right direction?

-Nate



From matthias at lshift.net  Mon Mar  8 18:44:07 2010
From: matthias at lshift.net (Matthias Radestock)
Date: Mon, 08 Mar 2010 18:44:07 +0000
Subject: [rabbitmq-discuss] Fatal error: record_overflow
 {ssl_upgrade_error, esslerrssl}
In-Reply-To: <4adac7a31003081038x54b049c6je36389d19ca6ad2@mail.gmail.com>
References: <4adac7a31003081038x54b049c6je36389d19ca6ad2@mail.gmail.com>
Message-ID: <4B954577.5070301@lshift.net>

Nate,

Nathaniel Haggard wrote:
> ./ssl_record.erl:292:Fatal error: record_overflow and
> {ssl_upgrade_error,esslerrssl} is the error rabbitmq throws when this
> txamqp python client tries to connect over ssl.
> 
> I assume the client needs hacking.

Not necessarily. What version of Erlang/OTP are you using? If you want 
to get SSL working it is highly recommended you run at least R13B02, and 
ideally the latest (R13B04).


Regards,

Matthias.



From scottblanc at gmail.com  Mon Mar  8 22:04:52 2010
From: scottblanc at gmail.com (scott w)
Date: Mon, 8 Mar 2010 14:04:52 -0800
Subject: [rabbitmq-discuss] Crash reports for bug21673 branch
In-Reply-To: <401b577e1003030830m51aa1043mc00dab8fe4582e68@mail.gmail.com>
References: <401b577e1003012036n522f28b0s939a86237d69a0cf@mail.gmail.com>
	<4B8C9A66.30709@lshift.net>
	<401b577e1003021402ne106f2exb6e7edd1419597c1@mail.gmail.com>
	<4B8DB387.1020802@lshift.net>
	<401b577e1003030830m51aa1043mc00dab8fe4582e68@mail.gmail.com>
Message-ID: <401b577e1003081404i12dfcd04i19862f554656799e@mail.gmail.com>

Hi Matthias --

I upgraded my version of the branch as you suggested below below and
rebuilt. Upon startup of rabbitmq, I get the error below. Any ideas? I am
using the same config as before. The only that should be different is the
new code.

thanks,
Scott

Here is the error:

starting file handle cache server
...BOOT ERROR: FAILED
Reason: {{badmatch,
             {error,
                 {{'EXIT',
                      {undef,
                          [{rabbit_restartable_sup,start_link,
                               [file_handle_cache_sup,
                                {file_handle_cache,start_link,[]}]},
                           {supervisor,do_start_child,2},
                           {supervisor,handle_start_child,2},
                           {supervisor,handle_call,3},
                           {gen_server,handle_msg,5},
                           {proc_lib,init_p_do_apply,3}]}},
                  {child,undefined,file_handle_cache_sup,
                      {rabbit_restartable_sup,start_link,
                          [file_handle_cache_sup,
                           {file_handle_cache,start_link,[]}]},
                      transient,infinity,supervisor,
                      [rabbit_restartable_sup]}}}},
         [{rabbit_sup,start_restartable_child,2},
          {rabbit,'-run_boot_step/1-lc$^1/1-1-',1},
          {rabbit,run_boot_step,1},
          {rabbit,'-start/2-lc$^0/1-0-',1},
          {rabbit,start,2},
          {application_master,start_it_old,4}]}


On Wed, Mar 3, 2010 at 8:30 AM, scott w <scottblanc at gmail.com> wrote:

> Ah ok great to know. Thanks Matthias!
>
>
> On Tue, Mar 2, 2010 at 4:55 PM, Matthias Radestock <matthias at lshift.net>wrote:
>
>> Scott,
>>
>>
>> scott w wrote:
>>
>>> The whole file is hundreds of MB. I've attached a gzipped copy of the
>>> first 10K lines of output from rabbit-sasl.log. The rabbit.log file doesn't
>>> have anything interesting, just info level messages about connections being
>>> established.
>>>
>>> I'm not forwarding to the main list since I don't want to send 66K of
>>> data to everyone.
>>>
>>> Also to answer Matthew's question about which version I am using, here is
>>> what "hg summary" reports:
>>>
>>> parent: 2781:9e0c76ab1039 tip
>>>  merge default ? bug 21673
>>> branch: bug21673
>>> commit: 182 unknown (clean)
>>> update: (current)
>>>
>>> Any feedback would be helpful.
>>>
>>
>> The first entry in the sasl log does indeed point to the problem:
>>
>> =CRASH REPORT==== 27-Feb-2010::22:18:11 ===
>>  crasher:
>>    initial call: gen:init_it/7
>>    pid: <0.194.0>
>>    registered_name: rabbit_msg_store_gc
>>    exception exit: {unhandled_info,
>>                        {file_handle_cache,maximum_eldest_since_use,
>>                            1586.6666666666667}}
>>
>>      in function  gen_server2:terminate/6
>>    ancestors: [rabbit_msg_store,rabbit_sup,<0.76.0>]
>>    messages: []
>>    links: [<0.193.0>]
>>
>>    dictionary: [{fhc_age_tree,{0,nil}}]
>>    trap_exit: false
>>    status: running
>>    heap_size: 10946
>>    stack_size: 24
>>    reductions: 42501230341
>>  neighbours:
>>
>> The bug that causes this got fixed on 18-Feb, whereas the version you are
>> running is two days older. So updating your checkout to the latest version
>> will give you happier rabbit.
>>
>>
>> Regards,
>>
>> Matthias.
>>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20100308/5f5f61fd/attachment.htm 

From matthew at lshift.net  Mon Mar  8 22:22:15 2010
From: matthew at lshift.net (Matthew Sackman)
Date: Mon, 8 Mar 2010 22:22:15 +0000
Subject: [rabbitmq-discuss] Crash reports for bug21673 branch
In-Reply-To: <401b577e1003081404i12dfcd04i19862f554656799e@mail.gmail.com>
References: <401b577e1003012036n522f28b0s939a86237d69a0cf@mail.gmail.com>
	<4B8C9A66.30709@lshift.net>
	<401b577e1003021402ne106f2exb6e7edd1419597c1@mail.gmail.com>
	<4B8DB387.1020802@lshift.net>
	<401b577e1003030830m51aa1043mc00dab8fe4582e68@mail.gmail.com>
	<401b577e1003081404i12dfcd04i19862f554656799e@mail.gmail.com>
Message-ID: <20100308222215.GA27833@wellquite.org>

Hi Scott,

On Mon, Mar 08, 2010 at 02:04:52PM -0800, scott w wrote:
> I upgraded my version of the branch as you suggested below below and
> rebuilt. Upon startup of rabbitmq, I get the error below. Any ideas? I am
> using the same config as before. The only that should be different is the
> new code.
>                       {undef,
>                           [{rabbit_restartable_sup,start_link,
>                                [file_handle_cache_sup,
>                                 {file_handle_cache,start_link,[]}]},

Sorry, but I think you've made some sort of mistake - I can't imagine how
that error can come about - maybe you've altered some files and did an hg
up rather than an hg up -C? Certainly "hg up -C bug21673 && make clean &&
make -j && make cleandb run" all work for me.

Matthew



From scottblanc at gmail.com  Mon Mar  8 22:42:39 2010
From: scottblanc at gmail.com (scott w)
Date: Mon, 8 Mar 2010 14:42:39 -0800
Subject: [rabbitmq-discuss] Crash reports for bug21673 branch
In-Reply-To: <20100308222215.GA27833@wellquite.org>
References: <401b577e1003012036n522f28b0s939a86237d69a0cf@mail.gmail.com>
	<4B8C9A66.30709@lshift.net>
	<401b577e1003021402ne106f2exb6e7edd1419597c1@mail.gmail.com>
	<4B8DB387.1020802@lshift.net>
	<401b577e1003030830m51aa1043mc00dab8fe4582e68@mail.gmail.com>
	<401b577e1003081404i12dfcd04i19862f554656799e@mail.gmail.com>
	<20100308222215.GA27833@wellquite.org>
Message-ID: <401b577e1003081442o47210423n5b0875ac46ed0441@mail.gmail.com>

Ok thanks for the feedback. I will try do a rebuild.

On Mon, Mar 8, 2010 at 2:22 PM, Matthew Sackman <matthew at lshift.net> wrote:

> Hi Scott,
>
> On Mon, Mar 08, 2010 at 02:04:52PM -0800, scott w wrote:
> > I upgraded my version of the branch as you suggested below below and
> > rebuilt. Upon startup of rabbitmq, I get the error below. Any ideas? I am
> > using the same config as before. The only that should be different is the
> > new code.
> >                       {undef,
> >                           [{rabbit_restartable_sup,start_link,
> >                                [file_handle_cache_sup,
> >                                 {file_handle_cache,start_link,[]}]},
>
> Sorry, but I think you've made some sort of mistake - I can't imagine how
> that error can come about - maybe you've altered some files and did an hg
> up rather than an hg up -C? Certainly "hg up -C bug21673 && make clean &&
> make -j && make cleandb run" all work for me.
>
> Matthew
>
> _______________________________________________
> rabbitmq-discuss mailing list
> rabbitmq-discuss at lists.rabbitmq.com
> http://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20100308/b48dfae5/attachment.htm 

From matthew at lshift.net  Mon Mar  8 22:45:21 2010
From: matthew at lshift.net (Matthew Sackman)
Date: Mon, 8 Mar 2010 22:45:21 +0000
Subject: [rabbitmq-discuss] Crash reports for bug21673 branch
In-Reply-To: <401b577e1003081442o47210423n5b0875ac46ed0441@mail.gmail.com>
References: <401b577e1003012036n522f28b0s939a86237d69a0cf@mail.gmail.com>
	<4B8C9A66.30709@lshift.net>
	<401b577e1003021402ne106f2exb6e7edd1419597c1@mail.gmail.com>
	<4B8DB387.1020802@lshift.net>
	<401b577e1003030830m51aa1043mc00dab8fe4582e68@mail.gmail.com>
	<401b577e1003081404i12dfcd04i19862f554656799e@mail.gmail.com>
	<20100308222215.GA27833@wellquite.org>
	<401b577e1003081442o47210423n5b0875ac46ed0441@mail.gmail.com>
Message-ID: <20100308224521.GB27833@wellquite.org>

On Mon, Mar 08, 2010 at 02:42:39PM -0800, scott w wrote:
> Ok thanks for the feedback. I will try do a rebuild.

There's a possibility it *may* have something to do with plugins,
though I've not been able to replicate it here. Do you have any plugins
activated?

Matthew



From scottblanc at gmail.com  Mon Mar  8 22:49:33 2010
From: scottblanc at gmail.com (scott w)
Date: Mon, 8 Mar 2010 14:49:33 -0800
Subject: [rabbitmq-discuss] Crash reports for bug21673 branch
In-Reply-To: <20100308224521.GB27833@wellquite.org>
References: <401b577e1003012036n522f28b0s939a86237d69a0cf@mail.gmail.com>
	<4B8C9A66.30709@lshift.net>
	<401b577e1003021402ne106f2exb6e7edd1419597c1@mail.gmail.com>
	<4B8DB387.1020802@lshift.net>
	<401b577e1003030830m51aa1043mc00dab8fe4582e68@mail.gmail.com>
	<401b577e1003081404i12dfcd04i19862f554656799e@mail.gmail.com>
	<20100308222215.GA27833@wellquite.org>
	<401b577e1003081442o47210423n5b0875ac46ed0441@mail.gmail.com>
	<20100308224521.GB27833@wellquite.org>
Message-ID: <401b577e1003081449t459a6d60vc0d1c9ba31f338b2@mail.gmail.com>

On that build, there were no plugins activated.

On Mon, Mar 8, 2010 at 2:45 PM, Matthew Sackman <matthew at lshift.net> wrote:

> On Mon, Mar 08, 2010 at 02:42:39PM -0800, scott w wrote:
> > Ok thanks for the feedback. I will try do a rebuild.
>
> There's a possibility it *may* have something to do with plugins,
> though I've not been able to replicate it here. Do you have any plugins
> activated?
>
> Matthew
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20100308/7b2b2849/attachment.htm 

From jason.carver at gmail.com  Mon Mar  8 22:54:41 2010
From: jason.carver at gmail.com (Jason Carver)
Date: Mon, 8 Mar 2010 17:54:41 -0500
Subject: [rabbitmq-discuss] Having trouble installing on Ubuntu
In-Reply-To: <85f667131003081449p557e1649ibf61cb0855a5253f@mail.gmail.com>
References: <85f667131003081449p557e1649ibf61cb0855a5253f@mail.gmail.com>
Message-ID: <85f667131003081454y293bf448q59dc76c86a336d08@mail.gmail.com>

Would someone help me get this installed?  I'd really appreciate it.

On Ubuntu 9.10, when installing rabbitmq via apt-get, I'm getting this
report from message:
...
Setting up rabbitmq-server (1.6.0-1ubuntu1) ...
Starting rabbitmq-server: TIMEOUT - check
/var/log/rabbitmq/startup_{log,err}
rabbitmq-server.
invoke-rc.d: initscript rabbitmq-server, action "start" failed.
dpkg: error processing rabbitmq-server (--configure):
 subprocess installed post-installation script returned error exit status 1
Errors were encountered while processing:
 rabbitmq-server
E: Sub-process /usr/bin/dpkg returned an error code (1)


startup_log says:
===================================================
{error_logger,{{2010,3,8},{17,41,11}},"Protocol: ~p: register error:
~p~n",["inet_tcp",{{badmatch,{error,etimedout}},[{inet_tcp_dist,listen,1},{net_kernel,start_protos,4},{net_kernel,start_protos,3},{net_kernel,init_node,2},{net_kernel,init,1},{gen_server,init_it,6},{proc_lib,init_p_do_apply,3}]}]}
{error_logger,{{2010,3,8},{17,41,11}},crash_report,[[{initial_call,{net_kernel,init,['Argument__1']}},{pid,<0.21.0>},{registered_name,[]},{error_info,{exit,{error,badarg},[{gen_server,init_it,6},{proc_lib,init_p_do_apply,3}]}},{ancestors,[net_sup,kernel_sup,<0.8.0>]},{messages,[]},{links,[#Port<0.84>,<0.18.0>]},{dictionary,[{longnames,false}]},{trap_exit,true},{status,running},{heap_size,377},{stack_size,24},{reductions,508}],[]]}
{error_logger,{{2010,3,8},{17,41,11}},supervisor_report,[{supervisor,{local,net_sup}},{errorContext,start_error},{reason,{'EXIT',nodistribution}},{offender,[{pid,undefined},{name,net_kernel},{mfa,{net_kernel,start_link,[[rabbitmq_multi29109,shortnames]]}},{restart_type,permanent},{shutdown,2000},{child_type,worker}]}]}
{error_logger,{{2010,3,8},{17,41,11}},supervisor_report,[{supervisor,{local,kernel_sup}},{errorContext,start_error},{reason,shutdown},{offender,[{pid,undefined},{name,net_sup},{mfa,{erl_distribution,start_link,[]}},{restart_type,permanent},{shutdown,infinity},{child_type,supervisor}]}]}
{error_logger,{{2010,3,8},{17,41,11}},std_info,[{application,kernel},{exited,{shutdown,{kernel,start,[normal,[]]}}},{type,permanent}]}
{"Kernel pid
terminated",application_controller,"{application_start_failure,kernel,{shutdown,{kernel,start,[normal,[]]}}}"}
====================================================

startup_err says:
====================================================

Crash dump was written to: erl_crash.dump
Kernel pid terminated (application_controller)
({application_start_failure,kernel,{shutdown,{kernel,start,[normal,[]]}}})
====================================================

I don't know where to find erl_crash.dump.  Where should I look?

Thanks for your help.


~Carver
http://slique.com - builds group memory by putting all your group's email,
files and documents in one place
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20100308/16023dad/attachment.htm 

From kapouer at melix.org  Mon Mar  8 23:06:37 2010
From: kapouer at melix.org (=?ISO-8859-1?Q?J=E9r=E9my_Lal?=)
Date: Tue, 09 Mar 2010 00:06:37 +0100
Subject: [rabbitmq-discuss] Having trouble installing on Ubuntu
In-Reply-To: <85f667131003081454y293bf448q59dc76c86a336d08@mail.gmail.com>
References: <85f667131003081449p557e1649ibf61cb0855a5253f@mail.gmail.com>
	<85f667131003081454y293bf448q59dc76c86a336d08@mail.gmail.com>
Message-ID: <4B9582FD.5090207@melix.org>

On 08/03/2010 23:54, Jason Carver wrote:
> Would someone help me get this installed?  I'd really appreciate it.

> Setting up rabbitmq-server (1.6.0-1ubuntu1) ...
You should provide the erlang dependencies here.

> I don't know where to find erl_crash.dump.  Where should I look?
/var/lib/rabbitmq/



-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 198 bytes
Desc: OpenPGP digital signature
Url : http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20100309/9c393142/attachment.pgp 

From matthias at lshift.net  Mon Mar  8 23:16:44 2010
From: matthias at lshift.net (Matthias Radestock)
Date: Mon, 08 Mar 2010 23:16:44 +0000
Subject: [rabbitmq-discuss] Crash reports for bug21673 branch
In-Reply-To: <401b577e1003081449t459a6d60vc0d1c9ba31f338b2@mail.gmail.com>
References: <401b577e1003012036n522f28b0s939a86237d69a0cf@mail.gmail.com>	<4B8C9A66.30709@lshift.net>	<401b577e1003021402ne106f2exb6e7edd1419597c1@mail.gmail.com>	<4B8DB387.1020802@lshift.net>	<401b577e1003030830m51aa1043mc00dab8fe4582e68@mail.gmail.com>	<401b577e1003081404i12dfcd04i19862f554656799e@mail.gmail.com>	<20100308222215.GA27833@wellquite.org>	<401b577e1003081442o47210423n5b0875ac46ed0441@mail.gmail.com>	<20100308224521.GB27833@wellquite.org>
	<401b577e1003081449t459a6d60vc0d1c9ba31f338b2@mail.gmail.com>
Message-ID: <4B95855C.4080305@lshift.net>

Scott,

scott w wrote:
> On that build, there were no plugins activated.

But did you perhaps activate some plugins previously? That's easy to 
check - if you have an ebin/rabbit.boot file then you did :)

'make clean' gets rid of that, so does rabbitmq-deactivate-plugins.


Matthias.



From matthew at lshift.net  Mon Mar  8 23:19:31 2010
From: matthew at lshift.net (Matthew Sackman)
Date: Mon, 8 Mar 2010 23:19:31 +0000
Subject: [rabbitmq-discuss] Having trouble installing on Ubuntu
In-Reply-To: <85f667131003081454y293bf448q59dc76c86a336d08@mail.gmail.com>
References: <85f667131003081449p557e1649ibf61cb0855a5253f@mail.gmail.com>
	<85f667131003081454y293bf448q59dc76c86a336d08@mail.gmail.com>
Message-ID: <20100308231931.GC27833@wellquite.org>

On Mon, Mar 08, 2010 at 05:54:41PM -0500, Jason Carver wrote:
> startup_log says:
> ===================================================
> {error_logger,{{2010,3,8},{17,41,11}},"Protocol: ~p: register error:
> ~p~n",["inet_tcp",{{badmatch,{error,etimedout}},[{inet_tcp_dist,listen,1},{net_kernel,start_protos,4},{net_kernel,start_protos,3},{net_kernel,init_node,2},{net_kernel,init,1},{gen_server,init_it,6},{proc_lib,init_p_do_apply,3}]}]}

This error *usually* means you still have a copy of RabbitMQ running
somewhere. Track it down and kill it, and then the upgrade should go
smoothly.

Matthew



From matthew at lshift.net  Mon Mar  8 23:29:47 2010
From: matthew at lshift.net (Matthew Sackman)
Date: Mon, 8 Mar 2010 23:29:47 +0000
Subject: [rabbitmq-discuss] Having trouble installing on Ubuntu
In-Reply-To: <20100308231931.GC27833@wellquite.org>
References: <85f667131003081449p557e1649ibf61cb0855a5253f@mail.gmail.com>
	<85f667131003081454y293bf448q59dc76c86a336d08@mail.gmail.com>
	<20100308231931.GC27833@wellquite.org>
Message-ID: <20100308232947.GD27833@wellquite.org>

On Mon, Mar 08, 2010 at 11:19:31PM +0000, Matthew Sackman wrote:
> On Mon, Mar 08, 2010 at 05:54:41PM -0500, Jason Carver wrote:
> > startup_log says:
> > ===================================================
> > {error_logger,{{2010,3,8},{17,41,11}},"Protocol: ~p: register error:
> > ~p~n",["inet_tcp",{{badmatch,{error,etimedout}},[{inet_tcp_dist,listen,1},{net_kernel,start_protos,4},{net_kernel,start_protos,3},{net_kernel,init_node,2},{net_kernel,init,1},{gen_server,init_it,6},{proc_lib,init_p_do_apply,3}]}]}
> 
> This error *usually* means you still have a copy of RabbitMQ running
> somewhere. Track it down and kill it, and then the upgrade should go
> smoothly.

Of course, that might be relevant were you upgrading. Other thoughts
are that it could be a DNS issue. We've recently changed some code in
that area which should fix issues like these (if indeed this is the
issue). You may wish to try building from source. Can your hostname be
resolved? Or, when it's trying to start, you could try strace-ing the
process to see what it's timing out on.

Matthew



From matthias at lshift.net  Mon Mar  8 23:41:25 2010
From: matthias at lshift.net (Matthias Radestock)
Date: Mon, 08 Mar 2010 23:41:25 +0000
Subject: [rabbitmq-discuss] Having trouble installing on Ubuntu
In-Reply-To: <20100308232947.GD27833@wellquite.org>
References: <85f667131003081449p557e1649ibf61cb0855a5253f@mail.gmail.com>	<85f667131003081454y293bf448q59dc76c86a336d08@mail.gmail.com>	<20100308231931.GC27833@wellquite.org>
	<20100308232947.GD27833@wellquite.org>
Message-ID: <4B958B25.8020004@lshift.net>

Jason,

Matthew Sackman wrote:
> Of course, that might be relevant were you upgrading. Other thoughts
> are that it could be a DNS issue. We've recently changed some code in
> that area which should fix issues like these (if indeed this is the
> issue). You may wish to try building from source.

It looks like it's failing on core otp code, so I doubt our recent fix 
would make a difference.

AFAIK we have never seen this specific error before. Chances are there 
is something peculiar about the network setup on the machine.

> Can your hostname be resolved? Or, when it's trying to start, you
> could try strace-ing the process to see what it's timing out on.

strace'ing sounds like an excellent plan.


Regards,

Matthias.



From jason.carver at gmail.com  Tue Mar  9 05:51:35 2010
From: jason.carver at gmail.com (Jason Carver)
Date: Tue, 9 Mar 2010 00:51:35 -0500
Subject: [rabbitmq-discuss] Having trouble installing on Ubuntu
In-Reply-To: <4B958B25.8020004@lshift.net>
References: <85f667131003081449p557e1649ibf61cb0855a5253f@mail.gmail.com> 
	<85f667131003081454y293bf448q59dc76c86a336d08@mail.gmail.com> 
	<20100308231931.GC27833@wellquite.org>
	<20100308232947.GD27833@wellquite.org> 
	<4B958B25.8020004@lshift.net>
Message-ID: <85f667131003082151h7a79ef64s29f9795943deb73@mail.gmail.com>

Matthias, Matthew and Jeremy,


> strace'ing sounds like an excellent plan.


I should preface this by saying that I am not well versed in rabbitmq or
system administration, so I may be doing something dumb here... I attempted
an strace like so:

First, a: `ps aux | grep rabbitmq` to find the phantom rabbitmq process that
apt-get install seems to have left running, followed by a `sudo kill ####`
to get rid of it

Then a `sudo strace rabbitmq-server` to start the trace.


Here are the results from strace:
wait4(-1, 0x7fff09bb6e5c, WNOHANG, NULL) = -1 ECHILD (No child processes)
rt_sigreturn(0xffffffffffffffff)        = 0
close(3)                                = 0
rt_sigprocmask(SIG_BLOCK, [CHLD], [], 8) = 0
rt_sigaction(SIGINT, {0x441000, [], SA_RESTORER, 0x7f9622f0b530}, {SIG_DFL,
[], SA_RESTORER, 0x7f9622f0b530}, 8) = 0
rt_sigprocmask(SIG_SETMASK, [], NULL, 8) = 0
rt_sigaction(SIGINT, {SIG_DFL, [], SA_RESTORER, 0x7f9622f0b530}, {0x441000,
[], SA_RESTORER, 0x7f9622f0b530}, 8) = 0
rt_sigprocmask(SIG_BLOCK, NULL, [], 8)  = 0
read(255, "\nif [ `id -u` = 0 ] ; then\n    s"..., 498) = 207
rt_sigprocmask(SIG_BLOCK, NULL, [], 8)  = 0
pipe([3, 4])                            = 0
rt_sigprocmask(SIG_BLOCK, [CHLD], [], 8) = 0
rt_sigprocmask(SIG_SETMASK, [], NULL, 8) = 0
rt_sigprocmask(SIG_BLOCK, [INT CHLD], [], 8) = 0
lseek(255, -1, SEEK_CUR)                = 497
clone(child_stack=0, flags=CLONE_CHILD_CLEARTID|CLONE_CHILD_SETTID|SIGCHLD,
child_tidptr=0x7f96238a47c0) = 29934
rt_sigprocmask(SIG_SETMASK, [], NULL, 8) = 0
rt_sigaction(SIGCHLD, {0x4431e0, [], SA_RESTORER, 0x7f9622f0b530},
{0x4431e0, [], SA_RESTORER, 0x7f9622f0b530}, 8) = 0
close(4)                                = 0
read(3, "0\n", 128)                     = 2
read(3, "", 128)                        = 0
--- SIGCHLD (Child exited) @ 0 (0) ---
wait4(-1, [{WIFEXITED(s) && WEXITSTATUS(s) == 0}], WNOHANG, NULL) = 29934
wait4(-1, 0x7fff09bb6e9c, WNOHANG, NULL) = -1 ECHILD (No child processes)
rt_sigreturn(0xffffffffffffffff)        = 0
close(3)                                = 0
rt_sigprocmask(SIG_BLOCK, [CHLD], [], 8) = 0
rt_sigaction(SIGINT, {0x441000, [], SA_RESTORER, 0x7f9622f0b530}, {SIG_DFL,
[], SA_RESTORER, 0x7f9622f0b530}, 8) = 0
rt_sigprocmask(SIG_SETMASK, [], NULL, 8) = 0
rt_sigaction(SIGINT, {SIG_DFL, [], SA_RESTORER, 0x7f9622f0b530}, {0x441000,
[], SA_RESTORER, 0x7f9622f0b530}, 8) = 0
rt_sigprocmask(SIG_BLOCK, NULL, [], 8)  = 0
rt_sigprocmask(SIG_SETMASK, [], NULL, 8) = 0
stat(".", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
stat("/usr/local/sbin/su", 0x7fff09bb7470) = -1 ENOENT (No such file or
directory)
stat("/usr/local/bin/su", 0x7fff09bb7470) = -1 ENOENT (No such file or
directory)
stat("/usr/sbin/su", 0x7fff09bb7470)    = -1 ENOENT (No such file or
directory)
stat("/usr/bin/su", 0x7fff09bb7470)     = -1 ENOENT (No such file or
directory)
stat("/sbin/su", 0x7fff09bb7470)        = -1 ENOENT (No such file or
directory)
stat("/bin/su", {st_mode=S_IFREG|S_ISUID|0755, st_size=36864, ...}) = 0
stat("/bin/su", {st_mode=S_IFREG|S_ISUID|0755, st_size=36864, ...}) = 0
brk(0x1de7000)                          = 0x1de7000
rt_sigprocmask(SIG_BLOCK, [INT CHLD], [], 8) = 0
rt_sigprocmask(SIG_BLOCK, [CHLD], [INT CHLD], 8) = 0
rt_sigprocmask(SIG_SETMASK, [INT CHLD], NULL, 8) = 0
clone(child_stack=0, flags=CLONE_CHILD_CLEARTID|CLONE_CHILD_SETTID|SIGCHLD,
child_tidptr=0x7f96238a47c0) = 29935
rt_sigprocmask(SIG_SETMASK, [], NULL, 8) = 0
rt_sigprocmask(SIG_BLOCK, [CHLD], [], 8) = 0
rt_sigprocmask(SIG_SETMASK, [], NULL, 8) = 0
rt_sigprocmask(SIG_BLOCK, [CHLD], [], 8) = 0
rt_sigaction(SIGINT, {0x441000, [], SA_RESTORER, 0x7f9622f0b530}, {SIG_DFL,
[], SA_RESTORER, 0x7f9622f0b530}, 8) = 0
wait4(-1,
=================PAUSED HERE UNTIL CRASH=======================
{error_logger,{{2010,3,9},{0,32,45}},"Protocol: ~p: register error:
~p~n",["inet_tcp",{{badmatch,{error,etimedout}},[{inet_tcp_dist,listen,1},{net_kernel,start_protos,4},{net_kernel,start_protos,3},{net_kernel,init_node,2},{net_kernel,init,1},{gen_server,init_it,6},{proc_lib,init_p_do_apply,3}]}]}
{error_logger,{{2010,3,9},{0,32,45}},crash_report,[[{initial_call,{net_kernel,init,['Argument__1']}},{pid,<0.22.0>},{registered_name,[]},{error_info,{exit,{error,badarg},[{gen_server,init_it,6},{proc_lib,init_p_do_apply,3}]}},{ancestors,[net_sup,kernel_sup,<0.9.0>]},{messages,[]},{links,[#Port<0.97>,<0.19.0>]},{dictionary,[{longnames,false}]},{trap_exit,true},{status,running},{heap_size,610},{stack_size,24},{reductions,501}],[]]}
{error_logger,{{2010,3,9},{0,32,45}},supervisor_report,[{supervisor,{local,net_sup}},{errorContext,start_error},{reason,{'EXIT',nodistribution}},{offender,[{pid,undefined},{name,net_kernel},{mfa,{net_kernel,start_link,[[rabbit,shortnames]]}},{restart_type,permanent},{shutdown,2000},{child_type,worker}]}]}
{error_logger,{{2010,3,9},{0,32,45}},supervisor_report,[{supervisor,{local,kernel_sup}},{errorContext,start_error},{reason,shutdown},{offender,[{pid,undefined},{name,net_sup},{mfa,{erl_distribution,start_link,[]}},{restart_type,permanent},{shutdown,infinity},{child_type,supervisor}]}]}
{error_logger,{{2010,3,9},{0,32,45}},std_info,[{application,kernel},{exited,{shutdown,{kernel,start,[normal,[]]}}},{type,permanent}]}
{"Kernel pid
terminated",application_controller,"{application_start_failure,kernel,{shutdown,{kernel,start,[normal,[]]}}}"}

Crash dump was written to: erl_crash.dump
Kernel pid terminated (application_controller)
({application_start_failure,kernel,{shutdown,{kernel,start,[normal,[]]}}})
[{WIFEXITED(s) && WEXITSTATUS(s) == 1}], 0, NULL) = 29935
rt_sigprocmask(SIG_SETMASK, [], NULL, 8) = 0
--- SIGCHLD (Child exited) @ 0 (0) ---
wait4(-1, 0x7fff09bb711c, WNOHANG, NULL) = -1 ECHILD (No child processes)
rt_sigreturn(0xffffffffffffffff)        = 0
rt_sigaction(SIGINT, {SIG_DFL, [], SA_RESTORER, 0x7f9622f0b530}, {0x441000,
[], SA_RESTORER, 0x7f9622f0b530}, 8) = 0
rt_sigprocmask(SIG_BLOCK, NULL, [], 8)  = 0
read(255, "\n", 498)                    = 1
rt_sigprocmask(SIG_BLOCK, NULL, [], 8)  = 0
read(255, "", 498)                      = 0
exit_group(1)                           = ?

=============== END OF TRACE
=========================================================

(Jeremy asked)
> You should provide the erlang dependencies here.
If I'm reading aptitude correctly, it says that it will pull in "erlang-base
1:13.b.1-dfsg-2ubuntu1" as a dependency.

Is that enough information?

Cheers,
Carver
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20100309/5f27bdab/attachment.htm 

From matthias at lshift.net  Tue Mar  9 07:41:16 2010
From: matthias at lshift.net (Matthias Radestock)
Date: Tue, 09 Mar 2010 07:41:16 +0000
Subject: [rabbitmq-discuss] Having trouble installing on Ubuntu
In-Reply-To: <85f667131003082151h7a79ef64s29f9795943deb73@mail.gmail.com>
References: <85f667131003081449p557e1649ibf61cb0855a5253f@mail.gmail.com>
	<85f667131003081454y293bf448q59dc76c86a336d08@mail.gmail.com>
	<20100308231931.GC27833@wellquite.org>
	<20100308232947.GD27833@wellquite.org>
	<4B958B25.8020004@lshift.net>
	<85f667131003082151h7a79ef64s29f9795943deb73@mail.gmail.com>
Message-ID: <4B95FB9C.3030206@lshift.net>

Jason,

Jason Carver wrote:
> Then a `sudo strace rabbitmq-server` to start the trace.

you need to provide the -f option to strace, i.e.

sudo strace -f /usr/sbin/rabbitmq-server


Matthias.



From alexis.richardson at gmail.com  Tue Mar  9 14:43:23 2010
From: alexis.richardson at gmail.com (Alexis Richardson)
Date: Tue, 9 Mar 2010 14:43:23 +0000
Subject: [rabbitmq-discuss] RabbitMQ and Qpid Java Client
In-Reply-To: <27824111.post@talk.nabble.com>
References: <27824111.post@talk.nabble.com>
Message-ID: <167204d21003090643j2b972c8ah5acb836bfecb0e1b@mail.gmail.com>

Stefan,

Your assumption is correct.  The Qpid Java client that speaks AMQP
0-10 will not work with the RabbitMQ broker which speaks 0-8.

Your options are as follows:

1. Use the RabbitMQ Java client, which also lets you use things like
this: http://www.infoq.com/news/2010/03/amqp_support_spring_integration

2. Use the Qpid JMS client set for AMQP 0-8.

3. Use the OpenAMQ JMS client

4. Use the Qpid JMS client set for AMQP 0-91 and the RabbitMQ 0-91
build (from source).

alexis


On Mon, Mar 8, 2010 at 5:56 PM, SteAp <appel at dvs.tu-darmstadt.de> wrote:
>
> Hey,
>
> I'm playing around with RabbitMQ 1.7.2 and the SVN version (0.7) of the Qpid
> Java Client (JMS). I did create the vhost, a user and set permission. Now
> when trying to connect I get the following error:
>
> ? ? [java] Caused by: org.apache.qpid.AMQConnectionFailureException: Unable
> to Connect
> ? ? [java] ? ? at
> org.apache.qpid.client.AMQConnection.<init>(AMQConnection.java:619)
> ? ? [java] ? ? at
> org.apache.qpid.client.AMQConnectionFactory.createConnection(AMQConnectionFactory.java:276)
> ? ? [java] ? ? ... 4 more
> ? ? [java] Caused by: org.apache.qpid.AMQException: cannot connect to
> broker [error code 504: channel error]
> ? ? [java] ? ? at
> org.apache.qpid.client.AMQConnectionDelegate_0_10.makeBrokerConnection(AMQConnectionDelegate_0_10.java:209)
> ? ? [java] ? ? at
> org.apache.qpid.client.AMQConnection.makeBrokerConnection(AMQConnection.java:760)
> ? ? [java] ? ? at
> org.apache.qpid.client.AMQConnection.<init>(AMQConnection.java:546)
> ? ? [java] ? ? ... 5 more
>
> Could be due to an AMQP version mismatch; the client works fine with Qpid
> which is at AMQP 0-10 while RabbitMQ is at AMQP 0-9 (?). But I'm not sure
> about this...
> Has anybody seen this error before or an idea how to fix it?
>
> Thanks!
> Cheers,
> Stefan
> --
> View this message in context: http://old.nabble.com/RabbitMQ-and-Qpid-Java-Client-tp27824111p27824111.html
> Sent from the RabbitMQ mailing list archive at Nabble.com.
>
>
> _______________________________________________
> rabbitmq-discuss mailing list
> rabbitmq-discuss at lists.rabbitmq.com
> http://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss
>



From cctrieloff at redhat.com  Tue Mar  9 14:48:51 2010
From: cctrieloff at redhat.com (Carl Trieloff)
Date: Tue, 09 Mar 2010 09:48:51 -0500
Subject: [rabbitmq-discuss] RabbitMQ and Qpid Java Client
In-Reply-To: <167204d21003090643j2b972c8ah5acb836bfecb0e1b@mail.gmail.com>
References: <27824111.post@talk.nabble.com>
	<167204d21003090643j2b972c8ah5acb836bfecb0e1b@mail.gmail.com>
Message-ID: <4B965FD3.7080803@redhat.com>

On 03/09/2010 09:43 AM, Alexis Richardson wrote:
> Stefan,
>
> Your assumption is correct.  The Qpid Java client that speaks AMQP
> 0-10 will not work with the RabbitMQ broker which speaks 0-8.
>    

Actually the Qpid Java client can speak 0-8, 0-9, (0-91 in the new
0-6 release) and 0-10 of AMQP.

regards
Carl.



From cctrieloff at redhat.com  Tue Mar  9 14:52:26 2010
From: cctrieloff at redhat.com (Carl Trieloff)
Date: Tue, 09 Mar 2010 09:52:26 -0500
Subject: [rabbitmq-discuss] RabbitMQ and Qpid Java Client
In-Reply-To: <4B965FD3.7080803@redhat.com>
References: <27824111.post@talk.nabble.com>	<167204d21003090643j2b972c8ah5acb836bfecb0e1b@mail.gmail.com>
	<4B965FD3.7080803@redhat.com>
Message-ID: <4B9660AA.9050403@redhat.com>

On 03/09/2010 09:48 AM, Carl Trieloff wrote:
> On 03/09/2010 09:43 AM, Alexis Richardson wrote:
>    
>> Stefan,
>>
>> Your assumption is correct.  The Qpid Java client that speaks AMQP
>> 0-10 will not work with the RabbitMQ broker which speaks 0-8.
>>
>>      
> Actually the Qpid Java client can speak 0-8, 0-9, (0-91 in the new
> 0-6 release) and 0-10 of AMQP.
>
>    


Here is the link for 0.5 http://qpid.apache.org/amqp-compatibility.html

In 0.6, the Java client also support 0-9-1 and the Java broker also
supports 0-10.

regards
Carl.



From alexis.richardson at gmail.com  Tue Mar  9 14:54:50 2010
From: alexis.richardson at gmail.com (Alexis Richardson)
Date: Tue, 9 Mar 2010 14:54:50 +0000
Subject: [rabbitmq-discuss] RabbitMQ and Qpid Java Client
In-Reply-To: <4B9660AA.9050403@redhat.com>
References: <27824111.post@talk.nabble.com>
	<167204d21003090643j2b972c8ah5acb836bfecb0e1b@mail.gmail.com>
	<4B965FD3.7080803@redhat.com> <4B9660AA.9050403@redhat.com>
Message-ID: <167204d21003090654q2fd41187vf86d8e94612dbc53@mail.gmail.com>

Thanks Carl,

I was not sure exactly how to set up Qpid's Java client to speak the
different protocol versions.  Is there anything that Stefan would need
to know, based on his original question?

Cheers

alexis


On Tue, Mar 9, 2010 at 2:52 PM, Carl Trieloff <cctrieloff at redhat.com> wrote:
> On 03/09/2010 09:48 AM, Carl Trieloff wrote:
>> On 03/09/2010 09:43 AM, Alexis Richardson wrote:
>>
>>> Stefan,
>>>
>>> Your assumption is correct. ?The Qpid Java client that speaks AMQP
>>> 0-10 will not work with the RabbitMQ broker which speaks 0-8.
>>>
>>>
>> Actually the Qpid Java client can speak 0-8, 0-9, (0-91 in the new
>> 0-6 release) and 0-10 of AMQP.
>>
>>
>
>
> Here is the link for 0.5 http://qpid.apache.org/amqp-compatibility.html
>
> In 0.6, the Java client also support 0-9-1 and the Java broker also
> supports 0-10.
>
> regards
> Carl.
>
> _______________________________________________
> rabbitmq-discuss mailing list
> rabbitmq-discuss at lists.rabbitmq.com
> http://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss
>



From cctrieloff at redhat.com  Tue Mar  9 15:03:42 2010
From: cctrieloff at redhat.com (Carl Trieloff)
Date: Tue, 09 Mar 2010 10:03:42 -0500
Subject: [rabbitmq-discuss] RabbitMQ and Qpid Java Client
In-Reply-To: <167204d21003090654q2fd41187vf86d8e94612dbc53@mail.gmail.com>
References: <27824111.post@talk.nabble.com>	
	<167204d21003090643j2b972c8ah5acb836bfecb0e1b@mail.gmail.com>	
	<4B965FD3.7080803@redhat.com> <4B9660AA.9050403@redhat.com>
	<167204d21003090654q2fd41187vf86d8e94612dbc53@mail.gmail.com>
Message-ID: <4B96634E.3010707@redhat.com>



It would be best to just post the issue to the users at qpid.apache.org
and one of the Java guys can help Stefan directly. It is controlled
with the connection string is my understanding.

Carl.


On 03/09/2010 09:54 AM, Alexis Richardson wrote:
> Thanks Carl,
>
> I was not sure exactly how to set up Qpid's Java client to speak the
> different protocol versions.  Is there anything that Stefan would need
> to know, based on his original question?
>
> Cheers
>
> alexis
>
>
> On Tue, Mar 9, 2010 at 2:52 PM, Carl Trieloff<cctrieloff at redhat.com>  wrote:
>    
>> On 03/09/2010 09:48 AM, Carl Trieloff wrote:
>>      
>>> On 03/09/2010 09:43 AM, Alexis Richardson wrote:
>>>
>>>        
>>>> Stefan,
>>>>
>>>> Your assumption is correct.  The Qpid Java client that speaks AMQP
>>>> 0-10 will not work with the RabbitMQ broker which speaks 0-8.
>>>>
>>>>
>>>>          
>>> Actually the Qpid Java client can speak 0-8, 0-9, (0-91 in the new
>>> 0-6 release) and 0-10 of AMQP.
>>>
>>>
>>>        
>>
>> Here is the link for 0.5 http://qpid.apache.org/amqp-compatibility.html
>>
>> In 0.6, the Java client also support 0-9-1 and the Java broker also
>> supports 0-10.
>>
>> regards
>> Carl.
>>
>> _______________________________________________
>> rabbitmq-discuss mailing list
>> rabbitmq-discuss at lists.rabbitmq.com
>> http://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss
>>
>>      




From alexis.richardson at gmail.com  Tue Mar  9 15:09:51 2010
From: alexis.richardson at gmail.com (Alexis Richardson)
Date: Tue, 9 Mar 2010 15:09:51 +0000
Subject: [rabbitmq-discuss] RabbitMQ and Qpid Java Client
In-Reply-To: <4B96634E.3010707@redhat.com>
References: <27824111.post@talk.nabble.com>
	<167204d21003090643j2b972c8ah5acb836bfecb0e1b@mail.gmail.com>
	<4B965FD3.7080803@redhat.com> <4B9660AA.9050403@redhat.com>
	<167204d21003090654q2fd41187vf86d8e94612dbc53@mail.gmail.com>
	<4B96634E.3010707@redhat.com>
Message-ID: <167204d21003090709l6268405arf75ae86c6fc145fa@mail.gmail.com>

Thanks!

On Tue, Mar 9, 2010 at 3:03 PM, Carl Trieloff <cctrieloff at redhat.com> wrote:
>
>
> It would be best to just post the issue to the users at qpid.apache.org
> and one of the Java guys can help Stefan directly. It is controlled
> with the connection string is my understanding.
>
> Carl.
>
>
> On 03/09/2010 09:54 AM, Alexis Richardson wrote:
>>
>> Thanks Carl,
>>
>> I was not sure exactly how to set up Qpid's Java client to speak the
>> different protocol versions. ?Is there anything that Stefan would need
>> to know, based on his original question?
>>
>> Cheers
>>
>> alexis
>>
>>
>> On Tue, Mar 9, 2010 at 2:52 PM, Carl Trieloff<cctrieloff at redhat.com>
>> ?wrote:
>>
>>>
>>> On 03/09/2010 09:48 AM, Carl Trieloff wrote:
>>>
>>>>
>>>> On 03/09/2010 09:43 AM, Alexis Richardson wrote:
>>>>
>>>>
>>>>>
>>>>> Stefan,
>>>>>
>>>>> Your assumption is correct. ?The Qpid Java client that speaks AMQP
>>>>> 0-10 will not work with the RabbitMQ broker which speaks 0-8.
>>>>>
>>>>>
>>>>>
>>>>
>>>> Actually the Qpid Java client can speak 0-8, 0-9, (0-91 in the new
>>>> 0-6 release) and 0-10 of AMQP.
>>>>
>>>>
>>>>
>>>
>>> Here is the link for 0.5 http://qpid.apache.org/amqp-compatibility.html
>>>
>>> In 0.6, the Java client also support 0-9-1 and the Java broker also
>>> supports 0-10.
>>>
>>> regards
>>> Carl.
>>>
>>> _______________________________________________
>>> rabbitmq-discuss mailing list
>>> rabbitmq-discuss at lists.rabbitmq.com
>>> http://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss
>>>
>>>
>
>



From jmann at versatile.com  Tue Mar  9 15:18:55 2010
From: jmann at versatile.com (John Mann)
Date: Tue, 9 Mar 2010 10:18:55 -0500
Subject: [rabbitmq-discuss] RabbitMQ and Qpid Java Client
In-Reply-To: <167204d21003090643j2b972c8ah5acb836bfecb0e1b@mail.gmail.com>
References: <27824111.post@talk.nabble.com>
	<167204d21003090643j2b972c8ah5acb836bfecb0e1b@mail.gmail.com>
Message-ID: <2014b3701003090718j5fc8d3bet38bd82642a94f270@mail.gmail.com>

I too had trouble with the AMQP version incompatibilities between OpenAMQ
and RabbitMQ.  I was able to modify the OpenAMQ build to be compatible with
the 0-8 AMQP spec.  This article was helpful:

http://www.lshift.net/blog/2009/03/16/openamqs-jms-client-with-rabbitmq-server

However, I didn't like having to use a "tainted" OpenAMQ build.  So, I
decided to code to the RabbitMQ Java Client API.  I'm not using JMS yet, but
I did understand RabbitMQ at a deeper level.

Does anyone know when OpenAMQ and RabbitMQ will speak the same version of
AMQP?   Or am I only dreaming?

-John

On Tue, Mar 9, 2010 at 9:43 AM, Alexis Richardson <
alexis.richardson at gmail.com> wrote:

> Stefan,
>
> Your assumption is correct.  The Qpid Java client that speaks AMQP
> 0-10 will not work with the RabbitMQ broker which speaks 0-8.
>
> Your options are as follows:
>
> 1. Use the RabbitMQ Java client, which also lets you use things like
> this: http://www.infoq.com/news/2010/03/amqp_support_spring_integration
>
> 2. Use the Qpid JMS client set for AMQP 0-8.
>
> 3. Use the OpenAMQ JMS client
>
> 4. Use the Qpid JMS client set for AMQP 0-91 and the RabbitMQ 0-91
> build (from source).
>
> alexis
>
>
> On Mon, Mar 8, 2010 at 5:56 PM, SteAp <appel at dvs.tu-darmstadt.de> wrote:
> >
> > Hey,
> >
> > I'm playing around with RabbitMQ 1.7.2 and the SVN version (0.7) of the
> Qpid
> > Java Client (JMS). I did create the vhost, a user and set permission. Now
> > when trying to connect I get the following error:
> >
> >     [java] Caused by: org.apache.qpid.AMQConnectionFailureException:
> Unable
> > to Connect
> >     [java]     at
> > org.apache.qpid.client.AMQConnection.<init>(AMQConnection.java:619)
> >     [java]     at
> >
> org.apache.qpid.client.AMQConnectionFactory.createConnection(AMQConnectionFactory.java:276)
> >     [java]     ... 4 more
> >     [java] Caused by: org.apache.qpid.AMQException: cannot connect to
> > broker [error code 504: channel error]
> >     [java]     at
> >
> org.apache.qpid.client.AMQConnectionDelegate_0_10.makeBrokerConnection(AMQConnectionDelegate_0_10.java:209)
> >     [java]     at
> >
> org.apache.qpid.client.AMQConnection.makeBrokerConnection(AMQConnection.java:760)
> >     [java]     at
> > org.apache.qpid.client.AMQConnection.<init>(AMQConnection.java:546)
> >     [java]     ... 5 more
> >
> > Could be due to an AMQP version mismatch; the client works fine with Qpid
> > which is at AMQP 0-10 while RabbitMQ is at AMQP 0-9 (?). But I'm not sure
> > about this...
> > Has anybody seen this error before or an idea how to fix it?
> >
> > Thanks!
> > Cheers,
> > Stefan
> > --
> > View this message in context:
> http://old.nabble.com/RabbitMQ-and-Qpid-Java-Client-tp27824111p27824111.html
> > Sent from the RabbitMQ mailing list archive at Nabble.com.
> >
> >
> > _______________________________________________
> > rabbitmq-discuss mailing list
> > rabbitmq-discuss at lists.rabbitmq.com
> > http://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss
> >
>
> _______________________________________________
> rabbitmq-discuss mailing list
> rabbitmq-discuss at lists.rabbitmq.com
> http://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20100309/be9756b9/attachment.htm 

From alexis.richardson at gmail.com  Tue Mar  9 15:25:59 2010
From: alexis.richardson at gmail.com (Alexis Richardson)
Date: Tue, 9 Mar 2010 15:25:59 +0000
Subject: [rabbitmq-discuss] RabbitMQ and Qpid Java Client
In-Reply-To: <2014b3701003090718j5fc8d3bet38bd82642a94f270@mail.gmail.com>
References: <27824111.post@talk.nabble.com>
	<167204d21003090643j2b972c8ah5acb836bfecb0e1b@mail.gmail.com>
	<2014b3701003090718j5fc8d3bet38bd82642a94f270@mail.gmail.com>
Message-ID: <167204d21003090725m42a6bf36m5c605b8d6d73cecb@mail.gmail.com>

John

On Tue, Mar 9, 2010 at 3:18 PM, John Mann <jmann at versatile.com> wrote:
>
> Does anyone know when OpenAMQ and RabbitMQ will speak the same version of
> AMQP??? Or am I only dreaming?

You are not dreaming, it's something we have done a LOT of work on.
You can currently build an 0-91 broker from source.  There is still
some work to do before this can get into the main release.

alexis



> -John
>
> On Tue, Mar 9, 2010 at 9:43 AM, Alexis Richardson
> <alexis.richardson at gmail.com> wrote:
>>
>> Stefan,
>>
>> Your assumption is correct. ?The Qpid Java client that speaks AMQP
>> 0-10 will not work with the RabbitMQ broker which speaks 0-8.
>>
>> Your options are as follows:
>>
>> 1. Use the RabbitMQ Java client, which also lets you use things like
>> this: http://www.infoq.com/news/2010/03/amqp_support_spring_integration
>>
>> 2. Use the Qpid JMS client set for AMQP 0-8.
>>
>> 3. Use the OpenAMQ JMS client
>>
>> 4. Use the Qpid JMS client set for AMQP 0-91 and the RabbitMQ 0-91
>> build (from source).
>>
>> alexis
>>
>>
>> On Mon, Mar 8, 2010 at 5:56 PM, SteAp <appel at dvs.tu-darmstadt.de> wrote:
>> >
>> > Hey,
>> >
>> > I'm playing around with RabbitMQ 1.7.2 and the SVN version (0.7) of the
>> > Qpid
>> > Java Client (JMS). I did create the vhost, a user and set permission.
>> > Now
>> > when trying to connect I get the following error:
>> >
>> > ? ? [java] Caused by: org.apache.qpid.AMQConnectionFailureException:
>> > Unable
>> > to Connect
>> > ? ? [java] ? ? at
>> > org.apache.qpid.client.AMQConnection.<init>(AMQConnection.java:619)
>> > ? ? [java] ? ? at
>> >
>> > org.apache.qpid.client.AMQConnectionFactory.createConnection(AMQConnectionFactory.java:276)
>> > ? ? [java] ? ? ... 4 more
>> > ? ? [java] Caused by: org.apache.qpid.AMQException: cannot connect to
>> > broker [error code 504: channel error]
>> > ? ? [java] ? ? at
>> >
>> > org.apache.qpid.client.AMQConnectionDelegate_0_10.makeBrokerConnection(AMQConnectionDelegate_0_10.java:209)
>> > ? ? [java] ? ? at
>> >
>> > org.apache.qpid.client.AMQConnection.makeBrokerConnection(AMQConnection.java:760)
>> > ? ? [java] ? ? at
>> > org.apache.qpid.client.AMQConnection.<init>(AMQConnection.java:546)
>> > ? ? [java] ? ? ... 5 more
>> >
>> > Could be due to an AMQP version mismatch; the client works fine with
>> > Qpid
>> > which is at AMQP 0-10 while RabbitMQ is at AMQP 0-9 (?). But I'm not
>> > sure
>> > about this...
>> > Has anybody seen this error before or an idea how to fix it?
>> >
>> > Thanks!
>> > Cheers,
>> > Stefan
>> > --
>> > View this message in context:
>> > http://old.nabble.com/RabbitMQ-and-Qpid-Java-Client-tp27824111p27824111.html
>> > Sent from the RabbitMQ mailing list archive at Nabble.com.
>> >
>> >
>> > _______________________________________________
>> > rabbitmq-discuss mailing list
>> > rabbitmq-discuss at lists.rabbitmq.com
>> > http://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss
>> >
>>
>> _______________________________________________
>> rabbitmq-discuss mailing list
>> rabbitmq-discuss at lists.rabbitmq.com
>> http://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss
>
>
> _______________________________________________
> rabbitmq-discuss mailing list
> rabbitmq-discuss at lists.rabbitmq.com
> http://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss
>
>



From jmann at versatile.com  Tue Mar  9 15:50:23 2010
From: jmann at versatile.com (John Mann)
Date: Tue, 9 Mar 2010 10:50:23 -0500
Subject: [rabbitmq-discuss] RabbitMQ and Qpid Java Client
In-Reply-To: <167204d21003090725m42a6bf36m5c605b8d6d73cecb@mail.gmail.com>
References: <27824111.post@talk.nabble.com>
	<167204d21003090643j2b972c8ah5acb836bfecb0e1b@mail.gmail.com>
	<2014b3701003090718j5fc8d3bet38bd82642a94f270@mail.gmail.com>
	<167204d21003090725m42a6bf36m5c605b8d6d73cecb@mail.gmail.com>
Message-ID: <2014b3701003090750r7c283facl6017fd1b940f9e1f@mail.gmail.com>

Alexis,

Thanks for the update.  I'm sorry if my the tone of my previous message
sounded judgmental.  That wasn't my intent.

I'm looking forward to next release.

-John

On Tue, Mar 9, 2010 at 10:25 AM, Alexis Richardson <
alexis.richardson at gmail.com> wrote:

> John
>
> On Tue, Mar 9, 2010 at 3:18 PM, John Mann <jmann at versatile.com> wrote:
> >
> > Does anyone know when OpenAMQ and RabbitMQ will speak the same version of
> > AMQP?   Or am I only dreaming?
>
> You are not dreaming, it's something we have done a LOT of work on.
> You can currently build an 0-91 broker from source.  There is still
> some work to do before this can get into the main release.
>
> alexis
>
>
>
> > -John
> >
> > On Tue, Mar 9, 2010 at 9:43 AM, Alexis Richardson
> > <alexis.richardson at gmail.com> wrote:
> >>
> >> Stefan,
> >>
> >> Your assumption is correct.  The Qpid Java client that speaks AMQP
> >> 0-10 will not work with the RabbitMQ broker which speaks 0-8.
> >>
> >> Your options are as follows:
> >>
> >> 1. Use the RabbitMQ Java client, which also lets you use things like
> >> this: http://www.infoq.com/news/2010/03/amqp_support_spring_integration
> >>
> >> 2. Use the Qpid JMS client set for AMQP 0-8.
> >>
> >> 3. Use the OpenAMQ JMS client
> >>
> >> 4. Use the Qpid JMS client set for AMQP 0-91 and the RabbitMQ 0-91
> >> build (from source).
> >>
> >> alexis
> >>
> >>
> >> On Mon, Mar 8, 2010 at 5:56 PM, SteAp <appel at dvs.tu-darmstadt.de>
> wrote:
> >> >
> >> > Hey,
> >> >
> >> > I'm playing around with RabbitMQ 1.7.2 and the SVN version (0.7) of
> the
> >> > Qpid
> >> > Java Client (JMS). I did create the vhost, a user and set permission.
> >> > Now
> >> > when trying to connect I get the following error:
> >> >
> >> >     [java] Caused by: org.apache.qpid.AMQConnectionFailureException:
> >> > Unable
> >> > to Connect
> >> >     [java]     at
> >> > org.apache.qpid.client.AMQConnection.<init>(AMQConnection.java:619)
> >> >     [java]     at
> >> >
> >> >
> org.apache.qpid.client.AMQConnectionFactory.createConnection(AMQConnectionFactory.java:276)
> >> >     [java]     ... 4 more
> >> >     [java] Caused by: org.apache.qpid.AMQException: cannot connect to
> >> > broker [error code 504: channel error]
> >> >     [java]     at
> >> >
> >> >
> org.apache.qpid.client.AMQConnectionDelegate_0_10.makeBrokerConnection(AMQConnectionDelegate_0_10.java:209)
> >> >     [java]     at
> >> >
> >> >
> org.apache.qpid.client.AMQConnection.makeBrokerConnection(AMQConnection.java:760)
> >> >     [java]     at
> >> > org.apache.qpid.client.AMQConnection.<init>(AMQConnection.java:546)
> >> >     [java]     ... 5 more
> >> >
> >> > Could be due to an AMQP version mismatch; the client works fine with
> >> > Qpid
> >> > which is at AMQP 0-10 while RabbitMQ is at AMQP 0-9 (?). But I'm not
> >> > sure
> >> > about this...
> >> > Has anybody seen this error before or an idea how to fix it?
> >> >
> >> > Thanks!
> >> > Cheers,
> >> > Stefan
> >> > --
> >> > View this message in context:
> >> >
> http://old.nabble.com/RabbitMQ-and-Qpid-Java-Client-tp27824111p27824111.html
> >> > Sent from the RabbitMQ mailing list archive at Nabble.com.
> >> >
> >> >
> >> > _______________________________________________
> >> > rabbitmq-discuss mailing list
> >> > rabbitmq-discuss at lists.rabbitmq.com
> >> > http://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss
> >> >
> >>
> >> _______________________________________________
> >> rabbitmq-discuss mailing list
> >> rabbitmq-discuss at lists.rabbitmq.com
> >> http://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss
> >
> >
> > _______________________________________________
> > rabbitmq-discuss mailing list
> > rabbitmq-discuss at lists.rabbitmq.com
> > http://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss
> >
> >
>



-- 
-JC
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20100309/779c8e9c/attachment.htm 

From scottblanc at gmail.com  Tue Mar  9 17:44:32 2010
From: scottblanc at gmail.com (scott w)
Date: Tue, 9 Mar 2010 09:44:32 -0800
Subject: [rabbitmq-discuss] Crash reports for bug21673 branch
In-Reply-To: <4B95855C.4080305@lshift.net>
References: <401b577e1003012036n522f28b0s939a86237d69a0cf@mail.gmail.com>
	<401b577e1003021402ne106f2exb6e7edd1419597c1@mail.gmail.com>
	<4B8DB387.1020802@lshift.net>
	<401b577e1003030830m51aa1043mc00dab8fe4582e68@mail.gmail.com>
	<401b577e1003081404i12dfcd04i19862f554656799e@mail.gmail.com>
	<20100308222215.GA27833@wellquite.org>
	<401b577e1003081442o47210423n5b0875ac46ed0441@mail.gmail.com>
	<20100308224521.GB27833@wellquite.org>
	<401b577e1003081449t459a6d60vc0d1c9ba31f338b2@mail.gmail.com>
	<4B95855C.4080305@lshift.net>
Message-ID: <401b577e1003090944g7259126egefca16e9e89b6d98@mail.gmail.com>

Turns out I hadn't updated the branch correctly because when I did it over,
it worked. Thanks for your help.

On Mon, Mar 8, 2010 at 3:16 PM, Matthias Radestock <matthias at lshift.net>wrote:

> Scott,
>
>
> scott w wrote:
>
>> On that build, there were no plugins activated.
>>
>
> But did you perhaps activate some plugins previously? That's easy to check
> - if you have an ebin/rabbit.boot file then you did :)
>
> 'make clean' gets rid of that, so does rabbitmq-deactivate-plugins.
>
>
> Matthias.
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20100309/1b4751a6/attachment.htm 

From matthew at lshift.net  Tue Mar  9 17:48:53 2010
From: matthew at lshift.net (Matthew Sackman)
Date: Tue, 9 Mar 2010 17:48:53 +0000
Subject: [rabbitmq-discuss] Having trouble installing on Ubuntu
In-Reply-To: <4B96520C.8050605@lshift.net>
Message-ID: <20100309174853.GE17852@mrnibble.lshift.net>

Hi Jason,

I've looked through the strace. There are definitely some dns lookups
going on there of what look to be IP addresses. This could be something
that's going wrong. There doesn't seem to be anything that stands out
yelling "this is what is going wrong".

What happens if you just run "erl" from the command line, and what
happens if you just run "erl -sname rabbit" ?

Matthew



From zirpubolci at gmail.com  Tue Mar  9 22:27:06 2010
From: zirpubolci at gmail.com (allan bailey)
Date: Tue, 9 Mar 2010 14:27:06 -0800
Subject: [rabbitmq-discuss] How to test a client lib handling server
	redirects with 2 server cluster?
Message-ID: <621b44ae1003091427i2ad5905ra610fc58a6472873@mail.gmail.com>

I need to test a patch for txAMQP to handle the insist option on
connections.

Is there a way to setup 1 of a 2 server rabbitmq cluster so that it will
redirect to the 2nd?

thanks,
Allan
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20100309/97c5209d/attachment.htm 

From matthew at lshift.net  Wed Mar 10 00:41:33 2010
From: matthew at lshift.net (Matthew Sackman)
Date: Wed, 10 Mar 2010 00:41:33 +0000
Subject: [rabbitmq-discuss] How to test a client lib handling server
 redirects with 2 server cluster?
In-Reply-To: <621b44ae1003091427i2ad5905ra610fc58a6472873@mail.gmail.com>
References: <621b44ae1003091427i2ad5905ra610fc58a6472873@mail.gmail.com>
Message-ID: <20100310004132.GB19935@wellquite.org>

On Tue, Mar 09, 2010 at 02:27:06PM -0800, allan bailey wrote:
> I need to test a patch for txAMQP to handle the insist option on
> connections.
> 
> Is there a way to setup 1 of a 2 server rabbitmq cluster so that it will
> redirect to the 2nd?

The redirection is based on load. If you induce a high load on one server
and then try to connect a second client to it, it should redirect.


Matthew



From zirpubolci at gmail.com  Wed Mar 10 01:02:01 2010
From: zirpubolci at gmail.com (allan bailey)
Date: Tue, 9 Mar 2010 17:02:01 -0800
Subject: [rabbitmq-discuss] How to test a client lib handling server
	redirects with 2 server cluster?
In-Reply-To: <20100310004132.GB19935@wellquite.org>
References: <621b44ae1003091427i2ad5905ra610fc58a6472873@mail.gmail.com>
	<20100310004132.GB19935@wellquite.org>
Message-ID: <621b44ae1003091702p2c2d4382k7c8878d64f20cbe7@mail.gmail.com>

On Tue, Mar 9, 2010 at 4:41 PM, Matthew Sackman <matthew at lshift.net> wrote:

> On Tue, Mar 09, 2010 at 02:27:06PM -0800, allan bailey wrote:
> > I need to test a patch for txAMQP to handle the insist option on
> > connections.
> >
> > Is there a way to setup 1 of a 2 server rabbitmq cluster so that it will
> > redirect to the 2nd?
>
> The redirection is based on load. If you induce a high load on one server
> and then try to connect a second client to it, it should redirect.
>
>
>
System load, or number of connections?



> Matthew
>
> _______________________________________________
> rabbitmq-discuss mailing list
> rabbitmq-discuss at lists.rabbitmq.com
> http://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20100309/ed94dd5e/attachment.htm 

From jason.carver at gmail.com  Wed Mar 10 01:19:47 2010
From: jason.carver at gmail.com (Jason Carver)
Date: Tue, 9 Mar 2010 20:19:47 -0500
Subject: [rabbitmq-discuss] Having trouble installing on Ubuntu
In-Reply-To: <20100309174853.GE17852@mrnibble.lshift.net>
References: <4B96520C.8050605@lshift.net>
	<20100309174853.GE17852@mrnibble.lshift.net>
Message-ID: <85f667131003091719j77e94f1bt91351d20a1e130ce@mail.gmail.com>

> I've looked through the strace. There are definitely some dns lookups
> going on there of what look to be IP addresses. This could be something
> that's going wrong. There doesn't seem to be anything that stands out
> yelling "this is what is going wrong".
>

As far as I know, the dns settings were left as default (Slicehost, Ubuntu
9.10 Karmic).  Do I need to explicitly configure something to get it
working?


> What happens if you just run "erl" from the command line, and what
> happens if you just run "erl -sname rabbit" ?
>

`erl` gives a standard-looking:
Erlang R13B01 (erts-5.7.2) [source] [64-bit] [smp:4:4] [rq:4]
[async-threads:0] [kernel-poll:false]

Eshell V5.7.2  (abort with ^G)
1> q


`erl -sname rabbit` gives:
{error_logger,{{2010,3,9},{19,41,1}},"Protocol: ~p: register error:
~p~n",["inet_tcp",{{badmatch,{error,etimedout}},[{inet_tcp_dist,listen,1},{net_kernel,start_protos,4},{net_kernel,start_protos,3},{net_kernel,init_node,2},{net_kernel,init,1},{gen_server,init_it,6},{proc_lib,init_p_do_apply,3}]}]}
{error_logger,{{2010,3,9},{19,41,1}},crash_report,[[{initial_call,{net_kernel,init,['Argument__1']}},{pid,<0.21.0>},{registered_name,[]},{error_info,{exit,{error,badarg},[{gen_server,init_it,6},{proc_lib,init_p_do_apply,3}]}},{ancestors,[net_sup,kernel_sup,<0.8.0>]},{messages,[]},{links,[#Port<0.51>,<0.18.0>]},{dictionary,[{longnames,false}]},{trap_exit,true},{status,running},{heap_size,377},{stack_size,24},{reductions,444}],[]]}
{error_logger,{{2010,3,9},{19,41,1}},supervisor_report,[{supervisor,{local,net_sup}},{errorContext,start_error},{reason,{'EXIT',nodistribution}},{offender,[{pid,undefined},{name,net_kernel},{mfa,{net_kernel,start_link,[[rabbit,shortnames]]}},{restart_type,permanent},{shutdown,2000},{child_type,worker}]}]}
{error_logger,{{2010,3,9},{19,41,1}},supervisor_report,[{supervisor,{local,kernel_sup}},{errorContext,start_error},{reason,shutdown},{offender,[{pid,undefined},{name,net_sup},{mfa,{erl_distribution,start_link,[]}},{restart_type,permanent},{shutdown,infinity},{child_type,supervisor}]}]}
{error_logger,{{2010,3,9},{19,41,1}},std_info,[{application,kernel},{exited,{shutdown,{kernel,start,[normal,[]]}}},{type,permanent}]}
{"Kernel pid
terminated",application_controller,"{application_start_failure,kernel,{shutdown,{kernel,start,[normal,[]]}}}"}

Crash dump was written to: erl_crash.dump
Kernel pid terminated (application_controller)
({application_start_failure,kernel,{shutdown,{kernel,start,[normal,[]]}}})

 `ps aux | grep mq` shows that another copy of rabbitmq is not running:
carver      32302  0.0  0.1   6068   652 pts/8    S+   19:48   0:00 grep
--color=auto mq


> Matthew
>

~Carver
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20100309/45a9aaab/attachment.htm 

From matthias at lshift.net  Wed Mar 10 01:45:07 2010
From: matthias at lshift.net (Matthias Radestock)
Date: Wed, 10 Mar 2010 01:45:07 +0000
Subject: [rabbitmq-discuss] Having trouble installing on Ubuntu
In-Reply-To: <85f667131003091719j77e94f1bt91351d20a1e130ce@mail.gmail.com>
References: <4B96520C.8050605@lshift.net>	<20100309174853.GE17852@mrnibble.lshift.net>
	<85f667131003091719j77e94f1bt91351d20a1e130ce@mail.gmail.com>
Message-ID: <4B96F9A3.1060304@lshift.net>

Jason,

Jason Carver wrote:
> 
>     I've looked through the strace. There are definitely some dns lookups
>     going on there of what look to be IP addresses. This could be something
>     that's going wrong. There doesn't seem to be anything that stands out
>     yelling "this is what is going wrong".
> 
> As far as I know, the dns settings were left as default (Slicehost, 
> Ubuntu 9.10 Karmic).  Do I need to explicitly configure something to get 
> it working?

That should be fine. There are certainly plenty of rabbit users on 
karmic that haven't run into difficulties.

>     What happens if you just run "erl" from the command line, and what
>     happens if you just run "erl -sname rabbit" ?
> 
> 
> `erl` gives a standard-looking:
> Erlang R13B01 (erts-5.7.2) [source] [64-bit] [smp:4:4] [rq:4] 
> [async-threads:0] [kernel-poll:false]
> 
> Eshell V5.7.2  (abort with ^G)
> 1> q
> 
> 
> `erl -sname rabbit` gives:
> {error_logger,{{2010,3,9},{19,41,1}},"Protocol: ~p: register error: 
> ~p~n",["inet_tcp",{{badmatch,{error,etimedout}},[{inet_tcp_dist,listen,1},{net_kernel,start_protos,4},{net_kernel,start_protos,3},{net_kernel,init_node,2},{net_kernel,init,1},{gen_server,init_it,6},{proc_lib,init_p_do_apply,3}]}]}
> {error_logger,{{2010,3,9},{19,41,1}},crash_report,[[{initial_call,{net_kernel,init,['Argument__1']}},{pid,<0.21.0>},{registered_name,[]},{error_info,{exit,{error,badarg},[{gen_server,init_it,6},{proc_lib,init_p_do_apply,3}]}},{ancestors,[net_sup,kernel_sup,<0.8.0>]},{messages,[]},{links,[#Port<0.51>,<0.18.0>]},{dictionary,[{longnames,false}]},{trap_exit,true},{status,running},{heap_size,377},{stack_size,24},{reductions,444}],[]]}
> {error_logger,{{2010,3,9},{19,41,1}},supervisor_report,[{supervisor,{local,net_sup}},{errorContext,start_error},{reason,{'EXIT',nodistribution}},{offender,[{pid,undefined},{name,net_kernel},{mfa,{net_kernel,start_link,[[rabbit,shortnames]]}},{restart_type,permanent},{shutdown,2000},{child_type,worker}]}]}
> {error_logger,{{2010,3,9},{19,41,1}},supervisor_report,[{supervisor,{local,kernel_sup}},{errorContext,start_error},{reason,shutdown},{offender,[{pid,undefined},{name,net_sup},{mfa,{erl_distribution,start_link,[]}},{restart_type,permanent},{shutdown,infinity},{child_type,supervisor}]}]}
> {error_logger,{{2010,3,9},{19,41,1}},std_info,[{application,kernel},{exited,{shutdown,{kernel,start,[normal,[]]}}},{type,permanent}]}
> {"Kernel pid 
> terminated",application_controller,"{application_start_failure,kernel,{shutdown,{kernel,start,[normal,[]]}}}"}
> 
> Crash dump was written to: erl_crash.dump
> Kernel pid terminated (application_controller) 
> ({application_start_failure,kernel,{shutdown,{kernel,start,[normal,[]]}}})

That means the problem isn't with rabbit code, but some general erlang 
networking issue. As I mentioned earlier, we haven't seen this before 
ourselves.

I've done some googling and found this:

http://bugs.debian.org/cgi-bin/bugreport.cgi?bug=498068

Any use?

If not, would you mind posting the above observations to the 
erlang-questions mailing list? Or perhaps ask on #erlang.


Regards,

Matthias.



From matthew at lshift.net  Wed Mar 10 10:22:46 2010
From: matthew at lshift.net (Matthew Sackman)
Date: Wed, 10 Mar 2010 10:22:46 +0000
Subject: [rabbitmq-discuss] How to test a client lib handling server
 redirects with 2 server cluster?
In-Reply-To: <621b44ae1003091702p2c2d4382k7c8878d64f20cbe7@mail.gmail.com>
References: <621b44ae1003091427i2ad5905ra610fc58a6472873@mail.gmail.com>
	<20100310004132.GB19935@wellquite.org>
	<621b44ae1003091702p2c2d4382k7c8878d64f20cbe7@mail.gmail.com>
Message-ID: <20100310102246.GC22076@wellquite.org>

On Tue, Mar 09, 2010 at 05:02:01PM -0800, allan bailey wrote:
> System load, or number of connections?

The code calls cpu_sup:avg1() which gives the 1 minute system load avg.
Running burnP6 a few times should be sufficient ;)

Matthew



From videlalvaro at gmail.com  Wed Mar 10 10:22:52 2010
From: videlalvaro at gmail.com (Alvaro Videla)
Date: Wed, 10 Mar 2010 18:22:52 +0800
Subject: [rabbitmq-discuss] About the new persistor
Message-ID: <6E536F0C-9125-4BA0-857D-3473D801546D@gmail.com>

Hi,

After checking the code of the new persister, I saw that It can be used as a K+V store, with memory cache and persistence to disk. Please correct me if I'm wrong.

So, it would be nice if the module rabbit_msg_store can be used standalone. 

In which other modules it depends?

What do you guys think about it?

I believe it could help easing the benchmarking of the persister too.

Regards,

Alvaro


From matthew at lshift.net  Wed Mar 10 10:37:59 2010
From: matthew at lshift.net (Matthew Sackman)
Date: Wed, 10 Mar 2010 10:37:59 +0000
Subject: [rabbitmq-discuss] About the new persistor
In-Reply-To: <6E536F0C-9125-4BA0-857D-3473D801546D@gmail.com>
References: <6E536F0C-9125-4BA0-857D-3473D801546D@gmail.com>
Message-ID: <20100310103758.GD22076@wellquite.org>

On Wed, Mar 10, 2010 at 06:22:52PM +0800, Alvaro Videla wrote:
> After checking the code of the new persister, I saw that It can be used as a K+V store, with memory cache and persistence to disk. Please correct me if I'm wrong.

You're not quite right there. The new persister is much more than just
the msg_store module. The c. 7000 new lines are in:
rabbit_msg_store.erl
rabbit_msg_file.erl
rabbit_msg_store_gc.erl
rabbit_queue_index.erl
rabbit_variable_queue.erl
bpqueue.erl
rabbit_msg_store_index.erl
rabbit_msg_store_ets_index.erl
rabbit_msg_store_misc.erl
file_handle_cache.erl
rabbit_memory_monitor.erl
rabbit_queue.hrl
rabbit_msg_store.hrl
rabbit_msg_store_index.hrl

Plus changes to rabbit_amqqueue_process.erl amongst others.

It really depends quite what you define as the "new persister". You're
not wrong though, in that the msg_store can be used as a K+V store (with
reference counting). However, it is very carefully designed to work
best with the access patterns that queues provide - it may not do so
well on randomised patterns.

> So, it would be nice if the module rabbit_msg_store can be used standalone. 
> In which other modules it depends?

xref is probably the best way to find out. But as a minimum:
rabbit_msg_store.erl
rabbit_msg_file.erl
rabbit_msg_store_gc.erl
rabbit_msg_store_index.erl
rabbit_msg_store_ets_index.erl
rabbit_msg_store_misc.erl
file_handle_cache.erl
rabbit_msg_store.hrl
rabbit_msg_store_index.hrl

And of course if you really want zero-RAM-cost-per-entry you should be
using the rabbitmq-toke plugin which pushes the index into Tokyo
Cabinet, which you'll also need.

> What do you guys think about it?

Not sure really. It hasn't really been designed with that in mind, so I
have no idea how well it'll work.

> I believe it could help easing the benchmarking of the persister too.

I don't really agree there - the queue_index also plays a crucial role
and writes to disk too. We've done and are doing extensive system-wide
testing, and as you've no doubt seen in rabbit_tests, there are some
large tests to stress the msg_store on its own.

Matthew



From g at rre.tt  Wed Mar 10 22:00:11 2010
From: g at rre.tt (Garrett Smith)
Date: Wed, 10 Mar 2010 16:00:11 -0600
Subject: [rabbitmq-discuss] Recommended server (rabbit_common) revision for
	Erlang client
Message-ID: <ce2570e21003101400g603d8b34i93166e083a8e1cc6@mail.gmail.com>

I'm trying to work with the tip of the Erlang client.

What revision of the server code should I use for the rabbit_common
app, which amqp_client depends on?

The README in the client source lists "93cc2ca0ba62 or later", but
given the various changes over the last few months, I think the window
is a bit more narrow.

Thanks,
Garrett



From matthew at lshift.net  Wed Mar 10 22:07:35 2010
From: matthew at lshift.net (Matthew Sackman)
Date: Wed, 10 Mar 2010 22:07:35 +0000
Subject: [rabbitmq-discuss] Recommended server (rabbit_common) revision
 for Erlang client
In-Reply-To: <ce2570e21003101400g603d8b34i93166e083a8e1cc6@mail.gmail.com>
References: <ce2570e21003101400g603d8b34i93166e083a8e1cc6@mail.gmail.com>
Message-ID: <20100310220735.GA8610@wellquite.org>

On Wed, Mar 10, 2010 at 04:00:11PM -0600, Garrett Smith wrote:
> I'm trying to work with the tip of the Erlang client.

You should be on the latest on the default branch. That may not
necessarily be the tip.

> What revision of the server code should I use for the rabbit_common
> app, which amqp_client depends on?

The only thing that we will aim to ensure is that the latest on default
from the erlang-client works with the latest on default from the server.
I further regularly merge the default on server into the new persister
branch (bug21673) so if you're using that then you should have no problems
with the erlang client either.

Matthew



From g at rre.tt  Wed Mar 10 22:53:46 2010
From: g at rre.tt (Garrett Smith)
Date: Wed, 10 Mar 2010 16:53:46 -0600
Subject: [rabbitmq-discuss] Recommended server (rabbit_common) revision
	for Erlang client
In-Reply-To: <20100310220735.GA8610@wellquite.org>
References: <ce2570e21003101400g603d8b34i93166e083a8e1cc6@mail.gmail.com>
	<20100310220735.GA8610@wellquite.org>
Message-ID: <ce2570e21003101453v492c3892lbe35232aeaed2082@mail.gmail.com>

On Wed, Mar 10, 2010 at 4:07 PM, Matthew Sackman <matthew at lshift.net> wrote:
> On Wed, Mar 10, 2010 at 04:00:11PM -0600, Garrett Smith wrote:
>> I'm trying to work with the tip of the Erlang client.
>
> You should be on the latest on the default branch. That may not
> necessarily be the tip.

Sorry, I meant "default".

>> What revision of the server code should I use for the rabbit_common
>> app, which amqp_client depends on?
>
> The only thing that we will aim to ensure is that the latest on default
> from the erlang-client works with the latest on default from the server.
> I further regularly merge the default on server into the new persister
> branch (bug21673) so if you're using that then you should have no problems
> with the erlang client either.

Ugh, I forgot to run codegen :/



From g at rre.tt  Thu Mar 11 00:41:24 2010
From: g at rre.tt (Garrett Smith)
Date: Wed, 10 Mar 2010 18:41:24 -0600
Subject: [rabbitmq-discuss] Changes to Erlang client for bug22056
Message-ID: <ce2570e21003101641s3f43a85brf76b9eaa0b328dd3@mail.gmail.com>

I noticed that to consume from a queue in the Erlang client, code that
once looked like this:

  amqp_channel:call(Channel, #'basic.consume'{queue = Q})

now is spelled:

 amqp_channel:subscribe(Channel, #'basic.consume'{queue = Q}, self())

I'm currently working through the correct link/monitor strategy in
Erlang to handle a couple of obvious points of failure:

- The AMQP connection fails, causing problems for any
producer/consumer processes
- A channel reader or writer crashes, leaving the channel or
connection in a possibly funky state

My Pavlovian/Erlang approach is to use links and/or monitors in Erlang
to crash any dependencies and let supervisors restart the lot.

This change looks like it may introduce logic for handling such
conditions. Being very lazy, I was hoping someone could elaborate on
what motivated the change (I don't think I have access to bug reports)
and, if convenient, provide guidance on implementing a sound restart
scheme for these types of failures.

Thanks!
Garrett



From henrik.genssen at miadi.net  Thu Mar 11 07:53:32 2010
From: henrik.genssen at miadi.net (Henrik Genssen)
Date: Thu, 11 Mar 2010 08:53:32 +0100
Subject: [rabbitmq-discuss] global addressing
Message-ID: <F6E2F9AA9C4D4687B091B81F3045CC8B@NIKE>

Hi all,

can someone tell me, if global addressing like discribed here:
http://209.85.129.132/search?q=cache:SNcerOVXxYkJ:www.amqp.org/confluence/display/AMQP/AMQP1.0%2BSIG+amqp+dns&cd=1&hl=de&ct=clnk&gl=de&client=firefox-a

is already reallity, or do I have to use something like Shovel or AMQPRelay or even build my own with celery polling a queue aon pushing it onto an other server...

Any hints or points to documentation?

--
Hinnack



From matthew at lshift.net  Thu Mar 11 10:34:27 2010
From: matthew at lshift.net (Matthew Sackman)
Date: Thu, 11 Mar 2010 10:34:27 +0000
Subject: [rabbitmq-discuss] Changes to Erlang client for bug22056
In-Reply-To: <ce2570e21003101641s3f43a85brf76b9eaa0b328dd3@mail.gmail.com>
References: <ce2570e21003101641s3f43a85brf76b9eaa0b328dd3@mail.gmail.com>
Message-ID: <20100311103427.GG17852@mrnibble.lshift.net>

On Wed, Mar 10, 2010 at 06:41:24PM -0600, Garrett Smith wrote:
> I noticed that to consume from a queue in the Erlang client, code that
> once looked like this:
> 
>   amqp_channel:call(Channel, #'basic.consume'{queue = Q})
> 
> now is spelled:
> 
>  amqp_channel:subscribe(Channel, #'basic.consume'{queue = Q}, self())

Err yes. That's my fault. It was originally :subscribe, then I objected
but the consume version was actually less flexible and still didn't
really solve all of my objections. Thus it went back to :subscribe.

> I'm currently working through the correct link/monitor strategy in
> Erlang to handle a couple of obvious points of failure:
> 
> - The AMQP connection fails, causing problems for any
> producer/consumer processes
> - A channel reader or writer crashes, leaving the channel or
> connection in a possibly funky state

In both cases, the links well ensure that the connection gets torn down.
Thus if you create the connection with start_network_link or
start_direct_link then you'll also be torn down (or at least receive an
'EXIT' signal/message).

Matthew



From jheephat at gmail.com  Thu Mar 11 14:07:51 2010
From: jheephat at gmail.com (Cory Watson)
Date: Thu, 11 Mar 2010 08:07:51 -0600
Subject: [rabbitmq-discuss] New User: Questions and Comments
Message-ID: <6cf1763a1003110607p13c03fct5ec0fe7a69118f72@mail.gmail.com>

Hello All!  I'm a potential new user of RabbitMQ and am also new to
AMQP and messaging in general.

Let me begin by congratulating you all on creating an excellent
package with a great community.  Having looked at a lot of messaging
I'm fairly confident saying that RabbitMQ is at the top of the heap.
It all depends on your needs, of course, but RabbitMQ is near the top
of the list in all categories.

That being said I have the disadvantage of being a complete noob with
RabbitMQ. I also have the exciting job of explaining and justifying
the use of messaging to my CTO, System Administrators and Developers.
As such I've taken some time to compile a list of comments and
questions that may help you help people like me in the future.

* General *

RabbitMQ is easy to set up, requires less configuration and works well
right out of the box.  It's also available in our distribution of
choice (Debian) which makes things easier.  Thanks!

* Cluster Setup *

Setting up a cluster works great but the status of a node as a disk
node is confusing.  This was exacerbated by problems I was having with
my client library not setting the delivery mode.  Regardless, I don't
see a way to determine (from rabbitmqctl) if a node is a disk node or
memory node.  It's therefore difficult to tell if I've set things up
correctly.

Also, the method for specifying that the node should be a disk node is
confusing.  And I quote:

"we list rabbit at rabbit3 as a node in the cluster command in order to
turn it into a disk rather than ram node"

I still don't grok that.  It sounds like when specifying the other
nodes this node should talk to, if we specify ourselves then it
becomes a disk node?  I'm not sure if there's some cultural/technical
reason for this type of configuration but it is completely lost on me.
 I'd be much more likely understand something like

rabbitmqctl cluster rabbit at rabbit1 rabbit at rabbit3[type="disk"]

or whatever is easiest to parse.  I'm assuming the existing mechanism
is in place because the list of nodes is a list and therefore
specified as such.  Regardless, it's difficult for me to follow.

It would also be great if the node's status as memory or disk was
shown in rabbitmqctl status.

* Cluster Capabilities *

This paragraph in the docs caused me lots of trouble:

"All data/state required for the operation of a RabbitMQ broker is
replicated across all nodes, for reliability and scaling, with full
ACID properties. An exception to this are message queues, which
currently only reside on the node that created them, though they are
visible and reachable from all nodes. Future releases of RabbitMQ will
introduce migration and replication of message queues."

When I originally read this I said "great!" and moved right down the
page to setup my cluster.  I was not really aware that this would
happen:
 * Create queue A on node 1
 * Send messages that are routed to queue A
 * Pull the plug on node A
 * Node 2 (if asked) says queue A doesn't exist

I realized afterward that this was what the earlier quote was trying
to tell me.  I'm not sure how to solve it in language.  There's a thin
line between warning users of shortcoming and being an alarmist.

I imagine that one could watch for the error saying that the queue
doesn't exist and retry later.  But how does one disambiguate this
from the unlikely occurrence that the queue has somehow disappeared?
Perhaps if I had asked node 2 about queue A it could've told me that
is was unavailable rather than non-existant?

* Patterns *

I've watched the RabbitMQ Google tech talk opened by Alexis and would
love to see some recipes for setting up RabbitMQ to satisfy the
various patterns outlined.  Things like Service Bus, Client Server,
etc.  Having that as a guide would be great!

* Configuration *

Is it possible to specify exchange/queue/binding creation in
configuration?  If not, I'm going to need to write a client
application that connects and establishes them for me.  That seems
clunky.

***********

I hope that me pointing out a mole or two on your baby doesn't sound
like I'm implying that the whole thing is ugly!  Users rarely realize
that the BEST time to make comments about a complex system such as
this is when they are most confused.  I hope that discussing this can
help remove this barrier for other users. Thanks for all the great
work!

-- 
Cory 'G' Watson
http://www.onemogin.com



From ian.ragsdale at gmail.com  Thu Mar 11 20:28:48 2010
From: ian.ragsdale at gmail.com (Ian Ragsdale)
Date: Thu, 11 Mar 2010 14:28:48 -0600
Subject: [rabbitmq-discuss] RabbitMQ crash caused by channel leak?
Message-ID: <E132581E-43AB-4D8E-8A75-997765A31598@gmail.com>

Hello all.  I've had a couple of RabbitMQ crashes recently, with a backtrace that looks like this:

=CRASH REPORT==== 11-Mar-2010::08:13:21 ===
  crasher:
    pid: <0.16638.1>
    registered_name: []
    exception error: a system limit has been reached
      in function  spawn/3
         called as spawn(rabbit_writer,mainloop,
                         [{wstate,#Port<0.451>,6539,131072}])
      in call from rabbit_writer:start/3
      in call from rabbit_reader:send_to_new_channel/3
      in call from rabbit_reader:handle_frame/4
      in call from rabbit_reader:handle_input/3
      in call from rabbit_reader:mainloop/3
      in call from rabbit_reader:start_connection/3
    initial call: rabbit_reader:init(<0.396.0>)
    ancestors: [rabbit_tcp_client_sup,rabbit_sup,<0.109.0>]
    messages: [{'EXIT',<0.31524.15>,
                      {system_limit,
                          [{erlang,spawn_opt,
                               [proc_lib,init_p,
                                [<0.31524.15>,[],gen,init_it,
                                 [gen_server2,<0.31524.15>,<0.31524.15>,
                                  rabbit_channel,
                                  [6528,<0.16638.1>,<0.31519.15>,
                                   <<"stormcloud">>,<<"/">>],
                                  []]],
                                [link]]},
                           {proc_lib,start_link,5},
                           {rabbit_channel,start_link,5},
                           {rabbit_framing_channel,'-start_link/2-fun-0-',2}]}},

<large amount of backtrace, messages, and a huge dictionary full of channels removed>

    trap_exit: true
    status: running
    heap_size: 514229
    stack_size: 23
    reductions: 68039905
  neighbours:


Based on the number of channels in the logged dictionary, I'm guessing I hit a limit on the number of channels, which I'm guessing was the cause of the crash.  Does this sound like a likely cause?  I've identified and removed the code that was creating all the channels, but I'm concerned that it appears to be so easy for a single rogue client to take down the entire server.  Is there a way for me to prevent this?

Thanks,
Ian





From natester at gmail.com  Thu Mar 11 21:03:20 2010
From: natester at gmail.com (Nathaniel Haggard)
Date: Thu, 11 Mar 2010 14:03:20 -0700
Subject: [rabbitmq-discuss] RPC authenticity relies on routing key?
Message-ID: <4adac7a31003111303o8ef79acqb8c8a1dbef001417@mail.gmail.com>

Machine D sends a message to exchange E1 with routing key send_to_A to
execute a remote procedure call on A.  A replies back using another
exchange E2 with routing key results_of_A, but A could easily use the
key results_of_B.  Does rabbitmq have a way of making A only use the
key results_of_A?

Only D can write to E1.  A, B, C can write to E2.  I suppose A, B, C
are all different users in the system although that seems overkill.

Is there a better way to make sure the results from an RPC to A are
really from A and not from B?

I think it would not scale well (in the thousands) if A, B, C each had
permissions to write to one queue exchanges E2, E3, and E4, but maybe
that's wrong too.

-Nate



From chen650 at yahoo.com  Fri Mar 12 02:16:39 2010
From: chen650 at yahoo.com (alex chen)
Date: Thu, 11 Mar 2010 18:16:39 -0800 (PST)
Subject: [rabbitmq-discuss] publish/commit rate drops to 0 when consuming
	large queues from new persister
Message-ID: <500418.22402.qm@web31806.mail.mud.yahoo.com>

Hi,

We use the new persister and tx_commit in publish.   When there are large number of messages backed 
up in the queues, starting the consumers would block the 
publish+commit.  it could take more than 20 seconds for the client to receive tx_commit_ok.

Is it possible to add an option on server side that can set the consume/publish ratio?  e.g.  ratio=2 meaning after consuming 2*N messages, server will process up to N publish messages (if there is any).

thanks.

-alex



      



From aquino.gustavo at gmail.com  Fri Mar 12 03:00:52 2010
From: aquino.gustavo at gmail.com (Gustavo Aquino)
Date: Fri, 12 Mar 2010 00:00:52 -0300
Subject: [rabbitmq-discuss] Consumer stop to receive messages but continue
	listening queue problem.
Message-ID: <5ef296b31003111900r577611f7vf1a2bdf1b4752db1@mail.gmail.com>

Hi,

I have a big doubt about one specific test.

I'm running my RabbitMQ in one server, and have 2 producers in other server
posting ~2000 messages /s , and have 4 consumers in one server and other 4
in other.

When I start the test all running fine.. but my 8 consumers not consuming
the queue in same speed that we are posting, ok it is the proposal of test,
all 8 consumers are working harder consuming ~1200 /s when my doubt happen,
all the time that I run this test it happen, when my queue have a size about
200.000 messages all consumers at one of this two consume's machine stop to
receive messages, all of them, and if I restart all consumers in this
machine anyone get any messages from Rabbit,all are connected but don't get
any message, now if instead of restart this consumers I stop the other four
consumers in the other machine he come back to receive messages...

Anybody here have any feelings about what is happen ?

My Rabbit server have 20Gb of memory and 4 processors P6 and when this drop
happen Rabbit are consuming 80% of Proc and 20% of Memory.

This Queue are transient.

My message size is about 180~200Kbytes

Any help will be appreciated.

Regards.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20100312/eed6a388/attachment.htm 

From aquino.gustavo at gmail.com  Fri Mar 12 03:10:38 2010
From: aquino.gustavo at gmail.com (Gustavo Aquino)
Date: Fri, 12 Mar 2010 00:10:38 -0300
Subject: [rabbitmq-discuss] Stop producer and queue continue growing...
Message-ID: <5ef296b31003111910n4bdb279buf67751a31c5526e9@mail.gmail.com>

Hi,

I have one producer posting ~2000 messages per second in one exchange. And
have one transient queue binding all messages of this exchange, my consumer
are processing 1200 messages per second, so all second this queue grow ~800
messages, so when this queue size get 10.000 messages I stop Producer and
continuing to monitoring queue, and to my scare my queue continuing to grow
for 10~15 minutes going to 170~200k messages when start to decrease.

One snapshot of environment is, Rabbit consuming 80~90% of CPU and 20~30% of
memory.

So my question is why queue continue to grow ?

Regards.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20100312/bee88b01/attachment.htm 

From matthew at lshift.net  Fri Mar 12 10:49:41 2010
From: matthew at lshift.net (Matthew Sackman)
Date: Fri, 12 Mar 2010 10:49:41 +0000
Subject: [rabbitmq-discuss] Stop producer and queue continue growing...
In-Reply-To: <5ef296b31003111910n4bdb279buf67751a31c5526e9@mail.gmail.com>
References: <5ef296b31003111910n4bdb279buf67751a31c5526e9@mail.gmail.com>
Message-ID: <20100312104941.GA21727@mrnibble.lshift.net>

On Fri, Mar 12, 2010 at 12:10:38AM -0300, Gustavo Aquino wrote:
> So my question is why queue continue to grow ?

Messages can be buffered in many places. In your case, you're seeing
messages buffered in the channel, before they reach the queue. This is
why the numbers reported by things like rabbitmqctl list_queues should
not really be trusted - there can be many messages which you believe are
published but have not yet reached the queue - eg client TCP stack,
kernel buffers, network buffers, and the channel in the server. Try
sending a sync operation down, eg a queue.declare to (re)declare the
queue. That has to go through the channel behind all the backed up
publishes. When you get the queue.declare_ok back, it will contain a
different number - the number of messages in the queue at the point at
which the queue.declare was processed.

You also didn't mention which branch/version of rabbit you're using, nor
if you're publishing persistent messages (persistent messages to a
transient queue still *have* to be written to disk because they should
survive a crash, though not a clean shutdown).

Matthew



From matthew at lshift.net  Fri Mar 12 11:21:04 2010
From: matthew at lshift.net (Matthew Sackman)
Date: Fri, 12 Mar 2010 11:21:04 +0000
Subject: [rabbitmq-discuss] global addressing
In-Reply-To: <F6E2F9AA9C4D4687B091B81F3045CC8B@NIKE>
References: <F6E2F9AA9C4D4687B091B81F3045CC8B@NIKE>
Message-ID: <20100312112104.GC21727@mrnibble.lshift.net>

Hi,

On Thu, Mar 11, 2010 at 08:53:32AM +0100, Henrik Genssen wrote:
> can someone tell me, if global addressing like discribed here:
> http://209.85.129.132/search?q=cache:SNcerOVXxYkJ:www.amqp.org/confluence/display/AMQP/AMQP1.0%2BSIG+amqp+dns&cd=1&hl=de&ct=clnk&gl=de&client=firefox-a
> 
> is already reallity, or do I have to use something like Shovel or AMQPRelay or even build my own with celery polling a queue aon pushing it onto an other server...

Global addressing is not implemented, certainly not in Rabbit. You'll
need to use the shovel or such ilk for inter-broker relaying.

Matthew



From matthew at lshift.net  Fri Mar 12 11:37:09 2010
From: matthew at lshift.net (Matthew Sackman)
Date: Fri, 12 Mar 2010 11:37:09 +0000
Subject: [rabbitmq-discuss] RabbitMQ crash caused by channel leak?
In-Reply-To: <E132581E-43AB-4D8E-8A75-997765A31598@gmail.com>
References: <E132581E-43AB-4D8E-8A75-997765A31598@gmail.com>
Message-ID: <20100312113709.GD21727@mrnibble.lshift.net>

On Thu, Mar 11, 2010 at 02:28:48PM -0600, Ian Ragsdale wrote:
> =CRASH REPORT==== 11-Mar-2010::08:13:21 ===
>   crasher:
>     pid: <0.16638.1>
>     registered_name: []
>     exception error: a system limit has been reached
>       in function  spawn/3

Yes, I think you've probably run out of processes. The default process
limit in erlang is 32768, but this can be raised up to 134217727. To set
this for Rabbit, in your rabbitmq.conf file (which under Linux will be
at /etc/rabbitmq/rabbitmq.conf) add:

SERVER_START_ARGS="+P 1000000"

Which will get you 1000,000 processes. Note that the additional
accounting done by the erlang VM will mean that you'll see more memory
used.

> Based on the number of channels in the logged dictionary, I'm guessing I hit a limit on the number of channels, which I'm guessing was the cause of the crash.  Does this sound like a likely cause?  I've identified and removed the code that was creating all the channels, but I'm concerned that it appears to be so easy for a single rogue client to take down the entire server.  Is there a way for me to prevent this?

Mmmm, that's a good point, and no, there's no such knob. In
rabbit_reader.erl, at around line 589, you should find the following
code:

    ok = send_on_channel0(
           Sock,
           #'connection.tune'{channel_max = 0,
                              %% set to zero once QPid fix their negotiation
                              frame_max = 131072,
                              heartbeat = 0}),

That channel_max = 0 implies no limit on the number of channels (well,
it's a 16-bit uint, so 65536). If you set that to a lower number then
well-behaved clients may take note of that. However it's still not
enforced at the server. For that, you'll need to either add to the last
head of handle_frame in rabbit_reader (at the bottom, before it calls
send_to_new_channel). The difficulty here is that channels don't need to
be allocated in the correct order and can be reused. Gaps can appear etc
etc, so it's a bit harder than just looking at the channels number, you
actually have to count. I'll raise a bug for this and we'll fix it in
due course.

Matthew



From matthew at lshift.net  Fri Mar 12 11:40:59 2010
From: matthew at lshift.net (Matthew Sackman)
Date: Fri, 12 Mar 2010 11:40:59 +0000
Subject: [rabbitmq-discuss] RabbitMQ crash caused by channel leak?
In-Reply-To: <20100312113709.GD21727@mrnibble.lshift.net>
References: <E132581E-43AB-4D8E-8A75-997765A31598@gmail.com>
	<20100312113709.GD21727@mrnibble.lshift.net>
Message-ID: <20100312114058.GE21727@mrnibble.lshift.net>

On Fri, Mar 12, 2010 at 11:37:09AM +0000, Matthew Sackman wrote:
> > Based on the number of channels in the logged dictionary, I'm guessing I hit a limit on the number of channels, which I'm guessing was the cause of the crash.  Does this sound like a likely cause?  I've identified and removed the code that was creating all the channels, but I'm concerned that it appears to be so easy for a single rogue client to take down the entire server.  Is there a way for me to prevent this?
> 
> Mmmm, that's a good point, and no, there's no such knob.

Having said all that however, be aware that you'll also crash if you run
out of file descriptors, and you can also explode rabbit by creating
lots of queues - there are no limits on either of these. So there are,
sadly, several vectors for DoS attacks just at the moment.

/me raises further bugs.

Matthew



From rtrlists at googlemail.com  Fri Mar 12 11:51:24 2010
From: rtrlists at googlemail.com (Robert Raschke)
Date: Fri, 12 Mar 2010 11:51:24 +0000
Subject: [rabbitmq-discuss] RPC authenticity relies on routing key?
In-Reply-To: <4adac7a31003111303o8ef79acqb8c8a1dbef001417@mail.gmail.com>
References: <4adac7a31003111303o8ef79acqb8c8a1dbef001417@mail.gmail.com>
Message-ID: <6a3ae47e1003120351w286c6ef6k90823611a0d6ca4@mail.gmail.com>

On Thu, Mar 11, 2010 at 9:03 PM, Nathaniel Haggard <natester at gmail.com>wrote:

> Machine D sends a message to exchange E1 with routing key send_to_A to
> execute a remote procedure call on A.  A replies back using another
> exchange E2 with routing key results_of_A, but A could easily use the
> key results_of_B.  Does rabbitmq have a way of making A only use the
> key results_of_A?
>
> Only D can write to E1.  A, B, C can write to E2.  I suppose A, B, C
> are all different users in the system although that seems overkill.
>
> Is there a better way to make sure the results from an RPC to A are
> really from A and not from B?
>
> I think it would not scale well (in the thousands) if A, B, C each had
> permissions to write to one queue exchanges E2, E3, and E4, but maybe
> that's wrong too.
>
> -Nate
>
>
I use the correlation_id header field to ensure I get the correct result for
a message back. But maybe I'm misunderstanding your question.

I think the Erlang Client has a test example that implements RPC this way.

Robby
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20100312/dcddcf97/attachment.htm 

From matthew at lshift.net  Fri Mar 12 12:10:36 2010
From: matthew at lshift.net (Matthew Sackman)
Date: Fri, 12 Mar 2010 12:10:36 +0000
Subject: [rabbitmq-discuss] RPC authenticity relies on routing key?
In-Reply-To: <4adac7a31003111303o8ef79acqb8c8a1dbef001417@mail.gmail.com>
References: <4adac7a31003111303o8ef79acqb8c8a1dbef001417@mail.gmail.com>
Message-ID: <20100312121036.GF21727@mrnibble.lshift.net>

On Thu, Mar 11, 2010 at 02:03:20PM -0700, Nathaniel Haggard wrote:
> Machine D sends a message to exchange E1 with routing key send_to_A to
> execute a remote procedure call on A.  A replies back using another
> exchange E2 with routing key results_of_A, but A could easily use the
> key results_of_B.  Does rabbitmq have a way of making A only use the
> key results_of_A?

No. Rabbit is just a router, and there are several issues with trying to
do RPC. You really have to come up with your own conventions here, and
Rabbit (nor any other AMQP broker) will force your hand.

One of the issues is that in AMQP world, you have no idea how many
people have received your messages - several queues could exist bound to
E1 with the binding key send_to_A and thus they'll all receive the rpc.
Thus you're inventing convention even at that point if you stipulate
that only one queue can have the binding key send_to_A.

> Only D can write to E1.  A, B, C can write to E2.  I suppose A, B, C
> are all different users in the system although that seems overkill.

There's nothing wrong with A, B and C all being different users, but
then again, they could all be the same user. Depends on other
requirements really. If one of A, B and C goes nuts, you could just
individually revoke permissions for them to stop them publishing.

> Is there a better way to make sure the results from an RPC to A are
> really from A and not from B?

Yes. For each of A, B and C, D creates a private queue which it is the
exclusive consumer on. These queues are automatically bound to the
default direct exchange. Then include the queue name in the reply_to
field in the publish class properties. When A, B or C receives the
message, they route their reply to the default exchange, using the value
in the reply_to field as the routing key. As the queue names are guids
and (as good as) unforgeable, you can be sure that they can't invent the
other queue names.

> I think it would not scale well (in the thousands) if A, B, C each had
> permissions to write to one queue exchanges E2, E3, and E4, but maybe
> that's wrong too.

I think in this case you're better off relying on unforgeability of
anonymous queue names, rather than the slightly restrictive permissions
model.

The other solution would be to implement a custom exchange, which you
can now do very easily with Rabbit's pluggable exchange types. In there
you could do many additional checks and implement whatever permission
model you'd like.

Matthew



From aquino.gustavo at gmail.com  Fri Mar 12 12:17:22 2010
From: aquino.gustavo at gmail.com (Gustavo Aquino)
Date: Fri, 12 Mar 2010 09:17:22 -0300
Subject: [rabbitmq-discuss] Stop producer and queue continue growing...
In-Reply-To: <20100312104941.GA21727@mrnibble.lshift.net>
References: <5ef296b31003111910n4bdb279buf67751a31c5526e9@mail.gmail.com>
	<20100312104941.GA21727@mrnibble.lshift.net>
Message-ID: <5ef296b31003120417g4092b771p4b836f9b61f9a374@mail.gmail.com>

Hi Matthew,

Humm, interesting and disturbing, I will try to do your clue sending a
queue.declare to get the queue size, but know I'm really concerned.

If I have one persistent queue binding this Exchange where messages was
posted and all of this messages are in buffer going to queue and server
crash so I will lose all this buffered messages right ?

I'm using RabbitMQ 1.7.2  and I'm publishing transient messages.

Regards.


On Fri, Mar 12, 2010 at 7:49 AM, Matthew Sackman <matthew at lshift.net> wrote:

> On Fri, Mar 12, 2010 at 12:10:38AM -0300, Gustavo Aquino wrote:
> > So my question is why queue continue to grow ?
>
> Messages can be buffered in many places. In your case, you're seeing
> messages buffered in the channel, before they reach the queue. This is
> why the numbers reported by things like rabbitmqctl list_queues should
> not really be trusted - there can be many messages which you believe are
> published but have not yet reached the queue - eg client TCP stack,
> kernel buffers, network buffers, and the channel in the server. Try
> sending a sync operation down, eg a queue.declare to (re)declare the
> queue. That has to go through the channel behind all the backed up
> publishes. When you get the queue.declare_ok back, it will contain a
> different number - the number of messages in the queue at the point at
> which the queue.declare was processed.
>
> You also didn't mention which branch/version of rabbit you're using, nor
> if you're publishing persistent messages (persistent messages to a
> transient queue still *have* to be written to disk because they should
> survive a crash, though not a clean shutdown).
>
> Matthew
>
> _______________________________________________
> rabbitmq-discuss mailing list
> rabbitmq-discuss at lists.rabbitmq.com
> http://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20100312/2aed856f/attachment.htm 

From aquino.gustavo at gmail.com  Fri Mar 12 12:19:43 2010
From: aquino.gustavo at gmail.com (Gustavo Aquino)
Date: Fri, 12 Mar 2010 09:19:43 -0300
Subject: [rabbitmq-discuss] Consumer stop to receive messages but
	continue listening queue problem.
In-Reply-To: <5ef296b31003111900r577611f7vf1a2bdf1b4752db1@mail.gmail.com>
References: <5ef296b31003111900r577611f7vf1a2bdf1b4752db1@mail.gmail.com>
Message-ID: <5ef296b31003120419m6feaf810xb234041c0aa4bac2@mail.gmail.com>

Anybody ?

On Fri, Mar 12, 2010 at 12:00 AM, Gustavo Aquino
<aquino.gustavo at gmail.com>wrote:

> Hi,
>
> I have a big doubt about one specific test.
>
> I'm running my RabbitMQ in one server, and have 2 producers in other server
> posting ~2000 messages /s , and have 4 consumers in one server and other 4
> in other.
>
> When I start the test all running fine.. but my 8 consumers not consuming
> the queue in same speed that we are posting, ok it is the proposal of test,
> all 8 consumers are working harder consuming ~1200 /s when my doubt happen,
> all the time that I run this test it happen, when my queue have a size about
> 200.000 messages all consumers at one of this two consume's machine stop to
> receive messages, all of them, and if I restart all consumers in this
> machine anyone get any messages from Rabbit,all are connected but don't get
> any message, now if instead of restart this consumers I stop the other four
> consumers in the other machine he come back to receive messages...
>
> Anybody here have any feelings about what is happen ?
>
> My Rabbit server have 20Gb of memory and 4 processors P6 and when this drop
> happen Rabbit are consuming 80% of Proc and 20% of Memory.
>
> This Queue are transient.
>
> My message size is about 180~200Kbytes
>
> Any help will be appreciated.
>
> Regards.
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20100312/1dcbee21/attachment.htm 

From matthew at lshift.net  Fri Mar 12 12:24:32 2010
From: matthew at lshift.net (Matthew Sackman)
Date: Fri, 12 Mar 2010 12:24:32 +0000
Subject: [rabbitmq-discuss] Consumer stop to receive messages but
 continue listening queue problem.
In-Reply-To: <5ef296b31003111900r577611f7vf1a2bdf1b4752db1@mail.gmail.com>
References: <5ef296b31003111900r577611f7vf1a2bdf1b4752db1@mail.gmail.com>
Message-ID: <20100312122432.GA25615@mrnibble.lshift.net>

Hi Gustavo,

On Fri, Mar 12, 2010 at 12:00:52AM -0300, Gustavo Aquino wrote:
> I'm running my RabbitMQ in one server, and have 2 producers in other server
> posting ~2000 messages /s , and have 4 consumers in one server and other 4
> in other.

Ok, so we have 4kHz in, in total? Are the 8 consumers all off the same
queue, or do they all have their own queues? If the former, then the sum
out should also be 4kHz, whereas the latter would suggest the sum out
should be 8 * 4kHz = 32kHz. That's faster than I've seen Rabbit running
before, but then again you do have very meaty hardware.

> When I start the test all running fine.. but my 8 consumers not consuming
> the queue in same speed that we are posting, ok it is the proposal of test,
> all 8 consumers are working harder consuming ~1200 /s when my doubt happen,
> all the time that I run this test it happen, when my queue have a size about
> 200.000 messages all consumers at one of this two consume's machine stop to
> receive messages, all of them, and if I restart all consumers in this
> machine anyone get any messages from Rabbit,all are connected but don't get
> any message, now if instead of restart this consumers I stop the other four
> consumers in the other machine he come back to receive messages...
> 
> Anybody here have any feelings about what is happen ?

That's very interesting. You don't say which client you're using though.
Also, when this happens, what does Rabbit record in the logs?

> My Rabbit server have 20Gb of memory and 4 processors P6 and when this drop
> happen Rabbit are consuming 80% of Proc and 20% of Memory.

I have never used Power6 machines, and I have no idea how well Erlang
(or Rabbit) runs on it, I'm afraid.

> My message size is about 180~200Kbytes

Those are pretty big. If my maths above is right, that means that you're
trying to push (4+32)*1000*200*1024 = 7372,800,000 bytes / sec, which is
6.8GB/s or 55Gb/s. That's enourmous. I suspect maybe my maths is wrong
and you actually have all 8 consumers bound to the same 1 queue?

Matthew



From matthew at lshift.net  Fri Mar 12 12:30:18 2010
From: matthew at lshift.net (Matthew Sackman)
Date: Fri, 12 Mar 2010 12:30:18 +0000
Subject: [rabbitmq-discuss] Stop producer and queue continue growing...
In-Reply-To: <5ef296b31003120417g4092b771p4b836f9b61f9a374@mail.gmail.com>
References: <5ef296b31003111910n4bdb279buf67751a31c5526e9@mail.gmail.com>
	<20100312104941.GA21727@mrnibble.lshift.net>
	<5ef296b31003120417g4092b771p4b836f9b61f9a374@mail.gmail.com>
Message-ID: <20100312123017.GB25615@mrnibble.lshift.net>

On Fri, Mar 12, 2010 at 09:17:22AM -0300, Gustavo Aquino wrote:
> If I have one persistent queue binding this Exchange where messages was
> posted and all of this messages are in buffer going to queue and server
> crash so I will lose all this buffered messages right ?

Correct. Transactions exist for a reason. Publishing is an async
activity and you as the producer have (almost) no idea whether it's even
hit a queue, let alone whether it's gone to disk. Furthermore, even if
it's gone to disk, you have no idea if it's been flushed from the disk
caches and so can really survive a powerfailure to the server.

If you use transactions, however, then by the time you get back the
commit_ok messages, you are *guaranteed* that the persistent messages
have been written to disk and flushed. Correspondingly, performance is
crippled, though the transaction handling in the new persister branch
(bug21673) is much better (anywhere up to 2 orders of magnitude,
depending on disks and filesystem tuning) than in the released versions
of Rabbit.

Matthew



From aquino.gustavo at gmail.com  Fri Mar 12 14:21:44 2010
From: aquino.gustavo at gmail.com (Gustavo Aquino)
Date: Fri, 12 Mar 2010 11:21:44 -0300
Subject: [rabbitmq-discuss] Consumer stop to receive messages but
	continue listening queue problem.
In-Reply-To: <20100312122432.GA25615@mrnibble.lshift.net>
References: <5ef296b31003111900r577611f7vf1a2bdf1b4752db1@mail.gmail.com>
	<20100312122432.GA25615@mrnibble.lshift.net>
Message-ID: <5ef296b31003120621m13c87cbdy677adc7425be4eb1@mail.gmail.com>

Hi Matthew,


On Fri, Mar 12, 2010 at 9:24 AM, Matthew Sackman <matthew at lshift.net> wrote:

> Hi Gustavo,
>
> On Fri, Mar 12, 2010 at 12:00:52AM -0300, Gustavo Aquino wrote:
> > I'm running my RabbitMQ in one server, and have 2 producers in other
> server
> > posting ~2000 messages /s , and have 4 consumers in one server and other
> 4
> > in other.
>
> Ok, so we have 4kHz in, in total? Are the 8 consumers all off the same
> queue, or do they all have their own queues? If the former, then the sum
> out should also be 4kHz, whereas the latter would suggest the sum out
> should be 8 * 4kHz = 32kHz. That's faster than I've seen Rabbit running
> before, but then again you do have very meaty hardware.
>

Sorry but I don't understand why we have 4kHz in total.

All 8 consumers are listening the same queue. The hardware of Rabbit

>
> > When I start the test all running fine.. but my 8 consumers not consuming
> > the queue in same speed that we are posting, ok it is the proposal of
> test,
> > all 8 consumers are working harder consuming ~1200 /s when my doubt
> happen,
> > all the time that I run this test it happen, when my queue have a size
> about
> > 200.000 messages all consumers at one of this two consume's machine stop
> to
> > receive messages, all of them, and if I restart all consumers in this
> > machine anyone get any messages from Rabbit,all are connected but don't
> get
> > any message, now if instead of restart this consumers I stop the other
> four
> > consumers in the other machine he come back to receive messages...
> >
> > Anybody here have any feelings about what is happen ?
>
> That's very interesting. You don't say which client you're using though.
> Also, when this happens, what does Rabbit record in the logs?
>

I'm using Rabbit client in Java to consume and .Net Rabbit client to produce
the messages.



>
> > My Rabbit server have 20Gb of memory and 4 processors P6 and when this
> drop
> > happen Rabbit are consuming 80% of Proc and 20% of Memory.
>
> I have never used Power6 machines, and I have no idea how well Erlang
> (or Rabbit) runs on it, I'm afraid.
>

This is the point, I think that we will be the first in this environment, I
tried to found some experiences in Internet but don't found nothing. I'm
using Erlang R12 yes I know it's very old, but RH have only this version
compiled for ppc, I'm trying to install R13B but having some compiling
problems with ncourses, but It's other e-mail :).

We will do more some tests enabling more 2 processors, and will run
Erlang/Rabbit over 6 processors p6 4.2Ghz for long stress times.We have
severals concerns to be the first to use this environments.


> > My message size is about 180~200Kbytes
>
> Those are pretty big. If my maths above is right, that means that you're
> trying to push (4+32)*1000*200*1024 = 7372,800,000 bytes / sec, which is
> 6.8GB/s or 55Gb/s. That's enourmous. I suspect maybe my maths is wrong
> and you actually have all 8 consumers bound to the same 1 queue?
>

Sorry, I put wrong values, my fault, My message size have 180 Bytes ~
1Kbytes. And all in the same queue. Another information Rabbit always crash
with queue size get Rabbit's memory limit I try to found but don't see a way
to configure queue to drop messages after a specific size or memory limit.
It's other problem.


>
> Matthew
>
> _______________________________________________
> rabbitmq-discuss mailing list
> rabbitmq-discuss at lists.rabbitmq.com
> http://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20100312/99690c60/attachment.htm 

From aquino.gustavo at gmail.com  Fri Mar 12 14:36:31 2010
From: aquino.gustavo at gmail.com (Gustavo Aquino)
Date: Fri, 12 Mar 2010 11:36:31 -0300
Subject: [rabbitmq-discuss] Stop producer and queue continue growing...
In-Reply-To: <20100312123017.GB25615@mrnibble.lshift.net>
References: <5ef296b31003111910n4bdb279buf67751a31c5526e9@mail.gmail.com>
	<20100312104941.GA21727@mrnibble.lshift.net>
	<5ef296b31003120417g4092b771p4b836f9b61f9a374@mail.gmail.com>
	<20100312123017.GB25615@mrnibble.lshift.net>
Message-ID: <5ef296b31003120636j5d5e9ce6kb43b580b998c03bc@mail.gmail.com>

This is my biggest concern.

Look about this scenario I have one Exchange and one persistent queue.I'm
posting transient messages to this Exchange (to get better performance) if
my Exchanges messages are in buffer and server crash I will be loose all
messages in buffer and it is a big problem.... I cannot lose any messages,
this messages are business it represent money, so if I loose one we loose
money and It cannot happen, in other way I need to be the fastest we
need overrides in nanoseconds or 1 millisecond is the limit, so post
messages in persistent queue is out of the scope, or  have one way to be
fast with persistent ?

My questions is, looking for this requirements (don't loose any message and
be fastest) RabbitMQ attend this ? Have a way to attend this requirements ?

Regards.


On Fri, Mar 12, 2010 at 9:30 AM, Matthew Sackman <matthew at lshift.net> wrote:

> On Fri, Mar 12, 2010 at 09:17:22AM -0300, Gustavo Aquino wrote:
> > If I have one persistent queue binding this Exchange where messages was
> > posted and all of this messages are in buffer going to queue and server
> > crash so I will lose all this buffered messages right ?
>
> Correct. Transactions exist for a reason. Publishing is an async
> activity and you as the producer have (almost) no idea whether it's even
> hit a queue, let alone whether it's gone to disk. Furthermore, even if
> it's gone to disk, you have no idea if it's been flushed from the disk
> caches and so can really survive a powerfailure to the server.
>
> If you use transactions, however, then by the time you get back the
> commit_ok messages, you are *guaranteed* that the persistent messages
> have been written to disk and flushed. Correspondingly, performance is
> crippled, though the transaction handling in the new persister branch
> (bug21673) is much better (anywhere up to 2 orders of magnitude,
> depending on disks and filesystem tuning) than in the released versions
> of Rabbit.
>
> Matthew
>
> _______________________________________________
> rabbitmq-discuss mailing list
> rabbitmq-discuss at lists.rabbitmq.com
> http://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20100312/b489ea85/attachment.htm 

From matthew at lshift.net  Fri Mar 12 14:44:12 2010
From: matthew at lshift.net (Matthew Sackman)
Date: Fri, 12 Mar 2010 14:44:12 +0000
Subject: [rabbitmq-discuss] Consumer stop to receive messages but
 continue listening queue problem.
In-Reply-To: <5ef296b31003120621m13c87cbdy677adc7425be4eb1@mail.gmail.com>
References: <5ef296b31003111900r577611f7vf1a2bdf1b4752db1@mail.gmail.com>
	<20100312122432.GA25615@mrnibble.lshift.net>
	<5ef296b31003120621m13c87cbdy677adc7425be4eb1@mail.gmail.com>
Message-ID: <20100312144412.GC25615@mrnibble.lshift.net>

On Fri, Mar 12, 2010 at 11:21:44AM -0300, Gustavo Aquino wrote:
> On Fri, Mar 12, 2010 at 9:24 AM, Matthew Sackman <matthew at lshift.net> wrote:
> > On Fri, Mar 12, 2010 at 12:00:52AM -0300, Gustavo Aquino wrote:
> > > I'm running my RabbitMQ in one server, and have 2 producers in other
> > server
> > > posting ~2000 messages /s , and have 4 consumers in one server and other
> > 4
> > > in other.
> 
> Sorry but I don't understand why we have 4kHz in total.

2kHz * 2. Maybe you were giving cumulative rates and you meant 2kHz
inbound in total?

> All 8 consumers are listening the same queue.

Ahhh! So each consumer will receive 1/8th of the messages. Thus if we
have 2kHz inbound, we will now have 2kHz outbound.

> > Also, when this happens, what does Rabbit record in the logs?

?

> This is the point, I think that we will be the first in this environment, I
> tried to found some experiences in Internet but don't found nothing. I'm
> using Erlang R12 yes I know it's very old, but RH have only this version
> compiled for ppc, I'm trying to install R13B but having some compiling
> problems with ncourses, but It's other e-mail :).

You should be able to compile erlang without requiring ncurses, but
you'd at least have to provided a number of extra flags to configure.

> Sorry, I put wrong values, my fault, My message size have 180 Bytes ~
> 1Kbytes.

Right, so we've gone from world-beating network performance to about
2MB/s. :D

> And all in the same queue. Another information Rabbit always crash
> with queue size get Rabbit's memory limit I try to found but don't see a way
> to configure queue to drop messages after a specific size or memory limit.

What is the crash message, what are the entries in Rabbit's logs?

Matthew



From matthew at lshift.net  Fri Mar 12 14:58:26 2010
From: matthew at lshift.net (Matthew Sackman)
Date: Fri, 12 Mar 2010 14:58:26 +0000
Subject: [rabbitmq-discuss] Stop producer and queue continue growing...
In-Reply-To: <5ef296b31003120636j5d5e9ce6kb43b580b998c03bc@mail.gmail.com>
References: <5ef296b31003111910n4bdb279buf67751a31c5526e9@mail.gmail.com>
	<20100312104941.GA21727@mrnibble.lshift.net>
	<5ef296b31003120417g4092b771p4b836f9b61f9a374@mail.gmail.com>
	<20100312123017.GB25615@mrnibble.lshift.net>
	<5ef296b31003120636j5d5e9ce6kb43b580b998c03bc@mail.gmail.com>
Message-ID: <20100312145826.GD25615@mrnibble.lshift.net>

On Fri, Mar 12, 2010 at 11:36:31AM -0300, Gustavo Aquino wrote:
> This is my biggest concern.

It's the nature of AMQP.

> Look about this scenario I have one Exchange and one persistent queue.I'm
> posting transient messages to this Exchange (to get better performance) if
> my Exchanges messages are in buffer and server crash I will be loose all
> messages in buffer and it is a big problem.... I cannot lose any messages,

Not true. There is no messaging product available (nor will there ever
be) that can guarantee it can't lose messages. Do you have infinite disk
space? Is there no event that can cause power loss? Even in the event of
the sun exploding you want to ensure no message loss?

The fact is, message loss is unavoidable. You can take many steps to
avoid this, by using transactions and buffering messages in the client
so that if the connection to the broker dies you can reconnect and
republish, but at that point you risk duplicates, so you need
application logic on the consumer side to watch for duplicates and
remove them as necessary.

> this messages are business it represent money, so if I loose one we loose
> money and It cannot happen, in other way I need to be the fastest we
> need overrides in nanoseconds or 1 millisecond is the limit, so post
> messages in persistent queue is out of the scope, or  have one way to be
> fast with persistent ?

Right, so you can't afford the delay of writing to disk, and yet you
want to ensure messages can't be lost in the event of a crash, or
comet strike. You may wish then to explore multiple brokers, publish, in
transactions to duplicate resources (queues) on every broker, and then
simultaneously consume from all of them, deduplicating as you go. Thus
you don't need to write to disk, and by shear strength of numbers, you
should be able to survive crashes. However, really these various brokers
should be in different data centres, probably on different continents,
so the 1ms max delay may be challenging...

Matthew



From matthew at lshift.net  Fri Mar 12 15:09:30 2010
From: matthew at lshift.net (Matthew Sackman)
Date: Fri, 12 Mar 2010 15:09:30 +0000
Subject: [rabbitmq-discuss] publish/commit rate drops to 0 when
 consuming large queues from new persister
In-Reply-To: <500418.22402.qm@web31806.mail.mud.yahoo.com>
References: <500418.22402.qm@web31806.mail.mud.yahoo.com>
Message-ID: <20100312150930.GE25615@mrnibble.lshift.net>

Hi Alex,

On Thu, Mar 11, 2010 at 06:16:39PM -0800, alex chen wrote:
> We use the new persister and tx_commit in publish.   When there are large number of messages backed 
> up in the queues, starting the consumers would block the 
> publish+commit.  it could take more than 20 seconds for the client to receive tx_commit_ok.

Yup, I can duplicate this here. I'm afraid there really is no easy
solution to this - certainly no knob as you suggest. Rabbit is built to
get rid of messages as a priority. Thus publishes will be slower on very
long queues. I'll raise a bug for this, but it's very tricky to work out
exactly what the "correct" behaviour should be here - basically the
commits are being starved because there's higher priority traffic coming
back from the consumer.

The simple (if maybe unhelpful) solution is don't let your queues get so
long, or, don't allow you consumers to consume messages so fast - i.e.
set qos to a lowish value (between 1 and 10) and don't use auto-acking.
Certainly my testing shows the commit rate is much better at staying up
with qos set on the consumer.

Matthew



From aquino.gustavo at gmail.com  Fri Mar 12 15:47:37 2010
From: aquino.gustavo at gmail.com (Gustavo Aquino)
Date: Fri, 12 Mar 2010 12:47:37 -0300
Subject: [rabbitmq-discuss] Consumer stop to receive messages but
	continue listening queue problem.
In-Reply-To: <20100312144412.GC25615@mrnibble.lshift.net>
References: <5ef296b31003111900r577611f7vf1a2bdf1b4752db1@mail.gmail.com>
	<20100312122432.GA25615@mrnibble.lshift.net>
	<5ef296b31003120621m13c87cbdy677adc7425be4eb1@mail.gmail.com>
	<20100312144412.GC25615@mrnibble.lshift.net>
Message-ID: <5ef296b31003120747v4c8bfac6v95589fb571e16ba4@mail.gmail.com>

Matthew,

On Fri, Mar 12, 2010 at 11:44 AM, Matthew Sackman <matthew at lshift.net>wrote:

> On Fri, Mar 12, 2010 at 11:21:44AM -0300, Gustavo Aquino wrote:
> > On Fri, Mar 12, 2010 at 9:24 AM, Matthew Sackman <matthew at lshift.net>
> wrote:
> > > On Fri, Mar 12, 2010 at 12:00:52AM -0300, Gustavo Aquino wrote:
> > > > I'm running my RabbitMQ in one server, and have 2 producers in other
> > > server
> > > > posting ~2000 messages /s , and have 4 consumers in one server and
> other
> > > 4
> > > > in other.
> >
> > Sorry but I don't understand why we have 4kHz in total.
>
> 2kHz * 2. Maybe you were giving cumulative rates and you meant 2kHz
> inbound in total?
>
>
2KhZ in total, one producer post about ~200/s and other ~2000/s but
the average is 2000/s.


> > All 8 consumers are listening the same queue.
>
> Ahhh! So each consumer will receive 1/8th of the messages. Thus if we
> have 2kHz inbound, we will now have 2kHz outbound.
>

No, 2kHz for inbound and 4kHz for outbound, I have two queues listening the
same exchange messages but with different proposals, for each queue I have 8
consumer so I have 8 consumers for queue1 and 8 for queue2 and 2 producers
for Exchange1.



>
> > > Also, when this happens, what does Rabbit record in the logs?
>
> ?
>

Nothing, I don't see nothing in logs, just INFO tasks about open and close
connections.


> > This is the point, I think that we will be the first in this environment,
> I
> > tried to found some experiences in Internet but don't found nothing. I'm
> > using Erlang R12 yes I know it's very old, but RH have only this version
> > compiled for ppc, I'm trying to install R13B but having some compiling
> > problems with ncourses, but It's other e-mail :).
>
> You should be able to compile erlang without requiring ncurses, but
> you'd at least have to provided a number of extra flags to configure.
>

I'm trying to found it, or do you know what version of ncourses Erlang13
need ? I have ncourses installed but configure don't recognize it.

>
> > Sorry, I put wrong values, my fault, My message size have 180 Bytes ~
> > 1Kbytes.
>
> Right, so we've gone from world-beating network performance to about
> 2MB/s. :D
>

Yes for inbound,  for outbound ~4MB/s. About network performance I had
1gbit between this environments, and will test fiber channel. But we had
monitoring network and get average 40% of utilization.

>
> > And all in the same queue. Another information Rabbit always crash
> > with queue size get Rabbit's memory limit I try to found but don't see a
> way
> > to configure queue to drop messages after a specific size or memory
> limit.
>
> What is the crash message, what are the entries in Rabbit's logs?
>
> Last time that I do this test I just found this error.Some times Rabbit
stop to response and we need to kill him.

=CRASH REPORT==== 10-Mar-2010::08:12:53 ===
  crasher:
    initial call: application_master:init/4
    pid: <0.103.0>
    registered_name: []
    exception exit: {{timeout_waiting_for_tables,
                         [rabbit_user,rabbit_user_permission,rabbit_vhost,

 rabbit_config,rabbit_listener,rabbit_durable_route,
                          rabbit_route,rabbit_reverse_route,
                          rabbit_durable_exchange,rabbit_exchange,
                          rabbit_durable_queue,rabbit_queue]},
                     {rabbit,start,[normal,[]]}}
      in function  application_master:init/4
    ancestors: [<0.102.0>]
    messages: [{'EXIT',<0.104.0>,normal}]
    links: [<0.102.0>,<0.7.0>]
    dictionary: []
    trap_exit: true
    status: running
    heap_size: 1597
    stack_size: 24
    reductions: 116
  neighbours:



> Matthew
>
> _______________________________________________
> rabbitmq-discuss mailing list
> rabbitmq-discuss at lists.rabbitmq.com
> http://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20100312/c05df6e1/attachment.htm 

From aquino.gustavo at gmail.com  Fri Mar 12 16:03:55 2010
From: aquino.gustavo at gmail.com (Gustavo Aquino)
Date: Fri, 12 Mar 2010 13:03:55 -0300
Subject: [rabbitmq-discuss] Stop producer and queue continue growing...
In-Reply-To: <20100312145826.GD25615@mrnibble.lshift.net>
References: <5ef296b31003111910n4bdb279buf67751a31c5526e9@mail.gmail.com>
	<20100312104941.GA21727@mrnibble.lshift.net>
	<5ef296b31003120417g4092b771p4b836f9b61f9a374@mail.gmail.com>
	<20100312123017.GB25615@mrnibble.lshift.net>
	<5ef296b31003120636j5d5e9ce6kb43b580b998c03bc@mail.gmail.com>
	<20100312145826.GD25615@mrnibble.lshift.net>
Message-ID: <5ef296b31003120803y4ca7a668q41015c98bfd99fae@mail.gmail.com>

Matthew,


On Fri, Mar 12, 2010 at 11:58 AM, Matthew Sackman <matthew at lshift.net>wrote:

> On Fri, Mar 12, 2010 at 11:36:31AM -0300, Gustavo Aquino wrote:
> > This is my biggest concern.
>
> It's the nature of AMQP.
>
> > Look about this scenario I have one Exchange and one persistent queue.I'm
> > posting transient messages to this Exchange (to get better performance)
> if
> > my Exchanges messages are in buffer and server crash I will be loose all
> > messages in buffer and it is a big problem.... I cannot lose any
> messages,
>
> Not true. There is no messaging product available (nor will there ever
> be) that can guarantee it can't lose messages. Do you have infinite disk
> space? Is there no event that can cause power loss? Even in the event of
> the sun exploding you want to ensure no message loss?
>

If sun exploding money will be the minor problem of us. ;-)

We don't have infinite disk space, but the primary proposal is monitoring to
be able to be pro active and do something before problem happen.

Look,for example I'm monitoring queue size, and look that we are coming to
our limit, one way to guarantee the messages inside server is stopping
producers and redirect producers to other server, so in theory I can
guarantee that messages inside server1 will be consumed and server not loose
messages or crash.


Or how to guarantee that one message posted will be consumed ? consume don't
know about the message posted.


>
> The fact is, message loss is unavoidable. You can take many steps to
> avoid this, by using transactions and buffering messages in the client
> so that if the connection to the broker dies you can reconnect and
> republish, but at that point you risk duplicates, so you need
> application logic on the consumer side to watch for duplicates and
> remove them as necessary.
>
> > this messages are business it represent money, so if I loose one we loose
> > money and It cannot happen, in other way I need to be the fastest we
> > need overrides in nanoseconds or 1 millisecond is the limit, so post
> > messages in persistent queue is out of the scope, or  have one way to be
> > fast with persistent ?
>
> Right, so you can't afford the delay of writing to disk, and yet you
> want to ensure messages can't be lost in the event of a crash, or
> comet strike. You may wish then to explore multiple brokers, publish, in
> transactions to duplicate resources (queues) on every broker, and then
> simultaneously consume from all of them, deduplicating as you go. Thus
> you don't need to write to disk, and by shear strength of numbers, you
> should be able to survive crashes. However, really these various brokers
> should be in different data centres, probably on different continents,
> so the 1ms max delay may be challenging...
>

How to duplicate resources inside multiples brokers using Rabbitmq ? I saw
that Rabbit don't have a default way to do a Cluster HA, your based proposal
is HP.


>
> Matthew
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20100312/91a1092b/attachment.htm 

From david.wragg at lshift.net  Sat Mar 13 12:07:41 2010
From: david.wragg at lshift.net (David Wragg)
Date: Sat, 13 Mar 2010 12:07:41 +0000
Subject: [rabbitmq-discuss] Consumer stop to receive messages but
	continue listening queue problem.
In-Reply-To: <5ef296b31003120621m13c87cbdy677adc7425be4eb1@mail.gmail.com>
	(Gustavo Aquino's message of "Fri\, 12 Mar 2010 11\:21\:44 -0300")
References: <5ef296b31003111900r577611f7vf1a2bdf1b4752db1@mail.gmail.com>
	<20100312122432.GA25615@mrnibble.lshift.net>
	<5ef296b31003120621m13c87cbdy677adc7425be4eb1@mail.gmail.com>
Message-ID: <k5bpes8lwy.fsf@mrbraver.lshift.net>

Gustavo Aquino <aquino.gustavo at gmail.com> writes:
> This is the point, I think that we will be the first in this environment, I
> tried to found some experiences in Internet but don't found nothing. I'm
> using Erlang R12 yes I know it's very old, but RH have only this version
> compiled for ppc, I'm trying to install R13B but having some compiling
> problems with ncourses, but It's other e-mail :).

Have you tried rebuilding a recent Fedora erlang SRPM on RHEL?  That
approach often works for getting recent packages running on RHEL, and
should be as simple as:

rpmbuild --rebuild http://mirrors.kernel.org/fedora/releases/12/Everything/source/SRPMS/erlang-R13B-01.2.fc12.src.rpm

This will do things like checking that you have suitable versions of
all the necessary packages installed for the build, including ncurses.

David

-- 
 [][][] David Wragg       | mail: david.wragg at lshift.net
   [][] Senior Developer  | tel: +44 (0)20 7729 7060
 []  [] LShift Ltd        | web: www.lshift.net



From aquino.gustavo at gmail.com  Sat Mar 13 12:45:32 2010
From: aquino.gustavo at gmail.com (Gustavo Aquino)
Date: Sat, 13 Mar 2010 09:45:32 -0300
Subject: [rabbitmq-discuss] Consumer stop to receive messages but
	continue listening queue problem.
In-Reply-To: <k5bpes8lwy.fsf@mrbraver.lshift.net>
References: <5ef296b31003111900r577611f7vf1a2bdf1b4752db1@mail.gmail.com>
	<20100312122432.GA25615@mrnibble.lshift.net>
	<5ef296b31003120621m13c87cbdy677adc7425be4eb1@mail.gmail.com>
	<k5bpes8lwy.fsf@mrbraver.lshift.net>
Message-ID: <5ef296b31003130445o2775b12eyf16547c6e2c52682@mail.gmail.com>

Hi David,

Thanks, but i'm running a ppc machine this package doesn't work, last night
I compiled Erlang in this environment and it's works very fine.

To compile we just need to download the right ncourses-dev-version that
Erlang need.

Regards.

On Sat, Mar 13, 2010 at 9:07 AM, David Wragg <david.wragg at lshift.net> wrote:

> Gustavo Aquino <aquino.gustavo at gmail.com> writes:
> > This is the point, I think that we will be the first in this environment,
> I
> > tried to found some experiences in Internet but don't found nothing. I'm
> > using Erlang R12 yes I know it's very old, but RH have only this version
> > compiled for ppc, I'm trying to install R13B but having some compiling
> > problems with ncourses, but It's other e-mail :).
>
> Have you tried rebuilding a recent Fedora erlang SRPM on RHEL?  That
> approach often works for getting recent packages running on RHEL, and
> should be as simple as:
>
> rpmbuild --rebuild
> http://mirrors.kernel.org/fedora/releases/12/Everything/source/SRPMS/erlang-R13B-01.2.fc12.src.rpm
>
> This will do things like checking that you have suitable versions of
> all the necessary packages installed for the build, including ncurses.
>
> David
>
> --
>  [][][] David Wragg       | mail: david.wragg at lshift.net
>   [][] Senior Developer  | tel: +44 (0)20 7729 7060
>  []  [] LShift Ltd        | web: www.lshift.net
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20100313/510cd03a/attachment.htm 

From gtcampbell at gmail.com  Mon Mar 15 02:45:35 2010
From: gtcampbell at gmail.com (Greg Campbell)
Date: Sun, 14 Mar 2010 19:45:35 -0700
Subject: [rabbitmq-discuss] rabbitmq_status_web crashed on daylight savings
	time switchover, took 	down RabbitMQ
Message-ID: <ac6faba21003141945p1cd5effdu1755db8f10f9a827@mail.gmail.com>

** Generic server rabbit_status_web terminating
** Last message in was get_context
** When Server state == {state,1268531993140,"Sun, 14 Mar 2010 09:59:53
GMT",

... a bunch of queue status data...

** Reason for termination ==
** {{case_clause,[]},
    [{httpd_util,rfc1123_date,1},
     {rabbit_status_web,internal_update,1},
     {rabbit_status_web,handle_call,3},
     {gen_server,handle_msg,5},
     {proc_lib,init_p_do_apply,3}]}


The server was running Pacific time, so it looks like it crashed just after
the switchover to Daylight Savings Time on the West Coast of the United
States, which occurred Sunday Morning at 10:00:00 GMT.  This occurred on
multiple machines (not clustered) simultaneously.

The underlying issue in httpd_util:rfc1123_date appears to be an Erlang bug,
which I believe has been fixed in R13B04 (we're still running R13B03 on the
server, though):
http://www.erlang.org/cgi-bin/ezmlm-cgi?2:mss:1681:201001:jffdfifdokimdicjnpcp
.

However, it might be worth ensuring that a crash in a plugin doesn't cause
the entire system to shut down.

Thanks,
Greg Campbell
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20100314/c5b6971d/attachment.htm 

From matthew at lshift.net  Mon Mar 15 16:29:30 2010
From: matthew at lshift.net (Matthew Sackman)
Date: Mon, 15 Mar 2010 16:29:30 +0000
Subject: [rabbitmq-discuss] rabbitmq_status_web crashed on daylight
 savings time switchover, took 	down RabbitMQ
In-Reply-To: <ac6faba21003141945p1cd5effdu1755db8f10f9a827@mail.gmail.com>
References: <ac6faba21003141945p1cd5effdu1755db8f10f9a827@mail.gmail.com>
Message-ID: <20100315162930.GA8667@mrnibble.lshift.net>

Hi Greg,

On Sun, Mar 14, 2010 at 07:45:35PM -0700, Greg Campbell wrote:
> ** Generic server rabbit_status_web terminating
> ** Last message in was get_context
> ** When Server state == {state,1268531993140,"Sun, 14 Mar 2010 09:59:53
> GMT",
> 
> ... a bunch of queue status data...
> 
> ** Reason for termination ==
> ** {{case_clause,[]},
>     [{httpd_util,rfc1123_date,1},
>      {rabbit_status_web,internal_update,1},
>      {rabbit_status_web,handle_call,3},
>      {gen_server,handle_msg,5},
>      {proc_lib,init_p_do_apply,3}]}

This doesn't indicate that Rabbit itself crashed, only that the
rabbit_status_web process crashed. That process is under a supervisor
hierarchy and should have been automatically restarted.

I have reproduced this (in that I can get a very similar crash to happen,
though without messing with my clock), and whilst similar entries in the
logs appear, the rabbit_status_web process restarts correctly, and
Rabbit itself continues on, perfectly happily.

> The underlying issue in httpd_util:rfc1123_date appears to be an Erlang bug,
> which I believe has been fixed in R13B04 (we're still running R13B03 on the
> server, though):
> http://www.erlang.org/cgi-bin/ezmlm-cgi?2:mss:1681:201001:jffdfifdokimdicjnpcp
> .

Interesting bug, and I'm glad it's now been fixed.

> However, it might be worth ensuring that a crash in a plugin doesn't cause
> the entire system to shut down.

We don't think it did ;) Are there any more entries in the logs that you
have that indicate anything else went wrong? It's possible the same bug
affected more than just the plugin, but certainly the entry you showed
us just shows a process within the status plugin going down which should
have been immediately restarted.

Matthew



From gtcampbell at gmail.com  Mon Mar 15 16:36:53 2010
From: gtcampbell at gmail.com (Greg Campbell)
Date: Mon, 15 Mar 2010 09:36:53 -0700
Subject: [rabbitmq-discuss] rabbitmq_status_web crashed on daylight
	savings time switchover, took down RabbitMQ
In-Reply-To: <20100315162930.GA8667@mrnibble.lshift.net>
References: <ac6faba21003141945p1cd5effdu1755db8f10f9a827@mail.gmail.com>
	<20100315162930.GA8667@mrnibble.lshift.net>
Message-ID: <ac6faba21003150936w2630100ex6e67d204ca5099b4@mail.gmail.com>

Here are the remainder of messages in the rabbit.log.  These are the last
messages until I manually restarted the process after noting that it had
crashed.

=ERROR REPORT==== 13-Mar-2010::18:00:08 ===
{mochiweb_socket_server,235,
    {child_error,
        {{{case_clause,[]},
          [{httpd_util,rfc1123_date,1},
           {rabbit_status_web,internal_update,1},
           {rabbit_status_web,handle_call,3},
           {gen_server,handle_msg,5},
           {proc_lib,init_p_do_apply,3}]},
         {gen_server2,call,[rabbit_status_web,get_context]}}}}

=ERROR REPORT==== 13-Mar-2010::18:00:08 ===
{mochiweb_socket_server,235,
    {child_error,
        {{{case_clause,[]},
          [{httpd_util,rfc1123_date,1},
           {rabbit_status_web,internal_update,1},
           {rabbit_status_web,init,1},
           {gen_server,init_it,6},
           {proc_lib,init_p_do_apply,3}]},
         {gen_server2,call,[rabbit_status_web,get_context]}}}}

=INFO REPORT==== 13-Mar-2010::18:00:08 ===
    application: rabbit_status
    exited: shutdown
    type: permanent

=INFO REPORT==== 13-Mar-2010::18:00:08 ===
stopped TCP Listener on 0.0.0.0:5672

=INFO REPORT==== 13-Mar-2010::18:00:08 ===
closing TCP connection <0.1242.0> from 10.8.25.1:59325

=INFO REPORT==== 13-Mar-2010::18:00:08 ===
closing TCP connection <0.30625.41> from 10.8.26.2:58929

=INFO REPORT==== 13-Mar-2010::18:00:08 ===
closing TCP connection <0.24377.64> from 192.168.5.50:3316

=INFO REPORT==== 13-Mar-2010::18:00:08 ===
closing TCP connection <0.27424.60> from 10.8.24.1:34061

=INFO REPORT==== 13-Mar-2010::18:00:08 ===
closing TCP connection <0.30634.41> from 10.8.26.1:53751



On Mon, Mar 15, 2010 at 9:29 AM, Matthew Sackman <matthew at lshift.net> wrote:

> Hi Greg,
>
> On Sun, Mar 14, 2010 at 07:45:35PM -0700, Greg Campbell wrote:
> > ** Generic server rabbit_status_web terminating
> > ** Last message in was get_context
> > ** When Server state == {state,1268531993140,"Sun, 14 Mar 2010 09:59:53
> > GMT",
> >
> > ... a bunch of queue status data...
> >
> > ** Reason for termination ==
> > ** {{case_clause,[]},
> >     [{httpd_util,rfc1123_date,1},
> >      {rabbit_status_web,internal_update,1},
> >      {rabbit_status_web,handle_call,3},
> >      {gen_server,handle_msg,5},
> >      {proc_lib,init_p_do_apply,3}]}
>
> This doesn't indicate that Rabbit itself crashed, only that the
> rabbit_status_web process crashed. That process is under a supervisor
> hierarchy and should have been automatically restarted.
>
> I have reproduced this (in that I can get a very similar crash to happen,
> though without messing with my clock), and whilst similar entries in the
> logs appear, the rabbit_status_web process restarts correctly, and
> Rabbit itself continues on, perfectly happily.
>
> > The underlying issue in httpd_util:rfc1123_date appears to be an Erlang
> bug,
> > which I believe has been fixed in R13B04 (we're still running R13B03 on
> the
> > server, though):
> >
> http://www.erlang.org/cgi-bin/ezmlm-cgi?2:mss:1681:201001:jffdfifdokimdicjnpcp
> > .
>
> Interesting bug, and I'm glad it's now been fixed.
>
> > However, it might be worth ensuring that a crash in a plugin doesn't
> cause
> > the entire system to shut down.
>
> We don't think it did ;) Are there any more entries in the logs that you
> have that indicate anything else went wrong? It's possible the same bug
> affected more than just the plugin, but certainly the entry you showed
> us just shows a process within the status plugin going down which should
> have been immediately restarted.
>
> Matthew
>
> _______________________________________________
> rabbitmq-discuss mailing list
> rabbitmq-discuss at lists.rabbitmq.com
> http://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20100315/0245327e/attachment.htm 

From matthew at lshift.net  Mon Mar 15 16:44:43 2010
From: matthew at lshift.net (Matthew Sackman)
Date: Mon, 15 Mar 2010 16:44:43 +0000
Subject: [rabbitmq-discuss] rabbitmq_status_web crashed on daylight
 savings time switchover, took down RabbitMQ
In-Reply-To: <ac6faba21003150936w2630100ex6e67d204ca5099b4@mail.gmail.com>
References: <ac6faba21003141945p1cd5effdu1755db8f10f9a827@mail.gmail.com>
	<20100315162930.GA8667@mrnibble.lshift.net>
	<ac6faba21003150936w2630100ex6e67d204ca5099b4@mail.gmail.com>
Message-ID: <20100315164443.GB8667@mrnibble.lshift.net>

On Mon, Mar 15, 2010 at 09:36:53AM -0700, Greg Campbell wrote:
> Here are the remainder of messages in the rabbit.log.  These are the last
> messages until I manually restarted the process after noting that it had
> crashed.

Hmmm, ok the "stopped TCP Listener on 0.0.0.0:5672" does indeed suggest
Rabbit decided to shutdown. This is a little odd, I'll continue digging
into this. Many thanks for the report.

Matthew



From ivdelchev at gmail.com  Mon Mar 15 16:51:57 2010
From: ivdelchev at gmail.com (Ivan Delchev)
Date: Mon, 15 Mar 2010 17:51:57 +0100
Subject: [rabbitmq-discuss] rabbitmq-jsonrpc "shortcut" HTTP calls?
Message-ID: <14f55851003150951s206bdcb9r5160f73fedbd3926@mail.gmail.com>

Hi guys,

I have a question about RabbitMQ and more specifically
rabbitmq-jsonrpc. I know that this is an experimental download and is
basically translation of AMQP to HTTP, but is there a way to optimize
a typical process of e.g. authenticating yourself, declaring an
exchange and declaring a queue? Currently this takes 7-8 requests in a
row, which puts unnecessary load on the server. Does anyone know about
"shortcut" HTTP requests that bundle multiple AMQP calls in one
request in order to minimize overhead?

@RabbitGuys Do you have any plans to implement and support such features?


Thanks a lot,
Ivan



From ian.ragsdale at gmail.com  Mon Mar 15 19:22:32 2010
From: ian.ragsdale at gmail.com (Ian Ragsdale)
Date: Mon, 15 Mar 2010 14:22:32 -0500
Subject: [rabbitmq-discuss] RabbitMQ crash caused by channel leak?
In-Reply-To: <20100312114058.GE21727@mrnibble.lshift.net>
References: <E132581E-43AB-4D8E-8A75-997765A31598@gmail.com>
	<20100312113709.GD21727@mrnibble.lshift.net>
	<20100312114058.GE21727@mrnibble.lshift.net>
Message-ID: <CBDC7EFE-3B97-4E56-BB07-45D73DD3D883@gmail.com>

On Mar 12, 2010, at 5:40 AM, Matthew Sackman wrote:

> On Fri, Mar 12, 2010 at 11:37:09AM +0000, Matthew Sackman wrote:
>>> Based on the number of channels in the logged dictionary, I'm guessing I hit a limit on the number of channels, which I'm guessing was the cause of the crash.  Does this sound like a likely cause?  I've identified and removed the code that was creating all the channels, but I'm concerned that it appears to be so easy for a single rogue client to take down the entire server.  Is there a way for me to prevent this?
>> 
>> Mmmm, that's a good point, and no, there's no such knob.
> 
> Having said all that however, be aware that you'll also crash if you run
> out of file descriptors, and you can also explode rabbit by creating
> lots of queues - there are no limits on either of these. So there are,
> sadly, several vectors for DoS attacks just at the moment.

Good to know.  We'll be controlling all the producers and consumers, so it isn't a huge worry that it would be possible to DOS, we'll just have to be a little more careful on our end.  Thanks for confirming the likely cause of the crash - I now feel comfortable that it was a self-inflicted wound and don't have to worry that we have a problem with our rabbitmq install.

- Ian





From matthew at lshift.net  Mon Mar 15 22:23:45 2010
From: matthew at lshift.net (Matthew Sackman)
Date: Mon, 15 Mar 2010 22:23:45 +0000
Subject: [rabbitmq-discuss] rabbitmq_status_web crashed on daylight
 savings time switchover, took down RabbitMQ
In-Reply-To: <ac6faba21003151210j38493965t7426145bbe8942ca@mail.gmail.com>
References: <ac6faba21003141945p1cd5effdu1755db8f10f9a827@mail.gmail.com>
	<20100315162930.GA8667@mrnibble.lshift.net>
	<ac6faba21003150936w2630100ex6e67d204ca5099b4@mail.gmail.com>
	<20100315164443.GB8667@mrnibble.lshift.net>
	<ac6faba21003151210j38493965t7426145bbe8942ca@mail.gmail.com>
Message-ID: <20100315222345.GA4353@wellquite.org>

Hi Greg,

On Mon, Mar 15, 2010 at 12:10:08PM -0700, Greg Campbell wrote:
> Let me
> know if you could use any other information.  As mentioned, this happened
> across multiple machines (QA, staging, production) simultaneously, and in
> all cases RabbitMQ shut down.  We're using version 1.7.2.

We did eventually trace this down. Rabbit would have done a controlled
shutdown so there was never any risk of persistent messages being lost.
It's difficult to see what should happen: the status plugin crashed, and
restarted and crashed again fast enough to convince Erlang that this
wasn't an error that could be recovered from. Erlang then shut down all
the other applications, which is what it's meant to do. We could change
this latter behaviour, but then again, that suggests that you could
classify some plugins as "crucial" (i.e. if they go down, you do want
everything else to go down too) and others as "non-crucial". But as soon
as you make such a suggestion, you rather wonder a) why are you running
plugins that are "non-crucial" - if you don't need them, then don't run
them; and b) if you found that the status plugin had crashed and had
been shutdown, but the rest of rabbit had survived, what would you have
then done? Surely restarting Rabbit would have been your next step?

I think really what this is getting towards is that we need a way of
dynamically starting and stopping plugins in a running Rabbit instance.
This may not be possible with all plugins - some hook into the boot
sequence of Rabbit very early on and so couldn't be started up once
Rabbit is up and running, but others could potentially be started and
stopped and restarted dynamically.

Matthew



From james.l.pettit at gmail.com  Tue Mar 16 01:55:13 2010
From: james.l.pettit at gmail.com (James Pettit)
Date: Mon, 15 Mar 2010 18:55:13 -0700
Subject: [rabbitmq-discuss] Ordering of messages from a fanout exchange
Message-ID: <54cddd2e1003151855s18e2067am1f0c2e943a52e7e0@mail.gmail.com>

Is it possible to have a fanout exchange ensure that it routes messages to
each queue bound to it in the same order? For example, if Message A and
Message B are sent to Queue 1 in the order A < B, they will be sent to Queue
2 (and all others) in the order A < B? I have a specific example where two
consumers are getting the correct messages, but in a different order.
- James
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20100315/6ced4261/attachment.htm 

From matthew at lshift.net  Tue Mar 16 10:36:30 2010
From: matthew at lshift.net (Matthew Sackman)
Date: Tue, 16 Mar 2010 10:36:30 +0000
Subject: [rabbitmq-discuss] Ordering of messages from a fanout exchange
In-Reply-To: <54cddd2e1003151855s18e2067am1f0c2e943a52e7e0@mail.gmail.com>
References: <54cddd2e1003151855s18e2067am1f0c2e943a52e7e0@mail.gmail.com>
Message-ID: <20100316103630.GA27749@mrnibble.lshift.net>

Hi James,

On Mon, Mar 15, 2010 at 06:55:13PM -0700, James Pettit wrote:
> Is it possible to have a fanout exchange ensure that it routes messages to
> each queue bound to it in the same order? For example, if Message A and
> Message B are sent to Queue 1 in the order A < B, they will be sent to Queue
> 2 (and all others) in the order A < B? I have a specific example where two
> consumers are getting the correct messages, but in a different order.

If A and B come from the same channel then yes, their order will be
preserved. If they come from different channels then all bets are off,
and there is no knob to turn here - this is just the nature of AMQP I'm
afraid. If you can give us some more details about the type of problem
you're trying to solve we may be able to suggest some solutions.

Matthew



From james.l.pettit at gmail.com  Tue Mar 16 16:46:22 2010
From: james.l.pettit at gmail.com (James Pettit)
Date: Tue, 16 Mar 2010 09:46:22 -0700
Subject: [rabbitmq-discuss] Ordering of messages from a fanout exchange
In-Reply-To: <20100316103630.GA27749@mrnibble.lshift.net>
References: <54cddd2e1003151855s18e2067am1f0c2e943a52e7e0@mail.gmail.com>
	<20100316103630.GA27749@mrnibble.lshift.net>
Message-ID: <54cddd2e1003160946x27b3049bm562708b5330e5032@mail.gmail.com>

I'm trying to get high availability with live failover. Both nodes would be
bound to the same fanout exchange, and keep synchronized by the fact that
message come to each in the same order. I do realize now why this is
impossible - the same virtual exchange might be multiple physical machines,
and if order were required, these would have to communicate to each other
before sending any message, a terrible toll for performance. I believe the
correct way to do this is to have one of my live nodes be the designated
master, and the master can send the ordering of events to all secondary
nodes (to maintain state in sync). The secondary nodes could then determine
when the master is down and one of them can take up the baton, as it were.
In this case, all that's required is the ordering on messages from the same
channel (the master). Anything wrong with this scenario?
- James

On Tue, Mar 16, 2010 at 3:36 AM, Matthew Sackman <matthew at lshift.net> wrote:

> Hi James,
>
> On Mon, Mar 15, 2010 at 06:55:13PM -0700, James Pettit wrote:
> > Is it possible to have a fanout exchange ensure that it routes messages
> to
> > each queue bound to it in the same order? For example, if Message A and
> > Message B are sent to Queue 1 in the order A < B, they will be sent to
> Queue
> > 2 (and all others) in the order A < B? I have a specific example where
> two
> > consumers are getting the correct messages, but in a different order.
>
> If A and B come from the same channel then yes, their order will be
> preserved. If they come from different channels then all bets are off,
> and there is no knob to turn here - this is just the nature of AMQP I'm
> afraid. If you can give us some more details about the type of problem
> you're trying to solve we may be able to suggest some solutions.
>
> Matthew
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20100316/b54a4dd6/attachment.htm 

From matthew at lshift.net  Tue Mar 16 17:08:31 2010
From: matthew at lshift.net (Matthew Sackman)
Date: Tue, 16 Mar 2010 17:08:31 +0000
Subject: [rabbitmq-discuss] Ordering of messages from a fanout exchange
In-Reply-To: <54cddd2e1003160946x27b3049bm562708b5330e5032@mail.gmail.com>
References: <54cddd2e1003151855s18e2067am1f0c2e943a52e7e0@mail.gmail.com>
	<20100316103630.GA27749@mrnibble.lshift.net>
	<54cddd2e1003160946x27b3049bm562708b5330e5032@mail.gmail.com>
Message-ID: <20100316170831.GF27749@mrnibble.lshift.net>

Hi James,

On Tue, Mar 16, 2010 at 09:46:22AM -0700, James Pettit wrote:
> I'm trying to get high availability with live failover. Both nodes would be
> bound to the same fanout exchange, and keep synchronized by the fact that
> message come to each in the same order. I do realize now why this is
> impossible - the same virtual exchange might be multiple physical machines,
> and if order were required, these would have to communicate to each other
> before sending any message, a terrible toll for performance. I believe the
> correct way to do this is to have one of my live nodes be the designated
> master, and the master can send the ordering of events to all secondary
> nodes (to maintain state in sync). The secondary nodes could then determine
> when the master is down and one of them can take up the baton, as it were.
> In this case, all that's required is the ordering on messages from the same
> channel (the master). Anything wrong with this scenario?

Err, this suggests there is only one producer. The channel here is a
single channel within a connection. One way to get what you want is to
use the shovel. Apologies for the ASCII art:

                            Node A
Producers >--\ 
              >-> exchangeA ---> queueA ---> shovelA -\
(various) >--/                                        |
                                                      |
             /----------<--------------<--------------/
             |
             |                /--> queueB --> shovelB ---> [to node B]
             \--> exchangeB -<
                              \--> queueC --> shovelC ---> [to node C]

The reason why this works is because there is only one thing (shovelA)
that publishes to exchangeB. As such, you can guarantee that the
messages will be in queues B and C in the same order, and then picked up
by shovels B and C and routed onto nodes B and C. However, many
different producers can send messages into exchange A, and they can (and
will be) processed in an ordering that only preserves ordering within a
channel.

I hope that helps.

Matthew



From jose.benitez at scu.desoft.cu  Tue Mar 16 18:56:16 2010
From: jose.benitez at scu.desoft.cu (Jose Enrique Benitez Jimenez)
Date: Tue, 16 Mar 2010 14:56:16 -0400
Subject: [rabbitmq-discuss] RabbitMQ in MMOG
Message-ID: <000801cac53a$7f7e7750$7e7b65f0$@benitez@scu.desoft.cu>

Hello friends,

It is good idea to use RabbitMQ as a middleware between flash and erlang for
a Massive Multiplayer Online Game ?

 

Greetings,

Jose.

 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20100316/405bcb59/attachment.htm 

From akalend at mail.ru  Wed Mar 17 01:25:59 2010
From: akalend at mail.ru (Alexandre Kalendarev)
Date: Wed, 17 Mar 2010 04:25:59 +0300
Subject: [rabbitmq-discuss] rabiit-c library, properies is not set
Message-ID: <E1Nri1H-0000uT-00.akalend-mail-ru@f35.mail.ru>

I develope the C++ & PHP clients.

If I set the  properies for AMQP Basic.Publish than:
I can to set :
typedef struct amqp_basic_properties_t_ {
  amqp_flags_t _flags;
  amqp_bytes_t content_type;
  amqp_bytes_t content_encoding;
  amqp_table_t headers;
  uint8_t delivery_mode;
  uint8_t priority;
  amqp_bytes_t correlation_id;
  amqp_bytes_t reply_to;
  amqp_bytes_t expiration;
  amqp_bytes_t message_id;
  uint64_t timestamp;
  amqp_bytes_t type;
  amqp_bytes_t user_id;
  amqp_bytes_t app_id;
  amqp_bytes_t cluster_id;
} amqp_basic_properties_t;

but reality I can to set only    content_type;

Can I to set/change content_encoding;, user_id, message_id delivery_mode, set expiration, timestamp?

what is the property reply_to, headers?



Alexandre 



From alexis.richardson at gmail.com  Wed Mar 17 11:24:30 2010
From: alexis.richardson at gmail.com (Alexis Richardson)
Date: Wed, 17 Mar 2010 11:24:30 +0000
Subject: [rabbitmq-discuss] RabbitMQ in MMOG
In-Reply-To: <3395991219757043842@unknownmsgid>
References: <AcrFOldFS7V5AbYURFiHaTuIey0C1Q==>
	<3395991219757043842@unknownmsgid>
Message-ID: <167204d21003170424k1d3b579dhba72306ec7e1ed43@mail.gmail.com>

Jose

On Tue, Mar 16, 2010 at 6:56 PM, Jose Enrique Benitez Jimenez
<jose.benitez at scu.desoft.cu> wrote:
> Hello friends,
>
> It is good idea to use RabbitMQ as a middleware between flash and erlang for
> a Massive Multiplayer Online Game ?

Hi and thank-you for asking.

If you did this, then you would not be the first to do so.  RabbitMQ
is used by quite a number of online gaming providers.  I know of at
least two who are using it in the configuration you describe above.

However - one word of caution - the flash client has not been updated
for a bit of time, so please let us know if you run into any problems.
 That said, someone got it working last week (according to the
tweetverse....).

alexis




>
>
> Greetings,
>
> Jose.
>
>
>
> _______________________________________________
> rabbitmq-discuss mailing list
> rabbitmq-discuss at lists.rabbitmq.com
> http://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss
>
>



From aquino.gustavo at gmail.com  Wed Mar 17 12:12:47 2010
From: aquino.gustavo at gmail.com (Gustavo Aquino)
Date: Wed, 17 Mar 2010 09:12:47 -0300
Subject: [rabbitmq-discuss] Increasing base memory.
Message-ID: <5ef296b31003170512i50a79c9dm2afc0bb56e5be8db@mail.gmail.com>

Hi,

I would like to run RabbitMQ using 80Gb of memory, so I'm trying to
configure it using the Rabbit guide where told to put simple line in
rabbitmq.conf, ok I open my rabbitmq.conf and put this line and just
changing 0.4 to 0.8 but it doesn't work, when I start Rabbit it don't
recognize configuration.


rabbitmq.conf

[{rabbit, [{vm_memory_high_watermark, 0.8}]}].
NODENAME=rabbit at Nefertiti


Start error:

rabbitmq-server
/etc/rabbitmq/rabbitmq.conf: line 1: [{rabbit,: command not found

+---+   +---+
|   |   |   |
|   |   |   |
|   |   |   |
|   +---+   +-------+
|                   |
| RabbitMQ  +---+   |
|           |   |   |
|   v1.7.2  +---+   |
|                   |
+-------------------+

Regards.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20100317/25c87d60/attachment.htm 

From aquino.gustavo at gmail.com  Wed Mar 17 12:15:21 2010
From: aquino.gustavo at gmail.com (Gustavo Aquino)
Date: Wed, 17 Mar 2010 09:15:21 -0300
Subject: [rabbitmq-discuss] Stop producer and queue continue growing...
In-Reply-To: <5ef296b31003120803y4ca7a668q41015c98bfd99fae@mail.gmail.com>
References: <5ef296b31003111910n4bdb279buf67751a31c5526e9@mail.gmail.com>
	<20100312104941.GA21727@mrnibble.lshift.net>
	<5ef296b31003120417g4092b771p4b836f9b61f9a374@mail.gmail.com>
	<20100312123017.GB25615@mrnibble.lshift.net>
	<5ef296b31003120636j5d5e9ce6kb43b580b998c03bc@mail.gmail.com>
	<20100312145826.GD25615@mrnibble.lshift.net>
	<5ef296b31003120803y4ca7a668q41015c98bfd99fae@mail.gmail.com>
Message-ID: <5ef296b31003170515j2ea6ec28vff50afe0a3a850f8@mail.gmail.com>

Hi Matthew,

Can you help me with this doubts ?

Regards.

On Fri, Mar 12, 2010 at 1:03 PM, Gustavo Aquino <aquino.gustavo at gmail.com>wrote:

> Matthew,
>
>
> On Fri, Mar 12, 2010 at 11:58 AM, Matthew Sackman <matthew at lshift.net>wrote:
>
>> On Fri, Mar 12, 2010 at 11:36:31AM -0300, Gustavo Aquino wrote:
>> > This is my biggest concern.
>>
>> It's the nature of AMQP.
>>
>> > Look about this scenario I have one Exchange and one persistent
>> queue.I'm
>> > posting transient messages to this Exchange (to get better performance)
>> if
>> > my Exchanges messages are in buffer and server crash I will be loose all
>> > messages in buffer and it is a big problem.... I cannot lose any
>> messages,
>>
>> Not true. There is no messaging product available (nor will there ever
>> be) that can guarantee it can't lose messages. Do you have infinite disk
>> space? Is there no event that can cause power loss? Even in the event of
>> the sun exploding you want to ensure no message loss?
>>
>
> If sun exploding money will be the minor problem of us. ;-)
>
> We don't have infinite disk space, but the primary proposal is monitoring
> to be able to be pro active and do something before problem happen.
>
> Look,for example I'm monitoring queue size, and look that we are coming to
> our limit, one way to guarantee the messages inside server is stopping
> producers and redirect producers to other server, so in theory I can
> guarantee that messages inside server1 will be consumed and server not loose
> messages or crash.
>
>
> Or how to guarantee that one message posted will be consumed ? consume
> don't know about the message posted.
>
>
>>
>> The fact is, message loss is unavoidable. You can take many steps to
>> avoid this, by using transactions and buffering messages in the client
>> so that if the connection to the broker dies you can reconnect and
>> republish, but at that point you risk duplicates, so you need
>> application logic on the consumer side to watch for duplicates and
>> remove them as necessary.
>>
>> > this messages are business it represent money, so if I loose one we
>> loose
>> > money and It cannot happen, in other way I need to be the fastest we
>> > need overrides in nanoseconds or 1 millisecond is the limit, so post
>> > messages in persistent queue is out of the scope, or  have one way to be
>> > fast with persistent ?
>>
>> Right, so you can't afford the delay of writing to disk, and yet you
>> want to ensure messages can't be lost in the event of a crash, or
>> comet strike. You may wish then to explore multiple brokers, publish, in
>> transactions to duplicate resources (queues) on every broker, and then
>> simultaneously consume from all of them, deduplicating as you go. Thus
>> you don't need to write to disk, and by shear strength of numbers, you
>> should be able to survive crashes. However, really these various brokers
>> should be in different data centres, probably on different continents,
>> so the 1ms max delay may be challenging...
>>
>
> How to duplicate resources inside multiples brokers using Rabbitmq ? I saw
> that Rabbit don't have a default way to do a Cluster HA, your based proposal
> is HP.
>
>
>>
>> Matthew
>>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20100317/7954d7e7/attachment.htm 

From matthew at lshift.net  Wed Mar 17 12:40:10 2010
From: matthew at lshift.net (Matthew Sackman)
Date: Wed, 17 Mar 2010 12:40:10 +0000
Subject: [rabbitmq-discuss] Stop producer and queue continue growing...
In-Reply-To: <5ef296b31003170515j2ea6ec28vff50afe0a3a850f8@mail.gmail.com>
References: <5ef296b31003111910n4bdb279buf67751a31c5526e9@mail.gmail.com>
	<20100312104941.GA21727@mrnibble.lshift.net>
	<5ef296b31003120417g4092b771p4b836f9b61f9a374@mail.gmail.com>
	<20100312123017.GB25615@mrnibble.lshift.net>
	<5ef296b31003120636j5d5e9ce6kb43b580b998c03bc@mail.gmail.com>
	<20100312145826.GD25615@mrnibble.lshift.net>
	<5ef296b31003120803y4ca7a668q41015c98bfd99fae@mail.gmail.com>
	<5ef296b31003170515j2ea6ec28vff50afe0a3a850f8@mail.gmail.com>
Message-ID: <20100317124010.GI27749@mrnibble.lshift.net>

Hi Gustavo,

On Wed, Mar 17, 2010 at 09:15:21AM -0300, Gustavo Aquino wrote:
> > Look,for example I'm monitoring queue size, and look that we are coming to
> > our limit, one way to guarantee the messages inside server is stopping
> > producers and redirect producers to other server, so in theory I can
> > guarantee that messages inside server1 will be consumed and server not loose
> > messages or crash.

Right, monitoring queue size is not a good idea in general, though it
may be sufficient in your case. Erlang is a GC'd language and it decides
by itself when to GC. So the same rabbit instance with exactly the same
messages in it can take up wildly different amounts of memory. This is
just one of the reasons why monitoring queue size is not a great idea.

The new persister goes to great lengths to ensure that eventually,
Rabbit will always be able to accept another message, assuming you don't
run out of disk space. If you combine the new persister with the
rabbitmq-toke plugin then you really can get to the point at which there
is no per-message RAM cost. However, yes, that does mean that overall
throughput will be lower as messages are written to and read from disk.
Fast disks and plenty of RAM can allieviate this problem, though not
solve it.

But in general, if you need low latency then that can only be achieved
by ensuring that the queues stay empty, or very close to empty. If that
is the case, then you should have no issues at all with running out of
RAM or having to deal with badly overloaded Rabbits.

> > How to duplicate resources inside multiples brokers using Rabbitmq ? I saw
> > that Rabbit don't have a default way to do a Cluster HA, your based proposal
> > is HP.

You can do active/passive failover - we have an OCF script now and this
can be set up with Pacemaker, but this'll only ensure that persistent
messages survive node failures. As I've recently demonstrated in other
posts to the mailing list, the rabbitmq-shovel can very effectively be
used to duplicate messages to several other brokers in a way which
ensures the brokers have the same ordering of messages within them. That
may be sufficient for you to ensure that messages are duplicated to
several brokers, thus ensuring they will survive node failure, but
obivously your consumers need to be a bit smarter to consume from all
such nodes and perform deduplication, unless you plan to solve this
issue through some other means.

Matthew



From matthew at lshift.net  Wed Mar 17 12:44:43 2010
From: matthew at lshift.net (Matthew Sackman)
Date: Wed, 17 Mar 2010 12:44:43 +0000
Subject: [rabbitmq-discuss] Increasing base memory.
In-Reply-To: <5ef296b31003170512i50a79c9dm2afc0bb56e5be8db@mail.gmail.com>
References: <5ef296b31003170512i50a79c9dm2afc0bb56e5be8db@mail.gmail.com>
Message-ID: <20100317124443.GJ27749@mrnibble.lshift.net>

Hi,

On Wed, Mar 17, 2010 at 09:12:47AM -0300, Gustavo Aquino wrote:
> I would like to run RabbitMQ using 80Gb of memory, so I'm trying to
> configure it using the Rabbit guide where told to put simple line in
> rabbitmq.conf, ok I open my rabbitmq.conf and put this line and just
> changing 0.4 to 0.8 but it doesn't work, when I start Rabbit it don't
> recognize configuration.

The 0.4 is a scaling of the RAM that Rabbit detects in your machine.
Furthermore, as the documentation says, it is *not* a limit for how much
RAM rabbit will use. As I pointed out in my other email, Erlang is a
GC'd language. The 0.4 simply says that channel.flow will be invoked
once 0.4 of available RAM has been used by Rabbit. This does not
preclude Rabbit from using more than 0.4 - the GC events may cause up to
twice this to be used. In addition, it is beneficial to allow your OS to
have some RAM available for disk caches, thus allowing it to be able to
satisfy reads without having to go to disk.

> rabbitmq.conf
> 
> [{rabbit, [{vm_memory_high_watermark, 0.8}]}].
> NODENAME=rabbit at Nefertiti

The first line should be placed in rabbitmq.config. The second line is
valid for rabbitmq.conf. Note they are two very different files.
rabbitmq.config is an Erlang term file. rabbitmq.conf is sourced by the
various shell scripts thus is a location to configure shell variables.

Matthew



From aquino.gustavo at gmail.com  Wed Mar 17 14:04:04 2010
From: aquino.gustavo at gmail.com (Gustavo Aquino)
Date: Wed, 17 Mar 2010 11:04:04 -0300
Subject: [rabbitmq-discuss] Increasing base memory.
In-Reply-To: <20100317124443.GJ27749@mrnibble.lshift.net>
References: <5ef296b31003170512i50a79c9dm2afc0bb56e5be8db@mail.gmail.com>
	<20100317124443.GJ27749@mrnibble.lshift.net>
Message-ID: <5ef296b31003170704y61c297e0p7e94b0d044204ffd@mail.gmail.com>

Hi Mattew,


On Wed, Mar 17, 2010 at 9:44 AM, Matthew Sackman <matthew at lshift.net> wrote:

> Hi,
>
> On Wed, Mar 17, 2010 at 09:12:47AM -0300, Gustavo Aquino wrote:
> > I would like to run RabbitMQ using 80Gb of memory, so I'm trying to
> > configure it using the Rabbit guide where told to put simple line in
> > rabbitmq.conf, ok I open my rabbitmq.conf and put this line and just
> > changing 0.4 to 0.8 but it doesn't work, when I start Rabbit it don't
> > recognize configuration.
>
> The 0.4 is a scaling of the RAM that Rabbit detects in your machine.
> Furthermore, as the documentation says, it is *not* a limit for how much
> RAM rabbit will use. As I pointed out in my other email, Erlang is a
> GC'd language. The 0.4 simply says that channel.flow will be invoked
> once 0.4 of available RAM has been used by Rabbit. This does not
> preclude Rabbit from using more than 0.4 - the GC events may cause up to
> twice this to be used. In addition, it is beneficial to allow your OS to
> have some RAM available for disk caches, thus allowing it to be able to
> satisfy reads without having to go to disk.
>
>
Ok, I'm trying this approach to found a solutions to solve a problem that I
reported here that RabbitMQ crash when my queue size take a big volume,
always time that queue size have ~700.000/200Bytes messages Rabbit simple
crash and don't write any log. This is my big concerns once we don't have a
good way to monitoring queue size (i.e messages buffers and etc)




> > rabbitmq.conf
> >
> > [{rabbit, [{vm_memory_high_watermark, 0.8}]}].
> > NODENAME=rabbit at Nefertiti
>
> The first line should be placed in rabbitmq.config. The second line is
> valid for rabbitmq.conf. Note they are two very different files.
> rabbitmq.config is an Erlang term file. rabbitmq.conf is sourced by the
> various shell scripts thus is a location to configure shell variables.
>

Ohhh thanks... so we have two different config files.. well thanks I really
thought that this configurations live inside the same file. Know rabbit run
ok.


>
> Matthew
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20100317/690b2e42/attachment.htm 

From matthew at lshift.net  Wed Mar 17 14:20:01 2010
From: matthew at lshift.net (Matthew Sackman)
Date: Wed, 17 Mar 2010 14:20:01 +0000
Subject: [rabbitmq-discuss] Increasing base memory.
In-Reply-To: <5ef296b31003170704y61c297e0p7e94b0d044204ffd@mail.gmail.com>
References: <5ef296b31003170512i50a79c9dm2afc0bb56e5be8db@mail.gmail.com>
	<20100317124443.GJ27749@mrnibble.lshift.net>
	<5ef296b31003170704y61c297e0p7e94b0d044204ffd@mail.gmail.com>
Message-ID: <20100317142001.GB4039@mrnibble.lshift.net>

Hi Gusvo,

On Wed, Mar 17, 2010 at 11:04:04AM -0300, Gustavo Aquino wrote:
> Hi Mattew,
> Ok, I'm trying this approach to found a solutions to solve a problem that I
> reported here that RabbitMQ crash when my queue size take a big volume,
> always time that queue size have ~700.000/200Bytes messages Rabbit simple
> crash and don't write any log. This is my big concerns once we don't have a
> good way to monitoring queue size (i.e messages buffers and etc)

What's the crash? Is there anything in the logs? It's possible you've
just temporarily exhausted RAM and it's temporarily raised channel.flow.
OTOH, if you really have 80GB of RAM, that really shouldn't be an issue.

Matthew



From tomek.rozen+rabbitmq at gmail.com  Wed Mar 17 14:54:10 2010
From: tomek.rozen+rabbitmq at gmail.com (Tomek Rozen)
Date: Wed, 17 Mar 2010 07:54:10 -0700 (PDT)
Subject: [rabbitmq-discuss]  database transaction
Message-ID: <27932801.post@talk.nabble.com>


Hi,

Let's say that I have a consumer on a single queue. Every message read from
the queue is stored to a database and ACKed.
What is the general approach to assuring that in case of failure either the
message is saved and ack'ed OR nothing is written to DB and the message
remains in the queue.

Thanks,
Tomek

-- 
View this message in context: http://old.nabble.com/database-transaction-tp27932801p27932801.html
Sent from the RabbitMQ mailing list archive at Nabble.com.




From matthew at lshift.net  Wed Mar 17 15:00:57 2010
From: matthew at lshift.net (Matthew Sackman)
Date: Wed, 17 Mar 2010 15:00:57 +0000
Subject: [rabbitmq-discuss] database transaction
In-Reply-To: <27932801.post@talk.nabble.com>
References: <27932801.post@talk.nabble.com>
Message-ID: <20100317150057.GE4039@mrnibble.lshift.net>

Hi Tomek,

On Wed, Mar 17, 2010 at 07:54:10AM -0700, Tomek Rozen wrote:
> Let's say that I have a consumer on a single queue. Every message read from
> the queue is stored to a database and ACKed.
> What is the general approach to assuring that in case of failure either the
> message is saved and ack'ed OR nothing is written to DB and the message
> remains in the queue.

Really, you want a distributed transaction here, which can't be done.

I would suggest that you insert into the database, when you know that's
there, do the ack. That leaves you open to the possibility of receiving
the message again if the client crashes or the ack message gets lost,
thus you may need some extra logic in the client to try to detect if a
message is already in the database. If you have the possibility that you
may find, on a redelivery, that the message is not in the database
because some other process has deleted it since, then you're going to
struggle at this point!

Also note that delivery messages have a redelivered flag. If this is 0
(or false), Rabbit is guaranteeing to you that the message has not
previously been delivered (hence you can skip duplicate tests here). If
it's 1, then Rabbit is saying it *may* have been already delivered to
you before, so you should check to see whether you've already received
it.

Hope that helps,

Matthew



From aquino.gustavo at gmail.com  Wed Mar 17 15:16:05 2010
From: aquino.gustavo at gmail.com (Gustavo Aquino)
Date: Wed, 17 Mar 2010 12:16:05 -0300
Subject: [rabbitmq-discuss] Increasing base memory.
In-Reply-To: <20100317142001.GB4039@mrnibble.lshift.net>
References: <5ef296b31003170512i50a79c9dm2afc0bb56e5be8db@mail.gmail.com>
	<20100317124443.GJ27749@mrnibble.lshift.net>
	<5ef296b31003170704y61c297e0p7e94b0d044204ffd@mail.gmail.com>
	<20100317142001.GB4039@mrnibble.lshift.net>
Message-ID: <5ef296b31003170816u6372f3efu532a64d29f88c2bf@mail.gmail.com>

Hi Matthew,

Crash = RabbitMQ is working and abrupt stop and your process don't exists
more, like I have done one kill.

I have 128Gb of RAM in this machine but Rabbit use only 1.6GB.

=INFO REPORT==== 16-Mar-2010::16:38:35 ===
Memory limit set to 1638MB.

Changing rabbitmq.config to [{rabbit, [{vm_memory_high_watermark, 0.8}]}].
it's now getting only 3.2Gb...

=INFO REPORT==== 17-Mar-2010::13:13:25 ===
Memory limit set to 3276MB.

Why ?

Regards.


On Wed, Mar 17, 2010 at 11:20 AM, Matthew Sackman <matthew at lshift.net>wrote:

> Hi Gusvo,
>
> On Wed, Mar 17, 2010 at 11:04:04AM -0300, Gustavo Aquino wrote:
> > Hi Mattew,
> > Ok, I'm trying this approach to found a solutions to solve a problem that
> I
> > reported here that RabbitMQ crash when my queue size take a big volume,
> > always time that queue size have ~700.000/200Bytes messages Rabbit simple
> > crash and don't write any log. This is my big concerns once we don't have
> a
> > good way to monitoring queue size (i.e messages buffers and etc)
>
> What's the crash? Is there anything in the logs? It's possible you've
> just temporarily exhausted RAM and it's temporarily raised channel.flow.
> OTOH, if you really have 80GB of RAM, that really shouldn't be an issue.
>
> Matthew
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20100317/5316e319/attachment.htm 

From matthew at lshift.net  Wed Mar 17 15:22:39 2010
From: matthew at lshift.net (Matthew Sackman)
Date: Wed, 17 Mar 2010 15:22:39 +0000
Subject: [rabbitmq-discuss] Increasing base memory.
In-Reply-To: <5ef296b31003170816u6372f3efu532a64d29f88c2bf@mail.gmail.com>
References: <5ef296b31003170512i50a79c9dm2afc0bb56e5be8db@mail.gmail.com>
	<20100317124443.GJ27749@mrnibble.lshift.net>
	<5ef296b31003170704y61c297e0p7e94b0d044204ffd@mail.gmail.com>
	<20100317142001.GB4039@mrnibble.lshift.net>
	<5ef296b31003170816u6372f3efu532a64d29f88c2bf@mail.gmail.com>
Message-ID: <20100317152239.GF4039@mrnibble.lshift.net>

Hi Gustavo,

On Wed, Mar 17, 2010 at 12:16:05PM -0300, Gustavo Aquino wrote:
> =INFO REPORT==== 16-Mar-2010::16:38:35 ===
> Memory limit set to 1638MB.
> 
> Changing rabbitmq.config to [{rabbit, [{vm_memory_high_watermark, 0.8}]}].
> it's now getting only 3.2Gb...
> 
> =INFO REPORT==== 17-Mar-2010::13:13:25 ===
> Memory limit set to 3276MB.
> 
> Why ?

Well I suspect Rabbit can't see all the memory. The likely cause for
this the OS is treating it as a 32-bit application.

Which OS are you using, and is Erlang a 32-bit or 64-bit application on
it?

Matthew



From matthew at lshift.net  Wed Mar 17 16:48:22 2010
From: matthew at lshift.net (Matthew Sackman)
Date: Wed, 17 Mar 2010 16:48:22 +0000
Subject: [rabbitmq-discuss] [aquino.gustavo@gmail.com: Re: Increasing base
 memory.]
Message-ID: <20100317164822.GG4039@mrnibble.lshift.net>

----- Forwarded message from Gustavo Aquino <aquino.gustavo at gmail.com> -----

Date: Wed, 17 Mar 2010 13:23:12 -0300
From: Gustavo Aquino <aquino.gustavo at gmail.com>
To: Matthew Sackman <matthew at lshift.net>
Subject: Re: [rabbitmq-discuss] Increasing base memory.
X-Mailer: iPhone Mail (7E18)
Message-Id: <FC4FAC42-2A1F-450D-808B-BA2B7F9F5B10 at gmail.com>

Hi Matthew,

It's one Rwd Hat Linux 64bits running on ppc ibm p6 processor.

Erlang is your last version compiled in this environment

Sent from my iPhone

On 17/03/2010, at 12:22, Matthew Sackman <matthew at lshift.net> wrote:

> Hi Gustavo,
> 
> On Wed, Mar 17, 2010 at 12:16:05PM -0300, Gustavo Aquino wrote:
>> =INFO REPORT==== 16-Mar-2010::16:38:35 ===
>> Memory limit set to 1638MB.
>> 
>> Changing rabbitmq.config to [{rabbit, [{vm_memory_high_watermark,
>> 0.8}]}].
>> it's now getting only 3.2Gb...
>> 
>> =INFO REPORT==== 17-Mar-2010::13:13:25 ===
>> Memory limit set to 3276MB.
>> 
>> Why ?
> 
> Well I suspect Rabbit can't see all the memory. The likely cause for
> this the OS is treating it as a 32-bit application.
> 
> Which OS are you using, and is Erlang a 32-bit or 64-bit
> application on
> it?
> 
> Matthew

----- End forwarded message -----



From akalend at mail.ru  Wed Mar 17 18:44:49 2010
From: akalend at mail.ru (Alexandre Kalendarev)
Date: Wed, 17 Mar 2010 21:44:49 +0300
Subject: [rabbitmq-discuss]
	=?windows-1251?q?rabiit-c_library=2C_properies?=
	=?windows-1251?q?_is_not_set?=
Message-ID: <E1NryEb-0003bf-00.akalend-mail-ru@f8.mail.ru>

Ok,

As the set the property I understand, but
what is the property?
 amqp_bytes_t correlation_id;
 amqp_bytes_t reply_to;
 amqp_table_t headers;


Alexandre 




From therevoltingx at gmail.com  Wed Mar 17 19:21:10 2010
From: therevoltingx at gmail.com (Miguel Morales)
Date: Wed, 17 Mar 2010 12:21:10 -0700
Subject: [rabbitmq-discuss] RabbitMQ in MMOG
In-Reply-To: <3395991219757043842@unknownmsgid>
References: <3395991219757043842@unknownmsgid>
Message-ID: <ba73e0ec1003171221u4309e537r7384839240510dcc@mail.gmail.com>

Hey Jose,

I can definitely relate, it's been a dream of mine for a long time as
well.  You can find my blog here:
http://developingthedream.blogspot.com/

I don't have the full game concept finalized, but I'm making it for
android/mobile devices.  So I'm designing the game around those
restrictions.  So far I'm thinking of some sort of pokemon/mmo/rpg
maker type game.

I'm thinking of a pokemon/card type battle system because it would be
the simplest and easiest to implement using mobile devices.  However,
movement is in realtime (2D) and it's designed for latency-prone
connections.

I've worked on it for about 7 months (while working a full time job,
currently unemployed ;-))  So I think it's a feasible project, I had
to build the rendering engine  using OpenGL ES on Android, so that was
a bit of work to do.

So far the most challenging thing to do was the movement because I had
to implement pathfinding, game loops, etc.  I come from a web
development background, so all of this was new to me.

As for technology, it's pretty simple.

On the server side:
    I have an account for each player.
    There is are 'system' queues that players/clients post hardware
input changes, or when resuming/pausing/etc.
    On startup there are a bunch of processes consuming from these
queues and setting the proper state changes to the    mnesia player
record.
    Then there is a global server game loop for each area, that takes
the saved server input and process it and publishes a 'server tick'
message to the 'area queue' (described below) so the player/client can
sync up.
   This 'area queue' is purged every second to avoid overloading clients.

On the client side:
    As a player moves, the client subscribes to its current area queue
so that it can know about other players.
    There is another queue for each player used for player-unique
system-level messages from the server.

Slowly but surely it's coming along, I *hope* that I'm done with the
most challenging stuff, but I still have AI coming up.
(Though I've done the pathfinding algorithm in erlang, so it shouldn't
be too difficult, plus I'm looking forward to it.)

And yes I do speak spanish, I was partially raised in El Salvador!

Hope that answers some of your questions, let me know if there's
anything more specific you'd like to know.
Good luck!

PS, forgot to CC list on original message, doing so now.

Miguel.

On Wed, Mar 17, 2010 at 7:24 AM, Jose Enrique Benitez Jimenez
<jose.benitez at scu.desoft.cu> wrote:
> Hello Miguel,
>
> That is a great news, I want to make a 2D Game MMO by my self, that is an
> old dream I want become true. Can you tell me more about your game, story,
> technology beside rabbitMQ, and more ??
>
> Do you speak Spanish?
>
> Greetings
>
>
> -----Mensaje original-----
> De: Miguel Morales [mailto:therevoltingx at gmail.com]
> Enviado el: Martes, 16 de Marzo de 2010 06:42 p.m.
> Para: Jose Enrique Benitez Jimenez
> Asunto: Re: [rabbitmq-discuss] RabbitMQ in MMOG
>
> Hello Jose,
>
> I'm not sure if it's a good idea or not, but I'm making a game (2D
> MMO) using rabbitmq as middleware.
> So far it's been excellent, fast communication/unmarshalling of data
> by working with the bytes directly.  (No JSON/XML overhead.)
> I get a nice abstract layer to route messages to players and areas.
>
> There are a few things that I haven't quite solved yet, that might bug
> me in the future:
>
> Memory:
>    Each broker handles events/messages in a set of areas.
>    Each player has an account in the broker that they're active in,
> might consume too much memory if it gets busy.
>    (Adding more nodes/brokers might solve that.)
>
> Security:
>    Players must 'own' a queue so publishing to that queue must be
> authenticated.
>
> Other:
>    Routing messages based on the player's location in the area.
>
>
> However, I'm not too worried about that yet, nor have I gotten to the
> point to test with many players logged in at once, but the tests I've
> ran have been excellent.
>
> Miguel.
>
> On Tue, Mar 16, 2010 at 11:56 AM, Jose Enrique Benitez Jimenez
> <jose.benitez at scu.desoft.cu> wrote:
>> Hello friends,
>>
>> It is good idea to use RabbitMQ as a middleware between flash and erlang
> for
>> a Massive Multiplayer Online Game ?
>>
>>
>>
>> Greetings,
>>
>> Jose.
>>
>>
>>
>> _______________________________________________
>> rabbitmq-discuss mailing list
>> rabbitmq-discuss at lists.rabbitmq.com
>> http://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss
>>
>>
>
>
>

-- 
http://diastrofunk.com, http://developingthedream.blogspot.com/,
http://www.youtube.com/user/revoltingx, ~Isaiah 55:8-9



From kenglish at gmail.com  Thu Mar 18 02:37:27 2010
From: kenglish at gmail.com (honoluluhacker)
Date: Wed, 17 Mar 2010 19:37:27 -0700 (PDT)
Subject: [rabbitmq-discuss]  Starting RabbitMQ timeout "starting database"
Message-ID: <27936733.post@talk.nabble.com>


Hello,
  I'm new to rabbitmq, setting it up for my chef server. When I attempt to
start the rabbitmq-server, it timesout on the "starting database" section.
Anyone know what my problem is?



Starting all nodes...
Starting node rabbit at chef-server...

+---+   +---+
|   |   |   |
|   |   |   |
|   |   |   |
|   +---+   +-------+
|                   |
| RabbitMQ  +---+   |
|           |   |   |
|   v1.7.2  +---+   |
|                   |
+-------------------+
AMQP 8-0
Copyright (C) 2007-2010 LShift Ltd., Cohesive Financial Technologies LLC.,
and R
abbit Technologies Ltd.
Licensed under the MPL.  See http://www.rabbitmq.com/

node          : rabbit at chef-server
app descriptor:
/usr/lib/rabbitmq/lib/rabbitmq_server-1.7.2/sbin/../ebin/rabbit.app
home dir      : /var/lib/rabbitmq
cookie hash   : J2ndmJytPgHUOvbX9fYXyA==
log           : /var/log/rabbitmq/rabbit.log
sasl log      : /var/log/rabbitmq/rabbit-sasl.log
database dir  : /var/lib/rabbitmq/mnesia/rabbit

starting internal event notification system                          
...done
starting logging server                                              
...done
starting database                                                    
...timeout
{"init terminating in
do_boot",{{nocatch,{error,{cannot_start_application,rabbit,{bad_return,{{rabbit,start,[normal,[]]},{'EXIT',{{case_clause,{error,{timeout_waiting_for_tables,[rabbit_user,rabbit_user_permission,rabbit_vhost,rabbit_config,rabbit_listener,rabbit_durable_route,rabbit_route,rabbit_reverse_route,rabbit_durable_exchange,rabbit_exchange,rabbit_durable_queue,rabbit_queue]}}},[{rabbit,'-run_boot_step/1-lc$^1/1-1-',1},{rabbit,run_boot_step,1},{rabbit,'-start/2-lc$^0/1-0-',1},{rabbit,'-start/2-lc$^0/1-0-',1},{rabbit,start,2},{application_master,start_it_old,4}]}}}}}}},[{init,start_it,1},{init,start_em,1}]}}

-- 
View this message in context: http://old.nabble.com/Starting-RabbitMQ-timeout-%22starting-database%22-tp27936733p27936733.html
Sent from the RabbitMQ mailing list archive at Nabble.com.




From aquino.gustavo at gmail.com  Thu Mar 18 02:59:56 2010
From: aquino.gustavo at gmail.com (Gustavo Aquino)
Date: Wed, 17 Mar 2010 23:59:56 -0300
Subject: [rabbitmq-discuss] Starting RabbitMQ timeout "starting database"
In-Reply-To: <27936733.post@talk.nabble.com>
References: <27936733.post@talk.nabble.com>
Message-ID: <5ef296b31003171959l130f185o642e5d50e1a2ced7@mail.gmail.com>

Hi,

Look the mail list history, I had reported the same problem here some months
ago, and my problem like your and it was a hostname problem.

regards.


On Wed, Mar 17, 2010 at 11:37 PM, honoluluhacker <kenglish at gmail.com> wrote:

>
> Hello,
>  I'm new to rabbitmq, setting it up for my chef server. When I attempt to
> start the rabbitmq-server, it timesout on the "starting database" section.
> Anyone know what my problem is?
>
>
>
> Starting all nodes...
> Starting node rabbit at chef-server...
>
> +---+   +---+
> |   |   |   |
> |   |   |   |
> |   |   |   |
> |   +---+   +-------+
> |                   |
> | RabbitMQ  +---+   |
> |           |   |   |
> |   v1.7.2  +---+   |
> |                   |
> +-------------------+
> AMQP 8-0
> Copyright (C) 2007-2010 LShift Ltd., Cohesive Financial Technologies LLC.,
> and R
> abbit Technologies Ltd.
> Licensed under the MPL.  See http://www.rabbitmq.com/
>
> node          : rabbit at chef-server
> app descriptor:
> /usr/lib/rabbitmq/lib/rabbitmq_server-1.7.2/sbin/../ebin/rabbit.app
> home dir      : /var/lib/rabbitmq
> cookie hash   : J2ndmJytPgHUOvbX9fYXyA==
> log           : /var/log/rabbitmq/rabbit.log
> sasl log      : /var/log/rabbitmq/rabbit-sasl.log
> database dir  : /var/lib/rabbitmq/mnesia/rabbit
>
> starting internal event notification system
> ...done
> starting logging server
> ...done
> starting database
> ...timeout
> {"init terminating in
>
> do_boot",{{nocatch,{error,{cannot_start_application,rabbit,{bad_return,{{rabbit,start,[normal,[]]},{'EXIT',{{case_clause,{error,{timeout_waiting_for_tables,[rabbit_user,rabbit_user_permission,rabbit_vhost,rabbit_config,rabbit_listener,rabbit_durable_route,rabbit_route,rabbit_reverse_route,rabbit_durable_exchange,rabbit_exchange,rabbit_durable_queue,rabbit_queue]}}},[{rabbit,'-run_boot_step/1-lc$^1/1-1-',1},{rabbit,run_boot_step,1},{rabbit,'-start/2-lc$^0/1-0-',1},{rabbit,'-start/2-lc$^0/1-0-',1},{rabbit,start,2},{application_master,start_it_old,4}]}}}}}}},[{init,start_it,1},{init,start_em,1}]}}
>
> --
> View this message in context:
> http://old.nabble.com/Starting-RabbitMQ-timeout-%22starting-database%22-tp27936733p27936733.html
> Sent from the RabbitMQ mailing list archive at Nabble.com.
>
>
> _______________________________________________
> rabbitmq-discuss mailing list
> rabbitmq-discuss at lists.rabbitmq.com
> http://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20100317/4f7ebea0/attachment.htm 

From kenglish at gmail.com  Thu Mar 18 03:40:27 2010
From: kenglish at gmail.com (honoluluhacker)
Date: Wed, 17 Mar 2010 20:40:27 -0700 (PDT)
Subject: [rabbitmq-discuss] Starting RabbitMQ timeout "starting database"
In-Reply-To: <5ef296b31003171959l130f185o642e5d50e1a2ced7@mail.gmail.com>
References: <27936733.post@talk.nabble.com>
	<5ef296b31003171959l130f185o642e5d50e1a2ced7@mail.gmail.com>
Message-ID: <27941365.post@talk.nabble.com>



Hi Gustavo,
  Thanks for the tip. I read the thread you referred to. It was my host
file. My hostname is called chef-server so I put the following in my
rabbitmq.conf

kenglish at chef-server:$ cat /etc/rabbitmq/rabbitmq.conf 
NODENAME=rabbit at chef-server 
RABBITMQ_NODENAME=rabbit at chef-server 
RABBITMQ_NODE_IP_ADDRESS=10.0.6.198

Thanks for the help.

Kevin


Gustavo Aquino wrote:
> 
> Hi,
> 
> Look the mail list history, I had reported the same problem here some
> months
> ago, and my problem like your and it was a hostname problem.
> 
> regards.
> 
> 
> On Wed, Mar 17, 2010 at 11:37 PM, honoluluhacker <kenglish at gmail.com>
> wrote:
> 
>>
>> Hello,
>>  I'm new to rabbitmq, setting it up for my chef server. When I attempt to
>> start the rabbitmq-server, it timesout on the "starting database"
>> section.
>> Anyone know what my problem is?
>>
>>
>>
>> Starting all nodes...
>> Starting node rabbit at chef-server...
>>
>> +---+   +---+
>> |   |   |   |
>> |   |   |   |
>> |   |   |   |
>> |   +---+   +-------+
>> |                   |
>> | RabbitMQ  +---+   |
>> |           |   |   |
>> |   v1.7.2  +---+   |
>> |                   |
>> +-------------------+
>> AMQP 8-0
>> Copyright (C) 2007-2010 LShift Ltd., Cohesive Financial Technologies
>> LLC.,
>> and R
>> abbit Technologies Ltd.
>> Licensed under the MPL.  See http://www.rabbitmq.com/
>>
>> node          : rabbit at chef-server
>> app descriptor:
>> /usr/lib/rabbitmq/lib/rabbitmq_server-1.7.2/sbin/../ebin/rabbit.app
>> home dir      : /var/lib/rabbitmq
>> cookie hash   : J2ndmJytPgHUOvbX9fYXyA==
>> log           : /var/log/rabbitmq/rabbit.log
>> sasl log      : /var/log/rabbitmq/rabbit-sasl.log
>> database dir  : /var/lib/rabbitmq/mnesia/rabbit
>>
>> starting internal event notification system
>> ...done
>> starting logging server
>> ...done
>> starting database
>> ...timeout
>> {"init terminating in
>>
>> do_boot",{{nocatch,{error,{cannot_start_application,rabbit,{bad_return,{{rabbit,start,[normal,[]]},{'EXIT',{{case_clause,{error,{timeout_waiting_for_tables,[rabbit_user,rabbit_user_permission,rabbit_vhost,rabbit_config,rabbit_listener,rabbit_durable_route,rabbit_route,rabbit_reverse_route,rabbit_durable_exchange,rabbit_exchange,rabbit_durable_queue,rabbit_queue]}}},[{rabbit,'-run_boot_step/1-lc$^1/1-1-',1},{rabbit,run_boot_step,1},{rabbit,'-start/2-lc$^0/1-0-',1},{rabbit,'-start/2-lc$^0/1-0-',1},{rabbit,start,2},{application_master,start_it_old,4}]}}}}}}},[{init,start_it,1},{init,start_em,1}]}}
>>
>> --
>> View this message in context:
>> http://old.nabble.com/Starting-RabbitMQ-timeout-%22starting-database%22-tp27936733p27936733.html
>> Sent from the RabbitMQ mailing list archive at Nabble.com.
>>
>>
>> _______________________________________________
>> rabbitmq-discuss mailing list
>> rabbitmq-discuss at lists.rabbitmq.com
>> http://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss
>>
> 
> _______________________________________________
> rabbitmq-discuss mailing list
> rabbitmq-discuss at lists.rabbitmq.com
> http://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss
> 
> 

-- 
View this message in context: http://old.nabble.com/Starting-RabbitMQ-timeout-%22starting-database%22-tp27936733p27941365.html
Sent from the RabbitMQ mailing list archive at Nabble.com.




From tomek.rozen+rabbitmq at gmail.com  Thu Mar 18 08:07:58 2010
From: tomek.rozen+rabbitmq at gmail.com (Tomek Rozen)
Date: Thu, 18 Mar 2010 01:07:58 -0700 (PDT)
Subject: [rabbitmq-discuss] database transaction
In-Reply-To: <20100317150057.GE4039@mrnibble.lshift.net>
References: <27932801.post@talk.nabble.com>
	<20100317150057.GE4039@mrnibble.lshift.net>
Message-ID: <27942664.post@talk.nabble.com>


Hi Matthew,


Matthew Sackman wrote:
> 
> Hi Tomek,
> 
> On Wed, Mar 17, 2010 at 07:54:10AM -0700, Tomek Rozen wrote:
>> Let's say that I have a consumer on a single queue. Every message read
>> from
>> the queue is stored to a database and ACKed.
>> What is the general approach to assuring that in case of failure either
>> the
>> message is saved and ack'ed OR nothing is written to DB and the message
>> remains in the queue.
> 
> Really, you want a distributed transaction here, which can't be done.
> 
> I would suggest that you insert into the database, when you know that's
> there, do the ack. That leaves you open to the possibility of receiving
> the message again if the client crashes or the ack message gets lost,
> thus you may need some extra logic in the client to try to detect if a
> message is already in the database. If you have the possibility that you
> may find, on a redelivery, that the message is not in the database
> because some other process has deleted it since, then you're going to
> struggle at this point!
> 
> 

This was my initial approach. Unfortunately it requires the mentioned
"extra logic", which must be implemented for all types of objects you
want to serialize.

If there was some kind of ID on each message then the ID could be
saved in the DB on the same transaction as the message's object. Then
duplicates could be filtered on a per-message basis, as opposed to per
object. However, I'm not aware of any kind of a message ID in rabbit
that could be used. Can you think of anything?



> Also note that delivery messages have a redelivered flag. If this is 0
> (or false), Rabbit is guaranteeing to you that the message has not
> previously been delivered (hence you can skip duplicate tests here). If
> it's 1, then Rabbit is saying it *may* have been already delivered to
> you before, so you should check to see whether you've already received
> it.
> 
> 

I wasn't aware of this. Thank you.

Tomek
-- 
View this message in context: http://old.nabble.com/database-transaction-tp27932801p27942664.html
Sent from the RabbitMQ mailing list archive at Nabble.com.




From mabrek at gmail.com  Thu Mar 18 10:58:13 2010
From: mabrek at gmail.com (mabrek)
Date: Thu, 18 Mar 2010 13:58:13 +0300
Subject: [rabbitmq-discuss] java client swallows interrupts
Message-ID: <c26271fb1003180358j67f500b1yd3ffff9ba934535c@mail.gmail.com>

Hello.

I came across java client issue: it clears thread interrupted status
and/or swallows InterruptedException in Channel operations (close,
basicPublish) and Connection.close, maybe in others.
It creates a problem when I need to stop consumer thread pool by
issuing ExecutorService.shutdownNow, they won't stop.

Regards
Anton Lebedevich.



From aquino.gustavo at gmail.com  Thu Mar 18 11:57:53 2010
From: aquino.gustavo at gmail.com (Gustavo Aquino)
Date: Thu, 18 Mar 2010 08:57:53 -0300
Subject: [rabbitmq-discuss] High Availability
Message-ID: <5ef296b31003180457u490e9d0dqa44509f5fac96706@mail.gmail.com>

Hi,

I have done this question before for many peoples, without success, because
I don't found (Documentation, discussion lists and etc) any way to do High
Availability with RabbitMQ without a lot of workaround, so exist a way to do
HA with RabbitMQ without implementing a lot of stuffs by client side, like
recreating queues when node down, recreating configurations, recreating
client connections and etc ?

What's recommendation from RabbitMQ to do HA ?

Someone here have done some HA implementation to RabbitMQ ?

Regards.

Gustavo
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20100318/1c96605b/attachment.htm 

From videlalvaro at gmail.com  Thu Mar 18 13:12:59 2010
From: videlalvaro at gmail.com (Alvaro Videla)
Date: Thu, 18 Mar 2010 21:12:59 +0800
Subject: [rabbitmq-discuss] High Availability
In-Reply-To: <5ef296b31003180457u490e9d0dqa44509f5fac96706@mail.gmail.com>
References: <5ef296b31003180457u490e9d0dqa44509f5fac96706@mail.gmail.com>
Message-ID: <B56341AE-E4D0-4A7F-85D8-1C0F9FD8916A@gmail.com>

Hi,

While I don't know how HIGH is your high, I can tell you what we do for our live site.

Currently we have around 400.000 messages a day  ?which is not much?, sent to 2 RabbitMQ servers running in low end machines. The unixload on those machines is always below 0.2

So here's my story of HA based on that setup:

When we deployed the system we started the two servers, NOT using clustering. Their version was 1.5.2. This was mid 2009. 

Then we have 28 PHP machines publishing the messages to a SINGLE IP, using IP Failover (Heartbeat+LVS), this means that for the PHP publishers there's only one IP to connect-to/send-messages.

Then we have 2 PHP machines consuming messages, but they connect directly to the IPs of the RabbitMQ servers, we do that to be sure that we connect directly to a specific broker. 

This also means that the queues, exchanges, bindings, etc, are all duplicated between the two servers.

But there was a problem! We wanted to upgrade to the latest version of RabbitMQ which has a non compatible storage format, at least with our version of RabbitMQ.

What we did was the following:

The sysadmin took out of the load balancing one of the brokers, and we waited till the workers consumed all the messages. When their queues were empty, we shut down the server and did the upgrade. Then we put it back into the load balancer and repeated the process with the other broker.

In this way we didn't lose any message.

But we wanted to test the native RabbitMQ clustering... 

The sysadmin ran the commands from the Clustering Guide and we had the cluster up an running, until we had another problem...

Sometimes the RabbitMQ sent the redirect response to the consumers, and told them, to connect to the other node, the problem we had here, is that RabbitMQ uses the node() function from Erlang, which for the way we have configured the /etc/hosts file, it was returning a node that was unreachable from outside (This was only happening to the consumers, because they connect directly to the RabbitMQ nodes).

So here we did the same as before, we took one broker out of the load balancing, we took it out of the clustering, and put it back again, and the same thing with the other node. 

Again we didn't lose any message.

Then on the connection configuration, we have a really simple .yml file to tell the PHP process where to connect, basically by providing an argument on the CLI.

I hope this helps,

Alvaro





On Mar 18, 2010, at 7:57 PM, Gustavo Aquino wrote:

> Hi,
> 
> I have done this question before for many peoples, without success, because I don't found (Documentation, discussion lists and etc) any way to do High Availability with RabbitMQ without a lot of workaround, so exist a way to do HA with RabbitMQ without implementing a lot of stuffs by client side, like recreating queues when node down, recreating configurations, recreating client connections and etc ?
> 
> What's recommendation from RabbitMQ to do HA ?
> 
> Someone here have done some HA implementation to RabbitMQ ?
> 
> Regards.
> 
> Gustavo
> 
> _______________________________________________
> rabbitmq-discuss mailing list
> rabbitmq-discuss at lists.rabbitmq.com
> http://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss




From videlalvaro at gmail.com  Thu Mar 18 15:05:48 2010
From: videlalvaro at gmail.com (Alvaro Videla)
Date: Thu, 18 Mar 2010 23:05:48 +0800
Subject: [rabbitmq-discuss] High Availability
In-Reply-To: <5ef296b31003180457u490e9d0dqa44509f5fac96706@mail.gmail.com>
References: <5ef296b31003180457u490e9d0dqa44509f5fac96706@mail.gmail.com>
Message-ID: <88755242-232A-4B88-BC4C-6C712B72E7CF@gmail.com>

Hi,

After some feedback by @etrepum at Twitter, I feel that what I commented needs some more details, so I did some research about LVS, since that set up was done by one of our sysadmins.

You can check about a LVS setup here: 

http://www.ibiblio.org/oswg/oswg-nightly/oswg/en_US.ISO_8859-1/articles/cluster-howto/cluster-howto/index.html

From that page:

"the role of the active router is to redirect service requests from the virtual server address to the real servers." [...] 

"The active router dynamically monitors the health of the real servers, and the workload on each." [...] 

"If a real server becomes disabled, the active router stops sending jobs to the server until it returns to normal operation."

I hope this mails clarifies things up,

Alvaro


On Mar 18, 2010, at 7:57 PM, Gustavo Aquino wrote:

> Hi,
> 
> I have done this question before for many peoples, without success, because I don't found (Documentation, discussion lists and etc) any way to do High Availability with RabbitMQ without a lot of workaround, so exist a way to do HA with RabbitMQ without implementing a lot of stuffs by client side, like recreating queues when node down, recreating configurations, recreating client connections and etc ?
> 
> What's recommendation from RabbitMQ to do HA ?
> 
> Someone here have done some HA implementation to RabbitMQ ?
> 
> Regards.
> 
> Gustavo
> 
> _______________________________________________
> rabbitmq-discuss mailing list
> rabbitmq-discuss at lists.rabbitmq.com
> http://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20100318/2f3304ef/attachment.htm 

From videlalvaro at gmail.com  Thu Mar 18 15:17:23 2010
From: videlalvaro at gmail.com (Alvaro Videla)
Date: Thu, 18 Mar 2010 23:17:23 +0800
Subject: [rabbitmq-discuss] High Availability
In-Reply-To: <88755242-232A-4B88-BC4C-6C712B72E7CF@gmail.com>
References: <5ef296b31003180457u490e9d0dqa44509f5fac96706@mail.gmail.com>
	<88755242-232A-4B88-BC4C-6C712B72E7CF@gmail.com>
Message-ID: <4dda437c1003180817la64511eif0b040e0f42ce23a@mail.gmail.com>

Sorry, It's me again, forgot to add something :)

That LVS setup was live tested when we got the dreaded out of memory
problem, when the Erlang VM just crash shutting down the RabbitMQ node. One
of the brokers went down, but we continued working from the other.

After that we decided to finally upgrade our RabbitMQ server to the latest
version

On Thu, Mar 18, 2010 at 11:05 PM, Alvaro Videla <videlalvaro at gmail.com>wrote:

> Hi,
>
> After some feedback by @etrepum at Twitter, I feel that what I commented
> needs some more details, so I did some research about LVS, since that set up
> was done by one of our sysadmins.
>
> You can check about a LVS setup here:
>
>
> http://www.ibiblio.org/oswg/oswg-nightly/oswg/en_US.ISO_8859-1/articles/cluster-howto/cluster-howto/index.html
>
> From that page:
>
> "the role of the *active router* is to redirect service requests from the
> virtual server address to the real servers." [...]
>
> "The active router dynamically monitors the health of the real servers,
> and the workload on each." [...]
>
> "If a real server becomes disabled, the active router stops sending jobs
> to the server until it returns to normal operation."
>
> I hope this mails clarifies things up,
>
> Alvaro
>
>
> On Mar 18, 2010, at 7:57 PM, Gustavo Aquino wrote:
>
> Hi,
>
> I have done this question before for many peoples, without success, because
> I don't found (Documentation, discussion lists and etc) any way to do High
> Availability with RabbitMQ without a lot of workaround, so exist a way to do
> HA with RabbitMQ without implementing a lot of stuffs by client side, like
> recreating queues when node down, recreating configurations, recreating
> client connections and etc ?
>
> What's recommendation from RabbitMQ to do HA ?
>
> Someone here have done some HA implementation to RabbitMQ ?
>
> Regards.
>
> Gustavo
>
> _______________________________________________
> rabbitmq-discuss mailing list
> rabbitmq-discuss at lists.rabbitmq.com
> http://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss
>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20100318/9147ccfa/attachment.htm 

From aquino.gustavo at gmail.com  Thu Mar 18 15:59:47 2010
From: aquino.gustavo at gmail.com (Gustavo Aquino)
Date: Thu, 18 Mar 2010 12:59:47 -0300
Subject: [rabbitmq-discuss] High Availability
In-Reply-To: <4dda437c1003180817la64511eif0b040e0f42ce23a@mail.gmail.com>
References: <5ef296b31003180457u490e9d0dqa44509f5fac96706@mail.gmail.com>
	<88755242-232A-4B88-BC4C-6C712B72E7CF@gmail.com>
	<4dda437c1003180817la64511eif0b040e0f42ce23a@mail.gmail.com>
Message-ID: <5ef296b31003180859k6ce1d8cp91705810e88e570d@mail.gmail.com>

Alvaro,

Thank you so much to report your experience.

I will take a look about LVM now.. so I would like to do some questions that
I'm in doubt about your solution. Do you know what is the overhead using LVM
? How many messages per second do you have ? Do you use a persistent queue ?
If yes how did you to continue consume queue when one node is down ?

You are using a heartbeat, so how you share inter nodes the same disk ? NFS
? Storage ?

Thank you so much for your report it helps a lot.

Best wishes.

On Thu, Mar 18, 2010 at 12:17 PM, Alvaro Videla <videlalvaro at gmail.com>wrote:

> Sorry, It's me again, forgot to add something :)
>
> That LVS setup was live tested when we got the dreaded out of memory
> problem, when the Erlang VM just crash shutting down the RabbitMQ node. One
> of the brokers went down, but we continued working from the other.
>
> After that we decided to finally upgrade our RabbitMQ server to the latest
> version
>
>
> On Thu, Mar 18, 2010 at 11:05 PM, Alvaro Videla <videlalvaro at gmail.com>wrote:
>
>> Hi,
>>
>> After some feedback by @etrepum at Twitter, I feel that what I commented
>> needs some more details, so I did some research about LVS, since that set up
>> was done by one of our sysadmins.
>>
>> You can check about a LVS setup here:
>>
>>
>> http://www.ibiblio.org/oswg/oswg-nightly/oswg/en_US.ISO_8859-1/articles/cluster-howto/cluster-howto/index.html
>>
>> From that page:
>>
>> "the role of the *active router* is to redirect service requests from the
>> virtual server address to the real servers." [...]
>>
>> "The active router dynamically monitors the health of the real servers,
>> and the workload on each." [...]
>>
>> "If a real server becomes disabled, the active router stops sending jobs
>> to the server until it returns to normal operation."
>>
>> I hope this mails clarifies things up,
>>
>> Alvaro
>>
>>
>> On Mar 18, 2010, at 7:57 PM, Gustavo Aquino wrote:
>>
>> Hi,
>>
>> I have done this question before for many peoples, without success,
>> because I don't found (Documentation, discussion lists and etc) any way to
>> do High Availability with RabbitMQ without a lot of workaround, so exist a
>> way to do HA with RabbitMQ without implementing a lot of stuffs by client
>> side, like recreating queues when node down, recreating configurations,
>> recreating client connections and etc ?
>>
>> What's recommendation from RabbitMQ to do HA ?
>>
>> Someone here have done some HA implementation to RabbitMQ ?
>>
>> Regards.
>>
>> Gustavo
>>
>> _______________________________________________
>> rabbitmq-discuss mailing list
>> rabbitmq-discuss at lists.rabbitmq.com
>> http://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss
>>
>>
>>
>
> _______________________________________________
> rabbitmq-discuss mailing list
> rabbitmq-discuss at lists.rabbitmq.com
> http://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20100318/3c263961/attachment.htm 

From aquino.gustavo at gmail.com  Thu Mar 18 16:15:33 2010
From: aquino.gustavo at gmail.com (Gustavo Aquino)
Date: Thu, 18 Mar 2010 13:15:33 -0300
Subject: [rabbitmq-discuss] High Availability
In-Reply-To: <B56341AE-E4D0-4A7F-85D8-1C0F9FD8916A@gmail.com>
References: <5ef296b31003180457u490e9d0dqa44509f5fac96706@mail.gmail.com>
	<B56341AE-E4D0-4A7F-85D8-1C0F9FD8916A@gmail.com>
Message-ID: <5ef296b31003180915m21ecc774pead05648ceb5d410@mail.gmail.com>

Hi Alvaro,

On Thu, Mar 18, 2010 at 10:12 AM, Alvaro Videla <videlalvaro at gmail.com>wrote:

> Hi,
>
> While I don't know how HIGH is your high, I can tell you what we do for our
> live site
>

Our high need to be the HIGHEST, we produce inbound about ~3000 messages per
second and ~9000 messages per second of outbounds and can't loose any
messages, well we are working hard to it, our concerns is about RabbitMQ
cluster HP model, so for hight throughput it works very very well. I will
report about our volume in other e-mail and we are very happy with the power
of RabbitMQ it's putting our server to cry to process in one test 1.000.000
messages per second and do it very well. Sure we have some problems that I
had reported here one with memory consume, until now we unable to use rabbit
with more that 3GB, other with queue monitoring and etc..



> Currently we have around 400.000 messages a day  ?which is not much?, sent
> to 2 RabbitMQ servers running in low end machines. The unixload on those
> machines is always below 0.2
>
> So here's my story of HA based on that setup:
>
> When we deployed the system we started the two servers, NOT using
> clustering. Their version was 1.5.2. This was mid 2009.
>
> Then we have 28 PHP machines publishing the messages to a SINGLE IP, using
> IP Failover (Heartbeat+LVS), this means that for the PHP publishers there's
> only one IP to connect-to/send-messages.


> Then we have 2 PHP machines consuming messages, but they connect directly
> to the IPs of the RabbitMQ servers, we do that to be sure that we connect
> directly to a specific broker.
>
> This also means that the queues, exchanges, bindings, etc, are all
> duplicated between the two servers.
>
> But there was a problem! We wanted to upgrade to the latest version of
> RabbitMQ which has a non compatible storage format, at least with our
> version of RabbitMQ.
>
> What we did was the following:
>
> The sysadmin took out of the load balancing one of the brokers, and we
> waited till the workers consumed all the messages. When their queues were
> empty, we shut down the server and did the upgrade. Then we put it back into
> the load balancer and repeated the process with the other broker.
>
> In this way we didn't lose any message.
>
> But we wanted to test the native RabbitMQ clustering...
>
> The sysadmin ran the commands from the Clustering Guide and we had the
> cluster up an running, until we had another problem...
>
> Sometimes the RabbitMQ sent the redirect response to the consumers, and
> told them, to connect to the other node, the problem we had here, is that
> RabbitMQ uses the node() function from Erlang, which for the way we have
> configured the /etc/hosts file, it was returning a node that was unreachable
> from outside (This was only happening to the consumers, because they connect
> directly to the RabbitMQ nodes).
>
> So here we did the same as before, we took one broker out of the load
> balancing, we took it out of the clustering, and put it back again, and the
> same thing with the other node.
>
> Again we didn't lose any message.
>
> Then on the connection configuration, we have a really simple .yml file to
> tell the PHP process where to connect, basically by providing an argument on
> the CLI.
>
> I hope this helps,
>


I will take a look about LVM now.. so I would like to do some questions that
I'm in doubt about your solution. Do you know what is the overhead using LVM
? How many messages per second do you have ? Do you use a persistent queue ?
If yes how did you to continue consume queue when one node is down ?

You are using a heartbeat, so how you share inter nodes the same disk ? NFS
? Storage ?

Thank you so much for your report it helps a lot.

Best wishes.


>
> Alvaro
>
>
>
>
>
> On Mar 18, 2010, at 7:57 PM, Gustavo Aquino wrote:
>
> > Hi,
> >
> > I have done this question before for many peoples, without success,
> because I don't found (Documentation, discussion lists and etc) any way to
> do High Availability with RabbitMQ without a lot of workaround, so exist a
> way to do HA with RabbitMQ without implementing a lot of stuffs by client
> side, like recreating queues when node down, recreating configurations,
> recreating client connections and etc ?
> >
> > What's recommendation from RabbitMQ to do HA ?
> >
> > Someone here have done some HA implementation to RabbitMQ ?
> >
> > Regards.
> >
> > Gustavo
> >
> > _______________________________________________
> > rabbitmq-discuss mailing list
> > rabbitmq-discuss at lists.rabbitmq.com
> > http://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss
>
>
> _______________________________________________
> rabbitmq-discuss mailing list
> rabbitmq-discuss at lists.rabbitmq.com
> http://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20100318/ce1ac412/attachment.htm 

From bmurphy1976 at gmail.com  Thu Mar 18 18:19:47 2010
From: bmurphy1976 at gmail.com (Bryan Murphy)
Date: Thu, 18 Mar 2010 13:19:47 -0500
Subject: [rabbitmq-discuss] Memory Leak in RabbitMQ .NET Driver v1.7.1+
Message-ID: <7fd310d11003181119j48f18026i252e9b32e3b27860@mail.gmail.com>

Sometime between 1.7.0 and 1.7.1 (revision 262) the following line was added
to ConnectionBase.MainLoop in the RabbitMQ .NET driver:

  Thread.GetDomain().DomainUnload += new EventHandler(HandleDomainUnload);

I've found no place in the code where this event is unregistered, leading to
a memory leak every time a connection is disposed.  The following reference
chain compounds this problem if you send large messages and create/dispose a
large number of connections:

  DomainUnload -> Connection -> SocketFrameHandler ->
NetworkBinaryReader/Writer -> BufferedStream

We're currently seeing the symptoms of this in our production environment
where one of our processes (which usually settles in around 300mb) grows
upwards of 4gig over a 12 to 18 hour period.

I believe you can work around this by either rolling back to the 1.7.0
driver, or commenting out that line of code.  We're currently pushing out a
custom build of the driver to verify this fix, but it will be a few hours
until I know for sure.

Thanks,
Bryan
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20100318/efe7efb4/attachment.htm 

From bmurphy1976 at gmail.com  Thu Mar 18 20:01:51 2010
From: bmurphy1976 at gmail.com (Bryan Murphy)
Date: Thu, 18 Mar 2010 15:01:51 -0500
Subject: [rabbitmq-discuss] Memory Leak in RabbitMQ .NET Driver v1.7.1+
In-Reply-To: <7fd310d11003181119j48f18026i252e9b32e3b27860@mail.gmail.com>
References: <7fd310d11003181119j48f18026i252e9b32e3b27860@mail.gmail.com>
Message-ID: <7fd310d11003181301j333caec5t4176dc8df8fd35ad@mail.gmail.com>

I just shut down the profiler in our production environment after running
for a few hours.  I can confirm that removing this line does in fact resolve
our memory leak.

Bryan

On Thu, Mar 18, 2010 at 1:19 PM, Bryan Murphy <bmurphy1976 at gmail.com> wrote:

> Sometime between 1.7.0 and 1.7.1 (revision 262) the following line was
> added to ConnectionBase.MainLoop in the RabbitMQ .NET driver:
>
>   Thread.GetDomain().DomainUnload += new EventHandler(HandleDomainUnload);
>
> I've found no place in the code where this event is unregistered, leading
> to a memory leak every time a connection is disposed.  The following
> reference chain compounds this problem if you send large messages and
> create/dispose a large number of connections:
>
>   DomainUnload -> Connection -> SocketFrameHandler ->
> NetworkBinaryReader/Writer -> BufferedStream
>
> We're currently seeing the symptoms of this in our production environment
> where one of our processes (which usually settles in around 300mb) grows
> upwards of 4gig over a 12 to 18 hour period.
>
> I believe you can work around this by either rolling back to the 1.7.0
> driver, or commenting out that line of code.  We're currently pushing out a
> custom build of the driver to verify this fix, but it will be a few hours
> until I know for sure.
>
> Thanks,
> Bryan
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20100318/09c4282f/attachment.htm 

From aquino.gustavo at gmail.com  Thu Mar 18 21:34:06 2010
From: aquino.gustavo at gmail.com (Gustavo Aquino)
Date: Thu, 18 Mar 2010 18:34:06 -0300
Subject: [rabbitmq-discuss] Increasing base memory.
In-Reply-To: <130B921E-7E72-4E1F-9BC8-6D020E430D25@gmail.com>
References: <5ef296b31003170512i50a79c9dm2afc0bb56e5be8db@mail.gmail.com>
	<20100317124443.GJ27749@mrnibble.lshift.net>
	<5ef296b31003170704y61c297e0p7e94b0d044204ffd@mail.gmail.com>
	<20100317142001.GB4039@mrnibble.lshift.net>
	<5ef296b31003170816u6372f3efu532a64d29f88c2bf@mail.gmail.com>
	<20100317152239.GF4039@mrnibble.lshift.net>
	<130B921E-7E72-4E1F-9BC8-6D020E430D25@gmail.com>
Message-ID: <5ef296b31003181434j72a265fdq97345aa44abe76c9@mail.gmail.com>

Anybody know any clue ? Rabbit don't run with more than 3Gb.

On Wed, Mar 17, 2010 at 1:30 PM, Gustavo Aquino <aquino.gustavo at gmail.com>wrote:

> Hi Matthew,
>
> This is one Red Hat Linux  64bits for ppc.
>
> I compiled Erlang in this environment, It should running in 64 bits.
>
>
> On 17/03/2010, at 12:22, Matthew Sackman <matthew at lshift.net> wrote:
>
>  Hi Gustavo,
>>
>> On Wed, Mar 17, 2010 at 12:16:05PM -0300, Gustavo Aquino wrote:
>>
>>> =INFO REPORT==== 16-Mar-2010::16:38:35 ===
>>> Memory limit set to 1638MB.
>>>
>>> Changing rabbitmq.config to [{rabbit, [{vm_memory_high_watermark,
>>> 0.8}]}].
>>> it's now getting only 3.2Gb...
>>>
>>> =INFO REPORT==== 17-Mar-2010::13:13:25 ===
>>> Memory limit set to 3276MB.
>>>
>>> Why ?
>>>
>>
>> Well I suspect Rabbit can't see all the memory. The likely cause for
>> this the OS is treating it as a 32-bit application.
>>
>> Which OS are you using, and is Erlang a 32-bit or 64-bit application on
>> it?
>>
>> Matthew
>>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20100318/aeaae4ff/attachment.htm 

From alexis.richardson at gmail.com  Thu Mar 18 21:39:35 2010
From: alexis.richardson at gmail.com (Alexis Richardson)
Date: Thu, 18 Mar 2010 21:39:35 +0000
Subject: [rabbitmq-discuss] Increasing base memory.
In-Reply-To: <5ef296b31003181434j72a265fdq97345aa44abe76c9@mail.gmail.com>
References: <5ef296b31003170512i50a79c9dm2afc0bb56e5be8db@mail.gmail.com>
	<20100317124443.GJ27749@mrnibble.lshift.net>
	<5ef296b31003170704y61c297e0p7e94b0d044204ffd@mail.gmail.com>
	<20100317142001.GB4039@mrnibble.lshift.net>
	<5ef296b31003170816u6372f3efu532a64d29f88c2bf@mail.gmail.com>
	<20100317152239.GF4039@mrnibble.lshift.net>
	<130B921E-7E72-4E1F-9BC8-6D020E430D25@gmail.com>
	<5ef296b31003181434j72a265fdq97345aa44abe76c9@mail.gmail.com>
Message-ID: <167204d21003181439m6f0f9df8x38c7a5e9ded2108@mail.gmail.com>

What do you mean?



On Thu, Mar 18, 2010 at 9:34 PM, Gustavo Aquino
<aquino.gustavo at gmail.com> wrote:
> Anybody know any clue ? Rabbit don't run with more than 3Gb.
>
> On Wed, Mar 17, 2010 at 1:30 PM, Gustavo Aquino <aquino.gustavo at gmail.com>
> wrote:
>>
>> Hi Matthew,
>>
>> This is one Red Hat Linux ?64bits for ppc.
>>
>> I compiled Erlang in this environment, It should running in 64 bits.
>>
>> On 17/03/2010, at 12:22, Matthew Sackman <matthew at lshift.net> wrote:
>>
>>> Hi Gustavo,
>>>
>>> On Wed, Mar 17, 2010 at 12:16:05PM -0300, Gustavo Aquino wrote:
>>>>
>>>> =INFO REPORT==== 16-Mar-2010::16:38:35 ===
>>>> Memory limit set to 1638MB.
>>>>
>>>> Changing rabbitmq.config to [{rabbit, [{vm_memory_high_watermark,
>>>> 0.8}]}].
>>>> it's now getting only 3.2Gb...
>>>>
>>>> =INFO REPORT==== 17-Mar-2010::13:13:25 ===
>>>> Memory limit set to 3276MB.
>>>>
>>>> Why ?
>>>
>>> Well I suspect Rabbit can't see all the memory. The likely cause for
>>> this the OS is treating it as a 32-bit application.
>>>
>>> Which OS are you using, and is Erlang a 32-bit or 64-bit application on
>>> it?
>>>
>>> Matthew
>
>
> _______________________________________________
> rabbitmq-discuss mailing list
> rabbitmq-discuss at lists.rabbitmq.com
> http://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss
>
>



From aquino.gustavo at gmail.com  Thu Mar 18 22:09:21 2010
From: aquino.gustavo at gmail.com (Gustavo Aquino)
Date: Thu, 18 Mar 2010 19:09:21 -0300
Subject: [rabbitmq-discuss] Increasing base memory.
In-Reply-To: <167204d21003181439m6f0f9df8x38c7a5e9ded2108@mail.gmail.com>
References: <5ef296b31003170512i50a79c9dm2afc0bb56e5be8db@mail.gmail.com>
	<20100317124443.GJ27749@mrnibble.lshift.net>
	<5ef296b31003170704y61c297e0p7e94b0d044204ffd@mail.gmail.com>
	<20100317142001.GB4039@mrnibble.lshift.net>
	<5ef296b31003170816u6372f3efu532a64d29f88c2bf@mail.gmail.com>
	<20100317152239.GF4039@mrnibble.lshift.net>
	<130B921E-7E72-4E1F-9BC8-6D020E430D25@gmail.com>
	<5ef296b31003181434j72a265fdq97345aa44abe76c9@mail.gmail.com>
	<167204d21003181439m6f0f9df8x38c7a5e9ded2108@mail.gmail.com>
Message-ID: <5ef296b31003181509j71e1ae50y54837722e9f20350@mail.gmail.com>

I have 128Gb RAM in my server, configuring Rabbit guided by documentation
vide this e-mail rabbit don't get more than 3Gb. and others 110Gb are free
on server, and RabbitMQ crash all the time when get this maximum memory
allocated ...




On Thu, Mar 18, 2010 at 6:39 PM, Alexis Richardson <
alexis.richardson at gmail.com> wrote:

> What do you mean?
>
>
>
> On Thu, Mar 18, 2010 at 9:34 PM, Gustavo Aquino
> <aquino.gustavo at gmail.com> wrote:
> > Anybody know any clue ? Rabbit don't run with more than 3Gb.
> >
> > On Wed, Mar 17, 2010 at 1:30 PM, Gustavo Aquino <
> aquino.gustavo at gmail.com>
> > wrote:
> >>
> >> Hi Matthew,
> >>
> >> This is one Red Hat Linux  64bits for ppc.
> >>
> >> I compiled Erlang in this environment, It should running in 64 bits.
> >>
> >> On 17/03/2010, at 12:22, Matthew Sackman <matthew at lshift.net> wrote:
> >>
> >>> Hi Gustavo,
> >>>
> >>> On Wed, Mar 17, 2010 at 12:16:05PM -0300, Gustavo Aquino wrote:
> >>>>
> >>>> =INFO REPORT==== 16-Mar-2010::16:38:35 ===
> >>>> Memory limit set to 1638MB.
> >>>>
> >>>> Changing rabbitmq.config to [{rabbit, [{vm_memory_high_watermark,
> >>>> 0.8}]}].
> >>>> it's now getting only 3.2Gb...
> >>>>
> >>>> =INFO REPORT==== 17-Mar-2010::13:13:25 ===
> >>>> Memory limit set to 3276MB.
> >>>>
> >>>> Why ?
> >>>
> >>> Well I suspect Rabbit can't see all the memory. The likely cause for
> >>> this the OS is treating it as a 32-bit application.
> >>>
> >>> Which OS are you using, and is Erlang a 32-bit or 64-bit application on
> >>> it?
> >>>
> >>> Matthew
> >
> >
> > _______________________________________________
> > rabbitmq-discuss mailing list
> > rabbitmq-discuss at lists.rabbitmq.com
> > http://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss
> >
> >
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20100318/e1657531/attachment.htm 

From matthew at lshift.net  Thu Mar 18 22:15:03 2010
From: matthew at lshift.net (Matthew Sackman)
Date: Thu, 18 Mar 2010 22:15:03 +0000
Subject: [rabbitmq-discuss] Increasing base memory.
In-Reply-To: <5ef296b31003181509j71e1ae50y54837722e9f20350@mail.gmail.com>
References: <5ef296b31003170512i50a79c9dm2afc0bb56e5be8db@mail.gmail.com>
	<20100317124443.GJ27749@mrnibble.lshift.net>
	<5ef296b31003170704y61c297e0p7e94b0d044204ffd@mail.gmail.com>
	<20100317142001.GB4039@mrnibble.lshift.net>
	<5ef296b31003170816u6372f3efu532a64d29f88c2bf@mail.gmail.com>
	<20100317152239.GF4039@mrnibble.lshift.net>
	<130B921E-7E72-4E1F-9BC8-6D020E430D25@gmail.com>
	<5ef296b31003181434j72a265fdq97345aa44abe76c9@mail.gmail.com>
	<167204d21003181439m6f0f9df8x38c7a5e9ded2108@mail.gmail.com>
	<5ef296b31003181509j71e1ae50y54837722e9f20350@mail.gmail.com>
Message-ID: <20100318221502.GA9208@wellquite.org>

On Thu, Mar 18, 2010 at 07:09:21PM -0300, Gustavo Aquino wrote:
> I have 128Gb RAM in my server, configuring Rabbit guided by documentation
> vide this e-mail rabbit don't get more than 3Gb. and others 110Gb are free
> on server, and RabbitMQ crash all the time when get this maximum memory
> allocated ...

Can you give me an ssh account onto this machine? I really can't diagnose
this any further without access to the machine. Rabbit simply looks up and
parses /proc/meminfo on linux so I have no idea why it's then apparently
making the wrong decisions. What is the output of cat /proc/meminfo?

Matthew



From matthew at lshift.net  Thu Mar 18 23:00:02 2010
From: matthew at lshift.net (Matthew Sackman)
Date: Thu, 18 Mar 2010 23:00:02 +0000
Subject: [rabbitmq-discuss] Memory Leak in RabbitMQ .NET Driver v1.7.1+
In-Reply-To: <7fd310d11003181301j333caec5t4176dc8df8fd35ad@mail.gmail.com>
References: <7fd310d11003181119j48f18026i252e9b32e3b27860@mail.gmail.com>
	<7fd310d11003181301j333caec5t4176dc8df8fd35ad@mail.gmail.com>
Message-ID: <20100318230002.GB9208@wellquite.org>

On Thu, Mar 18, 2010 at 03:01:51PM -0500, Bryan Murphy wrote:
> I just shut down the profiler in our production environment after running
> for a few hours.  I can confirm that removing this line does in fact resolve
> our memory leak.

Many thanks for this report Bryan. There was a definite reason for that line
of code being there. We'll just have to work out where to unregister it so
as to prevent the leak.

Matthew



From videlalvaro at gmail.com  Fri Mar 19 05:38:39 2010
From: videlalvaro at gmail.com (Alvaro Videla)
Date: Fri, 19 Mar 2010 13:38:39 +0800
Subject: [rabbitmq-discuss] High Availability
In-Reply-To: <5ef296b31003180859k6ce1d8cp91705810e88e570d@mail.gmail.com>
References: <5ef296b31003180457u490e9d0dqa44509f5fac96706@mail.gmail.com>
	<88755242-232A-4B88-BC4C-6C712B72E7CF@gmail.com>
	<4dda437c1003180817la64511eif0b040e0f42ce23a@mail.gmail.com>
	<5ef296b31003180859k6ce1d8cp91705810e88e570d@mail.gmail.com>
Message-ID: <37F6F302-4420-4B9C-8DE1-0607CD6C47A0@gmail.com>

Gustavo,

1) We haven't benchmarked the overhead of using LVS

2) As you can find out from our numbers, not that much, and it's hard to tell, since during peak time we have 20.000 concurrent users, but maybe in the morning the are only 5000. And at the end it depends on what they do on the site. Soon we plan to add other 300.000 messages a day.

3) The queues are persistent. 

This means that if one node is out of the LVS, anyway we can reach that node by it's exact IP. In our setup that node won't receive more messages ?because the publishers connect to the LVS IP?, but we are able to consume the old ones.

4) We don't share storage. 1 message will go to one queue, there's no replication. The sysadmin is working on solving that. I prefer to try something "native" i.e.: provided or implemented inside RabbitMQ. He's researching some Linux technologies for filesystems.

Regards,

Alvaro

P. S. My second name is Gustavo, so this feels like replying to myself :)

On Mar 18, 2010, at 11:59 PM, Gustavo Aquino wrote:

> Alvaro,
> 
> Thank you so much to report your experience.
> 
> I will take a look about LVM now.. so I would like to do some questions that I'm in doubt about your solution. Do you know what is the overhead using LVM ? How many messages per second do you have ? Do you use a persistent queue ? If yes how did you to continue consume queue when one node is down ?
> 
> You are using a heartbeat, so how you share inter nodes the same disk ? NFS ? Storage ?
> 
> Thank you so much for your report it helps a lot.
> 
> Best wishes. 
> 
> On Thu, Mar 18, 2010 at 12:17 PM, Alvaro Videla <videlalvaro at gmail.com> wrote:
> Sorry, It's me again, forgot to add something :)
> 
> That LVS setup was live tested when we got the dreaded out of memory problem, when the Erlang VM just crash shutting down the RabbitMQ node. One of the brokers went down, but we continued working from the other.
> 
> After that we decided to finally upgrade our RabbitMQ server to the latest version
> 
> 
> On Thu, Mar 18, 2010 at 11:05 PM, Alvaro Videla <videlalvaro at gmail.com> wrote:
> Hi,
> 
> After some feedback by @etrepum at Twitter, I feel that what I commented needs some more details, so I did some research about LVS, since that set up was done by one of our sysadmins.
> 
> You can check about a LVS setup here: 
> 
> http://www.ibiblio.org/oswg/oswg-nightly/oswg/en_US.ISO_8859-1/articles/cluster-howto/cluster-howto/index.html
> 
> From that page:
> 
> "the role of the active router is to redirect service requests from the virtual server address to the real servers." [...] 
> 
> "The active router dynamically monitors the health of the real servers, and the workload on each." [...] 
> 
> "If a real server becomes disabled, the active router stops sending jobs to the server until it returns to normal operation."
> 
> I hope this mails clarifies things up,
> 
> Alvaro
> 
> 
> On Mar 18, 2010, at 7:57 PM, Gustavo Aquino wrote:
> 
>> Hi,
>> 
>> I have done this question before for many peoples, without success, because I don't found (Documentation, discussion lists and etc) any way to do High Availability with RabbitMQ without a lot of workaround, so exist a way to do HA with RabbitMQ without implementing a lot of stuffs by client side, like recreating queues when node down, recreating configurations, recreating client connections and etc ?
>> 
>> What's recommendation from RabbitMQ to do HA ?
>> 
>> Someone here have done some HA implementation to RabbitMQ ?
>> 
>> Regards.
>> 
>> Gustavo
>> 
>> _______________________________________________
>> rabbitmq-discuss mailing list
>> rabbitmq-discuss at lists.rabbitmq.com
>> http://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss
> 
> 
> 
> _______________________________________________
> rabbitmq-discuss mailing list
> rabbitmq-discuss at lists.rabbitmq.com
> http://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss
> 
> 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20100319/e41bd53f/attachment.htm 

From aquino.gustavo at gmail.com  Fri Mar 19 16:22:07 2010
From: aquino.gustavo at gmail.com (Gustavo Aquino)
Date: Fri, 19 Mar 2010 13:22:07 -0300
Subject: [rabbitmq-discuss] High Availability
In-Reply-To: <37F6F302-4420-4B9C-8DE1-0607CD6C47A0@gmail.com>
References: <5ef296b31003180457u490e9d0dqa44509f5fac96706@mail.gmail.com>
	<88755242-232A-4B88-BC4C-6C712B72E7CF@gmail.com>
	<4dda437c1003180817la64511eif0b040e0f42ce23a@mail.gmail.com>
	<5ef296b31003180859k6ce1d8cp91705810e88e570d@mail.gmail.com>
	<37F6F302-4420-4B9C-8DE1-0607CD6C47A0@gmail.com>
Message-ID: <5ef296b31003190922q41e56471k30f1785801cfe938@mail.gmail.com>

Gustavo, oooops Alvaro ;-),

Thanks for informations.

Regards.

On Fri, Mar 19, 2010 at 2:38 AM, Alvaro Videla <videlalvaro at gmail.com>wrote:

> Gustavo,
>
> 1) We haven't benchmarked the overhead of using LVS
>
> 2) As you can find out from our numbers, not that much, and it's hard to
> tell, since during peak time we have 20.000 concurrent users, but maybe in
> the morning the are only 5000. And at the end it depends on what they do on
> the site. Soon we plan to add other 300.000 messages a day.
>
> 3) The queues are persistent.
>
> This means that if one node is out of the LVS, anyway we can reach that
> node by it's exact IP. In our setup that node won't receive more messages
> ?because the publishers connect to the LVS IP?, but we are able to consume
> the old ones.
>
> 4) We don't share storage. 1 message will go to one queue, there's no
> replication. The sysadmin is working on solving that. I prefer to try
> something "native" i.e.: provided or implemented inside RabbitMQ. He's
> researching some Linux technologies for filesystems.
>
> Regards,
>
> Alvaro
>
> P. S. My second name is Gustavo, so this feels like replying to myself :)
>
> On Mar 18, 2010, at 11:59 PM, Gustavo Aquino wrote:
>
> Alvaro,
>
> Thank you so much to report your experience.
>
> I will take a look about LVM now.. so I would like to do some questions
> that I'm in doubt about your solution. Do you know what is the overhead
> using LVM ? How many messages per second do you have ? Do you use a
> persistent queue ? If yes how did you to continue consume queue when one
> node is down ?
>
> You are using a heartbeat, so how you share inter nodes the same disk ? NFS
> ? Storage ?
>
> Thank you so much for your report it helps a lot.
>
> Best wishes.
>
> On Thu, Mar 18, 2010 at 12:17 PM, Alvaro Videla <videlalvaro at gmail.com>wrote:
>
>> Sorry, It's me again, forgot to add something :)
>>
>> That LVS setup was live tested when we got the dreaded out of memory
>> problem, when the Erlang VM just crash shutting down the RabbitMQ node. One
>> of the brokers went down, but we continued working from the other.
>>
>> After that we decided to finally upgrade our RabbitMQ server to the latest
>> version
>>
>>
>> On Thu, Mar 18, 2010 at 11:05 PM, Alvaro Videla <videlalvaro at gmail.com>wrote:
>>
>>> Hi,
>>>
>>> After some feedback by @etrepum at Twitter, I feel that what I commented
>>> needs some more details, so I did some research about LVS, since that set up
>>> was done by one of our sysadmins.
>>>
>>> You can check about a LVS setup here:
>>>
>>>
>>> http://www.ibiblio.org/oswg/oswg-nightly/oswg/en_US.ISO_8859-1/articles/cluster-howto/cluster-howto/index.html
>>>
>>> From that page:
>>>
>>> "the role of the *active router* is to redirect service requests from
>>> the virtual server address to the real servers." [...]
>>>
>>> "The active router dynamically monitors the health of the real servers,
>>> and the workload on each." [...]
>>>
>>> "If a real server becomes disabled, the active router stops sending jobs
>>> to the server until it returns to normal operation."
>>>
>>> I hope this mails clarifies things up,
>>>
>>> Alvaro
>>>
>>>
>>> On Mar 18, 2010, at 7:57 PM, Gustavo Aquino wrote:
>>>
>>> Hi,
>>>
>>> I have done this question before for many peoples, without success,
>>> because I don't found (Documentation, discussion lists and etc) any way to
>>> do High Availability with RabbitMQ without a lot of workaround, so exist a
>>> way to do HA with RabbitMQ without implementing a lot of stuffs by client
>>> side, like recreating queues when node down, recreating configurations,
>>> recreating client connections and etc ?
>>>
>>> What's recommendation from RabbitMQ to do HA ?
>>>
>>> Someone here have done some HA implementation to RabbitMQ ?
>>>
>>> Regards.
>>>
>>> Gustavo
>>>
>>> _______________________________________________
>>> rabbitmq-discuss mailing list
>>> rabbitmq-discuss at lists.rabbitmq.com
>>> http://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss
>>>
>>>
>>>
>>
>> _______________________________________________
>> rabbitmq-discuss mailing list
>> rabbitmq-discuss at lists.rabbitmq.com
>> http://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss
>>
>>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20100319/e86006e0/attachment.htm 

From msteele at beringmedia.com  Fri Mar 19 19:32:15 2010
From: msteele at beringmedia.com (Mark Steele)
Date: Fri, 19 Mar 2010 15:32:15 -0400
Subject: [rabbitmq-discuss] High Availability
In-Reply-To: <37F6F302-4420-4B9C-8DE1-0607CD6C47A0@gmail.com>
References: <5ef296b31003180457u490e9d0dqa44509f5fac96706@mail.gmail.com> 
	<88755242-232A-4B88-BC4C-6C712B72E7CF@gmail.com>
	<4dda437c1003180817la64511eif0b040e0f42ce23a@mail.gmail.com> 
	<5ef296b31003180859k6ce1d8cp91705810e88e570d@mail.gmail.com> 
	<37F6F302-4420-4B9C-8DE1-0607CD6C47A0@gmail.com>
Message-ID: <aa3794b1003191232w6bea5c5ek16efd244e5004113@mail.gmail.com>

If you are looking for high availability, the only way that I am aware of is
to use something like DRBD (or SAN backed storage) along with a cluster
resource manager (eg: corosync/heartbeat/etc) and make all your messages
durable and persist to disk.

You can then scale clusters (eg multiple 2-node clusters) for reaching scale
using Erlang's native cluster capabilities without sacrificing on high
availability. A load balancer won't help with HA unless you have some
mechanism for ensuring messages replicate between nodes.

Mark Steele
Director of development
Bering Media Inc.



On Fri, Mar 19, 2010 at 1:38 AM, Alvaro Videla <videlalvaro at gmail.com>wrote:

> Gustavo,
>
> 1) We haven't benchmarked the overhead of using LVS
>
> 2) As you can find out from our numbers, not that much, and it's hard to
> tell, since during peak time we have 20.000 concurrent users, but maybe in
> the morning the are only 5000. And at the end it depends on what they do on
> the site. Soon we plan to add other 300.000 messages a day.
>
> 3) The queues are persistent.
>
> This means that if one node is out of the LVS, anyway we can reach that
> node by it's exact IP. In our setup that node won't receive more messages
> ?because the publishers connect to the LVS IP?, but we are able to consume
> the old ones.
>
> 4) We don't share storage. 1 message will go to one queue, there's no
> replication. The sysadmin is working on solving that. I prefer to try
> something "native" i.e.: provided or implemented inside RabbitMQ. He's
> researching some Linux technologies for filesystems.
>
> Regards,
>
> Alvaro
>
> P. S. My second name is Gustavo, so this feels like replying to myself :)
>
> On Mar 18, 2010, at 11:59 PM, Gustavo Aquino wrote:
>
> Alvaro,
>
> Thank you so much to report your experience.
>
> I will take a look about LVM now.. so I would like to do some questions
> that I'm in doubt about your solution. Do you know what is the overhead
> using LVM ? How many messages per second do you have ? Do you use a
> persistent queue ? If yes how did you to continue consume queue when one
> node is down ?
>
> You are using a heartbeat, so how you share inter nodes the same disk ? NFS
> ? Storage ?
>
> Thank you so much for your report it helps a lot.
>
> Best wishes.
>
> On Thu, Mar 18, 2010 at 12:17 PM, Alvaro Videla <videlalvaro at gmail.com>wrote:
>
>> Sorry, It's me again, forgot to add something :)
>>
>> That LVS setup was live tested when we got the dreaded out of memory
>> problem, when the Erlang VM just crash shutting down the RabbitMQ node. One
>> of the brokers went down, but we continued working from the other.
>>
>> After that we decided to finally upgrade our RabbitMQ server to the latest
>> version
>>
>>
>> On Thu, Mar 18, 2010 at 11:05 PM, Alvaro Videla <videlalvaro at gmail.com>wrote:
>>
>>> Hi,
>>>
>>> After some feedback by @etrepum at Twitter, I feel that what I commented
>>> needs some more details, so I did some research about LVS, since that set up
>>> was done by one of our sysadmins.
>>>
>>> You can check about a LVS setup here:
>>>
>>>
>>> http://www.ibiblio.org/oswg/oswg-nightly/oswg/en_US.ISO_8859-1/articles/cluster-howto/cluster-howto/index.html
>>>
>>> From that page:
>>>
>>> "the role of the *active router* is to redirect service requests from
>>> the virtual server address to the real servers." [...]
>>>
>>> "The active router dynamically monitors the health of the real servers,
>>> and the workload on each." [...]
>>>
>>> "If a real server becomes disabled, the active router stops sending jobs
>>> to the server until it returns to normal operation."
>>>
>>> I hope this mails clarifies things up,
>>>
>>> Alvaro
>>>
>>>
>>> On Mar 18, 2010, at 7:57 PM, Gustavo Aquino wrote:
>>>
>>> Hi,
>>>
>>> I have done this question before for many peoples, without success,
>>> because I don't found (Documentation, discussion lists and etc) any way to
>>> do High Availability with RabbitMQ without a lot of workaround, so exist a
>>> way to do HA with RabbitMQ without implementing a lot of stuffs by client
>>> side, like recreating queues when node down, recreating configurations,
>>> recreating client connections and etc ?
>>>
>>> What's recommendation from RabbitMQ to do HA ?
>>>
>>> Someone here have done some HA implementation to RabbitMQ ?
>>>
>>> Regards.
>>>
>>> Gustavo
>>>
>>> _______________________________________________
>>> rabbitmq-discuss mailing list
>>> rabbitmq-discuss at lists.rabbitmq.com
>>> http://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss
>>>
>>>
>>>
>>
>> _______________________________________________
>> rabbitmq-discuss mailing list
>> rabbitmq-discuss at lists.rabbitmq.com
>> http://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss
>>
>>
>
>
> _______________________________________________
> rabbitmq-discuss mailing list
> rabbitmq-discuss at lists.rabbitmq.com
> http://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20100319/0eab6acc/attachment.htm 

From richard at redspider.co.nz  Sat Mar 20 14:06:45 2010
From: richard at redspider.co.nz (Richard Clark)
Date: Sun, 21 Mar 2010 03:06:45 +1300
Subject: [rabbitmq-discuss] Adapter merges tornado and pika
In-Reply-To: <mailman.453.1269093411.22012.rabbitmq-discuss@lists.rabbitmq.com>
References: <mailman.453.1269093411.22012.rabbitmq-discuss@lists.rabbitmq.com>
Message-ID: <7be5ca0b1003200706v2b7fbd85oc2e3c7d0f4d80746@mail.gmail.com>

Ok, I'm half asleep so I'll make this quick. After fighting with
numerous strategies for melding tornado and rabbitmq in a way that
doesn't involve spawning extra processes, mangling my interpreter,
going anywhere near twisted, mangling my ability to dispatch properly
off multiple queues on a single channel etc, I finally managed
something that, at least for first appearances, works.

The changes are fairly simple. Tornado needs one 2 line change to
ioloop to allow it to run a loop once, rather than spinning - sadly
attempts to do it without this change caused nightmarish bugs to
emerge.

In addition to that, two files (attached, no warranty etc etc) are
required:

asyncloop.py, an ioloop handler that mostly pretends to be an asyncore
dispatcher
ioloop_adapter.py, an adapter almost exactly like the
asyncore_adapter.py in pika, except it uses the asyncloop and gets rid
of some crap (and, unfortunately, timers, but they're easy to put back
using ioloop stuff)

In no way is this production code, it's barely even tested. I intend
to try and get it further in that direction tomorrow, but in case
anyone else has been banging their head on the same problem I figured
I'd throw the strategy out there.

Files:
http://gist.github.com/338680

Example:
http://gist.github.com/338683 (requires an amqp echo service on echo/
echo)

cross-posting to tornado as well.



From matthias at lshift.net  Sun Mar 21 12:04:22 2010
From: matthias at lshift.net (Matthias Radestock)
Date: Sun, 21 Mar 2010 12:04:22 +0000
Subject: [rabbitmq-discuss] rabiit-c library, properies is not set
In-Reply-To: <E1NryEb-0003bf-00.akalend-mail-ru@f8.mail.ru>
References: <E1NryEb-0003bf-00.akalend-mail-ru@f8.mail.ru>
Message-ID: <4BA60B46.8060207@lshift.net>

Alexandre,

Alexandre Kalendarev wrote:
> Ok,
> 
> As the set the property I understand, but
> what is the property?
>  amqp_bytes_t correlation_id;
>  amqp_bytes_t reply_to;
>  amqp_table_t headers;

The use of the basic properties is entirely up to the application. The 
RabbitMQ server neither looks at them nor sets them; it simply passes 
them through.


Matthias.



From matthias at lshift.net  Sun Mar 21 12:10:01 2010
From: matthias at lshift.net (Matthias Radestock)
Date: Sun, 21 Mar 2010 12:10:01 +0000
Subject: [rabbitmq-discuss] database transaction
In-Reply-To: <27942664.post@talk.nabble.com>
References: <27932801.post@talk.nabble.com>	<20100317150057.GE4039@mrnibble.lshift.net>
	<27942664.post@talk.nabble.com>
Message-ID: <4BA60C99.3060808@lshift.net>

Tomek,

Tomek Rozen wrote:
> If there was some kind of ID on each message then the ID could be
> saved in the DB on the same transaction as the message's object. Then
> duplicates could be filtered on a per-message basis, as opposed to per
> object. However, I'm not aware of any kind of a message ID in rabbit
> that could be used. Can you think of anything?

You could get the publisher to generate the id and stick it in the 
message-id basic property.

Regards,

Matthias.



From pdezwart at rubiconproject.com  Sun Mar 21 19:08:23 2010
From: pdezwart at rubiconproject.com (Pieter de Zwart)
Date: Sun, 21 Mar 2010 12:08:23 -0700
Subject: [rabbitmq-discuss] PHP Rabbit Extension
In-Reply-To: <4BA60C99.3060808@lshift.net>
Message-ID: <C7CBBCB7.773B%pdezwart@rubiconproject.com>

Hey guys,

We just released rev87 of the php-rabbit extension for PHP.
I think it is getting close to being production ready, but I was hoping
others might want to give it a try before we pull it out of alpha, because I
know that there are still some bugs somewhere.
The release can be found here: http://code.google.com/p/php-rabbit/

Thanks,
Pieter
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20100321/d4e6fb19/attachment.htm 

From scott.mohekey at telogis.com  Sun Mar 21 22:26:24 2010
From: scott.mohekey at telogis.com (Scott Mohekey)
Date: Mon, 22 Mar 2010 11:26:24 +1300
Subject: [rabbitmq-discuss] New Persister
Message-ID: <a108f5c11003211526v5687c0dbnc90f4d43b05e7107@mail.gmail.com>

I'm trying to find out when the new persister will be available. I've seen
mention that it was to be ready by July of last year (
http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/2009-June/003667.html),
and further mention in November of it not being ready yet (
http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/2009-November/005386.html
).

The reason I ask is that we are attempting to publish ~1000 msgs/sec on a
single rabbit node, in a persisted queue. The queue is then read by a java
app on a geographically distant server over the internet, using
basic.consume. We also require transactional consumption, so currently wrap
a batch of X (500 for example) messages in a transaction, acking the last
one (passing true to ack multiple). We have qos set to batch size * 2 (1000
in the above example).

We're only managing to get something like 50 or so msgs/sec at the moment.
The consumption of the messages is slow, but the tx.commit varies in speed
from a second to many (sometimes even as long as a minute).

The version of rabbitmq we currently have installed is 1.7.0. We are
planning to test with 1.7.2 later today to see if this helps any.

What are we doing wrong?

Scott Mohekey
Systems/Application Specialist ? Fleet ? Telogis, Inc.
www.telogis.com  www.telogis.co.nz
+1 949 625-4115 ext. 207 (USA)  +64 3339 2825 x207 (NZ)

Leading Global Platform for Location Based Services
--
This e-mail, and any attachments, is intended only for use by the
addressee(s) named herein and may contain legally privileged and/or
confidential information.  It is the property of Telogis.  If you are not
the intended recipient of this e-mail, you are hereby notified that any
dissemination, distribution or copying of this e-mail, any attachments
thereto, and use of the information contained, is strictly prohibited.  If
you have received this e-mail in error, please notify the sender and
permanently delete the original and any copy there of.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20100322/962ecf03/attachment.htm 

From matthew at lshift.net  Sun Mar 21 22:58:27 2010
From: matthew at lshift.net (Matthew Sackman)
Date: Sun, 21 Mar 2010 22:58:27 +0000
Subject: [rabbitmq-discuss] New Persister
In-Reply-To: <a108f5c11003211526v5687c0dbnc90f4d43b05e7107@mail.gmail.com>
References: <a108f5c11003211526v5687c0dbnc90f4d43b05e7107@mail.gmail.com>
Message-ID: <20100321225826.GA26638@wellquite.org>

On Mon, Mar 22, 2010 at 11:26:24AM +1300, Scott Mohekey wrote:
> I'm trying to find out when the new persister will be available.

Me too!

> I've seen
> mention that it was to be ready by July of last year (
> http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/2009-June/003667.html),
> and further mention in November of it not being ready yet (
> http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/2009-November/005386.html
> ).

Yes. Though the "new persister" was in very different states at both of
occasions.

> The reason I ask is that we are attempting to publish ~1000 msgs/sec on a
> single rabbit node, in a persisted queue. The queue is then read by a java
> app on a geographically distant server over the internet, using
> basic.consume. We also require transactional consumption, so currently wrap
> a batch of X (500 for example) messages in a transaction, acking the last
> one (passing true to ack multiple). We have qos set to batch size * 2 (1000
> in the above example).
> 
> We're only managing to get something like 50 or so msgs/sec at the moment.
> The consumption of the messages is slow, but the tx.commit varies in speed
> from a second to many (sometimes even as long as a minute).

Many things can affect this. Are the publishes coming from a single
publisher client or from many clients? Are all the publishes going to
the same queue or to several different queues? How big are the messages
that you're publishing and which client library / language are you
using?

> The version of rabbitmq we currently have installed is 1.7.0. We are
> planning to test with 1.7.2 later today to see if this helps any.
> 
> What are we doing wrong?

The new persister is much better (at least an order of magnitude, and
frequently several, depending on workload) at transactions. I would
suggest you try compiling from source and using that. There are several
people on this list who have been using the new persister with good
success. There are occasionally bugs found, but we tend to fix them
within hours.

There haven't really been any new features added to the new persister
for a few months - it has been solidifying nicely. However, the diff
from the current default branch to the new persister branch (bug21673)
shows the addition of 7000 lines of code. This is the reason why it is
taking a long time to get through QA - not because it's buggy or faults
are being found, but simply because it is a lot of very complex code.

If you do choose to use the new persister, try to ensure the following:
1) Try to make sure nothing else is writing to the disk that Rabbit is
using - Rabbit is pretty good at managing the position of the disk head,
but that tends to go wrong if other applications are writing at the same
time.
2) Ensure plenty of free RAM so the OS can use it as disk cache. This
means a lot of reads can be satisfied without going all the way to disk.
3) You may wish to investigate different file systems - e.g. Matthias's
desktop, Ubuntu, using ext4, gets a pitiful 9 transactions a second,
where as my rather more carefully tuned debian sid system gets 500
txns/sec on an ext3 disk, and 1100 on an ext4 SSD. See the thread at
http://old.nabble.com/limit-number-of-messages-buffered-in-memory-in-new-persister-td27753311.html
4) SSDs can go much faster for txns because their fsync cost is very
very low.
5) Publishing in parallel (several producers, all issuing txns
individually) will get you even better performance.

Matthew



From tomek.rozen+rabbitmq at gmail.com  Sun Mar 21 23:17:05 2010
From: tomek.rozen+rabbitmq at gmail.com (=?UTF-8?B?VG9tZWsgUm/FvGVu?=)
Date: Mon, 22 Mar 2010 00:17:05 +0100
Subject: [rabbitmq-discuss] database transaction
In-Reply-To: <4BA60C99.3060808@lshift.net>
References: <27932801.post@talk.nabble.com>
	<20100317150057.GE4039@mrnibble.lshift.net>
	<27942664.post@talk.nabble.com> <4BA60C99.3060808@lshift.net>
Message-ID: <dcad41411003211617o19c34db5h559b50bb13ff3147@mail.gmail.com>

On Sun, Mar 21, 2010 at 1:10 PM, Matthias Radestock <matthias at lshift.net> wrote:
> Tomek,
>
> Tomek Rozen wrote:
>>
>> If there was some kind of ID on each message then the ID could be
>> saved in the DB on the same transaction as the message's object. Then
>> duplicates could be filtered on a per-message basis, as opposed to per
>> object. However, I'm not aware of any kind of a message ID in rabbit
>> that could be used. Can you think of anything?
>
> You could get the publisher to generate the id and stick it in the
> message-id basic property.

That's true, though it might be difficult if you have multiple
producers. It would be helpful if a queue would assign consecutive Ids
on insert.
Anyway, thanks for your help.

Tomek



From scott.mohekey at telogis.com  Mon Mar 22 01:29:52 2010
From: scott.mohekey at telogis.com (Scott Mohekey)
Date: Mon, 22 Mar 2010 14:29:52 +1300
Subject: [rabbitmq-discuss] New Persister
In-Reply-To: <20100321225826.GA26638@wellquite.org>
References: <a108f5c11003211526v5687c0dbnc90f4d43b05e7107@mail.gmail.com>
	<20100321225826.GA26638@wellquite.org>
Message-ID: <a108f5c11003211829v32351c0m1968abed9399704c@mail.gmail.com>

Reply inline below:

Scott Mohekey
Systems/Application Specialist ? Fleet ? Telogis, Inc.
www.telogis.com  www.telogis.co.nz
+1 949 625-4115 ext. 207 (USA)  +64 3339 2825 x207 (NZ)

Leading Global Platform for Location Based Services
--
This e-mail, and any attachments, is intended only for use by the
addressee(s) named herein and may contain legally privileged and/or
confidential information.  It is the property of Telogis.  If you are not
the intended recipient of this e-mail, you are hereby notified that any
dissemination, distribution or copying of this e-mail, any attachments
thereto, and use of the information contained, is strictly prohibited.  If
you have received this e-mail in error, please notify the sender and
permanently delete the original and any copy there of.


On Mon, Mar 22, 2010 at 11:58 AM, Matthew Sackman <matthew at lshift.net>wrote:

> On Mon, Mar 22, 2010 at 11:26:24AM +1300, Scott Mohekey wrote:
> > I'm trying to find out when the new persister will be available.
>
> Me too!
>
> > I've seen
> > mention that it was to be ready by July of last year (
> >
> http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/2009-June/003667.html
> ),
> > and further mention in November of it not being ready yet (
> >
> http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/2009-November/005386.html
> > ).
>
> Yes. Though the "new persister" was in very different states at both of
> occasions.
>
> > The reason I ask is that we are attempting to publish ~1000 msgs/sec on a
> > single rabbit node, in a persisted queue. The queue is then read by a
> java
> > app on a geographically distant server over the internet, using
> > basic.consume. We also require transactional consumption, so currently
> wrap
> > a batch of X (500 for example) messages in a transaction, acking the last
> > one (passing true to ack multiple). We have qos set to batch size * 2
> (1000
> > in the above example).
> >
> > We're only managing to get something like 50 or so msgs/sec at the
> moment.
> > The consumption of the messages is slow, but the tx.commit varies in
> speed
> > from a second to many (sometimes even as long as a minute).
>
> Many things can affect this. Are the publishes coming from a single
> publisher client or from many clients? Are all the publishes going to
> the same queue or to several different queues? How big are the messages
> that you're publishing and which client library / language are you
> using?
>
>
We have a single publisher, with 10 production queues which are duplicated
for testing (so 20 queues all up). All of these queues are persistent.

We use a topic exchange, with messages being routed to one or more of the
queues.

The publisher uses the .net client and does no transactions, while the
consumer uses the java client and wraps batches of messages in transactions.


> > The version of rabbitmq we currently have installed is 1.7.0. We are
> > planning to test with 1.7.2 later today to see if this helps any.
> >
> > What are we doing wrong?
>
> The new persister is much better (at least an order of magnitude, and
> frequently several, depending on workload) at transactions. I would
> suggest you try compiling from source and using that. There are several
> people on this list who have been using the new persister with good
> success. There are occasionally bugs found, but we tend to fix them
> within hours.
>
> There haven't really been any new features added to the new persister
> for a few months - it has been solidifying nicely. However, the diff
> from the current default branch to the new persister branch (bug21673)
> shows the addition of 7000 lines of code. This is the reason why it is
> taking a long time to get through QA - not because it's buggy or faults
> are being found, but simply because it is a lot of very complex code.
>
> If you do choose to use the new persister, try to ensure the following:
> 1) Try to make sure nothing else is writing to the disk that Rabbit is
> using - Rabbit is pretty good at managing the position of the disk head,
> but that tends to go wrong if other applications are writing at the same
> time.
>

We have our instance of Rabbit running on a XenCenter vm, using shared fibre
storage. Is this going to be a problem?


> 2) Ensure plenty of free RAM so the OS can use it as disk cache. This
> means a lot of reads can be satisfied without going all the way to disk.
>
We have given the vm 8 gigs at the moment.


> 3) You may wish to investigate different file systems - e.g. Matthias's
> desktop, Ubuntu, using ext4, gets a pitiful 9 transactions a second,
> where as my rather more carefully tuned debian sid system gets 500
> txns/sec on an ext3 disk, and 1100 on an ext4 SSD. See the thread at
>
> http://old.nabble.com/limit-number-of-messages-buffered-in-memory-in-new-persister-td27753311.html


We're using ext3.


>
> 4) SSDs can go much faster for txns because their fsync cost is very
> very low.
> 5) Publishing in parallel (several producers, all issuing txns
> individually) will get you even better performance.
>

Will this make a difference even though we're not using transactions on the
publishing side?

Also, it seems to me that the slow throughput is on the consumer side.
Queues have no problem filling up with messages, faster than the consumers
can keep up with them.

Matthew
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20100322/3c9bfea6/attachment.htm 

From matthew at lshift.net  Mon Mar 22 11:24:28 2010
From: matthew at lshift.net (Matthew Sackman)
Date: Mon, 22 Mar 2010 11:24:28 +0000
Subject: [rabbitmq-discuss] New Persister
In-Reply-To: <2545a92c1003211851lba61dfenc6952f23965fda90@mail.gmail.com>
References: <a108f5c11003211526v5687c0dbnc90f4d43b05e7107@mail.gmail.com>
	<20100321225826.GA26638@wellquite.org>
	<2545a92c1003211851lba61dfenc6952f23965fda90@mail.gmail.com>
Message-ID: <20100322112428.GA19832@mrnibble.lshift.net>

Hi Jeremy,

On Sun, Mar 21, 2010 at 08:51:19PM -0500, Jeremy Dunck wrote:
> On Sun, Mar 21, 2010 at 5:58 PM, Matthew Sackman <matthew at lshift.net> wrote:
> ...
> > If you do choose to use the new persister, try to ensure the following:
> > 1) Try to make sure nothing else is writing to the disk that Rabbit is
> > using - Rabbit is pretty good at managing the position of the disk head,
> > but that tends to go wrong if other applications are writing at the same
> > time.
> 
> Sorry, this sort of confuses me.  I are you saying that in order to
> get best performance, Rabbit should be used with no apps using the
> same disk?  Or are you saying app-level bugs might occur if Rabbit is
> used with other apps using the same disk?
> 
> If you're just saying that sequential IO is faster and Rabbit tries to
> minimized seeks - sure, OK.  If it's the latter -- that you're
> literally managing the drive head -- can you elaborate on that
> decision?

It's the former. We mainly optimise by making sure that writes are
always append (so you should be able to get the full bandwidth of your
hard disc - fsync's permitting). The disk access patterns *should* be
sufficiently straight forward enough that OS disk prefetching and
caching works very well for reads.

Matthew



From matthew at lshift.net  Mon Mar 22 12:11:42 2010
From: matthew at lshift.net (Matthew Sackman)
Date: Mon, 22 Mar 2010 12:11:42 +0000
Subject: [rabbitmq-discuss] High Availability
In-Reply-To: <aa3794b1003191232w6bea5c5ek16efd244e5004113@mail.gmail.com>
References: <5ef296b31003180457u490e9d0dqa44509f5fac96706@mail.gmail.com>
	<88755242-232A-4B88-BC4C-6C712B72E7CF@gmail.com>
	<4dda437c1003180817la64511eif0b040e0f42ce23a@mail.gmail.com>
	<5ef296b31003180859k6ce1d8cp91705810e88e570d@mail.gmail.com>
	<37F6F302-4420-4B9C-8DE1-0607CD6C47A0@gmail.com>
	<aa3794b1003191232w6bea5c5ek16efd244e5004113@mail.gmail.com>
Message-ID: <20100322121141.GC19832@mrnibble.lshift.net>

On Fri, Mar 19, 2010 at 03:32:15PM -0400, Mark Steele wrote:
> If you are looking for high availability, the only way that I am aware of is
> to use something like DRBD (or SAN backed storage) along with a cluster
> resource manager (eg: corosync/heartbeat/etc) and make all your messages
> durable and persist to disk.
> 
> You can then scale clusters (eg multiple 2-node clusters) for reaching scale
> using Erlang's native cluster capabilities without sacrificing on high
> availability. A load balancer won't help with HA unless you have some
> mechanism for ensuring messages replicate between nodes.

Yes. We now have an OCF script and HA guide which is currently going
through QA which makes this dance easier and documents the process.

Matthew



From matthew at lshift.net  Mon Mar 22 12:52:02 2010
From: matthew at lshift.net (Matthew Sackman)
Date: Mon, 22 Mar 2010 12:52:02 +0000
Subject: [rabbitmq-discuss] New Persister
In-Reply-To: <a108f5c11003211829v32351c0m1968abed9399704c@mail.gmail.com>
References: <a108f5c11003211526v5687c0dbnc90f4d43b05e7107@mail.gmail.com>
	<20100321225826.GA26638@wellquite.org>
	<a108f5c11003211829v32351c0m1968abed9399704c@mail.gmail.com>
Message-ID: <20100322125202.GD19832@mrnibble.lshift.net>

On Mon, Mar 22, 2010 at 02:29:52PM +1300, Scott Mohekey wrote:
> On Mon, Mar 22, 2010 at 11:58 AM, Matthew Sackman <matthew at lshift.net>wrote:
> We have a single publisher, with 10 production queues which are duplicated
> for testing (so 20 queues all up). All of these queues are persistent.
> 
> We use a topic exchange, with messages being routed to one or more of the
> queues.
> 
> The publisher uses the .net client and does no transactions, while the
> consumer uses the java client and wraps batches of messages in transactions.

Ok, so whilst this is a little different, using the java client, I've
just been testing with:

rabbitmq-java-client$ sh ./build/dist/runjava.sh com.rabbitmq.examples.MulticastMain -y 0 -s 128 -e e -t fanout -r 1100 -f persistent

and

rabbitmq-java-client$ sh build/dist/runjava.sh com/rabbitmq/examples/MulticastMain -x 0 -e e -t fanout -y 10 -n 500 -q 1000

at the same time. This simulates 10 queues, each with their own
consumer, every consumer sets qos to 1000 and batches up 500 acks in a
transaction before issuing a commit. The publisher publishes 128-byte
messages at a rate of 1100Hz. This means we have 1100 Hz into the
broker, and 11000 Hz out of the server (every publish goes to all 10
queues and hence consumers). My desktop machine does indeed keep up with
this just fine.

The difference to yous is:
a) You're using topic exchange which will be a little slower.
b) You only have one consumer, which, I assume, is consuming from all
the queues concurrently?
c) My broker and clients are all on the same machine using loopback
interface. This is hardly "geographically distant" :)

Even if I push the message size up to 4kB, it still copes (though this
is pushing ~100MB/s over loopback. I suspect you probably won't have
this much bandwidth between your consumer and broker).

> We have our instance of Rabbit running on a XenCenter vm, using shared fibre
> storage. Is this going to be a problem?

I have no idea, but I'd be surprised if it is. You may wish to use
bonnie++ or similar to see what throughput you can get out of that, but
at least in my tests, it's just bursty up to about 20MB/s (with 4kB
msgs), but mainly under 1MB/s.

> > 2) Ensure plenty of free RAM so the OS can use it as disk cache. This
> > means a lot of reads can be satisfied without going all the way to disk.
> >
> We have given the vm 8 gigs at the moment.

That's likely to be enough!

> We're using ext3.

Ok, with data=? as the mount option. It may be worth experimenting with
such options just to see whether it makes much difference.

> > 5) Publishing in parallel (several producers, all issuing txns
> > individually) will get you even better performance.
> 
> Will this make a difference even though we're not using transactions on the
> publishing side?

No, sorry. I failed to spot in your earlier email that you're only
transacting on consumption, not publish.

> Also, it seems to me that the slow throughput is on the consumer side.
> Queues have no problem filling up with messages, faster than the consumers
> can keep up with them.

Indeed. Maybe try to work out what the latency is to your consumer given
the network link you have, what the throughput is, and whether the
messages you're sending are anywhere near that limit? Also try running
the above tests and see what numbers you get out of that. Finally, you
*may* (and I'm totally guessing here) find that you're having issues
with kernel auto-tuning of TCP Buffers. Are all the hosts Linux, or just
the broker?

Matthew



From aquino.gustavo at gmail.com  Mon Mar 22 19:04:12 2010
From: aquino.gustavo at gmail.com (Gustavo Aquino)
Date: Mon, 22 Mar 2010 16:04:12 -0300
Subject: [rabbitmq-discuss] Increasing base memory.
In-Reply-To: <5ef296b31003181509j71e1ae50y54837722e9f20350@mail.gmail.com>
References: <5ef296b31003170512i50a79c9dm2afc0bb56e5be8db@mail.gmail.com>
	<20100317124443.GJ27749@mrnibble.lshift.net>
	<5ef296b31003170704y61c297e0p7e94b0d044204ffd@mail.gmail.com>
	<20100317142001.GB4039@mrnibble.lshift.net>
	<5ef296b31003170816u6372f3efu532a64d29f88c2bf@mail.gmail.com>
	<20100317152239.GF4039@mrnibble.lshift.net>
	<130B921E-7E72-4E1F-9BC8-6D020E430D25@gmail.com>
	<5ef296b31003181434j72a265fdq97345aa44abe76c9@mail.gmail.com>
	<167204d21003181439m6f0f9df8x38c7a5e9ded2108@mail.gmail.com>
	<5ef296b31003181509j71e1ae50y54837722e9f20350@mail.gmail.com>
Message-ID: <5ef296b31003221204i586008aakbfb818fbbeb5acfc@mail.gmail.com>

Well, I think that I discovery a problem in documentation.

I do a config and now Rabbit are running with 8Gb under a ppc environment
with 12Gb. I just change the rabbitmq.config to
 [{rabbit, [{vm_memory_high_watermark, 1.8}]}]. If I change to 2.0 it get
10Gb o.O... well I don't understand the pattern for it, according to
documentation 0.8 equals 80% of memory... but 1.8 ??? and 2.0 ??? what is ?

Regards


On Thu, Mar 18, 2010 at 7:09 PM, Gustavo Aquino <aquino.gustavo at gmail.com>wrote:

> I have 128Gb RAM in my server, configuring Rabbit guided by documentation
> vide this e-mail rabbit don't get more than 3Gb. and others 110Gb are free
> on server, and RabbitMQ crash all the time when get this maximum memory
> allocated ...
>
>
>
>
>
> On Thu, Mar 18, 2010 at 6:39 PM, Alexis Richardson <
> alexis.richardson at gmail.com> wrote:
>
>> What do you mean?
>>
>>
>>
>> On Thu, Mar 18, 2010 at 9:34 PM, Gustavo Aquino
>> <aquino.gustavo at gmail.com> wrote:
>> > Anybody know any clue ? Rabbit don't run with more than 3Gb.
>> >
>> > On Wed, Mar 17, 2010 at 1:30 PM, Gustavo Aquino <
>> aquino.gustavo at gmail.com>
>> > wrote:
>> >>
>> >> Hi Matthew,
>> >>
>> >> This is one Red Hat Linux  64bits for ppc.
>> >>
>> >> I compiled Erlang in this environment, It should running in 64 bits.
>> >>
>> >> On 17/03/2010, at 12:22, Matthew Sackman <matthew at lshift.net> wrote:
>> >>
>> >>> Hi Gustavo,
>> >>>
>> >>> On Wed, Mar 17, 2010 at 12:16:05PM -0300, Gustavo Aquino wrote:
>> >>>>
>> >>>> =INFO REPORT==== 16-Mar-2010::16:38:35 ===
>> >>>> Memory limit set to 1638MB.
>> >>>>
>> >>>> Changing rabbitmq.config to [{rabbit, [{vm_memory_high_watermark,
>> >>>> 0.8}]}].
>> >>>> it's now getting only 3.2Gb...
>> >>>>
>> >>>> =INFO REPORT==== 17-Mar-2010::13:13:25 ===
>> >>>> Memory limit set to 3276MB.
>> >>>>
>> >>>> Why ?
>> >>>
>> >>> Well I suspect Rabbit can't see all the memory. The likely cause for
>> >>> this the OS is treating it as a 32-bit application.
>> >>>
>> >>> Which OS are you using, and is Erlang a 32-bit or 64-bit application
>> on
>> >>> it?
>> >>>
>> >>> Matthew
>> >
>> >
>> > _______________________________________________
>> > rabbitmq-discuss mailing list
>> > rabbitmq-discuss at lists.rabbitmq.com
>> > http://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss
>> >
>> >
>>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20100322/d07af84c/attachment.htm 

From aquino.gustavo at gmail.com  Mon Mar 22 19:25:41 2010
From: aquino.gustavo at gmail.com (Gustavo Aquino)
Date: Mon, 22 Mar 2010 16:25:41 -0300
Subject: [rabbitmq-discuss] Consumer stop to receive messages but
	continue listening queue problem.
In-Reply-To: <5ef296b31003130445o2775b12eyf16547c6e2c52682@mail.gmail.com>
References: <5ef296b31003111900r577611f7vf1a2bdf1b4752db1@mail.gmail.com>
	<20100312122432.GA25615@mrnibble.lshift.net>
	<5ef296b31003120621m13c87cbdy677adc7425be4eb1@mail.gmail.com>
	<k5bpes8lwy.fsf@mrbraver.lshift.net>
	<5ef296b31003130445o2775b12eyf16547c6e2c52682@mail.gmail.com>
Message-ID: <5ef296b31003221225u77bf25a8g13a1e7340d06eff0@mail.gmail.com>

I think that I discovery a pattern for this problem, and now I can reproduce
it all the time.

This is the steps.

1- Start RabbitMQ
2- Start 8 consumers in concurrent mode (8 consumers at same time).
3- Start producer
4- Fating queue with ~3000 messages per second having ~400bytes
5- When queue have ~170.000 stop consumers and producer
6- Start consumers in concurrent mode(8 consumers at same time)

After that, consumers are connected to Rabbit, but if you take a look about
queue consumers, we have only 3 or 4 consumers... all others are waiting
something but don't consume nothing.

I do some tests follow.

1- Stop others 5 consumers that are listening nothing, and start one by
one... and the same status happen again, this other don't get any message
from rabbitmq until the 3 started before continuing running and getting
messages.

2- Wait queue size go to 0 and stop all consumers and start again, now all
work fine again and all 8 consumers getting messages from Rabbit.

I'm very concerned about this... It show me that I can plug more consumers
to help process in a pick, anybody here get something like that report ?

PS.

If I reproduce this same test with a queue size minor than 170.000 all works
fine, the problem only happen with queue have more than 170.000.


Regards.





On Sat, Mar 13, 2010 at 9:45 AM, Gustavo Aquino <aquino.gustavo at gmail.com>wrote:

> Hi David,
>
> Thanks, but i'm running a ppc machine this package doesn't work, last night
> I compiled Erlang in this environment and it's works very fine.
>
> To compile we just need to download the right ncourses-dev-version that
> Erlang need.
>
> Regards.
>
>
> On Sat, Mar 13, 2010 at 9:07 AM, David Wragg <david.wragg at lshift.net>wrote:
>
>> Gustavo Aquino <aquino.gustavo at gmail.com> writes:
>> > This is the point, I think that we will be the first in this
>> environment, I
>> > tried to found some experiences in Internet but don't found nothing. I'm
>> > using Erlang R12 yes I know it's very old, but RH have only this version
>> > compiled for ppc, I'm trying to install R13B but having some compiling
>> > problems with ncourses, but It's other e-mail :).
>>
>> Have you tried rebuilding a recent Fedora erlang SRPM on RHEL?  That
>> approach often works for getting recent packages running on RHEL, and
>> should be as simple as:
>>
>> rpmbuild --rebuild
>> http://mirrors.kernel.org/fedora/releases/12/Everything/source/SRPMS/erlang-R13B-01.2.fc12.src.rpm
>>
>> This will do things like checking that you have suitable versions of
>> all the necessary packages installed for the build, including ncurses.
>>
>> David
>>
>> --
>>  [][][] David Wragg       | mail: david.wragg at lshift.net
>>   [][] Senior Developer  | tel: +44 (0)20 7729 7060
>>  []  [] LShift Ltd        | web: www.lshift.net
>>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20100322/1d6c8fc1/attachment.htm 

From scott.mohekey at telogis.com  Mon Mar 22 23:50:24 2010
From: scott.mohekey at telogis.com (Scott Mohekey)
Date: Tue, 23 Mar 2010 12:50:24 +1300
Subject: [rabbitmq-discuss] New Persister
In-Reply-To: <20100322125202.GD19832@mrnibble.lshift.net>
References: <a108f5c11003211526v5687c0dbnc90f4d43b05e7107@mail.gmail.com>
	<20100321225826.GA26638@wellquite.org>
	<a108f5c11003211829v32351c0m1968abed9399704c@mail.gmail.com>
	<20100322125202.GD19832@mrnibble.lshift.net>
Message-ID: <a108f5c11003221650o5490e856u1f91c3cc18cbb087@mail.gmail.com>

Scott Mohekey
Systems/Application Specialist ? Fleet ? Telogis, Inc.
www.telogis.com  www.telogis.co.nz
+1 949 625-4115 ext. 207 (USA)  +64 3339 2825 x207 (NZ)

Leading Global Platform for Location Based Services
--
This e-mail, and any attachments, is intended only for use by the
addressee(s) named herein and may contain legally privileged and/or
confidential information.  It is the property of Telogis.  If you are not
the intended recipient of this e-mail, you are hereby notified that any
dissemination, distribution or copying of this e-mail, any attachments
thereto, and use of the information contained, is strictly prohibited.  If
you have received this e-mail in error, please notify the sender and
permanently delete the original and any copy there of.


On Tue, Mar 23, 2010 at 1:52 AM, Matthew Sackman <matthew at lshift.net> wrote:

> On Mon, Mar 22, 2010 at 02:29:52PM +1300, Scott Mohekey wrote:
> > On Mon, Mar 22, 2010 at 11:58 AM, Matthew Sackman <matthew at lshift.net
> >wrote:
> > We have a single publisher, with 10 production queues which are
> duplicated
> > for testing (so 20 queues all up). All of these queues are persistent.
> >
> > We use a topic exchange, with messages being routed to one or more of the
> > queues.
> >
> > The publisher uses the .net client and does no transactions, while the
> > consumer uses the java client and wraps batches of messages in
> transactions.
>
> Ok, so whilst this is a little different, using the java client, I've
> just been testing with:
>
> rabbitmq-java-client$ sh ./build/dist/runjava.sh
> com.rabbitmq.examples.MulticastMain -y 0 -s 128 -e e -t fanout -r 1100 -f
> persistent
>
> and
>
> rabbitmq-java-client$ sh build/dist/runjava.sh
> com/rabbitmq/examples/MulticastMain -x 0 -e e -t fanout -y 10 -n 500 -q 1000
>
> at the same time. This simulates 10 queues, each with their own
> consumer, every consumer sets qos to 1000 and batches up 500 acks in a
> transaction before issuing a commit. The publisher publishes 128-byte
> messages at a rate of 1100Hz. This means we have 1100 Hz into the
> broker, and 11000 Hz out of the server (every publish goes to all 10
> queues and hence consumers). My desktop machine does indeed keep up with
> this just fine.
>
> The difference to yous is:
> a) You're using topic exchange which will be a little slower.
> b) You only have one consumer, which, I assume, is consuming from all
> the queues concurrently?
>

We actually have a consumer per queue, each on a different machine (all of
them a considerable distance from the rabbit server).


> c) My broker and clients are all on the same machine using loopback
> interface. This is hardly "geographically distant" :)
>
> Even if I push the message size up to 4kB, it still copes (though this
> is pushing ~100MB/s over loopback. I suspect you probably won't have
> this much bandwidth between your consumer and broker).
>
> > We have our instance of Rabbit running on a XenCenter vm, using shared
> fibre
> > storage. Is this going to be a problem?
>
> I have no idea, but I'd be surprised if it is. You may wish to use
> bonnie++ or similar to see what throughput you can get out of that, but
> at least in my tests, it's just bursty up to about 20MB/s (with 4kB
> msgs), but mainly under 1MB/s.
>
> > > 2) Ensure plenty of free RAM so the OS can use it as disk cache. This
> > > means a lot of reads can be satisfied without going all the way to
> disk.
> > >
> > We have given the vm 8 gigs at the moment.
>
> That's likely to be enough!
>
> > We're using ext3.
>
> Ok, with data=? as the mount option. It may be worth experimenting with
> such options just to see whether it makes much difference.
>

We haven't played with any filesystem tuning yet.

>
> > > 5) Publishing in parallel (several producers, all issuing txns
> > > individually) will get you even better performance.
> >
> > Will this make a difference even though we're not using transactions on
> the
> > publishing side?
>
> No, sorry. I failed to spot in your earlier email that you're only
> transacting on consumption, not publish.
>
> > Also, it seems to me that the slow throughput is on the consumer side.
> > Queues have no problem filling up with messages, faster than the
> consumers
> > can keep up with them.
>
> Indeed. Maybe try to work out what the latency is to your consumer given
> the network link you have, what the throughput is, and whether the
> messages you're sending are anywhere near that limit? Also try running
> the above tests and see what numbers you get out of that. Finally, you
> *may* (and I'm totally guessing here) find that you're having issues
> with kernel auto-tuning of TCP Buffers. Are all the hosts Linux, or just
> the broker?
>
> Matthew
>


One extra thing I should mention, is that while we were seeing this low
throughput, half of the queues had an average of 100,000 queued messages.
Once we've emptied the queues out, the throughput picks up, but still not
much more than around 200 msgs/sec.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20100323/ee272b14/attachment.htm 

From david at brightscope.com  Mon Mar 22 23:54:01 2010
From: david at brightscope.com (David Allison)
Date: Mon, 22 Mar 2010 16:54:01 -0700
Subject: [rabbitmq-discuss] rabbitmq-discuss Digest, Vol 34, Issue 41
In-Reply-To: <mailman.458.1269301828.22012.rabbitmq-discuss@lists.rabbitmq.com>
References: <mailman.458.1269301828.22012.rabbitmq-discuss@lists.rabbitmq.com>
Message-ID: <19686780-417F-42A3-A2AF-E9E7B91D6337@brightscope.com>

I would be very interested in this guide if and when it becomes available. Is there a way we can be notified of it?

> 
> Message: 1
> Date: Mon, 22 Mar 2010 12:11:42 +0000
> From: Matthew Sackman <matthew at lshift.net>
> Subject: Re: [rabbitmq-discuss] High Availability
> To: Mark Steele <msteele at beringmedia.com>
> Cc: rabbitmq-discuss at lists.rabbitmq.com
> Message-ID: <20100322121141.GC19832 at mrnibble.lshift.net>
> Content-Type: text/plain; charset=us-ascii
> 
> On Fri, Mar 19, 2010 at 03:32:15PM -0400, Mark Steele wrote:
>> If you are looking for high availability, the only way that I am aware of is
>> to use something like DRBD (or SAN backed storage) along with a cluster
>> resource manager (eg: corosync/heartbeat/etc) and make all your messages
>> durable and persist to disk.
>> 
>> You can then scale clusters (eg multiple 2-node clusters) for reaching scale
>> using Erlang's native cluster capabilities without sacrificing on high
>> availability. A load balancer won't help with HA unless you have some
>> mechanism for ensuring messages replicate between nodes.
> 
> Yes. We now have an OCF script and HA guide which is currently going
> through QA which makes this dance easier and documents the process.
> 
> Matthew
> 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20100322/e0c53d77/attachment.htm 

From jon.brisbin at npcinternational.com  Tue Mar 23 13:19:28 2010
From: jon.brisbin at npcinternational.com (Jon Brisbin)
Date: Tue, 23 Mar 2010 08:19:28 -0500
Subject: [rabbitmq-discuss] sub-request a message using a message batch
Message-ID: <518E64F6-D42B-4033-B0DC-6799A350C441@npcinternational.com>

I have a situation where remote sites need to send messages to a central set of load-balanced RabbitMQ servers. Due to low network bandwidth at the these sites, I have to zip up a series of requests into a zip file, which is the body of the message. When the batch listener gets a new batch message, it opens it up, then dumps each individual request back into the appropriate queue for that request. 

Now comes the part I'm having trouble with...

When I'm in my handleDelivery() method of my batch message listener, it seems I can't create a new, anonymous queue which I can listen to for the results of this "sub-request", which I will grab, put into a new zip file, and send back to the requestor, along with the results from all their other requests.

I'm using Spring to create ConnectionFactorys, Connections, and Channels, but I'm wondering if there isn't some per-thread something going on that I receive errors to the effect that I can only do one thing at a time during a synchronous request.

Can someone point me to some guidance on how I can have a listener create a new queue which it listens to, so it can intercept the results of a sub-request and respond to the original requestor?

I hope what I'm trying to do here makes sense. I may not have explained it well...

Jon Brisbin
Portal Webmaster
NPC International, Inc.






From jonathan.stott at gmail.com  Tue Mar 23 13:31:20 2010
From: jonathan.stott at gmail.com (Jonathan Stott)
Date: Tue, 23 Mar 2010 13:31:20 +0000
Subject: [rabbitmq-discuss] Architecture Question for webservice
Message-ID: <20100323133120.47fb0e4a@gmail.com>

Hi all

I'm setting up a simple webservice.  Since it involves quite a few file operations and some potentially long running tasks, I want those tasks handled by a separate process (or potentially, processes).  This also lets me separate concerns.  So I want to use rabbitmq to communicate between the two (and handle the mechanics of queueing jobs).

The job submission side is easy.  I route messages to a queue the worker(s) is subscribed to.  It pulls the jobs off the queue, does the work.  But what if I want to send back a confirmation?  The obvious way is to set up a queue to route back messages to the front end process.  I can even send a 'return to' 'address' along with the job.

My question is:  How many queues do I need to send back to?

If I have one queue for the return messages, then how do I split out different job outputs from the stream? so that I send correct status reports to each client.

But if each job has the webservice setup a queue just to listen for the reply, I'll be setting up and tearing down queues all the time.

So which way would people recommend or am I thinking about this the wrong way?  Is there an option I've missed?  Is there something which would fit better than rabbit?

Regards
Jon



From matthias at lshift.net  Tue Mar 23 13:57:03 2010
From: matthias at lshift.net (Matthias Radestock)
Date: Tue, 23 Mar 2010 13:57:03 +0000
Subject: [rabbitmq-discuss] SimpleRpcServer send generated queue name to
 client
In-Reply-To: <5429EF528F02C34281C8573452C749431AC0E2E538@ca-win-mbs02.artesis.be>
References: <27624063.post@talk.nabble.com> <4B8EEEBB.4070708@lshift.net>
	<5429EF528F02C34281C8573452C749431AC0E2E538@ca-win-mbs02.artesis.be>
Message-ID: <4BA8C8AF.20909@lshift.net>

Glenn,

Ergeerts Glenn wrote:
> Like you said the custom filer predicates are very flexible. It could
> be possible to map them to routing keys and use client side 
> filtering as you said, but for security reasons I want control 
> exactly which client receives which messages. So this rules out
> client side filtering I guess?

Do these security considerations only apply to event types or the event 
filtering predicates too?

If the former, you could go for a hybrid solution where the server 
publishes events to a direct exchange, with the event type as the 
routing key. Each client's queue would then be bound to that exchange 
with binding keys for each of the event types the client is interested 
in. And client-side filtering would take care of the more complex 
filtering predicates.

The creation/deletion of the client queues could be left up to the 
clients, but the access to the exchange could be restricted to the 
server, with all bindings of client queues to the exchange being 
established by that server.

> I did not know about the option of implementing a custom exchange
> type.. Is it hard to do?

It's fairly straightforward - if you know a bit about Erlang and the 
rabbit internals ;) See 
http://www.lshift.net/blog/2010/01/22/plugin-exchange-types-for-rabbitmq 
for an example.

> it feels strange pulling this application specific logic
> into the communication infrastructure (so tying our application to
> RabbitMQ) to me.. ?

The standard, but less efficient, approach to implementing arbitrary 
complex routing logic is to introduce a routing client. That is an 
ordinary AMQP client which

a) consumes messages from, say, a single queue bound to a fanout 
exchange to which producer send all publishes,

b) applies the necessary routing logic to compute a set of queues to 
send the message to,

c) publishes copies of the message to the default exchange - one copy 
per queue it needs routing too.

That's the basic setup, which can be suitably embellished by, say, 
consuming from multiple exchanges/queues, and publishing to exchanges 
other than the default exchange. Plus of course you need logic to deal 
with subscription management.

> What would be the disadvantages of doing it with the multiple queues
> as first suggested? Is it performance related? Would it make a big
> difference using a topic exchange compared to for example 20 queues +
> subscriptions? Are there other disadvantages?

You end up with one queue per client in all solutions proposed so far. 
But there is still a performance advantage of getting rabbit to do as 
much of the routing as possible. That's what it's designed to do, and it 
(mostly) does it very efficiently. For example, if the same message 
needs to go to 10 different queues, doing the routing in application 
code results in ten separate copies of the message, all getting routed 
separately, whereas if rabbit does the routing there will be just one 
copy of the message and the distribution of that message to individual 
queues is done very efficiently.


Regards,

Matthias.



From tonyg at lshift.net  Tue Mar 23 15:24:55 2010
From: tonyg at lshift.net (Tony Garnock-Jones)
Date: Tue, 23 Mar 2010 08:24:55 -0700
Subject: [rabbitmq-discuss] SimpleRpcServer send generated queue name to
 client
In-Reply-To: <5429EF528F02C34281C8573452C749431AC0E2E538@ca-win-mbs02.artesis.be>
References: <27624063.post@talk.nabble.com> <4B8EEEBB.4070708@lshift.net>
	<5429EF528F02C34281C8573452C749431AC0E2E538@ca-win-mbs02.artesis.be>
Message-ID: <4BA8DD47.2060500@lshift.net>

Hi Glenn,

Ergeerts Glenn wrote:
> So this rules out client side filtering I guess?

Sounds like it, yeah.

> I did not know about the option of implementing a custom exchange type.. Is it hard to do?

No, it's now quite straightforward, though a bit bleeding-edge. The
required features have landed on default, meaning they're release-ready,
and will be in the next major release of rabbit.

> I don't know if this would be an ideal solution.. it feels strange pulling this application specific logic into the communication infrastructure (so tying our application to RabbitMQ) to me.. ?

I understand completely :-) It's a new kind of thing, I think, and
certainly a new way of thinking about networks---to have a programmable
network, how odd!---to me.

The question is *how much code* would you be embedding in the broker. If
it's not very much, then the amount you save by not having to
reimplement subscription management, expiry etc at the application level
perhaps outweighs the potential cost of migrating to another broker later.

> What would be the disadvantages of doing it with the multiple queues as first suggested? 
> Is it performance related? Would it make a big difference using a topic exchange compared to for example 20 queues + subscriptions?
> Are there other disadvantages?

It's not a performance issue: it's that you end up reimplementing
subscription and message distribution logic at the application level,
even though it is already available at the AMQP level. That's why it
makes sense to put the application logic *into* the AMQP level.

Tony




From tonyg at lshift.net  Tue Mar 23 15:30:45 2010
From: tonyg at lshift.net (Tony Garnock-Jones)
Date: Tue, 23 Mar 2010 08:30:45 -0700
Subject: [rabbitmq-discuss] RPC authenticity relies on routing key?
In-Reply-To: <4adac7a31003111303o8ef79acqb8c8a1dbef001417@mail.gmail.com>
References: <4adac7a31003111303o8ef79acqb8c8a1dbef001417@mail.gmail.com>
Message-ID: <4BA8DEA5.90509@lshift.net>

Nathaniel Haggard wrote:
> Machine D sends a message to exchange E1 with routing key send_to_A to
> execute a remote procedure call on A.  A replies back using another
> exchange E2 with routing key results_of_A, but A could easily use the
> key results_of_B.  Does rabbitmq have a way of making A only use the
> key results_of_A?

No, but...

> Is there a better way to make sure the results from an RPC to A are
> really from A and not from B?

Yes. You can either *sign* messages from A (and this doesn't have to be
an expensive operation) such that D can verify the authenticity of the
reply, or you can simulate object capabilities:

  - let D declare a private reply queue with a long, unguessable
    name only known to D.

  - let D pass this name to A in the RPC request.

  - let A use the name to send the reply back to D.

If D is careful not to let anyone else know about the secret queue name
(a UUID will do), then it can be sure that messages arriving on the
queue come from A or from parties that A has transitively trusted with
the secret.

> I think it would not scale well (in the thousands) if A, B, C each had
> permissions to write to one queue exchanges E2, E3, and E4, but maybe
> that's wrong too.

Thousands of different RabbitMQ user IDs should work just fine. Might be
awkward to manage, but should work just fine. (You might look in to BQL
for a rapidly evolving utility for managing large amounts of rabbity
configuration.)

Regards,
  Tony




From tonyg at lshift.net  Tue Mar 23 15:59:14 2010
From: tonyg at lshift.net (Tony Garnock-Jones)
Date: Tue, 23 Mar 2010 08:59:14 -0700
Subject: [rabbitmq-discuss] rabiit-c library, properies is not set
In-Reply-To: <E1Nri1H-0000uT-00.akalend-mail-ru@f35.mail.ru>
References: <E1Nri1H-0000uT-00.akalend-mail-ru@f35.mail.ru>
Message-ID: <4BA8E552.7040604@lshift.net>

Hi Alexandre,

Alexandre Kalendarev wrote:
> If I set the  properies for AMQP Basic.Publish than:
> I can to set :
> [...]
> but reality I can to set only    content_type;
> Can I to set/change content_encoding;, user_id, message_id delivery_mode, set expiration, timestamp?

>From subsequent message, it seems you've already worked this out, but
for the list:

You have to not only fill in the member variable you're interested in,
but also set the _flags to indicate that you have done so. For example:

    amqp_basic_properties_t props;
    props._flags = 0; // important!

    props._flags |= AMQP_BASIC_CONTENT_TYPE_FLAG;
    props.content_type = amqp_cstring_bytes("text/plain");

    props._flags |= AMQP_BASIC_DELIVERY_MODE_FLAG;
    props.delivery_mode = 2; // persistent delivery mode

Regards,
  Tony



From tonyg at lshift.net  Tue Mar 23 15:59:24 2010
From: tonyg at lshift.net (Tony Garnock-Jones)
Date: Tue, 23 Mar 2010 08:59:24 -0700
Subject: [rabbitmq-discuss] rabiit-c library, properies is not set
In-Reply-To: <E1Nri1H-0000uT-00.akalend-mail-ru@f35.mail.ru>
References: <E1Nri1H-0000uT-00.akalend-mail-ru@f35.mail.ru>
Message-ID: <4BA8E55C.10905@lshift.net>

Hi Alexandre,

Alexandre Kalendarev wrote:
> If I set the  properies for AMQP Basic.Publish than:
> I can to set :
> [...]
> but reality I can to set only    content_type;
> Can I to set/change content_encoding;, user_id, message_id delivery_mode, set expiration, timestamp?

>From subsequent messages, it seems you've already worked this out, but
for the list:

You have to not only fill in the member variable you're interested in,
but also set the _flags to indicate that you have done so. For example:

    amqp_basic_properties_t props;
    props._flags = 0; // important!

    props._flags |= AMQP_BASIC_CONTENT_TYPE_FLAG;
    props.content_type = amqp_cstring_bytes("text/plain");

    props._flags |= AMQP_BASIC_DELIVERY_MODE_FLAG;
    props.delivery_mode = 2; // persistent delivery mode

Regards,
  Tony



From tonyg at lshift.net  Tue Mar 23 16:08:41 2010
From: tonyg at lshift.net (Tony Garnock-Jones)
Date: Tue, 23 Mar 2010 09:08:41 -0700
Subject: [rabbitmq-discuss] database transaction
In-Reply-To: <dcad41411003211617o19c34db5h559b50bb13ff3147@mail.gmail.com>
References: <27932801.post@talk.nabble.com>	<20100317150057.GE4039@mrnibble.lshift.net>	<27942664.post@talk.nabble.com>
	<4BA60C99.3060808@lshift.net>
	<dcad41411003211617o19c34db5h559b50bb13ff3147@mail.gmail.com>
Message-ID: <4BA8E789.7020603@lshift.net>

Tomek Ro?en wrote:
> That's true, though it might be difficult if you have multiple
> producers. It would be helpful if a queue would assign consecutive Ids
> on insert.

Agreed. That's a nice idea. I'll file an enhancement request along these
lines.

(If you can name your producers with individual names, you can put those
names in the message ids too, of course: "producer1-msg456794801")

Tony




From alexander.sviridov at gmail.com  Tue Mar 23 22:15:07 2010
From: alexander.sviridov at gmail.com (Alexander Sviridov)
Date: Wed, 24 Mar 2010 01:15:07 +0300
Subject: [rabbitmq-discuss] erlang client problem (badarg in {amqp_channel,
	handle_regular_method, 3})
Message-ID: <FAD558EA-6D60-4A38-A5CF-ADC4C3E530A1@gmail.com>

Hello!

I'm new to RabbitMQ (and Erlang too), trying to get message from
queue. Getting this:

=INFO REPORT==== 23-Mar-2010::11:24:47 ===
Negotiated maximums: (Channel = 0, Frame= 131072, Heartbeat=0)

=ERROR REPORT==== 23-Mar-2010::11:30:21 ===
** Generic server <0.49.0> terminating
** Last message in was {'$gen_cast',
                           {method,
                               {'basic.deliver',
                                   <<"amq.ctag-/M/5ibuENfSOypENL/
Cc0g==">>,1,

false,<<"notifier">>,<<"notify.tick">>},
                               {content,60,none,
                                   <<...>>,
                                   [<<...content here....>>]}}}

** Reason for termination ==
** {badarg,[{dict,fetch,
                  [<<"amq.ctag-/M/5ibuENfSOypENL/Cc0g==">>,
                   {dict,0,16,16,8,80,48,
                         {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],
[]},
                         {{[],[],[],[],[],[],[],[],[],[],[],[],[],[],
[],
                           []}}}]},
            {amqp_channel,handle_regular_method,3},
            {gen_server,handle_msg,5},
            {proc_lib,init_p_do_apply,3}]}


Server info:
[{<<"product">>,longstr,<<"RabbitMQ">>},
                             {<<"version">>,longstr,<<"1.5.4">>},
                             {<<"platform">>,longstr,<<"Erlang/
OTP">>},
                             {<<"copyright">>,longstr,
                              <<"Copyright (C) 2007-2009 LShift Ltd.,
Cohesive Financial Technologies LLC., and Rabbit Technologies
Ltd.">>},
                             {<<"information">>,longstr,
                              <<"Licensed under the MPL.  See
http://www.rabbitmq.com/">>}]

Client:
changeset:   691:eea6142b6845
date:        Mon Mar 15 15:23:43 2010 +1300
summary:     Merge bug21949 into default

my code:
listen_loop(Channel, Q, Ticket) ->
  BasicConsume = #'basic.consume'{ticket = Ticket,
                                  queue = Q,
                                  nowait = true},
  ok
      = amqp_channel:call(Channel, BasicConsume),

  %% If the registration was sucessful, the consumer will
  %% be notified

  receive
        #'basic.consume_ok'{consumer_tag = Tag} -> ok
  end,
  receive
       {#'basic.deliver'{exchange  =  Exchange},
        Content}  ->
           #content{payload_fragments_rev  =  [Payload]}
            =  Content,
           io:format("Message  received:  ~p~n",  [Payload])
  end,

  listen_loop(Channel, Q, Ticket).


I'm doing something in a wrong way, I guess...

Any help will be appreciated, thank you!

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20100324/35f51cd1/attachment.htm 

From simon at lshift.net  Wed Mar 24 10:47:09 2010
From: simon at lshift.net (Simon MacMullen)
Date: Wed, 24 Mar 2010 10:47:09 +0000
Subject: [rabbitmq-discuss] rabbitmq-public-umbrella make error on debian
In-Reply-To: <4BA9D035.8040206@lshift.net>
References: <421152D4-7CCF-44EB-B950-DB458A1F442B@plyce.com>
	<4BA9B1E5.3030006@lshift.net>
	<5342322E-8082-4B66-AACC-FFD5001E6002@plyce.com>
	<4BA9D035.8040206@lshift.net>
Message-ID: <4BA9EDAD.2030708@lshift.net>

Hi Martin.

It was me that introduced that step, so I guess I need to apologise. 
I'll try to get this fixed today, but in the mean time, you'll need to 
run "make clean" after installing xsltproc.

Cheers, Simon

On 24/03/2010 08:41, Paul Jones <paulj at lshift.net> said:
> Hi Martin,
>
> Looking through the trace, it was as I suspected - a new step in the
> build process that uses xsltproc is failing.
>
> xsltproc --stringparam modulename "`basename docs/rabbitmq-multi.1.xml
> .1.xml | tr -d -`_usage" \
> docs/usage.xsl docs/rabbitmq-multi.1.xml | sed -e s/\\\"/\\\\\\\"/g |
> sed -e s/%QUOTE%/\\\"/g | \
> fold -s > docs/`basename docs/rabbitmq-multi.1.xml .1.xml`.usage.erl
> /bin/sh: xsltproc: command not found
>
> Hopefully if you install xsltproc, then it should fix things.
>
> Cheers,
> Paul.
>
>
> Martin Destagnol wrote:
>> Hello Paul,
>>
>> To answer your previous email, here is the error on a fresh debian
>> lenny 64 bit, with all packages up to date.
>>
>> I applied the same procedure two weeks ago on other servers and it did
>> work so I suppose it's in the new release of your umbrella?
>>
>> *Erlang version*: The uptodate version of erlang on debian lenny:
>> http://packages.debian.org/lenny/erlang
>>
>> *Copy Paste: *Here is a full copy :
>>
>> *bash:~# hg clone http://hg.rabbitmq.com/rabbitmq-public-umbrella *
>> destination directory: rabbitmq-public-umbrella
>> requesting all changes
>> adding changesets
>> adding manifests
>> adding file changes
>> added 70 changesets with 79 changes to 16 files
>> updating working directory
>> 12 files updated, 0 files merged, 0 files removed, 0 files unresolved
>> *bash:~# cd rabbitmq-public-umbrella/*
>> *bash:~/rabbitmq-public-umbrella# make co*
>> hg clone http://hg.rabbitmq.com/rabbitmq-server
>> destination directory: rabbitmq-server
>> requesting all changes
>> adding changesets
>> adding manifests
>> adding file changes
>> added 2929 changesets with 5116 changes to 243 files (+23 heads)
>> updating working directory
>> 119 files updated, 0 files merged, 0 files removed, 0 files unresolved
>> hg clone http://hg.rabbitmq.com/rabbitmq-codegen
>> destination directory: rabbitmq-codegen
>> requesting all changes
>> adding changesets
>> adding manifests
>> adding file changes
>> added 77 changesets with 67 changes to 12 files (+2 heads)
>> updating working directory
>> 7 files updated, 0 files merged, 0 files removed, 0 files unresolved
>> hg clone http://hg.rabbitmq.com/rabbitmq-erlang-client
>> destination directory: rabbitmq-erlang-client
>> requesting all changes
>> adding changesets
>> adding manifests
>> adding file changes
>> added 696 changesets with 1513 changes to 128 files (+7 heads)
>> updating working directory
>> 26 files updated, 0 files merged, 0 files removed, 0 files unresolved
>> hg clone http://hg.rabbitmq.com/rabbitmq-jsonrpc
>> destination directory: rabbitmq-jsonrpc
>> requesting all changes
>> adding changesets
>> adding manifests
>> adding file changes
>> added 71 changesets with 168 changes to 69 files (+2 heads)
>> updating working directory
>> 6 files updated, 0 files merged, 0 files removed, 0 files unresolved
>> hg clone http://hg.rabbitmq.com/rabbitmq-mochiweb
>> destination directory: rabbitmq-mochiweb
>> requesting all changes
>> adding changesets
>> adding manifests
>> adding file changes
>> added 40 changesets with 139 changes to 65 files (+1 heads)
>> updating working directory
>> 15 files updated, 0 files merged, 0 files removed, 0 files unresolved
>> hg clone http://hg.rabbitmq.com/rabbitmq-jsonrpc-channel
>> destination directory: rabbitmq-jsonrpc-channel
>> requesting all changes
>> adding changesets
>> adding manifests
>> adding file changes
>> added 83 changesets with 226 changes to 94 files (+3 heads)
>> updating working directory
>> 38 files updated, 0 files merged, 0 files removed, 0 files unresolved
>> hg clone http://hg.rabbitmq.com/rabbitmq-bql
>> destination directory: rabbitmq-bql
>> requesting all changes
>> adding changesets
>> adding manifests
>> adding file changes
>> added 93 changesets with 219 changes to 38 files (+3 heads)
>> updating working directory
>> 33 files updated, 0 files merged, 0 files removed, 0 files unresolved
>> hg clone http://hg.rabbitmq.com/rabbitmq-stomp
>> destination directory: rabbitmq-stomp
>> requesting all changes
>> adding changesets
>> adding manifests
>> adding file changes
>> added 144 changesets with 200 changes to 55 files (+1 heads)
>> updating working directory
>> 36 files updated, 0 files merged, 0 files removed, 0 files unresolved
>> hg clone http://hg.rabbitmq.com/rabbitmq-smtp
>> destination directory: rabbitmq-smtp
>> requesting all changes
>> adding changesets
>> adding manifests
>> adding file changes
>> added 15 changesets with 26 changes to 10 files
>> updating working directory
>> 8 files updated, 0 files merged, 0 files removed, 0 files unresolved
>> hg clone http://hg.opensource.lshift.net/erlang-rfc4627
>> destination directory: erlang-rfc4627
>> requesting all changes
>> adding changesets
>> adding manifests
>> adding file changes
>> added 103 changesets with 207 changes to 57 files
>> updating working directory
>> 48 files updated, 0 files merged, 0 files removed, 0 files unresolved
>> *bash:~/rabbitmq-public-umbrella# make*
>> make -C rabbitmq-server all && make -C rabbitmq-codegen all && make -C
>> rabbitmq-erlang-client all && make -C rabbitmq-jsonrpc all && make -C
>> rabbitmq-mochiweb all && make -C rabbitmq-jsonrpc-channel all && make
>> -C rabbitmq-bql all && make -C rabbitmq-stomp all && make -C
>> rabbitmq-smtp all && make -C erlang-rfc4627 all && true
>> make[1]: Entering directory
>> `/root/rabbitmq-public-umbrella/rabbitmq-server'
>> python codegen.py body ../rabbitmq-codegen//amqp-0.8.json
>> src/rabbit_framing.erl
>> xsltproc --stringparam modulename "`basename docs/rabbitmqctl.1.xml
>> .1.xml | tr -d -`_usage" \
>> docs/usage.xsl docs/rabbitmqctl.1.xml | sed -e s/\\\"/\\\\\\\"/g | sed
>> -e s/%QUOTE%/\\\"/g | \
>> fold -s > docs/`basename docs/rabbitmqctl.1.xml .1.xml`.usage.erl
>> /bin/sh: xsltproc: command not found
>> cp docs/rabbitmqctl.usage.erl src/rabbitmqctl_usage.erl
>> xsltproc --stringparam modulename "`basename docs/rabbitmq-multi.1.xml
>> .1.xml | tr -d -`_usage" \
>> docs/usage.xsl docs/rabbitmq-multi.1.xml | sed -e s/\\\"/\\\\\\\"/g |
>> sed -e s/%QUOTE%/\\\"/g | \
>> fold -s > docs/`basename docs/rabbitmq-multi.1.xml .1.xml`.usage.erl
>> /bin/sh: xsltproc: command not found
>> cp docs/rabbitmq-multi.usage.erl src/rabbitmqmulti_usage.erl
>> python codegen.py header ../rabbitmq-codegen//amqp-0.8.json
>> include/rabbit_framing.hrl
>> escript generate_deps include src \$\(EBIN_DIR\) deps.mk
>> make[1]: Leaving directory
>> `/root/rabbitmq-public-umbrella/rabbitmq-server'
>> make[1]: Entering directory
>> `/root/rabbitmq-public-umbrella/rabbitmq-server'
>> erlc -I include -o ebin -Wall -v +debug_info -pa ebin src/gen_server2.erl
>> erlc -I include -o ebin -Wall -v +debug_info -pa ebin src/pg_local.erl
>> erlc -I include -o ebin -Wall -v +debug_info -pa ebin
>> src/priority_queue.erl
>> erlc -I include -o ebin -Wall -v +debug_info -pa ebin
>> src/rabbit_access_control.erl
>> erlc -I include -o ebin -Wall -v +debug_info -pa ebin
>> src/rabbit_alarm.erl
>> erlc -I include -o ebin -Wall -v +debug_info -pa ebin
>> src/rabbit_amqqueue.erl
>> erlc -I include -o ebin -Wall -v +debug_info -pa ebin
>> src/rabbit_amqqueue_process.erl
>> erlc -I include -o ebin -Wall -v +debug_info -pa ebin
>> src/rabbit_amqqueue_sup.erl
>> erlc -I include -o ebin -Wall -v +debug_info -pa ebin
>> src/rabbit_basic.erl
>> erlc -I include -o ebin -Wall -v +debug_info -pa ebin
>> src/rabbit_binary_generator.erl
>> erlc -I include -o ebin -Wall -v +debug_info -pa ebin
>> src/rabbit_binary_parser.erl
>> erlc -I include -o ebin -Wall -v +debug_info -pa ebin
>> src/rabbit_channel.erl
>> erlc -I include -o ebin -Wall -v +debug_info -pa ebin
>> src/rabbit_control.erl
>> erlc -I include -o ebin -Wall -v +debug_info -pa ebin
>> src/rabbit_dialyzer.erl
>> erlc -I include -o ebin -Wall -v +debug_info -pa ebin src/rabbit.erl
>> erlc -I include -o ebin -Wall -v +debug_info -pa ebin
>> src/rabbit_error_logger.erl
>> erlc -I include -o ebin -Wall -v +debug_info -pa ebin
>> src/rabbit_error_logger_file_h.erl
>> erlc -I include -o ebin -Wall -v +debug_info -pa ebin
>> src/rabbit_exchange.erl
>> erlc -I include -o ebin -Wall -v +debug_info -pa ebin
>> src/rabbit_exchange_type.erl
>> erlc -I include -o ebin -Wall -v +debug_info -pa ebin
>> src/rabbit_exchange_type_direct.erl
>> erlc -I include -o ebin -Wall -v +debug_info -pa ebin
>> src/rabbit_exchange_type_fanout.erl
>> erlc -I include -o ebin -Wall -v +debug_info -pa ebin
>> src/rabbit_exchange_type_headers.erl
>> erlc -I include -o ebin -Wall -v +debug_info -pa ebin
>> src/rabbit_exchange_type_registry.erl
>> erlc -I include -o ebin -Wall -v +debug_info -pa ebin
>> src/rabbit_exchange_type_topic.erl
>> erlc -I include -o ebin -Wall -v +debug_info -pa ebin
>> src/rabbit_framing_channel.erl
>> erlc -I include -o ebin -Wall -v +debug_info -pa ebin
>> src/rabbit_framing.erl
>> erlc -I include -o ebin -Wall -v +debug_info -pa ebin src/rabbit_guid.erl
>> erlc -I include -o ebin -Wall -v +debug_info -pa ebin
>> src/rabbit_heartbeat.erl
>> erlc -I include -o ebin -Wall -v +debug_info -pa ebin
>> src/rabbit_hooks.erl
>> erlc -I include -o ebin -Wall -v +debug_info -pa ebin
>> src/rabbit_limiter.erl
>> erlc -I include -o ebin -Wall -v +debug_info -pa ebin src/rabbit_load.erl
>> erlc -I include -o ebin -Wall -v +debug_info -pa ebin src/rabbit_log.erl
>> erlc -I include -o ebin -Wall -v +debug_info -pa ebin src/rabbit_misc.erl
>> erlc -I include -o ebin -Wall -v +debug_info -pa ebin
>> src/rabbit_mnesia.erl
>> erlc -I include -o ebin -Wall -v +debug_info -pa ebin
>> src/rabbitmqctl_usage.erl
>> src/rabbitmqctl_usage.erl:1: no module definition
>> make[1]: *** [ebin/rabbitmqctl_usage.beam] Error 1
>> make[1]: Leaving directory
>> `/root/rabbitmq-public-umbrella/rabbitmq-server'
>> make: *** [all] Error 2
>>
>>
>> Thanks for your help,
>>
>> Martin Destagnol
>> twitter: @mdestagnol
>> mail: martin at plyce.com <mailto:martin at plyce.com>
>> tel. : +33 6 45 90 10 99
>> --
>> Plyce SAS
>> tel. : +33 1 42 33 32 24 / fax. : +33 1 53 40 82 53
>> http://www.plyce.com
>> twitter: @plyce
>>
>> On 24 mars 2010, at 07:32, Paul Jones wrote:
>>
>>> Hi Martin,
>>>
>>> What version of Erlang do you have installed? And are there any
>>> earlier errors? Could you also include the first few lines of the
>>> file that make is complaining about?
>>>
>>> The file that isn't compiling is indeed a new file, and it is being
>>> auto-generated - so I'm curious if perhaps you might be missing a
>>> build-time dependency.
>>>
>>> For future reference, it is better to email either info at rabbitmq.com
>>> <mailto:info at rabbitmq.com> (for private issues) or
>>> rabbitmq-discuss at lists.rabbitmq.com
>>> <mailto:rabbitmq-discuss at lists.rabbitmq.com> (for public issues)
>>> rather than individual developers.
>>>
>>> Paul.
>>>
>>> On 23/03/2010 22:35, Martin Destagnol wrote:
>>>> Hello,
>>>>
>>>> I try to "make " the rabbitmq-public-umbrella" under debian 64bits,
>>>> but I've got the following error.
>>>>
>>>> erlc -I include -o ebin -Wall -v +debug_info -pa ebin
>>>> src/rabbitmqctl_usage.erl
>>>> src/rabbitmqctl_usage.erl:1: no module definition
>>>> make[1]: *** [ebin/rabbitmqctl_usage.beam] Error 1
>>>> make[1]: Leaving directory `/root/test/rabbitmq-server'
>>>> make: *** [all] Error 2
>>>>
>>>>
>>>>
>>>> I used the exact same procedure as I did 2 weeks ago on other
>>>> servers, so I supsect a bug on your side.
>>>>
>>>> Any idea?
>>>>
>>>> Thanks for your help!
>>>>
>>>>
>>>> Martin Destagnol
>>>> twitter: @mdestagnol
>>>> mail: martin at plyce.com <mailto:martin at plyce.com>
>>>> tel. : +33 6 45 90 10 99
>>>> --
>>>> Plyce SAS
>>>> tel. : +33 1 42 33 32 24 / fax. : +33 1 53 40 82 53
>>>> http://www.plyce.com
>>>> twitter: @plyce
>>>>
>>>
>>
>
>


-- 
   [][][] Simon MacMullen
     [][] LShift Ltd
   []  [] www.lshift.net



From matthew at lshift.net  Wed Mar 24 11:10:04 2010
From: matthew at lshift.net (Matthew Sackman)
Date: Wed, 24 Mar 2010 11:10:04 +0000
Subject: [rabbitmq-discuss] erlang client problem (badarg in
 {amqp_channel, handle_regular_method, 3})
In-Reply-To: <FAD558EA-6D60-4A38-A5CF-ADC4C3E530A1@gmail.com>
References: <FAD558EA-6D60-4A38-A5CF-ADC4C3E530A1@gmail.com>
Message-ID: <20100324111004.GB2978@mrnibble.lshift.net>

On Wed, Mar 24, 2010 at 01:15:07AM +0300, Alexander Sviridov wrote:
> my code:
> listen_loop(Channel, Q, Ticket) ->
>  BasicConsume = #'basic.consume'{ticket = Ticket,
>                                  queue = Q,
>                                  nowait = true},

I'd recommend you ignore all tickets stuff, and nowait is by default
false - unless you have good reason to set it true, leave it false.

>  ok
>      = amqp_channel:call(Channel, BasicConsume),

Unfortunately, this is wrong. We have corrected this so that the error
is more meaningful (literally done on the same day as the revision
you're running - you were mere hours too soon to pick it up! Try a pull
and update -C default).

You should actually use amqp_channel:subscribe/3. This is the only case
where you can't just pass the method through with a :call or :cast and
expect it all to work. You want something like:

#'basic.consume_ok'{} =
        amqp_channel:subscribe(Chan,
                               #'basic.consume'{ queue = Q },
                               Pid).

Where Pid is the Pid of the process that'll receive all the messages.

> 
>  %% If the registration was sucessful, the consumer will
>  %% be notified
> 
>  receive
>        #'basic.consume_ok'{consumer_tag = Tag} -> ok
>  end,
>  receive
>       {#'basic.deliver'{exchange  =  Exchange},
>        Content}  ->
>           #content{payload_fragments_rev  =  [Payload]}
>            =  Content,
>           io:format("Message  received:  ~p~n",  [Payload])
>  end,
> 
>  listen_loop(Channel, Q, Ticket).

This too is wrong. Once the consumer is set up, it'll receive
*everything* the server sends it, without any further interaction from
you - i.e. you don't need to resubscribe after every message.

My standard drain-loop is:

spawn_drain(Chan, Q, N, Notify) ->
    Pid = spawn(fun() ->
                        receive
                            #'basic.consume_ok'{ consumer_tag = Tag } ->
                                drain(Chan, Tag, N, Notify)
                        end
                end),
    #'basic.consume_ok'{} =
        amqp_channel:subscribe(Chan,
                               #'basic.consume'{ queue = Q, exclusive = true },
                               Pid).

drain(Chan, Tag, 0, Notify) ->
    CancelOk = #'basic.cancel_ok'{ consumer_tag = Tag } =
        amqp_channel:call(Chan, #'basic.cancel'{ consumer_tag = Tag }),
    ok = receive CancelOk -> ok end,
    Notify ! done;
drain(Chan, Tag, N, Notify) ->
    receive
        {#'basic.deliver'{ consumer_tag = Tag, delivery_tag = AckTag },
         _Content} ->
            ok = amqp_channel:call(Chan, #'basic.ack'{ delivery_tag = AckTag }),
            drain(Chan, Tag, N-1, Notify)
    end.

If you call spawn_drain, it'll set up a new process that tries to
receive N messages. Once it's done that, it cancels the subscription,
and then, sends a 'done' message to Notify (which should be a pid).
It also acks as it goes.

Hope that helps.

Matthew



From suhail at mixpanel.com  Wed Mar 24 11:17:16 2010
From: suhail at mixpanel.com (Suhail Doshi)
Date: Wed, 24 Mar 2010 04:17:16 -0700
Subject: [rabbitmq-discuss] Scaling consumers
Message-ID: <376f3e6f1003240417v3aced03x41c3b8b2dfc0f4d6@mail.gmail.com>

Hi there,

How are people scaling consumers to handle tens of millions of messages
inside a queue? We use Python but do you guys Twisted, Eventlet, Gevent,
etc?

Creating a bunch of Python processes seems very inefficient and most
applications I would think our mostly network io bound. What are you guys
doing to scale your consumers?

Suhail
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20100324/bde8751e/attachment.htm 

From hmolina at lapolar.cl  Wed Mar 24 20:22:30 2010
From: hmolina at lapolar.cl (Henry Molina)
Date: Wed, 24 Mar 2010 16:22:30 -0400
Subject: [rabbitmq-discuss] queues scheme at startup time
Message-ID: <1269462150.9878.47.camel@juno>

Hi All,

Is there a way to define a "exchanges" and "queues" at server's startup?

I'm trying with config file but I can not find a right definition.

some like:
[{rabbit, [{declarations, [{'exchange.declare', [{exchange, "e0"},
{type, "direct"}, durable]} ]}]}].

Regards,

Henry Molina

____________________________________________________________________________
La informacion  contenida en  este mensaje  y en sus documentos adjuntos, es
estrictamente  confidencial y privado para sus destinatarios. Cualquier uso,
reproduccion, divulgacion o distribucion no autorizada  de su contenido esta
estrictamente prohibida y puede ser sancionado criminalmente.
Si ha  recibido este  correo por  error,  solicitamos avisar  al remitente y
eliminarlo de su sistema. EMPRESAS LA POLAR S.A., y  sociedades relacionadas
directa o indirectamente con esta, no seran responsables del uso indebido de
este contenido o de los adjuntos al mismo.
____________________________________________________________________________



From tonyg at lshift.net  Wed Mar 24 21:34:22 2010
From: tonyg at lshift.net (Tony Garnock-Jones)
Date: Wed, 24 Mar 2010 14:34:22 -0700
Subject: [rabbitmq-discuss] queues scheme at startup time
In-Reply-To: <1269462150.9878.47.camel@juno>
References: <1269462150.9878.47.camel@juno>
Message-ID: <4BAA855E.30008@lshift.net>

Hi Henry,

Not yet, there isn't. Your best bet for now is to either write and run a
small app that sets things up right, with durable exchanges and queues
which will survive restarts, or to use BQL
(http://www.rabbitmq.com/rabbitmq-bql.html) to do much the same thing.

Regards,
  Tony

Henry Molina wrote:
> Hi All,
> 
> Is there a way to define a "exchanges" and "queues" at server's startup?
> 
> I'm trying with config file but I can not find a right definition.
> 
> some like:
> [{rabbit, [{declarations, [{'exchange.declare', [{exchange, "e0"},
> {type, "direct"}, durable]} ]}]}].
> 
> Regards,
> 
> Henry Molina
> 
> ____________________________________________________________________________
> La informacion  contenida en  este mensaje  y en sus documentos adjuntos, es
> estrictamente  confidencial y privado para sus destinatarios. Cualquier uso,
> reproduccion, divulgacion o distribucion no autorizada  de su contenido esta
> estrictamente prohibida y puede ser sancionado criminalmente.
> Si ha  recibido este  correo por  error,  solicitamos avisar  al remitente y
> eliminarlo de su sistema. EMPRESAS LA POLAR S.A., y  sociedades relacionadas
> directa o indirectamente con esta, no seran responsables del uso indebido de
> este contenido o de los adjuntos al mismo.
> ____________________________________________________________________________
> 
> _______________________________________________
> rabbitmq-discuss mailing list
> rabbitmq-discuss at lists.rabbitmq.com
> http://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss



From gman at colo247.com  Thu Mar 25 01:07:09 2010
From: gman at colo247.com (LoOoD)
Date: Wed, 24 Mar 2010 18:07:09 -0700 (PDT)
Subject: [rabbitmq-discuss]  rabbit cluster keeps crashing
Message-ID: <28023134.post@talk.nabble.com>


We've been having a problem with our rabbit servers. We have a cluster setup,
one disk node and two ram nodes. All clients only connect to
the ram nodes. The ram nodes eventually stop accepting new connections.

The only way to fix so far is to restart the affected ram node. 

We're running 1.7.2-1 (installed via the deb repo) on ubuntu 8.10 64bit.

Here is are some crash reports from rabbit-sasl.log:

=CRASH REPORT==== 24-Mar-2010::17:17:49 ===
  crasher:
    pid: <0.8294.1>
    registered_name: []
    exception exit: {{{nodedown,rabbit at job3},
                      {gen_server2,call,[<6902.26064.102>,stat,infinity]}},
                     [{gen_server2,call,3},
                      {rabbit_misc,with_exit_handler,2},
                      {rabbit_channel,return_queue_declare_ok,3},
                      {rabbit_channel,handle_cast,2},
                      {gen_server2,handle_msg,7},
                      {proc_lib,init_p,5}]}
      in function  gen_server2:terminate/6
    initial call: gen:init_it(gen_server2,<0.8293.1>,<0.8293.1>,
                              rabbit_channel,
                              [1,<0.8283.1>,<0.8292.1>,<<"mtvmq">>,<<"/">>],
                              [])
    ancestors: [<0.8293.1>]
    messages: []
    links: [<0.8293.1>,<0.8292.1>]
    dictionary: [{permission_cache,
                     
[{{resource,<<"/">>,queue,<<"worker.transcode_queue">>},
                        configure}]}]
    trap_exit: true
    status: running
    heap_size: 987
    stack_size: 23
    reductions: 2442
  neighbours:
    neighbour: [{pid,<0.8292.1>},
                  {registered_name,[]},
                  {initial_call,{rabbit_writer,mainloop,1}},
                  {current_function,{erlang,hibernate,3}},
                  {ancestors,[]},
                  {messages,[shutdown]},
                  {links,[<0.8294.1>]},
                  {dictionary,[]},
                  {trap_exit,false},
                  {status,runnable},
                  {heap_size,7},
                  {stack_size,0},
                  {reductions,17}]
=CRASH REPORT==== 24-Mar-2010::17:17:49 ===
  crasher:
    pid: <0.9336.0>
    registered_name: []
    exception exit: {{{nodedown,rabbit at job3},
                      {gen_server2,call,[<6902.26064.102>,stat,infinity]}},
                     [{gen_server2,call,3},
                      {rabbit_misc,with_exit_handler,2},
                      {rabbit_channel,return_queue_declare_ok,3},
                      {rabbit_channel,handle_cast,2},
                      {gen_server2,handle_msg,7},
                      {proc_lib,wake_up,3}]}
      in function  gen_server2:terminate/6
    initial call: gen_server2:wake_hib(<0.9335.0>,<0.9336.0>,
                                       {ch,running,1,<0.9333.0>,<0.9334.0>,
                                        <0.9337.0>,none,
                                        {sets,0,16,16,8,80,48,
                                        
{[],[],[],[],[],[],[],[],[],[],[],[],
                                          [],[],[],[]},
                                         {{[],[],[],[],[],[],[],[],[],[],[],
                                           [],[],[],[],[]}}},
                                        3,
                                        {[],[]},
                                        {[],[]},
                                        <<"mtvmq">>,<<"/">>,
                                        <<"worker.transcode_queue">>,
                                        {dict,1,16,16,8,80,48,
                                        
{[],[],[],[],[],[],[],[],[],[],[],[],
                                          [],[],[],[]},
                                         {{[],[],[],[],[],[],[],[],[],[],[],
                                           [],
                                           [[<<"W">>|
                                             {resource,<<"/">>,queue,
                                             
<<"worker.transcode_queue">>}]],
                                           [],[],[]}}}},
                                       rabbit_channel,
                                       {{1269,476217,925545},
                                        {backoff,1460,1000,10000,
                                         {1635,29903,19828}}},
                                       {queue,[],[]},
                                       [])
    ancestors: [<0.9335.0>]
    messages: []
    links: [<0.9335.0>,<0.9334.0>]
    dictionary: [{permission_cache,
                     
[{{resource,<<"/">>,queue,<<"worker.transcode_queue">>},
                        configure}]}]
    trap_exit: true
    status: running
    heap_size: 610
    stack_size: 23
    reductions: 20122
  neighbours:
    neighbour: [{pid,<0.9334.0>},
                  {registered_name,[]},
                  {initial_call,{rabbit_writer,mainloop,1}},
                  {current_function,{erlang,hibernate,3}},
                  {ancestors,[]},
                  {messages,[shutdown]},
                  {links,[<0.9336.0>]},
                  {dictionary,[]},
                  {trap_exit,false},
                  {status,runnable},
                  {heap_size,7},
                  {stack_size,0},
                  {reductions,352}]

=CRASH REPORT==== 24-Mar-2010::17:17:56 ===
  crasher:
    pid: <0.16307.0>
    registered_name: []
    exception exit: {{{nodedown,rabbit at job3},
                      {gen_server2,call,[<6902.26064.102>,stat,infinity]}},
                     [{gen_server2,call,3},
                      {rabbit_misc,with_exit_handler,2},
                      {rabbit_channel,return_queue_declare_ok,3},
                      {rabbit_channel,handle_cast,2},
                      {gen_server2,handle_msg,7},
                      {proc_lib,wake_up,3}]}
      in function  gen_server2:terminate/6
    initial call: gen_server2:wake_hib(<0.16306.0>,<0.16307.0>,
                                      
{ch,running,1,<0.16304.0>,<0.16305.0>,
                                        <0.16308.0>,none,
                                        {sets,0,16,16,8,80,48,
                                        
{[],[],[],[],[],[],[],[],[],[],[],[],
                                          [],[],[],[]},
                                         {{[],[],[],[],[],[],[],[],[],[],[],
                                           [],[],[],[],[]}}},
                                        7,
                                        {[],[]},
                                        {[],[]},
                                        <<"mtvmq">>,<<"/">>,
                                        <<"worker.transcode_queue">>,
                                        {dict,1,16,16,8,80,48,
                                        
{[],[],[],[],[],[],[],[],[],[],[],[],
                                          [],[],[],[]},
                                         {{[],[],[],[],[],[],[],[],[],[],[],
                                           [],
                                           [[<<"W">>|
                                             {resource,<<"/">>,queue,
                                             
<<"worker.transcode_queue">>}]],
                                           [],[],[]}}}},
                                       rabbit_channel,
                                       {{1269,476256,284302},
                                        {backoff,1998,1000,10000,
                                         {7558,3810,6674}}},
                                       {queue,[],[]},
                                       [])
    ancestors: [<0.16306.0>]
    messages: [{'EXIT',<0.16305.0>,normal}]
    links: [<0.16306.0>]
    dictionary: [{permission_cache,
                     
[{{resource,<<"/">>,queue,<<"worker.transcode_queue">>},
                        configure}]}]
    trap_exit: true
    status: running
    heap_size: 987
    stack_size: 23
    reductions: 12119
  neighbours:

=CRASH REPORT==== 24-Mar-2010::17:17:56 ===
  crasher:
    pid: <0.13792.0>
    registered_name: []
    exception exit: {{{nodedown,rabbit at job3},
                      {gen_server2,call,[<6902.26064.102>,stat,infinity]}},
                     [{gen_server2,call,3},
                      {rabbit_misc,with_exit_handler,2},
                      {rabbit_channel,return_queue_declare_ok,3},
                      {rabbit_channel,handle_cast,2},
                      {gen_server2,handle_msg,7},
                      {proc_lib,wake_up,3}]}
      in function  gen_server2:terminate/6
    initial call: gen_server2:wake_hib(<0.13791.0>,<0.13792.0>,
                                      
{ch,running,1,<0.13789.0>,<0.13790.0>,
                                        <0.13793.0>,none,
                                        {sets,0,16,16,8,80,48,
                                        
{[],[],[],[],[],[],[],[],[],[],[],[],
                                          [],[],[],[]},
                                         {{[],[],[],[],[],[],[],[],[],[],[],
                                           [],[],[],[],[]}}},
                                        5,
                                        {[],[]},
                                        {[],[]},
                                        <<"mtvmq">>,<<"/">>,
                                        <<"worker.transcode_queue">>,
                                        {dict,1,16,16,8,80,48,
                                        
{[],[],[],[],[],[],[],[],[],[],[],[],
                                          [],[],[],[]},
                                         {{[],[],[],[],[],[],[],[],[],[],[],
                                           [],
                                           [[<<"W">>|
                                             {resource,<<"/">>,queue,
                                             
<<"worker.transcode_queue">>}]],
                                           [],[],[]}}}},
                                       rabbit_channel,
                                       {{1269,476259,683048},
                                        {backoff,1067,1000,10000,
                                         {21120,18572,28318}}},
                                       {queue,[],[]},
                                       [])
    ancestors: [<0.13791.0>]
    messages: [{'EXIT',<0.13790.0>,normal}]
    links: [<0.13791.0>]
    dictionary: [{permission_cache,
                     
[{{resource,<<"/">>,queue,<<"worker.transcode_queue">>},
                        configure}]}]
    trap_exit: true
    status: running
    heap_size: 987
    stack_size: 23
    reductions: 11759
  neighbours:

-- 
View this message in context: http://old.nabble.com/rabbit-cluster-keeps-crashing-tp28023134p28023134.html
Sent from the RabbitMQ mailing list archive at Nabble.com.




From rtrlists at googlemail.com  Thu Mar 25 17:27:21 2010
From: rtrlists at googlemail.com (Robert Raschke)
Date: Thu, 25 Mar 2010 17:27:21 +0000
Subject: [rabbitmq-discuss] Architecture Question for webservice
In-Reply-To: <20100323133120.47fb0e4a@gmail.com>
References: <20100323133120.47fb0e4a@gmail.com>
Message-ID: <6a3ae47e1003251027p69228706w101dad8e6c9bb5e5@mail.gmail.com>

On Tue, Mar 23, 2010 at 1:31 PM, Jonathan Stott <jonathan.stott at gmail.com>wrote:

> Hi all
>
> I'm setting up a simple webservice.  Since it involves quite a few file
> operations and some potentially long running tasks, I want those tasks
> handled by a separate process (or potentially, processes).  This also lets
> me separate concerns.  So I want to use rabbitmq to communicate between the
> two (and handle the mechanics of queueing jobs).
>
> The job submission side is easy.  I route messages to a queue the worker(s)
> is subscribed to.  It pulls the jobs off the queue, does the work.  But what
> if I want to send back a confirmation?  The obvious way is to set up a queue
> to route back messages to the front end process.  I can even send a 'return
> to' 'address' along with the job.
>
> My question is:  How many queues do I need to send back to?
>
> If I have one queue for the return messages, then how do I split out
> different job outputs from the stream? so that I send correct status reports
> to each client.
>
> But if each job has the webservice setup a queue just to listen for the
> reply, I'll be setting up and tearing down queues all the time.
>
> So which way would people recommend or am I thinking about this the wrong
> way?  Is there an option I've missed?  Is there something which would fit
> better than rabbit?
>
> Regards
> Jon
>
>
I use something similar for "load balancing" some scripting requests in my
system. Essentially two queues and one manager that exposes the API and
communicates with the workers over the two queues, one work request queue
and one for replies. The requests get a correlation id and the manager uses
that to find the appropriate client request to return the result to.

Now, this uses Erlang, where the gen_server behaviour copes rather elegantly
with long running server requests using noreply return values from the
initial call and later sending the reply using the gen_server:reply/2
function.

In essence, the initial work call creates a correlation id and stores that
together with the callers process id. When a worker sends a reply, it quotes
the request's correlation id. The manager then uses that to find the pid
that needs to receive the result.

Sorry for the slight vagueness of this, I'm on holiday and it would take me
a little too long to swap the knowledge back into my brain at the moment.

Robby
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20100325/bd675656/attachment.htm 

From tonyg at lshift.net  Thu Mar 25 21:47:52 2010
From: tonyg at lshift.net (Tony Garnock-Jones)
Date: Thu, 25 Mar 2010 14:47:52 -0700
Subject: [rabbitmq-discuss] rabbitmq-jsonrpc "shortcut" HTTP calls?
In-Reply-To: <14f55851003150951s206bdcb9r5160f73fedbd3926@mail.gmail.com>
References: <14f55851003150951s206bdcb9r5160f73fedbd3926@mail.gmail.com>
Message-ID: <4BABDA08.8070506@lshift.net>

Hi Ivan,

I like the idea. I like it not only for HTTP but also for AMQP's native
wire protocol. I don't have time to work on it at the moment, but
perhaps we can discuss it here: do you have any concrete suggestions for
what it might look like? Maybe start with the HTTP setting and we can
generalise to the AMQP wire protocol later. And of course if you had a
prototype/proof-of-concept implementation, that'd be very welcome in
terms of getting the ball rolling :-)

Regards,
  Tony

Ivan Delchev wrote:
> Hi guys,
> 
> I have a question about RabbitMQ and more specifically
> rabbitmq-jsonrpc. I know that this is an experimental download and is
> basically translation of AMQP to HTTP, but is there a way to optimize
> a typical process of e.g. authenticating yourself, declaring an
> exchange and declaring a queue? Currently this takes 7-8 requests in a
> row, which puts unnecessary load on the server. Does anyone know about
> "shortcut" HTTP requests that bundle multiple AMQP calls in one
> request in order to minimize overhead?
> 
> @RabbitGuys Do you have any plans to implement and support such features?
> 
> 
> Thanks a lot,
> Ivan
> 
> _______________________________________________
> rabbitmq-discuss mailing list
> rabbitmq-discuss at lists.rabbitmq.com
> http://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss



From alexis.richardson at gmail.com  Fri Mar 26 00:15:34 2010
From: alexis.richardson at gmail.com (Alexis Richardson)
Date: Thu, 25 Mar 2010 17:15:34 -0700
Subject: [rabbitmq-discuss] rabbitmq-discuss Digest, Vol 34, Issue 41
In-Reply-To: <19686780-417F-42A3-A2AF-E9E7B91D6337@brightscope.com>
References: <mailman.458.1269301828.22012.rabbitmq-discuss@lists.rabbitmq.com>
	<19686780-417F-42A3-A2AF-E9E7B91D6337@brightscope.com>
Message-ID: <167204d21003251715i1a73f06dha9523076e9ade606@mail.gmail.com>

David

I agree that we should make it public as soon as we can.  It's still
being worked on in relation to a customer delivery.

Can I suggest that you ping us in a month if you have not heard
anything on the usual channels by then?

alexis


On Mon, Mar 22, 2010 at 4:54 PM, David Allison <david at brightscope.com> wrote:
> I would be very interested in this guide if and when it becomes available.
> Is there a way we can be notified of it?
>
> Message: 1
> Date: Mon, 22 Mar 2010 12:11:42 +0000
> From: Matthew Sackman <matthew at lshift.net>
> Subject: Re: [rabbitmq-discuss] High Availability
> To: Mark Steele <msteele at beringmedia.com>
> Cc: rabbitmq-discuss at lists.rabbitmq.com
> Message-ID: <20100322121141.GC19832 at mrnibble.lshift.net>
> Content-Type: text/plain; charset=us-ascii
>
> On Fri, Mar 19, 2010 at 03:32:15PM -0400, Mark Steele wrote:
>
> If you are looking for high availability, the only way that I am aware of is
>
> to use something like DRBD (or SAN backed storage) along with a cluster
>
> resource manager (eg: corosync/heartbeat/etc) and make all your messages
>
> durable and persist to disk.
>
> You can then scale clusters (eg multiple 2-node clusters) for reaching scale
>
> using Erlang's native cluster capabilities without sacrificing on high
>
> availability. A load balancer won't help with HA unless you have some
>
> mechanism for ensuring messages replicate between nodes.
>
> Yes. We now have an OCF script and HA guide which is currently going
> through QA which makes this dance easier and documents the process.
>
> Matthew
>
>
>
> _______________________________________________
> rabbitmq-discuss mailing list
> rabbitmq-discuss at lists.rabbitmq.com
> http://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss
>
>



From matthias at lshift.net  Fri Mar 26 11:08:39 2010
From: matthias at lshift.net (Matthias Radestock)
Date: Fri, 26 Mar 2010 11:08:39 +0000
Subject: [rabbitmq-discuss] Consumer stop to receive messages
 but	continue listening queue problem.
In-Reply-To: <5ef296b31003221225u77bf25a8g13a1e7340d06eff0@mail.gmail.com>
References: <5ef296b31003111900r577611f7vf1a2bdf1b4752db1@mail.gmail.com>	<20100312122432.GA25615@mrnibble.lshift.net>	<5ef296b31003120621m13c87cbdy677adc7425be4eb1@mail.gmail.com>	<k5bpes8lwy.fsf@mrbraver.lshift.net>	<5ef296b31003130445o2775b12eyf16547c6e2c52682@mail.gmail.com>
	<5ef296b31003221225u77bf25a8g13a1e7340d06eff0@mail.gmail.com>
Message-ID: <4BAC95B7.70203@lshift.net>

Gustavo,

Gustavo Aquino wrote:
> 1- Start RabbitMQ
> 2- Start 8 consumers in concurrent mode (8 consumers at same time).
> 3- Start producer
> 4- Fating queue with ~3000 messages per second having ~400bytes
> 5- When queue have ~170.000 stop consumers and producer
> 6- Start consumers in concurrent mode(8 consumers at same time)
> 
> After that, consumers are connected to Rabbit, but if you take a look 
> about queue consumers, we have only 3 or 4 consumers... all others are 
> waiting something but don't consume nothing.

You need to set a basic.qos prefetch limit, e.g. using
http://www.rabbitmq.com/releases/rabbitmq-java-client/v1.7.2/rabbitmq-java-client-javadoc-1.7.2/com/rabbitmq/client/Channel.html#basicQos(int,%20int,%20boolean). 
to place a limit on the number of messages the server will send to a 
client w/o waiting for acknowledgement. Otherwise, when the first 
consumer starts consuming from a queue it will get sent all the queue's 
messages (network capacity permitting).


Matthias.



From matthias at lshift.net  Fri Mar 26 11:20:09 2010
From: matthias at lshift.net (Matthias Radestock)
Date: Fri, 26 Mar 2010 11:20:09 +0000
Subject: [rabbitmq-discuss] New Persister
In-Reply-To: <a108f5c11003221650o5490e856u1f91c3cc18cbb087@mail.gmail.com>
References: <a108f5c11003211526v5687c0dbnc90f4d43b05e7107@mail.gmail.com>	<20100321225826.GA26638@wellquite.org>	<a108f5c11003211829v32351c0m1968abed9399704c@mail.gmail.com>	<20100322125202.GD19832@mrnibble.lshift.net>
	<a108f5c11003221650o5490e856u1f91c3cc18cbb087@mail.gmail.com>
Message-ID: <4BAC9869.6090400@lshift.net>

Scott,

Scott Mohekey wrote:
> One extra thing I should mention, is that while we were seeing this low 
> throughput, half of the queues had an average of 100,000 queued 
> messages. Once we've emptied the queues out, the throughput picks up, 
> but still not much more than around 200 msgs/sec.

Could you perhaps run some tests with MulticastMain, as Matthew 
described? Then we can do a like-for-like comparison with what we are 
seeing on our machines here.


Regards,

Matthias.



From majek04 at gmail.com  Fri Mar 26 11:45:08 2010
From: majek04 at gmail.com (majek04)
Date: Fri, 26 Mar 2010 11:45:08 +0000
Subject: [rabbitmq-discuss] Adapter merges tornado and pika
In-Reply-To: <7be5ca0b1003200706v2b7fbd85oc2e3c7d0f4d80746@mail.gmail.com>
References: <mailman.453.1269093411.22012.rabbitmq-discuss@lists.rabbitmq.com>
	<7be5ca0b1003200706v2b7fbd85oc2e3c7d0f4d80746@mail.gmail.com>
Message-ID: <3bb0d9711003260445m37134302hf0a7b8b94a4d83ae@mail.gmail.com>

On Sat, Mar 20, 2010 at 14:06, Richard Clark <richard at redspider.co.nz> wrote:
> Ok, I'm half asleep so I'll make this quick. After fighting with
> numerous strategies for melding tornado and rabbitmq in a way that
> doesn't involve spawning extra processes, mangling my interpreter,
> going anywhere near twisted, mangling my ability to dispatch properly
> off multiple queues on a single channel etc, I finally managed
> something that, at least for first appearances, works.
>
> asyncloop.py, an ioloop handler that mostly pretends to be an asyncore
> dispatcher
> ioloop_adapter.py, an adapter almost exactly like the
> asyncore_adapter.py in pika, except it uses the asyncloop and gets rid
> of some crap (and, unfortunately, timers, but they're easy to put back
> using ioloop stuff)

Thanks for that. It looks very interesting. We definitely need to find a way
how to use AMQP in async web servers.

Although, I'd think it would be better to move Pika to Tornado async
adapter rather than moving Tornado to Asyncore. Do you think it's sensible?

Here's my attempt to replace Asyncore with Select for pika:
http://github.com/majek/pika/blob/master/pika/poll_adapter.py

I noticed a strange thing in the code, why do you import py-amqplib in
frontend.py#16?

Marek Majkowski



From majek04 at gmail.com  Fri Mar 26 12:07:36 2010
From: majek04 at gmail.com (majek04)
Date: Fri, 26 Mar 2010 12:07:36 +0000
Subject: [rabbitmq-discuss] Increasing base memory.
In-Reply-To: <5ef296b31003221204i586008aakbfb818fbbeb5acfc@mail.gmail.com>
References: <5ef296b31003170512i50a79c9dm2afc0bb56e5be8db@mail.gmail.com>
	<5ef296b31003170704y61c297e0p7e94b0d044204ffd@mail.gmail.com>
	<20100317142001.GB4039@mrnibble.lshift.net>
	<5ef296b31003170816u6372f3efu532a64d29f88c2bf@mail.gmail.com>
	<20100317152239.GF4039@mrnibble.lshift.net>
	<130B921E-7E72-4E1F-9BC8-6D020E430D25@gmail.com>
	<5ef296b31003181434j72a265fdq97345aa44abe76c9@mail.gmail.com>
	<167204d21003181439m6f0f9df8x38c7a5e9ded2108@mail.gmail.com>
	<5ef296b31003181509j71e1ae50y54837722e9f20350@mail.gmail.com>
	<5ef296b31003221204i586008aakbfb818fbbeb5acfc@mail.gmail.com>
Message-ID: <3bb0d9711003260507i2475284fue5f3fc83dd6a4efe@mail.gmail.com>

On Mon, Mar 22, 2010 at 19:04, Gustavo Aquino <aquino.gustavo at gmail.com> wrote:
> Well, I think that I discovery a problem in documentation.
> I do a config and now Rabbit are running with 8Gb under a ppc environment
> with 12Gb. I just change the rabbitmq.config to
> ?[{rabbit, [{vm_memory_high_watermark,?1.8}]}]. If I change to 2.0 it get
> 10Gb o.O... well I don't understand the pattern for it,

Gustavo,

> according to
> documentation 0.8 equals 80% of memory... but 1.8 ??? and 2.0 ??? what is ?

0.8 equals 80% of _detected memory_. It looks like erlang on your machine
is confused and doesn't correctly recognize the amount of real memory.

Easy calculation shows that erlang believes that your machine has
about 4.4GB RAM:
8GB/1.8 = 4.4GB

Please feel free to twek the 'vm_memory_high_watermark' ratio until
the "memory limit" will be set to whatever you want.

Please do remember that you should keep "Memory limit" value reported
by RabbitMQ
to be around half of available RAM on your box (that's why the default is 0.4).

That way RabbitMQ will try to constatnly use around half of your memory,
but you'll still have another half for Erlang VM memory spikes during
garbage collection.

Hope that helps.

 Marek Majkowski



From bmurphy1976 at gmail.com  Fri Mar 26 13:33:19 2010
From: bmurphy1976 at gmail.com (Bryan Murphy)
Date: Fri, 26 Mar 2010 08:33:19 -0500
Subject: [rabbitmq-discuss] Consumer stop to receive messages but
	continue listening queue problem.
In-Reply-To: <4BAC95B7.70203@lshift.net>
References: <5ef296b31003111900r577611f7vf1a2bdf1b4752db1@mail.gmail.com>
	<20100312122432.GA25615@mrnibble.lshift.net>
	<5ef296b31003120621m13c87cbdy677adc7425be4eb1@mail.gmail.com>
	<k5bpes8lwy.fsf@mrbraver.lshift.net>
	<5ef296b31003130445o2775b12eyf16547c6e2c52682@mail.gmail.com>
	<5ef296b31003221225u77bf25a8g13a1e7340d06eff0@mail.gmail.com>
	<4BAC95B7.70203@lshift.net>
Message-ID: <7fd310d11003260633q1e9a163fse3c4df928598e57a@mail.gmail.com>

Another technique we use:

Start one consumer.

Start your other consumers.

Restart the first consumer.

This let's you keep the high prefetch settings while still getting the
messages to distribute more evenly.

Bryan

On Fri, Mar 26, 2010 at 6:08 AM, Matthias Radestock <matthias at lshift.net>wrote:

> Gustavo,
>
> Gustavo Aquino wrote:
> > 1- Start RabbitMQ
> > 2- Start 8 consumers in concurrent mode (8 consumers at same time).
> > 3- Start producer
> > 4- Fating queue with ~3000 messages per second having ~400bytes
> > 5- When queue have ~170.000 stop consumers and producer
> > 6- Start consumers in concurrent mode(8 consumers at same time)
> >
> > After that, consumers are connected to Rabbit, but if you take a look
> > about queue consumers, we have only 3 or 4 consumers... all others are
> > waiting something but don't consume nothing.
>
> You need to set a basic.qos prefetch limit, e.g. using
>
> http://www.rabbitmq.com/releases/rabbitmq-java-client/v1.7.2/rabbitmq-java-client-javadoc-1.7.2/com/rabbitmq/client/Channel.html#basicQos(int,%20int,%20boolean)<http://www.rabbitmq.com/releases/rabbitmq-java-client/v1.7.2/rabbitmq-java-client-javadoc-1.7.2/com/rabbitmq/client/Channel.html#basicQos%28int,%20int,%20boolean%29>
> .
> to place a limit on the number of messages the server will send to a
> client w/o waiting for acknowledgement. Otherwise, when the first
> consumer starts consuming from a queue it will get sent all the queue's
> messages (network capacity permitting).
>
>
> Matthias.
>
> _______________________________________________
> rabbitmq-discuss mailing list
> rabbitmq-discuss at lists.rabbitmq.com
> http://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20100326/eeb52326/attachment.htm 

From majek04 at gmail.com  Fri Mar 26 13:45:36 2010
From: majek04 at gmail.com (majek04)
Date: Fri, 26 Mar 2010 13:45:36 +0000
Subject: [rabbitmq-discuss] Scaling consumers
In-Reply-To: <376f3e6f1003240417v3aced03x41c3b8b2dfc0f4d6@mail.gmail.com>
References: <376f3e6f1003240417v3aced03x41c3b8b2dfc0f4d6@mail.gmail.com>
Message-ID: <3bb0d9711003260645u2c73ba2w56cd79164d32e786@mail.gmail.com>

On Wed, Mar 24, 2010 at 11:17, Suhail Doshi <suhail at mixpanel.com> wrote:
> How are people scaling consumers to handle tens of millions of messages
> inside a queue? We use Python but do you guys Twisted, Eventlet, Gevent,
> etc?
> Creating a bunch of Python processes seems very inefficient and most
> applications I would think our mostly network io bound. What are you guys
> doing to scale your consumers?

If I understand the question correctly, the question is:
 - a _lot_ of messages
 - a _lot_ of consumers
 - but the simplistic scenario is that every consumer is
  a separate process or thread.
 - as consumers are network bound, how to be able to
  have a lot of them, without using too much RAM and
  not waste CPU time on context switches.

Few ideas:

1) use proper asynchronous Python client - txamqp for Twisted.
 * That should be the best option.
 * You will be fully asynchronous on the network level.
 * That's what hardcore Python people use.

2) use hybrid Python client - Pika based on asyncore.
 * It is asynchronous in some aspects, it can handle a lot
   of parallel comsumers in one process (aka event loop).
 * On the other hand it's not really asynchronous
   with some other things, like publishing or declaring queues.
 * You'll need extra work to asynchronously support other
   protocols than AMQP.
 * But should work fine if your app is doing AMQP-to-AMQP things.

3) use synchronous Python client - py-amqp:
 * writing customer code is very simple
 * you can scale by spawning large number of threads/processes.
 * But you loose some CPU on context switches.
 * You can loose some RAM on the thread or process overhead.
 * This technique is widely used.

> Creating a bunch of Python processes seems very inefficient and most
> applications I would think our mostly network io bound. What are you guys
> doing to scale your consumers?

Although it's 'inefficient', it's enough for most scenarios.

Marek Majkowski



From brendan.doyle at epicadvertising.com  Fri Mar 26 14:33:25 2010
From: brendan.doyle at epicadvertising.com (Brendan Doyle)
Date: Fri, 26 Mar 2010 09:33:25 -0500
Subject: [rabbitmq-discuss] Client connection timeout
Message-ID: <DF5EA4D3-4B6B-4DF4-B9EE-6F57EF24407F@epicadvertising.com>

Hey all.  Had an issue this morning with a client ( producer + consumer ) unable to connect to the server.

- 1.7.0 on R13B02
- ulimit -n = 1024
- rabbitmq process was up and not using very much CPU/memory
- rabbitmqctl could connect and report queue status
- a number of consumers that run as daemons were still connected, receiving messages, and processing normally

The particular client that could not connect runs as a cron and periodically checks for new messages on a queue.

In the sasl log there are a large number of entries like this block:

=INFO REPORT==== 26-Mar-2010::06:18:02 ===
starting TCP connection <0.22422.218> from 10.10.8.105:46037

=INFO REPORT==== 26-Mar-2010::06:18:03 ===
accepted TCP connection on 0.0.0.0:5672 from 10.10.8.105:46038

=WARNING REPORT==== 26-Mar-2010::06:18:04 ===
exception on TCP connection <0.22422.218> from 10.10.8.105:46037
connection_closed_abruptly

Which seems to be the client connecting and not disconnecting cleanly.  Finally followed by:

=ERROR REPORT==== 26-Mar-2010::06:18:24 ===
** Generic server <0.169.0> terminating
** Last message in was {inet_async,#Port<0.973>,15606,{ok,#Port<0.23580885>}}
** When Server state == none
** Reason for termination ==
** {cannot_accept,{error,emfile}}

It was at this time that the server started refusing connections.

So it appears we ran out of file descriptors which crashed the gen_server owning the listening socket.  My questions are:

1. If the gen_server was started by a supervisor, why would it not come back up and start accepting connections once again?
2. Given that the client is not closing connections cleanly ( I am looking into this ) but rabbit is successfully detecting that the connection HAS closed, why would we get an out of file descriptors error?  I would hope that file descriptors are released properly and re-used

This server was running for a few months before this issue cropped up so it may be a 'slow' bug and is not super critical for us as a restart fixed things.  However hopefully someone can shed some light

Brendan Doyle 
Manager, Application Development 
Epic Advertising - New York, Toronto, San Francisco, London 
www.EpicAdvertising.com 
60 Columbia Way, Suite 310 
Markham, ON L3R 0C9 
(905) 946-0300 x.2358 work 
(647) 885-7159 mobile
(888) 666-3120 fax 
brendan.doyle at epicadvertising.com




From jasonjwwilliams at gmail.com  Fri Mar 26 16:55:08 2010
From: jasonjwwilliams at gmail.com (Jason J. W. Williams)
Date: Fri, 26 Mar 2010 10:55:08 -0600
Subject: [rabbitmq-discuss] Adapter merges tornado and pika
In-Reply-To: <7be5ca0b1003200706v2b7fbd85oc2e3c7d0f4d80746@mail.gmail.com>
References: <mailman.453.1269093411.22012.rabbitmq-discuss@lists.rabbitmq.com>
	<7be5ca0b1003200706v2b7fbd85oc2e3c7d0f4d80746@mail.gmail.com>
Message-ID: <3b949f091003260955g56ae21e7s65740d5b689839bf@mail.gmail.com>

I haven't spent much time looking at Tornado yet, but is the txAMQP
library portable since it's already async (Twisted)?

-J

On Sat, Mar 20, 2010 at 8:06 AM, Richard Clark <richard at redspider.co.nz> wrote:
> Ok, I'm half asleep so I'll make this quick. After fighting with
> numerous strategies for melding tornado and rabbitmq in a way that
> doesn't involve spawning extra processes, mangling my interpreter,
> going anywhere near twisted, mangling my ability to dispatch properly
> off multiple queues on a single channel etc, I finally managed
> something that, at least for first appearances, works.
>
> The changes are fairly simple. Tornado needs one 2 line change to
> ioloop to allow it to run a loop once, rather than spinning - sadly
> attempts to do it without this change caused nightmarish bugs to
> emerge.
>
> In addition to that, two files (attached, no warranty etc etc) are
> required:
>
> asyncloop.py, an ioloop handler that mostly pretends to be an asyncore
> dispatcher
> ioloop_adapter.py, an adapter almost exactly like the
> asyncore_adapter.py in pika, except it uses the asyncloop and gets rid
> of some crap (and, unfortunately, timers, but they're easy to put back
> using ioloop stuff)
>
> In no way is this production code, it's barely even tested. I intend
> to try and get it further in that direction tomorrow, but in case
> anyone else has been banging their head on the same problem I figured
> I'd throw the strategy out there.
>
> Files:
> http://gist.github.com/338680
>
> Example:
> http://gist.github.com/338683 (requires an amqp echo service on echo/
> echo)
>
> cross-posting to tornado as well.
>
> _______________________________________________
> rabbitmq-discuss mailing list
> rabbitmq-discuss at lists.rabbitmq.com
> http://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss
>



From thomas.herve at canonical.com  Fri Mar 26 17:59:13 2010
From: thomas.herve at canonical.com (Thomas =?ISO-8859-1?Q?Herv=E9?=)
Date: Fri, 26 Mar 2010 18:59:13 +0100
Subject: [rabbitmq-discuss] Adapter merges tornado and pika
In-Reply-To: <7be5ca0b1003200706v2b7fbd85oc2e3c7d0f4d80746@mail.gmail.com>
References: <mailman.453.1269093411.22012.rabbitmq-discuss@lists.rabbitmq.com>
	<7be5ca0b1003200706v2b7fbd85oc2e3c7d0f4d80746@mail.gmail.com>
Message-ID: <1269626353.2133.2.camel@minime>

Le dimanche 21 mars 2010 ? 03:06 +1300, Richard Clark a ?crit :
> Ok, I'm half asleep so I'll make this quick. After fighting with
> numerous strategies for melding tornado and rabbitmq in a way that
> doesn't involve spawning extra processes, mangling my interpreter,
> going anywhere near twisted, mangling my ability to dispatch properly
> off multiple queues on a single channel etc, I finally managed
> something that, at least for first appearances, works.

Out of curiosity, what do you find so bad about Twisted?

-- 
Thomas




From matthew at lshift.net  Fri Mar 26 18:11:31 2010
From: matthew at lshift.net (Matthew Sackman)
Date: Fri, 26 Mar 2010 18:11:31 +0000
Subject: [rabbitmq-discuss] Consumer stop to receive messages but
 continue listening queue problem.
In-Reply-To: <7fd310d11003260633q1e9a163fse3c4df928598e57a@mail.gmail.com>
References: <5ef296b31003111900r577611f7vf1a2bdf1b4752db1@mail.gmail.com>
	<20100312122432.GA25615@mrnibble.lshift.net>
	<5ef296b31003120621m13c87cbdy677adc7425be4eb1@mail.gmail.com>
	<k5bpes8lwy.fsf@mrbraver.lshift.net>
	<5ef296b31003130445o2775b12eyf16547c6e2c52682@mail.gmail.com>
	<5ef296b31003221225u77bf25a8g13a1e7340d06eff0@mail.gmail.com>
	<4BAC95B7.70203@lshift.net>
	<7fd310d11003260633q1e9a163fse3c4df928598e57a@mail.gmail.com>
Message-ID: <20100326181130.GA2622@wellquite.org>

Hi,

On Fri, Mar 26, 2010 at 08:33:19AM -0500, Bryan Murphy wrote:
> Another technique we use:
> 
> Start one consumer.
> 
> Start your other consumers.
> 
> Restart the first consumer.
> 
> This let's you keep the high prefetch settings while still getting the
> messages to distribute more evenly.

I would not recommend that at all - you're likely to get messages in
different orders with this scheme. QoS is much better idea, or, use
channel.flow from the client (may only work in newer-than-1.7.2 - can't
remember when it appeared) to prevent any messages being sent out
*before* issuing the basic.consume.

You could then have either a delay or some signal through some other
exchange and queues (and channel) to get the clients to drop the
channel.flow and start consuming.

Matthew



From matthew at lshift.net  Fri Mar 26 18:18:48 2010
From: matthew at lshift.net (Matthew Sackman)
Date: Fri, 26 Mar 2010 18:18:48 +0000
Subject: [rabbitmq-discuss] Client connection timeout
In-Reply-To: <DF5EA4D3-4B6B-4DF4-B9EE-6F57EF24407F@epicadvertising.com>
References: <DF5EA4D3-4B6B-4DF4-B9EE-6F57EF24407F@epicadvertising.com>
Message-ID: <20100326181847.GB2622@wellquite.org>

Howdy,

On Fri, Mar 26, 2010 at 09:33:25AM -0500, Brendan Doyle wrote:
> 1. If the gen_server was started by a supervisor, why would it not come back up and start accepting connections once again?

I would expect it did. However, supervisors have a restart limit in
terms of the number of restarts within a particular period of time. I
would expect that it came back up and then immediately died again with
the same error, cycled like this for a while, and then the supervisor
gave up, exited, and took down the rest of rabbit. If this was the case
you should have entries in your logs about "Reached maximum restart
intensity".

Or, Erlang could have decided to try and reread the .beam file for the
module (no idea when it decides to do that), hit the same emfile error
and decided to die.

> 2. Given that the client is not closing connections cleanly ( I am looking into this ) but rabbit is successfully detecting that the connection HAS closed, why would we get an out of file descriptors error?  I would hope that file descriptors are released properly and re-used

Should be. lsof or rumaging around in /proc/$PID/fd will show you what
is open and what isn't. You may be able to detect a leak there. Also
netstat -anp | grep beam may be illuminatory.

> This server was running for a few months before this issue cropped up so it may be a 'slow' bug and is not super critical for us as a restart fixed things.  However hopefully someone can shed some light

Sure. Whilst I'm sure I sound like a stuck record these days, this bug
is fixed in the new persister branch, where we track file descriptors
including sockets and stop accepting new network connections when we get
near the limit. The goal here is really to protect the erlang VM so that
we don't die horribly when we run out of file descriptors. My recent
blog post to the lshift blog explains in some detail how the general
mechanism works.

http://www.lshift.net/blog/2010/03/23/the-fine-art-of-holding-a-file-descriptor

Matthew



From brendan.doyle at epicadvertising.com  Fri Mar 26 18:34:08 2010
From: brendan.doyle at epicadvertising.com (Brendan Doyle)
Date: Fri, 26 Mar 2010 13:34:08 -0500
Subject: [rabbitmq-discuss] Client connection timeout
In-Reply-To: <20100326181847.GB2622@wellquite.org>
References: <DF5EA4D3-4B6B-4DF4-B9EE-6F57EF24407F@epicadvertising.com>
	<20100326181847.GB2622@wellquite.org>
Message-ID: <AAE97D57-00E7-474D-AF6D-A21E6818FD1C@epicadvertising.com>

Thanks for the answers Matthew, couple of comments inline

On 2010-03-26, at 2:18 PM, Matthew Sackman wrote:

Howdy,

On Fri, Mar 26, 2010 at 09:33:25AM -0500, Brendan Doyle wrote:
1. If the gen_server was started by a supervisor, why would it not come back up and start accepting connections once again?

I would expect it did. However, supervisors have a restart limit in
terms of the number of restarts within a particular period of time. I
would expect that it came back up and then immediately died again with
the same error, cycled like this for a while, and then the supervisor
gave up, exited, and took down the rest of rabbit. If this was the case
you should have entries in your logs about "Reached maximum restart
intensity".

Or, Erlang could have decided to try and reread the .beam file for the
module (no idea when it decides to do that), hit the same emfile error
and decided to die.


I did look for the restart intensity message originally because that's what I would have expected to see, but the emfile error was the first and only error message other than connection open/close and persister logs rolling.  So it was probably scenario #2 you describe.  I just would have expected that to take down the whole VM if the child spec was defined with restart type permanent

2. Given that the client is not closing connections cleanly ( I am looking into this ) but rabbit is successfully detecting that the connection HAS closed, why would we get an out of file descriptors error?  I would hope that file descriptors are released properly and re-used

Should be. lsof or rumaging around in /proc/$PID/fd will show you what
is open and what isn't. You may be able to detect a leak there. Also
netstat -anp | grep beam may be illuminatory.

This server was running for a few months before this issue cropped up so it may be a 'slow' bug and is not super critical for us as a restart fixed things.  However hopefully someone can shed some light

Sure. Whilst I'm sure I sound like a stuck record these days, this bug
is fixed in the new persister branch, where we track file descriptors
including sockets and stop accepting new network connections when we get
near the limit. The goal here is really to protect the erlang VM so that
we don't die horribly when we run out of file descriptors. My recent
blog post to the lshift blog explains in some detail how the general
mechanism works.

http://www.lshift.net/blog/2010/03/23/the-fine-art-of-holding-a-file-descriptor


Thanks for the info, I have seen this response from you about quite a few issues ;) but that's the way things go

Good blog post that I hadn't seen yet

Matthew

Brendan Doyle
Manager, Application Development
Epic Advertising - New York, Toronto, San Francisco, London
www.EpicAdvertising.com<http://www.EpicAdvertising.com>
60 Columbia Way, Suite 310
Markham, ON L3R 0C9
(905) 946-0300 x.2358 work
(647) 885-7159 mobile
(888) 666-3120 fax
brendan.doyle at epicadvertising.com<mailto:brendan.doyle at epicadvertising.com>

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20100326/c1fdbf63/attachment.htm 

From bmurphy1976 at gmail.com  Fri Mar 26 20:15:31 2010
From: bmurphy1976 at gmail.com (Bryan Murphy)
Date: Fri, 26 Mar 2010 15:15:31 -0500
Subject: [rabbitmq-discuss] Consumer stop to receive messages but
	continue listening queue problem.
In-Reply-To: <20100326181130.GA2622@wellquite.org>
References: <5ef296b31003111900r577611f7vf1a2bdf1b4752db1@mail.gmail.com>
	<20100312122432.GA25615@mrnibble.lshift.net>
	<5ef296b31003120621m13c87cbdy677adc7425be4eb1@mail.gmail.com>
	<k5bpes8lwy.fsf@mrbraver.lshift.net>
	<5ef296b31003130445o2775b12eyf16547c6e2c52682@mail.gmail.com>
	<5ef296b31003221225u77bf25a8g13a1e7340d06eff0@mail.gmail.com>
	<4BAC95B7.70203@lshift.net>
	<7fd310d11003260633q1e9a163fse3c4df928598e57a@mail.gmail.com>
	<20100326181130.GA2622@wellquite.org>
Message-ID: <7fd310d11003261315m39a8d63eo11e36e72e9308e62@mail.gmail.com>

Make sense, although we don't care about the order so it doesn't affect us
so much.

Bryan

On Fri, Mar 26, 2010 at 1:11 PM, Matthew Sackman <matthew at lshift.net> wrote:

> Hi,
>
> On Fri, Mar 26, 2010 at 08:33:19AM -0500, Bryan Murphy wrote:
> > Another technique we use:
> >
> > Start one consumer.
> >
> > Start your other consumers.
> >
> > Restart the first consumer.
> >
> > This let's you keep the high prefetch settings while still getting the
> > messages to distribute more evenly.
>
> I would not recommend that at all - you're likely to get messages in
> different orders with this scheme. QoS is much better idea, or, use
> channel.flow from the client (may only work in newer-than-1.7.2 - can't
> remember when it appeared) to prevent any messages being sent out
> *before* issuing the basic.consume.
>
> You could then have either a delay or some signal through some other
> exchange and queues (and channel) to get the clients to drop the
> channel.flow and start consuming.
>
> Matthew
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20100326/379ce35a/attachment.htm 

From matthew at lshift.net  Fri Mar 26 20:40:42 2010
From: matthew at lshift.net (Matthew Sackman)
Date: Fri, 26 Mar 2010 20:40:42 +0000
Subject: [rabbitmq-discuss] Client connection timeout
In-Reply-To: <AAE97D57-00E7-474D-AF6D-A21E6818FD1C@epicadvertising.com>
References: <DF5EA4D3-4B6B-4DF4-B9EE-6F57EF24407F@epicadvertising.com>
	<20100326181847.GB2622@wellquite.org>
	<AAE97D57-00E7-474D-AF6D-A21E6818FD1C@epicadvertising.com>
Message-ID: <20100326204042.GA3594@wellquite.org>

On Fri, Mar 26, 2010 at 01:34:08PM -0500, Brendan Doyle wrote:
> Or, Erlang could have decided to try and reread the .beam file for the
> module (no idea when it decides to do that), hit the same emfile error
> and decided to die.
> 
> 
> I did look for the restart intensity message originally because that's what I would have expected to see, but the emfile error was the first and only error message other than connection open/close and persister logs rolling.  So it was probably scenario #2 you describe.  I just would have expected that to take down the whole VM if the child spec was defined with restart type permanent

Well, I'm quite sure there are a large number of variations on #2. As
far as I've seen, once you hit emfile, it's pretty difficult to recover
from it, hence our move to try and stop this type of error from
happening in the first place.

> Thanks for the info, I have seen this response from you about quite a few issues ;) but that's the way things go

Yeah, any year now it'll get merged into default...

Matthew



From jasonjwwilliams at gmail.com  Sun Mar 28 00:19:47 2010
From: jasonjwwilliams at gmail.com (Jason J. W. Williams)
Date: Sat, 27 Mar 2010 18:19:47 -0600
Subject: [rabbitmq-discuss] txAMQP on Github
Message-ID: <3b949f091003271719l1dfb9703g1b5ab6c9cd3ba2b2@mail.gmail.com>

Hi Guys,

If anybody would prefer a copy of the txAMQP in Git instead of Bazaar,
I've imported the repo over at Github:

http://github.com/williamsjj/txamqp

I intend on updating it from the bzr repo regularly. Should allow easy
forking if you're into Github like me.

-J



From ivdelchev at gmail.com  Sun Mar 28 12:20:33 2010
From: ivdelchev at gmail.com (Ivan Delchev)
Date: Sun, 28 Mar 2010 13:20:33 +0200
Subject: [rabbitmq-discuss] rabbitmq-jsonrpc "shortcut" HTTP calls?
In-Reply-To: <4BABDA08.8070506@lshift.net>
References: <14f55851003150951s206bdcb9r5160f73fedbd3926@mail.gmail.com>
	<4BABDA08.8070506@lshift.net>
Message-ID: <i2r14f55851003280420o80443e6eja644a142fddf4053@mail.gmail.com>

Hi Tony,

Nice to hear that! Anyway, I didn't have in mind changing the AMQP
protocol, I can imagine that there are plenty of people that use it in
its current form. In case of the HTTP impl I think the following
simple steps could help and can be easily accomodated in the server
impl:

1. Combine the "system.describe" calls to /rpc/rabbitmq and
/rpc/{service_hash}. Return a different hash in the "name" parameter
if the URL is already in use, otherwise return the same.  Thus the 2
"system.describe" calls can become 1.

2. Bundle calls that do not depend on each other in one call - e.g by
providing an array of method calls, that should be executed in the
same order.

If no anonymous declarations are used, this should be acceptable:

{"version":"1.1","id":5,"methods" : [
    {"method":"open","params":["2","5b3beb2605605b9ebf5055f3e9e29754",120,null]}
    {"method":"call","params":["access.request",["/data",false,true,true,true,true]]},
    {"method":"call","params":["exchange.declare",[1,"exchange1","fanout",false,false,true,false,false,{}]]},
    {"method":"call","params":["queue.declare",[1,"queue1",false,false,true,true,false,{}]]},
    {"method":"call","params":["queue.bind",[1,"queue1","exchange1","",false,{}]]}
    ]}

Another options is in case of anonymous declarations to nest the
declarations and compute the internal results first and use them as
arguments for the upper ones:

{"version":"1.1","id":5,"methods" : [
    {"method":"open","params":["2","5b3beb2605605b9ebf5055f3e9e29754",120,null]}
    {"method":"call","params":["access.request",["/data",false,true,true,true,true]]},
    {"method":"call","params":["queue.bind",[1,
        {"method":"call","params":["queue.declare",[1,"",false,false,true,true,false,{}]]},
        {"method":"call","params":["exchange.declare",[1,"","fanout",false,false,true,false,false,{}]]},
        "",false,{}]]}
    ]}

That should be possible and I think and will save quite some HTTP
roundtrips. If you provide the server-side I can try to deliver the
javascript client :)

Cheers,
Ivan

On Thu, Mar 25, 2010 at 10:47 PM, Tony Garnock-Jones <tonyg at lshift.net> wrote:
> Hi Ivan,
>
> I like the idea. I like it not only for HTTP but also for AMQP's native
> wire protocol. I don't have time to work on it at the moment, but
> perhaps we can discuss it here: do you have any concrete suggestions for
> what it might look like? Maybe start with the HTTP setting and we can
> generalise to the AMQP wire protocol later. And of course if you had a
> prototype/proof-of-concept implementation, that'd be very welcome in
> terms of getting the ball rolling :-)
>
> Regards,
> ?Tony
>
> Ivan Delchev wrote:
>> Hi guys,
>>
>> I have a question about RabbitMQ and more specifically
>> rabbitmq-jsonrpc. I know that this is an experimental download and is
>> basically translation of AMQP to HTTP, but is there a way to optimize
>> a typical process of e.g. authenticating yourself, declaring an
>> exchange and declaring a queue? Currently this takes 7-8 requests in a
>> row, which puts unnecessary load on the server. Does anyone know about
>> "shortcut" HTTP requests that bundle multiple AMQP calls in one
>> request in order to minimize overhead?
>>
>> @RabbitGuys Do you have any plans to implement and support such features?
>>
>>
>> Thanks a lot,
>> Ivan
>>
>> _______________________________________________
>> rabbitmq-discuss mailing list
>> rabbitmq-discuss at lists.rabbitmq.com
>> http://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss
>



From lists at zopyx.com  Mon Mar 29 05:56:44 2010
From: lists at zopyx.com (Andreas Jung)
Date: Mon, 29 Mar 2010 06:56:44 +0200
Subject: [rabbitmq-discuss] "Returning" values
Message-ID: <42d8a3d11003282156o45e14cf8l748c37531c988d30@mail.gmail.com>

Hi there,

I am aware that a message queue does not support returning value. Is there a
pattern for the following usecase:

User submits a data set through the browser to the backend application. The
backend puts the data into a queue in order to be processed by one of a
worker processes running on some other machine taking requests from the
queue.

The client application should be notified or take notice when the data has
been processed and get hold of some return value.

I was thinking for having some client specific 'return queue' where the
worker could insert the return value...however the number of queues is
limited ( by RAM?) and the number of possible clients may exceed the number
of maximum queues....so not a solution..

Is there a pattern for implementing this usecase with RabbitMQ?

-aj
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20100329/c8279c92/attachment.htm 

From magnus at alum.mit.edu  Mon Mar 29 09:03:22 2010
From: magnus at alum.mit.edu (Daniel Risacher)
Date: Mon, 29 Mar 2010 04:03:22 -0400
Subject: [rabbitmq-discuss] debugging an unroutable message
Message-ID: <a3ff00ac1003290103u2d57714bqfc48efef2032ff02@mail.gmail.com>

Here's my use case:  controlling (1 or more) daemons via multiple user
interfaces, e.g. web, command-line, etc.

1. At startup, the daemon(s) declares a queue bound to a fanout
exchange ('brokaw') to listen for broadcast messages from clients.

2. When run, the command-line client creates a queue to listen for
replies, and binds it to amq.direct with a routing key equal to the
queue name (which I let the server generate).

3. Command-line client sends a 'PING' message to the 'brokaw'
exchange, with reply-to set to the name of its reply queue.

4. Daemon gets the 'PING' message

4.5 Daemon responds with a 'PONG' to amq.direct with the routing_key
set to the reply-to field.

5. Command-line client waits around for eh, 500ms for a response,
dumps result to console and exits.

(All coded in perl, with POE::Component::Client::AMQP.)

Here's the bug symptom- it strictly alternates between working and not
working.  Works the first time, not the second, etc.   When it doesn't
work, the daemon gets the PING, but the PONG is returned as
unroutable.

Here's the dump of the return frame:
--- !!perl/hash:Net::AMQP::Frame::Method
channel: 1
method_frame: !!perl/hash:Net::AMQP::Protocol::Basic::Return
  exchange: amq.direct
  reply_code: 312
  reply_text: unroutable
  routing_key: amq.gen-HIi2IrPHZ8QST0+FvDDRCA==
payload: ''
type_id: 1


So two questions:

First, is my architecture screwed up? (Esp. am I misusing amq.direct?)
Second, how can I debug this ?  How do I tell *why* it returns unroutable?



From videlalvaro at gmail.com  Mon Mar 29 11:12:16 2010
From: videlalvaro at gmail.com (Alvaro Videla)
Date: Mon, 29 Mar 2010 18:12:16 +0800
Subject: [rabbitmq-discuss] "Returning" values
In-Reply-To: <42d8a3d11003282156o45e14cf8l748c37531c988d30@mail.gmail.com>
References: <42d8a3d11003282156o45e14cf8l748c37531c988d30@mail.gmail.com>
Message-ID: <D9CEFB99-FBF4-452D-BD68-1CB097F6FB22@gmail.com>

Sorry, forgot to "reply all" 

Answer:

Usually you set up a consumer on the client system that act as a callback. So when the job is finished, it inserts a new message in the queue with the status of the process, this message is then retrieved by the client application.

On Mar 29, 2010, at 12:56 PM, Andreas Jung wrote:

> Hi there,
> 
> I am aware that a message queue does not support returning value. Is there a pattern for the following usecase:
> 
> User submits a data set through the browser to the backend application. The backend puts the data into a queue in order to be processed by one of a worker processes running on some other machine taking requests from the queue.
> 
> The client application should be notified or take notice when the data has been processed and get hold of some return value.
> 
> I was thinking for having some client specific 'return queue' where the worker could insert the return value...however the number of queues is limited ( by RAM?) and the number of possible clients may exceed the number of maximum queues....so not a solution..
> 
> Is there a pattern for implementing this usecase with RabbitMQ?
> 
> -aj
> 
> 
> _______________________________________________
> rabbitmq-discuss mailing list
> rabbitmq-discuss at lists.rabbitmq.com
> http://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss




From mabrek at gmail.com  Mon Mar 29 14:21:38 2010
From: mabrek at gmail.com (mabrek)
Date: Mon, 29 Mar 2010 17:21:38 +0400
Subject: [rabbitmq-discuss] rabbitmq_status_web crashed on daylight
	savings time switchover, took down RabbitMQ
In-Reply-To: <ac6faba21003141945p1cd5effdu1755db8f10f9a827@mail.gmail.com>
References: <ac6faba21003141945p1cd5effdu1755db8f10f9a827@mail.gmail.com>
Message-ID: <c26271fb1003290621k11605be5m2f755d67fcfce145@mail.gmail.com>

It hasn't fixed, I've got this error with erlang R13B04.

On Mon, Mar 15, 2010 at 6:45 AM, Greg Campbell <gtcampbell at gmail.com> wrote:
> ** Generic server rabbit_status_web terminating
> ** Last message in was get_context
> ** When Server state == {state,1268531993140,"Sun, 14 Mar 2010 09:59:53
> GMT",
>
> ... a bunch of queue status data...
>
> ** Reason for termination ==
> ** {{case_clause,[]},
> ??? [{httpd_util,rfc1123_date,1},
> ???? {rabbit_status_web,internal_update,1},
> ???? {rabbit_status_web,handle_call,3},
> ???? {gen_server,handle_msg,5},
> ???? {proc_lib,init_p_do_apply,3}]}
>
>
> The server was running Pacific time, so it looks like it crashed just after
> the switchover to Daylight Savings Time on the West Coast of the United
> States, which occurred Sunday Morning at 10:00:00 GMT.? This occurred on
> multiple machines (not clustered) simultaneously.
>
> The underlying issue in httpd_util:rfc1123_date appears to be an Erlang bug,
> which I believe has been fixed in R13B04 (we're still running R13B03 on the
> server, though):
> http://www.erlang.org/cgi-bin/ezmlm-cgi?2:mss:1681:201001:jffdfifdokimdicjnpcp.
>
> However, it might be worth ensuring that a crash in a plugin doesn't cause
> the entire system to shut down.
>
> Thanks,
> Greg Campbell
>
> _______________________________________________
> rabbitmq-discuss mailing list
> rabbitmq-discuss at lists.rabbitmq.com
> http://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss
>
>



From mabrek at gmail.com  Mon Mar 29 16:05:03 2010
From: mabrek at gmail.com (mabrek)
Date: Mon, 29 Mar 2010 19:05:03 +0400
Subject: [rabbitmq-discuss] bug21673 crashed with very large transaction
Message-ID: <c26271fb1003290805g60b3a313oeb09e6397ad8690d@mail.gmail.com>

Hello.
I've got a crash with new persister and very large transaction. How to
reproduce: open transaction and send large amount of messages without
committing it. Rabbitmq process will use all available memory and then
crash. I tried to send 2000000 messages, but rabbit died at 800000.

Interesting pieces from rabbitmq.log:
=INFO REPORT==== 29-Mar-2010::18:32:54 ===
vm_memory_high_watermark set. Memory used:1682971336 allowed:1648679321

=INFO REPORT==== 29-Mar-2010::18:32:54 ===
    alarm_handler: {set,{vm_memory_high_watermark,[]}}

=INFO REPORT==== 29-Mar-2010::18:33:07 ===
vm_memory_high_watermark clear. Memory used:1337501072 allowed:1648679321

=INFO REPORT==== 29-Mar-2010::18:33:07 ===
    alarm_handler: {clear,vm_memory_high_watermark}

=INFO REPORT==== 29-Mar-2010::18:33:10 ===
vm_memory_high_watermark set. Memory used:2280979328 allowed:1648679321

=INFO REPORT==== 29-Mar-2010::18:33:10 ===
    alarm_handler: {set,{vm_memory_high_watermark,[]}}

=INFO REPORT==== 29-Mar-2010::18:33:13 ===
vm_memory_high_watermark clear. Memory used:1542490912 allowed:1648679321

=INFO REPORT==== 29-Mar-2010::18:33:13 ===
    alarm_handler: {clear,vm_memory_high_watermark}

alarm was set and cleared several times.

startup_err contains:
Erlang has closed
Crash dump was written to: erl_crash.dump
eheap_alloc: Cannot allocate 1167696400 bytes of memory (of type "old_heap").

Regards,
Anton Lebedevich.



From g at rre.tt  Mon Mar 29 16:06:10 2010
From: g at rre.tt (Garrett Smith)
Date: Mon, 29 Mar 2010 10:06:10 -0500
Subject: [rabbitmq-discuss] "Returning" values
In-Reply-To: <42d8a3d11003282156o45e14cf8l748c37531c988d30@mail.gmail.com>
References: <42d8a3d11003282156o45e14cf8l748c37531c988d30@mail.gmail.com>
Message-ID: <ce2570e21003290806n34475bc5udf961e8b0217ebfe@mail.gmail.com>

On Sun, Mar 28, 2010 at 11:56 PM, Andreas Jung <lists at zopyx.com> wrote:
> Hi there,
>
> I am aware that a message queue does not support returning value. Is there a
> pattern for the following usecase:
>
> User submits a data set through the browser to the backend application. The
> backend puts the data into a queue in order to be processed by one of a
> worker processes running on some other machine taking requests from the
> queue.
>
> The client application should be notified or take notice when the data has
> been processed and get hold of some return value.
>
> I was thinking for having some client specific 'return queue' where the
> worker could insert the return value...however the number of queues is
> limited ( by RAM?) and the number of possible clients may exceed the number
> of maximum queues....so not a solution..
>
> Is there a pattern for implementing this usecase with RabbitMQ?

As Alvaro stated, you setup a queue that's used to communicate results
from you backend to your front end.

This is a super common pattern, sometimes referred to as RPC.
Depending on the AMQP client's you're using, you should be able to
find some examples of RPC like communication over AMQP. Look around
for a tell tale "reply-to" queue property being set somewhere in code.

Short of a code example (definitely try to locate one - folks here can
help based on your language environment), it looks like this:

- Client wants to "call" a server and get a response, so sends a
message with the reply-to property set to a queue, generally one
declared specifically that call or for any response back to that
particular client
- Server (can be zero, one or more depending on the exchange and
routing rules) receives the message, does some work, notes the
reply-to queue and sends a response message via amq.direct to that
queue
- Client either polls or is otherwise notified that the a response
arrived in its reply-to queue
- Client needs to handle a "no reply" condition via a timeout

It's not uncommon for a client to block during the entire sequence,
which is probably what you want to do for a traditional web front end.

I find it helpful to think of AMQP (and any messaging scheme) as
essentially the same as email exchanges: You have a request, you send
an email message to one or more people who can help. Those people have
your reply-to address and will get back to you in due time, or not.
You impatiently check you in box for the results :)

It's definitely more work than a traditional RPC setup (SOAP, REST,
etc.) but it gives a ton more leverage over your architecture.

Garrett



From matthew at lshift.net  Mon Mar 29 16:18:25 2010
From: matthew at lshift.net (Matthew Sackman)
Date: Mon, 29 Mar 2010 16:18:25 +0100
Subject: [rabbitmq-discuss] bug21673 crashed with very large transaction
In-Reply-To: <c26271fb1003290805g60b3a313oeb09e6397ad8690d@mail.gmail.com>
References: <c26271fb1003290805g60b3a313oeb09e6397ad8690d@mail.gmail.com>
Message-ID: <20100329151824.GD22183@mrnibble.lshift.net>

Hi Anton,

On Mon, Mar 29, 2010 at 07:05:03PM +0400, mabrek wrote:
> I've got a crash with new persister and very large transaction. How to
> reproduce: open transaction and send large amount of messages without
> committing it. Rabbitmq process will use all available memory and then
> crash. I tried to send 2000000 messages, but rabbit died at 800000.

That doesn't surprise, and we've not tried to ensure that you can have
massive transactions - it's arguably an unreasonable use of
transactions. In short, don't do that ;) If however, you believe you
really have a case for doing this, then please let us know!

Matthew



From lists at zopyx.com  Mon Mar 29 16:39:46 2010
From: lists at zopyx.com (Andreas Jung)
Date: Mon, 29 Mar 2010 17:39:46 +0200
Subject: [rabbitmq-discuss] "Returning" values
In-Reply-To: <ce2570e21003290806n34475bc5udf961e8b0217ebfe@mail.gmail.com>
References: <42d8a3d11003282156o45e14cf8l748c37531c988d30@mail.gmail.com>
	<ce2570e21003290806n34475bc5udf961e8b0217ebfe@mail.gmail.com>
Message-ID: <4BB0C9C2.2070302@zopyx.com>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

First, I know about the explained concepts very well.

The main question is: assuming you have 10k visitors on a portal and
each visitor would need a queue...you might run out of resources (I was
able to create 16k queues at a time before I got errors). So this
approach does not scale very well. Of course you can create individual
queues for each client on request and as needed...no idea about the
overhead for creating and destroying queues...

Andreas

Garrett Smith wrote:
> On Sun, Mar 28, 2010 at 11:56 PM, Andreas Jung <lists at zopyx.com> wrote:
>> Hi there,
>>
>> I am aware that a message queue does not support returning value. Is there a
>> pattern for the following usecase:
>>
>> User submits a data set through the browser to the backend application. The
>> backend puts the data into a queue in order to be processed by one of a
>> worker processes running on some other machine taking requests from the
>> queue.
>>
>> The client application should be notified or take notice when the data has
>> been processed and get hold of some return value.
>>
>> I was thinking for having some client specific 'return queue' where the
>> worker could insert the return value...however the number of queues is
>> limited ( by RAM?) and the number of possible clients may exceed the number
>> of maximum queues....so not a solution..
>>
>> Is there a pattern for implementing this usecase with RabbitMQ?
> 
> As Alvaro stated, you setup a queue that's used to communicate results
> from you backend to your front end.
> 
> This is a super common pattern, sometimes referred to as RPC.
> Depending on the AMQP client's you're using, you should be able to
> find some examples of RPC like communication over AMQP. Look around
> for a tell tale "reply-to" queue property being set somewhere in code.
> 
> Short of a code example (definitely try to locate one - folks here can
> help based on your language environment), it looks like this:
> 
> - Client wants to "call" a server and get a response, so sends a
> message with the reply-to property set to a queue, generally one
> declared specifically that call or for any response back to that
> particular client
> - Server (can be zero, one or more depending on the exchange and
> routing rules) receives the message, does some work, notes the
> reply-to queue and sends a response message via amq.direct to that
> queue
> - Client either polls or is otherwise notified that the a response
> arrived in its reply-to queue
> - Client needs to handle a "no reply" condition via a timeout
> 
> It's not uncommon for a client to block during the entire sequence,
> which is probably what you want to do for a traditional web front end.
> 
> I find it helpful to think of AMQP (and any messaging scheme) as
> essentially the same as email exchanges: You have a request, you send
> an email message to one or more people who can help. Those people have
> your reply-to address and will get back to you in due time, or not.
> You impatiently check you in box for the results :)
> 
> It's definitely more work than a traditional RPC setup (SOAP, REST,
> etc.) but it gives a ton more leverage over your architecture.
> 
> Garrett


- -- 
ZOPYX Limited              \ zopyx group
Charlottenstr. 37/1         \ The full-service network for your
D-72070 T?bingen             \ Python, Zope and Plone projects
www.zopyx.com, info at zopyx.com \ www.zopyxgroup.com
- ------------------------------------------------------------------------
E-Publishing, Python, Zope & Plone development, Consulting


-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.4.10 (Darwin)
Comment: Using GnuPG with Mozilla - http://enigmail.mozdev.org/

iEYEARECAAYFAkuwycIACgkQCJIWIbr9KYwnOgCfXMPiVL6aXX06M1jWQVO96hbx
EUYAnjek2cPw5y9kIc/gOnVp8kqF4Tj6
=NAU8
-----END PGP SIGNATURE-----
-------------- next part --------------
A non-text attachment was scrubbed...
Name: lists.vcf
Type: text/x-vcard
Size: 316 bytes
Desc: not available
Url : http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20100329/754df2d8/attachment.vcf 

From g at rre.tt  Mon Mar 29 17:46:50 2010
From: g at rre.tt (Garrett Smith)
Date: Mon, 29 Mar 2010 11:46:50 -0500
Subject: [rabbitmq-discuss] "Returning" values
In-Reply-To: <4BB0C9C2.2070302@zopyx.com>
References: <42d8a3d11003282156o45e14cf8l748c37531c988d30@mail.gmail.com>
	<ce2570e21003290806n34475bc5udf961e8b0217ebfe@mail.gmail.com>
	<4BB0C9C2.2070302@zopyx.com>
Message-ID: <ce2570e21003290946j79c5d36t89af88bde4c7b23b@mail.gmail.com>

You can use a single reply queue for a caller - use the correlation ID
property to associate a response from a server with a particular call.
The server will need to pass the request correlation ID to the
response and you'll know who it came from.

Also, rabbit cleans up auto deleted reply queues very nicely, so you
really only need queues for running calls. But I prefer using
correlation IDs in any case.

Garrett

On Mon, Mar 29, 2010 at 10:39 AM, Andreas Jung <lists at zopyx.com> wrote:
> -----BEGIN PGP SIGNED MESSAGE-----
> Hash: SHA1
>
> First, I know about the explained concepts very well.
>
> The main question is: assuming you have 10k visitors on a portal and
> each visitor would need a queue...you might run out of resources (I was
> able to create 16k queues at a time before I got errors). So this
> approach does not scale very well. Of course you can create individual
> queues for each client on request and as needed...no idea about the
> overhead for creating and destroying queues...
>
> Andreas
>
> Garrett Smith wrote:
>> On Sun, Mar 28, 2010 at 11:56 PM, Andreas Jung <lists at zopyx.com> wrote:
>>> Hi there,
>>>
>>> I am aware that a message queue does not support returning value. Is there a
>>> pattern for the following usecase:
>>>
>>> User submits a data set through the browser to the backend application. The
>>> backend puts the data into a queue in order to be processed by one of a
>>> worker processes running on some other machine taking requests from the
>>> queue.
>>>
>>> The client application should be notified or take notice when the data has
>>> been processed and get hold of some return value.
>>>
>>> I was thinking for having some client specific 'return queue' where the
>>> worker could insert the return value...however the number of queues is
>>> limited ( by RAM?) and the number of possible clients may exceed the number
>>> of maximum queues....so not a solution..
>>>
>>> Is there a pattern for implementing this usecase with RabbitMQ?
>>
>> As Alvaro stated, you setup a queue that's used to communicate results
>> from you backend to your front end.
>>
>> This is a super common pattern, sometimes referred to as RPC.
>> Depending on the AMQP client's you're using, you should be able to
>> find some examples of RPC like communication over AMQP. Look around
>> for a tell tale "reply-to" queue property being set somewhere in code.
>>
>> Short of a code example (definitely try to locate one - folks here can
>> help based on your language environment), it looks like this:
>>
>> - Client wants to "call" a server and get a response, so sends a
>> message with the reply-to property set to a queue, generally one
>> declared specifically that call or for any response back to that
>> particular client
>> - Server (can be zero, one or more depending on the exchange and
>> routing rules) receives the message, does some work, notes the
>> reply-to queue and sends a response message via amq.direct to that
>> queue
>> - Client either polls or is otherwise notified that the a response
>> arrived in its reply-to queue
>> - Client needs to handle a "no reply" condition via a timeout
>>
>> It's not uncommon for a client to block during the entire sequence,
>> which is probably what you want to do for a traditional web front end.
>>
>> I find it helpful to think of AMQP (and any messaging scheme) as
>> essentially the same as email exchanges: You have a request, you send
>> an email message to one or more people who can help. Those people have
>> your reply-to address and will get back to you in due time, or not.
>> You impatiently check you in box for the results :)
>>
>> It's definitely more work than a traditional RPC setup (SOAP, REST,
>> etc.) but it gives a ton more leverage over your architecture.
>>
>> Garrett
>
>
> - --
> ZOPYX Limited ? ? ? ? ? ? ?\ zopyx group
> Charlottenstr. 37/1 ? ? ? ? \ The full-service network for your
> D-72070 T?bingen ? ? ? ? ? ? \ Python, Zope and Plone projects
> www.zopyx.com, info at zopyx.com \ www.zopyxgroup.com
> - ------------------------------------------------------------------------
> E-Publishing, Python, Zope & Plone development, Consulting
>
>
> -----BEGIN PGP SIGNATURE-----
> Version: GnuPG v1.4.10 (Darwin)
> Comment: Using GnuPG with Mozilla - http://enigmail.mozdev.org/
>
> iEYEARECAAYFAkuwycIACgkQCJIWIbr9KYwnOgCfXMPiVL6aXX06M1jWQVO96hbx
> EUYAnjek2cPw5y9kIc/gOnVp8kqF4Tj6
> =NAU8
> -----END PGP SIGNATURE-----
>



From matthew at lshift.net  Tue Mar 30 10:28:14 2010
From: matthew at lshift.net (Matthew Sackman)
Date: Tue, 30 Mar 2010 10:28:14 +0100
Subject: [rabbitmq-discuss] debugging an unroutable message
In-Reply-To: <a3ff00ac1003290103u2d57714bqfc48efef2032ff02@mail.gmail.com>
References: <a3ff00ac1003290103u2d57714bqfc48efef2032ff02@mail.gmail.com>
Message-ID: <20100330092814.GI22183@mrnibble.lshift.net>

Hi Daniel,

On Mon, Mar 29, 2010 at 04:03:22AM -0400, Daniel Risacher wrote:
> Here's the bug symptom- it strictly alternates between working and not
> working.  Works the first time, not the second, etc.   When it doesn't
> work, the daemon gets the PING, but the PONG is returned as
> unroutable.

Sounds like a race between the pong being sent and the queue being
created. You're not setting the nowait option on queue.declare are you?
And you are waiting to get back the queue.declare_ok before sending the
ping? And under what conditions will the queue be deleted? Also,
(unlikely to be affecting this) is the daemon and client acking
explicitly or is noAck set? Any QoS settings?

Matthew



From magnus at alum.mit.edu  Tue Mar 30 11:44:32 2010
From: magnus at alum.mit.edu (Daniel Risacher)
Date: Tue, 30 Mar 2010 06:44:32 -0400
Subject: [rabbitmq-discuss] debugging an unroutable message
In-Reply-To: <20100330092814.GI22183@mrnibble.lshift.net>
References: <a3ff00ac1003290103u2d57714bqfc48efef2032ff02@mail.gmail.com> 
	<20100330092814.GI22183@mrnibble.lshift.net>
Message-ID: <a3ff00ac1003300344n433ca34q9153af88c17e0040@mail.gmail.com>

I did have some race conditions in the first pass of the code, but I
think that's fixed before I wrote to the list.  Generating the 'ping'
happens as part of a $queue->do_when_created() callback.  I'm
certainly not explicitly changing the ack settings or QoS settings.

I actually fixed my example by not binding the reply queue to
amq.direct, and instead using the default binding to the unnamed
default exchange.  Which is good in that I can move forward on other
parts of my project, but one of the secondary goals of the project is
to learn about how AMQP works in implementation, and I still don't
understand what was wrong with the first approach.

I never delete queues - I let the server do that when the connection drops.

I suppose there could be another race between the bind to amq.direct
and the pong.  I wasn't explicitly waiting for bindOK, although as I
recall from the traces, I was getting bindOK, before sending the ping,
and it still wasn't working - but I'll check that.

Are there rules about what can be bound to amq.direct?

It would be useful if there were some way to have rabbitmq output
every transaction (in commit order?) for analysis/debugging. Is there
any mechanism to do something like that?  Maybe as a plugin?

On Tue, Mar 30, 2010 at 5:28 AM, Matthew Sackman <matthew at lshift.net> wrote:
> Hi Daniel,
>
> On Mon, Mar 29, 2010 at 04:03:22AM -0400, Daniel Risacher wrote:
>> Here's the bug symptom- it strictly alternates between working and not
>> working. ?Works the first time, not the second, etc. ? When it doesn't
>> work, the daemon gets the PING, but the PONG is returned as
>> unroutable.
>
> Sounds like a race between the pong being sent and the queue being
> created. You're not setting the nowait option on queue.declare are you?
> And you are waiting to get back the queue.declare_ok before sending the
> ping? And under what conditions will the queue be deleted? Also,
> (unlikely to be affecting this) is the daemon and client acking
> explicitly or is noAck set? Any QoS settings?
>
> Matthew
>
>



From matthew at lshift.net  Tue Mar 30 11:59:37 2010
From: matthew at lshift.net (Matthew Sackman)
Date: Tue, 30 Mar 2010 11:59:37 +0100
Subject: [rabbitmq-discuss] debugging an unroutable message
In-Reply-To: <a3ff00ac1003300344n433ca34q9153af88c17e0040@mail.gmail.com>
References: <a3ff00ac1003290103u2d57714bqfc48efef2032ff02@mail.gmail.com>
	<20100330092814.GI22183@mrnibble.lshift.net>
	<a3ff00ac1003300344n433ca34q9153af88c17e0040@mail.gmail.com>
Message-ID: <20100330105937.GJ22183@mrnibble.lshift.net>

On Tue, Mar 30, 2010 at 06:44:32AM -0400, Daniel Risacher wrote:
> I did have some race conditions in the first pass of the code, but I
> think that's fixed before I wrote to the list.  Generating the 'ping'
> happens as part of a $queue->do_when_created() callback.  I'm
> certainly not explicitly changing the ack settings or QoS settings.

Ok, so you are manually acking the messages on both the daemon and the
client? It shouldn't be causing the issue you're seeing, but it's still
good to always let RabbitMQ know when you've received the message.

> I actually fixed my example by not binding the reply queue to
> amq.direct, and instead using the default binding to the unnamed
> default exchange.  Which is good in that I can move forward on other
> parts of my project, but one of the secondary goals of the project is
> to learn about how AMQP works in implementation, and I still don't
> understand what was wrong with the first approach.
> 
> I never delete queues - I let the server do that when the connection drops.

Ok, so you're either setting them exclusive or auto-delete?

> I suppose there could be another race between the bind to amq.direct
> and the pong.  I wasn't explicitly waiting for bindOK, although as I
> recall from the traces, I was getting bindOK, before sending the ping,
> and it still wasn't working - but I'll check that.

Sure, in general, any command that has an _ok variant should be treated
as synchronous and you should wait for the reply before continuing
(unless you have good reason not to, but bears await ye).

> Are there rules about what can be bound to amq.direct?

Nope.

> It would be useful if there were some way to have rabbitmq output
> every transaction (in commit order?) for analysis/debugging. Is there
> any mechanism to do something like that?  Maybe as a plugin?

Yes, use the Tracer which is part of the Java client. This sits in the
middle of a connection and just dumps out (after decoding) every message
that flies in either direction.

Matthew



From pdezwart at rubiconproject.com  Tue Mar 30 18:29:23 2010
From: pdezwart at rubiconproject.com (Pieter de Zwart)
Date: Tue, 30 Mar 2010 10:29:23 -0700
Subject: [rabbitmq-discuss] PHP Rabbit Extension
In-Reply-To: <4BB21A17.4050205@lshift.net>
Message-ID: <C7D78303.7D01%pdezwart@rubiconproject.com>

Hey Michael,

To be honest, Im poking in the dark. I have had repeated emails/tickets
about people having to add the connection parameter to our
amqp_get_rpc_reply call. Based on some limited research and chatting with
Tony, it seemed to me that requiring that function parameter meant that they
were using the 0-9-1 rabbitmq-c client header file, and therefore we running
the 0-9-1 client.
Does that answer your question, or did I miss the point?

Pieter


On 3/30/10 8:34 AM, "Michael Bridgen" <mikeb at lshift.net> wrote:

> Hi Pieter,
> 
> I cannot give a response on the C client -- I leave that to Tony --
> however I may be able to offer advice otherwise, since I worked on 0-9-1
> support in RabbitMQ.  When you say "people tell us [..] they were
> running 0-9-1" do you mean they are running RabbitMQ on the amqp_0_9_1
> branch?
> 
> Regards,
> Michael
> 
> Pieter de Zwart wrote:
>> > Alright, I am going to plead my case one more time. We have had a few
>> > people tell us that, since they were running 0-9-1, they needed to tweak
>> > our plugin for it to compile, always having to add that blasted
>> > connection parameter to amqp_get_rpc_reply. Is there ANY WAY you might
>> > consider adding compiler flags, like VERSION ?0-9-1? or something so
>> > that we can handle the different signatures transparently (unless you
>> > know of another way, or course)? I want to provide the best possible
>> > experiences to my users, particularly in these early days, and compiler
>> > errors don?t sit well with me. If the signatures for a version change,
>> > so be it, it will be up to us to keep up with it.
>> >
>> > Thank you,
>> > Pieter
>> >
>> >
>> > On 3/22/10 4:50 PM, "Tony Garnock-Jones" <tonyg at lshift.net> wrote:
>> >
>> >     Pieter de Zwart wrote:
>>> >     >  The only time we call amqp_get_rpc_reply right now is for our call
to
>>> >     >  amqp_channel_open after successfully creating a new connection.
This
>>> >     >  function returns amqp_channel_open_ok_t_, instead of the standard
>>> >     >  amqp_rpc_reply_t, so this is the correct place to use it, right?
>> >
>> >     That's right.
>> >
>>> >     >  Also, any chance you want to throw in a version string in the
>> >     AMQP.h so
>>> >     >  that we can have compiler level flags to handle these different
>>> >     >  situations? =)
>> >
>> >     Hmm. I sympathise, but I think it's too early for that: the API, while
>> >     reasonably stable seeming, is I think still best considered officially
>> >     unstable.
>> >
>> >     (You're aware there are a couple of tags in the hg repository now that
>> >     you might be able to use, right?)
>> >
>> >     Regards,
>> >       Tony
>> >
>> >
>> >
>> > --
>> > the rubicon project
>> >
>> > PIETER DE ZWART | INTERFACES ENGINEER
>> >
>> > ??? P 310 207 0272 | x224
>> > ??? F 323 466 7119
>> >
>> >
>> > 1925 S. BUNDY  DRIVE
>> > LOS ANGELES, CALIFORNIA 90025
>> >
>> > WWW.RUBICONPROJECT.COM <_http://www.rubiconproject.com/_>
>> >
>> >
>> > ?COMPANY OF THE YEAR? ALWAYSON ONMEDIA 2009
>> > #24 ON FAST COMPANY FAST 50 READER FAVORITES
>> > 2008  ALWAYSON 250 GLOBAL WINNER
>> > 2008 ALWAYSON ONMEDIA 100 WINNER
>> > TWIISTUP3  BEST IN SHOW
>> > PRICEWATERHOUSECOOPERS ? ENTRETECH  BEST STARTUP
>> > AMERICAN BUSINESS AWARDS - STEVIES  ?08 FINALIST BEST NEW COMPANY
>> > AMERICAN BUSINESS  AWARDS - STEVIES ?08 FINALIST MOST INNOVATIVE COMPANY
>> > AMERICAN BUSINESS  AWARDS - STEVIES ?08 FINALIST NEW PRODUCT OR SERVICE
>> > -  SERVICES
>> >
>> > P          Please consider the environment before printing this e-mail
> 

-- 
the rubicon project

PIETER DE ZWART | INTERFACES ENGINEER

??? P 310 207 0272 | x224
??? F 323 466 7119


1925 S. BUNDY  DRIVE
LOS ANGELES, CALIFORNIA 90025

WWW.RUBICONPROJECT.COM <http://www.rubiconproject.com/>


?COMPANY OF THE YEAR? ALWAYSON ONMEDIA 2009
#24 ON FAST COMPANY FAST 50 READER FAVORITES
2008  ALWAYSON 250 GLOBAL WINNER
2008 ALWAYSON ONMEDIA 100 WINNER
TWIISTUP3  BEST IN SHOW
PRICEWATERHOUSECOOPERS ? ENTRETECH  BEST STARTUP
AMERICAN BUSINESS AWARDS - STEVIES  ?08 FINALIST BEST NEW COMPANY
AMERICAN BUSINESS  AWARDS - STEVIES ?08 FINALIST MOST INNOVATIVE COMPANY
AMERICAN BUSINESS  AWARDS - STEVIES ?08 FINALIST NEW PRODUCT OR SERVICE -
SERVICES

P          Please consider the environment before printing this e-mail

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20100330/5980b6b7/attachment.htm 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: image/png
Size: 28320 bytes
Desc: not available
Url : http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20100330/5980b6b7/attachment.png 

From jdunck at gmail.com  Wed Mar 31 01:46:02 2010
From: jdunck at gmail.com (Jeremy Dunck)
Date: Tue, 30 Mar 2010 19:46:02 -0500
Subject: [rabbitmq-discuss] Future of AMQP
Message-ID: <2545a92c1003301746u1dc3af77l94b3728d762eef9b@mail.gmail.com>

I saw this thread over on OpenAMQ-dev, and was wondering if anyone
here would like to comment on the future of AMQP as a spec and as a
working body?

http://lists.openamq.org/pipermail/openamq-dev/2010-March/thread.html#1598

I also note that the AMQP mailing list has been quiet since 2009:
http://lists.amqp.org/pipermail/amqp-dev/

(I'm quite happy with Rabbit, but this discord between iMatix and AMQP
came as a surprise to me.)



From tonyg at lshift.net  Wed Mar 31 04:08:45 2010
From: tonyg at lshift.net (Tony Garnock-Jones)
Date: Tue, 30 Mar 2010 23:08:45 -0400
Subject: [rabbitmq-discuss] PHP Rabbit Extension
In-Reply-To: <C7D78303.7D01%pdezwart@rubiconproject.com>
References: <C7D78303.7D01%pdezwart@rubiconproject.com>
Message-ID: <4BB2BCBD.6090809@lshift.net>

Hi Pieter,

I must have miscommunicated, sorry about that. The new parameter is
required if you're using *either* the 0-8 or the 0-9-1 branches of
librabbitmq. It's a recent API change that has affected both branches.
I'm not sure what to do about people who can't update to the newest rev
in mercurial, but generally I recommend that people track mercurial
fairly closely.

Perhaps you could recommend using a fixed tag of rabbitmq-c, like
"librabbitmq-0.1-amqp_0_8" or "librabbitmq-0.1-amqp_0_9_1"? You could
recommend getting tarballs using links like this:

http://hg.rabbitmq.com/rabbitmq-c/archive/librabbitmq-0.1-amqp_0_8.tar.gz

? Then, as the API evolves, you can gradually update your recommendation.

Regards,
  Tony

Pieter de Zwart wrote:
> Hey Michael,
> 
> To be honest, Im poking in the dark. I have had repeated emails/tickets
> about people having to add the connection parameter to our
> amqp_get_rpc_reply call. Based on some limited research and chatting
> with Tony, it seemed to me that requiring that function parameter meant
> that they were using the 0-9-1 rabbitmq-c client header file, and
> therefore we running the 0-9-1 client.
> Does that answer your question, or did I miss the point?
> 
> Pieter
> 
> 
> On 3/30/10 8:34 AM, "Michael Bridgen" <mikeb at lshift.net> wrote:
> 
>     Hi Pieter,
> 
>     I cannot give a response on the C client -- I leave that to Tony --
>     however I may be able to offer advice otherwise, since I worked on 0-9-1
>     support in RabbitMQ.  When you say "people tell us [..] they were
>     running 0-9-1" do you mean they are running RabbitMQ on the amqp_0_9_1
>     branch?
> 
>     Regards,
>     Michael
> 
>     Pieter de Zwart wrote:
>     > Alright, I am going to plead my case one more time. We have had a few
>     > people tell us that, since they were running 0-9-1, they needed to
>     tweak
>     > our plugin for it to compile, always having to add that blasted
>     > connection parameter to amqp_get_rpc_reply. Is there ANY WAY you might
>     > consider adding compiler flags, like VERSION ?0-9-1? or something so
>     > that we can handle the different signatures transparently (unless you
>     > know of another way, or course)? I want to provide the best possible
>     > experiences to my users, particularly in these early days, and compiler
>     > errors don?t sit well with me. If the signatures for a version change,
>     > so be it, it will be up to us to keep up with it.
>     >
>     > Thank you,
>     > Pieter
>     >
>     >
>     > On 3/22/10 4:50 PM, "Tony Garnock-Jones" <tonyg at lshift.net> wrote:
>     >
>     >     Pieter de Zwart wrote:
>     >     >  The only time we call amqp_get_rpc_reply right now is for
>     our call to
>     >     >  amqp_channel_open after successfully creating a new
>     connection. This
>     >     >  function returns amqp_channel_open_ok_t_, instead of the
>     standard
>     >     >  amqp_rpc_reply_t, so this is the correct place to use it, right?
>     >
>     >     That's right.
>     >
>     >     >  Also, any chance you want to throw in a version string in the
>     >     AMQP.h so
>     >     >  that we can have compiler level flags to handle these different
>     >     >  situations? =)
>     >
>     >     Hmm. I sympathise, but I think it's too early for that: the
>     API, while
>     >     reasonably stable seeming, is I think still best considered
>     officially
>     >     unstable.
>     >
>     >     (You're aware there are a couple of tags in the hg repository
>     now that
>     >     you might be able to use, right?)
>     >
>     >     Regards,
>     >       Tony
>     >
>     >
>     >
>     > --
>     > the rubicon project
>     >
>     > PIETER DE ZWART | INTERFACES ENGINEER
>     >
>     > ??? P 310 207 0272 | x224
>     > ??? F 323 466 7119
>     >
>     >
>     > 1925 S. BUNDY  DRIVE
>     > LOS ANGELES, CALIFORNIA 90025
>     >
>     > WWW.RUBICONPROJECT.COM <_http://www.rubiconproject.com/_>
>     >
>     >
>     > ?COMPANY OF THE YEAR? ALWAYSON ONMEDIA 2009
>     > #24 ON FAST COMPANY FAST 50 READER FAVORITES
>     > 2008  ALWAYSON 250 GLOBAL WINNER
>     > 2008 ALWAYSON ONMEDIA 100 WINNER
>     > TWIISTUP3  BEST IN SHOW
>     > PRICEWATERHOUSECOOPERS ? ENTRETECH  BEST STARTUP
>     > AMERICAN BUSINESS AWARDS - STEVIES  ?08 FINALIST BEST NEW COMPANY
>     > AMERICAN BUSINESS  AWARDS - STEVIES ?08 FINALIST MOST INNOVATIVE
>     COMPANY
>     > AMERICAN BUSINESS  AWARDS - STEVIES ?08 FINALIST NEW PRODUCT OR SERVICE
>     > -  SERVICES
>     >
>     > P          Please consider the environment before printing this e-mail
> 
> 
> -- 
> the rubicon project
> 
> PIETER DE ZWART | INTERFACES ENGINEER
> 
> ??? P 310 207 0272 | x224
> ??? F 323 466 7119
> 
> 
> 1925 S. BUNDY  DRIVE
> LOS ANGELES, CALIFORNIA 90025
> 
> WWW.RUBICONPROJECT.COM <_http://www.rubiconproject.com/_>
> 
> 
> ?COMPANY OF THE YEAR? ALWAYSON ONMEDIA 2009
> #24 ON FAST COMPANY FAST 50 READER FAVORITES
> 2008  ALWAYSON 250 GLOBAL WINNER
> 2008 ALWAYSON ONMEDIA 100 WINNER
> TWIISTUP3  BEST IN SHOW
> PRICEWATERHOUSECOOPERS ? ENTRETECH  BEST STARTUP
> AMERICAN BUSINESS AWARDS - STEVIES  ?08 FINALIST BEST NEW COMPANY
> AMERICAN BUSINESS  AWARDS - STEVIES ?08 FINALIST MOST INNOVATIVE COMPANY
> AMERICAN BUSINESS  AWARDS - STEVIES ?08 FINALIST NEW PRODUCT OR SERVICE
> -  SERVICES
> 
> P          Please consider the environment before printing this e-mail



From tonyg at lshift.net  Wed Mar 31 04:13:49 2010
From: tonyg at lshift.net (Tony Garnock-Jones)
Date: Tue, 30 Mar 2010 23:13:49 -0400
Subject: [rabbitmq-discuss] "Returning" values
In-Reply-To: <4BB0C9C2.2070302@zopyx.com>
References: <42d8a3d11003282156o45e14cf8l748c37531c988d30@mail.gmail.com>	<ce2570e21003290806n34475bc5udf961e8b0217ebfe@mail.gmail.com>
	<4BB0C9C2.2070302@zopyx.com>
Message-ID: <4BB2BDED.5090502@lshift.net>

Andreas Jung wrote:
> able to create 16k queues at a time before I got errors

What kind of errors were you seeing? If it was about process exhaustion,
that is, you hit the Erlang VM limit on the number of processes, try
raising the limit as per Matthew's instructions at
http://groups.google.com/group/rabbitmq-discuss/msg/d7e119bf3b05d6d7

Regards,
  Tony



From alexis.richardson at gmail.com  Wed Mar 31 06:30:14 2010
From: alexis.richardson at gmail.com (Alexis Richardson)
Date: Tue, 30 Mar 2010 22:30:14 -0700
Subject: [rabbitmq-discuss] Future of AMQP
In-Reply-To: <2545a92c1003301746u1dc3af77l94b3728d762eef9b@mail.gmail.com>
References: <2545a92c1003301746u1dc3af77l94b3728d762eef9b@mail.gmail.com>
Message-ID: <m2z167204d21003302230ld98fd5eelb8fb8de408e15c16@mail.gmail.com>

Jeremy,

What can I say?  I think this has been a long time coming.  I don't
want to speak for Pieter, Martin and the zeroMQ folks, so I shall
remain silent on the recent commentary and stick to AMQP.  I do
however want to take this opportunity to thank Pieter and Martin for
their work on AMQP, especially their work with us creating the 0-9-1
spec which is short and sweet compared with many other messaging
specs.


On Tue, Mar 30, 2010 at 5:46 PM, Jeremy Dunck <jdunck at gmail.com> wrote:
> I saw this thread over on OpenAMQ-dev, and was wondering if anyone
> here would like to comment on the future of AMQP as a spec and as a
> working body?

Ironically the working group is in better shape than ever with a real
focus on 'getting things done' for AMQP 1-0.  I don't want to go into
behind the scenes details but if you look at the various amqp.org web
sites you will see the outwards signs of broad progress.  In the past
there have bumps and delays largely due to how work has been
resourced, but also due to occasional over-reach.  That's one reason
we have stuck to making the best product with what we have in front of
us.

As for the future of AMQP as a spec, we are committed to our current
roadmap in which we'll support AMQP 0-9-1 but not 0-10.  The AMQP 1-0
design still needs work but will be a big improvement over 0-10.
Forgive me if I remain cagey about our actual roadmap and timelines
for 1-0.  We and others are working hard - and together.  I'm much
more excited than I have been for quite a bit.

We have a lot of plans to keep helping the community and to make AMQP
- and especially RabbitMQ - more useful and 'simpler'.  Some of those
have been in motion for some time if you know where to look.



> http://lists.openamq.org/pipermail/openamq-dev/2010-March/thread.html#1598
>
> I also note that the AMQP mailing list has been quiet since 2009:
> http://lists.amqp.org/pipermail/amqp-dev/

Yes, nobody uses that list.  They come here to complain instead, or
bitch on twitter.  We applaud such activity.  We love getting feedback
no matter how critical so long as it helps RabbitMQ customers and the
community have a better experience.



> (I'm quite happy with Rabbit, but this discord between iMatix and AMQP
> came as a surprise to me.)

Sadly, not to me.

We get on well with iMatix who are good guys - so there is no discord
there, nor is there discord between us and the AMQP WG.  Make of this
what you will.

Cheers

alexis






> _______________________________________________
> rabbitmq-discuss mailing list
> rabbitmq-discuss at lists.rabbitmq.com
> http://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss
>



From sustrik at 250bpm.com  Wed Mar 31 12:00:01 2010
From: sustrik at 250bpm.com (Martin Sustrik)
Date: Wed, 31 Mar 2010 13:00:01 +0200
Subject: [rabbitmq-discuss] Future of AMQP
In-Reply-To: <m2z167204d21003302230ld98fd5eelb8fb8de408e15c16@mail.gmail.com>
References: <2545a92c1003301746u1dc3af77l94b3728d762eef9b@mail.gmail.com>
	<m2z167204d21003302230ld98fd5eelb8fb8de408e15c16@mail.gmail.com>
Message-ID: <4BB32B31.3030605@250bpm.com>

Jeremy, Alexis,

>> (I'm quite happy with Rabbit, but this discord between iMatix and AMQP
>> came as a surprise to me.)
> 
> Sadly, not to me.
> 
> We get on well with iMatix who are good guys - so there is no discord
> there, nor is there discord between us and the AMQP WG.  Make of this
> what you will.

 From my point of view the decision to leave the AMQP working group - 
although it took me by surprise - is just a logical step. iMatix haven't 
been participating in AMQP working group since 0-9-1, its OpenAMQ 
implementation of AMQP is getting to the end of support in 2011 and the 
new product is not going to support AMQP. Having no stakes in the 
protocol anymore, leaving the group is a natural thing to do.

Martin



From ian.ragsdale at gmail.com  Wed Mar 31 17:09:14 2010
From: ian.ragsdale at gmail.com (Ian Ragsdale)
Date: Wed, 31 Mar 2010 11:09:14 -0500
Subject: [rabbitmq-discuss] RabbitMQ crashed again
Message-ID: <46C25109-EDD6-4721-9B08-79ADEFE6BC6A@gmail.com>

Hello all, I'm trying to track down the cause of another RabbitMQ crash that happened to me last night.  The server was clearly no longer working correctly (my consumers stopped receiving messages) but the main producer seemed to be able to continue to publish messages.  On a dev machine I started the producer and then stopped the server entirely, and it stopped producing as expected, but the live producer seemed to think the server was still working, and happily published messages to the broken rabbitmq instance, which is extremely troubling.

This does not seem to be caused by the same issue that caused my previous crash (hitting channel limits) - the crash log is different, but still has a reference to a system limit being reached.  RabbitMQ seems very stable for others, so I'm guessing there's some issue in my code base causing this.  Since I disabled the code that was causing all the extra channels to be created, I'm at a bit of a loss trying to understand what is causing these crashes and how I can prevent them - this is starting to become a huge problem.


-------------- next part --------------
A non-text attachment was scrubbed...
Name: rabbit-crash.log
Type: application/octet-stream
Size: 12002 bytes
Desc: not available
Url : http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20100331/e3394cf1/attachment.obj 

From ray.slakinski at gmail.com  Wed Mar 31 21:26:00 2010
From: ray.slakinski at gmail.com (Ray Slakinski)
Date: Wed, 31 Mar 2010 16:26:00 -0400
Subject: [rabbitmq-discuss] basic_qos(prefetch_count=1) NOT_IMPLEMENTED
Message-ID: <7C243F1A-0610-439A-BB4D-18137440E073@gmail.com>

Hello,

When I set basic_qos to 1 I get an NOT IMPLEMENTED error coming back from RabbitMQ, we are using 1.7.2 and txamqp, I was looking at an example of someone using this setting on 1.6 and working ok, so I wanted to know if its just broke in 1.7.2 and if so is there a patch forthcoming or do I need to compile things differently?

>>> yield channel.basic_qos(prefetch_count=1)
txamqp.client.Closed: Method(name=close, id=60) (540, 'NOT_IMPLEMENTED - prefetch_size!=0 (1)', 60, 10) content = None

Ray Slakinski




From jon.brisbin at npcinternational.com  Wed Mar 31 21:49:57 2010
From: jon.brisbin at npcinternational.com (Jon Brisbin)
Date: Wed, 31 Mar 2010 15:49:57 -0500
Subject: [rabbitmq-discuss] New RabbitMQ Groovy DSL
Message-ID: <FE120BF9-E002-49BB-A7D7-1A6E5774395E@npcinternational.com>

Folks,

"I'm fixin' to" (as we say here in the Midwest) upload some recent work I've done on a Groovy-language DSL for RabbitMQ that lets me integrate with our existing Groovy REST/MVC framework. A simple example looks like:

mq.on error: {err ->
  log.error(err.message)
}, myevent: {msg ->
  log.info(msg.bodyAsString)
}

// Initialization
mq {channel ->
  //channel.queueDelete("test")
  //channel.exchangeDelete("test")
}

mq.exchange(name: "test") {
  // Named, non-durable queue
  queue name: "test", routingKey: "test.key", {
    consume tag: "test", onmessage: "myevent"
  }
  // Anonymous (server-generated) non-durable queue
  queue name: null, routingKey: "test2.key", {
    consume tag: "test2", onmessage: {msg ->
      log.info(msg.bodyAsString)
      log.info("myHeaderValue=" + msg.properties.headers["myHeaderValue"])
    }
  }
  // Poke some messages
  queue routingKey: "test.key", {
    publish body: "this is a test"
  }
  queue routingKey: "test2.key", {
    publish myHeaderValue: "customHeader", body: {msg, out ->
      msg.properties.contentType = "text/plain"
      out.write("test are test bytes".bytes)
    }
  }
}


To test it, I've got a command-line utility that takes RabbitMQ connection parameters and a Groovy DSL file to operate on (it also handles stdin/stdout for piping).

Basics of the system include:

* Direct access to the channel when you need custom stuff.
* A very basic event system for dispatch error and custom application events.
* Using Groovy, I can get a lot of stuff done quickly (works great for utilities, etc...).
* On a "consume" closure, if you return a non-null/true result, it will keep listening for more messages (uses a QueuingConsumer). 
* On a "publish" node, if you specify a closure for the body, it will call() that closure, passing an output stream for you to do custom byte processing, otherwise it'll try and fit whatever you tell it into the message body (strings automagically converted, etc...).

There's more to this. This is just a simplistic example. I'll try and document some of that on my github account.

I'd be interested in some feedback. I'm wondering what might make this useful to more people than just me. I do make some assumptions about how I'm interacting with RabbitMQ because that's just how we're doing it. I'd be interested in hearing if that doesn't hold for others.

I'll post the link when I've got everything put into Git.

Jon Brisbin
Portal Webmaster
NPC International, Inc.






From ian.ragsdale at gmail.com  Wed Mar 31 22:29:56 2010
From: ian.ragsdale at gmail.com (Ian Ragsdale)
Date: Wed, 31 Mar 2010 16:29:56 -0500
Subject: [rabbitmq-discuss] clustering question
Message-ID: <BF8565BD-A0EC-4E6D-81C5-FDB4D2BEB944@gmail.com>

Hello all.  I just set up a rabbitmq cluster using the clustering setup guide on the website, and I can report that the guide was easy to follow and worked well.  However, I did have a question about a couple of statements made in the guide that I would like to clarify.

The guide says:

"RabbitMQ brokers tolerate the failure of individual nodes. Nodes can be started and stopped at will."

As well as:

"All data/state required for the operation of a RabbitMQ broker is replicated across all nodes, for reliability and scaling, with full ACID properties. An exception to this are message queues, which currently only reside on the node that created them, though they are visible and reachable from all nodes." 

So, from this I can assume that if one of my nodes go down the cluster will continue to operate, but how will that affect any queues that resided on the inoperative node?  If I publish a message that was meant for one of those queues will it fail?  Will clients that are subscribed to those queues continue to receive new messages?  I'd just like to understand what the behavior will be so that I can plan accordingly.

Thanks,
Ian





From mikeb at lshift.net  Wed Mar 31 23:11:20 2010
From: mikeb at lshift.net (Michael Bridgen)
Date: Wed, 31 Mar 2010 23:11:20 +0100
Subject: [rabbitmq-discuss] RabbitMQ crashed again
In-Reply-To: <46C25109-EDD6-4721-9B08-79ADEFE6BC6A@gmail.com>
References: <46C25109-EDD6-4721-9B08-79ADEFE6BC6A@gmail.com>
Message-ID: <4BB3C888.3010406@lshift.net>

Hi Ian,

 > Hello all, I'm trying to track down the cause of another RabbitMQ
 > crash that happened to me last night.  The server was clearly no
 > longer working correctly (my consumers stopped receiving messages)
 > but the main producer seemed to be able to continue to publish
 > messages.  On a dev machine I started the producer and then stopped
 > the server entirely, and it stopped producing as expected, but the
 > live producer seemed to think the server was still working, and
 > happily published messages to the broken rabbitmq instance, which is
 > extremely troubling.
 >
 > This does not seem to be caused by the same issue that caused my
 > previous crash (hitting channel limits) - the crash log is different,
 > but still has a reference to a system limit being reached.  RabbitMQ
 > seems very stable for others, so I'm guessing there's some issue in
 > my code base causing this.  Since I disabled the code that was
 > causing all the extra channels to be created, I'm at a bit of a loss
 > trying to understand what is causing these crashes and how I can
 > prevent them - this is starting to become a huge problem.

As you deduced, it looks like you're running into a limit on the number 
of processes.  This is possible with some usages, and there's examples 
of how to increase process limits not long ago on the list which may be 
worth trying out.

For troubleshooting your application, you could keep an eye on the 
things that use processes -- principally connections, channels and 
queues -- by using rabbitmqctl with 'list_connections', 'list_channels' 
(new in 1.7.latest), or 'list_queues'.  ("watch" could be your friend 
here; e.g., "watch -n4 rabbitmqctl list_channels".)

My first suspicion is that channels are somehow remaining open.  If the 
problem remains mysterious, it'll be a help if you can post (ideally 
minimal!) app code.  Happy to look at it.

Please do let us know if this helps, and how you get on.

Regards,
Michael



From ian.ragsdale at gmail.com  Wed Mar 31 23:37:40 2010
From: ian.ragsdale at gmail.com (Ian Ragsdale)
Date: Wed, 31 Mar 2010 17:37:40 -0500
Subject: [rabbitmq-discuss] RabbitMQ crashed again
In-Reply-To: <4BB3C888.3010406@lshift.net>
References: <46C25109-EDD6-4721-9B08-79ADEFE6BC6A@gmail.com>
	<4BB3C888.3010406@lshift.net>
Message-ID: <F32DA9B1-5E9B-413D-B536-0B5961DB658E@gmail.com>

Thanks for confirming, Michael.  Is it safe to assume that closing a connection will deallocate any associated resources?  I have the example for how to increase the number of processes, so I can increase that and make sure that the connections get reopened on a regular basis, which should hopefully keep whatever is causing this slow resource from crashing the server.

Any thoughts on the behavior I mentioned where the server seemed to continue to accept messages?  I don't see that behavior if I manually stop the server, just in the case of this crash - does that seem at all possible?  I could try to reproduce it locally if that would help.

Thanks,
Ian

On Mar 31, 2010, at 5:11 PM, Michael Bridgen wrote:

> Hi Ian,
> 
> > Hello all, I'm trying to track down the cause of another RabbitMQ
> > crash that happened to me last night.  The server was clearly no
> > longer working correctly (my consumers stopped receiving messages)
> > but the main producer seemed to be able to continue to publish
> > messages.  On a dev machine I started the producer and then stopped
> > the server entirely, and it stopped producing as expected, but the
> > live producer seemed to think the server was still working, and
> > happily published messages to the broken rabbitmq instance, which is
> > extremely troubling.
> >
> > This does not seem to be caused by the same issue that caused my
> > previous crash (hitting channel limits) - the crash log is different,
> > but still has a reference to a system limit being reached.  RabbitMQ
> > seems very stable for others, so I'm guessing there's some issue in
> > my code base causing this.  Since I disabled the code that was
> > causing all the extra channels to be created, I'm at a bit of a loss
> > trying to understand what is causing these crashes and how I can
> > prevent them - this is starting to become a huge problem.
> 
> As you deduced, it looks like you're running into a limit on the number of processes.  This is possible with some usages, and there's examples of how to increase process limits not long ago on the list which may be worth trying out.
> 
> For troubleshooting your application, you could keep an eye on the things that use processes -- principally connections, channels and queues -- by using rabbitmqctl with 'list_connections', 'list_channels' (new in 1.7.latest), or 'list_queues'.  ("watch" could be your friend here; e.g., "watch -n4 rabbitmqctl list_channels".)
> 
> My first suspicion is that channels are somehow remaining open.  If the problem remains mysterious, it'll be a help if you can post (ideally minimal!) app code.  Happy to look at it.
> 
> Please do let us know if this helps, and how you get on.
> 
> Regards,
> Michael





