<tt>
&lt;a&nbsp;href=&quot;http://www.rabbitmq.com/clustering.html&quot;&gt;http://www.rabbitmq.com/clustering.html&lt;/a&gt;&nbsp;says:&lt;div&gt;&lt;br&gt;&lt;div&gt;&lt;blockquote&nbsp;class=&quot;gmail_quote&quot;&nbsp;style=&quot;margin-top:&nbsp;0px;&nbsp;margin-right:&nbsp;0px;&nbsp;margin-bottom:&nbsp;0px;&nbsp;margin-left:&nbsp;0.8ex;&nbsp;border-left-width:&nbsp;1px;&nbsp;border-left-color:&nbsp;rgb(204,&nbsp;204,&nbsp;204);&nbsp;border-left-style:&nbsp;solid;&nbsp;padding-left:&nbsp;1ex;&nbsp;&quot;&gt;<br>
<br>
All&nbsp;data/state&nbsp;required&nbsp;for&nbsp;the&nbsp;operation&nbsp;of&nbsp;a&nbsp;RabbitMQ&nbsp;broker&nbsp;is&nbsp;replicated&nbsp;across&nbsp;all&nbsp;nodes,&nbsp;for&nbsp;reliability&nbsp;and&nbsp;scaling,&nbsp;with&nbsp;full&nbsp;ACID&nbsp;properties.&nbsp;An&nbsp;exception&nbsp;to&nbsp;this&nbsp;are&nbsp;message&nbsp;queues,&nbsp;which&nbsp;currently&nbsp;only&nbsp;reside&nbsp;on&nbsp;the&nbsp;node&nbsp;that&nbsp;created&nbsp;them,&nbsp;though&nbsp;they&nbsp;are&nbsp;visible&nbsp;and&nbsp;reachable&nbsp;from&nbsp;all&nbsp;nodes.&nbsp;Future&nbsp;releases&nbsp;of&nbsp;RabbitMQ&nbsp;will&nbsp;introduce&nbsp;migration&nbsp;and&nbsp;replication&nbsp;of&nbsp;message&nbsp;queues.&lt;/blockquote&gt;<br>
<br>
&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;I&nbsp;don&amp;#39;t&nbsp;understand&nbsp;that&nbsp;sentence&nbsp;that&nbsp;says&nbsp;the&nbsp;queues&nbsp;only&nbsp;reside&nbsp;on&nbsp;the&nbsp;node&nbsp;that&nbsp;created&nbsp;them&nbsp;--&nbsp;but&nbsp;they&nbsp;are&nbsp;visible&nbsp;on&nbsp;both.&nbsp; Is&nbsp;that&nbsp;talking&nbsp;about&nbsp;replicating&nbsp;*messages*&nbsp;or&nbsp;queues?&nbsp; Queues&nbsp;and&nbsp;messages&nbsp;are&nbsp;separate&nbsp;things.&nbsp; I&nbsp;understand&nbsp;that&nbsp;messages&nbsp;are&nbsp;not&nbsp;duplicated/replicated&nbsp;in&nbsp;the&nbsp;cluster.&lt;/div&gt;<br>
<br>
&lt;meta&nbsp;charset=&quot;utf-8&quot;&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;I&nbsp;have&nbsp;two&nbsp;nodes&nbsp;in&nbsp;a&nbsp;cluster&nbsp;node1&nbsp;and&nbsp;node2&nbsp;(on&nbsp;same&nbsp;server,&nbsp;different&nbsp;ports).&nbsp; I&nbsp;declare&nbsp;an&nbsp;exchange,&nbsp;queue,&nbsp;and&nbsp;binding&nbsp;on&nbsp;node1&nbsp;only.&nbsp; Next,&nbsp;I&nbsp;start&nbsp;consumers&nbsp;on&nbsp;node1&nbsp;and&nbsp;node2&nbsp;--&nbsp;these&nbsp;do&nbsp;not&nbsp;declare&nbsp;the&nbsp;queue,&nbsp;they&nbsp;only&nbsp;consume.&nbsp; This&nbsp;succeeds&nbsp;so&nbsp;therefore&nbsp;the&nbsp;queue&nbsp;is&nbsp;accessible&nbsp;from&nbsp;both&nbsp;node1&nbsp;and&nbsp;node2.&lt;/div&gt;<br>
<br>
&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;Next&nbsp;I&nbsp;connect&nbsp;to&nbsp;node1&nbsp;and&nbsp;send&nbsp;two&nbsp;messages&nbsp;to&nbsp;the&nbsp;queue.&nbsp; One&nbsp;message&nbsp;ends&nbsp;up&nbsp;with&nbsp;the&nbsp;consumer&nbsp;on&nbsp;node1&nbsp;and&nbsp;the&nbsp;consumer&nbsp;on&nbsp;node2&nbsp;receives&nbsp;the&nbsp;other&nbsp;message.&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;What&amp;#39;s&nbsp;the&nbsp;distinction&nbsp;between&nbsp;&amp;quot;residing&amp;quot;&nbsp;and&nbsp;&amp;quot;visible&amp;quot;?&nbsp; Does&nbsp;it&nbsp;mean&nbsp;the&nbsp;messages&nbsp;are&nbsp;only&nbsp;stored&nbsp;on&nbsp;node1&nbsp;until&nbsp;consumed&nbsp;(by&nbsp;either&nbsp;node)?&nbsp; But,&nbsp;I&nbsp;can&nbsp;declare&nbsp;the&nbsp;same&nbsp;queue&nbsp;on&nbsp;both&nbsp;nodes&nbsp;and&nbsp;see&nbsp;the&nbsp;same&nbsp;behavior.&nbsp; Can&nbsp;someone&nbsp;please&nbsp;clear&nbsp;this&nbsp;up&nbsp;for&nbsp;me?&lt;/div&gt;<br>
<br>
&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;What&nbsp;I&nbsp;have&nbsp;failed&nbsp;to&nbsp;find&nbsp;when&nbsp;reading&nbsp;about&nbsp;clustering&nbsp;is&nbsp;how&nbsp;to&nbsp;connect&nbsp;to&nbsp;the&nbsp;nodes&nbsp;in&nbsp;a&nbsp;cluster.&nbsp; If&nbsp;I&nbsp;have&nbsp;node1&nbsp;and&nbsp;node2&nbsp;in&nbsp;my&nbsp;cluster&nbsp;and&nbsp;10&nbsp;producers&nbsp;(say&nbsp;web&nbsp;servers)&nbsp;and&nbsp;4&nbsp;worker&nbsp;machines&nbsp;do&nbsp;I&nbsp;configure&nbsp;5&nbsp;producers&nbsp;to&nbsp;connect&nbsp;to&nbsp;node1&nbsp;and&nbsp;5&nbsp;to&nbsp;node2,&nbsp;and&nbsp;then&nbsp;likewise&nbsp;split&nbsp;the&nbsp;consumer&nbsp;connections&nbsp;across&nbsp;the&nbsp;two&nbsp;nodes?&lt;/div&gt;<br>
<br>
&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;To&nbsp;be&nbsp;clear,&nbsp;this&nbsp;is&nbsp;not&nbsp;HA.&nbsp; So,&nbsp;if&nbsp;node1&nbsp;fails&nbsp;then&nbsp;1/2&nbsp;the&nbsp;producers&nbsp;and&nbsp;1/2&nbsp;the&nbsp;consumers&nbsp;can&nbsp;no&nbsp;longer&nbsp;function.&nbsp; Correct?&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;Or&nbsp;is&nbsp;the&nbsp;typical&nbsp;approach&nbsp;to&nbsp;use&nbsp;something&nbsp;like&nbsp;HAProxy&nbsp;in&nbsp;front&nbsp;of&nbsp;node1&nbsp;and&nbsp;node2&nbsp;and&nbsp;have&nbsp;all&nbsp;consumers&nbsp;and&nbsp;producers&nbsp;connect&nbsp;to&nbsp;HAProxy?&nbsp; (That&nbsp;ends&nbsp;up&nbsp;as&nbsp;a&nbsp;single&nbsp;point&nbsp;of&nbsp;failure.)&lt;/div&gt;<br>
<br>
&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;--&nbsp;&lt;br&gt;Bill&nbsp;Moseley&lt;br&gt;&lt;a&nbsp;href=&quot;mailto:moseley@hank.org&quot;&nbsp;target=&quot;_blank&quot;&gt;moseley@hank.org&lt;/a&gt;&lt;br&gt;<br>
&lt;/div&gt;&lt;/div&gt;<br>

</tt>
