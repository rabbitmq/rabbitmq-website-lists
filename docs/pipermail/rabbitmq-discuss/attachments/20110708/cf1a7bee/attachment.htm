<tt>
&lt;div&gt;What&nbsp;I&nbsp;require&nbsp;from&nbsp;usage&nbsp;of&nbsp;RabbitMQ&nbsp;is:&nbsp;&lt;/div&gt;<br>
&lt;div&gt;The&nbsp;producer&nbsp;produces&nbsp;messages&nbsp;and&nbsp;receiver&nbsp;receives&nbsp;&lt;i&gt;all&lt;/i&gt;&nbsp;the&nbsp;messages,&nbsp;which&nbsp;are&nbsp;published&nbsp;after&nbsp;the&nbsp;time&nbsp;it&nbsp;has&nbsp;first&nbsp;connected&nbsp;to&nbsp;the&nbsp;queue.&lt;/div&gt;<br>
&lt;p&gt;Since&nbsp;a&nbsp;consumer&nbsp;wants&nbsp;to&nbsp;consume&nbsp;all&nbsp;the&nbsp;messages&nbsp;published.&nbsp;Since,&nbsp;if&nbsp;more&nbsp;than&nbsp;one&nbsp;consumer&nbsp;is&nbsp;connected&nbsp;to&nbsp;same&nbsp;queue,&nbsp;then&nbsp;consumers&nbsp;will&nbsp;not&nbsp;receive&nbsp;all&nbsp;the&nbsp;messages.(Also,&nbsp;see&nbsp;&lt;a&nbsp;href=&quot;http://stackoverflow.com/questions/1831705/multiple-consumer-one-queue&quot;&gt;&lt;font&nbsp;color=&quot;#4a6b82&quot;&gt;here&lt;/font&gt;&lt;/a&gt;).&nbsp;Hence,&nbsp;the&nbsp;consumer&nbsp;must&nbsp;create&nbsp;an&nbsp;&lt;b&gt;&amp;#39;exclusive&amp;#39;&lt;/b&gt;&nbsp;queue&nbsp;and&nbsp;get&nbsp;connected&nbsp;to&nbsp;the&nbsp;desired&nbsp;exchange.&nbsp;Also,&nbsp;it&nbsp;wants&nbsp;to&nbsp;receive&nbsp;all&nbsp;the&nbsp;messages&nbsp;which&nbsp;were&nbsp;published&nbsp;even&nbsp;when&nbsp;it&nbsp;is&nbsp;down&nbsp;(&nbsp;in&nbsp;the&nbsp;future).&nbsp;Hence&nbsp;the&nbsp;queue&nbsp;is&nbsp;&lt;b&gt;&amp;#39;durable&amp;#39;&lt;/b&gt;.&nbsp;Now,&nbsp;the&nbsp;scenario&nbsp;looks&nbsp;like&nbsp;:&lt;/p&gt;<br>
<br>
&lt;p&gt;A&nbsp;consumer&nbsp;C1&nbsp;creates&nbsp;a&nbsp;queue&nbsp;Q1&nbsp;which&nbsp;is&nbsp;exclusive&nbsp;and&nbsp;durable.&nbsp;Now&nbsp;it&nbsp;is&nbsp;down&nbsp;for&nbsp;some&nbsp;time&nbsp;and&nbsp;in&nbsp;the&nbsp;meantime&nbsp;another&nbsp;user&nbsp;C2&nbsp;tries&nbsp;to&nbsp;connect&nbsp;to&nbsp;queue&nbsp;Q1.&nbsp;C2&nbsp;will&nbsp;be&nbsp;successfull&nbsp;since,&nbsp;Q1&nbsp;has&nbsp;now&nbsp;no&nbsp;subscriber&nbsp;connected&nbsp;to&nbsp;it.&nbsp;So,&nbsp;C2&nbsp;gets&nbsp;connected&nbsp;to&nbsp;the&nbsp;exclusive&nbsp;and&nbsp;durable&nbsp;queue.&nbsp;Now,&nbsp;if&nbsp;C1&nbsp;tries&nbsp;to&nbsp;connect&nbsp;to&nbsp;queue&nbsp;Q1&nbsp;it&nbsp;cannot&nbsp;do&nbsp;so,&nbsp;since&nbsp;already&nbsp;a&nbsp;consumer&nbsp;C2&nbsp;is&nbsp;subscribed&nbsp;to&nbsp;the&nbsp;queue&nbsp;Q1.&lt;/p&gt;<br>
<br>
&lt;p&gt;How&nbsp;one&nbsp;can&nbsp;prevent&nbsp;such&nbsp;scenario&nbsp;?&nbsp;&lt;/p&gt;<br>

</tt>
