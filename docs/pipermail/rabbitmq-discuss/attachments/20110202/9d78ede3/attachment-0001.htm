<tt>
Hi,&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;I&nbsp;had&nbsp;developed&nbsp;a&nbsp;solution&nbsp;using&nbsp;rabbitmq&nbsp;and&nbsp;it&nbsp;was&nbsp;working&nbsp;fine.&nbsp;Then&nbsp;I&nbsp;started&nbsp;another&nbsp;instance&nbsp;of&nbsp;one&nbsp;of&nbsp;my&nbsp;apps&nbsp;on&nbsp;another&nbsp;machine&nbsp;and&nbsp;both&nbsp;instances&nbsp;stopped&nbsp;receiving&nbsp;messages.&nbsp;Here&nbsp;is&nbsp;more&nbsp;detail.&lt;/div&gt;<br>
&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;I&nbsp;have&nbsp;a&nbsp;setup&nbsp;with&nbsp;two&nbsp;fanout&nbsp;exchanges,&nbsp;call&nbsp;them&nbsp;e1&nbsp;and&nbsp;e2. &lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;I&nbsp;have&nbsp;two&nbsp;apps,&nbsp;one&nbsp;(call&nbsp;it&nbsp;a1)&nbsp;written&nbsp;in&nbsp;node-amqp&nbsp;and&nbsp;the&nbsp;other&nbsp;(a2)&nbsp;in&nbsp;python/pika.&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;<br>
The&nbsp;workflow&nbsp;is:&lt;/div&gt;&lt;div&gt;1)&nbsp;a1&nbsp;publishes&nbsp;a&nbsp;message&nbsp;to&nbsp;e1&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;2)&nbsp;a2&nbsp;is&nbsp;listening&nbsp;to&nbsp;e1,&nbsp;receives&nbsp;the&nbsp;message&nbsp;,&nbsp;starts&nbsp;sending&nbsp;a&nbsp;series&nbsp;of&nbsp;messages&nbsp;to&nbsp;e2.&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;3)&nbsp;a1&nbsp;is&nbsp;listening&nbsp;to&nbsp;e2&nbsp;and&nbsp;prints&nbsp;out&nbsp;the&nbsp;messages&nbsp;it&nbsp;receives.&lt;/div&gt;<br>
&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;All&nbsp;3&nbsp;steps&nbsp;were&nbsp;working,&nbsp;then&nbsp;I&nbsp;added&nbsp;another&nbsp;instance&nbsp;of&nbsp;a1&nbsp;on&nbsp;another&nbsp;machine&nbsp;and&nbsp;step&nbsp;3&nbsp;stopped&nbsp;working.&nbsp;Neither&nbsp;instance&nbsp;of&nbsp;a1&nbsp;receives&nbsp;any&nbsp;more&nbsp;messages.&nbsp;rabbitmqctl&nbsp;tells&nbsp;me&nbsp;they&nbsp;are&nbsp;piling&nbsp;up&nbsp;in&nbsp;the&nbsp;queue,&nbsp;and&nbsp;a2&nbsp;logs&nbsp;also&nbsp;tell&nbsp;me&nbsp;step&nbsp;2&nbsp;is&nbsp;still&nbsp;happening.&lt;/div&gt;<br>
&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;Specifically,&nbsp;the&nbsp;action&nbsp;that&nbsp;caused&nbsp;step&nbsp;3&nbsp;to&nbsp;fail&nbsp;was&nbsp;not&nbsp;simply&nbsp;adding&nbsp;another&nbsp;instance&nbsp;of&nbsp;a1&nbsp;but&nbsp;having&nbsp;that&nbsp;instance&nbsp;do&nbsp;step&nbsp;1.&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;Here&nbsp;are&nbsp;what&nbsp;I&nbsp;think&nbsp;are&nbsp;the&nbsp;relevant&nbsp;bits&nbsp;of&nbsp;code.&lt;/div&gt;<br>
&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;In&nbsp;a1:&lt;/div&gt;&lt;div&gt;&lt;div&gt;var&nbsp;connection&nbsp;=&nbsp;amqp.createConnection({&nbsp;host:&nbsp;&amp;#39;broker_host&amp;#39;&nbsp;});&nbsp; &lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;connection.addListener(&amp;#39;ready&amp;#39;,&nbsp;function(){&lt;/div&gt;&lt;div&gt;  //this&nbsp;is&nbsp;what&nbsp;I&amp;#39;m&nbsp;calling&nbsp;e1:&lt;/div&gt;<br>
&lt;div&gt;  var&nbsp;from_web_exchange&nbsp;=&nbsp;connection.exchange(&amp;#39;from_web_exchange&amp;#39;,&nbsp;{type:&nbsp;&amp;#39;fanout&amp;#39;,&nbsp;autoDelete:&nbsp;false});&lt;/div&gt;&lt;div&gt;  //&nbsp;and&nbsp;e2:&lt;/div&gt;&lt;div&gt;  var&nbsp;from_worker_exchange&nbsp;=&nbsp;connection.exchange(&amp;#39;from_worker_exchange&amp;#39;,&nbsp;{type:&nbsp;&amp;#39;fanout&amp;#39;,&nbsp;autoDelete:&nbsp;false});&lt;/div&gt;<br>
&lt;div&gt;  //hostname&nbsp;contains&nbsp;the&nbsp;name&nbsp;of&nbsp;the&nbsp;machine&nbsp;where&nbsp;this&nbsp;app&nbsp;is&nbsp;running. &lt;/div&gt;&lt;div&gt; //there&nbsp;will&nbsp;only&nbsp;be&nbsp;one&nbsp;instance&nbsp;of&nbsp;this&nbsp;app&nbsp;per&nbsp;machine&lt;/div&gt;&lt;div&gt;  var&nbsp;queueName&nbsp;=&nbsp;hostname&nbsp;+&nbsp;&amp;quot;_queue&amp;quot;;&lt;/div&gt;&lt;div&gt;  var&nbsp;fromBuildersQueue&nbsp;=&nbsp;connection.queue(queueName,&nbsp;{exclusive:&nbsp;true}) &lt;/div&gt;<br>
&lt;div&gt;  fromBuildersQueue.bind(&amp;#39;from_worker_exchange&amp;#39;,&nbsp;&amp;#39;#&amp;#39;)&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;  &nbsp; fromBuildersQueue.subscribe(&nbsp;{ack:true},&nbsp;function(message){&lt;/div&gt;&lt;div&gt;  &nbsp; &nbsp; sys.puts(&amp;quot;got&nbsp;message:&nbsp;&amp;quot;&nbsp;+&nbsp;message.data.toString());&lt;/div&gt;<br>
&lt;/div&gt;&lt;div&gt;  &nbsp;}&lt;/div&gt;&lt;div&gt;  ...&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;//later:&lt;/div&gt;&lt;div&gt;  &nbsp; &nbsp; &nbsp; var&nbsp;msg&nbsp;=&nbsp;&amp;quot;hello,&nbsp;world&amp;quot;;&lt;/div&gt;&lt;div&gt;&lt;div&gt;  &nbsp; &nbsp; &nbsp; from_web_exchange.publish(&amp;quot;#&amp;quot;,&nbsp;msg); &lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;<br>
&lt;br&gt;&lt;/div&gt;&lt;div&gt;in&nbsp;a2:&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;#&nbsp;e1:&lt;/div&gt;&lt;div&gt;&lt;div&gt;from_web_exchange&nbsp;=&nbsp;channel.exchange_declare(exchange=&amp;quot;from_web_exchange&amp;quot;,type=&amp;quot;fanout&amp;quot;)&lt;/div&gt;&lt;div&gt;#&nbsp;e2:&lt;/div&gt;&lt;div&gt;from_worker_exchange&nbsp;=&nbsp;channel.exchange_declare(exchange=&amp;quot;from_worker_exchange&amp;quot;,&nbsp;type=&amp;#39;fanout&amp;#39;)&lt;/div&gt;<br>
&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;from_web_queue&nbsp;=&nbsp;channel.queue_declare(exclusive=True)&lt;/div&gt;&lt;div&gt;from_web_queue_name&nbsp;=&nbsp;from_web_queue.queue&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;channel.queue_bind(exchange=&amp;#39;from_web_exchange&amp;#39;,&nbsp;queue=from_web_queue_name)&lt;/div&gt;<br>
&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;def&nbsp;callback(ch,&nbsp;method,&nbsp;properties,&nbsp;body):&lt;/div&gt;&lt;/div&gt;&lt;div&gt;    &nbsp; &nbsp; &nbsp; channel.basic_publish(exchange=&amp;#39;from_worker_exchange&amp;#39;,&lt;/div&gt;&lt;div&gt;  &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; routing_key=&amp;quot;key.frombuilders&amp;quot;,&lt;/div&gt;<br>
&lt;div&gt;  &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; body=&nbsp;&amp;quot;hello&nbsp;world&nbsp;from&nbsp;python&amp;quot;)&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;channel.basic_consume(callback,&lt;/div&gt;&lt;div&gt;  &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; queue=from_web_queue.queue,&lt;/div&gt;&lt;div&gt;  &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; no_ack=True)&lt;/div&gt;<br>
&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;pika.asyncore_loop()&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;---&lt;/div&gt;&lt;div&gt;rabbitmqctl&nbsp;list_queues&nbsp;reports:&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;Listing&nbsp;queues&nbsp;...&lt;/div&gt;&lt;div&gt;host1_queue&lt;span&nbsp;class=&quot;Apple-tab-span&quot;&nbsp;style=&quot;white-space:pre&quot;&gt;&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&lt;/span&gt;7&lt;/div&gt;<br>
&lt;div&gt;amq.gen-AGnTMUOdr+DdImg0jfqahA==&lt;span&nbsp;class=&quot;Apple-tab-span&quot;&nbsp;style=&quot;white-space:pre&quot;&gt;&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&lt;/span&gt;0&lt;/div&gt;&lt;div&gt;host2_queue&lt;span&nbsp;class=&quot;Apple-tab-span&quot;&nbsp;style=&quot;white-space:pre&quot;&gt;&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&lt;/span&gt;0&lt;/div&gt;&lt;div&gt;...done.&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;<br>
&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;Hope&nbsp;someone&nbsp;can&nbsp;tell&nbsp;me&nbsp;what&nbsp;is&nbsp;going&nbsp;on&nbsp;here.&nbsp;a1&nbsp;is&nbsp;a&nbsp;web&nbsp;app&nbsp;and&nbsp;the&nbsp;first&nbsp;instance&nbsp;of&nbsp;it&nbsp;is&nbsp;on&nbsp;my&nbsp;local&nbsp;machine,&nbsp;and&nbsp;a2&nbsp;represents&nbsp;me&nbsp;trying&nbsp;to&nbsp;deploy&nbsp;this&nbsp;app&nbsp;in&nbsp;a&nbsp;production&nbsp;environment.&lt;/div&gt;<br>
&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;Thanks!&lt;/div&gt;&lt;div&gt;Dan&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;<br>

</tt>
