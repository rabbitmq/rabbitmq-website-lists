<tt>
&lt;div&nbsp;dir=&quot;ltr&quot;&gt;&lt;br&gt;&lt;div&nbsp;class=&quot;gmail_extra&quot;&gt;&lt;div&nbsp;class=&quot;gmail_quote&quot;&gt;&lt;blockquote&nbsp;class=&quot;gmail_quote&quot;&nbsp;style=&quot;margin:0&nbsp;0&nbsp;0&nbsp;.8ex;border-left:1px&nbsp;#ccc&nbsp;solid;padding-left:1ex&quot;&gt;&lt;div&nbsp;class=&quot;im&quot;&gt;<br>
&lt;br&gt;<br>
&lt;blockquote&nbsp;class=&quot;gmail_quote&quot;&nbsp;style=&quot;margin:0&nbsp;0&nbsp;0&nbsp;.8ex;border-left:1px&nbsp;#ccc&nbsp;solid;padding-left:1ex&quot;&gt;<br>
,&nbsp;it&amp;#39;s&nbsp; seem&nbsp;OK.&nbsp;rabbitmq&nbsp;server&nbsp;reply&nbsp;NROMAL.&lt;br&gt;<br>
&lt;/blockquote&gt;<br>
&lt;br&gt;&lt;/div&gt;<br>
I&nbsp;don&amp;#39;t&nbsp;know&nbsp;librabbitmq&nbsp;that&nbsp;well,&nbsp;but&nbsp;basic.ack&nbsp;is&nbsp;an&nbsp;asynchronous&nbsp;method,&nbsp;so&nbsp;the&nbsp;server&nbsp;can&amp;#39;t&nbsp;reply&nbsp;at&nbsp;all.&nbsp;The&nbsp;NORMAL&nbsp;&amp;quot;reply&amp;quot;&nbsp;is&nbsp;presumably&nbsp;being&nbsp;given&nbsp;to&nbsp;you&nbsp;unconditionally&nbsp;by&nbsp;the&nbsp;client&nbsp;library.&lt;div&nbsp;class=&quot;im&quot;&gt;<br>
&lt;br&gt;&lt;/div&gt;&lt;/blockquote&gt;&lt;div&gt;The&nbsp;return&nbsp;value&nbsp;from&nbsp;amqp_basic_ack()&nbsp;indicates&nbsp;that&nbsp;the&nbsp;write&nbsp;to&nbsp;the&nbsp;underlying&nbsp;socket&nbsp;was&nbsp;successful,&nbsp;it&nbsp;does&nbsp;not&nbsp;indicate&nbsp;that&nbsp;the&nbsp;call&nbsp;was&nbsp;correct&nbsp;from&nbsp;the&nbsp;broker&amp;#39;s&nbsp;point&nbsp;of&nbsp;view.&nbsp;  &lt;/div&gt;<br>
&lt;blockquote&nbsp;class=&quot;gmail_quote&quot;&nbsp;style=&quot;margin:0&nbsp;0&nbsp;0&nbsp;.8ex;border-left:1px&nbsp;#ccc&nbsp;solid;padding-left:1ex&quot;&gt;&lt;div&nbsp;class=&quot;im&quot;&gt;<br>
&lt;br&gt;<br>
&lt;blockquote&nbsp;class=&quot;gmail_quote&quot;&nbsp;style=&quot;margin:0&nbsp;0&nbsp;0&nbsp;.8ex;border-left:1px&nbsp;#ccc&nbsp;solid;padding-left:1ex&quot;&gt;<br>
But&nbsp; I&nbsp; check&nbsp; list_consumers.&nbsp;find&lt;br&gt;<br>
that&nbsp; consumer&nbsp; lose.&nbsp; what&amp;#39;s&nbsp; the&nbsp;problem&nbsp;?&lt;br&gt;<br>
&lt;/blockquote&gt;<br>
&lt;br&gt;&lt;/div&gt;<br>
The&nbsp;consumer&nbsp;(and&nbsp;the&nbsp;channel)&nbsp;will&nbsp;have&nbsp;been&nbsp;closed.&nbsp;The&nbsp;server&nbsp;will&nbsp;have&nbsp;reported&nbsp;an&nbsp;error&nbsp;-&nbsp;I&amp;#39;m&nbsp;not&nbsp;sure&nbsp;how&nbsp;you&nbsp;get&nbsp;that&nbsp;in&nbsp;the&nbsp;C&nbsp;API.&lt;br&gt;&lt;/blockquote&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;The&nbsp;library&nbsp;will&nbsp;indicate&nbsp;a&nbsp;channel&nbsp;error&nbsp;occurred&nbsp;next&nbsp;time&nbsp;a&nbsp;function&nbsp;that&nbsp;reads&nbsp;frames&nbsp;from&nbsp;the&nbsp;broker&nbsp;occurs.&nbsp;e.g.,&nbsp;calling&nbsp;amqp_simple_wait_frame()&nbsp;will&nbsp;return&nbsp;a&nbsp;AMQP_CHANNEL_CLOSE_METHOD&nbsp;on&nbsp;the&nbsp;channel&nbsp;you&nbsp;did&nbsp;the&nbsp;invalid&nbsp;amqp_basic_ack().&nbsp; Note&nbsp;that&nbsp;the&nbsp;broker&nbsp;will&nbsp;only&nbsp;close&nbsp;the&nbsp;channel&nbsp;if&nbsp;an&nbsp;error&nbsp;occurs,&nbsp;it&nbsp;will&nbsp;not&nbsp;positively&nbsp;acknowledge&nbsp;a&nbsp;correct&nbsp;basic.ack. &lt;/div&gt;<br>
&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;My&nbsp;recommendation&nbsp;is&nbsp;to&nbsp;add&nbsp;this&nbsp;to&nbsp;your&nbsp;applications&nbsp;processing&nbsp;loop&nbsp;-&nbsp;when&nbsp;you&nbsp;go&nbsp;to&nbsp;read&nbsp;frames&nbsp;from&nbsp;the&nbsp;broker,&nbsp;check&nbsp;for&nbsp;channel.close&nbsp;methods&nbsp;and&nbsp;take&nbsp;appropriate&nbsp;action.&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;<br>
-Alan&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;<br>

</tt>
