#$:.unshift '/usr/local/lib/ruby/gems/1.8/gems/tmm1-amqp-0.5.9//lib'
$:.unshift '/usr/local/lib/ruby/gems/1.8/gems/tmm1-amqp-0.5.5/lib'
require 'mq'

host="localhost"
exchange="ex4"
queue="q4"
key="this.one.key4"

AMQP.settings.update :host=>host

EM.run{
	amq = MQ.new
	p "Will bind the queue to the exchange..."
	amq.queue(queue, :durable=>true).bind(amq.topic(exchange, :durable=>true), :key=>key)
	AMQP.stop {EM.stop_event_loop }
}

EM.run{
	amq = MQ.new
	p "Sending msg to the exchange..."
	amq.topic(exchange).publish('body', {:key=>key, :persistent=>true})
	AMQP.stop {EM.stop_event_loop }
}

p "Now restart rabbitmq and press enter when ready"
gets

require 'pp'
EM.run{
	amq = MQ.new
	p "Listening, (should i get the msg i sent?...)"
	amq.queue(queue, :durable=>true).bind(amq.topic(exchange, :durable=>true), :key=>key).subscribe do |info,msg|
		p "got the msg! '%s'"%msg
		pp info
		AMQP.stop {EM.stop_event_loop }
	end
}
