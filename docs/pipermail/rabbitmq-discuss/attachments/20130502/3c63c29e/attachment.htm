<tt>
&lt;div&nbsp;dir=&quot;ltr&quot;&gt;Hi,&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;Assume&nbsp;we&nbsp;have&nbsp;two&nbsp;hosts,&nbsp;red&nbsp;and&nbsp;green,&nbsp;each&nbsp;running&nbsp;10&nbsp;consumers&nbsp;on&nbsp;the&nbsp;same&nbsp;queue.&nbsp;Inside&nbsp;`rabbit_amqqueue_process`&nbsp;these&nbsp;consumers&nbsp;will&nbsp;be&nbsp;placed&nbsp;in&nbsp;a&nbsp;standard&nbsp;Erlang&nbsp;`queue`&nbsp;module&nbsp;and&nbsp;wait&nbsp;for&nbsp;jobs&nbsp;to&nbsp;arrive.&nbsp;If&nbsp;all&nbsp;the&nbsp;20&nbsp;consumers&nbsp;are&nbsp;busy&nbsp;all&nbsp;the&nbsp;time,&nbsp;there&nbsp;is&nbsp;no&nbsp;problems&nbsp;here&nbsp;at&nbsp;all.&nbsp;But&nbsp;if&nbsp;there&nbsp;are&nbsp;more&nbsp;consumers&nbsp;than&nbsp;messages&nbsp;in&nbsp;the&nbsp;queue&nbsp;the&nbsp;consumers&nbsp;will&nbsp;sit&nbsp;idle&nbsp;and&nbsp;wait.&lt;/div&gt;<br>
<br>
&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;There&nbsp;are&nbsp;a&nbsp;couple&nbsp;of&nbsp;reasons&nbsp;to&nbsp;have&nbsp;idle&nbsp;workers,&nbsp;the&nbsp;most&nbsp;important&nbsp;being&nbsp;you&nbsp;want&nbsp;to&nbsp;handle&nbsp;sudden&nbsp;message&nbsp;spikes&nbsp;for&nbsp;instance.&nbsp;Now,&nbsp;we&nbsp;would&nbsp;like&nbsp;the&nbsp;host&nbsp;consumers&nbsp;to&nbsp;be&nbsp;interleaved&nbsp;in&nbsp;the&nbsp;queue:&lt;/div&gt;<br>
<br>
&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;RGRGRGRG,...&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;But&nbsp;in&nbsp;practice,&nbsp;since&nbsp;it&nbsp;is&nbsp;a&nbsp;queue,&nbsp;this&nbsp;may&nbsp;not&nbsp;be&nbsp;the&nbsp;case.&nbsp;We&nbsp;could&nbsp;have&nbsp;something&nbsp;along&nbsp;the&nbsp;lines&nbsp;of&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;RRRRRRRGGGGGGG,...&lt;/div&gt;&lt;div&gt;&lt;br&gt;<br>
<br>
&lt;/div&gt;&lt;div&gt;which&nbsp;means&nbsp;that&nbsp;if&nbsp;requests&nbsp;arrive&nbsp;slowly,&nbsp;they&nbsp;will&nbsp;only&nbsp;be&nbsp;processed&nbsp;by&nbsp;the&nbsp;Red&nbsp;host&nbsp;for&nbsp;a&nbsp;while&nbsp;and&nbsp;then&nbsp;only&nbsp;be&nbsp;processed&nbsp;by&nbsp;the&nbsp;Green&nbsp;host&nbsp;for&nbsp;a&nbsp;while.&nbsp;If&nbsp;the&nbsp;hosts&nbsp;are&nbsp;different&nbsp;in&nbsp;nature,&nbsp;it&nbsp;is&nbsp;very&nbsp;likely&nbsp;that&nbsp;over&nbsp;time,&nbsp;there&nbsp;will&nbsp;be&nbsp;clusters&nbsp;formed&nbsp;in&nbsp;the&nbsp;queue&nbsp;like&nbsp;this.&lt;/div&gt;<br>
<br>
&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;A&nbsp;way&nbsp;to&nbsp;alleviate&nbsp;this&nbsp;is&nbsp;to&nbsp;check&nbsp;for&nbsp;the&nbsp;following&nbsp;conditions&nbsp;whenever&nbsp;we&nbsp;have&nbsp;&amp;quot;run&amp;quot;&nbsp;the&nbsp;queue:&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;1.&nbsp;There&nbsp;are&nbsp;no&nbsp;more&nbsp;messages&nbsp;(queue&nbsp;is&nbsp;empty)&lt;/div&gt;&lt;div&gt;2.&nbsp;There&nbsp;are&nbsp;active&nbsp;consumers&nbsp;waiting&nbsp;(active_consumers&nbsp;is&nbsp;not&nbsp;empty)&lt;br&nbsp;clear=&quot;all&quot;&gt;<br>
<br>
&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&nbsp;style&gt;When&nbsp;this&nbsp;happens,&nbsp;we&nbsp;pick&nbsp;a&nbsp;random&nbsp;consumer&nbsp;in&nbsp;the&nbsp;queue&nbsp;and&nbsp;move&nbsp;him&nbsp;to&nbsp;the&nbsp;front.&nbsp;Over&nbsp;time,&nbsp;this&nbsp;&amp;quot;shuffles&amp;quot;&nbsp;the&nbsp;queue&nbsp;into&nbsp;a&nbsp;random&nbsp;order.&nbsp;It&nbsp;is&nbsp;also&nbsp;not&nbsp;going&nbsp;to&nbsp;cost&nbsp;anything&nbsp;on&nbsp;the&nbsp;critical&nbsp;path&nbsp;since&nbsp;we&nbsp;only&nbsp;do&nbsp;it&nbsp;when&nbsp;we&nbsp;have&nbsp;an&nbsp;empty&nbsp;queue&nbsp;and&nbsp;excess&nbsp;workers.&nbsp;And&nbsp;we&nbsp;are&nbsp;going&nbsp;to&nbsp;do&nbsp;very&nbsp;little&nbsp;work&nbsp;unless&nbsp;the&nbsp;queue&nbsp;has&nbsp;a&nbsp;behaviour&nbsp;where&nbsp;it&nbsp;empties&nbsp;often&nbsp;in&nbsp;which&nbsp;case&nbsp;you&nbsp;get&nbsp;full&nbsp;random&nbsp;distribution&nbsp;on&nbsp;the&nbsp;consumers&nbsp;with&nbsp;this&nbsp;scheme.&lt;/div&gt;<br>
<br>
&lt;div&nbsp;style&gt;&lt;br&gt;&lt;/div&gt;&lt;div&nbsp;style&gt;The&nbsp;background&nbsp;for&nbsp;the&nbsp;proposal&nbsp;is&nbsp;that&nbsp;Round-robin&nbsp;distribution&nbsp;of&nbsp;messages&nbsp;often&nbsp;tend&nbsp;to&nbsp;bad&nbsp;behaviour&nbsp;over&nbsp;time.&nbsp;By&nbsp;adding&nbsp;a&nbsp;bit&nbsp;of&nbsp;randomness&nbsp;to&nbsp;the&nbsp;process,&nbsp;we&nbsp;automatically&nbsp;alleviate&nbsp;a&nbsp;number&nbsp;of&nbsp;determinism-problems&nbsp;and&nbsp;get&nbsp;better&nbsp;distribution&nbsp;of&nbsp;messages&nbsp;over&nbsp;consumers.&nbsp;One&nbsp;could&nbsp;also&nbsp;imagine&nbsp;different&nbsp;distribution&nbsp;schemes,&nbsp;but&nbsp;those&nbsp;will&nbsp;be&nbsp;more&nbsp;expensive&nbsp;in&nbsp;practice&nbsp;compared&nbsp;to&nbsp;this&nbsp;proposal,&nbsp;which&nbsp;should&nbsp;only&nbsp;have&nbsp;a&nbsp;cost&nbsp;when&nbsp;the&nbsp;queue&nbsp;is&nbsp;not&nbsp;under&nbsp;heavy&nbsp;load.&lt;/div&gt;<br>
<br>
&lt;div&nbsp;style&gt;&lt;br&gt;&lt;/div&gt;&lt;div&nbsp;style&gt;*&nbsp;Did&nbsp;I&nbsp;miss&nbsp;anything?&lt;/div&gt;&lt;div&nbsp;style&gt;*&nbsp;Is&nbsp;this&nbsp;a&nbsp;good&nbsp;or&nbsp;bad&nbsp;idea?&nbsp;And&nbsp;why?&lt;/div&gt;&lt;div&nbsp;style&gt;*&nbsp;Do&nbsp;we&nbsp;break&nbsp;any&nbsp;rules&nbsp;w.r.t.&nbsp;AMQP&nbsp;by&nbsp;implementing&nbsp;this?&lt;/div&gt;&lt;div&nbsp;style&gt;*&nbsp;Is&nbsp;priority&nbsp;on&nbsp;the&nbsp;queue&nbsp;going&nbsp;to&nbsp;be&nbsp;harder&nbsp;to&nbsp;implement?&nbsp;(I&nbsp;don&amp;#39;t&nbsp;think&nbsp;so,&nbsp;but...)&lt;/div&gt;<br>
<br>
&lt;div&nbsp;style&gt;Â &lt;/div&gt;--&nbsp;&lt;br&gt;J.<br>
&lt;/div&gt;&lt;/div&gt;<br>

</tt>
