<tt>
&lt;div&nbsp;dir=&quot;ltr&quot;&gt;&lt;p&nbsp;style=&quot;font-size:&nbsp;14px;&nbsp;clear:&nbsp;both;&nbsp;word-wrap:&nbsp;break-word;&nbsp;color:&nbsp;rgb(0,&nbsp;0,&nbsp;0);&nbsp;font-family:&nbsp;Arial,&nbsp;'Liberation&nbsp;Sans',&nbsp;'DejaVu&nbsp;Sans',&nbsp;sans-serif;&quot;&gt;I&nbsp;have&nbsp;1&nbsp;RabbitMQ&nbsp;Connection,&nbsp;10K&nbsp;publishing&nbsp;Channels,&nbsp;10K&nbsp;consuming&nbsp;Channels&nbsp;and&nbsp;100&nbsp;Threads.&nbsp;All&nbsp;channels&nbsp;are&nbsp;in&nbsp;rapid&nbsp;publish/consume&nbsp;&quot;loops&quot;&nbsp;using&nbsp;exclusive&nbsp;queues&nbsp;and&nbsp;external&nbsp;synchronization;&nbsp;no&nbsp;possibility&nbsp;of&nbsp;publish,&nbsp;consume&nbsp;or&nbsp;close&nbsp;happening&nbsp;simultaneously&nbsp;on&nbsp;a&nbsp;channel.&nbsp;Closing&nbsp;channels&nbsp;simultaneously&nbsp;on&nbsp;100&nbsp;threads&nbsp;incurs&nbsp;a&nbsp;delay&nbsp;of&nbsp;2.5&nbsp;seconds&nbsp;for&nbsp;each&nbsp;of&nbsp;the&nbsp;first&nbsp;100&nbsp;channels.&nbsp;All&nbsp;subsequent&nbsp;closures&nbsp;are&nbsp;processed&nbsp;in&nbsp;less&nbsp;than&nbsp;0.5&nbsp;seconds.&nbsp;If&nbsp;I&nbsp;bump&nbsp;it&nbsp;up&nbsp;to&nbsp;20K+20K&nbsp;channels&nbsp;the&nbsp;initial&nbsp;100&nbsp;each&nbsp;take&nbsp;5&nbsp;seconds&nbsp;to&nbsp;close.&nbsp;With&nbsp;30K+30K&nbsp;each&nbsp;takes&nbsp;10&nbsp;seconds,&nbsp;where&nbsp;we're&nbsp;pretty&nbsp;much&nbsp;at&nbsp;the&nbsp;channel-max&nbsp;for&nbsp;a&nbsp;connection.&nbsp;Similarly&nbsp;if&nbsp;I&nbsp;reduce&nbsp;the&nbsp;number&nbsp;of&nbsp;threads&nbsp;to&nbsp;50&nbsp;then&nbsp;it's&nbsp;the&nbsp;first&nbsp;50&nbsp;channels&nbsp;that&nbsp;close&nbsp;slowly.&lt;/p&gt;&lt;p&nbsp;style=&quot;font-size:&nbsp;14px;&nbsp;clear:&nbsp;both;&nbsp;word-wrap:&nbsp;break-word;&nbsp;color:&nbsp;rgb(0,&nbsp;0,&nbsp;0);&nbsp;font-family:&nbsp;Arial,&nbsp;'Liberation&nbsp;Sans',&nbsp;'DejaVu&nbsp;Sans',&nbsp;sans-serif;&quot;&gt;Let&nbsp;me&nbsp;restate&nbsp;that...&amp;nbsp;&lt;strong&nbsp;style=&quot;background-color:&nbsp;transparent;&quot;&gt;With&nbsp;30K+30K&nbsp;channels&nbsp;the&nbsp;first&nbsp;100&nbsp;each&nbsp;take&nbsp;10&nbsp;seconds&nbsp;to&nbsp;close&nbsp;using&nbsp;100&nbsp;simultaneous&nbsp;threads.&nbsp;The&nbsp;remaining&nbsp;59,900&nbsp;each&nbsp;take&nbsp;less&nbsp;than&nbsp;0.5&nbsp;seconds.&lt;/strong&gt;&amp;nbsp;My&nbsp;feeling&nbsp;is&nbsp;that&nbsp;there's&nbsp;some&nbsp;funky&nbsp;connection-wide&nbsp;synchronization/continuation&nbsp;going&nbsp;on&nbsp;here.&nbsp;Hit&nbsp;the&nbsp;connection&nbsp;up&nbsp;with&nbsp;100&nbsp;channel-close&nbsp;requests&nbsp;on&nbsp;100&nbsp;threads&nbsp;simultaneously&nbsp;and&nbsp;it&nbsp;baulks.&nbsp;Whatever&nbsp;causes&nbsp;that&nbsp;initial&nbsp;spasm&nbsp;doesn't&nbsp;seem&nbsp;to&nbsp;affect&nbsp;subsequent&nbsp;close&nbsp;operations&nbsp;and&nbsp;everything&nbsp;swims&nbsp;along&nbsp;nicely.&lt;/p&gt;&lt;p&nbsp;style=&quot;font-size:&nbsp;14px;&nbsp;clear:&nbsp;both;&nbsp;word-wrap:&nbsp;break-word;&nbsp;color:&nbsp;rgb(0,&nbsp;0,&nbsp;0);&nbsp;font-family:&nbsp;Arial,&nbsp;'Liberation&nbsp;Sans',&nbsp;'DejaVu&nbsp;Sans',&nbsp;sans-serif;&quot;&gt;I've&nbsp;tried&nbsp;ramping&nbsp;up&nbsp;the&nbsp;number&nbsp;of&nbsp;connections&nbsp;to&nbsp;relieve&nbsp;the&nbsp;pressure.&nbsp;This&nbsp;certainly&nbsp;works&nbsp;with&nbsp;predictable&nbsp;results.&nbsp;With&nbsp;30K+30K&nbsp;connections&nbsp;spread&nbsp;evenly&nbsp;over&nbsp;2&nbsp;connections&nbsp;the&nbsp;initial&nbsp;100&nbsp;channel-close&nbsp;delays&nbsp;are&nbsp;halved&nbsp;from&nbsp;10&nbsp;seconds&nbsp;to&nbsp;5&nbsp;seconds.&nbsp;Use&nbsp;10&nbsp;connections&nbsp;and&nbsp;the&nbsp;delay&nbsp;is&nbsp;imperceptible&nbsp;when&nbsp;compared&nbsp;to&nbsp;the&nbsp;subsequent&nbsp;59,900&nbsp;channel&nbsp;closures.&nbsp;Jump&nbsp;to&nbsp;50K+50K&nbsp;channels&nbsp;(we&nbsp;can&nbsp;do&nbsp;this&nbsp;with&nbsp;10&nbsp;connections&nbsp;but&nbsp;not&nbsp;1&nbsp;connection&nbsp;due&nbsp;to&nbsp;channel-max)&nbsp;and&nbsp;the&nbsp;delays&nbsp;start&nbsp;to&nbsp;creep&nbsp;back&nbsp;in&nbsp;again.&lt;/p&gt;&lt;p&nbsp;style=&quot;font-size:&nbsp;14px;&nbsp;clear:&nbsp;both;&nbsp;word-wrap:&nbsp;break-word;&nbsp;color:&nbsp;rgb(0,&nbsp;0,&nbsp;0);&nbsp;font-family:&nbsp;Arial,&nbsp;'Liberation&nbsp;Sans',&nbsp;'DejaVu&nbsp;Sans',&nbsp;sans-serif;&quot;&gt;My&nbsp;concerns&nbsp;with&nbsp;this&nbsp;approach&nbsp;are&nbsp;that&nbsp;1)&nbsp;multiple&nbsp;connections&nbsp;are&nbsp;discouraged&nbsp;in&nbsp;the&nbsp;documentation&nbsp;due&nbsp;to&nbsp;i/o&nbsp;resource&nbsp;overhead&nbsp;and&nbsp;that&nbsp;2)&nbsp;it's&nbsp;not&nbsp;clear&nbsp;for&nbsp;my&nbsp;application&nbsp;how&nbsp;to&nbsp;sensibly&nbsp;predict&nbsp;the&nbsp;optimum&nbsp;number&nbsp;of&nbsp;channels&nbsp;per&nbsp;connection.&nbsp;If&nbsp;there&nbsp;is&nbsp;a&nbsp;soft&nbsp;limit&nbsp;to&nbsp;the&nbsp;number&nbsp;of&nbsp;channels&nbsp;per&nbsp;connection&nbsp;why&nbsp;is&nbsp;it&nbsp;not&nbsp;documented&nbsp;or&nbsp;made&nbsp;available&nbsp;in&nbsp;the&nbsp;api?&nbsp;If&nbsp;I&nbsp;have&nbsp;to&nbsp;manage&nbsp;a&nbsp;number&nbsp;of&nbsp;connections&nbsp;and&nbsp;allocate&nbsp;channels&nbsp;across&nbsp;those&nbsp;connections&nbsp;in&nbsp;a&nbsp;robust&nbsp;manner&nbsp;I&nbsp;feel&nbsp;like&nbsp;I'm&nbsp;doing&nbsp;the&nbsp;work&nbsp;of&nbsp;a&nbsp;client&nbsp;library!&lt;/p&gt;&lt;p&nbsp;style=&quot;font-size:&nbsp;14px;&nbsp;clear:&nbsp;both;&nbsp;word-wrap:&nbsp;break-word;&nbsp;color:&nbsp;rgb(0,&nbsp;0,&nbsp;0);&nbsp;font-family:&nbsp;Arial,&nbsp;'Liberation&nbsp;Sans',&nbsp;'DejaVu&nbsp;Sans',&nbsp;sans-serif;&quot;&gt;I've&nbsp;tried&nbsp;my&nbsp;hand&nbsp;at&nbsp;modifying&nbsp;the&nbsp;client&nbsp;library&nbsp;by&nbsp;not&nbsp;waiting&nbsp;for&nbsp;channel-close&nbsp;acknowledgements&nbsp;from&nbsp;the&nbsp;RabbitMQ&nbsp;server.&nbsp;This&nbsp;worked&nbsp;like&nbsp;a&nbsp;charm.&nbsp;Channels&nbsp;were&nbsp;closed&nbsp;instantly&nbsp;with&nbsp;no&nbsp;delay&nbsp;in&nbsp;the&nbsp;client&nbsp;and&nbsp;confirmed&nbsp;as&nbsp;closed&nbsp;on&nbsp;the&nbsp;server.&nbsp;Eight&nbsp;hours&nbsp;later&nbsp;though&nbsp;and&nbsp;I&nbsp;was&nbsp;out&nbsp;of&nbsp;heap&nbsp;space&nbsp;as&nbsp;the&nbsp;channel&nbsp;resources&nbsp;internal&nbsp;to&nbsp;the&nbsp;client&nbsp;library&nbsp;were&nbsp;not&nbsp;being&nbsp;released.&nbsp;I&nbsp;haven't&nbsp;managed&nbsp;to&nbsp;isolate&nbsp;the&nbsp;source&nbsp;of&nbsp;the&nbsp;delay&nbsp;either...&nbsp;is&nbsp;it&nbsp;in&nbsp;the&nbsp;client&nbsp;library&nbsp;or&nbsp;the&nbsp;server&nbsp;itself?&nbsp;To&nbsp;progress&nbsp;further&nbsp;I'd&nbsp;need&nbsp;to&nbsp;trace&nbsp;the&nbsp;wire&nbsp;protocol.&nbsp;I&nbsp;think&nbsp;I'm&nbsp;off&nbsp;track&nbsp;with&nbsp;this&nbsp;approach!&lt;/p&gt;&lt;p&nbsp;style=&quot;font-size:&nbsp;14px;&nbsp;clear:&nbsp;both;&nbsp;word-wrap:&nbsp;break-word;&nbsp;color:&nbsp;rgb(0,&nbsp;0,&nbsp;0);&nbsp;font-family:&nbsp;Arial,&nbsp;'Liberation&nbsp;Sans',&nbsp;'DejaVu&nbsp;Sans',&nbsp;sans-serif;&quot;&gt;&lt;strong&nbsp;style=&quot;background-color:&nbsp;transparent;&quot;&gt;Questions:&lt;/strong&gt;&lt;/p&gt;&lt;p&nbsp;style=&quot;font-size:&nbsp;14px;&nbsp;clear:&nbsp;both;&nbsp;word-wrap:&nbsp;break-word;&nbsp;color:&nbsp;rgb(0,&nbsp;0,&nbsp;0);&nbsp;font-family:&nbsp;Arial,&nbsp;'Liberation&nbsp;Sans',&nbsp;'DejaVu&nbsp;Sans',&nbsp;sans-serif;&quot;&gt;Before&nbsp;making&nbsp;application&nbsp;changes&nbsp;I'd&nbsp;like&nbsp;to&nbsp;know&nbsp;if&nbsp;this&nbsp;is&nbsp;a&nbsp;known&nbsp;issue&nbsp;with&nbsp;the&nbsp;Java&nbsp;client?&nbsp;Are&nbsp;there&nbsp;better&nbsp;workarounds&nbsp;than&nbsp;multiple&nbsp;connections&nbsp;and&nbsp;application-level&nbsp;channel&nbsp;management?&nbsp;In&nbsp;practise&nbsp;my&nbsp;actual&nbsp;application&nbsp;uses&nbsp;around&nbsp;20K&nbsp;channels&nbsp;per&nbsp;process,&nbsp;which&nbsp;I&nbsp;don't&nbsp;feel&nbsp;is&nbsp;excessive,&nbsp;and&nbsp;message&nbsp;throughput&nbsp;is&nbsp;actually&nbsp;pretty&nbsp;light&nbsp;as&nbsp;I'm&nbsp;leveraging&nbsp;RabbitMQ&nbsp;more&nbsp;for&nbsp;it's&nbsp;routing&nbsp;capabilities.&nbsp;if&nbsp;you&nbsp;think&nbsp;the&nbsp;number&nbsp;of&nbsp;channels&nbsp;is&nbsp;a&nbsp;problem&nbsp;in&nbsp;itself&nbsp;then&nbsp;please&nbsp;say&nbsp;so!&nbsp;I&nbsp;could&nbsp;refactor&nbsp;to&nbsp;use&nbsp;less&nbsp;channels&nbsp;but&nbsp;then&nbsp;I'd&nbsp;be&nbsp;sharing&nbsp;channels&nbsp;and&nbsp;would&nbsp;either&nbsp;have&nbsp;to&nbsp;synchronize&nbsp;their&nbsp;usage&nbsp;or&nbsp;ignore&nbsp;documentation&nbsp;guidelines.&nbsp;The&nbsp;error&nbsp;handling&nbsp;paradigm&nbsp;makes&nbsp;this&nbsp;cumbersome&nbsp;though;&nbsp;any&nbsp;channel&nbsp;error&nbsp;results&nbsp;in&nbsp;it's&nbsp;termination&nbsp;so&nbsp;it's&nbsp;difficult&nbsp;to&nbsp;isolate&nbsp;errors,&nbsp;prevent&nbsp;them&nbsp;from&nbsp;permeating&nbsp;across&nbsp;unrelated&nbsp;publishers/consumers&nbsp;and&nbsp;recover&nbsp;in&nbsp;a&nbsp;robust&nbsp;manner.&lt;/p&gt;&lt;p&nbsp;style=&quot;font-size:&nbsp;14px;&nbsp;clear:&nbsp;both;&nbsp;word-wrap:&nbsp;break-word;&nbsp;color:&nbsp;rgb(0,&nbsp;0,&nbsp;0);&nbsp;font-family:&nbsp;Arial,&nbsp;'Liberation&nbsp;Sans',&nbsp;'DejaVu&nbsp;Sans',&nbsp;sans-serif;&quot;&gt;&lt;strong&nbsp;style=&quot;background-color:&nbsp;transparent;&quot;&gt;Detail:&lt;/strong&gt;&lt;/p&gt;&lt;p&nbsp;style=&quot;font-size:&nbsp;14px;&nbsp;clear:&nbsp;both;&nbsp;word-wrap:&nbsp;break-word;&nbsp;color:&nbsp;rgb(0,&nbsp;0,&nbsp;0);&nbsp;font-family:&nbsp;Arial,&nbsp;'Liberation&nbsp;Sans',&nbsp;'DejaVu&nbsp;Sans',&nbsp;sans-serif;&quot;&gt;RabbitMQ&nbsp;server&nbsp;3.1.5,&nbsp;Java&nbsp;amqp-client&nbsp;3.1.5.&nbsp;Also&nbsp;tried&nbsp;3.1.4,&nbsp;3.1.3&nbsp;in&nbsp;the&nbsp;same&nbsp;test&nbsp;harness&nbsp;and&nbsp;seen&nbsp;what&nbsp;I&nbsp;assume&nbsp;to&nbsp;be&nbsp;exactly&nbsp;the&nbsp;same&nbsp;behaviour&nbsp;in&nbsp;3.0&nbsp;and&nbsp;prior&nbsp;in&nbsp;production&nbsp;application.&lt;/p&gt;&lt;p&nbsp;style=&quot;font-size:&nbsp;14px;&nbsp;clear:&nbsp;both;&nbsp;word-wrap:&nbsp;break-word;&nbsp;color:&nbsp;rgb(0,&nbsp;0,&nbsp;0);&nbsp;font-family:&nbsp;Arial,&nbsp;'Liberation&nbsp;Sans',&nbsp;'DejaVu&nbsp;Sans',&nbsp;sans-serif;&quot;&gt;My&nbsp;test&nbsp;harness&nbsp;is&nbsp;standalone&nbsp;but&nbsp;a&nbsp;bit&nbsp;obtuse&nbsp;to&nbsp;post&nbsp;here.&nbsp;I&nbsp;create&nbsp;10K&nbsp;test&nbsp;clients&nbsp;each&nbsp;of&nbsp;which&nbsp;creates&nbsp;an&nbsp;exclusive&nbsp;queue&nbsp;and&nbsp;runs&nbsp;a&nbsp;continuous&nbsp;publish-consume-publish-consume&nbsp;loop.&nbsp;The&nbsp;publisher&nbsp;and&nbsp;consumer&nbsp;each&nbsp;have&nbsp;their&nbsp;own&nbsp;channels.&nbsp;I'm&nbsp;using&nbsp;channel.basicConsume&nbsp;with&nbsp;DefaultConsumers&nbsp;and&nbsp;a&nbsp;default&nbsp;consumer&nbsp;executor&nbsp;service.&nbsp;Also&nbsp;used&nbsp;my&nbsp;own&nbsp;Java&nbsp;executor&nbsp;service,&nbsp;which&nbsp;appears&nbsp;to&nbsp;be&nbsp;the&nbsp;same&nbsp;as&nbsp;the&nbsp;default&nbsp;implementation,&nbsp;with&nbsp;various&nbsp;numbers&nbsp;of&nbsp;threads&nbsp;to&nbsp;no&nbsp;discernible&nbsp;effect.&lt;/p&gt;&lt;p&nbsp;style=&quot;font-size:&nbsp;14px;&nbsp;clear:&nbsp;both;&nbsp;word-wrap:&nbsp;break-word;&nbsp;color:&nbsp;rgb(0,&nbsp;0,&nbsp;0);&nbsp;font-family:&nbsp;Arial,&nbsp;'Liberation&nbsp;Sans',&nbsp;'DejaVu&nbsp;Sans',&nbsp;sans-serif;&quot;&gt;Messages&nbsp;consumed&nbsp;in&nbsp;handleDelivery&nbsp;spawn&nbsp;a&nbsp;new&nbsp;publish&nbsp;task&nbsp;via&nbsp;a&nbsp;java.concurrent&nbsp;fixed&nbsp;thread&nbsp;pool,&nbsp;so&nbsp;the&nbsp;consumer&nbsp;thread&nbsp;is&nbsp;not&nbsp;tied&nbsp;up&nbsp;or&nbsp;used&nbsp;in&nbsp;any&nbsp;channel&nbsp;operations&nbsp;whatsoever.&nbsp;The&nbsp;channel-close&nbsp;is&nbsp;synchronized&nbsp;so&nbsp;that&nbsp;it&nbsp;cannot&nbsp;happen&nbsp;at&nbsp;the&nbsp;same&nbsp;time&nbsp;as&nbsp;a&nbsp;publish.&nbsp;However&nbsp;there's&nbsp;nothing&nbsp;stopping&nbsp;a&nbsp;consume&nbsp;happening&nbsp;while&nbsp;close&nbsp;is&nbsp;being&nbsp;processed&nbsp;-&nbsp;the&nbsp;consumer&nbsp;is&nbsp;out&nbsp;of&nbsp;my&nbsp;control.&lt;/p&gt;&lt;p&nbsp;style=&quot;font-size:&nbsp;14px;&nbsp;clear:&nbsp;both;&nbsp;word-wrap:&nbsp;break-word;&nbsp;color:&nbsp;rgb(0,&nbsp;0,&nbsp;0);&nbsp;font-family:&nbsp;Arial,&nbsp;'Liberation&nbsp;Sans',&nbsp;'DejaVu&nbsp;Sans',&nbsp;sans-serif;&quot;&gt;Thanks&nbsp;for&nbsp;any&nbsp;pointers!&lt;/p&gt;&lt;/div&gt;
</tt>
