<tt>
&lt;div&nbsp;dir=&quot;ltr&quot;&gt;Hi&nbsp;,&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;I&nbsp;don&amp;#39;t&nbsp;print&nbsp;&amp;#39;y&amp;#39;.&nbsp;Which&nbsp;means&nbsp;I&nbsp;don&amp;#39;t&nbsp;have&nbsp;tornado&nbsp;installed. &lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;Could&nbsp;you&nbsp;please&nbsp;guide&nbsp;me&nbsp;on&nbsp;how&nbsp;to&nbsp;install&nbsp;this&nbsp;tornado&nbsp;connector&nbsp;?&lt;/div&gt;&lt;div&gt;<br>
&lt;br&gt;&lt;/div&gt;&lt;div&gt;I&nbsp;thought&nbsp;pika&nbsp;by&nbsp;default&nbsp;would&nbsp;include&nbsp;tornado&nbsp;so&nbsp;did&nbsp;not&nbsp;realized&nbsp;that&nbsp;this&nbsp;could&nbsp;be&nbsp;the&nbsp;case. &lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;Best&nbsp;Regards,&lt;/div&gt;&lt;div&gt;Priyanki.&lt;/div&gt;&lt;/div&gt;&lt;div&nbsp;class=&quot;gmail_extra&quot;&gt;&lt;br&gt;&lt;br&gt;&lt;div&nbsp;class=&quot;gmail_quote&quot;&gt;<br>
On&nbsp;Thu,&nbsp;Aug&nbsp;15,&nbsp;2013&nbsp;at&nbsp;6:18&nbsp;PM,&nbsp;Laing,&nbsp;Michael&nbsp;&lt;span&nbsp;dir=&quot;ltr&quot;&gt;&amp;lt;&lt;a&nbsp;href=&quot;mailto:michael.laing@nytimes.com&quot;&nbsp;target=&quot;_blank&quot;&gt;michael.laing@nytimes.com&lt;/a&gt;&amp;gt;&lt;/span&gt;&nbsp;wrote:&lt;br&gt;&lt;blockquote&nbsp;class=&quot;gmail_quote&quot;&nbsp;style=&quot;margin:0&nbsp;0&nbsp;0&nbsp;.8ex;border-left:1px&nbsp;#ccc&nbsp;solid;padding-left:1ex&quot;&gt;<br>
&lt;div&nbsp;dir=&quot;ltr&quot;&gt;Is&nbsp;tornado&nbsp;installed?&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;run&nbsp;this&nbsp;python&nbsp;fragment:&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;from&nbsp;pika&nbsp;import&nbsp;adapters&lt;/div&gt;&lt;div&gt;if&nbsp;adapters.TornadoConnection: &lt;/div&gt;&lt;div&gt;print&nbsp;&amp;#39;y&amp;#39;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;<br>
<br>
&lt;br&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&nbsp;class=&quot;HOEnZb&quot;&gt;&lt;div&nbsp;class=&quot;h5&quot;&gt;&lt;div&nbsp;class=&quot;gmail_extra&quot;&gt;&lt;br&gt;&lt;br&gt;&lt;div&nbsp;class=&quot;gmail_quote&quot;&gt;On&nbsp;Thu,&nbsp;Aug&nbsp;15,&nbsp;2013&nbsp;at&nbsp;11:00&nbsp;AM,&nbsp;Priyanki&nbsp;Vashi&nbsp;&lt;span&nbsp;dir=&quot;ltr&quot;&gt;&amp;lt;&lt;a&nbsp;href=&quot;mailto:vashi.priyanki@gmail.com&quot;&nbsp;target=&quot;_blank&quot;&gt;vashi.priyanki@gmail.com&lt;/a&gt;&amp;gt;&lt;/span&gt;&nbsp;wrote:&lt;br&gt;<br>
<br>
&lt;blockquote&nbsp;class=&quot;gmail_quote&quot;&nbsp;style=&quot;margin:0&nbsp;0&nbsp;0&nbsp;.8ex;border-left:1px&nbsp;#ccc&nbsp;solid;padding-left:1ex&quot;&gt;&lt;div&nbsp;dir=&quot;ltr&quot;&gt;Hi,&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;Sorry&nbsp;to&nbsp;say&nbsp;but&nbsp;I&nbsp;have&nbsp;now&nbsp;made&nbsp;connection&nbsp;to&nbsp;return&nbsp;the&nbsp;value&nbsp;but&nbsp;it&nbsp;still&nbsp;say&nbsp;the&nbsp;same&nbsp;error.&lt;/div&gt;<br>
<br>
&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;Does&nbsp;anyone&nbsp;have&nbsp;working&nbsp;example&nbsp;of&nbsp;tornado&nbsp;connector&nbsp;(either&nbsp;consumer&nbsp;or&nbsp;producer)&nbsp;with&nbsp;pika&nbsp;client&nbsp;and&nbsp;has&nbsp;possibility&nbsp;to&nbsp;sharing&nbsp;with&nbsp;me&nbsp;?&lt;/div&gt;<br>
&lt;div&gt;Very&nbsp;basic&nbsp;example&nbsp;is&nbsp;also&nbsp;OK.&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;Thank&nbsp;you&nbsp;in&nbsp;advance&nbsp;!&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;Best&nbsp;Regards,&lt;/div&gt;&lt;div&gt;Priyanki. &lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;div&nbsp;class=&quot;gmail_extra&quot;&gt;&lt;br&gt;<br>
&lt;br&gt;&lt;div&nbsp;class=&quot;gmail_quote&quot;&gt;On&nbsp;Thu,&nbsp;Aug&nbsp;15,&nbsp;2013&nbsp;at&nbsp;4:25&nbsp;PM,&nbsp;Laing,&nbsp;Michael&nbsp;&lt;span&nbsp;dir=&quot;ltr&quot;&gt;&amp;lt;&lt;a&nbsp;href=&quot;mailto:michael.laing@nytimes.com&quot;&nbsp;target=&quot;_blank&quot;&gt;michael.laing@nytimes.com&lt;/a&gt;&amp;gt;&lt;/span&gt;&nbsp;wrote:&lt;br&gt;<br>
&lt;blockquote&nbsp;class=&quot;gmail_quote&quot;&nbsp;style=&quot;margin:0&nbsp;0&nbsp;0&nbsp;.8ex;border-left:1px&nbsp;#ccc&nbsp;solid;padding-left:1ex&quot;&gt;&lt;div&nbsp;dir=&quot;ltr&quot;&gt;The&nbsp;connect&nbsp;method&nbsp;doesn&amp;#39;t&nbsp;apear&nbsp;to&nbsp;return&nbsp;a&nbsp;connection...&lt;/div&gt;&lt;div&gt;&lt;div&gt;<br>
&lt;div&nbsp;class=&quot;gmail_extra&quot;&gt;&lt;br&gt;&lt;br&gt;&lt;div&nbsp;class=&quot;gmail_quote&quot;&gt;On&nbsp;Thu,&nbsp;Aug&nbsp;15,&nbsp;2013&nbsp;at&nbsp;9:51&nbsp;AM,&nbsp;Priyanki&nbsp;Vashi&nbsp;&lt;span&nbsp;dir=&quot;ltr&quot;&gt;&amp;lt;&lt;a&nbsp;href=&quot;mailto:vashi.priyanki@gmail.com&quot;&nbsp;target=&quot;_blank&quot;&gt;vashi.priyanki@gmail.com&lt;/a&gt;&amp;gt;&lt;/span&gt;&nbsp;wrote:&lt;br&gt;<br>
<br>
<br>
<br>
&lt;blockquote&nbsp;class=&quot;gmail_quote&quot;&nbsp;style=&quot;margin:0&nbsp;0&nbsp;0&nbsp;.8ex;border-left:1px&nbsp;#ccc&nbsp;solid;padding-left:1ex&quot;&gt;&lt;div&nbsp;dir=&quot;ltr&quot;&gt;Hi&nbsp;,&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;on_connection_open,&nbsp;is&nbsp;a&nbsp;callback&nbsp;method,&nbsp;which&nbsp;will&nbsp;be&nbsp;called&nbsp;when&nbsp;connection&nbsp;is&nbsp;opened&nbsp;with&nbsp;rabbitmq.&nbsp;It&nbsp;opens&nbsp;channel&nbsp;inturn.&nbsp;So&nbsp;it&amp;#39;s&nbsp;little&nbsp;unlikely&nbsp;that&nbsp;it&nbsp;has&nbsp;&amp;#39;None&amp;#39;&nbsp;value&nbsp;but&nbsp;I&nbsp;am&nbsp;not&nbsp;100%&nbsp;sure. &lt;/div&gt;<br>
<br>
<br>
<br>
<br>
<br>
&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;Here&nbsp;is&nbsp;my&nbsp;code.&nbsp;Could&nbsp;you&nbsp;quickly&nbsp;have&nbsp;a&nbsp;look.&lt;/div&gt;&lt;div&gt;It&amp;#39;s&nbsp;the&nbsp;same&nbsp;example&nbsp;from&nbsp;pika&nbsp;site&nbsp;for&nbsp;tornado&nbsp;consumer&nbsp;except&nbsp;that&nbsp;I&nbsp;have&nbsp;tried&nbsp;to&nbsp;use&nbsp;connection&nbsp;parameters&nbsp;instead&nbsp;of&nbsp;URL.&lt;/div&gt;&lt;div&gt;<br>
<br>
<br>
<br>
<br>
&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;from&nbsp;pika&nbsp;import&nbsp;adapters&lt;/div&gt;<br>
&lt;div&gt;import&nbsp;pika&lt;/div&gt;&lt;div&gt;import&nbsp;logging&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;LOG_FORMAT&nbsp;=&nbsp;(&amp;#39;%(levelname)&nbsp;-10s&nbsp;%(asctime)s&nbsp;%(name)&nbsp;-30s&nbsp;%(funcName)&nbsp;&amp;#39;&lt;/div&gt;&lt;div&gt; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&amp;#39;-35s&nbsp;%(lineno)&nbsp;-5d:&nbsp;%(message)s&amp;#39;)&lt;/div&gt;&lt;div&gt;<br>
<br>
<br>
<br>
<br>
<br>
LOGGER&nbsp;=&nbsp;logging.getLogger(__name__)&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;class&nbsp;ExampleConsumer(object):&lt;/div&gt;&lt;div&gt; &nbsp; &nbsp;&amp;quot;&amp;quot;&amp;quot;This&nbsp;is&nbsp;an&nbsp;example&nbsp;consumer&nbsp;that&nbsp;will&nbsp;handle&nbsp;unexpected&nbsp;interactions&lt;/div&gt;&lt;div&gt; &nbsp; &nbsp;with&nbsp;RabbitMQ&nbsp;such&nbsp;as&nbsp;channel&nbsp;and&nbsp;connection&nbsp;closures.&lt;/div&gt;<br>
<br>
<br>
<br>
<br>
<br>
&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt; &nbsp; &nbsp;If&nbsp;RabbitMQ&nbsp;closes&nbsp;the&nbsp;connection,&nbsp;it&nbsp;will&nbsp;reopen&nbsp;it.&nbsp;You&nbsp;should&lt;/div&gt;&lt;div&gt; &nbsp; &nbsp;look&nbsp;at&nbsp;the&nbsp;output,&nbsp;as&nbsp;there&nbsp;are&nbsp;limited&nbsp;reasons&nbsp;why&nbsp;the&nbsp;connection&nbsp;may&lt;/div&gt;&lt;div&gt; &nbsp; &nbsp;be&nbsp;closed,&nbsp;which&nbsp;usually&nbsp;are&nbsp;tied&nbsp;to&nbsp;permission&nbsp;related&nbsp;issues&nbsp;or&lt;/div&gt;<br>
<br>
<br>
<br>
<br>
<br>
&lt;div&gt; &nbsp; &nbsp;socket&nbsp;timeouts.&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt; &nbsp; &nbsp;If&nbsp;the&nbsp;channel&nbsp;is&nbsp;closed,&nbsp;it&nbsp;will&nbsp;indicate&nbsp;a&nbsp;problem&nbsp;with&nbsp;one&nbsp;of&nbsp;the&lt;/div&gt;&lt;div&gt; &nbsp; &nbsp;commands&nbsp;that&nbsp;were&nbsp;issued&nbsp;and&nbsp;that&nbsp;should&nbsp;surface&nbsp;in&nbsp;the&nbsp;output&nbsp;as&nbsp;well.&lt;/div&gt;&lt;div&gt;<br>
<br>
<br>
<br>
<br>
<br>
&lt;br&gt;&lt;/div&gt;&lt;div&gt; &nbsp; &nbsp;&amp;quot;&amp;quot;&amp;quot;&lt;/div&gt;&lt;div&gt; &nbsp; &nbsp;EXCHANGE&nbsp;=&nbsp;&amp;#39;message&amp;#39;&lt;/div&gt;&lt;div&gt; &nbsp; &nbsp;EXCHANGE_TYPE&nbsp;=&nbsp;&amp;#39;topic&amp;#39;&lt;/div&gt;&lt;div&gt; &nbsp; &nbsp;QUEUE&nbsp;=&nbsp;&amp;#39;text&amp;#39;&lt;/div&gt;&lt;div&gt; &nbsp; &nbsp;ROUTING_KEY&nbsp;=&nbsp;&amp;#39;example.text&amp;#39;&lt;/div&gt;<br>
<br>
<br>
<br>
<br>
&lt;div&gt;<br>
&lt;br&gt;&lt;/div&gt;&lt;div&gt; &nbsp; &lt;/div&gt;&lt;div&gt; &nbsp; &nbsp; &nbsp; &lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt; &nbsp; &nbsp;def&nbsp;__init__(self,&nbsp;host,&nbsp;port,&nbsp;username,&nbsp;password):&lt;/div&gt;&lt;div&gt; &nbsp; &nbsp; &nbsp; &nbsp;&amp;quot;&amp;quot;&amp;quot;Setup&nbsp;the&nbsp;example&nbsp;publisher&nbsp;object,&nbsp;passing&nbsp;in&nbsp;the&nbsp;URL&nbsp;we&nbsp;will&nbsp;use&lt;/div&gt;<br>
<br>
<br>
<br>
<br>
<br>
&lt;div&gt; &nbsp; &nbsp; &nbsp; &nbsp;to&nbsp;connect&nbsp;to&nbsp;RabbitMQ.&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt; &nbsp; &nbsp; &nbsp; &nbsp;:param&nbsp;str&nbsp;amqp_url:&nbsp;The&nbsp;URL&nbsp;for&nbsp;connecting&nbsp;to&nbsp;RabbitMQ&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt; &nbsp; &nbsp; &nbsp; &nbsp;&amp;quot;&amp;quot;&amp;quot;&lt;/div&gt;&lt;div&gt; &nbsp; &nbsp; &nbsp;  &lt;/div&gt;&lt;div&gt; &nbsp; &nbsp; &nbsp; &nbsp;self._connection&nbsp;=&nbsp;None&lt;/div&gt;<br>
<br>
<br>
<br>
<br>
<br>
&lt;div&gt; &nbsp; &nbsp; &nbsp; &nbsp;self._channel&nbsp;=&nbsp;None&lt;/div&gt;&lt;div&gt; &nbsp; &nbsp; &nbsp; &nbsp;self._closing&nbsp;=&nbsp;False&lt;/div&gt;&lt;div&gt; &nbsp; &nbsp; &nbsp; &nbsp;self._consumer_tag&nbsp;=&nbsp;None&lt;/div&gt;&lt;div&gt; &nbsp; &nbsp; &nbsp; &nbsp;#self._url&nbsp;=&nbsp;amqp_url&lt;/div&gt;&lt;div&gt; &nbsp; &nbsp; &nbsp;  &lt;/div&gt;&lt;div&gt; &nbsp; &nbsp; &nbsp; &nbsp;self.credentials&nbsp;=&nbsp;pika.PlainCredentials(username=username,&nbsp;password=password)&lt;/div&gt;<br>
<br>
<br>
<br>
<br>
<br>
&lt;div&gt; &nbsp; &nbsp; &nbsp; &nbsp;self.parameters&nbsp;=&nbsp;pika.ConnectionParameters(host=host,&nbsp;port=port,&nbsp;credentials=self.credentials)&lt;/div&gt;&lt;div&gt; &nbsp; &nbsp; &lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt; &nbsp; &nbsp;def&nbsp;connect(self):&lt;/div&gt;&lt;div&gt; &nbsp; &nbsp; &nbsp; &nbsp;&amp;quot;&amp;quot;&amp;quot;This&nbsp;method&nbsp;connects&nbsp;to&nbsp;RabbitMQ,&nbsp;returning&nbsp;the&nbsp;connection&nbsp;handle.&lt;/div&gt;<br>
<br>
<br>
<br>
<br>
<br>
&lt;div&gt; &nbsp; &nbsp; &nbsp; &nbsp;When&nbsp;the&nbsp;connection&nbsp;is&nbsp;established,&nbsp;the&nbsp;on_connection_open&nbsp;method&lt;/div&gt;&lt;div&gt; &nbsp; &nbsp; &nbsp; &nbsp;will&nbsp;be&nbsp;invoked&nbsp;by&nbsp;pika.&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt; &nbsp; &nbsp; &nbsp; &nbsp;:rtype:&nbsp;pika.SelectConnection&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt; &nbsp; &nbsp; &nbsp; &nbsp;&amp;quot;&amp;quot;&amp;quot;&lt;/div&gt;<br>
<br>
<br>
<br>
<br>
<br>
&lt;div&gt; &nbsp; &nbsp; &nbsp; &nbsp;#LOGGER.info(&amp;#39;Connecting&nbsp;to&nbsp;%s&amp;#39;,&nbsp;self._url)&lt;/div&gt;&lt;div&gt; &nbsp; &nbsp; &nbsp; &nbsp;adapters.TornadoConnection(self.parameters,&nbsp;on_open_callback=self.on_connection_open,&nbsp;stop_ioloop_on_close=False)&lt;/div&gt;&lt;div&gt; &nbsp; &nbsp; &nbsp; &nbsp;#return&nbsp;adapters.TornadoConnection(pika.URLParameters(self._url),self.on_connection_open)&lt;/div&gt;<br>
<br>
<br>
<br>
<br>
<br>
&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt; &nbsp; &nbsp;def&nbsp;close_connection(self):&lt;/div&gt;&lt;div&gt; &nbsp; &nbsp; &nbsp; &nbsp;&amp;quot;&amp;quot;&amp;quot;This&nbsp;method&nbsp;closes&nbsp;the&nbsp;connection&nbsp;to&nbsp;RabbitMQ.&amp;quot;&amp;quot;&amp;quot;&lt;/div&gt;&lt;div&gt; &nbsp; &nbsp; &nbsp; &nbsp;LOGGER.info(&amp;#39;Closing&nbsp;connection&amp;#39;)&lt;/div&gt;&lt;div&gt;<br>
<br>
<br>
<br>
<br>
<br>
 &nbsp; &nbsp; &nbsp; &nbsp;self._connection.close()&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt; &nbsp; &nbsp;def&nbsp;add_on_connection_close_callback(self):&lt;/div&gt;&lt;div&gt; &nbsp; &nbsp; &nbsp; &nbsp;&amp;quot;&amp;quot;&amp;quot;This&nbsp;method&nbsp;adds&nbsp;an&nbsp;on&nbsp;close&nbsp;callback&nbsp;that&nbsp;will&nbsp;be&nbsp;invoked&nbsp;by&nbsp;pika&lt;/div&gt;&lt;div&gt; &nbsp; &nbsp; &nbsp; &nbsp;when&nbsp;RabbitMQ&nbsp;closes&nbsp;the&nbsp;connection&nbsp;to&nbsp;the&nbsp;publisher&nbsp;unexpectedly.&lt;/div&gt;<br>
<br>
<br>
<br>
<br>
<br>
&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt; &nbsp; &nbsp; &nbsp; &nbsp;&amp;quot;&amp;quot;&amp;quot;&lt;/div&gt;&lt;div&gt; &nbsp; &nbsp; &nbsp; &nbsp;LOGGER.info(&amp;#39;Adding&nbsp;connection&nbsp;close&nbsp;callback&amp;#39;)&lt;/div&gt;&lt;div&gt; &nbsp; &nbsp; &nbsp; &nbsp;self._connection.add_on_close_callback(self.on_connection_closed)&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;<br>
<br>
<br>
<br>
<br>
<br>
&lt;div&gt; &nbsp; &nbsp;def&nbsp;on_connection_closed(self,&nbsp;connection,&nbsp;reply_code,&nbsp;reply_text):&lt;/div&gt;&lt;div&gt; &nbsp; &nbsp; &nbsp; &nbsp;&amp;quot;&amp;quot;&amp;quot;This&nbsp;method&nbsp;is&nbsp;invoked&nbsp;by&nbsp;pika&nbsp;when&nbsp;the&nbsp;connection&nbsp;to&nbsp;RabbitMQ&nbsp;is&lt;/div&gt;&lt;div&gt; &nbsp; &nbsp; &nbsp; &nbsp;closed&nbsp;unexpectedly.&nbsp;Since&nbsp;it&nbsp;is&nbsp;unexpected,&nbsp;we&nbsp;will&nbsp;reconnect&nbsp;to&lt;/div&gt;<br>
<br>
<br>
<br>
<br>
<br>
&lt;div&gt; &nbsp; &nbsp; &nbsp; &nbsp;RabbitMQ&nbsp;if&nbsp;it&nbsp;disconnects.&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt; &nbsp; &nbsp; &nbsp; &nbsp;:param&nbsp;pika.connection.Connection&nbsp;connection:&nbsp;The&nbsp;closed&nbsp;connection&nbsp;obj&lt;/div&gt;&lt;div&gt; &nbsp; &nbsp; &nbsp; &nbsp;:param&nbsp;int&nbsp;reply_code:&nbsp;The&nbsp;server&nbsp;provided&nbsp;reply_code&nbsp;if&nbsp;given&lt;/div&gt;<br>
<br>
<br>
<br>
<br>
<br>
&lt;div&gt; &nbsp; &nbsp; &nbsp; &nbsp;:param&nbsp;str&nbsp;reply_text:&nbsp;The&nbsp;server&nbsp;provided&nbsp;reply_text&nbsp;if&nbsp;given&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt; &nbsp; &nbsp; &nbsp; &nbsp;&amp;quot;&amp;quot;&amp;quot;&lt;/div&gt;&lt;div&gt; &nbsp; &nbsp; &nbsp; &nbsp;self._channel&nbsp;=&nbsp;None&lt;/div&gt;&lt;div&gt; &nbsp; &nbsp; &nbsp; &nbsp;if&nbsp;self._closing:&lt;/div&gt;&lt;div&gt; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;self._connection.ioloop.stop()&lt;/div&gt;<br>
<br>
<br>
<br>
<br>
<br>
&lt;div&gt; &nbsp; &nbsp; &nbsp; &nbsp;else:&lt;/div&gt;&lt;div&gt; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;LOGGER.warning(&amp;#39;Connection&nbsp;closed,&nbsp;reopening&nbsp;in&nbsp;5&nbsp;seconds:&nbsp;(%s)&nbsp;%s&amp;#39;,&lt;/div&gt;&lt;div&gt; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; reply_code,&nbsp;reply_text)&lt;/div&gt;&lt;div&gt; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;self._connection.add_timeout(5,&nbsp;self.reconnect)&lt;/div&gt;<br>
<br>
<br>
<br>
<br>
<br>
&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt; &nbsp; &nbsp;def&nbsp;on_connection_open(self,&nbsp;unused_connection):&lt;/div&gt;&lt;div&gt; &nbsp; &nbsp; &nbsp; &nbsp;&amp;quot;&amp;quot;&amp;quot;This&nbsp;method&nbsp;is&nbsp;called&nbsp;by&nbsp;pika&nbsp;once&nbsp;the&nbsp;connection&nbsp;to&nbsp;RabbitMQ&nbsp;has&lt;/div&gt;&lt;div&gt; &nbsp; &nbsp; &nbsp; &nbsp;been&nbsp;established.&nbsp;It&nbsp;passes&nbsp;the&nbsp;handle&nbsp;to&nbsp;the&nbsp;connection&nbsp;object&nbsp;in&lt;/div&gt;<br>
<br>
<br>
<br>
<br>
<br>
&lt;div&gt; &nbsp; &nbsp; &nbsp; &nbsp;case&nbsp;we&nbsp;need&nbsp;it,&nbsp;but&nbsp;in&nbsp;this&nbsp;case,&nbsp;we&amp;#39;ll&nbsp;just&nbsp;mark&nbsp;it&nbsp;unused.&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt; &nbsp; &nbsp; &nbsp; &nbsp;:type&nbsp;unused_connection:&nbsp;pika.SelectConnection&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt; &nbsp; &nbsp; &nbsp; &nbsp;&amp;quot;&amp;quot;&amp;quot;&lt;/div&gt;&lt;div&gt;<br>
<br>
<br>
<br>
<br>
<br>
 &nbsp; &nbsp; &nbsp; &nbsp;LOGGER.info(&amp;#39;Connection&nbsp;opened&amp;#39;)&lt;/div&gt;&lt;div&gt; &nbsp; &nbsp; &nbsp; &nbsp;self.add_on_connection_close_callback()&lt;/div&gt;&lt;div&gt; &nbsp; &nbsp; &nbsp; &nbsp;self.open_channel()&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt; &nbsp; &nbsp;def&nbsp;reconnect(self):&lt;/div&gt;&lt;div&gt; &nbsp; &nbsp; &nbsp; &nbsp;&amp;quot;&amp;quot;&amp;quot;Will&nbsp;be&nbsp;invoked&nbsp;by&nbsp;the&nbsp;IOLoop&nbsp;timer&nbsp;if&nbsp;the&nbsp;connection&nbsp;is&lt;/div&gt;<br>
<br>
<br>
<br>
<br>
<br>
&lt;div&gt; &nbsp; &nbsp; &nbsp; &nbsp;closed.&nbsp;See&nbsp;the&nbsp;on_connection_closed&nbsp;method.&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt; &nbsp; &nbsp; &nbsp; &nbsp;&amp;quot;&amp;quot;&amp;quot;&lt;/div&gt;&lt;div&gt; &nbsp; &nbsp; &nbsp; &nbsp;#&nbsp;This&nbsp;is&nbsp;the&nbsp;old&nbsp;connection&nbsp;IOLoop&nbsp;instance,&nbsp;stop&nbsp;its&nbsp;ioloop&lt;/div&gt;&lt;div&gt; &nbsp; &nbsp; &nbsp; &nbsp;self._connection.ioloop.stop()&lt;/div&gt;<br>
<br>
<br>
<br>
<br>
<br>
&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt; &nbsp; &nbsp; &nbsp; &nbsp;if&nbsp;not&nbsp;self._closing:&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;#&nbsp;Create&nbsp;a&nbsp;new&nbsp;connection&lt;/div&gt;&lt;div&gt; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;self._connection&nbsp;=&nbsp;self.connect()&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;#&nbsp;There&nbsp;is&nbsp;now&nbsp;a&nbsp;new&nbsp;connection,&nbsp;needs&nbsp;a&nbsp;new&nbsp;ioloop&nbsp;to&nbsp;run&lt;/div&gt;<br>
<br>
<br>
<br>
<br>
<br>
&lt;div&gt; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;self._connection.ioloop.start()&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt; &nbsp; &nbsp;def&nbsp;add_on_channel_close_callback(self):&lt;/div&gt;&lt;div&gt; &nbsp; &nbsp; &nbsp; &nbsp;&amp;quot;&amp;quot;&amp;quot;This&nbsp;method&nbsp;tells&nbsp;pika&nbsp;to&nbsp;call&nbsp;the&nbsp;on_channel_closed&nbsp;method&nbsp;if&lt;/div&gt;<br>
<br>
<br>
<br>
<br>
<br>
&lt;div&gt; &nbsp; &nbsp; &nbsp; &nbsp;RabbitMQ&nbsp;unexpectedly&nbsp;closes&nbsp;the&nbsp;channel.&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt; &nbsp; &nbsp; &nbsp; &nbsp;&amp;quot;&amp;quot;&amp;quot;&lt;/div&gt;&lt;div&gt; &nbsp; &nbsp; &nbsp; &nbsp;LOGGER.info(&amp;#39;Adding&nbsp;channel&nbsp;close&nbsp;callback&amp;#39;)&lt;/div&gt;&lt;div&gt; &nbsp; &nbsp; &nbsp; &nbsp;self._channel.add_on_close_callback(self.on_channel_closed)&lt;/div&gt;<br>
<br>
<br>
<br>
<br>
<br>
&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt; &nbsp; &nbsp;def&nbsp;on_channel_closed(self,&nbsp;channel,&nbsp;reply_code,&nbsp;reply_text):&lt;/div&gt;&lt;div&gt; &nbsp; &nbsp; &nbsp; &nbsp;&amp;quot;&amp;quot;&amp;quot;Invoked&nbsp;by&nbsp;pika&nbsp;when&nbsp;RabbitMQ&nbsp;unexpectedly&nbsp;closes&nbsp;the&nbsp;channel.&lt;/div&gt;&lt;div&gt; &nbsp; &nbsp; &nbsp; &nbsp;Channels&nbsp;are&nbsp;usually&nbsp;closed&nbsp;if&nbsp;you&nbsp;attempt&nbsp;to&nbsp;do&nbsp;something&nbsp;that&lt;/div&gt;<br>
<br>
<br>
<br>
<br>
<br>
&lt;div&gt; &nbsp; &nbsp; &nbsp; &nbsp;violates&nbsp;the&nbsp;protocol,&nbsp;such&nbsp;as&nbsp;re-declare&nbsp;an&nbsp;exchange&nbsp;or&nbsp;queue&nbsp;with&lt;/div&gt;&lt;div&gt; &nbsp; &nbsp; &nbsp; &nbsp;different&nbsp;parameters.&nbsp;In&nbsp;this&nbsp;case,&nbsp;we&amp;#39;ll&nbsp;close&nbsp;the&nbsp;connection&lt;/div&gt;&lt;div&gt; &nbsp; &nbsp; &nbsp; &nbsp;to&nbsp;shutdown&nbsp;the&nbsp;object.&lt;/div&gt;&lt;div&gt;&lt;br&gt;<br>
<br>
<br>
<br>
<br>
<br>
&lt;/div&gt;&lt;div&gt; &nbsp; &nbsp; &nbsp; &nbsp;:param&nbsp;pika.channel.Channel:&nbsp;The&nbsp;closed&nbsp;channel&lt;/div&gt;&lt;div&gt; &nbsp; &nbsp; &nbsp; &nbsp;:param&nbsp;int&nbsp;reply_code:&nbsp;The&nbsp;numeric&nbsp;reason&nbsp;the&nbsp;channel&nbsp;was&nbsp;closed&lt;/div&gt;&lt;div&gt; &nbsp; &nbsp; &nbsp; &nbsp;:param&nbsp;str&nbsp;reply_text:&nbsp;The&nbsp;text&nbsp;reason&nbsp;the&nbsp;channel&nbsp;was&nbsp;closed&lt;/div&gt;<br>
<br>
<br>
<br>
<br>
<br>
&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt; &nbsp; &nbsp; &nbsp; &nbsp;&amp;quot;&amp;quot;&amp;quot;&lt;/div&gt;&lt;div&gt; &nbsp; &nbsp; &nbsp; &nbsp;LOGGER.warning(&amp;#39;Channel&nbsp;%i&nbsp;was&nbsp;closed:&nbsp;(%s)&nbsp;%s&amp;#39;,&lt;/div&gt;&lt;div&gt; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; channel,&nbsp;reply_code,&nbsp;reply_text)&lt;/div&gt;&lt;div&gt; &nbsp; &nbsp; &nbsp; &nbsp;self._connection.close()&lt;/div&gt;<br>
<br>
<br>
<br>
<br>
<br>
&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt; &nbsp; &nbsp;def&nbsp;on_channel_open(self,&nbsp;channel):&lt;/div&gt;&lt;div&gt; &nbsp; &nbsp; &nbsp; &nbsp;&amp;quot;&amp;quot;&amp;quot;This&nbsp;method&nbsp;is&nbsp;invoked&nbsp;by&nbsp;pika&nbsp;when&nbsp;the&nbsp;channel&nbsp;has&nbsp;been&nbsp;opened.&lt;/div&gt;&lt;div&gt; &nbsp; &nbsp; &nbsp; &nbsp;The&nbsp;channel&nbsp;object&nbsp;is&nbsp;passed&nbsp;in&nbsp;so&nbsp;we&nbsp;can&nbsp;make&nbsp;use&nbsp;of&nbsp;it.&lt;/div&gt;<br>
<br>
<br>
<br>
<br>
<br>
&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt; &nbsp; &nbsp; &nbsp; &nbsp;Since&nbsp;the&nbsp;channel&nbsp;is&nbsp;now&nbsp;open,&nbsp;we&amp;#39;ll&nbsp;declare&nbsp;the&nbsp;exchange&nbsp;to&nbsp;use.&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt; &nbsp; &nbsp; &nbsp; &nbsp;:param&nbsp;pika.channel.Channel&nbsp;channel:&nbsp;The&nbsp;channel&nbsp;object&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt; &nbsp; &nbsp; &nbsp; &nbsp;&amp;quot;&amp;quot;&amp;quot;&lt;/div&gt;<br>
<br>
<br>
<br>
<br>
<br>
&lt;div&gt; &nbsp; &nbsp; &nbsp; &nbsp;LOGGER.info(&amp;#39;Channel&nbsp;opened&amp;#39;)&lt;/div&gt;&lt;div&gt; &nbsp; &nbsp; &nbsp; &nbsp;self._channel&nbsp;=&nbsp;channel&lt;/div&gt;&lt;div&gt; &nbsp; &nbsp; &nbsp; &nbsp;self.add_on_channel_close_callback()&lt;/div&gt;&lt;div&gt; &nbsp; &nbsp; &nbsp; &nbsp;self.setup_exchange(self.EXCHANGE)&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;<br>
<br>
<br>
<br>
<br>
<br>
&lt;div&gt; &nbsp; &nbsp;def&nbsp;setup_exchange(self,&nbsp;exchange_name):&lt;/div&gt;&lt;div&gt; &nbsp; &nbsp; &nbsp; &nbsp;&amp;quot;&amp;quot;&amp;quot;Setup&nbsp;the&nbsp;exchange&nbsp;on&nbsp;RabbitMQ&nbsp;by&nbsp;invoking&nbsp;the&nbsp;Exchange.Declare&nbsp;RPC&lt;/div&gt;&lt;div&gt; &nbsp; &nbsp; &nbsp; &nbsp;command.&nbsp;When&nbsp;it&nbsp;is&nbsp;complete,&nbsp;the&nbsp;on_exchange_declareok&nbsp;method&nbsp;will&lt;/div&gt;<br>
<br>
<br>
<br>
<br>
<br>
&lt;div&gt; &nbsp; &nbsp; &nbsp; &nbsp;be&nbsp;invoked&nbsp;by&nbsp;pika.&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt; &nbsp; &nbsp; &nbsp; &nbsp;:param&nbsp;str|unicode&nbsp;exchange_name:&nbsp;The&nbsp;name&nbsp;of&nbsp;the&nbsp;exchange&nbsp;to&nbsp;declare&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt; &nbsp; &nbsp; &nbsp; &nbsp;&amp;quot;&amp;quot;&amp;quot;&lt;/div&gt;&lt;div&gt; &nbsp; &nbsp; &nbsp; &nbsp;LOGGER.info(&amp;#39;Declaring&nbsp;exchange&nbsp;%s&amp;#39;,&nbsp;exchange_name)&lt;/div&gt;<br>
<br>
<br>
<br>
<br>
<br>
&lt;div&gt; &nbsp; &nbsp; &nbsp; &nbsp;self._channel.exchange_declare(self.on_exchange_declareok,&lt;/div&gt;&lt;div&gt; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; exchange_name,&lt;/div&gt;&lt;div&gt; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; self.EXCHANGE_TYPE)&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;<br>
<br>
<br>
<br>
<br>
<br>
&lt;div&gt; &nbsp; &nbsp;def&nbsp;on_exchange_declareok(self,&nbsp;unused_frame):&lt;/div&gt;&lt;div&gt; &nbsp; &nbsp; &nbsp; &nbsp;&amp;quot;&amp;quot;&amp;quot;Invoked&nbsp;by&nbsp;pika&nbsp;when&nbsp;RabbitMQ&nbsp;has&nbsp;finished&nbsp;the&nbsp;Exchange.Declare&nbsp;RPC&lt;/div&gt;&lt;div&gt; &nbsp; &nbsp; &nbsp; &nbsp;command.&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt; &nbsp; &nbsp; &nbsp; &nbsp;:param&nbsp;pika.Frame.Method&nbsp;unused_frame:&nbsp;Exchange.DeclareOk&nbsp;response&nbsp;frame&lt;/div&gt;<br>
<br>
<br>
<br>
<br>
<br>
&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt; &nbsp; &nbsp; &nbsp; &nbsp;&amp;quot;&amp;quot;&amp;quot;&lt;/div&gt;&lt;div&gt; &nbsp; &nbsp; &nbsp; &nbsp;LOGGER.info(&amp;#39;Exchange&nbsp;declared&amp;#39;)&lt;/div&gt;&lt;div&gt; &nbsp; &nbsp; &nbsp; &nbsp;self.setup_queue(self.QUEUE)&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt; &nbsp; &nbsp;def&nbsp;setup_queue(self,&nbsp;queue_name):&lt;/div&gt;<br>
<br>
<br>
<br>
<br>
<br>
&lt;div&gt; &nbsp; &nbsp; &nbsp; &nbsp;&amp;quot;&amp;quot;&amp;quot;Setup&nbsp;the&nbsp;queue&nbsp;on&nbsp;RabbitMQ&nbsp;by&nbsp;invoking&nbsp;the&nbsp;Queue.Declare&nbsp;RPC&lt;/div&gt;&lt;div&gt; &nbsp; &nbsp; &nbsp; &nbsp;command.&nbsp;When&nbsp;it&nbsp;is&nbsp;complete,&nbsp;the&nbsp;on_queue_declareok&nbsp;method&nbsp;will&lt;/div&gt;&lt;div&gt; &nbsp; &nbsp; &nbsp; &nbsp;be&nbsp;invoked&nbsp;by&nbsp;pika.&lt;/div&gt;&lt;div&gt;<br>
<br>
<br>
<br>
<br>
<br>
&lt;br&gt;&lt;/div&gt;&lt;div&gt; &nbsp; &nbsp; &nbsp; &nbsp;:param&nbsp;str|unicode&nbsp;queue_name:&nbsp;The&nbsp;name&nbsp;of&nbsp;the&nbsp;queue&nbsp;to&nbsp;declare.&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt; &nbsp; &nbsp; &nbsp; &nbsp;&amp;quot;&amp;quot;&amp;quot;&lt;/div&gt;&lt;div&gt; &nbsp; &nbsp; &nbsp; &nbsp;LOGGER.info(&amp;#39;Declaring&nbsp;queue&nbsp;%s&amp;#39;,&nbsp;queue_name)&lt;/div&gt;&lt;div&gt;<br>
<br>
<br>
<br>
<br>
<br>
 &nbsp; &nbsp; &nbsp; &nbsp;self._channel.queue_declare(self.on_queue_declareok,&nbsp;queue_name)&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt; &nbsp; &nbsp;def&nbsp;on_queue_declareok(self,&nbsp;method_frame):&lt;/div&gt;&lt;div&gt; &nbsp; &nbsp; &nbsp; &nbsp;&amp;quot;&amp;quot;&amp;quot;Method&nbsp;invoked&nbsp;by&nbsp;pika&nbsp;when&nbsp;the&nbsp;Queue.Declare&nbsp;RPC&nbsp;call&nbsp;made&nbsp;in&lt;/div&gt;<br>
<br>
<br>
<br>
<br>
<br>
&lt;div&gt; &nbsp; &nbsp; &nbsp; &nbsp;setup_queue&nbsp;has&nbsp;completed.&nbsp;In&nbsp;this&nbsp;method&nbsp;we&nbsp;will&nbsp;bind&nbsp;the&nbsp;queue&lt;/div&gt;&lt;div&gt; &nbsp; &nbsp; &nbsp; &nbsp;and&nbsp;exchange&nbsp;together&nbsp;with&nbsp;the&nbsp;routing&nbsp;key&nbsp;by&nbsp;issuing&nbsp;the&nbsp;Queue.Bind&lt;/div&gt;&lt;div&gt; &nbsp; &nbsp; &nbsp; &nbsp;RPC&nbsp;command.&nbsp;When&nbsp;this&nbsp;command&nbsp;is&nbsp;complete,&nbsp;the&nbsp;on_bindok&nbsp;method&nbsp;will&lt;/div&gt;<br>
<br>
<br>
<br>
<br>
<br>
&lt;div&gt; &nbsp; &nbsp; &nbsp; &nbsp;be&nbsp;invoked&nbsp;by&nbsp;pika.&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt; &nbsp; &nbsp; &nbsp; &nbsp;:param&nbsp;pika.frame.Method&nbsp;method_frame:&nbsp;The&nbsp;Queue.DeclareOk&nbsp;frame&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt; &nbsp; &nbsp; &nbsp; &nbsp;&amp;quot;&amp;quot;&amp;quot;&lt;/div&gt;&lt;div&gt; &nbsp; &nbsp; &nbsp; &nbsp;LOGGER.info(&amp;#39;Binding&nbsp;%s&nbsp;to&nbsp;%s&nbsp;with&nbsp;%s&amp;#39;,&lt;/div&gt;<br>
<br>
<br>
<br>
<br>
<br>
&lt;div&gt; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;self.EXCHANGE,&nbsp;self.QUEUE,&nbsp;self.ROUTING_KEY)&lt;/div&gt;&lt;div&gt; &nbsp; &nbsp; &nbsp; &nbsp;self._channel.queue_bind(self.on_bindok,&nbsp;self.QUEUE,&lt;/div&gt;&lt;div&gt; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; self.EXCHANGE,&nbsp;self.ROUTING_KEY)&lt;/div&gt;<br>
<br>
<br>
<br>
<br>
<br>
&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt; &nbsp; &nbsp;def&nbsp;add_on_cancel_callback(self):&lt;/div&gt;&lt;div&gt; &nbsp; &nbsp; &nbsp; &nbsp;&amp;quot;&amp;quot;&amp;quot;Add&nbsp;a&nbsp;callback&nbsp;that&nbsp;will&nbsp;be&nbsp;invoked&nbsp;if&nbsp;RabbitMQ&nbsp;cancels&nbsp;the&nbsp;consumer&lt;/div&gt;&lt;div&gt; &nbsp; &nbsp; &nbsp; &nbsp;for&nbsp;some&nbsp;reason.&nbsp;If&nbsp;RabbitMQ&nbsp;does&nbsp;cancel&nbsp;the&nbsp;consumer,&lt;/div&gt;<br>
<br>
<br>
<br>
<br>
<br>
&lt;div&gt; &nbsp; &nbsp; &nbsp; &nbsp;on_consumer_cancelled&nbsp;will&nbsp;be&nbsp;invoked&nbsp;by&nbsp;pika.&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt; &nbsp; &nbsp; &nbsp; &nbsp;&amp;quot;&amp;quot;&amp;quot;&lt;/div&gt;&lt;div&gt; &nbsp; &nbsp; &nbsp; &nbsp;LOGGER.info(&amp;#39;Adding&nbsp;consumer&nbsp;cancellation&nbsp;callback&amp;#39;)&lt;/div&gt;&lt;div&gt; &nbsp; &nbsp; &nbsp; &nbsp;self._channel.add_on_cancel_callback(self.on_consumer_cancelled)&lt;/div&gt;<br>
<br>
<br>
<br>
<br>
<br>
&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt; &nbsp; &nbsp;def&nbsp;on_consumer_cancelled(self,&nbsp;method_frame):&lt;/div&gt;&lt;div&gt; &nbsp; &nbsp; &nbsp; &nbsp;&amp;quot;&amp;quot;&amp;quot;Invoked&nbsp;by&nbsp;pika&nbsp;when&nbsp;RabbitMQ&nbsp;sends&nbsp;a&nbsp;Basic.Cancel&nbsp;for&nbsp;a&nbsp;consumer&lt;/div&gt;&lt;div&gt; &nbsp; &nbsp; &nbsp; &nbsp;receiving&nbsp;messages.&lt;/div&gt;&lt;div&gt;<br>
<br>
<br>
<br>
<br>
<br>
&lt;br&gt;&lt;/div&gt;&lt;div&gt; &nbsp; &nbsp; &nbsp; &nbsp;:param&nbsp;pika.frame.Method&nbsp;method_frame:&nbsp;The&nbsp;Basic.Cancel&nbsp;frame&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt; &nbsp; &nbsp; &nbsp; &nbsp;&amp;quot;&amp;quot;&amp;quot;&lt;/div&gt;&lt;div&gt; &nbsp; &nbsp; &nbsp; &nbsp;LOGGER.info(&amp;#39;Consumer&nbsp;was&nbsp;cancelled&nbsp;remotely,&nbsp;shutting&nbsp;down:&nbsp;%r&amp;#39;,&lt;/div&gt;<br>
<br>
<br>
<br>
<br>
<br>
&lt;div&gt; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;method_frame)&lt;/div&gt;&lt;div&gt; &nbsp; &nbsp; &nbsp; &nbsp;if&nbsp;self._channel:&lt;/div&gt;&lt;div&gt; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;self._channel.close()&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt; &nbsp; &nbsp;def&nbsp;acknowledge_message(self,&nbsp;delivery_tag):&lt;/div&gt;&lt;div&gt; &nbsp; &nbsp; &nbsp; &nbsp;&amp;quot;&amp;quot;&amp;quot;Acknowledge&nbsp;the&nbsp;message&nbsp;delivery&nbsp;from&nbsp;RabbitMQ&nbsp;by&nbsp;sending&nbsp;a&lt;/div&gt;<br>
<br>
<br>
<br>
<br>
<br>
&lt;div&gt; &nbsp; &nbsp; &nbsp; &nbsp;Basic.Ack&nbsp;RPC&nbsp;method&nbsp;for&nbsp;the&nbsp;delivery&nbsp;tag.&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt; &nbsp; &nbsp; &nbsp; &nbsp;:param&nbsp;int&nbsp;delivery_tag:&nbsp;The&nbsp;delivery&nbsp;tag&nbsp;from&nbsp;the&nbsp;Basic.Deliver&nbsp;frame&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt; &nbsp; &nbsp; &nbsp; &nbsp;&amp;quot;&amp;quot;&amp;quot;&lt;/div&gt;&lt;div&gt;<br>
<br>
<br>
<br>
<br>
<br>
 &nbsp; &nbsp; &nbsp; &nbsp;LOGGER.info(&amp;#39;Acknowledging&nbsp;message&nbsp;%s&amp;#39;,&nbsp;delivery_tag)&lt;/div&gt;&lt;div&gt; &nbsp; &nbsp; &nbsp; &nbsp;self._channel.basic_ack(delivery_tag)&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt; &nbsp; &nbsp;def&nbsp;on_message(self,&nbsp;unused_channel,&nbsp;basic_deliver,&nbsp;properties,&nbsp;body):&lt;/div&gt;<br>
<br>
<br>
<br>
<br>
<br>
&lt;div&gt; &nbsp; &nbsp; &nbsp; &nbsp;&amp;quot;&amp;quot;&amp;quot;Invoked&nbsp;by&nbsp;pika&nbsp;when&nbsp;a&nbsp;message&nbsp;is&nbsp;delivered&nbsp;from&nbsp;RabbitMQ.&nbsp;The&lt;/div&gt;&lt;div&gt; &nbsp; &nbsp; &nbsp; &nbsp;channel&nbsp;is&nbsp;passed&nbsp;for&nbsp;your&nbsp;convenience.&nbsp;The&nbsp;basic_deliver&nbsp;object&nbsp;that&lt;/div&gt;&lt;div&gt; &nbsp; &nbsp; &nbsp; &nbsp;is&nbsp;passed&nbsp;in&nbsp;carries&nbsp;the&nbsp;exchange,&nbsp;routing&nbsp;key,&nbsp;delivery&nbsp;tag&nbsp;and&lt;/div&gt;<br>
<br>
<br>
<br>
<br>
<br>
&lt;div&gt; &nbsp; &nbsp; &nbsp; &nbsp;a&nbsp;redelivered&nbsp;flag&nbsp;for&nbsp;the&nbsp;message.&nbsp;The&nbsp;properties&nbsp;passed&nbsp;in&nbsp;is&nbsp;an&lt;/div&gt;&lt;div&gt; &nbsp; &nbsp; &nbsp; &nbsp;instance&nbsp;of&nbsp;BasicProperties&nbsp;with&nbsp;the&nbsp;message&nbsp;properties&nbsp;and&nbsp;the&nbsp;body&lt;/div&gt;&lt;div&gt; &nbsp; &nbsp; &nbsp; &nbsp;is&nbsp;the&nbsp;message&nbsp;that&nbsp;was&nbsp;sent.&lt;/div&gt;<br>
<br>
<br>
<br>
<br>
&lt;div&gt;<br>
&lt;br&gt;&lt;/div&gt;&lt;div&gt; &nbsp; &nbsp; &nbsp; &nbsp;:param&nbsp;pika.channel.Channel&nbsp;unused_channel:&nbsp;The&nbsp;channel&nbsp;object&lt;/div&gt;&lt;div&gt; &nbsp; &nbsp; &nbsp; &nbsp;:param&nbsp;pika.Spec.Basic.Deliver:&nbsp;basic_deliver&nbsp;method&lt;/div&gt;&lt;div&gt; &nbsp; &nbsp; &nbsp; &nbsp;:param&nbsp;pika.Spec.BasicProperties:&nbsp;properties&lt;/div&gt;<br>
<br>
<br>
<br>
<br>
<br>
&lt;div&gt; &nbsp; &nbsp; &nbsp; &nbsp;:param&nbsp;str|unicode&nbsp;body:&nbsp;The&nbsp;message&nbsp;body&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt; &nbsp; &nbsp; &nbsp; &nbsp;&amp;quot;&amp;quot;&amp;quot;&lt;/div&gt;&lt;div&gt; &nbsp; &nbsp; &nbsp; &nbsp;LOGGER.info(&amp;#39;Received&nbsp;message&nbsp;#&nbsp;%s&nbsp;from&nbsp;%s:&nbsp;%s&amp;#39;,&lt;/div&gt;&lt;div&gt; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;basic_deliver.delivery_tag,&nbsp;properties.app_id,&nbsp;body)&lt;/div&gt;<br>
<br>
<br>
<br>
<br>
<br>
&lt;div&gt; &nbsp; &nbsp; &nbsp; &nbsp;self.acknowledge_message(basic_deliver.delivery_tag)&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt; &nbsp; &nbsp;def&nbsp;on_cancelok(self,&nbsp;unused_frame):&lt;/div&gt;&lt;div&gt; &nbsp; &nbsp; &nbsp; &nbsp;&amp;quot;&amp;quot;&amp;quot;This&nbsp;method&nbsp;is&nbsp;invoked&nbsp;by&nbsp;pika&nbsp;when&nbsp;RabbitMQ&nbsp;acknowledges&nbsp;the&lt;/div&gt;<br>
<br>
<br>
<br>
<br>
<br>
&lt;div&gt; &nbsp; &nbsp; &nbsp; &nbsp;cancellation&nbsp;of&nbsp;a&nbsp;consumer.&nbsp;At&nbsp;this&nbsp;point&nbsp;we&nbsp;will&nbsp;close&nbsp;the&nbsp;channel.&lt;/div&gt;&lt;div&gt; &nbsp; &nbsp; &nbsp; &nbsp;This&nbsp;will&nbsp;invoke&nbsp;the&nbsp;on_channel_closed&nbsp;method&nbsp;once&nbsp;the&nbsp;channel&nbsp;has&nbsp;been&lt;/div&gt;&lt;div&gt; &nbsp; &nbsp; &nbsp; &nbsp;closed,&nbsp;which&nbsp;will&nbsp;in-turn&nbsp;close&nbsp;the&nbsp;connection.&lt;/div&gt;<br>
<br>
<br>
<br>
<br>
<br>
&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt; &nbsp; &nbsp; &nbsp; &nbsp;:param&nbsp;pika.frame.Method&nbsp;unused_frame:&nbsp;The&nbsp;Basic.CancelOk&nbsp;frame&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt; &nbsp; &nbsp; &nbsp; &nbsp;&amp;quot;&amp;quot;&amp;quot;&lt;/div&gt;&lt;div&gt; &nbsp; &nbsp; &nbsp; &nbsp;LOGGER.info(&amp;#39;RabbitMQ&nbsp;acknowledged&nbsp;the&nbsp;cancellation&nbsp;of&nbsp;the&nbsp;consumer&amp;#39;)&lt;/div&gt;<br>
<br>
<br>
<br>
<br>
<br>
&lt;div&gt; &nbsp; &nbsp; &nbsp; &nbsp;self.close_channel()&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt; &nbsp; &nbsp;def&nbsp;stop_consuming(self):&lt;/div&gt;&lt;div&gt; &nbsp; &nbsp; &nbsp; &nbsp;&amp;quot;&amp;quot;&amp;quot;Tell&nbsp;RabbitMQ&nbsp;that&nbsp;you&nbsp;would&nbsp;like&nbsp;to&nbsp;stop&nbsp;consuming&nbsp;by&nbsp;sending&nbsp;the&lt;/div&gt;&lt;div&gt; &nbsp; &nbsp; &nbsp; &nbsp;Basic.Cancel&nbsp;RPC&nbsp;command.&lt;/div&gt;<br>
<br>
<br>
<br>
<br>
<br>
&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt; &nbsp; &nbsp; &nbsp; &nbsp;&amp;quot;&amp;quot;&amp;quot;&lt;/div&gt;&lt;div&gt; &nbsp; &nbsp; &nbsp; &nbsp;if&nbsp;self._channel:&lt;/div&gt;&lt;div&gt; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;LOGGER.info(&amp;#39;Sending&nbsp;a&nbsp;Basic.Cancel&nbsp;RPC&nbsp;command&nbsp;to&nbsp;RabbitMQ&amp;#39;)&lt;/div&gt;&lt;div&gt; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;self._channel.basic_cancel(self.on_cancelok,&nbsp;self._consumer_tag)&lt;/div&gt;<br>
<br>
<br>
<br>
<br>
<br>
&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt; &nbsp; &nbsp;def&nbsp;start_consuming(self):&lt;/div&gt;&lt;div&gt; &nbsp; &nbsp; &nbsp; &nbsp;&amp;quot;&amp;quot;&amp;quot;This&nbsp;method&nbsp;sets&nbsp;up&nbsp;the&nbsp;consumer&nbsp;by&nbsp;first&nbsp;calling&lt;/div&gt;&lt;div&gt; &nbsp; &nbsp; &nbsp; &nbsp;add_on_cancel_callback&nbsp;so&nbsp;that&nbsp;the&nbsp;object&nbsp;is&nbsp;notified&nbsp;if&nbsp;RabbitMQ&lt;/div&gt;<br>
<br>
<br>
<br>
<br>
<br>
&lt;div&gt; &nbsp; &nbsp; &nbsp; &nbsp;cancels&nbsp;the&nbsp;consumer.&nbsp;It&nbsp;then&nbsp;issues&nbsp;the&nbsp;Basic.Consume&nbsp;RPC&nbsp;command&lt;/div&gt;&lt;div&gt; &nbsp; &nbsp; &nbsp; &nbsp;which&nbsp;returns&nbsp;the&nbsp;consumer&nbsp;tag&nbsp;that&nbsp;is&nbsp;used&nbsp;to&nbsp;uniquely&nbsp;identify&nbsp;the&lt;/div&gt;&lt;div&gt; &nbsp; &nbsp; &nbsp; &nbsp;consumer&nbsp;with&nbsp;RabbitMQ.&nbsp;We&nbsp;keep&nbsp;the&nbsp;value&nbsp;to&nbsp;use&nbsp;it&nbsp;when&nbsp;we&nbsp;want&nbsp;to&lt;/div&gt;<br>
<br>
<br>
<br>
<br>
<br>
&lt;div&gt; &nbsp; &nbsp; &nbsp; &nbsp;cancel&nbsp;consuming.&nbsp;The&nbsp;on_message&nbsp;method&nbsp;is&nbsp;passed&nbsp;in&nbsp;as&nbsp;a&nbsp;callback&nbsp;pika&lt;/div&gt;&lt;div&gt; &nbsp; &nbsp; &nbsp; &nbsp;will&nbsp;invoke&nbsp;when&nbsp;a&nbsp;message&nbsp;is&nbsp;fully&nbsp;received.&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt; &nbsp; &nbsp; &nbsp; &nbsp;&amp;quot;&amp;quot;&amp;quot;&lt;/div&gt;&lt;div&gt; &nbsp; &nbsp; &nbsp; &nbsp;LOGGER.info(&amp;#39;Issuing&nbsp;consumer&nbsp;related&nbsp;RPC&nbsp;commands&amp;#39;)&lt;/div&gt;<br>
<br>
<br>
<br>
<br>
<br>
&lt;div&gt; &nbsp; &nbsp; &nbsp; &nbsp;self.add_on_cancel_callback()&lt;/div&gt;&lt;div&gt; &nbsp; &nbsp; &nbsp; &nbsp;self._consumer_tag&nbsp;=&nbsp;self._channel.basic_consume(self.on_message,&lt;/div&gt;&lt;div&gt; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; self.QUEUE)&lt;/div&gt;&lt;div&gt;&lt;br&gt;<br>
<br>
<br>
<br>
<br>
&lt;/div&gt;<br>
&lt;div&gt; &nbsp; &nbsp;def&nbsp;on_bindok(self,&nbsp;unused_frame):&lt;/div&gt;&lt;div&gt; &nbsp; &nbsp; &nbsp; &nbsp;&amp;quot;&amp;quot;&amp;quot;Invoked&nbsp;by&nbsp;pika&nbsp;when&nbsp;the&nbsp;Queue.Bind&nbsp;method&nbsp;has&nbsp;completed.&nbsp;At&nbsp;this&lt;/div&gt;&lt;div&gt; &nbsp; &nbsp; &nbsp; &nbsp;point&nbsp;we&nbsp;will&nbsp;start&nbsp;consuming&nbsp;messages&nbsp;by&nbsp;calling&nbsp;start_consuming&lt;/div&gt;<br>
<br>
<br>
<br>
<br>
<br>
&lt;div&gt; &nbsp; &nbsp; &nbsp; &nbsp;which&nbsp;will&nbsp;invoke&nbsp;the&nbsp;needed&nbsp;RPC&nbsp;commands&nbsp;to&nbsp;start&nbsp;the&nbsp;process.&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt; &nbsp; &nbsp; &nbsp; &nbsp;:param&nbsp;pika.frame.Method&nbsp;unused_frame:&nbsp;The&nbsp;Queue.BindOk&nbsp;response&nbsp;frame&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt; &nbsp; &nbsp; &nbsp; &nbsp;&amp;quot;&amp;quot;&amp;quot;&lt;/div&gt;<br>
<br>
<br>
<br>
<br>
<br>
&lt;div&gt; &nbsp; &nbsp; &nbsp; &nbsp;LOGGER.info(&amp;#39;Queue&nbsp;bound&amp;#39;)&lt;/div&gt;&lt;div&gt; &nbsp; &nbsp; &nbsp; &nbsp;self.start_consuming()&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt; &nbsp; &nbsp;def&nbsp;close_channel(self):&lt;/div&gt;&lt;div&gt; &nbsp; &nbsp; &nbsp; &nbsp;&amp;quot;&amp;quot;&amp;quot;Call&nbsp;to&nbsp;close&nbsp;the&nbsp;channel&nbsp;with&nbsp;RabbitMQ&nbsp;cleanly&nbsp;by&nbsp;issuing&nbsp;the&lt;/div&gt;<br>
<br>
<br>
<br>
<br>
<br>
&lt;div&gt; &nbsp; &nbsp; &nbsp; &nbsp;Channel.Close&nbsp;RPC&nbsp;command.&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt; &nbsp; &nbsp; &nbsp; &nbsp;&amp;quot;&amp;quot;&amp;quot;&lt;/div&gt;&lt;div&gt; &nbsp; &nbsp; &nbsp; &nbsp;LOGGER.info(&amp;#39;Closing&nbsp;the&nbsp;channel&amp;#39;)&lt;/div&gt;&lt;div&gt; &nbsp; &nbsp; &nbsp; &nbsp;self._channel.close()&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt; &nbsp; &nbsp;def&nbsp;open_channel(self):&lt;/div&gt;<br>
<br>
<br>
<br>
<br>
<br>
&lt;div&gt; &nbsp; &nbsp; &nbsp; &nbsp;&amp;quot;&amp;quot;&amp;quot;Open&nbsp;a&nbsp;new&nbsp;channel&nbsp;with&nbsp;RabbitMQ&nbsp;by&nbsp;issuing&nbsp;the&nbsp;Channel.Open&nbsp;RPC&lt;/div&gt;&lt;div&gt; &nbsp; &nbsp; &nbsp; &nbsp;command.&nbsp;When&nbsp;RabbitMQ&nbsp;responds&nbsp;that&nbsp;the&nbsp;channel&nbsp;is&nbsp;open,&nbsp;the&lt;/div&gt;&lt;div&gt; &nbsp; &nbsp; &nbsp; &nbsp;on_channel_open&nbsp;callback&nbsp;will&nbsp;be&nbsp;invoked&nbsp;by&nbsp;pika.&lt;/div&gt;<br>
<br>
<br>
<br>
<br>
<br>
&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt; &nbsp; &nbsp; &nbsp; &nbsp;&amp;quot;&amp;quot;&amp;quot;&lt;/div&gt;&lt;div&gt; &nbsp; &nbsp; &nbsp; &nbsp;LOGGER.info(&amp;#39;Creating&nbsp;a&nbsp;new&nbsp;channel&amp;#39;)&lt;/div&gt;&lt;div&gt; &nbsp; &nbsp; &nbsp; &nbsp;self._connection.channel(on_open_callback=self.on_channel_open)&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt; &nbsp; &nbsp;def&nbsp;run(self):&lt;/div&gt;<br>
<br>
<br>
<br>
<br>
<br>
&lt;div&gt; &nbsp; &nbsp; &nbsp; &nbsp;&amp;quot;&amp;quot;&amp;quot;Run&nbsp;the&nbsp;example&nbsp;consumer&nbsp;by&nbsp;connecting&nbsp;to&nbsp;RabbitMQ&nbsp;and&nbsp;then&lt;/div&gt;&lt;div&gt; &nbsp; &nbsp; &nbsp; &nbsp;starting&nbsp;the&nbsp;IOLoop&nbsp;to&nbsp;block&nbsp;and&nbsp;allow&nbsp;the&nbsp;SelectConnection&nbsp;to&nbsp;operate.&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt; &nbsp; &nbsp; &nbsp; &nbsp;&amp;quot;&amp;quot;&amp;quot;&lt;/div&gt;<br>
<br>
<br>
<br>
<br>
<br>
&lt;div&gt; &nbsp; &nbsp; &nbsp; &nbsp;self._connection&nbsp;=&nbsp;self.connect()&lt;/div&gt;&lt;div&gt; &nbsp; &nbsp; &nbsp; &nbsp;self._connection.ioloop.start()&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt; &nbsp; &nbsp;def&nbsp;stop(self):&lt;/div&gt;&lt;div&gt; &nbsp; &nbsp; &nbsp; &nbsp;&amp;quot;&amp;quot;&amp;quot;Cleanly&nbsp;shutdown&nbsp;the&nbsp;connection&nbsp;to&nbsp;RabbitMQ&nbsp;by&nbsp;stopping&nbsp;the&nbsp;consumer&lt;/div&gt;<br>
<br>
<br>
<br>
<br>
<br>
&lt;div&gt; &nbsp; &nbsp; &nbsp; &nbsp;with&nbsp;RabbitMQ.&nbsp;When&nbsp;RabbitMQ&nbsp;confirms&nbsp;the&nbsp;cancellation,&nbsp;on_cancelok&lt;/div&gt;&lt;div&gt; &nbsp; &nbsp; &nbsp; &nbsp;will&nbsp;be&nbsp;invoked&nbsp;by&nbsp;pika,&nbsp;which&nbsp;will&nbsp;then&nbsp;closing&nbsp;the&nbsp;channel&nbsp;and&lt;/div&gt;&lt;div&gt; &nbsp; &nbsp; &nbsp; &nbsp;connection.&nbsp;The&nbsp;IOLoop&nbsp;is&nbsp;started&nbsp;again&nbsp;because&nbsp;this&nbsp;method&nbsp;is&nbsp;invoked&lt;/div&gt;<br>
<br>
<br>
<br>
<br>
<br>
&lt;div&gt; &nbsp; &nbsp; &nbsp; &nbsp;when&nbsp;CTRL-C&nbsp;is&nbsp;pressed&nbsp;raising&nbsp;a&nbsp;KeyboardInterrupt&nbsp;exception.&nbsp;This&lt;/div&gt;&lt;div&gt; &nbsp; &nbsp; &nbsp; &nbsp;exception&nbsp;stops&nbsp;the&nbsp;IOLoop&nbsp;which&nbsp;needs&nbsp;to&nbsp;be&nbsp;running&nbsp;for&nbsp;pika&nbsp;to&lt;/div&gt;&lt;div&gt; &nbsp; &nbsp; &nbsp; &nbsp;communicate&nbsp;with&nbsp;RabbitMQ.&nbsp;All&nbsp;of&nbsp;the&nbsp;commands&nbsp;issued&nbsp;prior&nbsp;to&nbsp;starting&lt;/div&gt;<br>
<br>
<br>
<br>
<br>
<br>
&lt;div&gt; &nbsp; &nbsp; &nbsp; &nbsp;the&nbsp;IOLoop&nbsp;will&nbsp;be&nbsp;buffered&nbsp;but&nbsp;not&nbsp;processed.&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt; &nbsp; &nbsp; &nbsp; &nbsp;&amp;quot;&amp;quot;&amp;quot;&lt;/div&gt;&lt;div&gt; &nbsp; &nbsp; &nbsp; &nbsp;LOGGER.info(&amp;#39;Stopping&amp;#39;)&lt;/div&gt;&lt;div&gt; &nbsp; &nbsp; &nbsp; &nbsp;self._closing&nbsp;=&nbsp;True&lt;/div&gt;&lt;div&gt; &nbsp; &nbsp; &nbsp; &nbsp;self.stop_consuming()&lt;/div&gt;<br>
<br>
<br>
<br>
<br>
<br>
&lt;div&gt; &nbsp; &nbsp; &nbsp; &nbsp;self._connection.ioloop.start()&lt;/div&gt;&lt;div&gt; &nbsp; &nbsp; &nbsp; &nbsp;LOGGER.info(&amp;#39;Stopped&amp;#39;)&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;def&nbsp;main():&lt;/div&gt;&lt;div&gt; &nbsp; &nbsp;logging.basicConfig(level=logging.INFO,&nbsp;format=LOG_FORMAT)&lt;/div&gt;<br>
<br>
<br>
<br>
<br>
<br>
&lt;div&gt; &nbsp; &nbsp;example&nbsp;=&nbsp;ExampleConsumer(&amp;#39;mqserver10&amp;#39;,&nbsp;5672,&nbsp;&amp;#39;guest&amp;#39;,&nbsp;&amp;#39;guest&amp;#39;)&lt;/div&gt;&lt;div&gt; &nbsp; &nbsp;try:&lt;/div&gt;&lt;div&gt; &nbsp; &nbsp; &nbsp; &nbsp;example.run()&lt;/div&gt;&lt;div&gt; &nbsp; &nbsp;except&nbsp;KeyboardInterrupt:&lt;/div&gt;&lt;div&gt; &nbsp; &nbsp; &nbsp; &nbsp;example.stop()&lt;/div&gt;<br>
<br>
<br>
<br>
<br>
<br>
&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;if&nbsp;__name__&nbsp;==&nbsp;&amp;#39;__main__&amp;#39;:&lt;/div&gt;&lt;div&gt; &nbsp; &nbsp;main()&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;div&nbsp;class=&quot;gmail_extra&quot;&gt;&lt;br&gt;&lt;br&gt;&lt;div&nbsp;class=&quot;gmail_quote&quot;&gt;On&nbsp;Thu,&nbsp;Aug&nbsp;15,&nbsp;2013&nbsp;at&nbsp;3:25&nbsp;PM,&nbsp;Ask&nbsp;Solem&nbsp;&lt;span&nbsp;dir=&quot;ltr&quot;&gt;&amp;lt;&lt;a&nbsp;href=&quot;mailto:ask@rabbitmq.com&quot;&nbsp;target=&quot;_blank&quot;&gt;ask@rabbitmq.com&lt;/a&gt;&amp;gt;&lt;/span&gt;&nbsp;wrote:&lt;br&gt;<br>
<br>
<br>
<br>
<br>
&lt;blockquote&nbsp;class=&quot;gmail_quote&quot;&nbsp;style=&quot;margin:0&nbsp;0&nbsp;0&nbsp;.8ex;border-left:1px&nbsp;#ccc&nbsp;solid;padding-left:1ex&quot;&gt;&lt;div&gt;&lt;div&gt;&lt;br&gt;<br>
On&nbsp;Aug&nbsp;15,&nbsp;2013,&nbsp;at&nbsp;1:20&nbsp;PM,&nbsp;Priyanki&nbsp;Vashi&nbsp;&amp;lt;&lt;a&nbsp;href=&quot;mailto:vashi.priyanki@gmail.com&quot;&nbsp;target=&quot;_blank&quot;&gt;vashi.priyanki@gmail.com&lt;/a&gt;&amp;gt;&nbsp;wrote:&lt;br&gt;<br>
&lt;br&gt;<br>
&amp;gt;&nbsp;Hi&nbsp;There&nbsp;,&lt;br&gt;<br>
&amp;gt;&lt;br&gt;<br>
&amp;gt;&nbsp;This&nbsp;might&nbsp;be&nbsp;very&nbsp;basic&nbsp;error&nbsp;but&nbsp;since&nbsp;I&nbsp;am&nbsp;trying&nbsp;to&nbsp;use&nbsp;Tornado&nbsp;connection&nbsp;for&nbsp;the&nbsp;first&nbsp;time,&nbsp;help&nbsp;on&nbsp;this&nbsp;would&nbsp;be&nbsp;appreciated.&lt;br&gt;<br>
&amp;gt;&lt;br&gt;<br>
&amp;gt;&nbsp;I&nbsp;was&nbsp;trying&nbsp;to&nbsp;use&nbsp;Tornado&nbsp;consumer&nbsp;example&nbsp;given&nbsp;on&nbsp;following&nbsp;pika&nbsp;site.&lt;br&gt;<br>
&amp;gt;&lt;br&gt;<br>
&amp;gt;&nbsp;&lt;a&nbsp;href=&quot;https://pika.readthedocs.org/en/0.9.13/examples/tornado_consumer.html&quot;&nbsp;target=&quot;_blank&quot;&gt;https://pika.readthedocs.org/en/0.9.13/examples/tornado_consumer.html&lt;/a&gt;&lt;br&gt;<br>
&amp;gt;&lt;br&gt;<br>
&amp;gt;&nbsp;I&nbsp;am&nbsp;running&nbsp;into&nbsp;following&nbsp;error.&nbsp;The&nbsp;example&nbsp;is&nbsp;with&nbsp;URL&nbsp;connection&nbsp;method.&lt;br&gt;<br>
&amp;gt;&nbsp;But&nbsp;I&nbsp;also&nbsp;tried&nbsp;to&nbsp;use&nbsp;hostname&nbsp;and&nbsp;port&nbsp;method&nbsp;as&nbsp;well&nbsp;as&nbsp;tried&nbsp;changing&nbsp;to&nbsp;IP&nbsp;address&nbsp;instead&nbsp;of&nbsp;hostname&nbsp;but&nbsp;still&nbsp;it&amp;#39;s&nbsp;the&nbsp;same&nbsp;error.&lt;br&gt;<br>
&amp;gt;&lt;br&gt;<br>
&amp;gt;&nbsp;I&nbsp;have&nbsp;pika&nbsp;0.9.13&nbsp;library&nbsp;installed.&nbsp;My&nbsp;consumer&nbsp;&amp;amp;&nbsp;Producer&nbsp;works&nbsp;fine&nbsp;with&nbsp;select.connection&nbsp;method&nbsp;so&nbsp;I&nbsp;believe&nbsp;library&nbsp;is&nbsp;correctly&nbsp;installed.&lt;br&gt;<br>
&amp;gt;&lt;br&gt;<br>
&amp;gt;&nbsp;Do&nbsp;I&nbsp;need&nbsp;to&nbsp;do&nbsp;something&nbsp;additional&nbsp;to&nbsp;get&nbsp;tornado&nbsp;connection&nbsp;working&nbsp;for&nbsp;both&nbsp;producer&nbsp;and&nbsp;consumer&nbsp;with&nbsp;pika?&lt;br&gt;<br>
&amp;gt;&lt;br&gt;<br>
&amp;gt;&nbsp;Please&nbsp;suggest.&lt;br&gt;<br>
&amp;gt;&lt;br&gt;<br>
&amp;gt;&nbsp;mq1@mqserver1:~/Producer_Receiver/Latest$&nbsp;python&nbsp;tornedo_c_1.py&lt;br&gt;<br>
&amp;gt;&nbsp;Traceback&nbsp;(most&nbsp;recent&nbsp;call&nbsp;last):&lt;br&gt;<br>
&amp;gt;&nbsp; &nbsp;File&nbsp;&amp;quot;tornedo_c_1.py&amp;quot;,&nbsp;line&nbsp;357,&nbsp;in&nbsp;&amp;lt;module&amp;gt;&lt;br&gt;<br>
&amp;gt;&nbsp; &nbsp; &nbsp;main()&lt;br&gt;<br>
&amp;gt;&nbsp; &nbsp;File&nbsp;&amp;quot;tornedo_c_1.py&amp;quot;,&nbsp;line&nbsp;351,&nbsp;in&nbsp;main&lt;br&gt;<br>
&amp;gt;&nbsp; &nbsp; &nbsp;example.run()&lt;br&gt;<br>
&amp;gt;&nbsp; &nbsp;File&nbsp;&amp;quot;tornedo_c_1.py&amp;quot;,&nbsp;line&nbsp;326,&nbsp;in&nbsp;run&lt;br&gt;<br>
&amp;gt;&nbsp; &nbsp; &nbsp;self._connection&nbsp;=&nbsp;self.connect()&lt;br&gt;<br>
&amp;gt;&nbsp; &nbsp;File&nbsp;&amp;quot;tornedo_c_1.py&amp;quot;,&nbsp;line&nbsp;59,&nbsp;in&nbsp;connect&lt;br&gt;<br>
&amp;gt;&nbsp; &nbsp; &nbsp;adapters.TornadoConnection(self.parameters,&nbsp;self.on_connection_open,&nbsp;stop_ioloop_on_close=False)&lt;br&gt;<br>
&amp;gt;&nbsp;TypeError:&nbsp;&amp;#39;NoneType&amp;#39;&nbsp;object&nbsp;is&nbsp;not&nbsp;callable&lt;br&gt;<br>
&lt;br&gt;<br>
&lt;br&gt;<br>
&lt;/div&gt;&lt;/div&gt;Maybe&nbsp;you&nbsp;passed&nbsp;None&nbsp;as&nbsp;a&nbsp;callback&nbsp;somewhere?&nbsp; What&nbsp;is&nbsp;the&nbsp;value&nbsp;of&nbsp;on_connection_open&nbsp;for&nbsp;example?&lt;br&gt;<br>
&lt;br&gt;<br>
_______________________________________________&lt;br&gt;<br>
rabbitmq-discuss&nbsp;mailing&nbsp;list&lt;br&gt;<br>
&lt;a&nbsp;href=&quot;mailto:rabbitmq-discuss@lists.rabbitmq.com&quot;&nbsp;target=&quot;_blank&quot;&gt;rabbitmq-discuss@lists.rabbitmq.com&lt;/a&gt;&lt;br&gt;<br>
&lt;a&nbsp;href=&quot;https://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss&quot;&nbsp;target=&quot;_blank&quot;&gt;https://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss&lt;/a&gt;&lt;br&gt;<br>
&lt;/blockquote&gt;&lt;/div&gt;&lt;br&gt;&lt;/div&gt;<br>
&lt;/div&gt;&lt;/div&gt;&lt;br&gt;_______________________________________________&lt;br&gt;<br>
rabbitmq-discuss&nbsp;mailing&nbsp;list&lt;br&gt;<br>
&lt;a&nbsp;href=&quot;mailto:rabbitmq-discuss@lists.rabbitmq.com&quot;&nbsp;target=&quot;_blank&quot;&gt;rabbitmq-discuss@lists.rabbitmq.com&lt;/a&gt;&lt;br&gt;<br>
&lt;a&nbsp;href=&quot;https://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss&quot;&nbsp;target=&quot;_blank&quot;&gt;https://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss&lt;/a&gt;&lt;br&gt;<br>
&lt;br&gt;&lt;/blockquote&gt;&lt;/div&gt;&lt;br&gt;&lt;/div&gt;<br>
&lt;/div&gt;&lt;/div&gt;&lt;br&gt;_______________________________________________&lt;br&gt;<br>
rabbitmq-discuss&nbsp;mailing&nbsp;list&lt;br&gt;<br>
&lt;a&nbsp;href=&quot;mailto:rabbitmq-discuss@lists.rabbitmq.com&quot;&nbsp;target=&quot;_blank&quot;&gt;rabbitmq-discuss@lists.rabbitmq.com&lt;/a&gt;&lt;br&gt;<br>
&lt;a&nbsp;href=&quot;https://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss&quot;&nbsp;target=&quot;_blank&quot;&gt;https://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss&lt;/a&gt;&lt;br&gt;<br>
&lt;br&gt;&lt;/blockquote&gt;&lt;/div&gt;&lt;br&gt;&lt;/div&gt;<br>
&lt;/div&gt;&lt;/div&gt;&lt;br&gt;_______________________________________________&lt;br&gt;<br>
rabbitmq-discuss&nbsp;mailing&nbsp;list&lt;br&gt;<br>
&lt;a&nbsp;href=&quot;mailto:rabbitmq-discuss@lists.rabbitmq.com&quot;&nbsp;target=&quot;_blank&quot;&gt;rabbitmq-discuss@lists.rabbitmq.com&lt;/a&gt;&lt;br&gt;<br>
&lt;a&nbsp;href=&quot;https://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss&quot;&nbsp;target=&quot;_blank&quot;&gt;https://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss&lt;/a&gt;&lt;br&gt;<br>
&lt;br&gt;&lt;/blockquote&gt;&lt;/div&gt;&lt;br&gt;&lt;/div&gt;<br>
&lt;/div&gt;&lt;/div&gt;&lt;br&gt;_______________________________________________&lt;br&gt;<br>
rabbitmq-discuss&nbsp;mailing&nbsp;list&lt;br&gt;<br>
&lt;a&nbsp;href=&quot;mailto:rabbitmq-discuss@lists.rabbitmq.com&quot;&gt;rabbitmq-discuss@lists.rabbitmq.com&lt;/a&gt;&lt;br&gt;<br>
&lt;a&nbsp;href=&quot;https://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss&quot;&nbsp;target=&quot;_blank&quot;&gt;https://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss&lt;/a&gt;&lt;br&gt;<br>
&lt;br&gt;&lt;/blockquote&gt;&lt;/div&gt;&lt;br&gt;&lt;/div&gt;<br>

</tt>
