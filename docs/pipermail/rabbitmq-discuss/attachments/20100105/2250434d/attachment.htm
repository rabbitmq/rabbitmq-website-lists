<tt>
&lt;html&gt;&lt;head&gt;&lt;/head&gt;&lt;body&nbsp;style=&quot;word-wrap:&nbsp;break-word;&nbsp;-webkit-nbsp-mode:&nbsp;space;&nbsp;-webkit-line-break:&nbsp;after-white-space;&nbsp;&quot;&gt;&lt;div&gt;Have&nbsp;you&nbsp;tried&nbsp;calling&nbsp;select&nbsp;on&nbsp;your&nbsp;socket&nbsp;to&nbsp;see&nbsp;if&nbsp;there&nbsp;is&nbsp;any&nbsp;data&nbsp;available&nbsp;to&nbsp;be&nbsp;read&nbsp;before&nbsp;a&nbsp;publish?&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;Then&nbsp;your&nbsp;publish&nbsp;method&nbsp;could&nbsp;throw&nbsp;a&nbsp;ChannelFlowException&nbsp;or&nbsp;something&nbsp;like&nbsp;that.&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;If&nbsp;you&nbsp;are&nbsp;waiting&nbsp;on&nbsp;tx-ok,&nbsp;then&nbsp;you&nbsp;will&nbsp;have&nbsp;to&nbsp;wait&nbsp;the&nbsp;latency&nbsp;of&nbsp;your&nbsp;link&nbsp;to&nbsp;your&nbsp;rabbit&nbsp;server&nbsp;before&nbsp;sending&nbsp;your&nbsp;next&nbsp;message.&nbsp;&amp;nbsp;Even&nbsp;a&nbsp;1&nbsp;ms&nbsp;delay&nbsp;on&nbsp;your&nbsp;link&nbsp;limits&nbsp;you&nbsp;to&nbsp;1000&nbsp;messages/second.&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;br&gt;&lt;div&gt;&lt;div&gt;On&nbsp;2010-01-05,&nbsp;at&nbsp;7:21&nbsp;AM,&nbsp;Chris&nbsp;Duncan&nbsp;wrote:&lt;/div&gt;&lt;br&nbsp;class=&quot;Apple-interchange-newline&quot;&gt;&lt;blockquote&nbsp;type=&quot;cite&quot;&gt;I've&nbsp;been&nbsp;wanting&nbsp;to&nbsp;incorporate&nbsp;Channel.Flow<br>
method&nbsp;handling&nbsp;into&nbsp;the&nbsp;Bunny&nbsp;Ruby&nbsp;client&nbsp;library&nbsp;for&nbsp;a&nbsp;while.&nbsp;It's&nbsp;needed,&nbsp;but&nbsp;I&nbsp;want&nbsp;to&nbsp;do&nbsp;it&nbsp;in&nbsp;a&nbsp;simple,<br>
efficient&nbsp;way.&nbsp;I&nbsp;want&nbsp;to&nbsp;be&nbsp;able&nbsp;to&nbsp;give&nbsp;a&nbsp;client&nbsp;application&nbsp;the<br>
option&nbsp;to&nbsp;stop&nbsp;sending&nbsp;messages&nbsp;as&nbsp;soon&nbsp;as&nbsp;possible&nbsp;after&nbsp;receiving&nbsp;a<br>
Channel.Flow&nbsp;method&nbsp;(with&nbsp;:active&nbsp;=&amp;gt;&nbsp;false)&nbsp;and&nbsp;that&nbsp;means&nbsp;that&nbsp;I<br>
need&nbsp;to&nbsp;know&nbsp;whether&nbsp;a&nbsp;Basic.Publish&nbsp;succeeds&nbsp;as&nbsp;well&nbsp;as&nbsp;whether&nbsp;it<br>
fails.&lt;br&gt;<br>
&lt;br&gt;<br>
At&nbsp;the&nbsp;moment&nbsp;there&nbsp;is&nbsp;the&nbsp;potential&nbsp;for&nbsp;a&nbsp;client&nbsp;application&nbsp;to&nbsp;keep<br>
firing&nbsp;messages&nbsp;at&nbsp;the&nbsp;server&nbsp;whilst&nbsp;being&nbsp;oblivious&nbsp;to&nbsp;the&nbsp;fact&nbsp;that<br>
the&nbsp;server&nbsp;is&nbsp;telling&nbsp;it&nbsp;to&nbsp;stop.&nbsp;If&nbsp;the&nbsp;client&nbsp;application&nbsp;is&nbsp;just<br>
writing&nbsp;and&nbsp;not&nbsp;reading,&nbsp;purely&nbsp;a&nbsp;publisher&nbsp;of&nbsp;messages,&nbsp;then&nbsp;there&nbsp;has<br>
to&nbsp;be&nbsp;an&nbsp;efficient&nbsp;way&nbsp;of&nbsp;notifying&nbsp;the&nbsp;client&nbsp;that&nbsp;a&nbsp;publish&nbsp;has<br>
succeeded.&nbsp;As&nbsp;far&nbsp;as&nbsp;I&nbsp;can&nbsp;see,&nbsp;the&nbsp;simplest&nbsp;way&nbsp;to&nbsp;do&nbsp;that&nbsp;is&nbsp;with&nbsp;a<br>
publish-ok.&lt;br&gt;<br>
&lt;br&gt;<br>
Transactions&nbsp;may&nbsp;give&nbsp;me&nbsp;what&nbsp;I&nbsp;want&nbsp;but&nbsp;I&nbsp;don't&nbsp;think&nbsp;that&nbsp;I&nbsp;should&nbsp;be<br>
enforcing&nbsp;the&nbsp;use&nbsp;of&nbsp;transactions&nbsp;in&nbsp;my&nbsp;client&nbsp;library&nbsp;just&nbsp;so&nbsp;that&nbsp;it<br>
will&nbsp;handle&nbsp;Channel.Flow&nbsp;methods&nbsp;properly.&lt;br&gt;<br>
&lt;br&gt;<br>
Regards,&lt;br&gt;&lt;font&nbsp;color=&quot;#888888&quot;&gt;<br>
&lt;br&gt;<br>
Chris&lt;/font&gt;<br>
&lt;span&gt;&amp;lt;ATT00001.c&amp;gt;&lt;/span&gt;&lt;/blockquote&gt;&lt;/div&gt;&lt;br&gt;&lt;div&gt;<br>
&lt;span&nbsp;class=&quot;Apple-style-span&quot;&nbsp;style=&quot;border-collapse:&nbsp;separate;&nbsp;color:&nbsp;rgb(0,&nbsp;0,&nbsp;0);&nbsp;font-family:&nbsp;Helvetica;&nbsp;font-size:&nbsp;12px;&nbsp;font-style:&nbsp;normal;&nbsp;font-variant:&nbsp;normal;&nbsp;font-weight:&nbsp;normal;&nbsp;letter-spacing:&nbsp;normal;&nbsp;line-height:&nbsp;normal;&nbsp;orphans:&nbsp;2;&nbsp;text-align:&nbsp;auto;&nbsp;text-indent:&nbsp;0px;&nbsp;text-transform:&nbsp;none;&nbsp;white-space:&nbsp;normal;&nbsp;widows:&nbsp;2;&nbsp;word-spacing:&nbsp;0px;&nbsp;-webkit-border-horizontal-spacing:&nbsp;0px;&nbsp;-webkit-border-vertical-spacing:&nbsp;0px;&nbsp;-webkit-text-decorations-in-effect:&nbsp;none;&nbsp;-webkit-text-size-adjust:&nbsp;auto;&nbsp;-webkit-text-stroke-width:&nbsp;0;&nbsp;&quot;&gt;&lt;div&gt;---------------------&lt;br&gt;Scott&nbsp;Brooks&lt;br&gt;Web&nbsp;Developer&lt;br&gt;Epic&nbsp;Advertising&nbsp;-&nbsp;New&nbsp;York,&nbsp;Toronto,&nbsp;San&nbsp;Francisco,&nbsp;London&lt;br&gt;&lt;a&nbsp;href=&quot;http://www.EpicAdvertising.com&quot;&gt;www.EpicAdvertising.com&lt;/a&gt;&lt;br&gt;60&nbsp;Columbia&nbsp;Way,&nbsp;Suite&nbsp;310&lt;br&gt;Markham,&nbsp;ON&nbsp;L3R&nbsp;0C9&lt;br&gt;(905)&nbsp;946-0300&nbsp;x2356&nbsp;-&nbsp;phone&lt;br&gt;(888)&nbsp;666-3120&nbsp;-&nbsp;fax&lt;br&gt;scott.brooks@epicadvertising.com&lt;br&gt;&lt;/div&gt;&lt;/span&gt;<br>
&lt;/div&gt;<br>
&lt;br&gt;&lt;/body&gt;&lt;/html&gt;
</tt>
