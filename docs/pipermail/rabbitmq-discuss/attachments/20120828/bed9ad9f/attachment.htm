<tt>
Hi,&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;As&nbsp;per&nbsp;your&nbsp;suggestion,&nbsp;I&nbsp;created&nbsp;5&nbsp;channels&nbsp;as&nbsp;follows:&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;for&nbsp;(int&nbsp;i&nbsp;=&nbsp;0;&nbsp;i&nbsp;&amp;lt;&nbsp;5;&nbsp;i++)&nbsp;{&lt;/div&gt;&lt;div&gt; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;final&nbsp;Channel&nbsp;channel&nbsp;=&nbsp;connection.createChannel();&lt;/div&gt;<br>
<br>
&lt;div&gt; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;channel.queueDeclare(RPC_QUEUE_NAME,&nbsp;false,&nbsp;false,&nbsp;false,&nbsp;null);&lt;/div&gt;&lt;div&gt; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;channel.basicQos(1);&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&lt;a&nbsp;href=&quot;http://log.info&quot;&gt;log.info&lt;/a&gt;(&amp;quot;&nbsp;[x]&nbsp;Awaiting&nbsp;RPC&nbsp;requests&amp;quot;);&lt;/div&gt;<br>
<br>
&lt;div&gt; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;  &lt;/div&gt;&lt;div&gt; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;boolean&nbsp;autoAck&nbsp;=&nbsp;false;&lt;/div&gt;&lt;div&gt; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;channel.basicConsume(RPC_QUEUE_NAME,&nbsp;autoAck,&nbsp;&amp;quot;watermark&amp;quot;&nbsp;+&nbsp;i,&lt;/div&gt;&lt;div&gt; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;new&nbsp;DefaultConsumer(channel)&nbsp;{&lt;/div&gt;<br>
<br>
&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;@Override&lt;/div&gt;&lt;div&gt; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;public&nbsp;void&nbsp;handleDelivery(String&nbsp;consumerTag,&lt;/div&gt;&lt;div&gt; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;Envelope&nbsp;envelope,&lt;/div&gt;&lt;div&gt; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;AMQP.BasicProperties&nbsp;properties,&lt;/div&gt;<br>
<br>
&lt;div&gt; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;byte[]&nbsp;body)&lt;/div&gt;&lt;div&gt; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;throws&nbsp;IOException&nbsp;{&lt;/div&gt;&lt;div&gt; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;String&nbsp;routingKey&nbsp;=&nbsp;envelope.getRoutingKey();&lt;/div&gt;&lt;div&gt; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;String&nbsp;contentType&nbsp;=&nbsp;properties.getContentType();&lt;/div&gt;<br>
<br>
&lt;div&gt; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;long&nbsp;deliveryTag&nbsp;=&nbsp;envelope.getDeliveryTag();&lt;/div&gt;&lt;div&gt; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;//process&nbsp;the&nbsp;message&nbsp;here&lt;/div&gt;&lt;div&gt; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;channel.basicPublish(&amp;quot;&amp;quot;,&nbsp;properties.getReplyTo(),&lt;/div&gt;<br>
<br>
&lt;div&gt; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;new&nbsp;BasicProperties.Builder().correlationId(properties.getCorrelationId()).build(),&lt;/div&gt;&lt;div&gt; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;response.getBytes(&amp;quot;UTF-8&amp;quot;));&lt;/div&gt;&lt;div&gt;<br>
 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;channel.basicAck(deliveryTag,&nbsp;false);&lt;/div&gt;<br>
&lt;div&gt; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;}&lt;/div&gt;&lt;div&gt; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;});&lt;/div&gt;&lt;div&gt; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;  &lt;/div&gt;&lt;div&gt; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;}&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;But,&nbsp;the&nbsp;consumer&nbsp;doesn&amp;#39;t&nbsp;seem&nbsp;to&nbsp;listen&nbsp;to&nbsp;the&nbsp;queue,&nbsp;as&nbsp;soon&nbsp;as&nbsp;I&nbsp;run&nbsp;this&nbsp;application,&nbsp;it&nbsp;exists.&nbsp;Earlier&nbsp;I&nbsp;used&nbsp;the&nbsp;while(true)&nbsp;loop&nbsp;to&nbsp;get&nbsp;the&nbsp;messages.&nbsp;How&nbsp;do&nbsp;I&nbsp;make&nbsp;sure&nbsp;if&nbsp;the&nbsp;consumer&nbsp;listens&nbsp;to&nbsp;the&nbsp;intended&nbsp;queue&nbsp;and&nbsp;process&nbsp;messages?&lt;/div&gt;<br>
<br>
&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;-Mahesh&lt;/div&gt;&lt;br&gt;&lt;div&nbsp;class=&quot;gmail_quote&quot;&gt;On&nbsp;Mon,&nbsp;Aug&nbsp;27,&nbsp;2012&nbsp;at&nbsp;6:54&nbsp;PM,&nbsp;Matthias&nbsp;Radestock&nbsp;&lt;span&nbsp;dir=&quot;ltr&quot;&gt;&amp;lt;&lt;a&nbsp;href=&quot;mailto:matthias@rabbitmq.com&quot;&nbsp;target=&quot;_blank&quot;&gt;matthias@rabbitmq.com&lt;/a&gt;&amp;gt;&lt;/span&gt;&nbsp;wrote:&lt;br&gt;<br>
<br>
&lt;blockquote&nbsp;class=&quot;gmail_quote&quot;&nbsp;style=&quot;margin:0&nbsp;0&nbsp;0&nbsp;.8ex;border-left:1px&nbsp;#ccc&nbsp;solid;padding-left:1ex&quot;&gt;Mahesh,&lt;div&nbsp;class=&quot;im&quot;&gt;&lt;br&gt;<br>
&lt;br&gt;<br>
On&nbsp;27/08/12&nbsp;13:37,&nbsp;Mahesh&nbsp;Viraktamath&nbsp;wrote:&lt;br&gt;<br>
&lt;/div&gt;&lt;blockquote&nbsp;class=&quot;gmail_quote&quot;&nbsp;style=&quot;margin:0&nbsp;0&nbsp;0&nbsp;.8ex;border-left:1px&nbsp;#ccc&nbsp;solid;padding-left:1ex&quot;&gt;&lt;div&nbsp;class=&quot;im&quot;&gt;<br>
I&nbsp;read&nbsp;the&nbsp;API&nbsp;guide&nbsp;and&nbsp;still&nbsp;stuck&nbsp;to&nbsp;the&nbsp;QueuingConsumer,&nbsp;for&nbsp;each&lt;br&gt;<br>
incoming&nbsp;message&nbsp;I&nbsp;create&nbsp;a&nbsp;new&nbsp;service&nbsp;thread&nbsp;(with&nbsp;common&nbsp;channel,&lt;br&gt;<br>
without&nbsp;that&nbsp;the&nbsp;service&nbsp;won&amp;#39;t&nbsp;know&nbsp;which&nbsp;message&nbsp;to&nbsp;acknowledge).&nbsp;But&lt;br&gt;<br>
in&nbsp;the&nbsp;guide,&nbsp;it&nbsp;is&nbsp;mentioned&nbsp;that&nbsp;the&nbsp;channel&nbsp;should&nbsp;be&nbsp;created&nbsp;for&lt;br&gt;<br>
each&nbsp;thread.&nbsp;Now,&nbsp;my&nbsp;question&nbsp;is&nbsp;does&nbsp;this&nbsp;guide&nbsp;assumes&nbsp;that&nbsp;we&nbsp;run&lt;br&gt;&lt;/div&gt;<br>
different&nbsp;consumer&nbsp;threads?&nbsp;*I&nbsp;can&amp;#39;t&nbsp;understand&nbsp;the&nbsp;concept&nbsp;of&nbsp;different&lt;br&gt;<br>
consumer&nbsp;threads*.&nbsp;I&nbsp;run&nbsp;a&nbsp;single&nbsp;consumer&nbsp;and&nbsp;use&nbsp;basicConsume()&nbsp;to&lt;div&nbsp;class=&quot;im&quot;&gt;&lt;br&gt;<br>
listen&nbsp;to&nbsp;the&nbsp;messages&nbsp;and&nbsp;each&nbsp;message&nbsp;(nextDelivery())&nbsp;will&nbsp;give&nbsp;rise&lt;br&gt;<br>
to&nbsp;a&nbsp;new&nbsp;service&nbsp;thread.&nbsp;Again,&nbsp;each&nbsp;message&nbsp;creating&nbsp;a&nbsp;thread&nbsp;is&nbsp;scary&nbsp;!&lt;br&gt;<br>
&lt;br&gt;<br>
If&nbsp;it&nbsp;helps,&nbsp;I&nbsp;am&nbsp;running&nbsp;the&nbsp;consumer&nbsp;as&nbsp;a&nbsp;java&nbsp;application&nbsp;and&nbsp;use&lt;br&gt;<br>
basicConsume()&nbsp;and&nbsp;nextDelivery()&nbsp;in&nbsp;a&nbsp;while&nbsp;loop&nbsp;to&nbsp;process&nbsp;the&lt;br&gt;<br>
messages.&nbsp;Our&nbsp;application&nbsp;sends&nbsp;messages&nbsp;to&nbsp;these&nbsp;non-stop.&nbsp;So,&nbsp;I&nbsp;am&lt;br&gt;<br>
looking&nbsp;for&nbsp;a&nbsp;consumer&nbsp;which&nbsp;will&nbsp;not&nbsp;block&nbsp;the&nbsp;incoming&nbsp;messages&nbsp;when&lt;br&gt;<br>
it&nbsp;is&nbsp;processing&nbsp;a&nbsp;large&nbsp;message.&lt;br&gt;<br>
&lt;/div&gt;&lt;/blockquote&gt;<br>
&lt;br&gt;<br>
I&nbsp;suggest&nbsp;you&nbsp;create&nbsp;N&nbsp;channels&nbsp;and&nbsp;for&nbsp;each&nbsp;channel:&lt;br&gt;<br>
-&nbsp;set&nbsp;the&nbsp;basic.qos&nbsp;prefetch&nbsp;to&nbsp;1&nbsp;or&nbsp;some&nbsp;other&nbsp;low-ish&nbsp;value&nbsp;(for&nbsp;fair&nbsp;dispatch)&lt;br&gt;<br>
-&nbsp;create&nbsp;a&nbsp;consumer&nbsp;as&nbsp;shown&nbsp;in&nbsp;&lt;a&nbsp;href=&quot;http://www.rabbitmq.com/api-guide.html#consuming&quot;&nbsp;target=&quot;_blank&quot;&gt;http://www.rabbitmq.com/api-&lt;u&gt;&lt;/u&gt;guide.html#consuming&lt;/a&gt;&lt;br&gt;<br>
&lt;br&gt;<br>
You&nbsp;write&nbsp;above&nbsp;that&nbsp;you&nbsp;only&nbsp;have&nbsp;one&nbsp;channel&nbsp;because&nbsp;&amp;quot;without&nbsp;that&nbsp;the&nbsp;service&nbsp;won&amp;#39;t&nbsp;know&nbsp;which&nbsp;message&nbsp;to&nbsp;acknowledge&amp;quot;,&nbsp;but&nbsp;the&nbsp;channel&nbsp;is&nbsp;accessible&nbsp;via&nbsp;the&nbsp;context&nbsp;(as&nbsp;shown&nbsp;in&nbsp;the&nbsp;example),&nbsp;so&nbsp;there&nbsp;is&nbsp;no&nbsp;ambiguity.&lt;br&gt;<br>
<br>
<br>
&lt;br&gt;<br>
Obviously&nbsp;message&nbsp;ordering&nbsp;goes&nbsp;out&nbsp;of&nbsp;the&nbsp;window,&nbsp;but&nbsp;that&amp;#39;s&nbsp;the&nbsp;case&nbsp;for&nbsp;any&nbsp;scheme&nbsp;where&nbsp;messages&nbsp;are&nbsp;handled&nbsp;by&nbsp;multiple&nbsp;threads.&lt;br&gt;<br>
&lt;br&gt;<br>
Regards,&lt;br&gt;<br>
&lt;br&gt;<br>
Matthias.&lt;br&gt;<br>
&lt;/blockquote&gt;&lt;/div&gt;&lt;br&gt;&lt;/div&gt;<br>

</tt>
