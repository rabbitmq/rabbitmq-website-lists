#!/usr/bin/env python

import simplejson as json
import httplib

class JsonProxy:
    def __init__(self, connection):
        self.id = 0
        self.conn = connection
    
    def rpccall(self, url, method, params):
        obj = { "id": self.id,
                "version": "1.1",
                "method": method,
                "params": params }
        self.id += 1
        body = json.dumps(obj)
        
        print
        print "=================================="
        print "Calling %s, %s, %s" % (url, method, params)
        print
        self.conn.request("POST", url, body,
                     {'Content-Type': 'application/json',
                          'User-Agent': 'python',
                          'Accept': 'application/json'
                          # Content-Length is set automatically
                     })
        print "-----------------------"
        resp = self.conn.getresponse()

        data = resp.read()
        print "body:"
        print data
        print "^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^"
        print
        
        return json.loads(data)

conn = httplib.HTTPConnection("localhost", 55672)
conn.set_debuglevel(9999)
proxy = JsonProxy(conn)

# First, open a channel
resp = proxy.rpccall("/rpc/rabbitmq", "open", ["guest", "guest", 15, None])
chname = resp['result']['service']
print "got channel:", chname

# Now poll the channel (just an example. Any method call fails in the same way)
url = "/rpc/" + chname
resp = proxy.rpccall(url, "poll", [])

conn.close()