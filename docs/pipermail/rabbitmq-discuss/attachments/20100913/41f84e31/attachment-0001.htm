<tt>
I&amp;#39;ve&nbsp;been&nbsp;working&nbsp;on&nbsp;a&nbsp;native&nbsp;adapter&nbsp;for&nbsp;Pika&nbsp;for&nbsp;use&nbsp;with&nbsp;Tornado&nbsp;which&nbsp;has&nbsp;gotten&nbsp;some&nbsp;attention&nbsp;on&nbsp;the&nbsp;Tornado&nbsp;list.&nbsp;I&amp;#39;ve&nbsp;been&nbsp;focused&nbsp;on&nbsp;trying&nbsp;to&nbsp;implement&nbsp;a&nbsp;non-hacky&nbsp;adapter&nbsp;as&nbsp;other&nbsp;attempts&nbsp;are&nbsp;focused&nbsp;on&nbsp;either&nbsp;moving&nbsp;away&nbsp;from&nbsp;stock&nbsp;Tornado&nbsp;(gTornado,&nbsp;Twisted&nbsp;implementations,&nbsp;etc)&nbsp;or&nbsp;patching&nbsp;both&nbsp;Pika&nbsp;and&nbsp;Tornado.&lt;div&gt;<br>
<br>
&lt;br&gt;&lt;/div&gt;&lt;div&gt;In&nbsp;working&nbsp;through&nbsp;the&nbsp;process&nbsp;of&nbsp;implementation,&nbsp;I&nbsp;became&nbsp;focused&nbsp;on&nbsp;the&nbsp;drain_events()&nbsp;function&nbsp;which&nbsp;is&nbsp;to&nbsp;be&nbsp;extended/implemented&nbsp;by&nbsp;the&nbsp;client.&nbsp; Basically,&nbsp;as&nbsp;I&nbsp;understand&nbsp;it,&nbsp;drain_events()&nbsp;is&nbsp;meant&nbsp;to&nbsp;be&nbsp;the&nbsp;blocking,&nbsp;time&nbsp;based&nbsp;loop&nbsp;that&nbsp;allows&nbsp;Pika&nbsp;to&nbsp;let&nbsp;other&nbsp;things&nbsp;go&nbsp;on&nbsp;in&nbsp;the&nbsp;async&nbsp;engine&nbsp;while&nbsp;it&nbsp;is&nbsp;not&nbsp;doing&nbsp;anything.&nbsp; With&nbsp;asyncore&nbsp;this&nbsp;methodology&nbsp;works&nbsp;because&nbsp;you&nbsp;can&nbsp;loop&nbsp;against&nbsp;it&nbsp;in&nbsp;a&nbsp;pseudo&nbsp;blocking&nbsp;fashion.&nbsp; Unfortunately,&nbsp;Tornado,&nbsp;as&nbsp;far&nbsp;as&nbsp;I&nbsp;can&nbsp;tell,&nbsp;does&nbsp;not&nbsp;have&nbsp;a&nbsp;similar&nbsp;loop&nbsp;functionality.&lt;div&gt;<br>
<br>
&lt;br&gt;&lt;/div&gt;&lt;div&gt;In&nbsp;digging&nbsp;deeper&nbsp;I&nbsp;found&nbsp;the&nbsp;main&nbsp;purpose&nbsp;of&nbsp;this&nbsp;function&nbsp;is&nbsp;to&nbsp;block&nbsp;on&nbsp;pika.connection.Connection._rpc()&nbsp;which&nbsp;in&nbsp;many&nbsp;cases&nbsp;is&nbsp;called&nbsp;without&nbsp;regard&nbsp;to&nbsp;the&nbsp;response,&nbsp;but&nbsp;in&nbsp;others&nbsp;the&nbsp;response&nbsp;is&nbsp;part&nbsp;of&nbsp;the&nbsp;protocol&nbsp;negotiation.&nbsp;I&nbsp;have&nbsp;some&nbsp;reservations&nbsp;about&nbsp;thinking&nbsp;of&nbsp;Pika&nbsp;as&nbsp;a&nbsp;truly&nbsp;async&nbsp;library&nbsp;because&nbsp;of&nbsp;its&nbsp;dependence&nbsp;on&nbsp;the&nbsp;blocking&nbsp;behavior&nbsp;of&nbsp;Connection._rpc().&nbsp; As&nbsp;you&nbsp;can&nbsp;see,&nbsp;Connection._rpc()&nbsp;ends&nbsp;with&nbsp;channel.wait_for_reply&nbsp;(&lt;a&nbsp;href=&quot;http://github.com/tonyg/pika/blob/master/pika/connection.py#L326&quot;&gt;http://github.com/tonyg/pika/blob/master/pika/connection.py#L326&lt;/a&gt;)&nbsp;which&nbsp;on&nbsp;line&nbsp;124&nbsp;(&lt;a&nbsp;href=&quot;http://github.com/tonyg/pika/blob/master/pika/connection.py#L323&quot;&gt;http://github.com/tonyg/pika/blob/master/pika/connection.py#L323&lt;/a&gt;)&nbsp;calls&nbsp;up&nbsp;to&nbsp;the&nbsp;drain_events()&nbsp;function,&nbsp;waiting&nbsp;for&nbsp;the&nbsp;channel&nbsp;to&nbsp;have&nbsp;a&nbsp;stack&nbsp;of&nbsp;replies&nbsp;to&nbsp;process.&lt;/div&gt;<br>
<br>
&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;I&amp;#39;ve&nbsp;been&nbsp;thinking&nbsp;about&nbsp;what&nbsp;it&nbsp;would&nbsp;take&nbsp;to&nbsp;make&nbsp;_rpc()&nbsp;an&nbsp;actual&nbsp;async&nbsp;function&nbsp;where&nbsp;you&nbsp;register&nbsp;the&nbsp;call&nbsp;with&nbsp;a&nbsp;callback&nbsp;and&nbsp;then&nbsp;move&nbsp;on.&nbsp;Obviously&nbsp;Tony&nbsp;G&nbsp;knows&nbsp;the&nbsp;code&nbsp;the&nbsp;best,&nbsp;but&nbsp;are&nbsp;there&nbsp;any&nbsp;other&nbsp;opinions&nbsp;about&nbsp;how&nbsp;this&nbsp;should&nbsp;be&nbsp;done?&lt;/div&gt;<br>
<br>
&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;Tony,&nbsp;if&nbsp;I&nbsp;refractor&nbsp;this&nbsp;to&nbsp;work&nbsp;in&nbsp;a&nbsp;non-blocking&nbsp;way,&nbsp;would&nbsp;you&nbsp;be&nbsp;interested&nbsp;in&nbsp;having&nbsp;it&nbsp;upstream?&nbsp; Would&nbsp;anyone&nbsp;be&nbsp;interested&nbsp;in&nbsp;helping?&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;Regards,&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;<br>
<br>
Gavin&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;<br>

</tt>
