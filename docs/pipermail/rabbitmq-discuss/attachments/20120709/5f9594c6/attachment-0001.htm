<tt>
I&nbsp;have&nbsp;an&nbsp;issue&nbsp;with&nbsp;QueueDeclare&nbsp;locking&nbsp;up&nbsp;on&nbsp;me.&nbsp;It&nbsp;works&nbsp;fine&nbsp;for&nbsp;the&nbsp;most&nbsp;part,&nbsp;but&nbsp;eventually,&nbsp;it&nbsp;locks&nbsp;up&nbsp;(no&nbsp;error,&nbsp;just&nbsp;doesn't&nbsp;return).&nbsp;I&nbsp;have&nbsp;tried&nbsp;to&nbsp;find&nbsp;out&nbsp;where&nbsp;it&nbsp;happens&nbsp;and&nbsp;this&nbsp;is&nbsp;the&nbsp;spot:&lt;br&gt;&lt;br&gt;When&nbsp;running:&lt;br&gt;&lt;br&gt;channel.QueueDeclare()&lt;br&gt;&lt;br&gt;RabbitMQ&nbsp;enters&nbsp;an&nbsp;idle&nbsp;state&nbsp;at&nbsp;the&nbsp;line&nbsp;marked&nbsp;below:&lt;br&gt;&lt;br&gt;namespace&nbsp;RabbitMQ.Client.Impl&lt;br&gt;{&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;public&nbsp;class&nbsp;SimpleBlockingRpcContinuation&nbsp;:&nbsp;IRpcContinuation&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;{&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;public&nbsp;virtual&nbsp;Command&nbsp;GetReply()&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;{&lt;br&gt;====&amp;gt;&amp;gt;&amp;gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;Either&nbsp;result&nbsp;=&nbsp;(Either)m_cell.Value;&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;switch&nbsp;(result.Alternative)&lt;br&gt;...&lt;br&gt;&lt;br&gt;Now,&nbsp;I&nbsp;call&nbsp;QueueDeclare()&nbsp;from&nbsp;a&nbsp;callback&nbsp;created&nbsp;like&nbsp;this&nbsp;(I&nbsp;receive&nbsp;a&nbsp;message&nbsp;from&nbsp;AMQP&nbsp;and&nbsp;create/bind&nbsp;to&nbsp;a&nbsp;new&nbsp;queue):&lt;br&gt;&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;public&nbsp;string&nbsp;subscribe(string&nbsp;routingKey,&nbsp;BasicDeliverEventHandler&nbsp;e&nbsp;)&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;{&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;lock&nbsp;(channel)&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;{&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;string&nbsp;queueName&nbsp;=&nbsp;channel.QueueDeclare();&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;EventingBasicConsumer&nbsp;consumer&nbsp;=&nbsp;new&nbsp;EventingBasicConsumer();&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;consumer.Received&nbsp;+=&nbsp;e;&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;string&nbsp;consumerTag&nbsp;=&nbsp;channel.BasicConsume(queueName,&nbsp;true,&nbsp;consumer);&nbsp;//&nbsp;true;&nbsp;noAck&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;channel.QueueBind(queueName,&nbsp;ExchangeName,&nbsp;routingKey);&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;return&nbsp;queueName;&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;}&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;}&lt;br&gt;&lt;br&gt;Is&nbsp;it&nbsp;not&nbsp;allowed&nbsp;to&nbsp;create/bind&nbsp;to&nbsp;a&nbsp;new&nbsp;queue&nbsp;when&nbsp;being&nbsp;called&nbsp;from&nbsp;this&nbsp;callback?&nbsp;Can&nbsp;I&nbsp;avoid&nbsp;the&nbsp;lockup&nbsp;somehow?&lt;br&gt;&lt;br&gt;I&nbsp;use&nbsp;'lock'&nbsp;to&nbsp;avoid&nbsp;triggering&nbsp;the&nbsp;non-multithread&nbsp;safe&nbsp;.NET&nbsp;implementation.&nbsp;Could&nbsp;this&nbsp;be&nbsp;an&nbsp;issue&nbsp;here?&lt;br&gt;&lt;br&gt;Any&nbsp;hints&nbsp;would&nbsp;be&nbsp;nice&nbsp;here.&lt;br&gt;
</tt>
