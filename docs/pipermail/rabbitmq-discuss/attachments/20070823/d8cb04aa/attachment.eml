[From nobody Thu Apr 22 23:07:23 2010
Message-ID: &lt;46CDEB75.7020708@imatix.com&gt;
Date: Thu, 23 Aug 2007 22:17:57 +0200
From: Martin Sustrik &lt;sustrik@imatix.com&gt;
User-Agent: Thunderbird 1.5.0.12 (X11/20070604)
MIME-Version: 1.0
To: Robert Godfrey &lt;rob.j.godfrey@gmail.com&gt;
Subject: Re: [rabbitmq-discuss] Python Client for RabbitMQ/AMQP?
References: &lt;6C9F6144-557F-470A-A32D-26288C517860@hudora.de&gt;	
	&lt;269388e30708132322n74837025xdf9229dc6d933372@mail.gmail.com&gt;	
	&lt;fde171c00708140107y58065ab5m6b6a7e09a040eb33@mail.gmail.com&gt;	
	&lt;167204d20708140120s2d105bf7ud91467dbaa27bdb6@mail.gmail.com&gt;	
	&lt;46CDC54E.4000803@diphi.com&gt;	
	&lt;167204d20708231038hcabee3bp9b6be867b2c6209b@mail.gmail.com&gt;	
	&lt;46CDCD24.4050509@diphi.com&gt; &lt;46CDDFFB.7060306@imatix.com&gt;
	&lt;fde171c00708231259n33fabdb4xe57546e9c402e654@mail.gmail.com&gt;
In-Reply-To: &lt;fde171c00708231259n33fabdb4xe57546e9c402e654@mail.gmail.com&gt;
Content-Type: text/plain; charset=ISO-8859-1; format=flowed
Content-Transfer-Encoding: 7bit

Robert Godfrey wrote:
&gt; I was thinking that I could probably get the Java Qpid broker to support 
&gt; AMQP 0-9 (non-WIP) if there is demand.  For the production uses of Qpid 
&gt; that I know about 0-8 is all that will be used however.
&gt; 
&gt; Martin - does OpenAMQ still accept clients wanting to talk 0-8 to it?

No. We've simply updated both OpenAMQ broker and Java client to support 0.9.

&gt; I can't remember any changes off the top of my head between 0-8 and 0-9 
&gt; (non-WIP) that would prevent a 0-9 broker from accepting communication 
&gt; from a 0-8 client [sorry for hijacking a Rabbit-MQ list for a Qpid / 
&gt; OpenAMQ question].

1. There was channel-id parameter added to channel.open-ok.
2. Few methods have changed IDs.
3. Matching algorithm for headers exchange was changes slightly.
4. New parameter to Basic.Consume (not used).
5. Maybe something similarly simple here... I don't recall exactly.

Not a big deal, however, we are releasing new version for use in 
production in few days time, we have 24/7 tests done already and while 
the testing will be going on on the JPMC side we wouldn't like to 
introduce new features (like 0-8 compatibility) that would potentially 
threaten the stability.

What about defining the minimal set of changes to 0.8 (like the five 
points above) all of us have to do to get 0.9 (sans WIP) and implement 
that. That way we would all be interoperable and nobody would have to 
support 2 different versions of the protocol.

BTW: It took me like 1 day to implement the changes. And it was not a 
very busy day :)

Martin

]