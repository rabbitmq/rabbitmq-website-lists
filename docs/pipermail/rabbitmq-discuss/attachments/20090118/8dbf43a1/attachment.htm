<tt>
Thanks&nbsp;Matthias&nbsp;for&nbsp;this&nbsp;very&nbsp;helpful&nbsp;and&nbsp;complete&nbsp;answer.&nbsp;I&nbsp;was&nbsp;actually&nbsp;not&nbsp;using&nbsp;AMQP,&nbsp;but&nbsp;STOMP...&nbsp;I&nbsp;guess&nbsp;the&nbsp;problem&nbsp;and&nbsp;the&nbsp;solution&nbsp;remain&nbsp;the&nbsp;same.&lt;br&gt;Do&nbsp;you&nbsp;think&nbsp;I&nbsp;should&nbsp;rather&nbsp;switch&nbsp;from&nbsp;Stomp&nbsp;to&nbsp;Amqp?&lt;br&gt;&lt;br&gt;<br>
Thanks,&lt;br&gt;&lt;br&nbsp;clear=&quot;all&quot;&gt;--&lt;br&gt;Julien&nbsp;Genestoux&lt;br&gt;&lt;a&nbsp;href=&quot;http://www.ouvre-boite.com&quot;&gt;http://www.ouvre-boite.com&lt;/a&gt;&lt;br&gt;&lt;a&nbsp;href=&quot;http://blog.notifixio.us&quot;&gt;http://blog.notifixio.us&lt;/a&gt;&lt;br&gt;&lt;br&gt;+1&nbsp;(415)&nbsp;254&nbsp;7340&lt;br&gt;+33&nbsp;(0)9&nbsp;70&nbsp;44&nbsp;76&nbsp;29&lt;br&gt;<br>
<br>
&lt;br&gt;&lt;br&gt;&lt;div&nbsp;class=&quot;gmail_quote&quot;&gt;On&nbsp;Sun,&nbsp;Jan&nbsp;18,&nbsp;2009&nbsp;at&nbsp;1:41&nbsp;AM,&nbsp;Matthias&nbsp;Radestock&nbsp;&lt;span&nbsp;dir=&quot;ltr&quot;&gt;&amp;lt;&lt;a&nbsp;href=&quot;mailto:matthias@lshift.net&quot;&gt;matthias@lshift.net&lt;/a&gt;&amp;gt;&lt;/span&gt;&nbsp;wrote:&lt;br&gt;&lt;blockquote&nbsp;class=&quot;gmail_quote&quot;&nbsp;style=&quot;border-left:&nbsp;1px&nbsp;solid&nbsp;rgb(204,&nbsp;204,&nbsp;204);&nbsp;margin:&nbsp;0pt&nbsp;0pt&nbsp;0pt&nbsp;0.8ex;&nbsp;padding-left:&nbsp;1ex;&quot;&gt;<br>
Julien,&lt;div&nbsp;class=&quot;Ih2E3d&quot;&gt;&lt;br&gt;<br>
&lt;br&gt;<br>
Julien&nbsp;Genestoux&nbsp;wrote:&lt;br&gt;<br>
&lt;blockquote&nbsp;class=&quot;gmail_quote&quot;&nbsp;style=&quot;border-left:&nbsp;1px&nbsp;solid&nbsp;rgb(204,&nbsp;204,&nbsp;204);&nbsp;margin:&nbsp;0pt&nbsp;0pt&nbsp;0pt&nbsp;0.8ex;&nbsp;padding-left:&nbsp;1ex;&quot;&gt;<br>
A&nbsp;process&nbsp;puts&nbsp;messages&nbsp;in&nbsp;a&nbsp;queue&nbsp;every&nbsp;second&nbsp;roughly.&nbsp;Atfer&nbsp;some&nbsp;time,&nbsp;I&nbsp;check&nbsp;the&nbsp;queue.&lt;br&gt;<br>
&amp;nbsp;&amp;gt;&nbsp;rabbitmqctl&nbsp;list_queues&nbsp;messages&nbsp;name&nbsp;consumers&lt;br&gt;<br>
Listing&nbsp;queues&nbsp;...&lt;br&gt;<br>
508&nbsp;&amp;nbsp;&nbsp;&amp;nbsp;/queue/MyQueue&nbsp;&amp;nbsp;&nbsp;&amp;nbsp;0&lt;br&gt;<br>
&lt;br&gt;<br>
Now,&nbsp;I&nbsp;start&nbsp;a&nbsp;consumer&nbsp;with&nbsp;the&nbsp;following&nbsp;code&nbsp;:&lt;br&gt;<br>
&lt;br&gt;<br>
queue_client.subscribe(&amp;quot;/queue/FeedsToParse&amp;quot;,&nbsp;{:durable&nbsp;=&amp;gt;&nbsp;true,&nbsp;&amp;quot;auto-delete&amp;quot;.intern&nbsp;=&amp;gt;&nbsp;false})&nbsp;do&nbsp;|message|&lt;br&gt;<br>
&nbsp;&amp;nbsp;sleep&nbsp;600&lt;br&gt;<br>
&nbsp;&amp;nbsp;puts&nbsp;&amp;quot;done!&amp;quot;&lt;br&gt;<br>
end&lt;br&gt;<br>
&lt;br&gt;<br>
As&nbsp;you&nbsp;can&nbsp;see,&nbsp;when&nbsp;starting&nbsp;this&nbsp;client,&nbsp;the&nbsp;number&nbsp;of&nbsp;elements&nbsp;in&nbsp;my&nbsp;queue&nbsp;should&nbsp;decrease&nbsp;pretty&nbsp;slowly&nbsp;(1&nbsp;every&nbsp;10&nbsp;minutes)...&nbsp;but&nbsp;here&nbsp;is&nbsp;what&nbsp;happens&nbsp;if&nbsp;I&nbsp;check&nbsp;the&nbsp;queue&nbsp;again:&lt;br&gt;<br>
&amp;nbsp;&amp;gt;&nbsp;rabbitmqctl&nbsp;list_queues&nbsp;messages&nbsp;name&nbsp;consumers&lt;br&gt;<br>
Listing&nbsp;queues&nbsp;...&lt;br&gt;<br>
417&nbsp;&amp;nbsp;&nbsp;&amp;nbsp;/queue/MyQueue&nbsp;&amp;nbsp;&nbsp;&amp;nbsp;1&lt;br&gt;<br>
&lt;br&gt;<br>
So&nbsp;it&nbsp;seems&nbsp;that&nbsp;starting&nbsp;a&nbsp;consumer&nbsp;deletes&nbsp;some&nbsp;messages&nbsp;in&nbsp;the&nbsp;queue.&nbsp;I&nbsp;have&nbsp;no&nbsp;idea&nbsp;why.&nbsp;Can&nbsp;anyone&nbsp;explain?&lt;br&gt;<br>
&lt;/blockquote&gt;<br>
&lt;br&gt;&lt;/div&gt;<br>
The&nbsp;&amp;#39;messages&amp;#39;&nbsp;count&nbsp;is&nbsp;the&nbsp;sum&nbsp;of:&lt;br&gt;<br>
&lt;br&gt;<br>
-&nbsp;messages_ready&nbsp;-&nbsp;Number&nbsp;of&nbsp;ready&nbsp;messages&nbsp;(i.e.&nbsp;messages&nbsp;ready&nbsp;to&nbsp;be&nbsp;delivered&nbsp;to&nbsp;client)&lt;br&gt;<br>
&lt;br&gt;<br>
-&nbsp;messages_unacknowledged&nbsp;-&nbsp;Number&nbsp;of&nbsp;unacknowledged&nbsp;messages.&lt;br&gt;<br>
&lt;br&gt;<br>
-&nbsp;messages_uncommitted&nbsp;-&nbsp;Number&nbsp;of&nbsp;uncommitted&nbsp;messages&nbsp;(i.e.&nbsp;messages&nbsp;published&nbsp;in&nbsp;a&nbsp;transaction&nbsp;but&nbsp;not&nbsp;yet&nbsp;committed)&lt;br&gt;<br>
&lt;br&gt;<br>
Since&nbsp;your&nbsp;example&nbsp;does&nbsp;not&nbsp;involve&nbsp;transactions,&nbsp;only&nbsp;messages_ready&nbsp;+&nbsp;messages_unacknowledged&nbsp;come&nbsp;into&nbsp;play.&lt;br&gt;<br>
&lt;br&gt;<br>
On&nbsp;publication,&nbsp;messages_ready&nbsp;increases.&lt;br&gt;<br>
&lt;br&gt;<br>
When&nbsp;delivering&nbsp;messages&nbsp;to&nbsp;a&nbsp;client,&nbsp;messages_ready&nbsp;decreases&nbsp;and&nbsp;messages_unacknowledged&nbsp;increases&nbsp;by&nbsp;the&nbsp;same&nbsp;amount,&nbsp;so&nbsp;the&nbsp;sum&nbsp;remains&nbsp;the&nbsp;same.&lt;br&gt;<br>
&lt;br&gt;<br>
When&nbsp;an&nbsp;acknowledgement&nbsp;is&nbsp;received&nbsp;from&nbsp;the&nbsp;client,&nbsp;messages_unacknowledged&nbsp;decreases,&nbsp;and&nbsp;so&nbsp;does&nbsp;the&nbsp;sum.&lt;br&gt;<br>
&lt;br&gt;<br>
Now&nbsp;...&lt;br&gt;<br>
&lt;br&gt;<br>
I&nbsp;am&nbsp;familiar&nbsp;with&nbsp;Aman&amp;#39;s&nbsp;ruby&nbsp;client,&nbsp;but&nbsp;looking&nbsp;at&nbsp;the&nbsp;code&nbsp;and&nbsp;docs&nbsp;it&nbsp;appears&nbsp;that&nbsp;by&nbsp;default&nbsp;the&nbsp;subscribe&nbsp;method&nbsp;creates&nbsp;a&nbsp;consumer&nbsp;from&nbsp;which&nbsp;the&nbsp;server&nbsp;does&nbsp;not&nbsp;expect&nbsp;acknowledgements&nbsp;(and&nbsp;indeed&nbsp;there&nbsp;is&nbsp;no&nbsp;explicit&nbsp;ack&nbsp;in&nbsp;the&nbsp;code&nbsp;above).&nbsp;Here&amp;#39;s&nbsp;what&nbsp;ruby&nbsp;client&amp;#39;s&nbsp;docs&nbsp;say;&lt;br&gt;<br>
<br>
&lt;br&gt;<br>
&nbsp;&amp;nbsp;&nbsp;&amp;nbsp;#&nbsp;==&nbsp;Options&lt;br&gt;<br>
&nbsp;&amp;nbsp;&nbsp;&amp;nbsp;#&nbsp;*&nbsp;:ack&nbsp;=&amp;gt;&nbsp;true&nbsp;|&nbsp;false&nbsp;(default&nbsp;false)&lt;br&gt;<br>
&nbsp;&amp;nbsp;&nbsp;&amp;nbsp;#&nbsp;If&nbsp;this&nbsp;field&nbsp;is&nbsp;set&nbsp;to&nbsp;false&nbsp;the&nbsp;server&nbsp;does&nbsp;not&nbsp;expect&nbsp;acknowledgments&lt;br&gt;<br>
&nbsp;&amp;nbsp;&nbsp;&amp;nbsp;#&nbsp;for&nbsp;messages.&nbsp;That&nbsp;is,&nbsp;when&nbsp;a&nbsp;message&nbsp;is&nbsp;delivered&nbsp;to&nbsp;the&nbsp;client&lt;br&gt;<br>
&nbsp;&amp;nbsp;&nbsp;&amp;nbsp;#&nbsp;the&nbsp;server&nbsp;automatically&nbsp;and&nbsp;silently&nbsp;acknowledges&nbsp;it&nbsp;on&nbsp;behalf&lt;br&gt;<br>
&nbsp;&amp;nbsp;&nbsp;&amp;nbsp;#&nbsp;of&nbsp;the&nbsp;client.&nbsp;This&nbsp;functionality&nbsp;increases&nbsp;performance&nbsp;but&nbsp;at&lt;br&gt;<br>
&nbsp;&amp;nbsp;&nbsp;&amp;nbsp;#&nbsp;the&nbsp;cost&nbsp;of&nbsp;reliability.&nbsp;Messages&nbsp;can&nbsp;get&nbsp;lost&nbsp;if&nbsp;a&nbsp;client&nbsp;dies&lt;br&gt;<br>
&nbsp;&amp;nbsp;&nbsp;&amp;nbsp;#&nbsp;before&nbsp;it&nbsp;can&nbsp;deliver&nbsp;them&nbsp;to&nbsp;the&nbsp;application.&lt;br&gt;<br>
&lt;br&gt;<br>
So&nbsp;as&nbsp;soon&nbsp;as&nbsp;your&nbsp;code&nbsp;creates&nbsp;the&nbsp;subscription,&nbsp;the&nbsp;server&nbsp;will&nbsp;start&nbsp;sending&nbsp;it&nbsp;the&nbsp;queue&amp;#39;s&nbsp;messages&nbsp;(resulting&nbsp;in&nbsp;messages_ready&nbsp;to&nbsp;decrease)&nbsp;and&nbsp;automatically&nbsp;acknowledge&nbsp;all&nbsp;such&nbsp;messages&nbsp;(resulting&nbsp;in&nbsp;messages_unacknowledged&nbsp;to&nbsp;remain&nbsp;unchanged),&nbsp;and&nbsp;thus&nbsp;the&nbsp;&amp;#39;messages&amp;#39;&nbsp;count&nbsp;decreases.&nbsp;This&nbsp;is&nbsp;an&nbsp;asynchronous&nbsp;operation;&nbsp;so&nbsp;the&nbsp;client&nbsp;will&nbsp;receive&nbsp;a&nbsp;stream&nbsp;of&nbsp;messages&nbsp;without&nbsp;having&nbsp;to&nbsp;do&nbsp;anything.&nbsp;The&nbsp;stream&nbsp;is&nbsp;only&nbsp;paused&nbsp;by&nbsp;network/tcp&nbsp;congestion,&nbsp;and&nbsp;basic.qos&nbsp;(search&nbsp;the&nbsp;archives&nbsp;for&nbsp;discussions&nbsp;on&nbsp;the&nbsp;latter).&lt;br&gt;<br>
<br>
&lt;br&gt;<br>
If&nbsp;that&nbsp;is&nbsp;not&nbsp;what&nbsp;you&nbsp;want&nbsp;I&nbsp;suggest&nbsp;you&nbsp;change&nbsp;the&nbsp;flag&nbsp;to&nbsp;true&nbsp;and&nbsp;explicitly&nbsp;acknowledge&nbsp;messages&nbsp;in&nbsp;your&nbsp;code.&lt;br&gt;<br>
&lt;br&gt;<br>
&lt;br&gt;<br>
Regards,&lt;br&gt;&lt;font&nbsp;color=&quot;#888888&quot;&gt;<br>
&lt;br&gt;<br>
Matthias&lt;br&gt;<br>
&lt;/font&gt;&lt;/blockquote&gt;&lt;/div&gt;&lt;br&gt;<br>

</tt>
