<tt>
Matthias,&lt;br&gt;&lt;br&gt;Below&nbsp;is&nbsp;the&nbsp;ToString():&lt;br&gt;&lt;br&gt;None&nbsp;of&nbsp;the&nbsp;specified&nbsp;endpoints&nbsp;were&nbsp;reachable&lt;br&gt;<br>
Endpoints&nbsp;attempted:&lt;br&gt;<br>
&nbsp; endpoint=amqp-0-8://&lt;a&nbsp;href=&quot;http://10.12.0.190:5672/&quot;&nbsp;target=&quot;_blank&quot;&gt;10.12.0.190:5672&lt;/a&gt;,&nbsp;attempts=1,&nbsp;outcome=The&nbsp;AMQP&nbsp;operation&nbsp;w&lt;br&gt;<br>
as&nbsp;interrupted:&nbsp;AMQP&nbsp;close-reason,&nbsp;initiated&nbsp;by&nbsp;Library,&nbsp;code=0,&nbsp;text=&amp;quot;End&nbsp;of&nbsp;st&lt;br&gt;<br>
ream&amp;quot;,&nbsp;classId=0,&nbsp;methodId=0,&nbsp;cause=System.IO.&lt;div&nbsp;id=&quot;:30a&quot;&nbsp;class=&quot;ii&nbsp;gt&quot;&gt;EndOfStreamException:&nbsp;Unable&nbsp;to&nbsp;re&lt;br&gt;<br>
ad&nbsp;beyond&nbsp;the&nbsp;end&nbsp;of&nbsp;the&nbsp;stream.&lt;br&gt;<br>
&nbsp; &nbsp;at&nbsp;System.IO.__Error.EndOfFile()&lt;br&gt;<br>
&nbsp; &nbsp;at&nbsp;System.IO.BinaryReader.ReadByte()&lt;br&gt;<br>
&nbsp; &nbsp;at&nbsp;RabbitMQ.Client.Impl.Frame.ReadFrom(NetworkBinaryReader&nbsp;reader)&lt;br&gt;<br>
&nbsp; &nbsp;at&nbsp;RabbitMQ.Client.Impl.SocketFrameHandler_0_9.ReadFrame()&lt;br&gt;<br>
&nbsp; &nbsp;at&nbsp;RabbitMQ.Client.Impl.ConnectionBase.MainLoopIteration()&lt;br&gt;<br>
&nbsp; &nbsp;at&nbsp;RabbitMQ.Client.Impl.ConnectionBase.MainLoop()&lt;br&gt;<br>
Stack&nbsp;trace:&lt;br&gt;<br>
&nbsp; &nbsp;at&nbsp;RabbitMQ.Client.ConnectionFactory.CreateConnection(Int32&nbsp;maxRedirects,&nbsp;Amq&lt;br&gt;<br>
pTcpEndpoint[]&nbsp;endpoints)&lt;br&gt;<br>
&nbsp; &nbsp;at&nbsp;RabbitMQ.Client.ConnectionFactory.CreateConnection(AmqpTcpEndpoint[]&nbsp;endpo&lt;br&gt;<br>
ints)&lt;br&gt;<br>
&nbsp; &nbsp;at&nbsp;RabbitMQ.Client.ConnectionFactory.CreateConnection(String&nbsp;address)&lt;br&gt;<br>
&nbsp; &nbsp;at&nbsp;RabbitTest.Program.DoWork()&nbsp;in&nbsp;C:\Development\RabbitTest\RabbitTest\Progra&lt;br&gt;<br>
m.cs:line&nbsp;65&lt;/div&gt;&lt;br&gt;I&nbsp;also&nbsp;looked&nbsp;in&nbsp;the&nbsp;rabbit.log,&nbsp;nothing&nbsp;interesting.&lt;br&gt;&lt;br&gt;Any&nbsp;thoughts?&lt;br&gt;&lt;br&gt;Aaron&lt;br&gt;&lt;br&gt;&lt;div&nbsp;class=&quot;gmail_quote&quot;&gt;On&nbsp;Wed,&nbsp;Jun&nbsp;10,&nbsp;2009&nbsp;at&nbsp;1:26&nbsp;PM,&nbsp;Matthias&nbsp;Radestock&nbsp;&lt;span&nbsp;dir=&quot;ltr&quot;&gt;&amp;lt;&lt;a&nbsp;href=&quot;mailto:matthias@lshift.net&quot;&nbsp;target=&quot;_blank&quot;&gt;matthias@lshift.net&lt;/a&gt;&amp;gt;&lt;/span&gt;&nbsp;wrote:&lt;br&gt;<br>
<br>
&lt;blockquote&nbsp;class=&quot;gmail_quote&quot;&nbsp;style=&quot;border-left:&nbsp;1px&nbsp;solid&nbsp;rgb(204,&nbsp;204,&nbsp;204);&nbsp;margin:&nbsp;0pt&nbsp;0pt&nbsp;0pt&nbsp;0.8ex;&nbsp;padding-left:&nbsp;1ex;&quot;&gt;Aaron,&lt;br&gt;<br>
&lt;div&gt;&lt;br&gt;<br>
Aaron&nbsp;Feng&nbsp;wrote:&lt;br&gt;<br>
&amp;gt;&nbsp;I&nbsp;noticed&nbsp;if&nbsp;I&nbsp;spin&nbsp;up&nbsp;around&nbsp;500&nbsp;threads&nbsp;and&nbsp;give&nbsp;it&nbsp;the&nbsp;following&nbsp;function:&lt;br&gt;<br>
&amp;gt;&lt;br&gt;<br>
&amp;gt;&nbsp;public&nbsp;static&nbsp;void&nbsp;DoWork()&nbsp;{&lt;br&gt;<br>
&amp;gt;&nbsp; &nbsp;try&nbsp;{&lt;br&gt;<br>
&amp;gt;&nbsp; &nbsp; &nbsp;var&nbsp;factory&nbsp;=&nbsp;new&nbsp;ConnectionFactory();&lt;br&gt;<br>
&amp;gt;&nbsp; &nbsp; &nbsp;var&nbsp;param&nbsp;=&nbsp;factory.Parameters;&lt;br&gt;<br>
&amp;gt;&nbsp; &nbsp; &nbsp;param.RequestedHeartbeat&nbsp;=&nbsp;100;&lt;br&gt;<br>
&amp;gt;&nbsp; &nbsp; &nbsp;using&nbsp;(var&nbsp;conn&nbsp;=&nbsp;factory.CreateConnection(server))&nbsp;{&lt;br&gt;<br>
&amp;gt;&nbsp; &nbsp; &nbsp; &nbsp;using&nbsp;(var&nbsp;ch&nbsp;=&nbsp;conn.CreateModel())&nbsp;{&lt;br&gt;<br>
&amp;gt;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;for&nbsp;(int&nbsp;i&nbsp;=&nbsp;0;&nbsp;i&nbsp;&amp;lt;&nbsp;times;&nbsp;i++)&nbsp;ch.BasicPublish(exchange,&lt;br&gt;<br>
&amp;gt;&nbsp;routingKey,&nbsp;null,&nbsp;data);&lt;br&gt;<br>
&amp;gt;&nbsp; &nbsp; &nbsp; &nbsp;}&lt;br&gt;<br>
&amp;gt;&nbsp; &nbsp; &nbsp;}&lt;br&gt;<br>
&amp;gt;&nbsp; &nbsp;}&lt;br&gt;<br>
&amp;gt;&nbsp; &nbsp;catch(Exception&nbsp;ex)&nbsp;{&lt;br&gt;<br>
&amp;gt;&nbsp; &nbsp; &nbsp;Console.WriteLine(ex.Message);&lt;br&gt;<br>
&amp;gt;&nbsp; &nbsp;}&lt;br&gt;<br>
&amp;gt;&nbsp;}&lt;br&gt;<br>
&amp;gt;&lt;br&gt;<br>
&amp;gt;&nbsp;Some&nbsp;of&nbsp;the&nbsp;threads&nbsp;would&nbsp;bomb&nbsp;with&lt;br&gt;<br>
&amp;gt;&nbsp;RabbitMQ.Client.Exceptions.BrokerUnreachableException:&nbsp;&amp;quot;None&nbsp;of&nbsp;the&lt;br&gt;<br>
&amp;gt;&nbsp;specified&nbsp;endpoints&nbsp;were&nbsp;reachable&amp;quot;.&nbsp; I&nbsp;can&nbsp;reproduce&nbsp;this&nbsp;behaviour&lt;br&gt;<br>
&amp;gt;&nbsp;consistently&nbsp;with&nbsp;lots&nbsp;of&nbsp;threads.&nbsp; Is&nbsp;my&nbsp;test&nbsp;valid?&lt;br&gt;<br>
&lt;br&gt;<br>
&lt;/div&gt;Does&nbsp;ToString&nbsp;on&nbsp;the&nbsp;BrokerUnreachableException&nbsp;provide&nbsp;any&nbsp;clues?&lt;br&gt;<br>
&lt;br&gt;<br>
Is&nbsp;there&nbsp;anything&nbsp;noteworthy&nbsp;in&nbsp;the&nbsp;server&nbsp;logs?&lt;br&gt;<br>
&lt;br&gt;<br>
&lt;br&gt;<br>
Regards,&lt;br&gt;<br>
&lt;font&nbsp;color=&quot;#888888&quot;&gt;&lt;br&gt;<br>
Matthias.&lt;br&gt;<br>
&lt;/font&gt;&lt;/blockquote&gt;&lt;/div&gt;&lt;br&gt;<br>

</tt>
