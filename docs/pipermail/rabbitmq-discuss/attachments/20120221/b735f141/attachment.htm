<tt>
&lt;html&nbsp;dir=&quot;ltr&quot;&gt;<br>
&lt;head&gt;<br>
&lt;meta&nbsp;http-equiv=&quot;Content-Type&quot;&nbsp;content=&quot;text/html;&nbsp;charset=iso-8859-1&quot;&gt;<br>
&lt;style&nbsp;id=&quot;owaParaStyle&quot;&nbsp;type=&quot;text/css&quot;&gt;<br>
&lt;!--<br>
p<br>
&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp{margin-top:0;<br>
&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspmargin-bottom:0}<br>
--&gt;<br>
&lt;/style&gt;<br>
&lt;/head&gt;<br>
&lt;body&gt;<br>
The&nbsp;rabbitMQ&nbsp;examples&nbsp;all&nbsp;show&nbsp;a&nbsp;use&nbsp;case&nbsp;where&nbsp;the&nbsp;receiver&nbsp;enters&nbsp;into&nbsp;a&nbsp;while(&nbsp;true&nbsp;)&nbsp;loop&nbsp;that&nbsp;is&nbsp;only&nbsp;terminated&nbsp;when&nbsp;the&nbsp;coder&nbsp;hits&nbsp;Ctrl-C&nbsp;at&nbsp;the&nbsp;command&nbsp;line.&lt;br&gt;<br>
&lt;br&gt;<br>
In&nbsp;my&nbsp;case,&nbsp;I&nbsp;call&nbsp;a&nbsp;method&nbsp;in&nbsp;a&nbsp;Listener&nbsp;class&nbsp;from&nbsp;a&nbsp;main&nbsp;java&nbsp;method&nbsp;in&nbsp;my&nbsp;primary&nbsp;class,&nbsp;Driver.&nbsp;As&nbsp;a&nbsp;result,&nbsp;control&nbsp;passes&nbsp;to&nbsp;callListener()&nbsp;in&nbsp;Listener.java&nbsp;and&nbsp;loops&nbsp;there&nbsp;endlessly&nbsp;waiting&nbsp;for&nbsp;messages&nbsp;it&nbsp;gets&nbsp;from&nbsp;the&nbsp;direct&nbsp;exchange.&nbsp;In&nbsp;my&nbsp;main()<br>
&nbsp;method&nbsp;of&nbsp;Driver.java,&nbsp;it&nbsp;makes&nbsp;a&nbsp;call&nbsp;right&nbsp;now&nbsp;like&nbsp;this:&lt;br&gt;<br>
&lt;br&gt;<br>
callListener();&nbsp;&lt;br&gt;<br>
&lt;br&gt;<br>
and&nbsp;inside&nbsp;my&nbsp;callListener&nbsp;method&nbsp;I&nbsp;implement&nbsp;similar&nbsp;to&nbsp;that&nbsp;that&nbsp;which&nbsp;was&nbsp;shown&nbsp;in&nbsp;the&nbsp;tutorials:&lt;br&gt;<br>
&lt;br&gt;<br>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;ConnectionFactory&nbsp;factory&nbsp;=&nbsp;new&nbsp;ConnectionFactory();&lt;br&gt;<br>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;factory.setHost(&amp;quot;localhost&amp;quot;);&lt;br&gt;<br>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;Connection&nbsp;connection&nbsp;=&nbsp;factory.newConnection();&lt;br&gt;<br>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;Channel&nbsp;channel&nbsp;=&nbsp;connection.createChannel();&lt;br&gt;<br>
&lt;br&gt;<br>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;channel.exchangeDeclare(EXCHANGE_NAME,&nbsp;&amp;quot;topic&amp;quot;);&lt;br&gt;<br>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;String&nbsp;queueName&nbsp;=&nbsp;channel.queueDeclare().getQueue();&lt;br&gt;<br>
&lt;br&gt;<br>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;for(String&nbsp;bindingKey&nbsp;:&nbsp;argv){&lt;br&gt;<br>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;channel.queueBind(queueName,&nbsp;EXCHANGE_NAME,&nbsp;bindingKey);&lt;br&gt;<br>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;}&lt;br&gt;<br>
&lt;br&gt;<br>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;System.out.println(&amp;quot;&nbsp;[*]&nbsp;Waiting&nbsp;for&nbsp;messages.&nbsp;To&nbsp;exit&nbsp;press&nbsp;CTRL&amp;#43;C&amp;quot;);&lt;br&gt;<br>
&lt;br&gt;<br>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;QueueingConsumer&nbsp;consumer&nbsp;=&nbsp;new&nbsp;QueueingConsumer(channel);&lt;br&gt;<br>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;channel.basicConsume(queueName,&nbsp;true,&nbsp;consumer);&lt;br&gt;<br>
&lt;br&gt;<br>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;while&nbsp;(true)&nbsp;{&lt;br&gt;<br>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;QueueingConsumer.Delivery&nbsp;delivery&nbsp;=&nbsp;consumer.nextDelivery();&lt;br&gt;<br>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;String&nbsp;message&nbsp;=&nbsp;new&nbsp;String(delivery.getBody());&lt;br&gt;<br>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;String&nbsp;routingKey&nbsp;=&nbsp;delivery.getEnvelope().getRoutingKey();&lt;br&gt;<br>
&lt;br&gt;<br>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;//&nbsp;...my&nbsp;other&nbsp;method&nbsp;calls&nbsp;to&nbsp;process&nbsp;the&nbsp;messages&lt;br&gt;<br>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;}&lt;br&gt;<br>
&lt;br&gt;<br>
I&nbsp;lose&nbsp;program&nbsp;control&nbsp;at&nbsp;that&nbsp;point,&nbsp;because&nbsp;this&nbsp;does&nbsp;not&nbsp;return&nbsp;me&nbsp;to&nbsp;my&nbsp;main()&nbsp;in&nbsp;Driver,&nbsp;where&nbsp;I&nbsp;need&nbsp;to&nbsp;accomplish&nbsp;other&nbsp;actions&nbsp;while&nbsp;this&nbsp;listener&nbsp;is&nbsp;monitoring&nbsp;the&nbsp;queue.&nbsp;What&nbsp;I&nbsp;need&nbsp;is&nbsp;for&nbsp;that&nbsp;call&nbsp;to&nbsp;initiate&nbsp;the&nbsp;while&nbsp;loop&nbsp;and&nbsp;listen&nbsp;to&nbsp;the&nbsp;queue,<br>
&nbsp;and&nbsp;if&nbsp;it&nbsp;does&nbsp;so&nbsp;successfully&nbsp;return&nbsp;me&nbsp;to&nbsp;my&nbsp;calling&nbsp;program&nbsp;with&nbsp;some&nbsp;indication&nbsp;of&nbsp;success&nbsp;even&nbsp;as&nbsp;the&nbsp;while&nbsp;loop&nbsp;sits&nbsp;there&nbsp;listening&nbsp;to&nbsp;the&nbsp;queue&nbsp;for&nbsp;messages.<br>
&lt;br&gt;<br>
&lt;br&gt;<br>
How&nbsp;can&nbsp;I&nbsp;implement&nbsp;this?&lt;br&gt;<br>
&lt;br&gt;<br>
Thanks&nbsp;very&nbsp;much.&lt;br&gt;<br>
&lt;div&gt;&lt;/div&gt;<br>
&lt;p&gt;&lt;font&nbsp;size=&quot;1&quot;&nbsp;face=&quot;arial&quot;&nbsp;color=&quot;gray&quot;&gt;CONFIDENTIALITY&nbsp;NOTICE:&nbsp;This&nbsp;message&nbsp;and&nbsp;any&nbsp;attachments&nbsp;or&nbsp;files&nbsp;transmitted&nbsp;with&nbsp;it&nbsp;(collectively,&nbsp;the&nbsp;&amp;quot;Message&amp;quot;)&nbsp;are&nbsp;intended&nbsp;only&nbsp;for&nbsp;the&nbsp;addressee&nbsp;and&nbsp;may&nbsp;contain&nbsp;information&nbsp;that&nbsp;is&nbsp;privileged,&nbsp;proprietary&nbsp;and/or<br>
&nbsp;prohibited&nbsp;from&nbsp;disclosure&nbsp;by&nbsp;law&nbsp;or&nbsp;contract.&nbsp;If&nbsp;you&nbsp;are&nbsp;not&nbsp;the&nbsp;intended&nbsp;recipient:&nbsp;(a)&nbsp;please&nbsp;do&nbsp;not&nbsp;read,&nbsp;copy&nbsp;or&nbsp;retransmit&nbsp;the&nbsp;Message;&nbsp;(b)&nbsp;permanently&nbsp;delete&nbsp;and/or&nbsp;destroy&nbsp;all&nbsp;electronic&nbsp;and&nbsp;hard&nbsp;copies&nbsp;of&nbsp;the&nbsp;Message;&nbsp;(c)&nbsp;notify&nbsp;us&nbsp;by&nbsp;return&nbsp;email;<br>
&nbsp;and&nbsp;(d)&nbsp;you&nbsp;are&nbsp;hereby&nbsp;notified&nbsp;that&nbsp;any&nbsp;dissemination,&nbsp;distribution&nbsp;or&nbsp;copying&nbsp;of&nbsp;the&nbsp;Message&nbsp;is&nbsp;strictly&nbsp;prohibited.<br>
&lt;/font&gt;&lt;/p&gt;<br>
&lt;/body&gt;<br>
&lt;/html&gt;<br>

</tt>
