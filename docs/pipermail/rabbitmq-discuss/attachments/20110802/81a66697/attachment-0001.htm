<tt>
&lt;div&gt;Hi&lt;/div&gt;<br>
&lt;div&gt; &lt;/div&gt;<br>
&lt;div&gt; &nbsp;I&nbsp;kept&nbsp;get&nbsp;error&nbsp;message&nbsp;while&nbsp;connect&nbsp;to&nbsp;rabbitmq&nbsp;server&nbsp;using&nbsp;rabbitmq-erlang-client&nbsp;library.&nbsp;Anyone&nbsp;can&nbsp;help,&nbsp;thanks.&lt;br&gt;&lt;br&gt;Erlang&nbsp;R14B03&nbsp;(erts-5.8.4)&nbsp;[source]&nbsp;[64-bit]&nbsp;[smp:24:24]&nbsp;[rq:24]&nbsp;[async-threads:0]&nbsp;[kernel-poll:false]&lt;/div&gt;<br>
<br>
&lt;div&gt;Eshell&nbsp;V5.8.4 &nbsp;(abort&nbsp;with&nbsp;^G)&lt;br&gt;1&amp;gt;&nbsp;test:start().&lt;/div&gt;<br>
&lt;div&gt;=ERROR&nbsp;REPORT====&nbsp;2-Aug-2011::08:40:18&nbsp;===&lt;br&gt;**&nbsp;Generic&nbsp;server&nbsp;&amp;lt;0.46.0&amp;gt;&nbsp;terminating&nbsp;&lt;br&gt;**&nbsp;Last&nbsp;message&nbsp;in&nbsp;was&nbsp;{inet_async,#Port&amp;lt;0.1109&amp;gt;,1,{ok,&amp;lt;&amp;lt;65,77,81,80,1,1,8&amp;gt;&amp;gt;}}&lt;br&gt;**&nbsp;When&nbsp;Server&nbsp;state&nbsp;==&nbsp;{state,#Port&amp;lt;0.1109&amp;gt;,&amp;lt;0.39.0&amp;gt;,&amp;lt;0.41.0&amp;gt;,&lt;br&gt;<br>
                              &nbsp;{method,rabbit_framing_amqp_0_9_1},&lt;br&gt;                              &nbsp;none}&lt;br&gt;**&nbsp;Reason&nbsp;for&nbsp;termination&nbsp;==&nbsp;&lt;br&gt;**&nbsp;{{badmatch,{error,enomem}},&lt;br&gt;   &nbsp;[{amqp_main_reader,handle_inet_async,2},&lt;br&gt;<br>
    &nbsp;{gen_server,handle_msg,5},&lt;br&gt;    &nbsp;{proc_lib,init_p_do_apply,3}]}&lt;/div&gt;<br>
&lt;div&gt; &lt;/div&gt;<br>
&lt;div&gt; &lt;/div&gt;<br>
&lt;div&gt; &lt;/div&gt;<br>
&lt;div&gt;%%test.erl&nbsp;&lt;/div&gt;<br>
&lt;div&gt;&lt;br&gt;-module(test).&lt;/div&gt;<br>
&lt;div&gt;-include_lib(&amp;quot;amqp_client/include/amqp_client.hrl&amp;quot;).&lt;br&gt;-compile(export_all).&lt;/div&gt;<br>
&lt;div&gt;start()&nbsp;-&amp;gt;&lt;br&gt;       &nbsp;{ok,&nbsp;Connection}&nbsp;=&nbsp;amqp_connection:start(#amqp_params_network{username=&nbsp;&amp;lt;&amp;lt;&amp;quot;myuser&amp;quot;&amp;gt;&amp;gt;,&nbsp;password=&nbsp;&amp;lt;&amp;lt;&amp;quot;mypassword&amp;quot;&amp;gt;&amp;gt;}),&lt;br&gt;       &nbsp;{ok,&nbsp;Channel}&nbsp;=&nbsp;amqp_connection:open_channel(Connection),&lt;br&gt;<br>
       &nbsp;Queue&nbsp;=&nbsp;&amp;quot;my_queue&amp;quot;,&lt;br&gt;       &nbsp;Declare&nbsp;=&nbsp;#&amp;#39;queue.declare&amp;#39;{queue&nbsp;=&nbsp;list_to_binary(Queue),&nbsp;durable=true},&lt;br&gt;       &nbsp;#&amp;#39;queue.declare_ok&amp;#39;{}&nbsp;=&nbsp;amqp_channel:call(Channel,&nbsp;Declare),&lt;br&gt;       &nbsp;Get&nbsp;=&nbsp;#&amp;#39;basic.get&amp;#39;{queue&nbsp;=&nbsp;Queue},&lt;br&gt;<br>
       &nbsp;{#&amp;#39;basic.get_ok&amp;#39;{delivery_tag&nbsp;=&nbsp;Tag},&nbsp;Content}&lt;br&gt;                      &nbsp;=&nbsp;amqp_channel:call(Channel,&nbsp;Get),&lt;br&gt;       &nbsp;io:format(&amp;quot;received&nbsp;message&nbsp;~p&amp;quot;,&nbsp;[Content]),&lt;br&gt;       &nbsp;%%&nbsp;Close&nbsp;the&nbsp;channel&lt;br&gt;<br>
       &nbsp;amqp_channel:close(Channel),&lt;br&gt;       &nbsp;%%&nbsp;Close&nbsp;the&nbsp;connection&lt;br&gt;       &nbsp;amqp_connection:close(Connection),&lt;/div&gt;<br>
&lt;div&gt;       &nbsp;ok.&lt;/div&gt;<br>

</tt>
