<tt>
&lt;div&gt;Some&nbsp;background.&nbsp;My&nbsp;project&nbsp;is&nbsp;trying&nbsp;to&nbsp;implement&nbsp;rabbitMQ&nbsp;as&nbsp;a&nbsp;communications&nbsp;protocol&nbsp;as&nbsp;a&nbsp;direct&nbsp;replacement&nbsp;for&nbsp;OpenAMQ&nbsp;as&nbsp;it&nbsp;is&nbsp;outdated.&nbsp;We&nbsp;are&nbsp;running&nbsp;C++&nbsp;on&nbsp;windows&nbsp;server&nbsp;2003&nbsp;and&nbsp;used&nbsp;the&nbsp;C&nbsp;client&nbsp;library&nbsp;to&nbsp;implement&nbsp;our&nbsp;solution.&lt;/div&gt;<br>
&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;We&nbsp;setup&nbsp;4&nbsp;clustered&nbsp;brokers&nbsp;for&nbsp;clients&nbsp;to&nbsp;connect&nbsp;to.&nbsp;We&nbsp;have&nbsp;20&nbsp;clients&nbsp;each&nbsp;publishing&nbsp;data&nbsp;using&nbsp;direct&nbsp;mode&nbsp;to&nbsp;the&nbsp;same&nbsp;exchange&nbsp;with&nbsp;all&nbsp;the&nbsp;queues&nbsp;listening&nbsp;to&nbsp;the&nbsp;same&nbsp;key. &lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;<br>
&lt;div&gt;The&nbsp;idea&nbsp;of&nbsp;the&nbsp;setup&nbsp;is&nbsp;that&nbsp;if&nbsp;1&nbsp;client&nbsp;sends&nbsp;out&nbsp;data&nbsp;each&nbsp;of&nbsp;the&nbsp;other&nbsp;19&nbsp;will&nbsp;receive&nbsp;the&nbsp;data.&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;We&nbsp;ran&nbsp;our&nbsp;application&nbsp;and&nbsp;noticed&nbsp;that&nbsp;the&nbsp;queues&nbsp;actually&nbsp;pile&nbsp;up.&lt;/div&gt;&lt;div&gt;I&nbsp;have&nbsp;taken&nbsp;screenshoots&nbsp;of&nbsp;the&nbsp;management&nbsp;console. &lt;/div&gt;<br>
&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;a&nbsp;href=&quot;http://imageshack.us/f/213/overviewrabbitmq.jpg/&quot;&gt;http://imageshack.us/f/213/overviewrabbitmq.jpg/&lt;/a&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;This&nbsp;shows&nbsp;that&nbsp;the&nbsp;ready&nbsp;queue&nbsp;which&nbsp;is&nbsp;increasing&nbsp;overtime&nbsp;and&nbsp;also&nbsp;publish&nbsp;and&nbsp;deliver.&lt;/div&gt;<br>
&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;a&nbsp;href=&quot;http://img690.imageshack.us/img690/903/queuesrabbitmq.jpg&quot;&gt;http://img690.imageshack.us/img690/903/queuesrabbitmq.jpg&lt;/a&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;This&nbsp;image&nbsp;shows&nbsp;the&nbsp;incoming&nbsp;rate&nbsp;of&nbsp;each&nbsp;client&nbsp;is&nbsp;12/s&nbsp;and&nbsp;deliver&nbsp;is&nbsp;30/s.&lt;/div&gt;<br>
&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;I&nbsp;am&nbsp;wondering&nbsp;if&nbsp;anyone&nbsp;here&nbsp;knows&nbsp;the&nbsp;reason&nbsp;on&nbsp;the&nbsp;pileup&nbsp;as&nbsp;the&nbsp;incoming&nbsp;rate&nbsp;is&nbsp;less&nbsp;than&nbsp;the&nbsp;deliver&nbsp;rate.&nbsp;(Assuming&nbsp;the&nbsp;incoming&nbsp;rate&nbsp;is&nbsp;the&nbsp;rate&nbsp;of&nbsp;receiving&nbsp;and&nbsp;deliver&nbsp;rate&nbsp;is&nbsp;the&nbsp;rate&nbsp;of&nbsp;sending.).&lt;/div&gt;<br>
&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;Also&nbsp;is&nbsp;there&nbsp;anyway&nbsp;to&nbsp;further&nbsp;optimize&nbsp;the&nbsp;rate&nbsp;of&nbsp;speeding&nbsp;and&nbsp;receiving&nbsp;either&nbsp;programmatically&nbsp;or&nbsp;configuration.&nbsp;Our&nbsp;send&nbsp;and&nbsp;receive&nbsp;code&nbsp;is&nbsp;very&nbsp;similar&nbsp;to&nbsp;the&nbsp;example&nbsp;provided&nbsp;by&nbsp;the&nbsp;Client&nbsp;here &lt;/div&gt;<br>
&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;a&nbsp;href=&quot;http://hg.rabbitmq.com/rabbitmq-c/file/7cecf64752fd/examples&quot;&gt;http://hg.rabbitmq.com/rabbitmq-c/file/7cecf64752fd/examples&lt;/a&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;Thanks!&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;QX&lt;/div&gt;<br>

</tt>
