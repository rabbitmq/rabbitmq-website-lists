package edft.concurrent.tests;

import com.rabbitmq.client.AMQP;
import com.rabbitmq.client.Channel;
import com.rabbitmq.client.Connection;
import com.rabbitmq.client.ConnectionFactory;
import com.rabbitmq.client.GetResponse;

public class TimeoutTest {
    public static void main(String[] args) {
        try {
            String hostName = (args.length > 0) ? args[0] : "localhost";
            int portNumber = (args.length > 1) ? Integer.parseInt(args[1]) : AMQP.PROTOCOL.PORT;
            
            ConnectionFactory connFactory = new ConnectionFactory();
            Connection conn = connFactory.newConnection(hostName, portNumber);
            final Channel channel = conn.createChannel();
            int ticket = channel.accessRequest("/data");
            
            channel.queueDeclare(ticket, "TEST");
            for(int i = 0; i < 10000;i++) {
                GetResponse basicGet = channel.basicGet(ticket, "TEST", false);
                System.out.println("Starting loop (no yield)");
                long start = System.currentTimeMillis();
                
                while(true) {
                    long now = System.currentTimeMillis();
//                    Thread.yield();
                    if(now - start > 10000) {
                        break;
                    }
                }
                System.out.println("Finished loop");
                
                if(basicGet != null) {
                    channel.basicAck(basicGet.getEnvelope().getDeliveryTag(), false);
                }
            }
            
            conn.close(200, "OK");
        }
        catch (Exception ex) {
            System.err.println("Main thread caught exception: " + ex);
            ex.printStackTrace();
            System.exit(1);
        }
    }
}
