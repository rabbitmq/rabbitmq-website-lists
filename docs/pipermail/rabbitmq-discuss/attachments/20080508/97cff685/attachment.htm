<tt>
&lt;html&gt;&lt;body&nbsp;style=&quot;word-wrap:&nbsp;break-word;&nbsp;-webkit-nbsp-mode:&nbsp;space;&nbsp;-webkit-line-break:&nbsp;after-white-space;&nbsp;&quot;&gt;Ed,&lt;div&gt;&lt;br&gt;&lt;div&gt;&lt;div&gt;On&nbsp;8&nbsp;May&nbsp;2008,&nbsp;at&nbsp;15:04,&nbsp;Edwin&nbsp;Fine&nbsp;wrote:&lt;/div&gt;&lt;br&nbsp;class=&quot;Apple-interchange-newline&quot;&gt;&lt;blockquote&nbsp;type=&quot;cite&quot;&gt;Ben,&lt;br&gt;&nbsp;Thanks&nbsp;for&nbsp;looking&nbsp;into&nbsp;this.&nbsp;In&nbsp;the&nbsp;&quot;real&quot;&nbsp;code,&nbsp;all&nbsp;the&nbsp;setup&nbsp;is&nbsp;actually&nbsp;done&nbsp;within&nbsp;a&nbsp;single&nbsp;Erlang&nbsp;process,&nbsp;and&nbsp;the&nbsp;only&nbsp;thing&nbsp;the&nbsp;consumers&nbsp;do&nbsp;is&nbsp;handle&nbsp;the&nbsp;basic.deliver,&nbsp;as&nbsp;well&nbsp;as&nbsp;any&nbsp;basic.consume_ok&amp;nbsp;&nbsp;or&nbsp;basic.cancel_ok&nbsp;messages&nbsp;that&nbsp;may&nbsp;arise.&nbsp;In&nbsp;the&nbsp;test&nbsp;code,&nbsp;I&nbsp;rearranged&nbsp;some&nbsp;things&nbsp;specifically&nbsp;to&nbsp;be&nbsp;done&nbsp;concurrently,&nbsp;which&nbsp;I&nbsp;now&nbsp;see&nbsp;was&nbsp;a&nbsp;mistake.&nbsp;However,&nbsp;this&nbsp;is&nbsp;a&nbsp;bug&nbsp;in&nbsp;the&nbsp;test&nbsp;code,&nbsp;not&nbsp;in&nbsp;the&nbsp;production&nbsp;code.&nbsp;I&nbsp;will&nbsp;change&nbsp;the&nbsp;test&nbsp;code&nbsp;so&nbsp;that&nbsp;there&nbsp;is&nbsp;no&nbsp;concurrent&nbsp;work&nbsp;being&nbsp;done&nbsp;on&nbsp;a&nbsp;channel&nbsp;other&nbsp;than&nbsp;responding&nbsp;with&nbsp;basic.ack&nbsp;to&nbsp;basic.deliver&nbsp;messages.&lt;br&gt;&lt;/blockquote&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;I've&nbsp;begun&nbsp;a&nbsp;discussion&nbsp;on&nbsp;this&nbsp;topic&nbsp;and&nbsp;it&nbsp;looks&nbsp;like&nbsp;we&nbsp;will&nbsp;add&nbsp;the&nbsp;intelligence&nbsp;to&nbsp;the&nbsp;amqp_channel&nbsp;module&nbsp;to&nbsp;be&nbsp;able&nbsp;to&nbsp;serialize&nbsp;concurrent&nbsp;RPC&nbsp;requests&nbsp;to&nbsp;the&nbsp;channel.&nbsp;I&nbsp;understand&nbsp;that&nbsp;you&nbsp;have&nbsp;a&nbsp;workaround&nbsp;anyway,&nbsp;but&nbsp;on&nbsp;reflection,&nbsp;it&nbsp;seems&nbsp;like&nbsp;a&nbsp;good&nbsp;idea&nbsp;to&nbsp;put&nbsp;this&nbsp;capability&nbsp;into&nbsp;the&nbsp;client.&nbsp;will&nbsp;let&nbsp;you&nbsp;know&nbsp;when&nbsp;it&nbsp;is&nbsp;done.&lt;/div&gt;&lt;br&gt;&lt;blockquote&nbsp;type=&quot;cite&quot;&gt;I&nbsp;note&nbsp;that&nbsp;there&nbsp;is&nbsp;a&nbsp;special&nbsp;version&nbsp;of&nbsp;amqp_channel:send/3,&nbsp;used&nbsp;only&nbsp;for&nbsp;a&nbsp;basic.consume&nbsp;method,&nbsp;with&nbsp;the&nbsp;last&nbsp;argument&nbsp;being&nbsp;the&nbsp;pid&nbsp;of&nbsp;the&nbsp;process&nbsp;subscribing.&nbsp;Am&nbsp;I&nbsp;correct&nbsp;to&nbsp;assume&nbsp;because&nbsp;of&nbsp;this&nbsp;that&nbsp;the&nbsp;basic.consume&nbsp;method&nbsp;can&nbsp;indeed&nbsp;be&nbsp;sent&nbsp;concurrently&nbsp;by&nbsp;different&nbsp;consumers&nbsp;on&nbsp;the&nbsp;same&nbsp;channel?&nbsp;But&nbsp;the&nbsp;basic.cancel&nbsp;operation&nbsp;does&nbsp;not&nbsp;have&nbsp;this&nbsp;property&nbsp;(specifying&nbsp;a&nbsp;PID&nbsp;in&nbsp;the&nbsp;amqp&nbsp;call)&nbsp;,&nbsp;as&nbsp;far&nbsp;as&nbsp;I&nbsp;can&nbsp;see,&nbsp;which&nbsp;means&nbsp;that&nbsp;a&nbsp;consumer&nbsp;cannot&nbsp;cancel&nbsp;its&nbsp;own&nbsp;subscription&nbsp;without&nbsp;potentially&nbsp;clashing&nbsp;with&nbsp;other&nbsp;consumers&nbsp;that&nbsp;are&nbsp;canceling.&lt;br&gt;&lt;/blockquote&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;amqp_channel:send/3?&nbsp;There&nbsp;isn't&nbsp;an&nbsp;exported&nbsp;function&nbsp;of&nbsp;that&nbsp;name.&nbsp;I&nbsp;think&nbsp;you&nbsp;mean&nbsp;call/3.&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;Any&nbsp;which&nbsp;way,&nbsp;the&nbsp;reason&nbsp;behind&nbsp;sending&nbsp;a&nbsp;consume&nbsp;request&nbsp;with&nbsp;a&nbsp;Pid&nbsp;to&nbsp;the&nbsp;channel&nbsp;process&nbsp;is&nbsp;to&nbsp;allow&nbsp;the&nbsp;channel&nbsp;to&nbsp;register&nbsp;the&nbsp;consumer&nbsp;process&nbsp;against&nbsp;a&nbsp;tag.&nbsp;The&nbsp;channel&nbsp;process&nbsp;and&nbsp;the&nbsp;broker&nbsp;use&nbsp;a&nbsp;consumer&nbsp;tag&nbsp;to&nbsp;correlate&nbsp;messages&amp;nbsp;across&amp;nbsp;the&nbsp;wire.&nbsp;The&nbsp;broker&nbsp;does&nbsp;not&nbsp;know&nbsp;anything&nbsp;about&nbsp;the&nbsp;consuming&nbsp;process.&nbsp;The&nbsp;process&nbsp;looks&nbsp;like&nbsp;this:&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;1.&nbsp;Subscribe:&lt;/div&gt;&lt;div&gt;&lt;span&nbsp;class=&quot;Apple-tab-span&quot;&nbsp;style=&quot;white-space:pre&quot;&gt;&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&lt;/span&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;a)&nbsp;User&nbsp;-----(Consumer&nbsp;Pid,&nbsp;Tag?)-----&gt;&nbsp;Channel&nbsp;Process&nbsp;----(Tag)-----&gt;&nbsp;Broker&lt;/div&gt;&lt;div&gt;b)&nbsp;User&nbsp;&amp;lt;-----(Tag&nbsp;Ok)-----&nbsp;Channel&nbsp;Process&nbsp;&amp;lt;----(Tag&nbsp;Ok)-----&nbsp;Broker&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;2.&nbsp;Receive&nbsp;messages:&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;User&nbsp;&amp;lt;-----(Data)-----&nbsp;Channel&nbsp;Process&nbsp;&amp;lt;----(Tag,&nbsp;Data)-----&nbsp;Broker&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;3.&nbsp;Unsubscribe:&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;a)&nbsp;User&nbsp;-----(Tag)-----&gt;&nbsp;Channel&nbsp;Process&nbsp;----(Tag)-----&gt;&nbsp;Broker&lt;/div&gt;&lt;div&gt;b)&nbsp;User&nbsp;&amp;lt;----(Tag&nbsp;Ok)-----&gt;&nbsp;Channel&nbsp;Process&nbsp;&amp;lt;---(Tag&nbsp;Ok)-----&nbsp;Broker&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;From&nbsp;an&nbsp;user&nbsp;perspective,&nbsp;you&nbsp;*could*&nbsp;get&nbsp;away&nbsp;without&nbsp;the&nbsp;acks&nbsp;in&nbsp;steps&nbsp;1b&nbsp;and&nbsp;3b.&nbsp;However,&nbsp;to&nbsp;be&nbsp;consistent&nbsp;with&nbsp;the&nbsp;Java&nbsp;client&nbsp;API,&nbsp;3&nbsp;different&nbsp;types&nbsp;of&nbsp;messages&nbsp;are&nbsp;sent&nbsp;to&nbsp;a&nbsp;consuming&nbsp;process:&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;1.&nbsp;ConsumeOk&nbsp;-&nbsp;to&nbsp;acknowledge&nbsp;the&nbsp;registration&nbsp;of&nbsp;a&nbsp;tag&nbsp;or&nbsp;to&nbsp;inform&nbsp;the&nbsp;receiver&nbsp;of&nbsp;an&nbsp;auto-generated&nbsp;tag;&lt;/div&gt;&lt;div&gt;2.&nbsp;Delivery&nbsp;-&nbsp;normal&nbsp;message&nbsp;delivery;&lt;/div&gt;&lt;div&gt;3.&nbsp;CancelOk&nbsp;-&nbsp;to&nbsp;let&nbsp;the&nbsp;consuming&nbsp;process&nbsp;know&nbsp;that&nbsp;it's&nbsp;subscription&nbsp;has&nbsp;been&nbsp;cancelled.&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;In&nbsp;step&nbsp;1,&nbsp;the&nbsp;channel&nbsp;process&nbsp;registers&nbsp;the&nbsp;consuming&nbsp;Pid&nbsp;against&nbsp;a&nbsp;tag,&nbsp;so&nbsp;that&nbsp;subsequent&nbsp;messages&nbsp;it&nbsp;receives&nbsp;with&nbsp;that&nbsp;tag&nbsp;can&nbsp;get&nbsp;routed&nbsp;to&nbsp;the&nbsp;correct&nbsp;consumer.&nbsp;The&nbsp;fact&nbsp;that&nbsp;the&nbsp;ack&nbsp;is&nbsp;resent&nbsp;to&nbsp;the&nbsp;consumer&nbsp;is&nbsp;just&nbsp;a&nbsp;matter&nbsp;of&nbsp;the&nbsp;client&nbsp;side&nbsp;API&nbsp;-&nbsp;it&nbsp;provides&nbsp;a&nbsp;consumer&nbsp;with&nbsp;explicit&nbsp;lifecycle&nbsp;events,&nbsp;whether&nbsp;or&nbsp;not&nbsp;they&nbsp;actually&nbsp;care&nbsp;about&nbsp;them.&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;When&nbsp;it&nbsp;comes&nbsp;to&nbsp;cancellation,&nbsp;you&nbsp;don't&nbsp;need&nbsp;a&nbsp;Pid,&nbsp;just&nbsp;a&nbsp;tag.&nbsp;This&nbsp;is&nbsp;because&nbsp;the&nbsp;channel&nbsp;process&nbsp;maintains&nbsp;a&nbsp;map&nbsp;between&nbsp;tags&nbsp;and&nbsp;consumers,&nbsp;so&nbsp;you&nbsp;only&nbsp;require&nbsp;the&nbsp;tag&nbsp;to&nbsp;kick&nbsp;off&nbsp;the&nbsp;cancellation&nbsp;process.&nbsp;So&nbsp;whether&nbsp;you&nbsp;cancel&nbsp;yourself&nbsp;or&nbsp;some&nbsp;other&nbsp;process,&nbsp;all&nbsp;you&nbsp;need&nbsp;is&nbsp;the&nbsp;tag.&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;The&nbsp;upshot&nbsp;of&nbsp;this&nbsp;is&nbsp;that&nbsp;you&nbsp;can't&nbsp;clash&nbsp;on&nbsp;cancelling,&nbsp;because&nbsp;you&nbsp;can&nbsp;correlate&nbsp;with&nbsp;the&nbsp;tag.&nbsp;However&nbsp;as&nbsp;indicated&nbsp;above,&nbsp;there&nbsp;is&nbsp;a&nbsp;current&nbsp;limitation&nbsp;with&nbsp;concurrent&nbsp;synchronous&nbsp;calls,&nbsp;which&nbsp;I'm&nbsp;hoping&nbsp;to&nbsp;remove&nbsp;now.&nbsp;In&nbsp;fact,&nbsp;being&nbsp;able&nbsp;to&nbsp;cancel&nbsp;a&nbsp;subscription&nbsp;is&nbsp;something&nbsp;that&nbsp;you&nbsp;might&nbsp;want&nbsp;to&nbsp;kick&nbsp;off&nbsp;from&nbsp;a&nbsp;consuming&nbsp;process,&nbsp;which&nbsp;means&nbsp;that&nbsp;forcing&nbsp;application&nbsp;code&nbsp;to&nbsp;serialize&nbsp;this&nbsp;may&nbsp;be&nbsp;a&nbsp;drawback.&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;In&nbsp;essence,&nbsp;I&nbsp;think&nbsp;the&nbsp;current&nbsp;subscribe/unsubscribe&nbsp;model&nbsp;makes&nbsp;sense,&nbsp;it&nbsp;just&nbsp;requires&nbsp;the&nbsp;intelligence&nbsp;to&nbsp;serialize&nbsp;synchronous&nbsp;client&nbsp;requests.&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;If&nbsp;you&nbsp;think&nbsp;that&nbsp;passing&nbsp;the&nbsp;consume_ok&nbsp;and&nbsp;cancel_ok&nbsp;acks&nbsp;to&nbsp;the&nbsp;consumer&nbsp;is&nbsp;counterintuitive,&nbsp;maybe&nbsp;we&nbsp;could&nbsp;consider&amp;nbsp;parametrizing&nbsp;the&nbsp;client&nbsp;side&nbsp;call&nbsp;so&nbsp;that&nbsp;the&nbsp;client&nbsp;can&nbsp;choose&nbsp;whether&nbsp;the&nbsp;consumer&nbsp;really&nbsp;cares&nbsp;about&nbsp;these&nbsp;lifecycle&nbsp;events.&nbsp;Which&nbsp;ever&nbsp;way,&nbsp;there&nbsp;will&nbsp;only&nbsp;be&nbsp;2&nbsp;lifecycle&nbsp;events&nbsp;per&nbsp;consumer,&nbsp;so&nbsp;these&nbsp;could&nbsp;*thereotically*&nbsp;just&nbsp;be&nbsp;left&nbsp;in&nbsp;the&nbsp;consumer's&nbsp;mailbox.&amp;nbsp;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;blockquote&nbsp;type=&quot;cite&quot;&gt;So&nbsp;I&nbsp;will&nbsp;change&nbsp;the&nbsp;code&nbsp;back&nbsp;so&nbsp;that&nbsp;everything&nbsp;OTHER&nbsp;than&nbsp;basic.consume&nbsp;and&nbsp;basic.cancel&nbsp;is&nbsp;done&nbsp;within&nbsp;a&nbsp;single&nbsp;process,&nbsp;and&nbsp;take&nbsp;it&nbsp;from&nbsp;there.&lt;br&gt;&lt;br&gt;I&nbsp;think&nbsp;this&nbsp;has,&nbsp;however,&nbsp;shed&nbsp;some&nbsp;light&nbsp;on&nbsp;what&nbsp;might&nbsp;have&nbsp;happened&nbsp;in&nbsp;the&nbsp;production&nbsp;code.&nbsp;&lt;b&gt;I&nbsp;am&nbsp;using&nbsp;the&nbsp;consumer&nbsp;process&nbsp;to&nbsp;unsubscribe&nbsp;itself.&lt;/b&gt;&nbsp;When&nbsp;there&nbsp;are&nbsp;many&nbsp;consumer&nbsp;processes,&nbsp;this&nbsp;could&nbsp;be&nbsp;a&nbsp;problem&nbsp;because&nbsp;I&nbsp;think&nbsp;basic.cancel&nbsp;does&nbsp;not&nbsp;allow&nbsp;you&nbsp;to&nbsp;specify&nbsp;a&nbsp;return&nbsp;pid&nbsp;and&nbsp;maybe&nbsp;this&nbsp;is&nbsp;causing&nbsp;upset&nbsp;in&nbsp;the&nbsp;channel.&lt;br&gt;&nbsp;&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;#'basic.consume_ok'{consumer_tag&nbsp;=&nbsp;ConsumerTag}&nbsp;=&nbsp;amqp_channel:call(Channel,&nbsp;BasicConsume,&nbsp;&lt;b&gt;self()&lt;/b&gt;),&nbsp;%%%&nbsp;Notice&nbsp;return&nbsp;pid&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;#'basic.cancel_ok'{consumer_tag&nbsp;=&nbsp;ConsumerTag}&nbsp;=&nbsp;amqp_channel:call(Channel,&nbsp;BasicCancel),&nbsp;%%%&nbsp;Notice&nbsp;-&nbsp;no&nbsp;return&nbsp;pid&lt;br&gt;&nbsp;&lt;br&gt;So&nbsp;maybe&nbsp;this&nbsp;should&nbsp;be&nbsp;added&nbsp;to&nbsp;the&nbsp;handling&nbsp;of&nbsp;basic.cancel?&nbsp;Why&nbsp;shouldn't&nbsp;a&nbsp;consumer&nbsp;cancel&nbsp;itself?&nbsp;In&nbsp;fact,&nbsp;why&nbsp;can't&nbsp;all&nbsp;client&nbsp;channel&nbsp;calls&nbsp;specify&nbsp;which&nbsp;PID&nbsp;is&nbsp;calling?&lt;/blockquote&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;As&nbsp;indicated&nbsp;above,&nbsp;you&nbsp;don't&nbsp;need&nbsp;a&nbsp;Pid&nbsp;to&nbsp;cancel&nbsp;a&nbsp;subscription,&nbsp;just&nbsp;the&nbsp;tag.&nbsp;So&nbsp;a&nbsp;consumer&nbsp;can&nbsp;cancel&nbsp;itself,&nbsp;if&nbsp;it&nbsp;wants&nbsp;to.&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;BTW,&nbsp;all&nbsp;channel&nbsp;calls&nbsp;are&nbsp;aware&nbsp;of&nbsp;the&nbsp;calling&nbsp;pid&nbsp;by&nbsp;default&nbsp;because&nbsp;the&nbsp;channel&nbsp;uses&nbsp;the&nbsp;gen_server&nbsp;behaviour.&nbsp;So&nbsp;if&nbsp;the&nbsp;channel&nbsp;needs&nbsp;to&nbsp;know&nbsp;which&nbsp;Pid&nbsp;invoked&nbsp;what&nbsp;call,&nbsp;it&nbsp;can.&nbsp;In&nbsp;general,&nbsp;it&nbsp;doesn't&nbsp;need&nbsp;to.&lt;/div&gt;&lt;br&gt;&lt;blockquote&nbsp;type=&quot;cite&quot;&gt;&lt;br&gt;&lt;br&gt;One&nbsp;other&nbsp;source&nbsp;of&nbsp;confusion&nbsp;for&nbsp;me&nbsp;is&nbsp;this:&nbsp;when&nbsp;sending&nbsp;an&nbsp;amqp_channel:basic.consume&nbsp;call,&nbsp;why&nbsp;is&nbsp;there&nbsp;both&nbsp;a&nbsp;synchronous&nbsp;response&nbsp;to&nbsp;the&nbsp;call&nbsp;itself&nbsp;and&nbsp;an&nbsp;asynchronous&nbsp;response&nbsp;on&nbsp;the&nbsp;channel?&lt;br&gt;&nbsp;&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;#'basic.consume_ok'{consumer_tag&nbsp;=&nbsp;ConsumerTag}&nbsp;=&nbsp;amqp_channel:call(Channel,&nbsp;BasicConsume,&nbsp;self()),&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;receive&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;#'basic.consume_ok'{consumer_tag&nbsp;=&nbsp;ConsumerTag}&nbsp;-&gt;&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;io:format(&quot;[~p]&nbsp;~p&nbsp;got&nbsp;consume_ok~n&quot;,&nbsp;[self(),&nbsp;BasicConsume#'basic.consume'.consumer_tag])&lt;br&gt;&nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;end.&lt;br&gt;&lt;br&gt;&lt;/blockquote&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;This&nbsp;question&nbsp;was&nbsp;answered&nbsp;above.&lt;/div&gt;&lt;/div&gt;&lt;br&gt;&lt;div&gt;HTH,&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;Ben&lt;/div&gt;&lt;/div&gt;&lt;/body&gt;&lt;/html&gt;
</tt>
