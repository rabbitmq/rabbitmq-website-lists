<tt>
HI&nbsp;Matthias,&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;Could&nbsp;you&nbsp;direct&nbsp;me&nbsp;to&nbsp;an&nbsp;example&nbsp;of&nbsp;how&nbsp;to&nbsp;set&nbsp;up&nbsp;a&nbsp;&amp;quot;stand&nbsp;alone&amp;quot;&nbsp;shovel?&lt;/div&gt;&lt;div&gt;The&nbsp;only&nbsp;example[1]&nbsp;i&nbsp;found&nbsp;is&nbsp;demonstrating&nbsp;an&nbsp;embedded&nbsp;shovel&nbsp;as&nbsp;rabbitmq&nbsp;plugin.&nbsp; This&nbsp;seems&nbsp;to&nbsp;be&nbsp;my&nbsp;degenerate&nbsp;case&nbsp;all&nbsp;over&nbsp;again.&nbsp; No?&lt;/div&gt;<br>
&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;[1] &lt;a&nbsp;href=&quot;http://hopper.squarespace.com/blog/2008/6/22/introducing-shovel-an-amqp-relay.html&quot;&gt;http://hopper.squarespace.com/blog/2008/6/22/introducing-shovel-an-amqp-relay.html&lt;/a&gt;&lt;/div&gt;&lt;div&gt; &lt;br&nbsp;clear=&quot;all&quot;&gt;<br>
Peter&nbsp;Fitzgibbons&lt;br&gt;(847)&nbsp;859-9550&lt;br&gt;Email:&nbsp;&lt;a&nbsp;href=&quot;mailto:peter.fitzgibbons@gmail.com&quot;&gt;peter.fitzgibbons@gmail.com&lt;/a&gt;&lt;br&gt;IM&nbsp;GTalk:&nbsp;peter.fitzgibbons&lt;br&gt;IM&nbsp;AOL:&nbsp;&lt;a&nbsp;href=&quot;mailto:peter.fitzgibbons@gmail.com&quot;&gt;peter.fitzgibbons@gmail.com&lt;/a&gt;&lt;br&gt;<br>
<br>
&lt;br&gt;&lt;br&gt;&lt;div&nbsp;class=&quot;gmail_quote&quot;&gt;On&nbsp;Sat,&nbsp;Feb&nbsp;6,&nbsp;2010&nbsp;at&nbsp;12:42&nbsp;PM,&nbsp;Matthias&nbsp;Radestock&nbsp;&lt;span&nbsp;dir=&quot;ltr&quot;&gt;&amp;lt;&lt;a&nbsp;href=&quot;mailto:matthias@lshift.net&quot;&gt;matthias@lshift.net&lt;/a&gt;&amp;gt;&lt;/span&gt;&nbsp;wrote:&lt;br&gt;&lt;blockquote&nbsp;class=&quot;gmail_quote&quot;&nbsp;style=&quot;margin:0&nbsp;0&nbsp;0&nbsp;.8ex;border-left:1px&nbsp;#ccc&nbsp;solid;padding-left:1ex;&quot;&gt;<br>
Peter,&lt;br&gt;<br>
&lt;br&gt;<br>
Peter&nbsp;Fitzgibbons&nbsp;wrote:&lt;br&gt;<br>
&lt;blockquote&nbsp;class=&quot;gmail_quote&quot;&nbsp;style=&quot;margin:0&nbsp;0&nbsp;0&nbsp;.8ex;border-left:1px&nbsp;#ccc&nbsp;solid;padding-left:1ex&quot;&gt;&lt;div&nbsp;class=&quot;im&quot;&gt;<br>
I&amp;#39;m&nbsp;thinking&nbsp;about&nbsp;how&nbsp;to&nbsp;handle&nbsp;client-connection&nbsp;failover.&nbsp; By&nbsp;this&lt;br&gt;<br>
I&nbsp;mean&nbsp;clientA&nbsp;has&nbsp;a&nbsp;producerP&nbsp;that&nbsp;needs&nbsp;to&nbsp;have&nbsp;reliable&nbsp;and&lt;br&gt;<br>
tolerant&nbsp;connections&nbsp;to&nbsp;rabbitA&nbsp;and&nbsp;rabbitB.&nbsp; This&nbsp;is&nbsp;so&nbsp;that&nbsp;if&nbsp;the&lt;br&gt;<br>
connection/pid&nbsp;of&nbsp;rabbitA&nbsp;goes&nbsp;down,&nbsp;producerP&nbsp;sends&nbsp;it&amp;#39;s&nbsp;next&nbsp;message&lt;br&gt;<br>
to&nbsp;rabbitB&nbsp;with&nbsp;as&nbsp;little&nbsp;handling&nbsp;(and&nbsp;wall-clock&nbsp;time)&nbsp;as&nbsp;possible.&lt;br&gt;&lt;/div&gt;<br>
[...]&lt;div&nbsp;class=&quot;im&quot;&gt;&lt;br&gt;<br>
The&nbsp;best&nbsp;solution&nbsp;I&nbsp;can&nbsp;think&nbsp;of&nbsp;right&nbsp;now&nbsp;is&nbsp;to&nbsp;have&nbsp;a&nbsp;rabbitP&nbsp;on&nbsp;the&lt;br&gt;<br>
same&nbsp;machine&nbsp;as&nbsp;producerP,&nbsp;which&nbsp;is&nbsp;clustered&nbsp;to&nbsp;the&nbsp;&amp;quot;real&amp;quot;&nbsp;cluster,&lt;br&gt;<br>
so&nbsp;if&nbsp;rabbitA&nbsp;goes&nbsp;down,&nbsp;the&nbsp;built-in&nbsp;clustering&nbsp;failover&nbsp;will&nbsp;handle&lt;br&gt;<br>
the&nbsp;proper&nbsp;interaction.&nbsp; My&nbsp;issue&nbsp;with&nbsp;this&nbsp;is&nbsp;considering&nbsp;how&nbsp;this&nbsp;is&lt;br&gt;<br>
configured&nbsp;and&nbsp;maintained&nbsp;when&nbsp;the&nbsp;farm&nbsp;of&nbsp;servers&nbsp;with&nbsp;producerP&nbsp;gets&lt;br&gt;<br>
to&nbsp;be&nbsp;1000+.&nbsp; Even&nbsp;if&nbsp;this&nbsp;doesn&amp;#39;t&nbsp;scale&nbsp;to&nbsp;the&nbsp;google-farm&nbsp;level,&lt;br&gt;<br>
what&nbsp;about&nbsp;farm&nbsp;=&nbsp;10,&nbsp;30&nbsp;?&lt;br&gt;<br>
&lt;/div&gt;&lt;/blockquote&gt;<br>
&lt;br&gt;&lt;div&gt;&lt;div&gt;&lt;/div&gt;&lt;div&nbsp;class=&quot;h5&quot;&gt;<br>
Having&nbsp;a&nbsp;local&nbsp;broker&nbsp;is&nbsp;indeed&nbsp;a&nbsp;common&nbsp;approach&nbsp;to&nbsp;get&nbsp;higher&nbsp;resilience,&nbsp;particularly&nbsp;since&nbsp;it&nbsp;allows&nbsp;producers&nbsp;to&nbsp;offload&nbsp;messages&nbsp;even&nbsp;when&nbsp;the&nbsp;connection&nbsp;to&nbsp;the&nbsp;main&nbsp;brokers&nbsp;is&nbsp;down&nbsp;for&nbsp;prolonged&nbsp;periods&nbsp;of&nbsp;time,&nbsp;e.g.&nbsp;in&nbsp;the&nbsp;event&nbsp;the&nbsp;main&nbsp;brokers&nbsp;are&nbsp;across&nbsp;a&nbsp;WAN&nbsp;and&nbsp;there&nbsp;is&nbsp;a&nbsp;WAN&nbsp;failure.&lt;br&gt;<br>
<br>
&lt;br&gt;<br>
As&nbsp;you&nbsp;suspect,&nbsp;making&nbsp;all&nbsp;these&nbsp;brokers&nbsp;part&nbsp;of&nbsp;a&nbsp;cluster&nbsp;would&nbsp;indeed&nbsp;be&nbsp;problematic&nbsp;for&nbsp;high&nbsp;node&nbsp;counts,&nbsp;even&nbsp;more&nbsp;so&nbsp;when&nbsp;going&nbsp;across&nbsp;a&nbsp;WAN.&nbsp;Besides,&nbsp;RabbitMQ&amp;#39;s&nbsp;clustering&nbsp;is&nbsp;really&nbsp;designed&nbsp;for&nbsp;scaling,&nbsp;not&nbsp;improved&nbsp;reliability.&lt;br&gt;<br>
<br>
&lt;br&gt;<br>
But&nbsp;you&nbsp;do&nbsp;not&nbsp;need&nbsp;to&nbsp;cluster&nbsp;the&nbsp;brokers.&nbsp;Instead&nbsp;you&nbsp;could&nbsp;stick&nbsp;our&nbsp;experimental&nbsp;shovel&nbsp;(see&nbsp;&lt;a&nbsp;href=&quot;http://www.lshift.net/blog/2010/02/01/rabbitmq-shovel-message-relocation-equipment&quot;&nbsp;target=&quot;_blank&quot;&gt;http://www.lshift.net/blog/2010/02/01/rabbitmq-shovel-message-relocation-equipment&lt;/a&gt;)&nbsp;onto&nbsp;each&nbsp;local&nbsp;node&nbsp;and&nbsp;configure&nbsp;it&nbsp;to&nbsp;shovel&nbsp;messages&nbsp;to&nbsp;the&nbsp;main&nbsp;broker&nbsp;pair.&nbsp;The&nbsp;shovel&nbsp;has&nbsp;built-in&nbsp;re-connection&nbsp;and&nbsp;failover&nbsp;logic&nbsp;for&nbsp;that.&lt;br&gt;<br>
<br>
&lt;br&gt;<br>
Of&nbsp;course&nbsp;having&nbsp;a&nbsp;local&nbsp;broker&nbsp;is&nbsp;no&nbsp;panacea&nbsp;for&nbsp;reliability,&nbsp;since&nbsp;that&nbsp;broker&nbsp;itself&nbsp;becomes&nbsp;a&nbsp;point&nbsp;of&nbsp;failure.&nbsp;Whether&nbsp;that&nbsp;is&nbsp;a&nbsp;problem&nbsp;depends&nbsp;on&nbsp;how&nbsp;high&nbsp;you&nbsp;place&nbsp;the&nbsp;reliability&nbsp;bar.&lt;br&gt;<br>
&lt;br&gt;<br>
An&nbsp;alternative&nbsp;approachh&nbsp;is&nbsp;to&nbsp;make&nbsp;the&nbsp;clients&nbsp;themselves&nbsp;deal&nbsp;with&nbsp;re-connection&nbsp;and&nbsp;failover.&nbsp;Check&nbsp;out&nbsp;the&nbsp;experimental&nbsp;&lt;a&nbsp;href=&quot;http://hg.rabbitmq.com/rabbitmq-java-messagepatterns/&quot;&nbsp;target=&quot;_blank&quot;&gt;http://hg.rabbitmq.com/rabbitmq-java-messagepatterns/&lt;/a&gt;&nbsp;and&nbsp;&lt;a&nbsp;href=&quot;http://hg.rabbitmq.com/rabbitmq-dotnet-messagepatterns/&quot;&nbsp;target=&quot;_blank&quot;&gt;http://hg.rabbitmq.com/rabbitmq-dotnet-messagepatterns/&lt;/a&gt;&nbsp;libraries&nbsp;which&nbsp;do&nbsp;that&nbsp;for&nbsp;a&nbsp;specific&nbsp;type&nbsp;of&nbsp;messaging&nbsp;(point-to-point,&nbsp;though&nbsp;most&nbsp;of&nbsp;the&nbsp;logic&nbsp;should&nbsp;be&nbsp;easily&nbsp;ported&nbsp;to&nbsp;other&nbsp;types).&lt;br&gt;<br>
<br>
&lt;br&gt;<br>
&lt;br&gt;<br>
Regards,&lt;br&gt;<br>
&lt;br&gt;<br>
Matthias&lt;br&gt;<br>
&lt;/div&gt;&lt;/div&gt;&lt;/blockquote&gt;&lt;/div&gt;&lt;br&gt;&lt;/div&gt;<br>

</tt>
