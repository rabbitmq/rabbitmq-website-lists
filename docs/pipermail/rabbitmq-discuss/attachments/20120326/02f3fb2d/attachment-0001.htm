<tt>
Thanks&nbsp;for&nbsp;the&nbsp;response.&nbsp;My&nbsp;response&nbsp;is&nbsp;inline&nbsp;below:&lt;br&gt;&lt;br&gt;On&nbsp;Monday,&nbsp;March&nbsp;26,&nbsp;2012&nbsp;7:11:13&nbsp;AM&nbsp;UTC-7,&nbsp;Steve&nbsp;Powell&nbsp;wrote:&lt;blockquote&nbsp;class=&quot;gmail_quote&quot;&nbsp;style=&quot;margin:&nbsp;0;margin-left:&nbsp;0.8ex;border-left:&nbsp;1px&nbsp;#ccc&nbsp;solid;padding-left:&nbsp;1ex;&quot;&gt;Hi&nbsp;Josh,&lt;p&gt;In&nbsp;the&nbsp;absence&nbsp;of&nbsp;the&nbsp;experts&nbsp;--&nbsp;you&nbsp;get&nbsp;me&nbsp;:-)&lt;/p&gt;&lt;p&gt;Questions&nbsp;that&nbsp;start&nbsp;'what&nbsp;is&nbsp;the&nbsp;best&nbsp;way&nbsp;to...'&nbsp;often&nbsp;have&nbsp;no&lt;br&gt;definitive&nbsp;answer,&nbsp;I'm&nbsp;afraid;&nbsp;but&nbsp;here&nbsp;goes.&lt;/p&gt;&lt;p&gt;First,&nbsp;I'm&nbsp;going&nbsp;to&nbsp;have&nbsp;to&nbsp;explain&nbsp;what&nbsp;I&nbsp;*think*&nbsp;you&nbsp;are&nbsp;asking&nbsp;about,&lt;br&gt;before&nbsp;trying&nbsp;to&nbsp;answer&nbsp;it.&lt;/p&gt;&lt;p&gt;&amp;nbsp;&nbsp;I&nbsp;assume&nbsp;you&nbsp;are&nbsp;asking&nbsp;about&nbsp;multiple&nbsp;Consumers,&nbsp;in&nbsp;a&nbsp;Java&nbsp;client,&nbsp;all&lt;br&gt;&amp;nbsp;&nbsp;consuming&nbsp;from&nbsp;the&nbsp;same&nbsp;queue,&nbsp;allowing&nbsp;'parallel'&nbsp;consumption&nbsp;--&nbsp;which&lt;br&gt;&amp;nbsp;&nbsp;I&nbsp;take&nbsp;to&nbsp;mean&nbsp;multi-threaded&nbsp;--&nbsp;within&nbsp;the&nbsp;same&nbsp;Java&nbsp;client.&nbsp;You&nbsp;want&lt;br&gt;&amp;nbsp;&nbsp;the&nbsp;'best'&nbsp;application&nbsp;structure&nbsp;which&nbsp;achieves&nbsp;'parallel'&nbsp;processing&nbsp;of&nbsp;&lt;br&gt;&amp;nbsp;&nbsp;messages&nbsp;from&nbsp;the&nbsp;queue.&lt;/p&gt;&lt;/blockquote&gt;&lt;div&gt;Yes&nbsp;-&nbsp;I&nbsp;have&nbsp;one&nbsp;client&nbsp;that&nbsp;is&nbsp;consuming&nbsp;from&nbsp;a&nbsp;single&nbsp;queue,&nbsp;and&nbsp;basically&nbsp;want&nbsp;to&nbsp;achieve&nbsp;the&nbsp;best&nbsp;throughput&nbsp;possible,&nbsp;whatever&nbsp;that&nbsp;means&nbsp;in&nbsp;terms&nbsp;of&nbsp;one&nbsp;or&nbsp;more&nbsp;connections,&nbsp;channels,&nbsp;consumers,&nbsp;and&nbsp;threads&nbsp;making&nbsp;use&nbsp;of&nbsp;these.&nbsp;This&nbsp;is&nbsp;the&nbsp;part&nbsp;I'm&nbsp;not&nbsp;sure&nbsp;about.&lt;/div&gt;&lt;div&gt;&amp;nbsp;&lt;/div&gt;&lt;blockquote&nbsp;class=&quot;gmail_quote&quot;&nbsp;style=&quot;margin:&nbsp;0;margin-left:&nbsp;0.8ex;border-left:&nbsp;1px&nbsp;#ccc&nbsp;solid;padding-left:&nbsp;1ex;&quot;&gt;&lt;p&gt;Well,&nbsp;there&nbsp;is&nbsp;nothing&nbsp;to&nbsp;stop&nbsp;you&nbsp;'registering'&nbsp;the&nbsp;same&nbsp;Consumer&lt;br&gt;instance&nbsp;more&nbsp;than&nbsp;once,&nbsp;with&nbsp;different&nbsp;consumer&nbsp;tags,&nbsp;so&nbsp;it&nbsp;is&nbsp;easy&nbsp;to&lt;br&gt;drive&nbsp;multiple&nbsp;'identical'&nbsp;Consumers.&nbsp;However,&nbsp;if&nbsp;you&nbsp;register&lt;br&gt;(Channel.basicConsume())&nbsp;on&nbsp;the&nbsp;same&nbsp;channel,&nbsp;the&nbsp;consumers&nbsp;will&nbsp;be&lt;br&gt;called&nbsp;serially&nbsp;(this&nbsp;is&nbsp;done&nbsp;to&nbsp;preserve&nbsp;the&nbsp;ordering&nbsp;of&nbsp;messages&lt;br&gt;processed&nbsp;on&nbsp;a&nbsp;channel).&lt;/p&gt;&lt;p&gt;No&nbsp;doubt&nbsp;you've&nbsp;read&nbsp;the&nbsp;blurb&nbsp;on&nbsp;the&nbsp;Java&nbsp;Client&nbsp;API&nbsp;doc&nbsp;pages&lt;br&gt;(&lt;a&nbsp;href=&quot;http://www.rabbitmq.com/api-guide.html#consuming&quot;&nbsp;target=&quot;_blank&quot;&gt;http://www.rabbitmq.com/api-&lt;wbr&gt;guide.html#consuming&lt;/a&gt;)&nbsp;which&nbsp;says:&lt;/p&gt;&lt;p&gt;&amp;gt;&nbsp;Callbacks&nbsp;to&nbsp;Consumers&nbsp;are&nbsp;dispatched&nbsp;on&nbsp;a&nbsp;thread&nbsp;separate&nbsp;from&nbsp;the&lt;br&gt;&amp;gt;&nbsp;thread&nbsp;managed&nbsp;by&nbsp;the&nbsp;Connection.&nbsp;This&nbsp;means&nbsp;that&nbsp;Consumers&nbsp;can&nbsp;safely&lt;br&gt;&amp;gt;&nbsp;call&nbsp;blocking&nbsp;methods&nbsp;on&nbsp;the&nbsp;Connection&nbsp;or&nbsp;Channel,&nbsp;such&nbsp;asqueueDeclare,&lt;br&gt;&amp;gt;&nbsp;txCommit,&nbsp;basicCancel&nbsp;or&nbsp;basicPublish.&lt;br&gt;&amp;gt;&nbsp;&lt;br&gt;&amp;gt;&nbsp;Each&nbsp;Channel&nbsp;has&nbsp;its&nbsp;own&nbsp;dispatch&nbsp;thread.&nbsp;For&nbsp;the&nbsp;most&nbsp;common&nbsp;use&nbsp;case&lt;br&gt;&amp;gt;&nbsp;of&nbsp;one&nbsp;Consumer&nbsp;per&nbsp;Channel,&nbsp;this&nbsp;means&nbsp;Consumers&nbsp;do&nbsp;not&nbsp;hold&nbsp;up&nbsp;other&lt;br&gt;&amp;gt;&nbsp;Consumers.&nbsp;If&nbsp;you&nbsp;have&nbsp;multiple&nbsp;Consumers&nbsp;per&nbsp;Channel&nbsp;be&nbsp;aware&nbsp;that&nbsp;a&lt;br&gt;&amp;gt;&nbsp;long-running&nbsp;Consumer&nbsp;may&nbsp;hold&nbsp;up&nbsp;dispatch&nbsp;of&nbsp;callbacks&nbsp;to&nbsp;other&lt;br&gt;&amp;gt;&nbsp;Consumers&nbsp;on&nbsp;that&nbsp;Channel.&lt;/p&gt;&lt;p&gt;and&nbsp;the&nbsp;section&nbsp;on&nbsp;advanced&nbsp;connection&nbsp;options&nbsp;mentions&nbsp;a&nbsp;thread-pool&lt;br&gt;(by&nbsp;default&nbsp;containing&nbsp;5&nbsp;threads)&nbsp;associated&nbsp;with&nbsp;the&nbsp;connection.&lt;/p&gt;&lt;p&gt;What&nbsp;this&nbsp;all&nbsp;means&nbsp;is&nbsp;that&nbsp;*on&nbsp;each&nbsp;channel*&nbsp;Consumer&nbsp;callbacks&nbsp;are&lt;br&gt;called&nbsp;serially.&nbsp;No&nbsp;overlapping&nbsp;there,&nbsp;so&nbsp;no&nbsp;chance&nbsp;to&nbsp;consume&nbsp;'in&lt;br&gt;parallel',&nbsp;so&nbsp;distinct&nbsp;*channels*&nbsp;(on&nbsp;the&nbsp;same&nbsp;connection)&nbsp;are&nbsp;allowed&lt;br&gt;to&nbsp;run&nbsp;their&nbsp;consumers&nbsp;in&nbsp;parallel&nbsp;(up&nbsp;to&nbsp;five&nbsp;may&nbsp;run&nbsp;concurrently,&nbsp;in&lt;br&gt;the&nbsp;default&nbsp;case).&lt;/p&gt;&lt;p&gt;So,&nbsp;to&nbsp;'consume'&nbsp;messages&nbsp;in&nbsp;parallel&nbsp;from&nbsp;a&nbsp;single&nbsp;queue&nbsp;you&nbsp;need&nbsp;to&lt;br&gt;have&nbsp;the&nbsp;consumers&nbsp;on&nbsp;separate&nbsp;channels.&nbsp;Now,&nbsp;if&nbsp;you&nbsp;define&nbsp;a&nbsp;single&lt;br&gt;Consumer&nbsp;instance,&nbsp;and&nbsp;get&nbsp;it&nbsp;to&nbsp;be&nbsp;invoked&nbsp;on&nbsp;multiple&nbsp;threads&lt;br&gt;concurrently&nbsp;(on&nbsp;separate&nbsp;channels)&nbsp;you&nbsp;have&nbsp;to&nbsp;be&nbsp;careful&nbsp;--&nbsp;the&nbsp;code&lt;br&gt;in&nbsp;your&nbsp;Consumer&nbsp;must&nbsp;be&nbsp;thread-safe,&nbsp;and&nbsp;probably&nbsp;more&nbsp;than&nbsp;just&nbsp;that,&lt;br&gt;too.&nbsp;I'll&nbsp;assume&nbsp;you&nbsp;know&nbsp;what&nbsp;you&nbsp;are&nbsp;doing.&nbsp;&lt;/p&gt;&lt;/blockquote&gt;&lt;div&gt;&amp;nbsp;&lt;/div&gt;&lt;blockquote&nbsp;class=&quot;gmail_quote&quot;&nbsp;style=&quot;margin:&nbsp;0;margin-left:&nbsp;0.8ex;border-left:&nbsp;1px&nbsp;#ccc&nbsp;solid;padding-left:&nbsp;1ex;&quot;&gt;&lt;p&gt;If&nbsp;you&nbsp;create&nbsp;one&nbsp;Consumer&lt;br&gt;instance&nbsp;for&nbsp;each&nbsp;channel,&nbsp;RabbitMQ&nbsp;will&nbsp;guarantee&nbsp;that&nbsp;each&nbsp;channel's&lt;br&gt;Consumer&nbsp;is&nbsp;running&nbsp;on&nbsp;one&nbsp;thread,&nbsp;so&nbsp;the&nbsp;rules&nbsp;are&nbsp;simpler.&lt;/p&gt;&lt;p&gt;There&nbsp;is&nbsp;another&nbsp;option.&nbsp;Provided&nbsp;you&nbsp;are&nbsp;prepared&nbsp;to&nbsp;separate&lt;br&gt;consumption&nbsp;from&nbsp;processing&nbsp;(and&nbsp;possibly&nbsp;acknowledgement)&nbsp;you&nbsp;can&lt;br&gt;register&nbsp;a&nbsp;single&nbsp;consumer&nbsp;which&nbsp;does&nbsp;very&nbsp;little&nbsp;except&nbsp;pass&nbsp;the&lt;br&gt;message&nbsp;to&nbsp;another&nbsp;(worker)&nbsp;thread&nbsp;to&nbsp;do&nbsp;the&nbsp;actual&nbsp;processing.&lt;/p&gt;&lt;/blockquote&gt;&lt;blockquote&nbsp;class=&quot;gmail_quote&quot;&nbsp;style=&quot;margin:&nbsp;0;margin-left:&nbsp;0.8ex;border-left:&nbsp;1px&nbsp;#ccc&nbsp;solid;padding-left:&nbsp;1ex;&quot;&gt;&lt;p&gt;The&lt;br&gt;Consumer&nbsp;doesn't&nbsp;have&nbsp;to&nbsp;be&nbsp;sophisticated,&nbsp;but&nbsp;your&nbsp;dispatching&lt;br&gt;mechanism&nbsp;needs&nbsp;to&nbsp;be:&nbsp;you&nbsp;mustn't&nbsp;lose&nbsp;messages,&nbsp;and&nbsp;you&nbsp;must&nbsp;ensure&lt;br&gt;that&nbsp;you&nbsp;acknowledge&nbsp;them&nbsp;at&nbsp;some&nbsp;point&nbsp;(which&nbsp;may&nbsp;not&nbsp;be&nbsp;straight&lt;br&gt;away).&nbsp;Still,&nbsp;if&nbsp;you&nbsp;are&nbsp;adept&nbsp;at&nbsp;Java&nbsp;concurrent&nbsp;programming&nbsp;these&nbsp;are&lt;br&gt;all&nbsp;achievable.&nbsp;&lt;/p&gt;&lt;/blockquote&gt;&lt;div&gt;This&nbsp;is&nbsp;the&nbsp;approach&nbsp;I've&nbsp;taken&nbsp;so&nbsp;far.&nbsp;I&nbsp;have&nbsp;a&nbsp;single&nbsp;Connection,&nbsp;Channel&nbsp;and&nbsp;Consumer&nbsp;and&nbsp;a&nbsp;single&nbsp;thread&nbsp;that&nbsp;loop&nbsp;on&nbsp;consumer.nextDelivery().&nbsp;As&nbsp;soon&nbsp;as&nbsp;consumer.nextDelivery()&nbsp;returns,&nbsp;the&nbsp;message&nbsp;is&nbsp;acknowledged&nbsp;and&nbsp;handed&nbsp;off&nbsp;to&nbsp;a&nbsp;separate&nbsp;thread&nbsp;pool&nbsp;for&nbsp;processing,&nbsp;allowing&nbsp;the&nbsp;thread&nbsp;to&nbsp;move&nbsp;on&nbsp;to&nbsp;the&nbsp;next&nbsp;delivery.&amp;nbsp;&lt;/div&gt;&lt;div&gt;&amp;nbsp;&lt;/div&gt;&lt;blockquote&nbsp;class=&quot;gmail_quote&quot;&nbsp;style=&quot;margin:&nbsp;0;margin-left:&nbsp;0.8ex;border-left:&nbsp;1px&nbsp;#ccc&nbsp;solid;padding-left:&nbsp;1ex;&quot;&gt;&lt;p&gt;By&nbsp;managing&nbsp;your&nbsp;own&nbsp;worker&nbsp;threads&nbsp;you&nbsp;can&nbsp;achieve&nbsp;your&lt;br&gt;own&nbsp;dispatching&nbsp;and&nbsp;resource&nbsp;management&nbsp;rules,&nbsp;and&nbsp;by&nbsp;setting&nbsp;the&lt;br&gt;pre-fetch&nbsp;count&nbsp;(Qos)&nbsp;and&nbsp;managing&nbsp;acknowledgements&nbsp;you&nbsp;can&nbsp;gate&nbsp;the&lt;br&gt;amount&nbsp;of&nbsp;work&nbsp;done&nbsp;in&nbsp;parallel,&nbsp;and&nbsp;even&nbsp;decide&nbsp;which&nbsp;workers&nbsp;get&nbsp;which&lt;br&gt;messages.&lt;/p&gt;&lt;p&gt;Which&nbsp;of&nbsp;these&nbsp;is&nbsp;'best'&nbsp;depends&nbsp;a&nbsp;lot&nbsp;on&nbsp;your&nbsp;requirements.&nbsp;If&nbsp;you&nbsp;need&lt;br&gt;just&nbsp;a&nbsp;little&nbsp;more&nbsp;control&nbsp;over&nbsp;the&nbsp;processing&nbsp;threads&nbsp;but&nbsp;don't&nbsp;want&nbsp;to&lt;br&gt;'roll-your-own'&nbsp;dispatcher&nbsp;mechanism&nbsp;there&nbsp;is&nbsp;an&nbsp;option&nbsp;for&nbsp;you&nbsp;to&lt;br&gt;supply&nbsp;your&nbsp;own&nbsp;ExecutorService&nbsp;for&nbsp;the&nbsp;RabbitMQ&nbsp;Connection&nbsp;to&nbsp;use,&nbsp;and&lt;br&gt;Java&nbsp;supplies&nbsp;some&nbsp;standard&nbsp;ExecutorService&nbsp;implementations&nbsp;which&nbsp;allow&lt;br&gt;you&nbsp;to&nbsp;do&nbsp;some&nbsp;of&nbsp;the&nbsp;management&nbsp;without&nbsp;considerable&nbsp;effort.&lt;/p&gt;&lt;/blockquote&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;My&nbsp;requirements&nbsp;are&nbsp;simply&nbsp;to&nbsp;maximize&nbsp;throughput&nbsp;of&nbsp;my&nbsp;message&nbsp;consumption.&nbsp;Rolling&nbsp;my&nbsp;own&nbsp;dispatcher&nbsp;is&nbsp;probably&nbsp;a&nbsp;bit&nbsp;much.&amp;nbsp;Any&nbsp;alternative&nbsp;configuration&nbsp;recommendations&nbsp;(to&nbsp;the&nbsp;single&nbsp;Connection,&nbsp;Channel,&nbsp;Consumer&nbsp;setup),&nbsp;for&nbsp;maximizing&nbsp;throughput&nbsp;would&nbsp;be&nbsp;appreciated.&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;Thanks,&lt;/div&gt;&lt;div&gt;Josh&lt;/div&gt;&lt;div&gt;&amp;nbsp;&lt;/div&gt;&lt;blockquote&nbsp;class=&quot;gmail_quote&quot;&nbsp;style=&quot;margin:&nbsp;0;margin-left:&nbsp;0.8ex;border-left:&nbsp;1px&nbsp;#ccc&nbsp;solid;padding-left:&nbsp;1ex;&quot;&gt;&lt;p&gt;My&nbsp;general&nbsp;advice&nbsp;is&nbsp;that&nbsp;this&nbsp;might&nbsp;be&nbsp;a&nbsp;lot&nbsp;of&nbsp;work,&nbsp;and&nbsp;you&nbsp;should&lt;br&gt;consider&nbsp;investing&nbsp;in&nbsp;a&nbsp;sophisticated&nbsp;system&nbsp;only&nbsp;if&nbsp;you&nbsp;have&nbsp;determined&lt;br&gt;that&nbsp;you&nbsp;really&nbsp;need&nbsp;the&nbsp;advantages&nbsp;it&nbsp;might&nbsp;bring.&nbsp;Be&nbsp;aware&nbsp;that&nbsp;these&lt;br&gt;may&nbsp;not&nbsp;include&nbsp;faster&nbsp;throughput,&nbsp;and&nbsp;might&nbsp;upset&nbsp;any&nbsp;ordering&lt;br&gt;guarantees&nbsp;you&nbsp;may&nbsp;be&nbsp;relying&nbsp;upon&nbsp;at&nbsp;present.&lt;/p&gt;&lt;p&gt;I&nbsp;hope&nbsp;this&nbsp;helps.&lt;/p&gt;&lt;p&gt;Steve&nbsp;Powell&nbsp;&amp;nbsp;(a&nbsp;happy&nbsp;kitten)&lt;br&gt;----------some&nbsp;more&nbsp;definitions&nbsp;from&nbsp;the&nbsp;SPD----------&lt;br&gt;chinchilla&nbsp;(n.)&nbsp;Cooling&nbsp;device&nbsp;for&nbsp;the&nbsp;lower&nbsp;jaw.&lt;br&gt;socialcast&nbsp;(n.)&nbsp;Someone&nbsp;to&nbsp;whom&nbsp;everyone&nbsp;is&nbsp;speaking&nbsp;but&nbsp;nobody&nbsp;likes.&lt;br&gt;literacy&nbsp;(n.)&nbsp;A&nbsp;textually&nbsp;transmitted&nbsp;disease&nbsp;usually&nbsp;contracted&nbsp;in&nbsp;childhood.&lt;/p&gt;&lt;p&gt;On&nbsp;22&nbsp;Mar&nbsp;2012,&nbsp;at&nbsp;18:20,&nbsp;Josh&nbsp;Stone&nbsp;wrote:&lt;/p&gt;&lt;p&gt;&amp;gt;&nbsp;I&nbsp;wanted&nbsp;to&nbsp;ask&nbsp;the&nbsp;experts&nbsp;since&nbsp;it's&nbsp;not&nbsp;clear&nbsp;to&nbsp;me&nbsp;-&nbsp;what&nbsp;is&nbsp;the&nbsp;best&nbsp;way&nbsp;to&nbsp;parallelize&nbsp;message&nbsp;consumption&nbsp;from&nbsp;a&nbsp;single&nbsp;queue,&nbsp;using&nbsp;the&nbsp;Java&nbsp;client?&nbsp;&lt;br&gt;&amp;gt;&nbsp;&lt;br&gt;&amp;gt;&nbsp;Thanks,&lt;br&gt;&amp;gt;&nbsp;Josh&lt;br&gt;&amp;gt;&nbsp;______________________________&lt;wbr&gt;_________________&lt;br&gt;&amp;gt;&nbsp;rabbitmq-discuss&nbsp;mailing&nbsp;list&lt;br&gt;&amp;gt;&nbsp;&lt;a&nbsp;href=&quot;mailto:rabbitmq-discuss@lists.rabbitmq.com&quot;&nbsp;target=&quot;_blank&quot;&gt;rabbitmq-discuss@lists.&lt;wbr&gt;rabbitmq.com&lt;/a&gt;&lt;br&gt;&amp;gt;&nbsp;&lt;a&nbsp;href=&quot;https://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss&quot;&nbsp;target=&quot;_blank&quot;&gt;https://lists.rabbitmq.com/&lt;wbr&gt;cgi-bin/mailman/listinfo/&lt;wbr&gt;rabbitmq-discuss&lt;/a&gt;&lt;/p&gt;&lt;p&gt;______________________________&lt;wbr&gt;_________________&lt;br&gt;rabbitmq-discuss&nbsp;mailing&nbsp;list&lt;br&gt;&lt;a&nbsp;href=&quot;mailto:rabbitmq-discuss@lists.rabbitmq.com&quot;&nbsp;target=&quot;_blank&quot;&gt;rabbitmq-discuss@lists.&lt;wbr&gt;rabbitmq.com&lt;/a&gt;&lt;br&gt;&lt;a&nbsp;href=&quot;https://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss&quot;&nbsp;target=&quot;_blank&quot;&gt;https://lists.rabbitmq.com/&lt;wbr&gt;cgi-bin/mailman/listinfo/&lt;wbr&gt;rabbitmq-discuss&lt;/a&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;br&gt;On&nbsp;Monday,&nbsp;March&nbsp;26,&nbsp;2012&nbsp;7:11:13&nbsp;AM&nbsp;UTC-7,&nbsp;Steve&nbsp;Powell&nbsp;wrote:&lt;blockquote&nbsp;class=&quot;gmail_quote&quot;&nbsp;style=&quot;margin:&nbsp;0;margin-left:&nbsp;0.8ex;border-left:&nbsp;1px&nbsp;#ccc&nbsp;solid;padding-left:&nbsp;1ex;&quot;&gt;Hi&nbsp;Josh,&lt;p&gt;In&nbsp;the&nbsp;absence&nbsp;of&nbsp;the&nbsp;experts&nbsp;--&nbsp;you&nbsp;get&nbsp;me&nbsp;:-)&lt;/p&gt;&lt;p&gt;Questions&nbsp;that&nbsp;start&nbsp;'what&nbsp;is&nbsp;the&nbsp;best&nbsp;way&nbsp;to...'&nbsp;often&nbsp;have&nbsp;no&lt;br&gt;definitive&nbsp;answer,&nbsp;I'm&nbsp;afraid;&nbsp;but&nbsp;here&nbsp;goes.&lt;/p&gt;&lt;p&gt;First,&nbsp;I'm&nbsp;going&nbsp;to&nbsp;have&nbsp;to&nbsp;explain&nbsp;what&nbsp;I&nbsp;*think*&nbsp;you&nbsp;are&nbsp;asking&nbsp;about,&lt;br&gt;before&nbsp;trying&nbsp;to&nbsp;answer&nbsp;it.&lt;/p&gt;&lt;p&gt;&amp;nbsp;&nbsp;I&nbsp;assume&nbsp;you&nbsp;are&nbsp;asking&nbsp;about&nbsp;multiple&nbsp;Consumers,&nbsp;in&nbsp;a&nbsp;Java&nbsp;client,&nbsp;all&lt;br&gt;&amp;nbsp;&nbsp;consuming&nbsp;from&nbsp;the&nbsp;same&nbsp;queue,&nbsp;allowing&nbsp;'parallel'&nbsp;consumption&nbsp;--&nbsp;which&lt;br&gt;&amp;nbsp;&nbsp;I&nbsp;take&nbsp;to&nbsp;mean&nbsp;multi-threaded&nbsp;--&nbsp;within&nbsp;the&nbsp;same&nbsp;Java&nbsp;client.&nbsp;You&nbsp;want&lt;br&gt;&amp;nbsp;&nbsp;the&nbsp;'best'&nbsp;application&nbsp;structure&nbsp;which&nbsp;achieves&nbsp;'parallel'&nbsp;processing&nbsp;of&nbsp;&lt;br&gt;&amp;nbsp;&nbsp;messages&nbsp;from&nbsp;the&nbsp;queue.&lt;/p&gt;&lt;p&gt;Well,&nbsp;there&nbsp;is&nbsp;nothing&nbsp;to&nbsp;stop&nbsp;you&nbsp;'registering'&nbsp;the&nbsp;same&nbsp;Consumer&lt;br&gt;instance&nbsp;more&nbsp;than&nbsp;once,&nbsp;with&nbsp;different&nbsp;consumer&nbsp;tags,&nbsp;so&nbsp;it&nbsp;is&nbsp;easy&nbsp;to&lt;br&gt;drive&nbsp;multiple&nbsp;'identical'&nbsp;Consumers.&nbsp;However,&nbsp;if&nbsp;you&nbsp;register&lt;br&gt;(Channel.basicConsume())&nbsp;on&nbsp;the&nbsp;same&nbsp;channel,&nbsp;the&nbsp;consumers&nbsp;will&nbsp;be&lt;br&gt;called&nbsp;serially&nbsp;(this&nbsp;is&nbsp;done&nbsp;to&nbsp;preserve&nbsp;the&nbsp;ordering&nbsp;of&nbsp;messages&lt;br&gt;processed&nbsp;on&nbsp;a&nbsp;channel).&lt;/p&gt;&lt;p&gt;No&nbsp;doubt&nbsp;you've&nbsp;read&nbsp;the&nbsp;blurb&nbsp;on&nbsp;the&nbsp;Java&nbsp;Client&nbsp;API&nbsp;doc&nbsp;pages&lt;br&gt;(&lt;a&nbsp;href=&quot;http://www.rabbitmq.com/api-guide.html#consuming&quot;&nbsp;target=&quot;_blank&quot;&gt;http://www.rabbitmq.com/api-&lt;wbr&gt;guide.html#consuming&lt;/a&gt;)&nbsp;which&nbsp;says:&lt;/p&gt;&lt;p&gt;&amp;gt;&nbsp;Callbacks&nbsp;to&nbsp;Consumers&nbsp;are&nbsp;dispatched&nbsp;on&nbsp;a&nbsp;thread&nbsp;separate&nbsp;from&nbsp;the&lt;br&gt;&amp;gt;&nbsp;thread&nbsp;managed&nbsp;by&nbsp;the&nbsp;Connection.&nbsp;This&nbsp;means&nbsp;that&nbsp;Consumers&nbsp;can&nbsp;safely&lt;br&gt;&amp;gt;&nbsp;call&nbsp;blocking&nbsp;methods&nbsp;on&nbsp;the&nbsp;Connection&nbsp;or&nbsp;Channel,&nbsp;such&nbsp;asqueueDeclare,&lt;br&gt;&amp;gt;&nbsp;txCommit,&nbsp;basicCancel&nbsp;or&nbsp;basicPublish.&lt;br&gt;&amp;gt;&nbsp;&lt;br&gt;&amp;gt;&nbsp;Each&nbsp;Channel&nbsp;has&nbsp;its&nbsp;own&nbsp;dispatch&nbsp;thread.&nbsp;For&nbsp;the&nbsp;most&nbsp;common&nbsp;use&nbsp;case&lt;br&gt;&amp;gt;&nbsp;of&nbsp;one&nbsp;Consumer&nbsp;per&nbsp;Channel,&nbsp;this&nbsp;means&nbsp;Consumers&nbsp;do&nbsp;not&nbsp;hold&nbsp;up&nbsp;other&lt;br&gt;&amp;gt;&nbsp;Consumers.&nbsp;If&nbsp;you&nbsp;have&nbsp;multiple&nbsp;Consumers&nbsp;per&nbsp;Channel&nbsp;be&nbsp;aware&nbsp;that&nbsp;a&lt;br&gt;&amp;gt;&nbsp;long-running&nbsp;Consumer&nbsp;may&nbsp;hold&nbsp;up&nbsp;dispatch&nbsp;of&nbsp;callbacks&nbsp;to&nbsp;other&lt;br&gt;&amp;gt;&nbsp;Consumers&nbsp;on&nbsp;that&nbsp;Channel.&lt;/p&gt;&lt;p&gt;and&nbsp;the&nbsp;section&nbsp;on&nbsp;advanced&nbsp;connection&nbsp;options&nbsp;mentions&nbsp;a&nbsp;thread-pool&lt;br&gt;(by&nbsp;default&nbsp;containing&nbsp;5&nbsp;threads)&nbsp;associated&nbsp;with&nbsp;the&nbsp;connection.&lt;/p&gt;&lt;p&gt;What&nbsp;this&nbsp;all&nbsp;means&nbsp;is&nbsp;that&nbsp;*on&nbsp;each&nbsp;channel*&nbsp;Consumer&nbsp;callbacks&nbsp;are&lt;br&gt;called&nbsp;serially.&nbsp;No&nbsp;overlapping&nbsp;there,&nbsp;so&nbsp;no&nbsp;chance&nbsp;to&nbsp;consume&nbsp;'in&lt;br&gt;parallel',&nbsp;so&nbsp;distinct&nbsp;*channels*&nbsp;(on&nbsp;the&nbsp;same&nbsp;connection)&nbsp;are&nbsp;allowed&lt;br&gt;to&nbsp;run&nbsp;their&nbsp;consumers&nbsp;in&nbsp;parallel&nbsp;(up&nbsp;to&nbsp;five&nbsp;may&nbsp;run&nbsp;concurrently,&nbsp;in&lt;br&gt;the&nbsp;default&nbsp;case).&lt;/p&gt;&lt;p&gt;So,&nbsp;to&nbsp;'consume'&nbsp;messages&nbsp;in&nbsp;parallel&nbsp;from&nbsp;a&nbsp;single&nbsp;queue&nbsp;you&nbsp;need&nbsp;to&lt;br&gt;have&nbsp;the&nbsp;consumers&nbsp;on&nbsp;separate&nbsp;channels.&nbsp;Now,&nbsp;if&nbsp;you&nbsp;define&nbsp;a&nbsp;single&lt;br&gt;Consumer&nbsp;instance,&nbsp;and&nbsp;get&nbsp;it&nbsp;to&nbsp;be&nbsp;invoked&nbsp;on&nbsp;multiple&nbsp;threads&lt;br&gt;concurrently&nbsp;(on&nbsp;separate&nbsp;channels)&nbsp;you&nbsp;have&nbsp;to&nbsp;be&nbsp;careful&nbsp;--&nbsp;the&nbsp;code&lt;br&gt;in&nbsp;your&nbsp;Consumer&nbsp;must&nbsp;be&nbsp;thread-safe,&nbsp;and&nbsp;probably&nbsp;more&nbsp;than&nbsp;just&nbsp;that,&lt;br&gt;too.&nbsp;I'll&nbsp;assume&nbsp;you&nbsp;know&nbsp;what&nbsp;you&nbsp;are&nbsp;doing.&nbsp;If&nbsp;you&nbsp;create&nbsp;one&nbsp;Consumer&lt;br&gt;instance&nbsp;for&nbsp;each&nbsp;channel,&nbsp;RabbitMQ&nbsp;will&nbsp;guarantee&nbsp;that&nbsp;each&nbsp;channel's&lt;br&gt;Consumer&nbsp;is&nbsp;running&nbsp;on&nbsp;one&nbsp;thread,&nbsp;so&nbsp;the&nbsp;rules&nbsp;are&nbsp;simpler.&lt;/p&gt;&lt;p&gt;There&nbsp;is&nbsp;another&nbsp;option.&nbsp;Provided&nbsp;you&nbsp;are&nbsp;prepared&nbsp;to&nbsp;separate&lt;br&gt;consumption&nbsp;from&nbsp;processing&nbsp;(and&nbsp;possibly&nbsp;acknowledgement)&nbsp;you&nbsp;can&lt;br&gt;register&nbsp;a&nbsp;single&nbsp;consumer&nbsp;which&nbsp;does&nbsp;very&nbsp;little&nbsp;except&nbsp;pass&nbsp;the&lt;br&gt;message&nbsp;to&nbsp;another&nbsp;(worker)&nbsp;thread&nbsp;to&nbsp;do&nbsp;the&nbsp;actual&nbsp;processing.&nbsp;The&lt;br&gt;Consumer&nbsp;doesn't&nbsp;have&nbsp;to&nbsp;be&nbsp;sophisticated,&nbsp;but&nbsp;your&nbsp;dispatching&lt;br&gt;mechanism&nbsp;needs&nbsp;to&nbsp;be:&nbsp;you&nbsp;mustn't&nbsp;lose&nbsp;messages,&nbsp;and&nbsp;you&nbsp;must&nbsp;ensure&lt;br&gt;that&nbsp;you&nbsp;acknowledge&nbsp;them&nbsp;at&nbsp;some&nbsp;point&nbsp;(which&nbsp;may&nbsp;not&nbsp;be&nbsp;straight&lt;br&gt;away).&nbsp;Still,&nbsp;if&nbsp;you&nbsp;are&nbsp;adept&nbsp;at&nbsp;Java&nbsp;concurrent&nbsp;programming&nbsp;these&nbsp;are&lt;br&gt;all&nbsp;achievable.&nbsp;By&nbsp;managing&nbsp;your&nbsp;own&nbsp;worker&nbsp;threads&nbsp;you&nbsp;can&nbsp;achieve&nbsp;your&lt;br&gt;own&nbsp;dispatching&nbsp;and&nbsp;resource&nbsp;management&nbsp;rules,&nbsp;and&nbsp;by&nbsp;setting&nbsp;the&lt;br&gt;pre-fetch&nbsp;count&nbsp;(Qos)&nbsp;and&nbsp;managing&nbsp;acknowledgements&nbsp;you&nbsp;can&nbsp;gate&nbsp;the&lt;br&gt;amount&nbsp;of&nbsp;work&nbsp;done&nbsp;in&nbsp;parallel,&nbsp;and&nbsp;even&nbsp;decide&nbsp;which&nbsp;workers&nbsp;get&nbsp;which&lt;br&gt;messages.&lt;/p&gt;&lt;p&gt;Which&nbsp;of&nbsp;these&nbsp;is&nbsp;'best'&nbsp;depends&nbsp;a&nbsp;lot&nbsp;on&nbsp;your&nbsp;requirements.&nbsp;If&nbsp;you&nbsp;need&lt;br&gt;just&nbsp;a&nbsp;little&nbsp;more&nbsp;control&nbsp;over&nbsp;the&nbsp;processing&nbsp;threads&nbsp;but&nbsp;don't&nbsp;want&nbsp;to&lt;br&gt;'roll-your-own'&nbsp;dispatcher&nbsp;mechanism&nbsp;there&nbsp;is&nbsp;an&nbsp;option&nbsp;for&nbsp;you&nbsp;to&lt;br&gt;supply&nbsp;your&nbsp;own&nbsp;ExecutorService&nbsp;for&nbsp;the&nbsp;RabbitMQ&nbsp;Connection&nbsp;to&nbsp;use,&nbsp;and&lt;br&gt;Java&nbsp;supplies&nbsp;some&nbsp;standard&nbsp;ExecutorService&nbsp;implementations&nbsp;which&nbsp;allow&lt;br&gt;you&nbsp;to&nbsp;do&nbsp;some&nbsp;of&nbsp;the&nbsp;management&nbsp;without&nbsp;considerable&nbsp;effort.&lt;/p&gt;&lt;p&gt;My&nbsp;general&nbsp;advice&nbsp;is&nbsp;that&nbsp;this&nbsp;might&nbsp;be&nbsp;a&nbsp;lot&nbsp;of&nbsp;work,&nbsp;and&nbsp;you&nbsp;should&lt;br&gt;consider&nbsp;investing&nbsp;in&nbsp;a&nbsp;sophisticated&nbsp;system&nbsp;only&nbsp;if&nbsp;you&nbsp;have&nbsp;determined&lt;br&gt;that&nbsp;you&nbsp;really&nbsp;need&nbsp;the&nbsp;advantages&nbsp;it&nbsp;might&nbsp;bring.&nbsp;Be&nbsp;aware&nbsp;that&nbsp;these&lt;br&gt;may&nbsp;not&nbsp;include&nbsp;faster&nbsp;throughput,&nbsp;and&nbsp;might&nbsp;upset&nbsp;any&nbsp;ordering&lt;br&gt;guarantees&nbsp;you&nbsp;may&nbsp;be&nbsp;relying&nbsp;upon&nbsp;at&nbsp;present.&lt;/p&gt;&lt;p&gt;I&nbsp;hope&nbsp;this&nbsp;helps.&lt;/p&gt;&lt;p&gt;Steve&nbsp;Powell&nbsp;&amp;nbsp;(a&nbsp;happy&nbsp;kitten)&lt;br&gt;----------some&nbsp;more&nbsp;definitions&nbsp;from&nbsp;the&nbsp;SPD----------&lt;br&gt;chinchilla&nbsp;(n.)&nbsp;Cooling&nbsp;device&nbsp;for&nbsp;the&nbsp;lower&nbsp;jaw.&lt;br&gt;socialcast&nbsp;(n.)&nbsp;Someone&nbsp;to&nbsp;whom&nbsp;everyone&nbsp;is&nbsp;speaking&nbsp;but&nbsp;nobody&nbsp;likes.&lt;br&gt;literacy&nbsp;(n.)&nbsp;A&nbsp;textually&nbsp;transmitted&nbsp;disease&nbsp;usually&nbsp;contracted&nbsp;in&nbsp;childhood.&lt;/p&gt;&lt;p&gt;On&nbsp;22&nbsp;Mar&nbsp;2012,&nbsp;at&nbsp;18:20,&nbsp;Josh&nbsp;Stone&nbsp;wrote:&lt;/p&gt;&lt;p&gt;&amp;gt;&nbsp;I&nbsp;wanted&nbsp;to&nbsp;ask&nbsp;the&nbsp;experts&nbsp;since&nbsp;it's&nbsp;not&nbsp;clear&nbsp;to&nbsp;me&nbsp;-&nbsp;what&nbsp;is&nbsp;the&nbsp;best&nbsp;way&nbsp;to&nbsp;parallelize&nbsp;message&nbsp;consumption&nbsp;from&nbsp;a&nbsp;single&nbsp;queue,&nbsp;using&nbsp;the&nbsp;Java&nbsp;client?&nbsp;&lt;br&gt;&amp;gt;&nbsp;&lt;br&gt;&amp;gt;&nbsp;Thanks,&lt;br&gt;&amp;gt;&nbsp;Josh&lt;br&gt;&amp;gt;&nbsp;______________________________&lt;wbr&gt;_________________&lt;br&gt;&amp;gt;&nbsp;rabbitmq-discuss&nbsp;mailing&nbsp;list&lt;br&gt;&amp;gt;&nbsp;&lt;a&nbsp;href=&quot;mailto:rabbitmq-discuss@lists.rabbitmq.com&quot;&nbsp;target=&quot;_blank&quot;&gt;rabbitmq-discuss@lists.&lt;wbr&gt;rabbitmq.com&lt;/a&gt;&lt;br&gt;&amp;gt;&nbsp;&lt;a&nbsp;href=&quot;https://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss&quot;&nbsp;target=&quot;_blank&quot;&gt;https://lists.rabbitmq.com/&lt;wbr&gt;cgi-bin/mailman/listinfo/&lt;wbr&gt;rabbitmq-discuss&lt;/a&gt;&lt;/p&gt;&lt;p&gt;______________________________&lt;wbr&gt;_________________&lt;br&gt;rabbitmq-discuss&nbsp;mailing&nbsp;list&lt;br&gt;&lt;a&nbsp;href=&quot;mailto:rabbitmq-discuss@lists.rabbitmq.com&quot;&nbsp;target=&quot;_blank&quot;&gt;rabbitmq-discuss@lists.&lt;wbr&gt;rabbitmq.com&lt;/a&gt;&lt;br&gt;&lt;a&nbsp;href=&quot;https://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss&quot;&nbsp;target=&quot;_blank&quot;&gt;https://lists.rabbitmq.com/&lt;wbr&gt;cgi-bin/mailman/listinfo/&lt;wbr&gt;rabbitmq-discuss&lt;/a&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;br&gt;On&nbsp;Monday,&nbsp;March&nbsp;26,&nbsp;2012&nbsp;7:11:13&nbsp;AM&nbsp;UTC-7,&nbsp;Steve&nbsp;Powell&nbsp;wrote:&lt;blockquote&nbsp;class=&quot;gmail_quote&quot;&nbsp;style=&quot;margin:&nbsp;0;margin-left:&nbsp;0.8ex;border-left:&nbsp;1px&nbsp;#ccc&nbsp;solid;padding-left:&nbsp;1ex;&quot;&gt;Hi&nbsp;Josh,&lt;p&gt;In&nbsp;the&nbsp;absence&nbsp;of&nbsp;the&nbsp;experts&nbsp;--&nbsp;you&nbsp;get&nbsp;me&nbsp;:-)&lt;/p&gt;&lt;p&gt;Questions&nbsp;that&nbsp;start&nbsp;'what&nbsp;is&nbsp;the&nbsp;best&nbsp;way&nbsp;to...'&nbsp;often&nbsp;have&nbsp;no&lt;br&gt;definitive&nbsp;answer,&nbsp;I'm&nbsp;afraid;&nbsp;but&nbsp;here&nbsp;goes.&lt;/p&gt;&lt;p&gt;First,&nbsp;I'm&nbsp;going&nbsp;to&nbsp;have&nbsp;to&nbsp;explain&nbsp;what&nbsp;I&nbsp;*think*&nbsp;you&nbsp;are&nbsp;asking&nbsp;about,&lt;br&gt;before&nbsp;trying&nbsp;to&nbsp;answer&nbsp;it.&lt;/p&gt;&lt;p&gt;&amp;nbsp;&nbsp;I&nbsp;assume&nbsp;you&nbsp;are&nbsp;asking&nbsp;about&nbsp;multiple&nbsp;Consumers,&nbsp;in&nbsp;a&nbsp;Java&nbsp;client,&nbsp;all&lt;br&gt;&amp;nbsp;&nbsp;consuming&nbsp;from&nbsp;the&nbsp;same&nbsp;queue,&nbsp;allowing&nbsp;'parallel'&nbsp;consumption&nbsp;--&nbsp;which&lt;br&gt;&amp;nbsp;&nbsp;I&nbsp;take&nbsp;to&nbsp;mean&nbsp;multi-threaded&nbsp;--&nbsp;within&nbsp;the&nbsp;same&nbsp;Java&nbsp;client.&nbsp;You&nbsp;want&lt;br&gt;&amp;nbsp;&nbsp;the&nbsp;'best'&nbsp;application&nbsp;structure&nbsp;which&nbsp;achieves&nbsp;'parallel'&nbsp;processing&nbsp;of&nbsp;&lt;br&gt;&amp;nbsp;&nbsp;messages&nbsp;from&nbsp;the&nbsp;queue.&lt;/p&gt;&lt;p&gt;Well,&nbsp;there&nbsp;is&nbsp;nothing&nbsp;to&nbsp;stop&nbsp;you&nbsp;'registering'&nbsp;the&nbsp;same&nbsp;Consumer&lt;br&gt;instance&nbsp;more&nbsp;than&nbsp;once,&nbsp;with&nbsp;different&nbsp;consumer&nbsp;tags,&nbsp;so&nbsp;it&nbsp;is&nbsp;easy&nbsp;to&lt;br&gt;drive&nbsp;multiple&nbsp;'identical'&nbsp;Consumers.&nbsp;However,&nbsp;if&nbsp;you&nbsp;register&lt;br&gt;(Channel.basicConsume())&nbsp;on&nbsp;the&nbsp;same&nbsp;channel,&nbsp;the&nbsp;consumers&nbsp;will&nbsp;be&lt;br&gt;called&nbsp;serially&nbsp;(this&nbsp;is&nbsp;done&nbsp;to&nbsp;preserve&nbsp;the&nbsp;ordering&nbsp;of&nbsp;messages&lt;br&gt;processed&nbsp;on&nbsp;a&nbsp;channel).&lt;/p&gt;&lt;p&gt;No&nbsp;doubt&nbsp;you've&nbsp;read&nbsp;the&nbsp;blurb&nbsp;on&nbsp;the&nbsp;Java&nbsp;Client&nbsp;API&nbsp;doc&nbsp;pages&lt;br&gt;(&lt;a&nbsp;href=&quot;http://www.rabbitmq.com/api-guide.html#consuming&quot;&nbsp;target=&quot;_blank&quot;&gt;http://www.rabbitmq.com/api-&lt;wbr&gt;guide.html#consuming&lt;/a&gt;)&nbsp;which&nbsp;says:&lt;/p&gt;&lt;p&gt;&amp;gt;&nbsp;Callbacks&nbsp;to&nbsp;Consumers&nbsp;are&nbsp;dispatched&nbsp;on&nbsp;a&nbsp;thread&nbsp;separate&nbsp;from&nbsp;the&lt;br&gt;&amp;gt;&nbsp;thread&nbsp;managed&nbsp;by&nbsp;the&nbsp;Connection.&nbsp;This&nbsp;means&nbsp;that&nbsp;Consumers&nbsp;can&nbsp;safely&lt;br&gt;&amp;gt;&nbsp;call&nbsp;blocking&nbsp;methods&nbsp;on&nbsp;the&nbsp;Connection&nbsp;or&nbsp;Channel,&nbsp;such&nbsp;asqueueDeclare,&lt;br&gt;&amp;gt;&nbsp;txCommit,&nbsp;basicCancel&nbsp;or&nbsp;basicPublish.&lt;br&gt;&amp;gt;&nbsp;&lt;br&gt;&amp;gt;&nbsp;Each&nbsp;Channel&nbsp;has&nbsp;its&nbsp;own&nbsp;dispatch&nbsp;thread.&nbsp;For&nbsp;the&nbsp;most&nbsp;common&nbsp;use&nbsp;case&lt;br&gt;&amp;gt;&nbsp;of&nbsp;one&nbsp;Consumer&nbsp;per&nbsp;Channel,&nbsp;this&nbsp;means&nbsp;Consumers&nbsp;do&nbsp;not&nbsp;hold&nbsp;up&nbsp;other&lt;br&gt;&amp;gt;&nbsp;Consumers.&nbsp;If&nbsp;you&nbsp;have&nbsp;multiple&nbsp;Consumers&nbsp;per&nbsp;Channel&nbsp;be&nbsp;aware&nbsp;that&nbsp;a&lt;br&gt;&amp;gt;&nbsp;long-running&nbsp;Consumer&nbsp;may&nbsp;hold&nbsp;up&nbsp;dispatch&nbsp;of&nbsp;callbacks&nbsp;to&nbsp;other&lt;br&gt;&amp;gt;&nbsp;Consumers&nbsp;on&nbsp;that&nbsp;Channel.&lt;/p&gt;&lt;p&gt;and&nbsp;the&nbsp;section&nbsp;on&nbsp;advanced&nbsp;connection&nbsp;options&nbsp;mentions&nbsp;a&nbsp;thread-pool&lt;br&gt;(by&nbsp;default&nbsp;containing&nbsp;5&nbsp;threads)&nbsp;associated&nbsp;with&nbsp;the&nbsp;connection.&lt;/p&gt;&lt;p&gt;What&nbsp;this&nbsp;all&nbsp;means&nbsp;is&nbsp;that&nbsp;*on&nbsp;each&nbsp;channel*&nbsp;Consumer&nbsp;callbacks&nbsp;are&lt;br&gt;called&nbsp;serially.&nbsp;No&nbsp;overlapping&nbsp;there,&nbsp;so&nbsp;no&nbsp;chance&nbsp;to&nbsp;consume&nbsp;'in&lt;br&gt;parallel',&nbsp;so&nbsp;distinct&nbsp;*channels*&nbsp;(on&nbsp;the&nbsp;same&nbsp;connection)&nbsp;are&nbsp;allowed&lt;br&gt;to&nbsp;run&nbsp;their&nbsp;consumers&nbsp;in&nbsp;parallel&nbsp;(up&nbsp;to&nbsp;five&nbsp;may&nbsp;run&nbsp;concurrently,&nbsp;in&lt;br&gt;the&nbsp;default&nbsp;case).&lt;/p&gt;&lt;p&gt;So,&nbsp;to&nbsp;'consume'&nbsp;messages&nbsp;in&nbsp;parallel&nbsp;from&nbsp;a&nbsp;single&nbsp;queue&nbsp;you&nbsp;need&nbsp;to&lt;br&gt;have&nbsp;the&nbsp;consumers&nbsp;on&nbsp;separate&nbsp;channels.&nbsp;Now,&nbsp;if&nbsp;you&nbsp;define&nbsp;a&nbsp;single&lt;br&gt;Consumer&nbsp;instance,&nbsp;and&nbsp;get&nbsp;it&nbsp;to&nbsp;be&nbsp;invoked&nbsp;on&nbsp;multiple&nbsp;threads&lt;br&gt;concurrently&nbsp;(on&nbsp;separate&nbsp;channels)&nbsp;you&nbsp;have&nbsp;to&nbsp;be&nbsp;careful&nbsp;--&nbsp;the&nbsp;code&lt;br&gt;in&nbsp;your&nbsp;Consumer&nbsp;must&nbsp;be&nbsp;thread-safe,&nbsp;and&nbsp;probably&nbsp;more&nbsp;than&nbsp;just&nbsp;that,&lt;br&gt;too.&nbsp;I'll&nbsp;assume&nbsp;you&nbsp;know&nbsp;what&nbsp;you&nbsp;are&nbsp;doing.&nbsp;If&nbsp;you&nbsp;create&nbsp;one&nbsp;Consumer&lt;br&gt;instance&nbsp;for&nbsp;each&nbsp;channel,&nbsp;RabbitMQ&nbsp;will&nbsp;guarantee&nbsp;that&nbsp;each&nbsp;channel's&lt;br&gt;Consumer&nbsp;is&nbsp;running&nbsp;on&nbsp;one&nbsp;thread,&nbsp;so&nbsp;the&nbsp;rules&nbsp;are&nbsp;simpler.&lt;/p&gt;&lt;p&gt;There&nbsp;is&nbsp;another&nbsp;option.&nbsp;Provided&nbsp;you&nbsp;are&nbsp;prepared&nbsp;to&nbsp;separate&lt;br&gt;consumption&nbsp;from&nbsp;processing&nbsp;(and&nbsp;possibly&nbsp;acknowledgement)&nbsp;you&nbsp;can&lt;br&gt;register&nbsp;a&nbsp;single&nbsp;consumer&nbsp;which&nbsp;does&nbsp;very&nbsp;little&nbsp;except&nbsp;pass&nbsp;the&lt;br&gt;message&nbsp;to&nbsp;another&nbsp;(worker)&nbsp;thread&nbsp;to&nbsp;do&nbsp;the&nbsp;actual&nbsp;processing.&nbsp;The&lt;br&gt;Consumer&nbsp;doesn't&nbsp;have&nbsp;to&nbsp;be&nbsp;sophisticated,&nbsp;but&nbsp;your&nbsp;dispatching&lt;br&gt;mechanism&nbsp;needs&nbsp;to&nbsp;be:&nbsp;you&nbsp;mustn't&nbsp;lose&nbsp;messages,&nbsp;and&nbsp;you&nbsp;must&nbsp;ensure&lt;br&gt;that&nbsp;you&nbsp;acknowledge&nbsp;them&nbsp;at&nbsp;some&nbsp;point&nbsp;(which&nbsp;may&nbsp;not&nbsp;be&nbsp;straight&lt;br&gt;away).&nbsp;Still,&nbsp;if&nbsp;you&nbsp;are&nbsp;adept&nbsp;at&nbsp;Java&nbsp;concurrent&nbsp;programming&nbsp;these&nbsp;are&lt;br&gt;all&nbsp;achievable.&nbsp;By&nbsp;managing&nbsp;your&nbsp;own&nbsp;worker&nbsp;threads&nbsp;you&nbsp;can&nbsp;achieve&nbsp;your&lt;br&gt;own&nbsp;dispatching&nbsp;and&nbsp;resource&nbsp;management&nbsp;rules,&nbsp;and&nbsp;by&nbsp;setting&nbsp;the&lt;br&gt;pre-fetch&nbsp;count&nbsp;(Qos)&nbsp;and&nbsp;managing&nbsp;acknowledgements&nbsp;you&nbsp;can&nbsp;gate&nbsp;the&lt;br&gt;amount&nbsp;of&nbsp;work&nbsp;done&nbsp;in&nbsp;parallel,&nbsp;and&nbsp;even&nbsp;decide&nbsp;which&nbsp;workers&nbsp;get&nbsp;which&lt;br&gt;messages.&lt;/p&gt;&lt;p&gt;Which&nbsp;of&nbsp;these&nbsp;is&nbsp;'best'&nbsp;depends&nbsp;a&nbsp;lot&nbsp;on&nbsp;your&nbsp;requirements.&nbsp;If&nbsp;you&nbsp;need&lt;br&gt;just&nbsp;a&nbsp;little&nbsp;more&nbsp;control&nbsp;over&nbsp;the&nbsp;processing&nbsp;threads&nbsp;but&nbsp;don't&nbsp;want&nbsp;to&lt;br&gt;'roll-your-own'&nbsp;dispatcher&nbsp;mechanism&nbsp;there&nbsp;is&nbsp;an&nbsp;option&nbsp;for&nbsp;you&nbsp;to&lt;br&gt;supply&nbsp;your&nbsp;own&nbsp;ExecutorService&nbsp;for&nbsp;the&nbsp;RabbitMQ&nbsp;Connection&nbsp;to&nbsp;use,&nbsp;and&lt;br&gt;Java&nbsp;supplies&nbsp;some&nbsp;standard&nbsp;ExecutorService&nbsp;implementations&nbsp;which&nbsp;allow&lt;br&gt;you&nbsp;to&nbsp;do&nbsp;some&nbsp;of&nbsp;the&nbsp;management&nbsp;without&nbsp;considerable&nbsp;effort.&lt;/p&gt;&lt;p&gt;My&nbsp;general&nbsp;advice&nbsp;is&nbsp;that&nbsp;this&nbsp;might&nbsp;be&nbsp;a&nbsp;lot&nbsp;of&nbsp;work,&nbsp;and&nbsp;you&nbsp;should&lt;br&gt;consider&nbsp;investing&nbsp;in&nbsp;a&nbsp;sophisticated&nbsp;system&nbsp;only&nbsp;if&nbsp;you&nbsp;have&nbsp;determined&lt;br&gt;that&nbsp;you&nbsp;really&nbsp;need&nbsp;the&nbsp;advantages&nbsp;it&nbsp;might&nbsp;bring.&nbsp;Be&nbsp;aware&nbsp;that&nbsp;these&lt;br&gt;may&nbsp;not&nbsp;include&nbsp;faster&nbsp;throughput,&nbsp;and&nbsp;might&nbsp;upset&nbsp;any&nbsp;ordering&lt;br&gt;guarantees&nbsp;you&nbsp;may&nbsp;be&nbsp;relying&nbsp;upon&nbsp;at&nbsp;present.&lt;/p&gt;&lt;p&gt;I&nbsp;hope&nbsp;this&nbsp;helps.&lt;/p&gt;&lt;p&gt;Steve&nbsp;Powell&nbsp;&amp;nbsp;(a&nbsp;happy&nbsp;kitten)&lt;br&gt;----------some&nbsp;more&nbsp;definitions&nbsp;from&nbsp;the&nbsp;SPD----------&lt;br&gt;chinchilla&nbsp;(n.)&nbsp;Cooling&nbsp;device&nbsp;for&nbsp;the&nbsp;lower&nbsp;jaw.&lt;br&gt;socialcast&nbsp;(n.)&nbsp;Someone&nbsp;to&nbsp;whom&nbsp;everyone&nbsp;is&nbsp;speaking&nbsp;but&nbsp;nobody&nbsp;likes.&lt;br&gt;literacy&nbsp;(n.)&nbsp;A&nbsp;textually&nbsp;transmitted&nbsp;disease&nbsp;usually&nbsp;contracted&nbsp;in&nbsp;childhood.&lt;/p&gt;&lt;p&gt;On&nbsp;22&nbsp;Mar&nbsp;2012,&nbsp;at&nbsp;18:20,&nbsp;Josh&nbsp;Stone&nbsp;wrote:&lt;/p&gt;&lt;p&gt;&amp;gt;&nbsp;I&nbsp;wanted&nbsp;to&nbsp;ask&nbsp;the&nbsp;experts&nbsp;since&nbsp;it's&nbsp;not&nbsp;clear&nbsp;to&nbsp;me&nbsp;-&nbsp;what&nbsp;is&nbsp;the&nbsp;best&nbsp;way&nbsp;to&nbsp;parallelize&nbsp;message&nbsp;consumption&nbsp;from&nbsp;a&nbsp;single&nbsp;queue,&nbsp;using&nbsp;the&nbsp;Java&nbsp;client?&nbsp;&lt;br&gt;&amp;gt;&nbsp;&lt;br&gt;&amp;gt;&nbsp;Thanks,&lt;br&gt;&amp;gt;&nbsp;Josh&lt;br&gt;&amp;gt;&nbsp;______________________________&lt;wbr&gt;_________________&lt;br&gt;&amp;gt;&nbsp;rabbitmq-discuss&nbsp;mailing&nbsp;list&lt;br&gt;&amp;gt;&nbsp;&lt;a&nbsp;href=&quot;mailto:rabbitmq-discuss@lists.rabbitmq.com&quot;&nbsp;target=&quot;_blank&quot;&gt;rabbitmq-discuss@lists.&lt;wbr&gt;rabbitmq.com&lt;/a&gt;&lt;br&gt;&amp;gt;&nbsp;&lt;a&nbsp;href=&quot;https://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss&quot;&nbsp;target=&quot;_blank&quot;&gt;https://lists.rabbitmq.com/&lt;wbr&gt;cgi-bin/mailman/listinfo/&lt;wbr&gt;rabbitmq-discuss&lt;/a&gt;&lt;/p&gt;&lt;p&gt;______________________________&lt;wbr&gt;_________________&lt;br&gt;rabbitmq-discuss&nbsp;mailing&nbsp;list&lt;br&gt;&lt;a&nbsp;href=&quot;mailto:rabbitmq-discuss@lists.rabbitmq.com&quot;&nbsp;target=&quot;_blank&quot;&gt;rabbitmq-discuss@lists.&lt;wbr&gt;rabbitmq.com&lt;/a&gt;&lt;br&gt;&lt;a&nbsp;href=&quot;https://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss&quot;&nbsp;target=&quot;_blank&quot;&gt;https://lists.rabbitmq.com/&lt;wbr&gt;cgi-bin/mailman/listinfo/&lt;wbr&gt;rabbitmq-discuss&lt;/a&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;br&gt;On&nbsp;Monday,&nbsp;March&nbsp;26,&nbsp;2012&nbsp;7:11:13&nbsp;AM&nbsp;UTC-7,&nbsp;Steve&nbsp;Powell&nbsp;wrote:&lt;blockquote&nbsp;class=&quot;gmail_quote&quot;&nbsp;style=&quot;margin:&nbsp;0;margin-left:&nbsp;0.8ex;border-left:&nbsp;1px&nbsp;#ccc&nbsp;solid;padding-left:&nbsp;1ex;&quot;&gt;Hi&nbsp;Josh,&lt;p&gt;In&nbsp;the&nbsp;absence&nbsp;of&nbsp;the&nbsp;experts&nbsp;--&nbsp;you&nbsp;get&nbsp;me&nbsp;:-)&lt;/p&gt;&lt;p&gt;Questions&nbsp;that&nbsp;start&nbsp;'what&nbsp;is&nbsp;the&nbsp;best&nbsp;way&nbsp;to...'&nbsp;often&nbsp;have&nbsp;no&lt;br&gt;definitive&nbsp;answer,&nbsp;I'm&nbsp;afraid;&nbsp;but&nbsp;here&nbsp;goes.&lt;/p&gt;&lt;p&gt;First,&nbsp;I'm&nbsp;going&nbsp;to&nbsp;have&nbsp;to&nbsp;explain&nbsp;what&nbsp;I&nbsp;*think*&nbsp;you&nbsp;are&nbsp;asking&nbsp;about,&lt;br&gt;before&nbsp;trying&nbsp;to&nbsp;answer&nbsp;it.&lt;/p&gt;&lt;p&gt;&amp;nbsp;&nbsp;I&nbsp;assume&nbsp;you&nbsp;are&nbsp;asking&nbsp;about&nbsp;multiple&nbsp;Consumers,&nbsp;in&nbsp;a&nbsp;Java&nbsp;client,&nbsp;all&lt;br&gt;&amp;nbsp;&nbsp;consuming&nbsp;from&nbsp;the&nbsp;same&nbsp;queue,&nbsp;allowing&nbsp;'parallel'&nbsp;consumption&nbsp;--&nbsp;which&lt;br&gt;&amp;nbsp;&nbsp;I&nbsp;take&nbsp;to&nbsp;mean&nbsp;multi-threaded&nbsp;--&nbsp;within&nbsp;the&nbsp;same&nbsp;Java&nbsp;client.&nbsp;You&nbsp;want&lt;br&gt;&amp;nbsp;&nbsp;the&nbsp;'best'&nbsp;application&nbsp;structure&nbsp;which&nbsp;achieves&nbsp;'parallel'&nbsp;processing&nbsp;of&nbsp;&lt;br&gt;&amp;nbsp;&nbsp;messages&nbsp;from&nbsp;the&nbsp;queue.&lt;/p&gt;&lt;p&gt;Well,&nbsp;there&nbsp;is&nbsp;nothing&nbsp;to&nbsp;stop&nbsp;you&nbsp;'registering'&nbsp;the&nbsp;same&nbsp;Consumer&lt;br&gt;instance&nbsp;more&nbsp;than&nbsp;once,&nbsp;with&nbsp;different&nbsp;consumer&nbsp;tags,&nbsp;so&nbsp;it&nbsp;is&nbsp;easy&nbsp;to&lt;br&gt;drive&nbsp;multiple&nbsp;'identical'&nbsp;Consumers.&nbsp;However,&nbsp;if&nbsp;you&nbsp;register&lt;br&gt;(Channel.basicConsume())&nbsp;on&nbsp;the&nbsp;same&nbsp;channel,&nbsp;the&nbsp;consumers&nbsp;will&nbsp;be&lt;br&gt;called&nbsp;serially&nbsp;(this&nbsp;is&nbsp;done&nbsp;to&nbsp;preserve&nbsp;the&nbsp;ordering&nbsp;of&nbsp;messages&lt;br&gt;processed&nbsp;on&nbsp;a&nbsp;channel).&lt;/p&gt;&lt;p&gt;No&nbsp;doubt&nbsp;you've&nbsp;read&nbsp;the&nbsp;blurb&nbsp;on&nbsp;the&nbsp;Java&nbsp;Client&nbsp;API&nbsp;doc&nbsp;pages&lt;br&gt;(&lt;a&nbsp;href=&quot;http://www.rabbitmq.com/api-guide.html#consuming&quot;&nbsp;target=&quot;_blank&quot;&gt;http://www.rabbitmq.com/api-&lt;wbr&gt;guide.html#consuming&lt;/a&gt;)&nbsp;which&nbsp;says:&lt;/p&gt;&lt;p&gt;&amp;gt;&nbsp;Callbacks&nbsp;to&nbsp;Consumers&nbsp;are&nbsp;dispatched&nbsp;on&nbsp;a&nbsp;thread&nbsp;separate&nbsp;from&nbsp;the&lt;br&gt;&amp;gt;&nbsp;thread&nbsp;managed&nbsp;by&nbsp;the&nbsp;Connection.&nbsp;This&nbsp;means&nbsp;that&nbsp;Consumers&nbsp;can&nbsp;safely&lt;br&gt;&amp;gt;&nbsp;call&nbsp;blocking&nbsp;methods&nbsp;on&nbsp;the&nbsp;Connection&nbsp;or&nbsp;Channel,&nbsp;such&nbsp;asqueueDeclare,&lt;br&gt;&amp;gt;&nbsp;txCommit,&nbsp;basicCancel&nbsp;or&nbsp;basicPublish.&lt;br&gt;&amp;gt;&nbsp;&lt;br&gt;&amp;gt;&nbsp;Each&nbsp;Channel&nbsp;has&nbsp;its&nbsp;own&nbsp;dispatch&nbsp;thread.&nbsp;For&nbsp;the&nbsp;most&nbsp;common&nbsp;use&nbsp;case&lt;br&gt;&amp;gt;&nbsp;of&nbsp;one&nbsp;Consumer&nbsp;per&nbsp;Channel,&nbsp;this&nbsp;means&nbsp;Consumers&nbsp;do&nbsp;not&nbsp;hold&nbsp;up&nbsp;other&lt;br&gt;&amp;gt;&nbsp;Consumers.&nbsp;If&nbsp;you&nbsp;have&nbsp;multiple&nbsp;Consumers&nbsp;per&nbsp;Channel&nbsp;be&nbsp;aware&nbsp;that&nbsp;a&lt;br&gt;&amp;gt;&nbsp;long-running&nbsp;Consumer&nbsp;may&nbsp;hold&nbsp;up&nbsp;dispatch&nbsp;of&nbsp;callbacks&nbsp;to&nbsp;other&lt;br&gt;&amp;gt;&nbsp;Consumers&nbsp;on&nbsp;that&nbsp;Channel.&lt;/p&gt;&lt;p&gt;and&nbsp;the&nbsp;section&nbsp;on&nbsp;advanced&nbsp;connection&nbsp;options&nbsp;mentions&nbsp;a&nbsp;thread-pool&lt;br&gt;(by&nbsp;default&nbsp;containing&nbsp;5&nbsp;threads)&nbsp;associated&nbsp;with&nbsp;the&nbsp;connection.&lt;/p&gt;&lt;p&gt;What&nbsp;this&nbsp;all&nbsp;means&nbsp;is&nbsp;that&nbsp;*on&nbsp;each&nbsp;channel*&nbsp;Consumer&nbsp;callbacks&nbsp;are&lt;br&gt;called&nbsp;serially.&nbsp;No&nbsp;overlapping&nbsp;there,&nbsp;so&nbsp;no&nbsp;chance&nbsp;to&nbsp;consume&nbsp;'in&lt;br&gt;parallel',&nbsp;so&nbsp;distinct&nbsp;*channels*&nbsp;(on&nbsp;the&nbsp;same&nbsp;connection)&nbsp;are&nbsp;allowed&lt;br&gt;to&nbsp;run&nbsp;their&nbsp;consumers&nbsp;in&nbsp;parallel&nbsp;(up&nbsp;to&nbsp;five&nbsp;may&nbsp;run&nbsp;concurrently,&nbsp;in&lt;br&gt;the&nbsp;default&nbsp;case).&lt;/p&gt;&lt;p&gt;So,&nbsp;to&nbsp;'consume'&nbsp;messages&nbsp;in&nbsp;parallel&nbsp;from&nbsp;a&nbsp;single&nbsp;queue&nbsp;you&nbsp;need&nbsp;to&lt;br&gt;have&nbsp;the&nbsp;consumers&nbsp;on&nbsp;separate&nbsp;channels.&nbsp;Now,&nbsp;if&nbsp;you&nbsp;define&nbsp;a&nbsp;single&lt;br&gt;Consumer&nbsp;instance,&nbsp;and&nbsp;get&nbsp;it&nbsp;to&nbsp;be&nbsp;invoked&nbsp;on&nbsp;multiple&nbsp;threads&lt;br&gt;concurrently&nbsp;(on&nbsp;separate&nbsp;channels)&nbsp;you&nbsp;have&nbsp;to&nbsp;be&nbsp;careful&nbsp;--&nbsp;the&nbsp;code&lt;br&gt;in&nbsp;your&nbsp;Consumer&nbsp;must&nbsp;be&nbsp;thread-safe,&nbsp;and&nbsp;probably&nbsp;more&nbsp;than&nbsp;just&nbsp;that,&lt;br&gt;too.&nbsp;I'll&nbsp;assume&nbsp;you&nbsp;know&nbsp;what&nbsp;you&nbsp;are&nbsp;doing.&nbsp;If&nbsp;you&nbsp;create&nbsp;one&nbsp;Consumer&lt;br&gt;instance&nbsp;for&nbsp;each&nbsp;channel,&nbsp;RabbitMQ&nbsp;will&nbsp;guarantee&nbsp;that&nbsp;each&nbsp;channel's&lt;br&gt;Consumer&nbsp;is&nbsp;running&nbsp;on&nbsp;one&nbsp;thread,&nbsp;so&nbsp;the&nbsp;rules&nbsp;are&nbsp;simpler.&lt;/p&gt;&lt;p&gt;There&nbsp;is&nbsp;another&nbsp;option.&nbsp;Provided&nbsp;you&nbsp;are&nbsp;prepared&nbsp;to&nbsp;separate&lt;br&gt;consumption&nbsp;from&nbsp;processing&nbsp;(and&nbsp;possibly&nbsp;acknowledgement)&nbsp;you&nbsp;can&lt;br&gt;register&nbsp;a&nbsp;single&nbsp;consumer&nbsp;which&nbsp;does&nbsp;very&nbsp;little&nbsp;except&nbsp;pass&nbsp;the&lt;br&gt;message&nbsp;to&nbsp;another&nbsp;(worker)&nbsp;thread&nbsp;to&nbsp;do&nbsp;the&nbsp;actual&nbsp;processing.&nbsp;The&lt;br&gt;Consumer&nbsp;doesn't&nbsp;have&nbsp;to&nbsp;be&nbsp;sophisticated,&nbsp;but&nbsp;your&nbsp;dispatching&lt;br&gt;mechanism&nbsp;needs&nbsp;to&nbsp;be:&nbsp;you&nbsp;mustn't&nbsp;lose&nbsp;messages,&nbsp;and&nbsp;you&nbsp;must&nbsp;ensure&lt;br&gt;that&nbsp;you&nbsp;acknowledge&nbsp;them&nbsp;at&nbsp;some&nbsp;point&nbsp;(which&nbsp;may&nbsp;not&nbsp;be&nbsp;straight&lt;br&gt;away).&nbsp;Still,&nbsp;if&nbsp;you&nbsp;are&nbsp;adept&nbsp;at&nbsp;Java&nbsp;concurrent&nbsp;programming&nbsp;these&nbsp;are&lt;br&gt;all&nbsp;achievable.&nbsp;By&nbsp;managing&nbsp;your&nbsp;own&nbsp;worker&nbsp;threads&nbsp;you&nbsp;can&nbsp;achieve&nbsp;your&lt;br&gt;own&nbsp;dispatching&nbsp;and&nbsp;resource&nbsp;management&nbsp;rules,&nbsp;and&nbsp;by&nbsp;setting&nbsp;the&lt;br&gt;pre-fetch&nbsp;count&nbsp;(Qos)&nbsp;and&nbsp;managing&nbsp;acknowledgements&nbsp;you&nbsp;can&nbsp;gate&nbsp;the&lt;br&gt;amount&nbsp;of&nbsp;work&nbsp;done&nbsp;in&nbsp;parallel,&nbsp;and&nbsp;even&nbsp;decide&nbsp;which&nbsp;workers&nbsp;get&nbsp;which&lt;br&gt;messages.&lt;/p&gt;&lt;p&gt;Which&nbsp;of&nbsp;these&nbsp;is&nbsp;'best'&nbsp;depends&nbsp;a&nbsp;lot&nbsp;on&nbsp;your&nbsp;requirements.&nbsp;If&nbsp;you&nbsp;need&lt;br&gt;just&nbsp;a&nbsp;little&nbsp;more&nbsp;control&nbsp;over&nbsp;the&nbsp;processing&nbsp;threads&nbsp;but&nbsp;don't&nbsp;want&nbsp;to&lt;br&gt;'roll-your-own'&nbsp;dispatcher&nbsp;mechanism&nbsp;there&nbsp;is&nbsp;an&nbsp;option&nbsp;for&nbsp;you&nbsp;to&lt;br&gt;supply&nbsp;your&nbsp;own&nbsp;ExecutorService&nbsp;for&nbsp;the&nbsp;RabbitMQ&nbsp;Connection&nbsp;to&nbsp;use,&nbsp;and&lt;br&gt;Java&nbsp;supplies&nbsp;some&nbsp;standard&nbsp;ExecutorService&nbsp;implementations&nbsp;which&nbsp;allow&lt;br&gt;you&nbsp;to&nbsp;do&nbsp;some&nbsp;of&nbsp;the&nbsp;management&nbsp;without&nbsp;considerable&nbsp;effort.&lt;/p&gt;&lt;p&gt;My&nbsp;general&nbsp;advice&nbsp;is&nbsp;that&nbsp;this&nbsp;might&nbsp;be&nbsp;a&nbsp;lot&nbsp;of&nbsp;work,&nbsp;and&nbsp;you&nbsp;should&lt;br&gt;consider&nbsp;investing&nbsp;in&nbsp;a&nbsp;sophisticated&nbsp;system&nbsp;only&nbsp;if&nbsp;you&nbsp;have&nbsp;determined&lt;br&gt;that&nbsp;you&nbsp;really&nbsp;need&nbsp;the&nbsp;advantages&nbsp;it&nbsp;might&nbsp;bring.&nbsp;Be&nbsp;aware&nbsp;that&nbsp;these&lt;br&gt;may&nbsp;not&nbsp;include&nbsp;faster&nbsp;throughput,&nbsp;and&nbsp;might&nbsp;upset&nbsp;any&nbsp;ordering&lt;br&gt;guarantees&nbsp;you&nbsp;may&nbsp;be&nbsp;relying&nbsp;upon&nbsp;at&nbsp;present.&lt;/p&gt;&lt;p&gt;I&nbsp;hope&nbsp;this&nbsp;helps.&lt;/p&gt;&lt;p&gt;Steve&nbsp;Powell&nbsp;&amp;nbsp;(a&nbsp;happy&nbsp;kitten)&lt;br&gt;----------some&nbsp;more&nbsp;definitions&nbsp;from&nbsp;the&nbsp;SPD----------&lt;br&gt;chinchilla&nbsp;(n.)&nbsp;Cooling&nbsp;device&nbsp;for&nbsp;the&nbsp;lower&nbsp;jaw.&lt;br&gt;socialcast&nbsp;(n.)&nbsp;Someone&nbsp;to&nbsp;whom&nbsp;everyone&nbsp;is&nbsp;speaking&nbsp;but&nbsp;nobody&nbsp;likes.&lt;br&gt;literacy&nbsp;(n.)&nbsp;A&nbsp;textually&nbsp;transmitted&nbsp;disease&nbsp;usually&nbsp;contracted&nbsp;in&nbsp;childhood.&lt;/p&gt;&lt;p&gt;On&nbsp;22&nbsp;Mar&nbsp;2012,&nbsp;at&nbsp;18:20,&nbsp;Josh&nbsp;Stone&nbsp;wrote:&lt;/p&gt;&lt;p&gt;&amp;gt;&nbsp;I&nbsp;wanted&nbsp;to&nbsp;ask&nbsp;the&nbsp;experts&nbsp;since&nbsp;it's&nbsp;not&nbsp;clear&nbsp;to&nbsp;me&nbsp;-&nbsp;what&nbsp;is&nbsp;the&nbsp;best&nbsp;way&nbsp;to&nbsp;parallelize&nbsp;message&nbsp;consumption&nbsp;from&nbsp;a&nbsp;single&nbsp;queue,&nbsp;using&nbsp;the&nbsp;Java&nbsp;client?&nbsp;&lt;br&gt;&amp;gt;&nbsp;&lt;br&gt;&amp;gt;&nbsp;Thanks,&lt;br&gt;&amp;gt;&nbsp;Josh&lt;br&gt;&amp;gt;&nbsp;______________________________&lt;wbr&gt;_________________&lt;br&gt;&amp;gt;&nbsp;rabbitmq-discuss&nbsp;mailing&nbsp;list&lt;br&gt;&amp;gt;&nbsp;&lt;a&nbsp;href=&quot;mailto:rabbitmq-discuss@lists.rabbitmq.com&quot;&nbsp;target=&quot;_blank&quot;&gt;rabbitmq-discuss@lists.&lt;wbr&gt;rabbitmq.com&lt;/a&gt;&lt;br&gt;&amp;gt;&nbsp;&lt;a&nbsp;href=&quot;https://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss&quot;&nbsp;target=&quot;_blank&quot;&gt;https://lists.rabbitmq.com/&lt;wbr&gt;cgi-bin/mailman/listinfo/&lt;wbr&gt;rabbitmq-discuss&lt;/a&gt;&lt;/p&gt;&lt;p&gt;______________________________&lt;wbr&gt;_________________&lt;br&gt;rabbitmq-discuss&nbsp;mailing&nbsp;list&lt;br&gt;&lt;a&nbsp;href=&quot;mailto:rabbitmq-discuss@lists.rabbitmq.com&quot;&nbsp;target=&quot;_blank&quot;&gt;rabbitmq-discuss@lists.&lt;wbr&gt;rabbitmq.com&lt;/a&gt;&lt;br&gt;&lt;a&nbsp;href=&quot;https://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss&quot;&nbsp;target=&quot;_blank&quot;&gt;https://lists.rabbitmq.com/&lt;wbr&gt;cgi-bin/mailman/listinfo/&lt;wbr&gt;rabbitmq-discuss&lt;/a&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;br&gt;On&nbsp;Monday,&nbsp;March&nbsp;26,&nbsp;2012&nbsp;7:11:13&nbsp;AM&nbsp;UTC-7,&nbsp;Steve&nbsp;Powell&nbsp;wrote:&lt;blockquote&nbsp;class=&quot;gmail_quote&quot;&nbsp;style=&quot;margin:&nbsp;0;margin-left:&nbsp;0.8ex;border-left:&nbsp;1px&nbsp;#ccc&nbsp;solid;padding-left:&nbsp;1ex;&quot;&gt;Hi&nbsp;Josh,&lt;p&gt;In&nbsp;the&nbsp;absence&nbsp;of&nbsp;the&nbsp;experts&nbsp;--&nbsp;you&nbsp;get&nbsp;me&nbsp;:-)&lt;/p&gt;&lt;p&gt;Questions&nbsp;that&nbsp;start&nbsp;'what&nbsp;is&nbsp;the&nbsp;best&nbsp;way&nbsp;to...'&nbsp;often&nbsp;have&nbsp;no&lt;br&gt;definitive&nbsp;answer,&nbsp;I'm&nbsp;afraid;&nbsp;but&nbsp;here&nbsp;goes.&lt;/p&gt;&lt;p&gt;First,&nbsp;I'm&nbsp;going&nbsp;to&nbsp;have&nbsp;to&nbsp;explain&nbsp;what&nbsp;I&nbsp;*think*&nbsp;you&nbsp;are&nbsp;asking&nbsp;about,&lt;br&gt;before&nbsp;trying&nbsp;to&nbsp;answer&nbsp;it.&lt;/p&gt;&lt;p&gt;&amp;nbsp;&nbsp;I&nbsp;assume&nbsp;you&nbsp;are&nbsp;asking&nbsp;about&nbsp;multiple&nbsp;Consumers,&nbsp;in&nbsp;a&nbsp;Java&nbsp;client,&nbsp;all&lt;br&gt;&amp;nbsp;&nbsp;consuming&nbsp;from&nbsp;the&nbsp;same&nbsp;queue,&nbsp;allowing&nbsp;'parallel'&nbsp;consumption&nbsp;--&nbsp;which&lt;br&gt;&amp;nbsp;&nbsp;I&nbsp;take&nbsp;to&nbsp;mean&nbsp;multi-threaded&nbsp;--&nbsp;within&nbsp;the&nbsp;same&nbsp;Java&nbsp;client.&nbsp;You&nbsp;want&lt;br&gt;&amp;nbsp;&nbsp;the&nbsp;'best'&nbsp;application&nbsp;structure&nbsp;which&nbsp;achieves&nbsp;'parallel'&nbsp;processing&nbsp;of&nbsp;&lt;br&gt;&amp;nbsp;&nbsp;messages&nbsp;from&nbsp;the&nbsp;queue.&lt;/p&gt;&lt;p&gt;Well,&nbsp;there&nbsp;is&nbsp;nothing&nbsp;to&nbsp;stop&nbsp;you&nbsp;'registering'&nbsp;the&nbsp;same&nbsp;Consumer&lt;br&gt;instance&nbsp;more&nbsp;than&nbsp;once,&nbsp;with&nbsp;different&nbsp;consumer&nbsp;tags,&nbsp;so&nbsp;it&nbsp;is&nbsp;easy&nbsp;to&lt;br&gt;drive&nbsp;multiple&nbsp;'identical'&nbsp;Consumers.&nbsp;However,&nbsp;if&nbsp;you&nbsp;register&lt;br&gt;(Channel.basicConsume())&nbsp;on&nbsp;the&nbsp;same&nbsp;channel,&nbsp;the&nbsp;consumers&nbsp;will&nbsp;be&lt;br&gt;called&nbsp;serially&nbsp;(this&nbsp;is&nbsp;done&nbsp;to&nbsp;preserve&nbsp;the&nbsp;ordering&nbsp;of&nbsp;messages&lt;br&gt;processed&nbsp;on&nbsp;a&nbsp;channel).&lt;/p&gt;&lt;p&gt;No&nbsp;doubt&nbsp;you've&nbsp;read&nbsp;the&nbsp;blurb&nbsp;on&nbsp;the&nbsp;Java&nbsp;Client&nbsp;API&nbsp;doc&nbsp;pages&lt;br&gt;(&lt;a&nbsp;href=&quot;http://www.rabbitmq.com/api-guide.html#consuming&quot;&nbsp;target=&quot;_blank&quot;&gt;http://www.rabbitmq.com/api-&lt;wbr&gt;guide.html#consuming&lt;/a&gt;)&nbsp;which&nbsp;says:&lt;/p&gt;&lt;p&gt;&amp;gt;&nbsp;Callbacks&nbsp;to&nbsp;Consumers&nbsp;are&nbsp;dispatched&nbsp;on&nbsp;a&nbsp;thread&nbsp;separate&nbsp;from&nbsp;the&lt;br&gt;&amp;gt;&nbsp;thread&nbsp;managed&nbsp;by&nbsp;the&nbsp;Connection.&nbsp;This&nbsp;means&nbsp;that&nbsp;Consumers&nbsp;can&nbsp;safely&lt;br&gt;&amp;gt;&nbsp;call&nbsp;blocking&nbsp;methods&nbsp;on&nbsp;the&nbsp;Connection&nbsp;or&nbsp;Channel,&nbsp;such&nbsp;asqueueDeclare,&lt;br&gt;&amp;gt;&nbsp;txCommit,&nbsp;basicCancel&nbsp;or&nbsp;basicPublish.&lt;br&gt;&amp;gt;&nbsp;&lt;br&gt;&amp;gt;&nbsp;Each&nbsp;Channel&nbsp;has&nbsp;its&nbsp;own&nbsp;dispatch&nbsp;thread.&nbsp;For&nbsp;the&nbsp;most&nbsp;common&nbsp;use&nbsp;case&lt;br&gt;&amp;gt;&nbsp;of&nbsp;one&nbsp;Consumer&nbsp;per&nbsp;Channel,&nbsp;this&nbsp;means&nbsp;Consumers&nbsp;do&nbsp;not&nbsp;hold&nbsp;up&nbsp;other&lt;br&gt;&amp;gt;&nbsp;Consumers.&nbsp;If&nbsp;you&nbsp;have&nbsp;multiple&nbsp;Consumers&nbsp;per&nbsp;Channel&nbsp;be&nbsp;aware&nbsp;that&nbsp;a&lt;br&gt;&amp;gt;&nbsp;long-running&nbsp;Consumer&nbsp;may&nbsp;hold&nbsp;up&nbsp;dispatch&nbsp;of&nbsp;callbacks&nbsp;to&nbsp;other&lt;br&gt;&amp;gt;&nbsp;Consumers&nbsp;on&nbsp;that&nbsp;Channel.&lt;/p&gt;&lt;p&gt;and&nbsp;the&nbsp;section&nbsp;on&nbsp;advanced&nbsp;connection&nbsp;options&nbsp;mentions&nbsp;a&nbsp;thread-pool&lt;br&gt;(by&nbsp;default&nbsp;containing&nbsp;5&nbsp;threads)&nbsp;associated&nbsp;with&nbsp;the&nbsp;connection.&lt;/p&gt;&lt;p&gt;What&nbsp;this&nbsp;all&nbsp;means&nbsp;is&nbsp;that&nbsp;*on&nbsp;each&nbsp;channel*&nbsp;Consumer&nbsp;callbacks&nbsp;are&lt;br&gt;called&nbsp;serially.&nbsp;No&nbsp;overlapping&nbsp;there,&nbsp;so&nbsp;no&nbsp;chance&nbsp;to&nbsp;consume&nbsp;'in&lt;br&gt;parallel',&nbsp;so&nbsp;distinct&nbsp;*channels*&nbsp;(on&nbsp;the&nbsp;same&nbsp;connection)&nbsp;are&nbsp;allowed&lt;br&gt;to&nbsp;run&nbsp;their&nbsp;consumers&nbsp;in&nbsp;parallel&nbsp;(up&nbsp;to&nbsp;five&nbsp;may&nbsp;run&nbsp;concurrently,&nbsp;in&lt;br&gt;the&nbsp;default&nbsp;case).&lt;/p&gt;&lt;p&gt;So,&nbsp;to&nbsp;'consume'&nbsp;messages&nbsp;in&nbsp;parallel&nbsp;from&nbsp;a&nbsp;single&nbsp;queue&nbsp;you&nbsp;need&nbsp;to&lt;br&gt;have&nbsp;the&nbsp;consumers&nbsp;on&nbsp;separate&nbsp;channels.&nbsp;Now,&nbsp;if&nbsp;you&nbsp;define&nbsp;a&nbsp;single&lt;br&gt;Consumer&nbsp;instance,&nbsp;and&nbsp;get&nbsp;it&nbsp;to&nbsp;be&nbsp;invoked&nbsp;on&nbsp;multiple&nbsp;threads&lt;br&gt;concurrently&nbsp;(on&nbsp;separate&nbsp;channels)&nbsp;you&nbsp;have&nbsp;to&nbsp;be&nbsp;careful&nbsp;--&nbsp;the&nbsp;code&lt;br&gt;in&nbsp;your&nbsp;Consumer&nbsp;must&nbsp;be&nbsp;thread-safe,&nbsp;and&nbsp;probably&nbsp;more&nbsp;than&nbsp;just&nbsp;that,&lt;br&gt;too.&nbsp;I'll&nbsp;assume&nbsp;you&nbsp;know&nbsp;what&nbsp;you&nbsp;are&nbsp;doing.&nbsp;If&nbsp;you&nbsp;create&nbsp;one&nbsp;Consumer&lt;br&gt;instance&nbsp;for&nbsp;each&nbsp;channel,&nbsp;RabbitMQ&nbsp;will&nbsp;guarantee&nbsp;that&nbsp;each&nbsp;channel's&lt;br&gt;Consumer&nbsp;is&nbsp;running&nbsp;on&nbsp;one&nbsp;thread,&nbsp;so&nbsp;the&nbsp;rules&nbsp;are&nbsp;simpler.&lt;/p&gt;&lt;p&gt;There&nbsp;is&nbsp;another&nbsp;option.&nbsp;Provided&nbsp;you&nbsp;are&nbsp;prepared&nbsp;to&nbsp;separate&lt;br&gt;consumption&nbsp;from&nbsp;processing&nbsp;(and&nbsp;possibly&nbsp;acknowledgement)&nbsp;you&nbsp;can&lt;br&gt;register&nbsp;a&nbsp;single&nbsp;consumer&nbsp;which&nbsp;does&nbsp;very&nbsp;little&nbsp;except&nbsp;pass&nbsp;the&lt;br&gt;message&nbsp;to&nbsp;another&nbsp;(worker)&nbsp;thread&nbsp;to&nbsp;do&nbsp;the&nbsp;actual&nbsp;processing.&nbsp;The&lt;br&gt;Consumer&nbsp;doesn't&nbsp;have&nbsp;to&nbsp;be&nbsp;sophisticated,&nbsp;but&nbsp;your&nbsp;dispatching&lt;br&gt;mechanism&nbsp;needs&nbsp;to&nbsp;be:&nbsp;you&nbsp;mustn't&nbsp;lose&nbsp;messages,&nbsp;and&nbsp;you&nbsp;must&nbsp;ensure&lt;br&gt;that&nbsp;you&nbsp;acknowledge&nbsp;them&nbsp;at&nbsp;some&nbsp;point&nbsp;(which&nbsp;may&nbsp;not&nbsp;be&nbsp;straight&lt;br&gt;away).&nbsp;Still,&nbsp;if&nbsp;you&nbsp;are&nbsp;adept&nbsp;at&nbsp;Java&nbsp;concurrent&nbsp;programming&nbsp;these&nbsp;are&lt;br&gt;all&nbsp;achievable.&nbsp;By&nbsp;managing&nbsp;your&nbsp;own&nbsp;worker&nbsp;threads&nbsp;you&nbsp;can&nbsp;achieve&nbsp;your&lt;br&gt;own&nbsp;dispatching&nbsp;and&nbsp;resource&nbsp;management&nbsp;rules,&nbsp;and&nbsp;by&nbsp;setting&nbsp;the&lt;br&gt;pre-fetch&nbsp;count&nbsp;(Qos)&nbsp;and&nbsp;managing&nbsp;acknowledgements&nbsp;you&nbsp;can&nbsp;gate&nbsp;the&lt;br&gt;amount&nbsp;of&nbsp;work&nbsp;done&nbsp;in&nbsp;parallel,&nbsp;and&nbsp;even&nbsp;decide&nbsp;which&nbsp;workers&nbsp;get&nbsp;which&lt;br&gt;messages.&lt;/p&gt;&lt;p&gt;Which&nbsp;of&nbsp;these&nbsp;is&nbsp;'best'&nbsp;depends&nbsp;a&nbsp;lot&nbsp;on&nbsp;your&nbsp;requirements.&nbsp;If&nbsp;you&nbsp;need&lt;br&gt;just&nbsp;a&nbsp;little&nbsp;more&nbsp;control&nbsp;over&nbsp;the&nbsp;processing&nbsp;threads&nbsp;but&nbsp;don't&nbsp;want&nbsp;to&lt;br&gt;'roll-your-own'&nbsp;dispatcher&nbsp;mechanism&nbsp;there&nbsp;is&nbsp;an&nbsp;option&nbsp;for&nbsp;you&nbsp;to&lt;br&gt;supply&nbsp;your&nbsp;own&nbsp;ExecutorService&nbsp;for&nbsp;the&nbsp;RabbitMQ&nbsp;Connection&nbsp;to&nbsp;use,&nbsp;and&lt;br&gt;Java&nbsp;supplies&nbsp;some&nbsp;standard&nbsp;ExecutorService&nbsp;implementations&nbsp;which&nbsp;allow&lt;br&gt;you&nbsp;to&nbsp;do&nbsp;some&nbsp;of&nbsp;the&nbsp;management&nbsp;without&nbsp;considerable&nbsp;effort.&lt;/p&gt;&lt;p&gt;My&nbsp;general&nbsp;advice&nbsp;is&nbsp;that&nbsp;this&nbsp;might&nbsp;be&nbsp;a&nbsp;lot&nbsp;of&nbsp;work,&nbsp;and&nbsp;you&nbsp;should&lt;br&gt;consider&nbsp;investing&nbsp;in&nbsp;a&nbsp;sophisticated&nbsp;system&nbsp;only&nbsp;if&nbsp;you&nbsp;have&nbsp;determined&lt;br&gt;that&nbsp;you&nbsp;really&nbsp;need&nbsp;the&nbsp;advantages&nbsp;it&nbsp;might&nbsp;bring.&nbsp;Be&nbsp;aware&nbsp;that&nbsp;these&lt;br&gt;may&nbsp;not&nbsp;include&nbsp;faster&nbsp;throughput,&nbsp;and&nbsp;might&nbsp;upset&nbsp;any&nbsp;ordering&lt;br&gt;guarantees&nbsp;you&nbsp;may&nbsp;be&nbsp;relying&nbsp;upon&nbsp;at&nbsp;present.&lt;/p&gt;&lt;p&gt;I&nbsp;hope&nbsp;this&nbsp;helps.&lt;/p&gt;&lt;p&gt;Steve&nbsp;Powell&nbsp;&amp;nbsp;(a&nbsp;happy&nbsp;kitten)&lt;br&gt;----------some&nbsp;more&nbsp;definitions&nbsp;from&nbsp;the&nbsp;SPD----------&lt;br&gt;chinchilla&nbsp;(n.)&nbsp;Cooling&nbsp;device&nbsp;for&nbsp;the&nbsp;lower&nbsp;jaw.&lt;br&gt;socialcast&nbsp;(n.)&nbsp;Someone&nbsp;to&nbsp;whom&nbsp;everyone&nbsp;is&nbsp;speaking&nbsp;but&nbsp;nobody&nbsp;likes.&lt;br&gt;literacy&nbsp;(n.)&nbsp;A&nbsp;textually&nbsp;transmitted&nbsp;disease&nbsp;usually&nbsp;contracted&nbsp;in&nbsp;childhood.&lt;/p&gt;&lt;p&gt;On&nbsp;22&nbsp;Mar&nbsp;2012,&nbsp;at&nbsp;18:20,&nbsp;Josh&nbsp;Stone&nbsp;wrote:&lt;/p&gt;&lt;p&gt;&amp;gt;&nbsp;I&nbsp;wanted&nbsp;to&nbsp;ask&nbsp;the&nbsp;experts&nbsp;since&nbsp;it's&nbsp;not&nbsp;clear&nbsp;to&nbsp;me&nbsp;-&nbsp;what&nbsp;is&nbsp;the&nbsp;best&nbsp;way&nbsp;to&nbsp;parallelize&nbsp;message&nbsp;consumption&nbsp;from&nbsp;a&nbsp;single&nbsp;queue,&nbsp;using&nbsp;the&nbsp;Java&nbsp;client?&nbsp;&lt;br&gt;&amp;gt;&nbsp;&lt;br&gt;&amp;gt;&nbsp;Thanks,&lt;br&gt;&amp;gt;&nbsp;Josh&lt;br&gt;&amp;gt;&nbsp;______________________________&lt;wbr&gt;_________________&lt;br&gt;&amp;gt;&nbsp;rabbitmq-discuss&nbsp;mailing&nbsp;list&lt;br&gt;&amp;gt;&nbsp;&lt;a&nbsp;href=&quot;mailto:rabbitmq-discuss@lists.rabbitmq.com&quot;&nbsp;target=&quot;_blank&quot;&gt;rabbitmq-discuss@lists.&lt;wbr&gt;rabbitmq.com&lt;/a&gt;&lt;br&gt;&amp;gt;&nbsp;&lt;a&nbsp;href=&quot;https://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss&quot;&nbsp;target=&quot;_blank&quot;&gt;https://lists.rabbitmq.com/&lt;wbr&gt;cgi-bin/mailman/listinfo/&lt;wbr&gt;rabbitmq-discuss&lt;/a&gt;&lt;/p&gt;&lt;p&gt;______________________________&lt;wbr&gt;_________________&lt;br&gt;rabbitmq-discuss&nbsp;mailing&nbsp;list&lt;br&gt;&lt;a&nbsp;href=&quot;mailto:rabbitmq-discuss@lists.rabbitmq.com&quot;&nbsp;target=&quot;_blank&quot;&gt;rabbitmq-discuss@lists.&lt;wbr&gt;rabbitmq.com&lt;/a&gt;&lt;br&gt;&lt;a&nbsp;href=&quot;https://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss&quot;&nbsp;target=&quot;_blank&quot;&gt;https://lists.rabbitmq.com/&lt;wbr&gt;cgi-bin/mailman/listinfo/&lt;wbr&gt;rabbitmq-discuss&lt;/a&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
</tt>
