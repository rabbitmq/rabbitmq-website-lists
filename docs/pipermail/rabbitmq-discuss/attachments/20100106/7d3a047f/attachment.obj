import com.rabbitmq.client.*;

/**
 * Created by IntelliJ IDEA.
 * User: dsinclair
 * Date: Dec 31, 2009
 * Time: 3:30:57 PM
 * To change this template use File | Settings | File Templates.
 */
public class RabbitMQConsumer {
    public static void main(String[] args) throws Exception {
        ConnectionParameters params = new ConnectionParameters();
        params.setUsername("guest");
        params.setPassword("guest");
        params.setVirtualHost("/");
        params.setRequestedHeartbeat(0);

        ConnectionFactory factory = new ConnectionFactory(params);
        Address[] addresses = {new Address("192.168.44.1", 5672),
                new Address("192.168.44.129", 5672)};

        Connection conn = factory.newConnection(addresses, 1);
        Channel channel = conn.createChannel();

        String exchangeName = "myExchange";
        String queueName = "myQueue";
        String routingKey = "testRoute";

        boolean durable = false;

        channel.exchangeDeclare(exchangeName, "direct", durable);
        channel.queueDeclare(queueName, durable);
        channel.queueBind(queueName, exchangeName, routingKey);

        boolean noAck = false;
        QueueingConsumer consumer = new QueueingConsumer(channel);
        channel.basicConsume(queueName, noAck, consumer);

        boolean runInfinite = true;
        while (runInfinite) {
            QueueingConsumer.Delivery delivery;
            try {
                delivery = consumer.nextDelivery();
            } catch (InterruptedException ie) {
                continue;
            }
            System.out.println("Message received" + new String(delivery.getBody()));
            channel.basicAck(delivery.getEnvelope().getDeliveryTag(), false);
        }
        channel.close();
        conn.close();
    }
}