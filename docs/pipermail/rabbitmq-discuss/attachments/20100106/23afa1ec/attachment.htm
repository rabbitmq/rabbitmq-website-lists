<tt>
&lt;div&gt;We&amp;#39;re&nbsp;also&nbsp;looking&nbsp;at&nbsp;about&nbsp;3000&nbsp;messages/second&nbsp;(high&nbsp;side),&nbsp;out&nbsp;of&nbsp;which&nbsp;we&nbsp;need&nbsp;1000&nbsp;of&nbsp;these&nbsp;to&nbsp;be&nbsp;persistent&nbsp;(since&nbsp;they&nbsp;represent&nbsp;payments&nbsp;that&nbsp;must&nbsp;happen).&nbsp;However&nbsp;all&nbsp;of&nbsp;these&nbsp;are&nbsp;currently&nbsp;meant&nbsp;to&nbsp;be&nbsp;synchronous,&nbsp;meaning&nbsp;we&nbsp;have&nbsp;someone&nbsp;sitting&nbsp;on&nbsp;a&nbsp;browser&nbsp;waiting&nbsp;for&nbsp;us&nbsp;to&nbsp;deal&nbsp;with&nbsp;this&nbsp;message&nbsp;and&nbsp;send&nbsp;a&nbsp;response&nbsp;back.&nbsp;So&nbsp;in&nbsp;the&nbsp;short&nbsp;term&nbsp;the&nbsp;only&nbsp;advantage&nbsp;we&amp;#39;re&nbsp;hoping&nbsp;to&nbsp;gain&nbsp;is&nbsp;in&nbsp;the&nbsp;case&nbsp;of&nbsp;the&nbsp;persistent&nbsp;queues.&nbsp;In&nbsp;this&nbsp;case&nbsp;we&amp;#39;re&nbsp;relying&nbsp;on&nbsp;the&nbsp;guarantee&nbsp;that&nbsp;the&nbsp;message&nbsp;will&nbsp;be&nbsp;dealt&nbsp;with&nbsp;even&nbsp;if&nbsp;there&nbsp;is&nbsp;some&nbsp;temporary&nbsp;glitch,&nbsp;and&nbsp;our&nbsp;web&nbsp;based&nbsp;client&nbsp;gets&nbsp;a&nbsp;timeout&nbsp;message. &lt;br&gt;<br>
&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;The&nbsp;way&nbsp;we&nbsp;plan&nbsp;to&nbsp;implement&nbsp;these&nbsp;synchronous&nbsp;messages&nbsp;is,&nbsp;similar&nbsp;to&nbsp;the&nbsp;RPC&nbsp;model,&nbsp;to&nbsp;create&nbsp;a&nbsp;temporary&nbsp;queue&nbsp;when&nbsp;we&nbsp;send&nbsp;out&nbsp;a&nbsp;request&nbsp;and&nbsp;subscribe&nbsp;to&nbsp;that&nbsp;queue&nbsp;with&nbsp;a&nbsp;timeout&nbsp;for&nbsp;a&nbsp;response,&nbsp;deleting&nbsp;it&nbsp;after&nbsp;we&amp;#39;re&nbsp;done.&lt;/div&gt;<br>
&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;now,&nbsp;if&nbsp;the&nbsp;webserver&nbsp;thread&nbsp;breaks&nbsp;out&nbsp;of&nbsp;the&nbsp;wait&nbsp;before&nbsp;the&nbsp;message&nbsp;returns,&nbsp;my&nbsp;understanding&nbsp;is&nbsp;that&nbsp;the&nbsp;temporary&nbsp;queue&nbsp;gets&nbsp;deleted&nbsp;and&nbsp;the&nbsp;response&nbsp;from&nbsp;the&nbsp;backend&nbsp;server&nbsp;is&nbsp;sent&nbsp;to&nbsp;the&nbsp;exchange&nbsp;where&nbsp;it&nbsp;dies.&nbsp;(which&nbsp;is&nbsp;fine)&lt;/div&gt;<br>
&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;if&nbsp;the&nbsp;webserver&nbsp;thread&nbsp;breaks&nbsp;out&nbsp;of&nbsp;the&nbsp;wait&nbsp;after&nbsp;the&nbsp;message&nbsp;returns,&nbsp;the&nbsp;queue&nbsp;gets&nbsp;deleted&nbsp;anyway&nbsp;and&nbsp;the&nbsp;message&nbsp;should&nbsp;vanish.&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;If&nbsp;the&nbsp;webserver&nbsp;thread&nbsp;dies&nbsp;for&nbsp;some&nbsp;reason,&nbsp;the&nbsp;queue&nbsp;gets&nbsp;auto&nbsp;deleted&nbsp;and&nbsp;so&nbsp;the&nbsp; backend&nbsp;server&nbsp;again&nbsp;sends&nbsp;the&nbsp;response&nbsp;to&nbsp;the&nbsp;exchange&nbsp;to&nbsp;a&nbsp;non&nbsp;existent&nbsp;queue.&lt;/div&gt;<br>
&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;However,&nbsp;the&nbsp;problem&nbsp;comes&nbsp;in&nbsp;when&nbsp;the&nbsp;webserver&nbsp;thread&nbsp;dies&nbsp;just&nbsp;as&nbsp;the&nbsp;response&nbsp;returns&nbsp;on&nbsp;the&nbsp;temporary&nbsp;queue.&nbsp;When&nbsp;this&nbsp;race&nbsp;condition&nbsp;occurs,&nbsp;the&nbsp;queue&nbsp;should&nbsp;remain&nbsp;on&nbsp;the&nbsp;rabbitmq-server&nbsp;forever.&nbsp;Is&nbsp;this&nbsp;right,&nbsp;or&nbsp;is&nbsp;there&nbsp;something&nbsp;I&amp;#39;m&nbsp;missing?&lt;/div&gt;<br>
&lt;br&gt;&lt;div&nbsp;class=&quot;gmail_quote&quot;&gt;On&nbsp;Fri,&nbsp;Jan&nbsp;1,&nbsp;2010&nbsp;at&nbsp;1:06&nbsp;AM,&nbsp;vishnu&nbsp;&lt;span&nbsp;dir=&quot;ltr&quot;&gt;&amp;lt;&lt;a&nbsp;href=&quot;mailto:pathsny@gmail.com&quot;&gt;pathsny@gmail.com&lt;/a&gt;&amp;gt;&lt;/span&gt;&nbsp;wrote:&lt;br&gt;&lt;blockquote&nbsp;class=&quot;gmail_quote&quot;&nbsp;style=&quot;margin:0&nbsp;0&nbsp;0&nbsp;.8ex;border-left:1px&nbsp;#ccc&nbsp;solid;padding-left:1ex;&quot;&gt;<br>
fair&nbsp;enough,&nbsp;let&nbsp;me&nbsp;come&nbsp;back&nbsp;with&nbsp;some&nbsp;numbers&nbsp;:),&nbsp;I&nbsp;just&nbsp;wanted&nbsp;to&nbsp;first&nbsp;make&nbsp;sure&nbsp;I&amp;#39;m&nbsp;not&nbsp;doing&nbsp;something&nbsp;brain&nbsp;dead&nbsp;:). &lt;div&gt;&lt;div&nbsp;class=&quot;h5&quot;&gt;&lt;br&gt;&lt;br&gt;&lt;div&nbsp;class=&quot;gmail_quote&quot;&gt;On&nbsp;Thu,&nbsp;Dec&nbsp;31,&nbsp;2009&nbsp;at&nbsp;8:51&nbsp;PM,&nbsp;Chuck&nbsp;Remes&nbsp;&lt;span&nbsp;dir=&quot;ltr&quot;&gt;&amp;lt;&lt;a&nbsp;href=&quot;mailto:cremes.devlist@mac.com&quot;&nbsp;target=&quot;_blank&quot;&gt;cremes.devlist@mac.com&lt;/a&gt;&amp;gt;&lt;/span&gt;&nbsp;wrote:&lt;br&gt;<br>
<br>
&lt;blockquote&nbsp;class=&quot;gmail_quote&quot;&nbsp;style=&quot;margin:0&nbsp;0&nbsp;0&nbsp;.8ex;border-left:1px&nbsp;#ccc&nbsp;solid;padding-left:1ex&quot;&gt;&lt;div&gt;&lt;div&gt;&lt;br&gt;<br>
On&nbsp;Dec&nbsp;31,&nbsp;2009,&nbsp;at&nbsp;9:15&nbsp;AM,&nbsp;vishnu&nbsp;wrote:&lt;br&gt;<br>
&lt;br&gt;<br>
&amp;gt;&nbsp;Hi&lt;br&gt;<br>
&amp;gt;&nbsp; &nbsp; We&amp;#39;re&nbsp;looking&nbsp;at&nbsp;building&nbsp;an&nbsp;application&nbsp;that&nbsp;does&nbsp;a&nbsp;fair&nbsp;amount&lt;br&gt;<br>
&amp;gt;&nbsp;of&nbsp;synchronous&nbsp;processing.&nbsp;However&nbsp;we&nbsp;are&nbsp;investigating&nbsp;using&nbsp;a&lt;br&gt;<br>
&amp;gt;&nbsp;queuing&nbsp;system&nbsp;as&nbsp;a&nbsp;messaging&nbsp;bus&nbsp;because&nbsp;some&nbsp;of&nbsp;these&nbsp;processes&lt;br&gt;<br>
&amp;gt;&nbsp;are&nbsp;meant&nbsp;to&nbsp;be&nbsp;reliable.&nbsp;Using&nbsp;a&nbsp;queue&nbsp;helps&nbsp;us&nbsp;guarantee&nbsp;that&lt;br&gt;<br>
&amp;gt;&nbsp;messages&nbsp;are&nbsp;dealt&nbsp;with&nbsp;and&nbsp;avoids&nbsp;us&nbsp;having&nbsp;to&nbsp;right&nbsp;background&lt;br&gt;<br>
&amp;gt;&nbsp;processes&nbsp;to&nbsp;clean&nbsp;up&nbsp;after&nbsp;us.&lt;br&gt;<br>
&amp;gt;&lt;br&gt;<br>
&amp;gt;&nbsp;There&nbsp;are,&nbsp;however,&nbsp;a&nbsp;fair&nbsp;number&nbsp;of&nbsp;operations&nbsp;that&nbsp;are&nbsp;not&lt;br&gt;<br>
&amp;gt;&nbsp;required&nbsp;to&nbsp;be&nbsp;reliable&nbsp;and&nbsp;we&nbsp;are&nbsp;thinking&nbsp;of&nbsp;implementing&nbsp;these&lt;br&gt;<br>
&amp;gt;&nbsp;also&nbsp;through&nbsp;the&nbsp;queue&nbsp;but&nbsp;use&nbsp;non&nbsp;persistent&nbsp;queues.&nbsp;Now&nbsp;the&lt;br&gt;<br>
&amp;gt;&nbsp;concern&nbsp;we&nbsp;have&nbsp;is&nbsp;the&nbsp;kinds&nbsp;of&nbsp;latencies&nbsp;we&nbsp;might&nbsp;see.&nbsp;So&nbsp;I&amp;#39;d&nbsp;like&lt;br&gt;<br>
&amp;gt;&nbsp;to&nbsp;get&nbsp;general&nbsp;feedback&nbsp;on&nbsp;using&nbsp;this&nbsp;approach.&lt;br&gt;<br>
&lt;br&gt;<br>
&lt;/div&gt;&lt;/div&gt;Give&nbsp;us&nbsp;some&nbsp;idea&nbsp;of&nbsp;the&nbsp;data&nbsp;rates&nbsp;you&nbsp;are&nbsp;expecting.&nbsp;I&nbsp;regularly&lt;br&gt;<br>
publish&nbsp;3000+&nbsp;messages/second&nbsp;using&nbsp;ruby&nbsp;which&nbsp;isn&amp;#39;t&nbsp;exactly&nbsp;known&nbsp;for&lt;br&gt;<br>
its&nbsp;performance.&nbsp;:)&nbsp; Latency&nbsp;is&nbsp;a&nbsp;millisecond&nbsp;or&nbsp;so&nbsp;for&nbsp;topic&lt;br&gt;<br>
exchanges,&nbsp;and&nbsp;under&nbsp;1&nbsp;millisecond&nbsp;for&nbsp;direct&nbsp;and&nbsp;fanout&nbsp;exchanges.&lt;br&gt;<br>
(Exchange&nbsp;type&nbsp;matters&nbsp;due&nbsp;to&nbsp;matching&nbsp;overhead.)&lt;br&gt;<br>
&lt;br&gt;<br>
However,&nbsp;since&nbsp;you&nbsp;say&nbsp;that&nbsp;all&nbsp;processing&nbsp;is&nbsp;synchronous,&nbsp;the&nbsp;length&lt;br&gt;<br>
of&nbsp;time&nbsp;to&nbsp;complete&nbsp;that&nbsp;process&nbsp;will&nbsp;be&nbsp;your&nbsp;gating&nbsp;factor.&lt;br&gt;<br>
&lt;font&nbsp;color=&quot;#888888&quot;&gt;&lt;br&gt;<br>
cr&lt;br&gt;<br>
&lt;/font&gt;&lt;div&gt;&lt;div&gt;&lt;br&gt;<br>
&lt;br&gt;<br>
_______________________________________________&lt;br&gt;<br>
rabbitmq-discuss&nbsp;mailing&nbsp;list&lt;br&gt;<br>
&lt;a&nbsp;href=&quot;mailto:rabbitmq-discuss@lists.rabbitmq.com&quot;&nbsp;target=&quot;_blank&quot;&gt;rabbitmq-discuss@lists.rabbitmq.com&lt;/a&gt;&lt;br&gt;<br>
&lt;a&nbsp;href=&quot;http://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss&quot;&nbsp;target=&quot;_blank&quot;&gt;http://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss&lt;/a&gt;&lt;br&gt;<br>
&lt;/div&gt;&lt;/div&gt;&lt;/blockquote&gt;&lt;/div&gt;&lt;br&gt;<br>
&lt;/div&gt;&lt;/div&gt;&lt;/blockquote&gt;&lt;/div&gt;&lt;br&gt;<br>

</tt>
