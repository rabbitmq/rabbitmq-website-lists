<tt>
&lt;html&gt;&lt;body&nbsp;style=&quot;word-wrap:&nbsp;break-word;&nbsp;-webkit-nbsp-mode:&nbsp;space;&nbsp;-webkit-line-break:&nbsp;after-white-space;&nbsp;&quot;&gt;Ed,&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;Thanks&nbsp;for&nbsp;taking&nbsp;time&nbsp;to&nbsp;look&nbsp;into&nbsp;this&nbsp;so&nbsp;deeply.&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;You&nbsp;have&nbsp;indeed&nbsp;found&nbsp;a&nbsp;bug&nbsp;in&nbsp;the&nbsp;network&nbsp;client&nbsp;with&nbsp;the&nbsp;fact&nbsp;that&nbsp;it&nbsp;is&nbsp;not&nbsp;shutting&nbsp;the&nbsp;per-channel&nbsp;writer&nbsp;processes&nbsp;down.&nbsp;See&nbsp;below.&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;div&gt;&lt;div&gt;On&nbsp;8&nbsp;May&nbsp;2008,&nbsp;at&nbsp;22:12,&nbsp;Edwin&nbsp;Fine&nbsp;wrote:&lt;/div&gt;&lt;blockquote&nbsp;type=&quot;cite&quot;&gt;&lt;br&gt;Sorry&nbsp;for&nbsp;the&nbsp;long&nbsp;email.&nbsp;Trying&nbsp;to&nbsp;get&nbsp;to&nbsp;the&nbsp;bottom&nbsp;of&nbsp;the&nbsp;problems.&nbsp;I&nbsp;have&nbsp;done&nbsp;a&nbsp;LOT&nbsp;more&nbsp;investigation&nbsp;into&nbsp;the&nbsp;Erlang&nbsp;network&nbsp;client,&nbsp;and&nbsp;I&nbsp;believe&nbsp;there&nbsp;are&nbsp;two&nbsp;related&nbsp;bugs,&nbsp;one&nbsp;in&nbsp;the&nbsp;client,&nbsp;and&nbsp;the&nbsp;other&nbsp;I&nbsp;don't&nbsp;know&nbsp;where,&nbsp;or&nbsp;perhaps&nbsp;I&nbsp;am&nbsp;abusing&nbsp;how&nbsp;AMQP&nbsp;is&nbsp;supposed&nbsp;to&nbsp;work.&lt;br&gt;&nbsp;&lt;br&gt;&lt;b&gt;Bug&nbsp;#1:&nbsp;rabbit_writer&nbsp;not&nbsp;shut&nbsp;down&lt;br&gt;&lt;/b&gt;&lt;br&gt;The&nbsp;first&nbsp;(and&nbsp;easier)&nbsp;bug,&nbsp;which&nbsp;I&nbsp;have&nbsp;fixed&nbsp;eventually,&nbsp;is&nbsp;that&nbsp;every&nbsp;time&nbsp;you&nbsp;start&nbsp;a&nbsp;channel,&nbsp;the&nbsp;network&nbsp;client&nbsp;creates&nbsp;a&nbsp;rabbit_writer,&nbsp;but&nbsp;never&nbsp;shuts&nbsp;it&nbsp;down.&nbsp;Therefore,&nbsp;each&nbsp;channel&nbsp;that&nbsp;is&nbsp;created&nbsp;leaves&nbsp;behind&nbsp;a&nbsp;rabbit_writer&nbsp;process.&lt;br&gt;&nbsp;What&nbsp;happens&nbsp;is&nbsp;that&nbsp;in&nbsp;the&nbsp;handshake,&nbsp;the&nbsp;network&nbsp;driver&nbsp;starts&nbsp;a&nbsp;rabbit_writer&nbsp;on&nbsp;channel&nbsp;0.&nbsp;I&nbsp;believe&nbsp;this&nbsp;is&nbsp;used&nbsp;for&nbsp;the&nbsp;connection&nbsp;itself.&nbsp;Its&nbsp;pid&nbsp;is&nbsp;stored&nbsp;in&nbsp;writer_pid&nbsp;in&nbsp;the&nbsp;connection_state.&nbsp;This&nbsp;writer&nbsp;gets&nbsp;cleaned&nbsp;up&nbsp;properly&nbsp;when&nbsp;the&nbsp;connection&nbsp;is&nbsp;shut&nbsp;down.&nbsp;There&nbsp;is&nbsp;no&nbsp;problem&nbsp;with&nbsp;this.&lt;br&gt;&nbsp;Thereafter,&nbsp;when&nbsp;a&nbsp;channel&nbsp;is&nbsp;opened&nbsp;and&nbsp;amqp_network_driver:open_channel&nbsp;is&nbsp;called,&nbsp;another&nbsp;writer&nbsp;is&nbsp;started&nbsp;(correctly&nbsp;-&nbsp;need&nbsp;one&nbsp;per&nbsp;connection,&nbsp;right?).&nbsp;There&nbsp;is&nbsp;a&nbsp;singleton&nbsp;reader.&nbsp;Anyway,&nbsp;this&nbsp;writer&nbsp;is&nbsp;never&nbsp;terminated.&nbsp;The&nbsp;writer&nbsp;is&nbsp;registered&nbsp;as&nbsp;a&nbsp;peer&nbsp;to&nbsp;the&nbsp;channel,&nbsp;using&nbsp;amqp_channel:register_direct_peer.&nbsp;This&nbsp;causes&nbsp;a&nbsp;bug,&nbsp;because&nbsp;the&nbsp;registered&nbsp;peer&nbsp;is&nbsp;never&nbsp;shut&nbsp;down,&nbsp;probably&nbsp;because&nbsp;the&nbsp;direct&nbsp;peer&nbsp;never&nbsp;should&nbsp;be&nbsp;shut&nbsp;down...&nbsp;but&nbsp;this&nbsp;is&nbsp;the&nbsp;NETWORK&nbsp;peer.&lt;br&gt;&nbsp;&lt;br&gt;So&nbsp;what&nbsp;I&nbsp;did&nbsp;(and&nbsp;you&nbsp;may&nbsp;have&nbsp;a&nbsp;better&nbsp;way)&nbsp;is&nbsp;to&nbsp;add&nbsp;another&nbsp;function,&nbsp;amqp_channel:register_network_peer.&nbsp;This&nbsp;sets&nbsp;a&nbsp;&quot;direct&quot;&nbsp;flag&nbsp;in&nbsp;the&nbsp;channel_state&nbsp;(which&nbsp;I&nbsp;had&nbsp;to&nbsp;add)&nbsp;to&nbsp;false.&nbsp;Calling&nbsp;register_direct_peer&nbsp;sets&nbsp;the&nbsp;flag&nbsp;to&nbsp;true.&nbsp;When&nbsp;amqp_channel:channel_cleanup()&nbsp;is&nbsp;eventually&nbsp;called&nbsp;(and&nbsp;I&nbsp;had&nbsp;to&nbsp;do&nbsp;something&nbsp;for&nbsp;this,&nbsp;too),&nbsp;it&nbsp;checks&nbsp;to&nbsp;see&nbsp;if&nbsp;direct&nbsp;is&nbsp;false.&nbsp;If&nbsp;so,&nbsp;it&nbsp;stops&nbsp;the&nbsp;writer&nbsp;in&nbsp;writer_pid,&nbsp;otherwise&nbsp;it&nbsp;leaves&nbsp;it&nbsp;alone.&lt;br&gt;&nbsp;&lt;br&gt;&lt;/blockquote&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;I&nbsp;can&nbsp;see&nbsp;what&nbsp;the&nbsp;intention&nbsp;is.&nbsp;The&nbsp;main&nbsp;thing&nbsp;is&nbsp;that&nbsp;you&nbsp;have&nbsp;understood&nbsp;how&nbsp;all&nbsp;of&nbsp;the&nbsp;processes&nbsp;hang&nbsp;together&nbsp;which&nbsp;is&nbsp;a&nbsp;little&nbsp;tricky&nbsp;in&nbsp;the&nbsp;network&nbsp;case&nbsp;because&nbsp;the&nbsp;client&nbsp;is&nbsp;using&nbsp;a&nbsp;common&nbsp;codebase&nbsp;with&nbsp;the&nbsp;server&nbsp;to&nbsp;manage&nbsp;socket&nbsp;IO&nbsp;and&nbsp;AMQP&nbsp;channels.&nbsp;This&nbsp;is&nbsp;why&nbsp;it&nbsp;may&nbsp;not&nbsp;be&amp;nbsp;immediately&amp;nbsp;apparent&nbsp;to&nbsp;the&nbsp;naked&nbsp;eye&nbsp;why&nbsp;certain&nbsp;things&nbsp;have&nbsp;been&nbsp;done&nbsp;in&nbsp;the&nbsp;way&nbsp;they&nbsp;are.&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;To&amp;nbsp;achieve&nbsp;this&nbsp;I&nbsp;think&nbsp;the&nbsp;cleanup&nbsp;should&nbsp;be&nbsp;contained&nbsp;within&nbsp;the&nbsp;network&nbsp;driver&nbsp;either&nbsp;as&nbsp;a&nbsp;callback&nbsp;to&nbsp;allow&nbsp;the&nbsp;network&nbsp;driver&nbsp;to&nbsp;stop&nbsp;the&nbsp;channel&nbsp;writer&nbsp;process&nbsp;or&nbsp;even&nbsp;linking&nbsp;the&nbsp;channel&nbsp;process&nbsp;with&nbsp;the&nbsp;writer&nbsp;process&nbsp;so&nbsp;that&nbsp;when&nbsp;the&nbsp;channel&nbsp;exits,&nbsp;the&nbsp;writer&nbsp;process&nbsp;receives&nbsp;a&nbsp;signal&nbsp;as&nbsp;well.&nbsp;I&nbsp;think&nbsp;I&nbsp;prefer&nbsp;the&nbsp;latter,&nbsp;but&nbsp;this&nbsp;would&nbsp;mean&nbsp;changing&nbsp;the&nbsp;writer&nbsp;module,&nbsp;which&nbsp;is&nbsp;core&nbsp;module&nbsp;of&nbsp;the&nbsp;server&amp;nbsp;and&nbsp;we'd&nbsp;need&nbsp;to&nbsp;look&nbsp;at&nbsp;the&nbsp;implications&nbsp;of&nbsp;this.&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;So&nbsp;watch&nbsp;this&nbsp;space.&lt;/div&gt;&lt;br&gt;&lt;blockquote&nbsp;type=&quot;cite&quot;&gt;I&nbsp;also&nbsp;had&nbsp;to&nbsp;add&nbsp;a&nbsp;call&nbsp;to&nbsp;channel_cleanup&nbsp;in&nbsp;the&nbsp;close_ok,&nbsp;because&nbsp;the&nbsp;cleanup&nbsp;was&nbsp;never&nbsp;getting&nbsp;called.:&lt;br&gt;&lt;br&gt;amqp_channel:handle_method(ChannelCloseOk&nbsp;=&nbsp;#'channel.close_ok'{},&nbsp;State)&nbsp;-&gt;&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;{noreply,&nbsp;NewState}&nbsp;=&nbsp;rpc_bottom_half(ChannelCloseOk,&nbsp;State),&lt;br&gt;&nbsp;&lt;b&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;NewState2&nbsp;=&nbsp;channel_cleanup(State),&lt;/b&gt;&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;{stop,&nbsp;normal,&nbsp;NewState2};&lt;br&gt;&lt;br&gt;&lt;/blockquote&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;That's&nbsp;a&nbsp;good&nbsp;point.&nbsp;I&nbsp;think&nbsp;the&nbsp;cleanup&nbsp;code&nbsp;should&nbsp;go&nbsp;into&nbsp;the&nbsp;gen_server&nbsp;terminate&nbsp;callback&nbsp;to&nbsp;keep&nbsp;it&nbsp;one&nbsp;place.&lt;/div&gt;&lt;br&gt;&lt;blockquote&nbsp;type=&quot;cite&quot;&gt;&lt;b&gt;Maybe-Bug&nbsp;#2:&nbsp;I&nbsp;believe&nbsp;that&nbsp;multiple&nbsp;concurrent&nbsp;consumers&nbsp;cannot&nbsp;self-register&lt;br&gt;&lt;/b&gt;&lt;br&gt;If&nbsp;all&nbsp;consumers&nbsp;are&nbsp;registered&nbsp;by&nbsp;a&nbsp;single&nbsp;process&nbsp;(which&nbsp;is&nbsp;what&nbsp;I&nbsp;used&nbsp;to&nbsp;do,&nbsp;and&nbsp;it&nbsp;worked),&nbsp;and&nbsp;not&nbsp;by&nbsp;the&nbsp;consumer&nbsp;process&nbsp;itself,&nbsp;all&nbsp;consume_ok&nbsp;methods&nbsp;are&nbsp;returned&nbsp;correctly.&nbsp;However,&nbsp;if&nbsp;you&nbsp;start&nbsp;more&nbsp;than&nbsp;one&nbsp;consumer&nbsp;right&nbsp;after&nbsp;each&nbsp;other,&nbsp;and&nbsp;they&nbsp;try&nbsp;to&nbsp;self-register,&nbsp;things&nbsp;get&nbsp;mixed&nbsp;up.&nbsp;Take&nbsp;a&nbsp;look&nbsp;at&nbsp;this&nbsp;output&nbsp;below.&nbsp;The&nbsp;key&nbsp;is&nbsp;this&nbsp;debug&nbsp;print:&lt;br&gt;&nbsp;&lt;br&gt;&lt;b&gt;&lt;/b&gt;&lt;br&gt;However,&nbsp;the&nbsp;basic.consume&nbsp;method&nbsp;was&nbsp;called&nbsp;with&nbsp;the&nbsp;consumer's&nbsp;PID,&nbsp;and&nbsp;my&nbsp;understanding&nbsp;is&nbsp;that&nbsp;providing&nbsp;the&nbsp;pid&nbsp;of&nbsp;the&nbsp;consumer&nbsp;will&nbsp;ensure&nbsp;that&nbsp;the&nbsp;response&nbsp;gets&nbsp;back&nbsp;to&nbsp;the&nbsp;right&nbsp;one.&nbsp;Here&nbsp;is&nbsp;my&nbsp;code,&nbsp;where&nbsp;you&nbsp;can&nbsp;see&nbsp;the&nbsp;self():&lt;br&gt;&nbsp;&lt;br&gt;&lt;span&nbsp;style=&quot;font-family:&nbsp;courier&nbsp;new,monospace;&quot;&gt;&lt;/span&gt;&lt;b&nbsp;style=&quot;font-family:&nbsp;courier&nbsp;new,monospace;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;#'basic.consume_ok'{consumer_tag&nbsp;=&nbsp;NewConsumerTag}&nbsp;=&nbsp;amqp_channel:call(Channel,&nbsp;BasicConsume,&nbsp;self()),&lt;/b&gt;&lt;br&nbsp;style=&quot;font-family:&nbsp;courier&nbsp;new,monospace;&quot;&gt;&nbsp;&lt;span&nbsp;style=&quot;font-family:&nbsp;courier&nbsp;new,monospace;&quot;&gt;&lt;/span&gt;&lt;br&gt;And&nbsp;the&nbsp;corresponding&nbsp;output,&nbsp;showing&nbsp;that&nbsp;the&nbsp;responses&nbsp;are&nbsp;mixed&nbsp;together.&lt;br&gt;&lt;br&gt;&lt;span&nbsp;style=&quot;font-family:&nbsp;courier&nbsp;new,monospace;&quot;&gt;[&amp;lt;0.121.0&gt;]&nbsp;Subscribing&nbsp;consumer&nbsp;&amp;lt;&amp;lt;&quot;EMF_TEST_Q.1&quot;&gt;&gt;&nbsp;to&nbsp;channel&nbsp;&amp;lt;0.117.0&gt;&lt;/span&gt;&lt;br&nbsp;style=&quot;font-family:&nbsp;courier&nbsp;new,monospace;&quot;&gt;&nbsp;&lt;b&gt;&lt;span&nbsp;style=&quot;font-family:&nbsp;courier&nbsp;new,monospace;&quot;&gt;[&amp;lt;0.122.0&gt;]&nbsp;Subscribing&nbsp;consumer&nbsp;&amp;lt;&amp;lt;&quot;EMF_TEST_Q.2&quot;&gt;&gt;&nbsp;to&nbsp;channel&nbsp;&amp;lt;0.117.0&gt;&lt;/span&gt;&lt;br&nbsp;style=&quot;font-family:&nbsp;courier&nbsp;new,monospace;&quot;&gt;&lt;/b&gt;&nbsp;&lt;span&nbsp;style=&quot;font-family:&nbsp;courier&nbsp;new,monospace;&quot;&gt;&lt;/span&gt;&lt;span&nbsp;style=&quot;font-family:&nbsp;courier&nbsp;new,monospace;&quot;&gt;[&amp;lt;0.122.0&gt;]&nbsp;subscribing:&nbsp;Response&nbsp;from&nbsp;amqp_channel:call&nbsp;consumer_tag&nbsp;=&nbsp;&amp;lt;&amp;lt;&quot;EMF_TEST_Q.1&quot;&gt;&gt;&nbsp;from&nbsp;channel&nbsp;&amp;lt;0.117.0&gt;&lt;/span&gt;&lt;br&nbsp;style=&quot;font-family:&nbsp;courier&nbsp;new,monospace;&quot;&gt;&nbsp;&lt;b&gt;&lt;span&nbsp;style=&quot;font-family:&nbsp;courier&nbsp;new,monospace;&quot;&gt;[&amp;lt;0.122.0&gt;]&nbsp;received&nbsp;consume_ok:&nbsp;Actual&nbsp;tag:&nbsp;&amp;lt;&amp;lt;&quot;EMF_TEST_Q.1&quot;&gt;&gt;&nbsp;Expected&nbsp;Tag:&nbsp;&amp;lt;&amp;lt;&quot;EMF_TEST_Q.2&quot;&gt;&gt;&lt;/span&gt;&lt;/b&gt;&lt;br&nbsp;style=&quot;font-family:&nbsp;courier&nbsp;new,monospace;&quot;&gt;&nbsp;&lt;span&nbsp;style=&quot;font-family:&nbsp;courier&nbsp;new,monospace;&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;/blockquote&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;Yes,&nbsp;&amp;nbsp;this&nbsp;is&nbsp;a&nbsp;bug.&nbsp;On&nbsp;inspection&nbsp;of&nbsp;the&amp;nbsp;handle_call({basic_consume,&nbsp;Method,&nbsp;Consumer},&nbsp;From,&nbsp;State)&nbsp;function&nbsp;in&nbsp;amqp_channel,&nbsp;there&nbsp;is&nbsp;a&amp;nbsp;race&nbsp;condition&nbsp;between&nbsp;concurrently&nbsp;subscribing&nbsp;consumers.&nbsp;I&nbsp;will&nbsp;probably&nbsp;address&nbsp;this&nbsp;using&nbsp;the&nbsp;same&nbsp;strategy&nbsp;to&nbsp;serialize&nbsp;all&nbsp;synchronous&nbsp;RPC&nbsp;requests.&nbsp;If&nbsp;the&nbsp;client&nbsp;supplies&nbsp;a&nbsp;unique&nbsp;tag&nbsp;to&nbsp;correlate&nbsp;on,&nbsp;this&nbsp;could&nbsp;be&nbsp;done&nbsp;concurrently&nbsp;by&nbsp;maintaining&nbsp;a&nbsp;map&nbsp;of&nbsp;pending&nbsp;subscriptions&nbsp;rather&nbsp;than&nbsp;just&nbsp;the&nbsp;last&nbsp;pending&nbsp;subscription.&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;I'll&nbsp;fix&nbsp;this&nbsp;and&nbsp;let&nbsp;you&nbsp;know.&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;In&nbsp;your&nbsp;patch,&nbsp;you&nbsp;also&nbsp;added&nbsp;an&nbsp;extra&nbsp;method&nbsp;to&nbsp;handle&nbsp;a&nbsp;spurious&nbsp;consume_ok&nbsp;message;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;%%&nbsp;Edwin&nbsp;Fine&nbsp;bugfix:&nbsp;This&nbsp;is&nbsp;actually&nbsp;being&nbsp;called&nbsp;wrong&nbsp;from&nbsp;somewhere,&lt;/div&gt;&lt;div&gt;%%&nbsp;but&nbsp;this&nbsp;will&nbsp;fix&nbsp;it.&lt;/div&gt;&lt;div&gt;handle_method({'basic.consume_ok',&nbsp;ConsumerTag},&nbsp;State)&nbsp;-&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;&nbsp;&amp;nbsp;io:format(&quot;[~p]&nbsp;Got&nbsp;bad&nbsp;handle_method&nbsp;call!~n&quot;,&nbsp;[self()]),&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;&nbsp;&amp;nbsp;handle_method(#'basic.consume_ok'{consumer_tag&nbsp;=&nbsp;ConsumerTag},&nbsp;State);&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;This&nbsp;method&nbsp;is&nbsp;preceded&nbsp;in&nbsp;the&nbsp;code&nbsp;by&nbsp;the&nbsp;following&nbsp;function:&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;handle_method(BasicConsumeOk&nbsp;=&nbsp;#'basic.consume_ok'{consumer_tag&nbsp;=&nbsp;ConsumerTag},&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&nbsp;&amp;nbsp;State&nbsp;=&nbsp;#channel_state{pending_consumer&nbsp;=&nbsp;Consumer})&nbsp;-&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;&nbsp;&amp;nbsp;Consumer&nbsp;!&nbsp;BasicConsumeOk,&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;&nbsp;&amp;nbsp;NewState&nbsp;=&nbsp;register_consumer(ConsumerTag,&nbsp;Consumer,&nbsp;State),&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;&nbsp;&amp;nbsp;{noreply,&nbsp;NewState2}&nbsp;=&nbsp;rpc_bottom_half(BasicConsumeOk,&nbsp;NewState),&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;&nbsp;&amp;nbsp;{noreply,&nbsp;NewState2#channel_state{pending_consumer&nbsp;=&nbsp;&amp;lt;&amp;lt;&gt;&gt;}&nbsp;};&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;So&nbsp;I&nbsp;not&nbsp;quite&nbsp;sure&nbsp;why&nbsp;that&nbsp;didn't&nbsp;match&nbsp;first&nbsp;because&amp;nbsp;#'basic.consume_ok'{consumer_tag&nbsp;=&nbsp;ConsumerTag}&nbsp;should&nbsp;match&nbsp;against&amp;nbsp;{'basic.consume_ok',&nbsp;ConsumerTag}&nbsp;and&amp;nbsp;#channel_state{pending_consumer&nbsp;=&nbsp;Consumer}&nbsp;should&nbsp;match&nbsp;even&nbsp;if&nbsp;the&nbsp;pending_consumer&nbsp;was&nbsp;not&nbsp;defined.&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;This&nbsp;will&nbsp;require&nbsp;some&nbsp;more&nbsp;analysis.&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;HTH,&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;Ben&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/body&gt;&lt;/html&gt;
</tt>
