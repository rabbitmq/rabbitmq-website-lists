<tt>
&lt;div&nbsp;class=&quot;gmail_quote&quot;&gt;&lt;div&gt;Hi&nbsp;Ricardo,&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;There&nbsp;are&nbsp;several&nbsp;problems&nbsp;in&nbsp;your&nbsp;code,&nbsp;both&nbsp;on&nbsp;the&nbsp;sender&nbsp;and&nbsp;on&nbsp;the&nbsp;receiver&nbsp;side.&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;[sender]&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;If&nbsp;you&nbsp;use&nbsp;the&nbsp;library&nbsp;node-amqp&nbsp;provided&nbsp;here &lt;a&nbsp;href=&quot;https://github.com/postwait/node-amqp&quot;&gt;https://github.com/postwait/node-amqp&lt;/a&gt;,&lt;/div&gt;<br>
&lt;div&gt;you&nbsp;may&nbsp;install&nbsp;it&nbsp;with&nbsp;npm&nbsp; (the&nbsp;node&nbsp;package&nbsp;manager),&nbsp;using&nbsp;the&nbsp;following&nbsp;command&nbsp;in&nbsp;a&nbsp;shell:&lt;/div&gt;&lt;div&gt;$&nbsp;npm&nbsp;install&nbsp;-g&nbsp;amqp&lt;/div&gt;&lt;div&gt;This&nbsp;will&nbsp;install&nbsp;the&nbsp;amqp&nbsp;library&nbsp;in&nbsp;the&nbsp;directory&nbsp;/lib/node_modules&nbsp;of&nbsp;your&nbsp;node&nbsp;installation&nbsp;directory.&lt;/div&gt;<br>
&lt;div&gt;Now,&nbsp;check&nbsp;that&nbsp;you&nbsp;have&nbsp;properly&nbsp;added  /lib/node_modules&nbsp;to&nbsp;your&nbsp;NODE_PATH.&lt;/div&gt;&lt;div&gt;If&nbsp;it&nbsp;is&nbsp;the&nbsp;case,&nbsp;your&nbsp;import&nbsp;is require(&amp;#39;amqp&amp;#39;)&nbsp;and&nbsp;not require(&amp;#39;./amqp&amp;#39;)&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;So&nbsp;here&nbsp;is&nbsp;the&nbsp;code&nbsp;you&nbsp;should&nbsp;use:&lt;/div&gt;<br>
&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;var&nbsp;amqp&nbsp;=&nbsp;require(&amp;#39;amqp&amp;#39;);&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;var&nbsp;connection&nbsp;=&nbsp;amqp.createConnection({&nbsp;host:&nbsp;&amp;#39;localhost&amp;#39;&nbsp;});&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;//&nbsp;Wait&nbsp;for&nbsp;connection&nbsp;to&nbsp;become&nbsp;established.&lt;/div&gt;<br>
&lt;div&gt;connection.on(&amp;#39;ready&amp;#39;,&nbsp;function&nbsp;()&nbsp;{&lt;/div&gt;&lt;div&gt; &nbsp; var&nbsp;x&nbsp;=&nbsp;connection.exchange()&lt;/div&gt;&lt;div&gt; &nbsp; var&nbsp;q&nbsp;=&nbsp;connection.queue(&amp;quot;aqueuename&amp;quot;,&lt;/div&gt;&lt;div&gt; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;{&nbsp;autoDelete:&nbsp;true,&nbsp;durable:&nbsp;false,&nbsp;exclusive:&nbsp;false&nbsp;});&lt;/div&gt;<br>
&lt;div&gt; &nbsp; //&nbsp;Wait&nbsp;for&nbsp;the&nbsp;queue&nbsp;to&nbsp;be&nbsp;declared.&lt;span&nbsp;class=&quot;Apple-tab-span&quot;&nbsp;style=&quot;white-space:pre&quot;&gt;&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&lt;/span&gt;&lt;/div&gt;&lt;div&gt; &nbsp; q.on(&amp;#39;queueDeclareOk&amp;#39;,&nbsp;function(){&lt;/div&gt;&lt;div&gt;&lt;span&nbsp;class=&quot;Apple-tab-span&quot;&nbsp;style=&quot;white-space:pre&quot;&gt;&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&lt;/span&gt;x.publish(&amp;#39;aqueuename&amp;#39;,&nbsp;&amp;quot;bar&amp;quot;);&lt;/div&gt;<br>
&lt;div&gt;&lt;span&nbsp;class=&quot;Apple-tab-span&quot;&nbsp;style=&quot;white-space:pre&quot;&gt;&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&lt;/span&gt;connection.end();&lt;/div&gt;&lt;div&gt; &nbsp; });&lt;/div&gt;&lt;div&gt;});&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;[receiver]&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;I&nbsp;hadn&amp;#39;t&nbsp;ever&nbsp;use&nbsp;AsyncoreConnection,&nbsp;but&nbsp;you&nbsp;can&nbsp;use BlockingConnection&nbsp;:&lt;/div&gt;<br>
&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;#!/usr/bin/env&nbsp;python&lt;/div&gt;&lt;div&gt;import&nbsp;pika&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;connection&nbsp;=&nbsp;pika.BlockingConnection(pika.ConnectionParameters(host=&amp;#39;localhost&amp;#39;))&lt;/div&gt;&lt;div&gt;channel&nbsp;=&nbsp;connection.channel()&lt;/div&gt;<br>
&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;q&nbsp;=&nbsp;channel.queue_declare(queue=&amp;#39;aqueuename&amp;#39;,&lt;/div&gt;&lt;div&gt; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;auto_delete=True,&lt;/div&gt;&lt;div&gt; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;durable=False,&lt;/div&gt;&lt;div&gt; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;exclusive=False)&lt;/div&gt;<br>
&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;print&nbsp;&amp;#39;&nbsp;[*]&nbsp;Waiting&nbsp;for&nbsp;messages.&nbsp;To&nbsp;exit&nbsp;press&nbsp;CTRL+C&amp;#39;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;def&nbsp;callback(ch,&nbsp;method,&nbsp;properties,&nbsp;body):&lt;/div&gt;&lt;div&gt; &nbsp; print&nbsp;&amp;quot;&nbsp;[x]&nbsp;Received&nbsp;%r&amp;quot;&nbsp;%&nbsp;(body,)&lt;/div&gt;&lt;div&gt;<br>
&lt;br&gt;&lt;/div&gt;&lt;div&gt;channel.basic_consume(callback,&lt;/div&gt;&lt;div&gt; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; queue=&amp;#39;aqueuename&amp;#39;,&lt;/div&gt;&lt;div&gt; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; no_ack=True)&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;channel.start_consuming()&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;<br>
&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;Cheers,&lt;/div&gt;&lt;div&gt;Gabriel&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;span&nbsp;class=&quot;Apple-style-span&quot;&nbsp;style=&quot;font-family:&nbsp;arial,&nbsp;sans-serif;&nbsp;font-size:&nbsp;13px;&nbsp;background-color:&nbsp;rgb(255,&nbsp;255,&nbsp;255);&nbsp;&quot;&gt;On&nbsp;20/10/11&nbsp;16:55, &lt;/span&gt;Ricardo&lt;span&nbsp;class=&quot;Apple-style-span&quot;&nbsp;style=&quot;font-family:&nbsp;arial,&nbsp;sans-serif;&nbsp;font-size:&nbsp;13px;&nbsp;background-color:&nbsp;rgb(255,&nbsp;255,&nbsp;255);&nbsp;&quot;&gt; Brizido&nbsp;wrote:&lt;/span&gt;&lt;/div&gt;<br>
&lt;div&gt; &lt;/div&gt;&lt;blockquote&nbsp;class=&quot;gmail_quote&quot;&nbsp;style=&quot;margin:0&nbsp;0&nbsp;0&nbsp;.8ex;border-left:1px&nbsp;#ccc&nbsp;solid;padding-left:1ex;&quot;&gt;For&nbsp;some&nbsp;reason&nbsp;I&nbsp;can&amp;#39;t&nbsp;get&nbsp;this&nbsp;example&nbsp;to&nbsp;work:&lt;br&gt;<br>
&lt;br&gt;<br>
&lt;br&gt;<br>
[sender]&lt;br&gt;<br>
var&nbsp;sys&nbsp;=&nbsp;require(&amp;#39;sys&amp;#39;);&lt;br&gt;<br>
var&nbsp;amqp&nbsp;=&nbsp;require(&amp;#39;./amqp&amp;#39;);&lt;br&gt;<br>
&lt;br&gt;<br>
var&nbsp;connection&nbsp;=&nbsp;amqp.createConnection({&nbsp;host:&nbsp;&amp;#39;localhost&amp;#39;&nbsp;});&lt;br&gt;<br>
&lt;br&gt;<br>
//&nbsp;Wait&nbsp;for&nbsp;connection&nbsp;to&nbsp;become&nbsp;established.&lt;br&gt;<br>
connection.addListener(&amp;#39;ready&amp;#39;,&nbsp;function&nbsp;()&nbsp;{&lt;br&gt;<br>
&nbsp; &nbsp; var&nbsp;x&nbsp;=&nbsp;connection.exchange()&lt;br&gt;<br>
&nbsp; &nbsp; var&nbsp;q&nbsp;=&nbsp;connection.queue(&amp;quot;aqueuename&amp;quot;,&lt;br&gt;<br>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;{&nbsp;autoDelete:&nbsp;true,&nbsp;durable:&nbsp;false,&nbsp;exclusive:&nbsp;false&nbsp;});&lt;br&gt;<br>
&nbsp; &nbsp; x.publish(&amp;#39;aqueuename&amp;#39;,&nbsp;{foo:&nbsp;&amp;quot;bar&amp;quot;});&lt;br&gt;<br>
});&lt;br&gt;<br>
&lt;br&gt;<br>
[receiver]&lt;br&gt;<br>
#!/usr/bin/env&nbsp;python&lt;br&gt;<br>
import&nbsp;pika&lt;br&gt;<br>
&lt;br&gt;<br>
connection&nbsp;=&nbsp;pika.AsyncoreConnection(pika.ConnectionParameters(&lt;br&gt;<br>
&nbsp; &nbsp; &nbsp; &nbsp; host=&amp;#39;localhost&amp;#39;))&lt;br&gt;<br>
channel&nbsp;=&nbsp;connection.channel()&lt;br&gt;<br>
&lt;br&gt;<br>
q&nbsp;=&nbsp;channel.queue_declare(queue=&amp;#39;aqueuename&amp;#39;,&lt;br&gt;<br>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;auto_delete=True,&lt;br&gt;<br>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;durable=False,&lt;br&gt;<br>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;exclusive=False)&lt;br&gt;<br>
&lt;br&gt;<br>
print&nbsp;&amp;#39;&nbsp;[*]&nbsp;Waiting&nbsp;for&nbsp;messages.&nbsp;To&nbsp;exit&nbsp;press&nbsp;CTRL+C&amp;#39;&lt;br&gt;<br>
&lt;br&gt;<br>
def&nbsp;callback(ch,&nbsp;method,&nbsp;properties,&nbsp;body):&lt;br&gt;<br>
&nbsp; &nbsp; print&nbsp;&amp;quot;&nbsp;[x]&nbsp;Received&nbsp;%r&amp;quot;&nbsp;%&nbsp;(body,)&lt;br&gt;<br>
&lt;br&gt;<br>
channel.basic_consume(callback,&lt;br&gt;<br>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; queue=&amp;#39;aqueuename&amp;#39;,&lt;br&gt;<br>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; no_ack=True)&lt;br&gt;<br>
&lt;br&gt;<br>
pika.asyncore_loop()&lt;br&gt;<br>
&lt;br&gt;<br>
&lt;br&gt;<br>
I&nbsp;wanted&nbsp;to&nbsp;used&nbsp;a&nbsp;BlockingConnection.&nbsp;Do&nbsp;you&nbsp;know&nbsp;if&nbsp;this&nbsp;works&nbsp;with&lt;br&gt;<br>
a&nbsp;BlockingConnection?&lt;br&gt;<br>
&lt;br&gt;<br>
&lt;br&gt;<br>
Thanks&lt;br&gt;<br>
&lt;br&gt;<br>
Ricardo&lt;br&gt;&lt;/blockquote&gt;&lt;/div&gt;<br>

</tt>
