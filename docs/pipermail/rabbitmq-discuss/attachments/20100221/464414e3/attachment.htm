<tt>
Hello&nbsp;Mathew..&lt;br&gt;&lt;br&gt;Thank&nbsp;you&nbsp;for&nbsp;your&nbsp;reply..&lt;br&gt;&lt;br&gt;&lt;div&nbsp;class=&quot;gmail_quote&quot;&gt;&lt;br&gt;&lt;blockquote&nbsp;class=&quot;gmail_quote&quot;&nbsp;style=&quot;margin:&nbsp;0pt&nbsp;0pt&nbsp;0pt&nbsp;0.8ex;&nbsp;border-left:&nbsp;1px&nbsp;solid&nbsp;rgb(204,&nbsp;204,&nbsp;204);&nbsp;padding-left:&nbsp;1ex;&quot;&gt;&lt;div&nbsp;class=&quot;im&quot;&gt;<br>
<br>
&amp;gt;&nbsp;Also,&nbsp;It&nbsp;would&nbsp;be&nbsp;really&nbsp;awesome&nbsp;if&nbsp;somebody&nbsp;would&nbsp;explain&nbsp;to&nbsp;me&nbsp;what&nbsp;is&nbsp;the&lt;br&gt;<br>
&amp;gt;&nbsp;recommended&nbsp;approach&nbsp;to&nbsp;a&nbsp;situation&nbsp;when&nbsp;a&nbsp;node&nbsp;goes&nbsp;down.&lt;br&gt;<br>
&lt;br&gt;<br>
&lt;/div&gt;Depends&nbsp;massively&nbsp;on&nbsp;your&nbsp;situation.&nbsp;Clustering&nbsp;in&nbsp;Rabbit&nbsp;is&nbsp;meant&nbsp;to&lt;br&gt;<br>
facilitate&nbsp;scalability,&nbsp;not&nbsp;high&nbsp;availability.&nbsp;If&nbsp;you&nbsp;could&nbsp;provide&nbsp;some&lt;br&gt;<br>
further&nbsp;details&nbsp;of&nbsp;your&nbsp;scenario,&nbsp;we&amp;#39;d&nbsp;be&nbsp;better&nbsp;able&nbsp;to&nbsp;advise.&lt;br&gt;<br>
&lt;br&gt;<br>
Matthew&lt;br&gt;&lt;br&gt;&lt;/blockquote&gt;&lt;div&gt;&lt;br&gt;Ok..&nbsp;Here&nbsp;is&nbsp;a&nbsp;very&nbsp;simplistic&nbsp;description&nbsp;of&nbsp;our&nbsp;setup..&nbsp;&lt;br&gt;&lt;br&gt;Assume&nbsp;we&nbsp;have&nbsp;2&nbsp;rabbit&nbsp;nodes..&nbsp;R1&nbsp;and&nbsp;R2.&lt;br&gt;and&nbsp;2&nbsp;Clinets&nbsp;C1&nbsp;and&nbsp;C2&nbsp;(running&nbsp;the&nbsp;same&nbsp;code-base).&nbsp;C1&nbsp;on&nbsp;startup&nbsp;creates&nbsp;a&nbsp;connection&nbsp;to&nbsp;R1,&nbsp;creates&nbsp;and&nbsp;subscribes&nbsp;to&nbsp;a&nbsp;queue&nbsp;&amp;#39;Q&amp;#39;.&nbsp;C2&nbsp;on&nbsp;startup&nbsp;creates&nbsp;connection&nbsp;to&nbsp;R2&nbsp;and&nbsp;subscribes&nbsp;to&nbsp;the&nbsp;same&nbsp;Q.&nbsp;So&nbsp;now&nbsp;we&nbsp;have&nbsp;Q&nbsp;created&nbsp;on&nbsp;R1&nbsp;but&nbsp;2&nbsp;consumers&nbsp;subscribing&nbsp;to&nbsp;it.&nbsp;&lt;br&gt;<br>
&lt;br&gt;Q&nbsp;is&nbsp;bound&nbsp;to&nbsp;a&nbsp;direct&nbsp;exchange&nbsp;X.&nbsp;The&nbsp;idea&nbsp;is&nbsp;that&nbsp;a&nbsp;producer&nbsp;might&nbsp;publish&nbsp;an&nbsp;event&nbsp;on&nbsp;X..&nbsp;which&nbsp;can&nbsp;be&nbsp;handled&nbsp;by&nbsp;either&nbsp;C1&nbsp;or&nbsp;C2.&lt;br&gt;&lt;br&gt;Up&nbsp;until&nbsp;now&nbsp;(since&nbsp;we&nbsp;were&nbsp;using&nbsp;Rabbit&nbsp;1.7.0),&nbsp;If&nbsp;say&nbsp;R1&nbsp;goes&nbsp;down,&nbsp;C1&nbsp;is&nbsp;notified&nbsp;(since&nbsp;it&nbsp;is&nbsp;connected&nbsp;to&nbsp;R1)&nbsp;so&nbsp;C1&nbsp;reconnects&nbsp;to&nbsp;R2&nbsp;and&nbsp;recreates&nbsp;the&nbsp;Q&nbsp;on&nbsp;R2..&nbsp;it&nbsp;also&nbsp;notifies&nbsp;C2..&nbsp;so&nbsp;C2&nbsp;can&nbsp;re-connect&nbsp;to&nbsp;R2&nbsp;and&nbsp;re-subscribe&nbsp;to&nbsp;the&nbsp;new&nbsp;queue&nbsp;(also&nbsp;named&nbsp;Q)..&lt;br&gt;<br>
Thus...&nbsp;Thus&nbsp;any&nbsp;event&nbsp;sent&nbsp;on&nbsp;X&nbsp;will&nbsp;still&nbsp;be&nbsp;routed&nbsp;to&nbsp;C1&nbsp;or&nbsp;C2.&nbsp;(Only&nbsp;caveat&nbsp;is...&nbsp;when&nbsp;R1&nbsp;comes&nbsp;back,&nbsp;all&nbsp;messages&nbsp;that&nbsp;were&nbsp;in&nbsp;the&nbsp;Old&nbsp;queue&nbsp;is&nbsp;appended&nbsp;to&nbsp;the&nbsp;New&nbsp;queue....&nbsp;since&nbsp;we&nbsp;arnt&nbsp;really&nbsp;particular&nbsp;about&nbsp;the&nbsp;ordering..&nbsp;that&nbsp;should&nbsp;be&nbsp;fine..)&lt;br&gt;<br>
&lt;br&gt;How&nbsp;do&nbsp;think&nbsp;we&nbsp;should&nbsp;tackle&nbsp;this&nbsp;situation&nbsp;now&nbsp;?&lt;br&gt;&lt;br&gt;Thanx&nbsp;in&nbsp;Advance&lt;br&gt;-Arun&lt;br&gt;&lt;br&gt; &nbsp; &nbsp;&lt;br&gt;&lt;/div&gt;&lt;/div&gt;<br>

</tt>
