<tt>
Ben,&lt;br&gt;&lt;br&gt;I&nbsp;was&nbsp;monitoring&nbsp;my&nbsp;running&nbsp;system,&nbsp;and&nbsp;unless&nbsp;I&nbsp;am&nbsp;mistaken,&nbsp;it&nbsp;looks&nbsp;as&nbsp;if&nbsp;amqp_network_connection:reader_loop/4&nbsp;has&nbsp;a&nbsp;non-tail&nbsp;recursive&nbsp;call,&nbsp;which&nbsp;is&nbsp;making&nbsp;it&nbsp;eat&nbsp;stack&nbsp;and&nbsp;heap&nbsp;like&nbsp;there&amp;#39;s&nbsp;no&nbsp;tomorrow.&nbsp;There&amp;#39;s&nbsp;a&nbsp;call&nbsp;to&nbsp;gen_tcp:close(Sock)&nbsp;at&nbsp;the&nbsp;end&nbsp;of&nbsp;the&nbsp;function.&nbsp;I&nbsp;suggest&nbsp;you&nbsp;move&nbsp;this&nbsp;to&nbsp;the&nbsp;last&nbsp;line&nbsp;of&nbsp;start_reader&nbsp;as&nbsp;shown:&lt;br&gt;<br>
&lt;br&gt;start_reader(Sock,&nbsp;FramingPid)&nbsp;-&amp;gt;&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;process_flag(trap_exit,&nbsp;true),&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;put({channel,&nbsp;0},{chpid,&nbsp;FramingPid}),&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;{ok,&nbsp;Ref}&nbsp;=&nbsp;prim_inet:async_recv(Sock,&nbsp;7,&nbsp;-1),&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;reader_loop(Sock,&nbsp;undefined,&nbsp;undefined,&nbsp;undefined),&lt;br&gt;<br>
&lt;b&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;gen_tcp:close(Sock).&lt;/b&gt;&lt;br&gt;&lt;br&gt;reader_loop(Sock,&nbsp;Type,&nbsp;Channel,&nbsp;Length)&nbsp;-&amp;gt;&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;receive&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;{inet_async,&nbsp;Sock,&nbsp;_,&nbsp;{ok,&nbsp;&amp;lt;&amp;lt;Payload:Length/binary,?FRAME_END&amp;gt;&amp;gt;}&nbsp;}&nbsp;-&amp;gt;&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;case&nbsp;handle_frame(Type,&nbsp;Channel,&nbsp;Payload)&nbsp;of&lt;br&gt;<br>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;closed_ok&nbsp;-&amp;gt;&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;ok;&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;_&nbsp;-&amp;gt;&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;{ok,&nbsp;Ref}&nbsp;=&nbsp;prim_inet:async_recv(Sock,&nbsp;7,&nbsp;-1),&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;reader_loop(Sock,&nbsp;undefined,&nbsp;undefined,&nbsp;undefined)&lt;br&gt;<br>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;end;&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;{inet_async,&nbsp;Sock,&nbsp;_,&nbsp;{ok,&nbsp;&amp;lt;&amp;lt;_Type:8,_Channel:16,PayloadSize:32&amp;gt;&amp;gt;}}&nbsp;-&amp;gt;&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;{ok,&nbsp;Ref}&nbsp;=&nbsp;prim_inet:async_recv(Sock,&nbsp;PayloadSize&nbsp;+&nbsp;1,&nbsp;-1),&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;reader_loop(Sock,&nbsp;_Type,&nbsp;_Channel,&nbsp;PayloadSize);&lt;br&gt;<br>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;{inet_async,&nbsp;Sock,&nbsp;Ref,&nbsp;{error,&nbsp;Reason}}&nbsp;-&amp;gt;&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;io:format(&amp;quot;Have&nbsp;a&nbsp;look&nbsp;into&nbsp;this&nbsp;one:&nbsp;~p~n&amp;quot;,[Reason]);&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;{heartbeat,&nbsp;Heartbeat}&nbsp;-&amp;gt;&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;rabbit_heartbeat:start_heartbeat(Sock,&nbsp;Heartbeat),&lt;br&gt;<br>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;reader_loop(Sock,&nbsp;Type,&nbsp;Channel,&nbsp;Length);&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;{ChannelPid,&nbsp;ChannelNumber}&nbsp;-&amp;gt;&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;start_framing_channel(ChannelPid,&nbsp;ChannelNumber),&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;reader_loop(Sock,&nbsp;Type,&nbsp;Channel,&nbsp;Length);&lt;br&gt;<br>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;timeout&nbsp;-&amp;gt;&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;io:format(&amp;quot;Reader&nbsp;(~p)&nbsp;received&nbsp;timeout&nbsp;from&nbsp;heartbeat,&nbsp;exiting&nbsp;~n&amp;quot;);&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;{&amp;#39;EXIT&amp;#39;,&nbsp;Pid,&nbsp;Reason}&nbsp;-&amp;gt;&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;[H|T]&nbsp;=&nbsp;get_keys({chpid,Pid}),&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;erase(H),&lt;br&gt;<br>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;reader_loop(Sock,&nbsp;Type,&nbsp;Channel,&nbsp;Length);&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;Other&nbsp;-&amp;gt;&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;io:format(&amp;quot;Other&nbsp;~p~n&amp;quot;,[Other])&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;end,&lt;br&gt;&lt;b&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;gen_tcp:close(Sock).&nbsp;%%&nbsp;Non-tail&nbsp;recursive&nbsp;call&lt;/b&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;div&nbsp;class=&quot;gmail_quote&quot;&gt;<br>
On&nbsp;Mon,&nbsp;May&nbsp;12,&nbsp;2008&nbsp;at&nbsp;2:07&nbsp;PM,&nbsp;Ben&nbsp;Hood&nbsp;&amp;lt;&lt;a&nbsp;href=&quot;mailto:0x6e6562@gmail.com&quot;&gt;0x6e6562@gmail.com&lt;/a&gt;&amp;gt;&nbsp;wrote:&lt;br&gt;&lt;blockquote&nbsp;class=&quot;gmail_quote&quot;&nbsp;style=&quot;border-left:&nbsp;1px&nbsp;solid&nbsp;rgb(204,&nbsp;204,&nbsp;204);&nbsp;margin:&nbsp;0pt&nbsp;0pt&nbsp;0pt&nbsp;0.8ex;&nbsp;padding-left:&nbsp;1ex;&quot;&gt;<br>
&lt;div&nbsp;style=&quot;&quot;&gt;Ed,&lt;div&gt;&lt;div&nbsp;class=&quot;Ih2E3d&quot;&gt;&lt;br&gt;&lt;div&gt;&lt;div&gt;On&nbsp;10&nbsp;May&nbsp;2008,&nbsp;at&nbsp;01:02,&nbsp;Edwin&nbsp;Fine&nbsp;wrote:&lt;/div&gt;&lt;br&gt;&lt;blockquote&nbsp;type=&quot;cite&quot;&gt;Thanks,&nbsp;Ben,&nbsp;I&nbsp;will&nbsp;take&nbsp;a&nbsp;look&nbsp;and&nbsp;give&nbsp;you&nbsp;some&nbsp;feedback.&lt;br&gt;&lt;br&gt;In&nbsp;the&nbsp;meantime,&nbsp;I&nbsp;have&nbsp;done&nbsp;the&nbsp;following:&lt;br&gt;<br>
&lt;ul&gt;&lt;li&gt;Changed&nbsp;my&nbsp;consumer&nbsp;code&nbsp;(I&nbsp;use&nbsp;the&nbsp;term&nbsp;&amp;quot;consumer&amp;quot;&nbsp;loosely&nbsp;as&nbsp;&amp;quot;anything&nbsp;that&nbsp;eats&nbsp;the&nbsp;output&nbsp;of&nbsp;a&nbsp;producer&amp;quot;)&nbsp;to&nbsp;use&nbsp;basic.get&nbsp;instead&nbsp;of&nbsp;basic.consume.&nbsp;Actually,&nbsp;it&amp;#39;s&nbsp;set&nbsp;up&nbsp;so&nbsp;that&nbsp;I&nbsp;can&nbsp;select&nbsp;basic.get&nbsp;or&nbsp;basic.consume&nbsp;behavior&nbsp;at&nbsp;run-time.&nbsp;I&nbsp;didn&amp;#39;t&nbsp;want&nbsp;to&nbsp;throw&nbsp;away&nbsp;working&nbsp;basic.consume&nbsp;code&nbsp;:)&lt;br&gt;<br>
&nbsp;&lt;/li&gt;&lt;li&gt;Changed&nbsp;the&nbsp;process&nbsp;that&nbsp;creates&nbsp;consumers&nbsp;so&nbsp;that&nbsp;it&nbsp;now&nbsp;creates&nbsp;one&nbsp;channel&nbsp;per&nbsp;consumer.&nbsp;Previously,&nbsp;there&nbsp;was&nbsp;one&nbsp;channel&nbsp;only&nbsp;for&nbsp;all&nbsp;consumers.&nbsp;One-channel-per-consumer&nbsp;was&nbsp;the&nbsp;only&nbsp;way&nbsp;I&nbsp;could&nbsp;get&nbsp;the&nbsp;code&nbsp;to&nbsp;work&nbsp;with&nbsp;the&nbsp;network&nbsp;client;&nbsp;in&nbsp;the&nbsp;one-channel&nbsp;scenario&nbsp;I&nbsp;was&nbsp;getting&nbsp;back&nbsp;responses&nbsp;to&nbsp;messages&nbsp;destined&nbsp;for&nbsp;different&nbsp;consumers.&nbsp;I&nbsp;assume&nbsp;that&nbsp;with&nbsp;your&nbsp;changes&nbsp;I&nbsp;will&nbsp;be&nbsp;able&nbsp;to&nbsp;again&nbsp;use&nbsp;one&nbsp;channel&nbsp;for&nbsp;all&nbsp;consumers.&lt;br&gt;<br>
&nbsp;&lt;/li&gt;&lt;li&gt;I&nbsp;tested&nbsp;with&nbsp;50&nbsp;queues&nbsp;(each&nbsp;with&nbsp;its&nbsp;own&nbsp;consumer&nbsp;and&nbsp;channel)&nbsp;and&nbsp;it&nbsp;seemed&nbsp;reasonably&nbsp;performant,&nbsp;even&nbsp;with&nbsp;the&nbsp;get.&nbsp;I&nbsp;need&nbsp;to&nbsp;try&nbsp;a&nbsp;full-blast&nbsp;test&nbsp;soon.&lt;br&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/blockquote&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;<br>
I&nbsp;have&nbsp;now&nbsp;commited&nbsp;fix&nbsp;2&nbsp;of&nbsp;3&nbsp;to&nbsp;the&nbsp;mtn&nbsp;repo&nbsp;which&nbsp;addresses&nbsp;the&nbsp;issue&nbsp;of&nbsp;not&nbsp;being&nbsp;able&nbsp;to&nbsp;subscribe&nbsp;concurrently.&nbsp;So&nbsp;the&nbsp;2&nbsp;issues&nbsp;you&nbsp;mention&nbsp;here&nbsp;should&nbsp;be&nbsp;addressed.&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;The&nbsp;outstanding&nbsp;issue&nbsp;is&nbsp;to&nbsp;close&nbsp;the&nbsp;writer&nbsp;down&nbsp;properly&nbsp;in&nbsp;the&nbsp;network&nbsp;case.&lt;/div&gt;<br>
&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;HTH,&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;font&nbsp;color=&quot;#888888&quot;&gt;&lt;div&gt;Ben&lt;/div&gt;&lt;/font&gt;&lt;/div&gt;&lt;/blockquote&gt;&lt;/div&gt;&lt;br&gt;<br>

</tt>
