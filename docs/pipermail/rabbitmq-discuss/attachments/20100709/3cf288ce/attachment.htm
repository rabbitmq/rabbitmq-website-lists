<tt>
Thanks&nbsp;for&nbsp;the&nbsp;answers!&nbsp; But&nbsp;If&nbsp;the&nbsp;producer&nbsp;is&nbsp;launched&nbsp;first&nbsp;and&nbsp;then&nbsp;the&nbsp;consumer,&nbsp;i&amp;#39;m&nbsp;losing&nbsp;all&nbsp;the&nbsp;initial&nbsp;messages&nbsp;until&nbsp;the&nbsp;consumer&nbsp;is&nbsp;created.&nbsp;I&nbsp;attach&nbsp;you&nbsp;the&nbsp;code&nbsp;snippets&nbsp;with&nbsp;the&nbsp;test.&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;<br>
<br>
&lt;br&gt;&lt;/div&gt;&lt;div&gt;/**&nbsp;Producer&nbsp; **/&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;ConnectionFactory&nbsp;factory&nbsp;=&nbsp;new&nbsp;ConnectionFactory();&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;  &nbsp; &nbsp; &nbsp; factory.setUsername(&amp;quot;guest&amp;quot;);&lt;/div&gt;&lt;div&gt;  &nbsp; &nbsp; &nbsp; factory.setPassword(&amp;quot;guest&amp;quot;);&lt;/div&gt;<br>
<br>
&lt;div&gt;  &nbsp; &nbsp; &nbsp; factory.setVirtualHost(&amp;quot;/&amp;quot;);&lt;/div&gt;&lt;div&gt;  &nbsp; &nbsp; &nbsp; factory.setRequestedHeartbeat(0);&lt;/div&gt;&lt;div&gt;  &nbsp; &nbsp; &nbsp; factory.setHost(&amp;quot;127.0.0.1&amp;quot;);&lt;/div&gt;&lt;div&gt;  &nbsp; &nbsp; &nbsp; factory.setPort(5672);&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;<br>
<br>
&lt;div&gt;  &nbsp; &nbsp; &nbsp; Connection&nbsp;conn&nbsp;=&nbsp;factory.newConnection();&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;  &nbsp; &nbsp; &nbsp; Channel&nbsp;channel&nbsp;=&nbsp;conn.createChannel();&lt;/div&gt;&lt;div&gt;  &nbsp; &nbsp; &nbsp; String&nbsp;exchangeName&nbsp;=&nbsp;&amp;quot;myExchangeFanOut&amp;quot;;&lt;/div&gt;&lt;div&gt;  &nbsp; &nbsp; &nbsp; String&nbsp;routingKey&nbsp;=&nbsp;&amp;quot;testRoute&amp;quot;;&lt;/div&gt;<br>
<br>
&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;  &nbsp; &nbsp; &nbsp; for(int&nbsp;i=&nbsp;0;&nbsp;i&amp;lt;1000000;i++){&lt;/div&gt;&lt;div&gt;  &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; StringBuilder&nbsp;miCadena&nbsp;=&nbsp;new&nbsp;StringBuilder(&amp;quot;Message&nbsp;num:&nbsp;&amp;quot;);&lt;/div&gt;&lt;div&gt;  &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; miCadena.append(i);&lt;/div&gt;&lt;div&gt;  &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; byte[]&nbsp;messageBodyBytes&nbsp;=&nbsp;miCadena.toString().getBytes();&lt;/div&gt;<br>
<br>
&lt;div&gt;  &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; channel.basicPublish(exchangeName,&nbsp;routingKey,&nbsp; &nbsp;MessageProperties.PERSISTENT_TEXT_PLAIN,&nbsp;messageBodyBytes)&nbsp;;&lt;/div&gt;&lt;div&gt;  &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; System.out.println(&amp;quot;Sending&nbsp;message&nbsp;num:&nbsp;&amp;quot;&nbsp;+&nbsp;i);&lt;/div&gt;&lt;div&gt;  &nbsp; &nbsp; &nbsp; }&lt;/div&gt;<br>
<br>
&lt;div&gt;  &nbsp; &nbsp; &nbsp; channel.close();&lt;/div&gt;&lt;div&gt;  &nbsp; &nbsp; &nbsp; conn.close();&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;/**&nbsp;Consumer&nbsp;**/&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;ConnectionFactory&nbsp;factory&nbsp;=&nbsp;new&nbsp;ConnectionFactory();&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;  &nbsp; &nbsp; &nbsp; factory.setUsername(&amp;quot;guest&amp;quot;);&lt;/div&gt;<br>
<br>
&lt;div&gt;  &nbsp; &nbsp; &nbsp; factory.setPassword(&amp;quot;guest&amp;quot;);&lt;/div&gt;&lt;div&gt;  &nbsp; &nbsp; &nbsp; factory.setVirtualHost(&amp;quot;/&amp;quot;);&lt;/div&gt;&lt;div&gt;  &nbsp; &nbsp; &nbsp; factory.setRequestedHeartbeat(0);&lt;/div&gt;&lt;div&gt;  &nbsp; &nbsp; &nbsp; factory.setHost(&amp;quot;127.0.0.1&amp;quot;);&lt;/div&gt;<br>
<br>
&lt;div&gt;  &nbsp; &nbsp; &nbsp; factory.setPort(5672);&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;  &nbsp; &nbsp; &nbsp; Connection&nbsp;conn&nbsp;=&nbsp;factory.newConnection();&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;  &nbsp; &nbsp; &nbsp; Channel&nbsp;channel&nbsp;=&nbsp;conn.createChannel();&lt;/div&gt;&lt;div&gt;  &nbsp; &nbsp; &nbsp; String&nbsp;exchangeName&nbsp;=&nbsp;&amp;quot;myExchangeFanOut&amp;quot;;&lt;/div&gt;<br>
<br>
&lt;div&gt;  &nbsp; &nbsp; &nbsp; String&nbsp;queueName&nbsp;=&nbsp;&amp;quot;myQueue&amp;quot;;&lt;/div&gt;&lt;div&gt;  &nbsp; &nbsp; &nbsp; String&nbsp;routingKey&nbsp;=&nbsp;&amp;quot;testRoute&amp;quot;;&lt;/div&gt;&lt;div&gt;  &nbsp; &nbsp; &nbsp; boolean&nbsp;durable&nbsp;=&nbsp;true;&lt;/div&gt;&lt;div&gt;  &nbsp; &nbsp; &nbsp; channel.exchangeDeclare(exchangeName,&nbsp;&amp;quot;fanout&amp;quot;,&nbsp;durable);&lt;/div&gt;<br>
<br>
&lt;div&gt;  &nbsp; &nbsp; &nbsp; channel.queueDeclare(queueName,&nbsp;durable,&nbsp;true,&nbsp;true,null);&nbsp;//&nbsp;parametros&lt;/div&gt;&lt;div&gt;  &nbsp; &nbsp; &nbsp; channel.queueBind(queueName,&nbsp;exchangeName,&nbsp;routingKey);&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;  &nbsp; &nbsp; &nbsp; boolean&nbsp;noAck&nbsp;=&nbsp;false;&lt;/div&gt;<br>
<br>
&lt;div&gt;  &nbsp; &nbsp; &nbsp; QueueingConsumer&nbsp;consumer&nbsp;=&nbsp;new&nbsp;QueueingConsumer(channel);&lt;/div&gt;&lt;div&gt;  &nbsp; &nbsp; &nbsp; channel.basicConsume(queueName,&nbsp;noAck,&nbsp;consumer);&lt;/div&gt;&lt;div&gt;  &nbsp; &nbsp; &nbsp; boolean&nbsp;runInfinite&nbsp;=&nbsp;true;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;  &nbsp; &nbsp; &nbsp; while&nbsp;(runInfinite)&nbsp;{&lt;/div&gt;<br>
<br>
&lt;div&gt;  &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; QueueingConsumer.Delivery&nbsp;delivery;&lt;/div&gt;&lt;div&gt;  &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; try&nbsp;{&lt;/div&gt;&lt;div&gt;  &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; delivery&nbsp;=&nbsp;consumer.nextDelivery();&lt;/div&gt;&lt;div&gt;  &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }&nbsp;catch&nbsp;(InterruptedException&nbsp;ie)&nbsp;{&lt;/div&gt;&lt;div&gt;  &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; continue;&lt;/div&gt;<br>
<br>
&lt;div&gt;  &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }&lt;/div&gt;&lt;div&gt;  &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; System.out.println(&amp;quot;Processing&nbsp;received&nbsp;message.&nbsp;&amp;quot;&nbsp;+&nbsp;new&nbsp;String(delivery.getBody()));&lt;/div&gt;&lt;div&gt;  &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; channel.basicAck(delivery.getEnvelope().getDeliveryTag(),&nbsp;false);&lt;/div&gt;<br>
<br>
&lt;div&gt;  &nbsp; &nbsp; &nbsp; }&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;  &nbsp; &nbsp; &nbsp; channel.close();&lt;/div&gt;&lt;div&gt;  &nbsp; &nbsp; &nbsp; conn.close();&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;In&nbsp;addition&nbsp;i&nbsp;have&nbsp;another&nbsp;question&nbsp;,&nbsp;is&nbsp;it&nbsp;possible&nbsp;to&nbsp;make&nbsp;that&nbsp;not&nbsp;all&nbsp;the&nbsp;consumers&nbsp;get&nbsp;all&nbsp;the&nbsp;messages&nbsp; with&nbsp;a&nbsp;fanout&nbsp;exchange,&nbsp;i&nbsp;mean&nbsp;is&nbsp;it&nbsp;possible&nbsp;to&nbsp;balance&nbsp;the&nbsp;messages&nbsp;in&nbsp;between&nbsp;the&nbsp;consumers.&nbsp;Thanks&nbsp;a&nbsp;lot.&nbsp;regards!&lt;br&nbsp;clear=&quot;all&quot;&gt;<br>
<br>
&lt;br&gt;Francisco&nbsp;González-Blanch&nbsp;Rodríguez&lt;br&gt;<br>
&lt;br&gt;&lt;br&gt;&lt;div&nbsp;class=&quot;gmail_quote&quot;&gt;On&nbsp;Fri,&nbsp;Jul&nbsp;9,&nbsp;2010&nbsp;at&nbsp;1:39&nbsp;PM,&nbsp;Ovidiu&nbsp;Deac&nbsp;&lt;span&nbsp;dir=&quot;ltr&quot;&gt;&amp;lt;&lt;a&nbsp;href=&quot;mailto:ovidiudeac@gmail.com&quot;&gt;ovidiudeac@gmail.com&lt;/a&gt;&amp;gt;&lt;/span&gt;&nbsp;wrote:&lt;br&gt;&lt;blockquote&nbsp;class=&quot;gmail_quote&quot;&nbsp;style=&quot;margin:0&nbsp;0&nbsp;0&nbsp;.8ex;border-left:1px&nbsp;#ccc&nbsp;solid;padding-left:1ex;&quot;&gt;<br>
<br>
If&nbsp;nobody&nbsp;extracts&nbsp;the&nbsp;message&nbsp;from&nbsp;the&nbsp;queue&nbsp;the&nbsp;message&nbsp;won&amp;#39;t&nbsp;be&nbsp;lost.&lt;br&gt;<br>
&lt;div&gt;&lt;div&gt;&lt;/div&gt;&lt;div&nbsp;class=&quot;h5&quot;&gt;&lt;br&gt;<br>
On&nbsp;Fri,&nbsp;Jul&nbsp;9,&nbsp;2010&nbsp;at&nbsp;1:09&nbsp;PM,&nbsp;Francisco&nbsp;Gonzalez-Blanch&lt;br&gt;<br>
&amp;lt;&lt;a&nbsp;href=&quot;mailto:fblanch@gmail.com&quot;&gt;fblanch@gmail.com&lt;/a&gt;&amp;gt;&nbsp;wrote:&lt;br&gt;<br>
&amp;gt;&nbsp;Hi&nbsp;all,&lt;br&gt;<br>
&amp;gt;&nbsp;I&amp;#39;m&nbsp;a&nbsp;newbie&nbsp;in&nbsp;rabbitmq&nbsp;and&nbsp;i&amp;#39;m&nbsp;working&nbsp;on&nbsp;a&nbsp;distributed&nbsp;data&nbsp;processing&lt;br&gt;<br>
&amp;gt;&nbsp;application&nbsp;using&nbsp;rabbitmq&nbsp;as&nbsp;distributed&nbsp;task&nbsp;queue.&nbsp;I&nbsp;want&nbsp;to&nbsp;ask&nbsp;you&lt;br&gt;<br>
&amp;gt;&nbsp;about&nbsp;where&nbsp;can&nbsp;i&nbsp;find&nbsp;information&nbsp;about&nbsp;how&nbsp;to&nbsp;make&nbsp;persistent&nbsp;queues,&nbsp;and&lt;br&gt;<br>
&amp;gt;&nbsp;how&nbsp;to&nbsp;make&nbsp;that,&nbsp;if&nbsp;a&nbsp;producer&nbsp;sends&nbsp;messages&nbsp;to&nbsp;queue&nbsp;and&nbsp;no&nbsp;one&nbsp;is&nbsp;listen&lt;br&gt;<br>
&amp;gt;&nbsp;to&nbsp;it&nbsp;and&nbsp;then&nbsp;a&nbsp;consumer&nbsp;is&nbsp;attached&nbsp;,&nbsp;the&nbsp;consumer&nbsp;gets&nbsp;all&nbsp;the&nbsp;messages,&lt;br&gt;<br>
&amp;gt;&nbsp;even&nbsp;the&nbsp;ones&nbsp;that&nbsp;were&nbsp;produced&nbsp;before&nbsp;the&nbsp;consumer&nbsp;was&nbsp;attached.&nbsp;Thank&nbsp;you&lt;br&gt;<br>
&amp;gt;&nbsp;very&nbsp;much.&lt;br&gt;<br>
&amp;gt;&lt;br&gt;<br>
&amp;gt;&lt;br&gt;<br>
&amp;gt;&lt;br&gt;<br>
&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;/div&gt;&lt;div&nbsp;class=&quot;h5&quot;&gt;&amp;gt;&nbsp;_______________________________________________&lt;br&gt;<br>
&amp;gt;&nbsp;rabbitmq-discuss&nbsp;mailing&nbsp;list&lt;br&gt;<br>
&amp;gt;&nbsp;&lt;a&nbsp;href=&quot;mailto:rabbitmq-discuss@lists.rabbitmq.com&quot;&gt;rabbitmq-discuss@lists.rabbitmq.com&lt;/a&gt;&lt;br&gt;<br>
&amp;gt;&nbsp;&lt;a&nbsp;href=&quot;https://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss&quot;&nbsp;target=&quot;_blank&quot;&gt;https://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss&lt;/a&gt;&lt;br&gt;<br>
&amp;gt;&lt;br&gt;<br>
&amp;gt;&lt;br&gt;<br>
&lt;/div&gt;&lt;/div&gt;&lt;/blockquote&gt;&lt;/div&gt;&lt;br&gt;&lt;/div&gt;<br>

</tt>
