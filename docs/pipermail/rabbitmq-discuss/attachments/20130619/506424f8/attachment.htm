<tt>
&lt;html&gt;&lt;head&gt;&lt;/head&gt;&lt;body&nbsp;style=&quot;word-wrap:&nbsp;break-word;&nbsp;-webkit-nbsp-mode:&nbsp;space;&nbsp;-webkit-line-break:&nbsp;after-white-space;&nbsp;&quot;&gt;&lt;div&gt;&lt;div&gt;On&nbsp;19&nbsp;Jun&nbsp;2013,&nbsp;at&nbsp;10:41,&nbsp;Flavio&nbsp;Pompermaier&nbsp;wrote:&lt;/div&gt;&lt;br&nbsp;class=&quot;Apple-interchange-newline&quot;&gt;&lt;blockquote&nbsp;type=&quot;cite&quot;&gt;Hi&nbsp;to&nbsp;everybody,&lt;div&gt;I'm&nbsp;new&nbsp;to&nbsp;RabbitMQ&nbsp;but&nbsp;from&nbsp;what&nbsp;I&nbsp;see&nbsp;it&nbsp;could&nbsp;be&nbsp;the&nbsp;solution&nbsp;for&nbsp;a&nbsp;buffer&nbsp;implementation&nbsp;in&nbsp;one&nbsp;of&nbsp;my&nbsp;project.&lt;/div&gt;&lt;div&gt;In&nbsp;my&nbsp;scenario&nbsp;there&nbsp;will&nbsp;be&nbsp;a&nbsp;big&nbsp;queue&nbsp;of&nbsp;tasks&nbsp;(i.e.&nbsp;document&nbsp;indexing)&nbsp;that&nbsp;should&nbsp;be&nbsp;served&nbsp;as&nbsp;fast&nbsp;as&nbsp;possible,&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;Looking&nbsp;at&nbsp;the&nbsp;tutorial&nbsp;I&nbsp;think&nbsp;that&nbsp;what&nbsp;I&nbsp;need&nbsp;is&nbsp;somehow&nbsp;similar&nbsp;to&nbsp;the&nbsp;Work&nbsp;queues&nbsp;(&lt;a&nbsp;href=&quot;http://www.rabbitmq.com/tutorials/tutorial-two-python.html&quot;&gt;http://www.rabbitmq.com/tutorials/tutorial-two-python.html&lt;/a&gt;)&nbsp;plus&nbsp;fair&nbsp;dispatching.&lt;/div&gt;&lt;div&gt;However,&nbsp;the&nbsp;aforementioned&nbsp;constraint&nbsp;&quot;served&nbsp;as&nbsp;fast&nbsp;as&nbsp;possible&quot;&nbsp;is&nbsp;not&nbsp;clear&nbsp;how&nbsp;to&nbsp;design&nbsp;a&nbsp;correct&nbsp;size&nbsp;of&nbsp;workers,&nbsp;in&nbsp;a&nbsp;scalable&nbsp;way..&lt;/div&gt;&lt;div&gt;In&nbsp;every&nbsp;example,&nbsp;a&nbsp;worker&nbsp;is&nbsp;a&nbsp;standalone&nbsp;java&nbsp;process,&nbsp;whereas&nbsp;I&nbsp;would&nbsp;like&nbsp;to&nbsp;manage&nbsp;workers&nbsp;more&nbsp;like&nbsp;a&nbsp;pool&nbsp;and&nbsp;take&nbsp;the&nbsp;first&nbsp;available&nbsp;one..&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;/blockquote&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;You&nbsp;can&nbsp;open&nbsp;multiple&nbsp;channels&nbsp;on&nbsp;a&nbsp;single&nbsp;connection&nbsp;(i.e.,&nbsp;an&nbsp;application&nbsp;running&nbsp;in&nbsp;the&nbsp;JVM&nbsp;can&nbsp;open&nbsp;many&nbsp;connections&nbsp;and&nbsp;many&nbsp;channels&nbsp;per&nbsp;connection&nbsp;-&nbsp;each&nbsp;channel&nbsp;usually&nbsp;being&nbsp;assigned&nbsp;to&nbsp;a&nbsp;thread).&nbsp;As&nbsp;for&nbsp;&quot;take&nbsp;the&nbsp;first&nbsp;available&nbsp;one&quot;,&nbsp;that's&nbsp;exactly&nbsp;what&nbsp;the&nbsp;&quot;fair&nbsp;dispatch&quot;&nbsp;section&nbsp;in&nbsp;the&nbsp;tutorial&nbsp;describes.&lt;/div&gt;&lt;br&gt;&lt;blockquote&nbsp;type=&quot;cite&quot;&gt;&lt;div&gt;2)&nbsp;If&nbsp;my&nbsp;poolable&nbsp;solution&nbsp;is&nbsp;correct,&nbsp;how&nbsp;can&nbsp;I&nbsp;set&nbsp;up&nbsp;a&nbsp;pool?&nbsp;How&nbsp;do&nbsp;I&nbsp;decide&nbsp;the&nbsp;best&nbsp;size&nbsp;of&nbsp;the&nbsp;pool?&lt;/div&gt;&lt;/blockquote&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;That's&nbsp;totally&nbsp;application&nbsp;specific,&nbsp;depending&nbsp;on&nbsp;how&nbsp;many&nbsp;messages&nbsp;you're&nbsp;expecting&nbsp;to&nbsp;process&nbsp;and&nbsp;so&nbsp;on.&nbsp;You&nbsp;can&nbsp;`re-size'&nbsp;the&nbsp;pool&nbsp;any&nbsp;time&nbsp;you&nbsp;like&nbsp;by&nbsp;adding&nbsp;more&nbsp;consumers&nbsp;-&nbsp;the&nbsp;prefetch-count&nbsp;will&nbsp;ensure&nbsp;that&nbsp;rabbit&nbsp;doesn't&nbsp;send&nbsp;any&nbsp;one&nbsp;consumer&nbsp;more&nbsp;than&nbsp;the&nbsp;specified&nbsp;number&nbsp;of&nbsp;un-acked&nbsp;messages.&amp;nbsp;&lt;/div&gt;&lt;br&gt;&lt;blockquote&nbsp;type=&quot;cite&quot;&gt;&lt;div&gt;3)&nbsp;What&nbsp;if&nbsp;I&nbsp;discover&nbsp;that&nbsp;my&nbsp;server&nbsp;is&nbsp;overloaded&nbsp;and&nbsp;I&nbsp;want&nbsp;to&nbsp;distribute&nbsp;the&nbsp;load?&nbsp;&lt;/div&gt;&lt;/blockquote&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;Add&nbsp;more&nbsp;consumers,&nbsp;as&nbsp;I&nbsp;said&nbsp;above.&amp;nbsp;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;blockquote&nbsp;type=&quot;cite&quot;&gt;&lt;div&gt;How&nbsp;can&nbsp;I&nbsp;avoid&nbsp;to&nbsp;store&nbsp;all&nbsp;the&nbsp;queues&nbsp;message&nbsp;in&nbsp;just&nbsp;one&nbsp;server&nbsp;(if&nbsp;I&nbsp;want&nbsp;persistable&nbsp;queues)?&lt;/div&gt;&lt;/blockquote&gt;&lt;div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;You&nbsp;can&nbsp;set&nbsp;up&nbsp;a&nbsp;cluster&nbsp;and&nbsp;use&nbsp;HA&nbsp;to&nbsp;mirror&nbsp;(i.e.,&nbsp;replicate)&nbsp;the&nbsp;queue&nbsp;contents&nbsp;across&nbsp;multiple&nbsp;nodes.&nbsp;See&amp;nbsp;&lt;a&nbsp;href=&quot;http://www.rabbitmq.com/ha.html&quot;&gt;www.rabbitmq.com/ha.html&lt;/a&gt;&nbsp;for&nbsp;details.&nbsp;Of&nbsp;course,&nbsp;with&nbsp;HA&nbsp;you'll&nbsp;store&nbsp;all&nbsp;the&nbsp;queue's&nbsp;messages&nbsp;on&nbsp;all&nbsp;of&nbsp;the&nbsp;(mirrored)&nbsp;nodes.&nbsp;If&nbsp;you&nbsp;were&nbsp;thinking&nbsp;of&nbsp;'sharding'&nbsp;the&nbsp;data&nbsp;across&nbsp;multiple&nbsp;nodes,&nbsp;then&nbsp;we&nbsp;don't&nbsp;offer&nbsp;a&nbsp;solution&nbsp;for&nbsp;that&nbsp;out&nbsp;of&nbsp;the&nbsp;box,&nbsp;though&nbsp;you&nbsp;could&nbsp;probably&nbsp;cook&nbsp;one&nbsp;up&nbsp;yourself&nbsp;using&nbsp;federation&nbsp;(see&amp;nbsp;&lt;a&nbsp;href=&quot;http://www.rabbitmq.com/federation.html&quot;&gt;www.rabbitmq.com/federation.html&lt;/a&gt;).&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;Cheers,&lt;/div&gt;&lt;div&gt;Tim&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/body&gt;&lt;/html&gt;
</tt>
