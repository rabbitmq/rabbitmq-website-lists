<tt>
&lt;br&gt;&lt;br&gt;&lt;div&nbsp;class=&quot;gmail_quote&quot;&gt;On&nbsp;Mon,&nbsp;Nov&nbsp;10,&nbsp;2008&nbsp;at&nbsp;10:24&nbsp;AM,&nbsp;Ben&nbsp;Hood&nbsp;&lt;span&nbsp;dir=&quot;ltr&quot;&gt;&amp;lt;&lt;a&nbsp;href=&quot;mailto:0x6e6562@gmail.com&quot;&gt;0x6e6562@gmail.com&lt;/a&gt;&amp;gt;&lt;/span&gt;&nbsp;wrote:&lt;br&gt;&lt;blockquote&nbsp;class=&quot;gmail_quote&quot;&nbsp;style=&quot;border-left:&nbsp;1px&nbsp;solid&nbsp;rgb(204,&nbsp;204,&nbsp;204);&nbsp;margin:&nbsp;0pt&nbsp;0pt&nbsp;0pt&nbsp;0.8ex;&nbsp;padding-left:&nbsp;1ex;&quot;&gt;<br>
Edwin,&lt;br&gt;<br>
&lt;br&gt;<br>
On&nbsp;Sun,&nbsp;Nov&nbsp;9,&nbsp;2008&nbsp;at&nbsp;11:00&nbsp;PM,&nbsp;Edwin&nbsp;Fine&lt;br&gt;<br>
&lt;div&nbsp;class=&quot;Ih2E3d&quot;&gt;&amp;lt;&lt;a&nbsp;href=&quot;mailto:rabbitmq-discuss_efine@usa.net&quot;&gt;rabbitmq-discuss_efine@usa.net&lt;/a&gt;&amp;gt;&nbsp;wrote:&lt;br&gt;<br>
&lt;/div&gt;&lt;div&nbsp;class=&quot;Ih2E3d&quot;&gt;&amp;gt;&nbsp;Truly,&nbsp;I&nbsp;always&nbsp;felt&nbsp;uncomfortable&nbsp;with&nbsp;using&nbsp;a&nbsp;cast&nbsp;on&nbsp;publish&nbsp;because&nbsp;you&lt;br&gt;<br>
&amp;gt;&nbsp;can&amp;#39;t&nbsp;tell&nbsp;directly&nbsp;if&nbsp;there&nbsp;was&nbsp;a&nbsp;problem.&nbsp;I&amp;#39;d&nbsp;prefer&nbsp;a&nbsp;call.&lt;br&gt;<br>
&lt;br&gt;<br>
&lt;/div&gt;Interesting&nbsp;that&nbsp;you&nbsp;should&nbsp;touch&nbsp;on&nbsp;the&nbsp;issue&nbsp;of&nbsp;transfer&nbsp;of&lt;br&gt;<br>
responsibility&nbsp;in&nbsp;this&nbsp;context.&nbsp;I&nbsp;guess&nbsp;the&nbsp;question&nbsp;you&nbsp;need&nbsp;to&nbsp;ask&lt;br&gt;<br>
is&nbsp;if&nbsp;there&nbsp;is&nbsp;a&nbsp;case&nbsp;where&nbsp;you&nbsp;can&nbsp;do&nbsp;a&nbsp;gen_server:cast&nbsp;and&nbsp;either&lt;br&gt;<br>
loose&nbsp;the&nbsp;message&nbsp;full&nbsp;stop&nbsp;or&nbsp;loose&nbsp;the&nbsp;ordering.&nbsp;My&nbsp;initial&nbsp;thought&lt;br&gt;<br>
is&nbsp;that&nbsp;all&nbsp;practical&nbsp;cases,&nbsp;this&nbsp;is&nbsp;not&nbsp;a&nbsp;problem,&nbsp;but&nbsp;I&nbsp;am&nbsp;following&lt;br&gt;<br>
this&nbsp;up&nbsp;with&nbsp;a&nbsp;question&nbsp;on&nbsp;the&nbsp;Erlang&nbsp;list&nbsp;(which&nbsp;you&amp;#39;ve&nbsp;probably&nbsp;seen&lt;br&gt;<br>
already).&lt;br&gt;<br>
&lt;br&gt;<br>
At&nbsp;this&nbsp;point&nbsp;in&nbsp;time&nbsp;I&nbsp;would&nbsp;be&nbsp;reticent&nbsp;to&nbsp;turn&nbsp;this&nbsp;is&nbsp;into&nbsp;a&lt;br&gt;<br>
gen_server:call/3&nbsp;because&nbsp;cast/2&lt;br&gt;<br>
&lt;br&gt;<br>
a)&nbsp;matches&nbsp;the&nbsp;asynchronous&nbsp;semantics&nbsp;of&nbsp;the&nbsp;publish&nbsp;command;&lt;br&gt;<br>
b)&nbsp;is&nbsp;a&nbsp;lot&nbsp;quicker&nbsp;than&nbsp;a&nbsp;call;&lt;br&gt;<br>
c)&nbsp;it&nbsp;is&nbsp;pending&nbsp;clarification&nbsp;as&nbsp;to&nbsp;whether&nbsp;there&nbsp;are&nbsp;actually&lt;br&gt;<br>
reordering&nbsp;issues.&lt;br&gt;<br>
&lt;br&gt;<br>
Also,&nbsp;even&nbsp;if&nbsp;you&nbsp;use&nbsp;a&nbsp;call,&nbsp;how&nbsp;will&nbsp;you&nbsp;know&nbsp;that&nbsp;the&nbsp;message&lt;br&gt;<br>
hasn&amp;#39;t&nbsp;been&nbsp;binned&nbsp;by&nbsp;the&nbsp;gen_server&nbsp;instance&nbsp;that&nbsp;you&nbsp;invoked&lt;br&gt;<br>
quasi-synchronously?&lt;br&gt;<br>
&lt;/blockquote&gt;&lt;div&gt;&lt;br&gt;Because&nbsp;the&nbsp;call&nbsp;will&nbsp;return&nbsp;an&nbsp;ok?&lt;br&gt;&amp;nbsp;&lt;br&gt;&lt;/div&gt;&lt;blockquote&nbsp;class=&quot;gmail_quote&quot;&nbsp;style=&quot;border-left:&nbsp;1px&nbsp;solid&nbsp;rgb(204,&nbsp;204,&nbsp;204);&nbsp;margin:&nbsp;0pt&nbsp;0pt&nbsp;0pt&nbsp;0.8ex;&nbsp;padding-left:&nbsp;1ex;&quot;&gt;&lt;br&gt;<br>
In&nbsp;general&nbsp;if&nbsp;you&nbsp;want&nbsp;to&nbsp;make&nbsp;sure&nbsp;that&nbsp;you&nbsp;are&nbsp;not&nbsp;losing&nbsp;messages,&lt;br&gt;<br>
you&nbsp;should&nbsp;consider&nbsp;using&nbsp;transactions.&nbsp;Or&nbsp;what&nbsp;would&nbsp;be&nbsp;even&nbsp;better&lt;br&gt;<br>
would&nbsp;be&nbsp;to&nbsp;have&nbsp;an&nbsp;application&nbsp;level&nbsp;acknowledgement.&lt;br&gt;<br>
&lt;div&nbsp;class=&quot;Ih2E3d&quot;&gt;&lt;/div&gt;&lt;/blockquote&gt;&lt;div&nbsp;class=&quot;Ih2E3d&quot;&gt;&lt;br&gt;Application&nbsp;level&nbsp;acknowldgement,&nbsp;meaning&nbsp;that&nbsp;my&nbsp;consumer&nbsp;explicitly&nbsp;sends&nbsp;an&nbsp;application-level&nbsp;acknowledgement&nbsp;message&nbsp;to&nbsp;the&nbsp;producer?&nbsp;Let&nbsp;me&nbsp;hopefully&nbsp;not&nbsp;annoy&nbsp;you&nbsp;by&nbsp;again&nbsp;comparing&nbsp;with&nbsp;WebSphere&nbsp;MQ.&nbsp;When&nbsp;you&nbsp;PUT&nbsp;a&nbsp;message&nbsp;to&nbsp;the&nbsp;queue&nbsp;manager,&nbsp;you&nbsp;get&nbsp;a&nbsp;return&nbsp;code&nbsp;which,&nbsp;if&nbsp;it&nbsp;is&nbsp;a&nbsp;success,&nbsp;means&nbsp;that&nbsp;the&nbsp;queue&nbsp;manager&nbsp;has&nbsp;got&nbsp;your&nbsp;message&nbsp;and&nbsp;it&amp;#39;s&nbsp;all&nbsp;good.&nbsp;No&nbsp;app&nbsp;level&nbsp;acks&nbsp;needed.&nbsp;No&nbsp;transactions&nbsp;needed.&nbsp;With&nbsp;using&nbsp;a&nbsp;cast&nbsp;to&nbsp;send&nbsp;a&nbsp;message&nbsp;to&nbsp;the&nbsp;broker,&nbsp;if&nbsp;the&nbsp;client&nbsp;has&nbsp;a&nbsp;problem&nbsp;with&nbsp;the&nbsp;message&nbsp;(this&nbsp;happened&nbsp;to&nbsp;me&nbsp;recently),&nbsp;the&nbsp;producer&nbsp;has&nbsp;no&nbsp;idea&nbsp;of&nbsp;this.&nbsp;I&nbsp;only&nbsp;found&nbsp;out&nbsp;by&nbsp;seeing&nbsp;errors&nbsp;in&nbsp;my&nbsp;log&nbsp;file.&nbsp;Or&nbsp;at&nbsp;least,&nbsp;I&nbsp;don&amp;#39;t&nbsp;know&nbsp;of&nbsp;a&nbsp;way&nbsp;to&nbsp;find&nbsp;out&nbsp;other&nbsp;than&nbsp;by&nbsp;starting&nbsp;a&nbsp;transaction,&nbsp;which&nbsp;I&nbsp;am&nbsp;loath&nbsp;to&nbsp;do&nbsp;because&nbsp;of&nbsp;performance&nbsp;concerns.&lt;br&gt;<br>
&lt;br&gt;What&nbsp;happened&nbsp;is&nbsp;that&nbsp;I&nbsp;refactored&nbsp;some&nbsp;code&nbsp;and&nbsp;in&nbsp;doing&nbsp;so&nbsp;created&nbsp;a&nbsp;bug&nbsp;that&nbsp;tried&nbsp;to&nbsp;send&nbsp;a&nbsp;record&nbsp;instead&nbsp;of&nbsp;a&nbsp;list&nbsp;in&nbsp;the&nbsp;basic.publish.&nbsp;Yes,&nbsp;my&nbsp;fault,&nbsp;but&nbsp;I&nbsp;would&nbsp;have&nbsp;liked&nbsp;to&nbsp;have&nbsp;known&nbsp;about&nbsp;it&nbsp;at&nbsp;the&nbsp;code&nbsp;level.&nbsp;The&nbsp;message&nbsp;was&nbsp;lost&nbsp;because&nbsp;there&nbsp;apparently&nbsp;was&nbsp;no&nbsp;way&nbsp;to&nbsp;detect&nbsp;this,&nbsp;let&nbsp;alone&nbsp;recover&nbsp;from&nbsp;it&nbsp;(except&nbsp;maybe&nbsp;the&nbsp;txn,&nbsp;which&nbsp;I&nbsp;have&nbsp;not&nbsp;tried).&lt;br&gt;<br>
&lt;br&gt;==&nbsp;8-Nov-2008::20:08:59&nbsp;==&nbsp;ERROR&nbsp;-&amp;nbsp;&nbsp;emulator&lt;br&gt;Error&nbsp;in&nbsp;process&nbsp;&amp;lt;0.191.0&amp;gt;&nbsp;on&nbsp;node&nbsp;&amp;#39;xhg_rel@ender&amp;#39;&nbsp;with&nbsp;exit&nbsp;value:&nbsp;{badarg,[{erlang,list_to_binary,[{frame_rec,&amp;lt;&amp;lt;217&nbsp;bytes&amp;gt;&amp;gt;,1226192940,0,active,ok,0,undefined,0,&amp;lt;&amp;lt;33&nbsp;bytes&amp;gt;&amp;gt;}]},{rabbit_binary_generator,create_frame,3},{rabbit_binary_generator,build_content_frames,5},{rabbit_binary_generator,build_simple_content_frames...&nbsp;&lt;br&gt;<br>
&lt;br&gt;<br>
&lt;br&gt;<br>
&amp;gt;&nbsp;Maybe&nbsp;this&nbsp;is&nbsp;a&nbsp;hare-brained&nbsp;idea,&nbsp;but&nbsp;can&amp;#39;t&nbsp;the&nbsp;broker&nbsp;just&nbsp;send&nbsp;a&lt;br&gt;<br>
&amp;gt;&nbsp;channel.flow&nbsp;to&nbsp;the&nbsp;producer;&nbsp;the&nbsp;Erlang&nbsp;client&nbsp;just&nbsp;forwards&nbsp;it&nbsp;on&nbsp;to&nbsp;the&lt;br&gt;<br>
&amp;gt;&nbsp;producer&nbsp;in&nbsp;precisely&nbsp;the&nbsp;same&nbsp;way&nbsp;as&nbsp;it&nbsp;sends&nbsp;a&nbsp;basic.receive&nbsp;to&nbsp;a&lt;br&gt;<br>
&amp;gt;&nbsp;consumer?&nbsp;The&nbsp;publishing&nbsp;application&nbsp;would&nbsp;just&nbsp;need&nbsp;to&nbsp;write&nbsp;a&nbsp;handle_info&lt;br&gt;<br>
&amp;gt;&nbsp;for&nbsp;channel.flow&nbsp;just&nbsp;like&nbsp;a&nbsp;consumer&nbsp;does&nbsp;for&nbsp;basic.receive,&nbsp;or&nbsp;have&nbsp;I&lt;br&gt;<br>
&amp;gt;&nbsp;missed&nbsp;the&nbsp;point?&lt;br&gt;<br>
&lt;br&gt;<br>
&lt;/div&gt;&lt;blockquote&nbsp;class=&quot;gmail_quote&quot;&nbsp;style=&quot;border-left:&nbsp;1px&nbsp;solid&nbsp;rgb(204,&nbsp;204,&nbsp;204);&nbsp;margin:&nbsp;0pt&nbsp;0pt&nbsp;0pt&nbsp;0.8ex;&nbsp;padding-left:&nbsp;1ex;&quot;&gt;When&nbsp;you&nbsp;say&nbsp;basic.receive,&nbsp;I&nbsp;assume&nbsp;you&nbsp;mean&nbsp;basic.deliver.&lt;br&gt;<br>
&lt;/blockquote&gt;&lt;div&gt;Yes,&nbsp;sorry.&lt;br&gt;&amp;nbsp;&lt;br&gt;&lt;/div&gt;&lt;blockquote&nbsp;class=&quot;gmail_quote&quot;&nbsp;style=&quot;border-left:&nbsp;1px&nbsp;solid&nbsp;rgb(204,&nbsp;204,&nbsp;204);&nbsp;margin:&nbsp;0pt&nbsp;0pt&nbsp;0pt&nbsp;0.8ex;&nbsp;padding-left:&nbsp;1ex;&quot;&gt;&lt;br&gt;<br>
Have&nbsp;you&nbsp;looked&nbsp;at&nbsp;the&nbsp;test&nbsp;that&nbsp;I&nbsp;wrote&nbsp;for&nbsp;this&nbsp;in&nbsp;the&nbsp;test_util&lt;br&gt;<br>
module&nbsp;-&nbsp;it&nbsp;does&nbsp;pretty&nbsp;much&nbsp;what&nbsp;you&nbsp;describe.&lt;br&gt;<br>
&lt;div&nbsp;class=&quot;Ih2E3d&quot;&gt;&lt;/div&gt;&lt;/blockquote&gt;&lt;div&gt;&lt;br&gt;I&nbsp;have&nbsp;looked&nbsp;at&nbsp;the&nbsp;test,&nbsp;but&nbsp;it&nbsp;does&nbsp;not&nbsp;do&nbsp;anything&nbsp;like&nbsp;what&nbsp;I&nbsp;was&nbsp;trying&nbsp;to&nbsp;describe&nbsp;:)&lt;br&gt;&lt;br&gt;What&nbsp;I&nbsp;was&nbsp;trying&nbsp;to&nbsp;describe&nbsp;was&nbsp;having&nbsp;a&nbsp;gen_server&nbsp;or&nbsp;gen_fsm&nbsp;that&nbsp;has&nbsp;a&nbsp;clause&nbsp;something&nbsp;like&nbsp;this;&lt;br&gt;<br>
&lt;br&gt;handle_info(#&amp;#39;channel.flow&amp;#39;{active&nbsp;=&nbsp;false},&nbsp;State)&nbsp;-&amp;gt;&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;{noreply,&nbsp;State#state{channel_flow&nbsp;=&nbsp;false}};&lt;br&gt;&lt;br&gt;handle_info(#&amp;#39;channel.flow&amp;#39;{active&nbsp;=&nbsp;true},&nbsp;State)&nbsp;-&amp;gt;&lt;br&gt;<br>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;{noreply,&nbsp;State#state{channel_flow&nbsp;=&nbsp;true}};&lt;br&gt;<br>
&lt;br&gt;When&nbsp;receiving&nbsp;the&nbsp;&amp;quot;down&amp;quot;&nbsp;signal,&nbsp;the&nbsp;producer&nbsp;can&nbsp;then&nbsp;go&nbsp;into&nbsp;an&nbsp;idle&nbsp;state&nbsp;voluntarily.&nbsp;I&nbsp;don&amp;#39;t&nbsp;like&nbsp;the&nbsp;idea&nbsp;of&nbsp;the&nbsp;client&nbsp;silently&nbsp;throwing&nbsp;away&nbsp;producer&nbsp;messages.&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;/div&gt;&lt;blockquote&nbsp;class=&quot;gmail_quote&quot;&nbsp;style=&quot;border-left:&nbsp;1px&nbsp;solid&nbsp;rgb(204,&nbsp;204,&nbsp;204);&nbsp;margin:&nbsp;0pt&nbsp;0pt&nbsp;0pt&nbsp;0.8ex;&nbsp;padding-left:&nbsp;1ex;&quot;&gt;<br>
&lt;div&nbsp;class=&quot;Ih2E3d&quot;&gt;&lt;br&gt;<br>
&amp;gt;&nbsp;I&nbsp;realize&nbsp;that&nbsp;this&nbsp;means&nbsp;that&nbsp;publishing&nbsp;applications&nbsp;can&nbsp;choose&nbsp;to&nbsp;ignore&lt;br&gt;<br>
&amp;gt;&nbsp;channel.flow&nbsp;commands,&nbsp;but&nbsp;that&nbsp;would&nbsp;be&nbsp;shooting&nbsp;themselves&nbsp;in&nbsp;the&nbsp;foot.&nbsp;In&lt;br&gt;<br>
&amp;gt;&nbsp;the&nbsp;0.8&nbsp;spec&nbsp;it&nbsp;says&nbsp;&amp;quot;The&nbsp;peer&nbsp;that&nbsp;requests&nbsp;a&nbsp;Channel.Flow&nbsp;method&nbsp;MAY&lt;br&gt;<br>
&amp;gt;&nbsp;disconnect&nbsp;and/or&nbsp;ban&nbsp;a&nbsp;peer&nbsp;that&nbsp;does&nbsp;not&nbsp;respect&nbsp;the&nbsp;request.&amp;quot;,&nbsp;so&nbsp;the&lt;br&gt;<br>
&amp;gt;&nbsp;server&nbsp;could&nbsp;just&nbsp;drop&nbsp;the&nbsp;channel&nbsp;if&nbsp;the&nbsp;publisher&nbsp;ignores&nbsp;it.&lt;br&gt;<br>
&lt;br&gt;<br>
&lt;/div&gt;That&amp;#39;s&nbsp;what&nbsp;it&nbsp;will&nbsp;eventually&nbsp;do.&lt;br&gt;<br>
&lt;div&nbsp;class=&quot;Ih2E3d&quot;&gt;&lt;br&gt;<br>
&amp;gt;&nbsp;Now&nbsp;I&nbsp;am&nbsp;not&nbsp;sure&nbsp;what&nbsp;is&nbsp;meant&nbsp;by&nbsp;a&nbsp;&amp;quot;peer&amp;quot;,&nbsp;if&nbsp;that&amp;#39;s&nbsp;the&nbsp;client&nbsp;itself&nbsp;or&lt;br&gt;<br>
&amp;gt;&nbsp;the&nbsp;application&nbsp;that&nbsp;is&nbsp;using&nbsp;the&nbsp;client.&nbsp;Either&nbsp;way,&nbsp;I&nbsp;believe&nbsp;that&nbsp;the&lt;br&gt;<br>
&amp;gt;&nbsp;Erlang&nbsp;client&nbsp;simply&nbsp;forwarding&nbsp;the&nbsp;channel.flow&nbsp;command&nbsp;to&nbsp;the&nbsp;application&lt;br&gt;<br>
&amp;gt;&nbsp;and&nbsp;requiring&nbsp;it&nbsp;to&nbsp;respond&nbsp;with&nbsp;the&nbsp;ok&nbsp;(and&nbsp;stop&nbsp;sending)&nbsp;is&nbsp;within&nbsp;the&lt;br&gt;<br>
&amp;gt;&nbsp;spirit&nbsp;of&nbsp;the&nbsp;spec,&nbsp;and&nbsp;should&nbsp;(?)&nbsp;be&nbsp;simple&nbsp;to&nbsp;do&nbsp;in&nbsp;the&nbsp;client.&lt;br&gt;<br>
&lt;br&gt;<br>
&lt;/div&gt;ATM&nbsp;the&nbsp;client&nbsp;sends&nbsp;the&nbsp;ack&nbsp;back&nbsp;after&nbsp;it&nbsp;has&nbsp;asynchronously&nbsp;notified&lt;br&gt;<br>
the&nbsp;sending&nbsp;application.&nbsp;The&nbsp;registration&nbsp;for&nbsp;this&nbsp;is&nbsp;analogous&nbsp;to&nbsp;the&lt;br&gt;<br>
return&nbsp;listener&nbsp;registration&nbsp;process&nbsp;(in&nbsp;fact&nbsp;it&amp;#39;s&nbsp;copy&nbsp;and&nbsp;paste).&nbsp;If&lt;br&gt;<br>
the&nbsp;flag&nbsp;is&nbsp;set,&nbsp;any&nbsp;invocation&nbsp;of&nbsp;the&nbsp;cast&nbsp;function&nbsp;will&nbsp;silently&lt;br&gt;<br>
discard&nbsp;the&nbsp;message.&lt;br&gt;<br>
&lt;/blockquote&gt;&lt;div&gt;&lt;br&gt;I&nbsp;really&nbsp;don&amp;#39;t&nbsp;like&nbsp;the&nbsp;sound&nbsp;of&nbsp;that.&nbsp;I&nbsp;don&amp;#39;t&nbsp;like&nbsp;silent&nbsp;discards&nbsp;in&nbsp;general.&lt;br&gt;&lt;br&gt;&lt;/div&gt;&lt;blockquote&nbsp;class=&quot;gmail_quote&quot;&nbsp;style=&quot;border-left:&nbsp;1px&nbsp;solid&nbsp;rgb(204,&nbsp;204,&nbsp;204);&nbsp;margin:&nbsp;0pt&nbsp;0pt&nbsp;0pt&nbsp;0.8ex;&nbsp;padding-left:&nbsp;1ex;&quot;&gt;<br>
&lt;br&gt;<br>
I&nbsp;think&nbsp;that&nbsp;doing&nbsp;it&nbsp;this&nbsp;way&nbsp;round&nbsp;would&nbsp;be&nbsp;cooler&nbsp;than&nbsp;turning&nbsp;the&lt;br&gt;<br>
cast&nbsp;into&nbsp;a&nbsp;call&nbsp;in&nbsp;order&nbsp;to&nbsp;be&nbsp;able&nbsp;to&nbsp;read&nbsp;the&nbsp;state&nbsp;of&nbsp;the&nbsp;channel&lt;br&gt;<br>
flow&nbsp;flag.&lt;br&gt;<br>
&lt;/blockquote&gt;&lt;div&gt;&lt;br&gt;Well,&nbsp;how&nbsp;about&nbsp;what&nbsp;I&nbsp;suggested&nbsp;above?&nbsp;Just&nbsp;let&nbsp;the&nbsp;client&nbsp;pass&nbsp;the&nbsp;channel.flow&nbsp;on&nbsp;to&nbsp;the&nbsp;app.&nbsp;Why&nbsp;not?&nbsp;&lt;br&gt;&lt;/div&gt;&lt;blockquote&nbsp;class=&quot;gmail_quote&quot;&nbsp;style=&quot;border-left:&nbsp;1px&nbsp;solid&nbsp;rgb(204,&nbsp;204,&nbsp;204);&nbsp;margin:&nbsp;0pt&nbsp;0pt&nbsp;0pt&nbsp;0.8ex;&nbsp;padding-left:&nbsp;1ex;&quot;&gt;<br>
&lt;br&gt;<br>
The&nbsp;only&nbsp;issue&nbsp;I&nbsp;see&nbsp;is&nbsp;the&nbsp;added&nbsp;complexity&nbsp;involved&nbsp;in&nbsp;the&lt;br&gt;<br>
application&nbsp;-&nbsp;it&nbsp;would&nbsp;have&nbsp;to&nbsp;have&nbsp;a&nbsp;receive&nbsp;loop&nbsp;that&nbsp;matches&nbsp;on&nbsp;the&lt;br&gt;<br>
pause&nbsp;and&nbsp;resume&nbsp;atoms&nbsp;sent&nbsp;to&nbsp;it&nbsp;by&nbsp;the&nbsp;channel&nbsp;process.&lt;br&gt;<br>
&lt;/blockquote&gt;&lt;div&gt;&lt;br&gt;Not&nbsp;if&nbsp;done&nbsp;the&nbsp;way&nbsp;I&nbsp;suggested.&nbsp;Then&nbsp;it&nbsp;just&nbsp;becomes&nbsp;another&nbsp;handle_info&nbsp;clause&nbsp;and&nbsp;state&nbsp;change.&lt;br&gt;&amp;nbsp;&lt;br&gt;&lt;/div&gt;&lt;blockquote&nbsp;class=&quot;gmail_quote&quot;&nbsp;style=&quot;border-left:&nbsp;1px&nbsp;solid&nbsp;rgb(204,&nbsp;204,&nbsp;204);&nbsp;margin:&nbsp;0pt&nbsp;0pt&nbsp;0pt&nbsp;0.8ex;&nbsp;padding-left:&nbsp;1ex;&quot;&gt;<br>
&lt;br&gt;<br>
Maybe&nbsp;there&nbsp;is&nbsp;a&nbsp;way&nbsp;to&nbsp;build&nbsp;a&nbsp;convenience&nbsp;function&nbsp;for&nbsp;this&nbsp;in&nbsp;lib_amqp?&lt;br&gt;<br>
&lt;font&nbsp;color=&quot;#888888&quot;&gt;&lt;br&gt;<br>
Ben&lt;br&gt;<br>
&lt;br&gt;<br>
&lt;/font&gt;&lt;/blockquote&gt;&lt;/div&gt;&lt;br&gt;<br>

</tt>
