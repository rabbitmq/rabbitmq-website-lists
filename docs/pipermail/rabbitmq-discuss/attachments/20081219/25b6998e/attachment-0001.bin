#!/usr/bin/env ruby
require 'rubygems'

require 'amqp'
require 'mq'

puts "Starting event loop"

EM.run do

  # connect to the amqp server
  connection = AMQP.connect(:user => 'guest', :vhost => '/', :logging => false)

  trap('INT') { connection.close{ EM.stop_event_loop } }
  
  # open a channel on the AMQP connection
  channel = MQ.new(connection)

  # create a topic exchange
  exchange = MQ::Exchange.new(channel, :topic, 'my.topic', { :durable => true })

  # create queues
  puts "Creating the queues"
  1.upto(100) do |num|
    # declare queue on channel
    queue = MQ::Queue.new(channel, "my.durable.queue.#{num}", { :durable => true })

    # bind queue to exchange
    queue.bind(exchange)
  end

  # publish a message to the exchange
  puts "Publishing to exchange"
  exchange.publish('crash me', { :key => "#", :persistent => true })
  
  puts "Done..."

end

puts "Event loop ended"
