#!/usr/bin/python
# System libs
import re, time, sys, os, socket, traceback, syslog
from datetime import datetime, timedelta

# AMQP api
import amqplib.client_0_8 as amqp

exchange = 'redpill2'

class AMQPConnection(object):
    def __init__(self, host, port):
        self.host = host
        self.port = port
        self.connect()

    def connect(self):
        while True:
            try:
                # Create connection to host, using the "insist" flag to avoid redirection, which is currently broken in our AMQP lib
                self.conn = amqp.Connection(self.host, port=self.port, userid='guest', password='guest', ssl=False, insist=True)
                self.ch = self.conn.channel()
                self.ch.access_request('/data', active=True, write=True)
                self.ch.exchange_declare(exchange, 'topic', auto_delete=False, durable=True)
                syslog.syslog("Connected to AMQP server at %s:%i" % (self.host, self.port))
            except socket.error:
                syslog.syslog("Unable to connect to AMQP server at %s:%i, will retry in 10 sec" % (self.host, self.port))
                time.sleep(10.0)
            else:
                break


    def write(self, message, topic):
        while True:
            try:
                if self.ch.active:
                    self.ch.basic_publish(message, exchange, routing_key=topic)
                else:
                    print 'Channel not active, sleeping 1 second'
                    time.sleep(1)
            except socket.error:
                syslog.syslog(''.join(traceback.format_exception(*sys.exc_info()[:3])))
                self.connect()
            else:
                break

    def disconnect(self):
        self.ch.close()
        self.conn.close()


def print_usage():
    print >> sys.stderr, "Usage: %s <host> <port>" % sys.argv[0]
    sys.exit(1)


def main():

    if len(sys.argv) != 3:
        print_usage()

    host = sys.argv[1]
    port = int(sys.argv[2])

    global reftime, AMQPconn # encoder
    AMQPconn = AMQPConnection(host, port)
    time.sleep(1)

    count = 0
    total_count = 0
    message = amqp.Message('TEST MESSAGE')
    try:
        while (True):
            AMQPconn.write(message, 'my.topic')
            count += 1
            total_count += 1
            if count >= 1000:
                print str(total_count) + 'messages sent'
                count = 0
    finally:
        print 'Shutting down.'
        AMQPconn.disconnect()


if __name__ == '__main__':
    main()
