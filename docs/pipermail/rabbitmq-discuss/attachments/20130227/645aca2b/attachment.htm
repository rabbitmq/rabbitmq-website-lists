<tt>
Hi,&nbsp;Prabodh:&lt;br&gt;&lt;br&gt;&lt;div&nbsp;class=&quot;gmail_quote&quot;&gt;&lt;blockquote&nbsp;class=&quot;gmail_quote&quot;&nbsp;style=&quot;margin:0&nbsp;0&nbsp;0&nbsp;.8ex;border-left:1px&nbsp;#ccc&nbsp;solid;padding-left:1ex&quot;&gt;For&nbsp;my&nbsp;next&nbsp;phase,&nbsp;I&nbsp;need&nbsp;to&nbsp;integrate&nbsp;with&nbsp;the&nbsp;external&nbsp;system&nbsp;and&nbsp;control&lt;br&gt;<br>
<br>
authorization.&nbsp; First&nbsp;thing&nbsp;I&nbsp;need&nbsp;to&nbsp;do&nbsp;is&nbsp;control&nbsp;users&nbsp;from&nbsp;creating&lt;br&gt;<br>
temporary&nbsp;queue&nbsp;with&nbsp;only&nbsp;certain&nbsp;filter&nbsp;criteria.&nbsp; i.e.&nbsp;allow&nbsp;logged&nbsp;in&lt;br&gt;<br>
user&nbsp;to&nbsp;create&nbsp;a&nbsp;queue&nbsp;based&nbsp;on&nbsp;filter&nbsp;key&nbsp;*.warning.&nbsp; This&nbsp;user&nbsp;will&nbsp;not&lt;br&gt;<br>
have&nbsp;permission&nbsp;to&nbsp;create&nbsp;a&nbsp;queue&nbsp;with&nbsp;*.error&nbsp;tag.&nbsp; How&nbsp;can&nbsp;I&nbsp;control&nbsp;that?&lt;br&gt;&lt;/blockquote&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;To&nbsp;handle&nbsp;such&nbsp;checks&nbsp;you&amp;#39;ll&nbsp;have&nbsp;to&nbsp;implement&nbsp;an&nbsp;&amp;quot;authorization&nbsp;backend&amp;quot;&nbsp;by&nbsp;implementing&nbsp;the&nbsp;&amp;#39;rabbit_auth_backend&amp;#39;&nbsp;Erlang&nbsp;behaviour.&lt;/div&gt;<br>
&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;The&nbsp;behaviour&nbsp;in&nbsp;question&nbsp;is&nbsp;pretty&nbsp;simple,&nbsp;exposing&nbsp;only&nbsp;check_user_login/2,&nbsp;check_vhost_access/2&nbsp;and&nbsp;check_resource_access/2.&nbsp; The&nbsp;last&nbsp;of&nbsp;these&nbsp;three&nbsp;is&nbsp;where&nbsp;you&nbsp;will&nbsp;want&nbsp;to&nbsp;implement&nbsp;your&nbsp;logic&nbsp;for&nbsp;enforcing&nbsp;what&nbsp;operations&nbsp;a&nbsp;user&nbsp;can&nbsp;perform&nbsp;on&nbsp;which&nbsp;resources.&lt;/div&gt;<br>
&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;If&nbsp;you&nbsp;want&nbsp;some&nbsp;example&nbsp;code&nbsp;to&nbsp;look&nbsp;at,&nbsp;check&nbsp;out&nbsp;the&nbsp;source&nbsp;for&nbsp;the&nbsp;RabbitMQ&nbsp;broker&nbsp;itself,&nbsp;which&nbsp;implements&nbsp;the&nbsp;above&nbsp;behaviour,&nbsp;with&nbsp;checks&nbsp;against&nbsp;an&nbsp;Mnesia-based&nbsp;database&nbsp;of&nbsp;users&nbsp;and&nbsp;permissions,&nbsp;in&nbsp;the&nbsp;file&nbsp;rabbit_auth_backend_internal.erl;&nbsp;the&nbsp;Mnesia/database&nbsp;stuff&nbsp;there&nbsp;is&nbsp;likely&nbsp;not&nbsp;directly&nbsp;relevant&nbsp;to&nbsp;your&nbsp;application&nbsp;but&nbsp;you&nbsp;can&nbsp;get&nbsp;a&nbsp;sense&nbsp;for&nbsp;the&nbsp;sorts&nbsp;of&nbsp;work&nbsp;you&amp;#39;ll&nbsp;need&nbsp;to&nbsp;do&nbsp;to&nbsp;get&nbsp;what&nbsp;you&nbsp;want&nbsp;working.&lt;/div&gt;<br>
&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;Best&nbsp;regards,&lt;/div&gt;&lt;div&gt;Jerry&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;/div&gt;<br>

</tt>
