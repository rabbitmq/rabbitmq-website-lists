<tt>
On&nbsp;2&nbsp;August&nbsp;2012&nbsp;09:25,&nbsp;Bernhard&nbsp;Mogens&nbsp;Ege&nbsp;&lt;span&nbsp;dir=&quot;ltr&quot;&gt;&amp;lt;&lt;a&nbsp;href=&quot;mailto:bme@saseco.dk&quot;&nbsp;target=&quot;_blank&quot;&gt;bme@saseco.dk&lt;/a&gt;&amp;gt;&lt;/span&gt;&nbsp;wrote:&lt;br&gt;&lt;div&nbsp;class=&quot;gmail_quote&quot;&gt;&lt;blockquote&nbsp;class=&quot;gmail_quote&quot;&nbsp;style=&quot;margin:0&nbsp;0&nbsp;0&nbsp;.8ex;border-left:1px&nbsp;#ccc&nbsp;solid;padding-left:1ex&quot;&gt;<br>
Hmm&nbsp;looking&nbsp;at&nbsp;WireFormatting.cs,&nbsp;UTF8&nbsp;is&nbsp;already&nbsp;assumed&nbsp;when&nbsp;converting&nbsp;a&lt;br&gt;<br>
string&nbsp;to&nbsp;byte[].&nbsp;Why&nbsp;not&nbsp;assume&nbsp;UTF8&lt;br&gt;<br>
when&nbsp;receiving&nbsp;the&nbsp;byte[]&nbsp;and&nbsp;return&nbsp;a&nbsp;string&nbsp;instead&nbsp;of&nbsp;a&nbsp;byte[]&nbsp;(offending&lt;br&gt;<br>
method:&nbsp;ReadLongstr)?&lt;br&gt;&lt;/blockquote&gt;&lt;div&gt;&lt;br&gt;Because&nbsp;not&nbsp;all&nbsp;byte[]s&nbsp;are&nbsp;valid&nbsp;UTF-8,&nbsp;AMQP&nbsp;doesn&amp;#39;t&nbsp;provide&nbsp;a&nbsp;way&nbsp;of&nbsp;giving&nbsp;an&nbsp;interpretation&nbsp;for&nbsp;a&nbsp;particular&nbsp;byte&nbsp;vector,&nbsp;and&nbsp;it&amp;#39;d&nbsp;be&nbsp;Bad&nbsp;to&nbsp;not&nbsp;support&nbsp;transmission&nbsp;of&nbsp;arbitrary&nbsp;binary&nbsp;content&nbsp;over&nbsp;AMQP.&lt;br&gt;<br>
&lt;br&gt;The&nbsp;table&nbsp;writer&nbsp;can&nbsp;cope&nbsp;with&nbsp;Strings&nbsp;by&nbsp;using&nbsp;UTF-8&nbsp;encoding&nbsp;as&nbsp;a&nbsp;convenience&nbsp;because&nbsp;C#&nbsp;has&nbsp;given&nbsp;the&nbsp;table&nbsp;writer&nbsp;enough&nbsp;to&nbsp;work&nbsp;with:&nbsp;it&nbsp;can&nbsp;distinguish&nbsp;byte[]s&nbsp;from&nbsp;Strings.&nbsp;This&nbsp;doesn&amp;#39;t&nbsp;hold&nbsp;in&nbsp;the&nbsp;other&nbsp;direction.&nbsp;The&nbsp;table&nbsp;reader&nbsp;would&nbsp;have&nbsp;to&nbsp;guess.&lt;br&gt;<br>
&lt;br&gt;Regards,&lt;br&gt;Â &nbsp;Tony&lt;br&gt;&lt;br&gt;<br>
&lt;/div&gt;&lt;/div&gt;<br>

</tt>
