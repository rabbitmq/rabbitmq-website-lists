diff --git a/src/Channel.cpp b/src/Channel.cpp
index 5f92225..2d8ca05 100644
--- a/src/Channel.cpp
+++ b/src/Channel.cpp
@@ -130,7 +130,8 @@ Channel::Channel(const std::string &host,
                  int frame_max,
                  const std::string &path_to_ca_cert,
                  const std::string &path_to_client_key,
-                 const std::string &path_to_client_cert) :
+                 const std::string &path_to_client_cert,
+				 bool verify_hostname) :
     m_impl(new Detail::ChannelImpl)
 {
     m_impl->m_connection = amqp_new_connection();
@@ -164,7 +165,12 @@ Channel::Channel(const std::string &host,
                 throw std::runtime_error("Error in setting client certificate for socket");
             }
         }
-
+		
+		if (!verify_hostname)
+		{
+			amqp_ssl_socket_set_verify(socket, false);
+		}
+		
         status = amqp_socket_open(socket, host.c_str(), port);
         if (status)
         {
diff --git a/src/SimpleAmqpClient/Channel.h b/src/SimpleAmqpClient/Channel.h
index 22463b2..d9a5731 100644
--- a/src/SimpleAmqpClient/Channel.h
+++ b/src/SimpleAmqpClient/Channel.h
@@ -123,9 +123,11 @@ public:
                               const std::string &username = "guest",
                               const std::string &password = "guest",
                               const std::string &vhost = "/",
-                              int frame_max = 131072)
+                              int frame_max = 131072,
+							  bool verify_hostname = true)
     {
-        return boost::make_shared<Channel>(host,
+        // return boost::make_shared<Channel>(host,
+        return ptr_t(new Channel(host,
                                            port,
                                            username,
                                            password,
@@ -133,7 +135,8 @@ public:
                                            frame_max,
                                            path_to_ca_cert,
                                            path_to_client_key,
-                                           path_to_client_cert);
+                                           path_to_client_cert,
+										   verify_hostname));
     }
 
 
@@ -161,7 +164,8 @@ public:
                      int frame_max,
                      const std::string &path_to_ca_cert,
                      const std::string &path_to_client_key,
-                     const std::string &path_to_client_cert);
+                     const std::string &path_to_client_cert,
+					 bool verify_hostname);
 
 
 public:
