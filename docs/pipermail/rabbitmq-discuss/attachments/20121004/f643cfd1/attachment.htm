<tt>
Hello.&nbsp;I&nbsp;am&nbsp;seeking&nbsp;to&nbsp;filter&nbsp;out&nbsp;only&nbsp;messages&nbsp;that&nbsp;have&nbsp;been&nbsp;taken&nbsp;for&nbsp;consumption&nbsp;but&nbsp;not&nbsp;acked&nbsp;properly.&nbsp;I&nbsp;am&nbsp;working&nbsp;with&nbsp;service&nbsp;which&nbsp;normal&nbsp;workflow&nbsp;is:&nbsp;take&nbsp;message,&nbsp;work&nbsp;with&nbsp;it&nbsp;for&nbsp;some&nbsp;time,&nbsp;ack&nbsp;it&nbsp;when&nbsp;work&nbsp;is&nbsp;completed.&nbsp;Now&nbsp;consider&nbsp;situation&nbsp;when&nbsp;producer&nbsp;service&nbsp;puts&nbsp;a&nbsp;message&nbsp;in&nbsp;queue,&nbsp;then&nbsp;consumer&nbsp;service&nbsp;takes&nbsp;message&nbsp;and&nbsp;dies&nbsp;during&nbsp;work.&nbsp;Since&nbsp;there&nbsp;was&nbsp;no&nbsp;ack,&nbsp;message&nbsp;stays&nbsp;in&nbsp;queue.&nbsp;There&nbsp;was&nbsp;no&nbsp;intentional&nbsp;reject&nbsp;because&nbsp;service&nbsp;is&nbsp;down.&nbsp;I&nbsp;wouldn't&nbsp;want&nbsp;to&nbsp;use&nbsp;TTL&nbsp;because&nbsp;it&nbsp;can&nbsp;happen&nbsp;that&nbsp;one&nbsp;service&nbsp;quickly&nbsp;bursts&nbsp;with&nbsp;few&nbsp;thousands&nbsp;messages&nbsp;for&nbsp;another&nbsp;service&nbsp;to&nbsp;process&nbsp;them&nbsp;slowly&nbsp;one&nbsp;by&nbsp;one,&nbsp;so&nbsp;they&nbsp;will&nbsp;be&nbsp;waiting&nbsp;in&nbsp;queue&nbsp;quite&nbsp;some&nbsp;time&nbsp;and&nbsp;that&nbsp;can't&nbsp;be&nbsp;consider&nbsp;an&nbsp;error.&nbsp;My&nbsp;goal&nbsp;is&nbsp;to&nbsp;avoid&nbsp;looping&nbsp;when&nbsp;service&nbsp;will&nbsp;recover,&nbsp;then&nbsp;take&nbsp;again&nbsp;the&nbsp;message,&nbsp;again&nbsp;goes&nbsp;down&nbsp;during&nbsp;work&nbsp;with&nbsp;no&nbsp;ack,&nbsp;recover&nbsp;again,&nbsp;etc.&nbsp;The&nbsp;best&nbsp;solution&nbsp;would&nbsp;be&nbsp;to&nbsp;filter&nbsp;out&nbsp;&lt;br&gt;&lt;br&gt;Many&nbsp;thanks&nbsp;for&nbsp;any&nbsp;help&nbsp;and/or&nbsp;possible&nbsp;design&nbsp;pattern.&lt;br&gt;MM&lt;br&gt;
</tt>
