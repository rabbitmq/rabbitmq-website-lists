<tt>
Dear&nbsp;Rabbitters,&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;We&amp;#39;ve&nbsp;got&nbsp;a&nbsp;situation&nbsp;--&nbsp;it&nbsp;must&nbsp;be&nbsp;quite&nbsp;common&nbsp;--&nbsp;where,&nbsp;in&nbsp;the&nbsp;simplest&nbsp;case,&nbsp;we&nbsp;have&nbsp;two&nbsp;application&nbsp;nodes,&nbsp;call&nbsp;them&nbsp;A&nbsp;and&nbsp;B.&nbsp;RabbitMQ&nbsp;server&nbsp;is&nbsp;running&nbsp;on&nbsp;the&nbsp;machines&nbsp;for&nbsp;both&nbsp;A&nbsp;and&nbsp;B.&nbsp;The&nbsp;B&nbsp;node&nbsp;has&nbsp;established&nbsp;it&amp;#39;s&nbsp;connection&nbsp;to&nbsp;exchange&nbsp;and&nbsp;queue,&nbsp;but&nbsp;does&nbsp;not&nbsp;know&nbsp;whether&nbsp;A&nbsp;has.&nbsp;In&nbsp;the&nbsp;case&nbsp;that&nbsp;A&nbsp;has,&nbsp;all&nbsp;is&nbsp;well&nbsp;in&nbsp;the&nbsp;world.&nbsp;When&nbsp;B&nbsp;sends&nbsp;a&nbsp;message&nbsp;to&nbsp;A&nbsp;over&nbsp;RabbitMQ,&nbsp;A&nbsp;happily&nbsp;processes&nbsp;it&nbsp;and&nbsp;returns&nbsp;a&nbsp;response&nbsp;message.&nbsp;However,&nbsp;if&nbsp;A&nbsp;has&nbsp;not&nbsp;established&nbsp;it&amp;#39;s&nbsp;connection&nbsp;to&nbsp;exchange&nbsp;and&nbsp;queue,&nbsp;then&nbsp;if&nbsp;B&nbsp;has&nbsp;sent&nbsp;a&nbsp;message&nbsp;to&nbsp;A&nbsp;on&nbsp;this&nbsp;exchange&nbsp;and&nbsp;queue,&nbsp;then&nbsp;when&nbsp;A&nbsp;establishes&nbsp;it&amp;#39;s&nbsp;connection&nbsp;--&nbsp;not&nbsp;only&nbsp;does&nbsp;it&nbsp;not&nbsp;see&nbsp;the&nbsp;pending&nbsp;message,&nbsp;the&nbsp;next&nbsp;message&nbsp;B&nbsp;sends&nbsp;causes&nbsp;a&nbsp;Java&nbsp;exception&nbsp;to&nbsp;be&nbsp;thrown&nbsp;(see&nbsp;below). Now,&nbsp;we&nbsp;can&nbsp;arrange&nbsp;a&nbsp;bit&nbsp;of&nbsp;a&nbsp;handshake&nbsp;to&nbsp;work&nbsp;around&nbsp;this,&nbsp;and&nbsp;have&nbsp;done&nbsp;so.&nbsp;However,&nbsp;we&amp;#39;d&nbsp;like&nbsp;to&nbsp;know&nbsp;if&nbsp;there&amp;#39;s&nbsp;a&nbsp;better&nbsp;or&nbsp;Rabbitier&nbsp;way&nbsp;of&nbsp;doing&nbsp;this.&lt;/div&gt;<br>
<br>
&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;Best&nbsp;wishes,&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;--greg&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;meta&nbsp;charset=&quot;utf-8&quot;&gt;&lt;span&nbsp;class=&quot;Apple-style-span&quot;&nbsp;style=&quot;font-family:&nbsp;arial,&nbsp;sans-serif;&nbsp;font-size:&nbsp;13px;&nbsp;&quot;&gt;&lt;pre&nbsp;style=&quot;font-size:&nbsp;12px;&nbsp;white-space:&nbsp;pre-wrap;&nbsp;max-width:&nbsp;80em;&nbsp;padding-left:&nbsp;0.7em;&nbsp;&quot;&gt;<br>
com.rabbitmq.client.AlreadyClosedException:&nbsp;clean&nbsp;connection&nbsp;shutdown;&nbsp;reason:&nbsp;Attempt&nbsp;to&nbsp;use&nbsp;closed&nbsp;channelscala&amp;gt;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;at&nbsp;com.rabbitmq.client.impl.AMQChannel.ensureIsOpen(AMQChannel.java:181)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;at&nbsp;com.rabbitmq.client.impl.AMQChannel.transmit(AMQChannel.java:276)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;at&nbsp;com.rabbitmq.client.impl.ChannelN.basicPublish(ChannelN.java:521)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;at&nbsp;com.rabbitmq.client.impl.ChannelN.basicPublish(ChannelN.java:507)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;at&nbsp;net.liftweb.amqp.AMQPSender.send(AMQPSender.scala:25)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;at&nbsp;net.liftweb.amqp.AMQPSender$$anonfun$loop$1.apply(AMQPSender.scala:32)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;at&nbsp;net.liftweb.amqp.AMQPSender$$anonfun$loop$1.apply(AMQPSender.scala:31)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;at&nbsp;scala.actors.ReactorTask.run(ReactorTask.scala:31)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;at&nbsp;scala.actors.Reactor$class.resumeReceiver(Reactor.scala:129)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;at&nbsp;net.liftweb.amqp.AMQPSender.scala$actors$ReplyReactor$$super$resumeReceiver(AMQPSender.scala:15)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;at&nbsp;scala.actors.ReplyReactor$class.resumeReceiver(ReplyReactor.scala:68)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;at&nbsp;net.liftweb.amqp.AMQPSender.resumeReceiver(AMQPSender.scala:15)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;at&nbsp;scala.actors.Actor$class.searchMailbox(Actor.scala:500)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;at&nbsp;net.liftweb.amqp.AMQPSender.searchMailbox(AMQPSender.scala:15)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;at&nbsp;scala.actors.Reactor$$anonfun$startSearch$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(Reactor.scala:117)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;at&nbsp;scala.actors.Reactor$$anonfun$startSearch$1$$anonfun$apply$mcV$sp$1.apply(Reactor.scala:114)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;at&nbsp;scala.actors.Reactor$$anonfun$startSearch$1$$anonfun$apply$mcV$sp$1.apply(Reactor.scala:114)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;at&nbsp;scala.actors.ReactorTask.run(ReactorTask.scala:33)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;at&nbsp;scala.concurrent.forkjoin.ForkJoinPool$AdaptedRunnable.exec(ForkJoinPool.java:611)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;at&nbsp;scala.concurrent.forkjoin.ForkJoinTask.quietlyExec(ForkJoinTask.java:422)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;at&nbsp;scala.concurrent.forkjoin.ForkJoinWorkerThread.mainLoop(ForkJoinWorkerThread.java:340)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;at&nbsp;scala.concurrent.forkjoin.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:325)<br>
&lt;/pre&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;/span&gt;&lt;br&gt;--&nbsp;&lt;br&gt;L.G.&nbsp;Meredith&lt;br&gt;Managing&nbsp;Partner&lt;br&gt;Biosimilarity&nbsp;LLC&lt;br&gt;7329&nbsp;39th&nbsp;Ave&nbsp;SW&lt;div&gt;Seattle,&nbsp;WA&nbsp;98136&lt;br&gt;&lt;br&gt;&lt;a&nbsp;href=&quot;tel:%2B1%20206.650.3740&quot;&nbsp;value=&quot;+12066503740&quot;&nbsp;target=&quot;_blank&quot;&gt;+1&nbsp;206.650.3740&lt;/a&gt;&lt;br&gt;<br>
&lt;br&gt;&lt;a&nbsp;href=&quot;http://biosimilarity.blogspot.com&quot;&nbsp;target=&quot;_blank&quot;&gt;http://biosimilarity.blogspot.com&lt;/a&gt;&lt;/div&gt;<br>
&lt;br&gt;<br>
&lt;/div&gt;<br>

</tt>
