<tt>
Hi&nbsp;Simon,&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;My&nbsp;use&nbsp;case&nbsp;is&nbsp;something&nbsp;like&nbsp;this:&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;I'm&nbsp;working&nbsp;on&nbsp;a&nbsp;distributed&nbsp;system,&nbsp;which&nbsp;consists&nbsp;of&nbsp;externally&nbsp;facing&nbsp;HTTP&nbsp;servers&nbsp;that&nbsp;can&nbsp;kick&nbsp;off&nbsp;events&nbsp;through&nbsp;RabbitMQ,&nbsp;as&nbsp;well&nbsp;as&nbsp;internally&nbsp;facing&nbsp;components&nbsp;which&nbsp;need&nbsp;to&nbsp;react&nbsp;to&nbsp;those&nbsp;external&nbsp;events&nbsp;but&nbsp;also&nbsp;send&nbsp;internal&nbsp;privileged&amp;nbsp;events&nbsp;to&nbsp;each&nbsp;other.&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;I&nbsp;am&nbsp;trying&nbsp;to&nbsp;protect&nbsp;against&nbsp;a&nbsp;situation&nbsp;where&nbsp;a&nbsp;compromised&nbsp;external&nbsp;HTTP&nbsp;server&nbsp;could&nbsp;send&nbsp;privileged&nbsp;events&nbsp;&amp;nbsp;to&nbsp;our&nbsp;internal&nbsp;components.&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;Right&nbsp;now&nbsp;I&nbsp;have&nbsp;created&nbsp;two&nbsp;users&nbsp;and&nbsp;two&nbsp;exchanges,&nbsp;one&nbsp;for&nbsp;internal&nbsp;and&nbsp;one&nbsp;external.&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;The&nbsp;external&nbsp;user&nbsp;can&nbsp;only&nbsp;post&nbsp;to&nbsp;the&nbsp;external&nbsp;exchange.&nbsp;I&nbsp;have&nbsp;an&nbsp;internal&nbsp;component&nbsp;bound&nbsp;to&nbsp;the&nbsp;external&nbsp;exchange&nbsp;which&nbsp;performs&nbsp;validation&nbsp;on&nbsp;those&nbsp;incoming&nbsp;events&nbsp;before&nbsp;forwarding&nbsp;them&nbsp;on&nbsp;to&nbsp;the&nbsp;internal&nbsp;exchange.&nbsp;The&nbsp;rest&nbsp;of&nbsp;the&nbsp;internal&nbsp;components&nbsp;only&nbsp;bind&nbsp;to&nbsp;the&nbsp;internal&nbsp;exchange&nbsp;and&nbsp;know&nbsp;that&nbsp;the&nbsp;events&nbsp;they&nbsp;receive&nbsp;have&nbsp;been&nbsp;validated.&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;I&nbsp;would&nbsp;like&nbsp;another&nbsp;line&nbsp;of&nbsp;defense&nbsp;-&nbsp;if&nbsp;the&nbsp;external&nbsp;machine&nbsp;were&nbsp;compromised&nbsp;and&nbsp;the&nbsp;internal&nbsp;rabbit&nbsp;user's&nbsp;credentials&nbsp;were&nbsp;stolen&nbsp;somehow,&nbsp;there's&nbsp;nothing&nbsp;stopping&nbsp;that&nbsp;external&nbsp;machine&nbsp;from&nbsp;using&nbsp;those&nbsp;internal&nbsp;credentials&nbsp;and&nbsp;compromising&nbsp;the&nbsp;whole&nbsp;system.&nbsp;The&nbsp;firewall&nbsp;allows&nbsp;that&nbsp;machine&nbsp;to&nbsp;talk&nbsp;to&nbsp;RabbitMQ,&nbsp;but&nbsp;no&nbsp;one&nbsp;is&nbsp;enforcing&nbsp;that&nbsp;only&nbsp;the&nbsp;correct,&nbsp;limited&nbsp;user&nbsp;can&nbsp;log&nbsp;in&nbsp;over&nbsp;that&nbsp;channel.&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;The&nbsp;only&nbsp;way&nbsp;I&nbsp;see&nbsp;of&nbsp;doing&nbsp;it&nbsp;right&nbsp;now&nbsp;would&nbsp;be&nbsp;to&nbsp;have&nbsp;completely&nbsp;separate&nbsp;RabbitMQ&nbsp;instances,&nbsp;and&nbsp;have&nbsp;that&nbsp;validation&nbsp;component&nbsp;talk&nbsp;to&nbsp;both&nbsp;instances&nbsp;and&nbsp;forward&nbsp;between&nbsp;them,&nbsp;but&nbsp;this&nbsp;would&nbsp;increase&nbsp;complexity.&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;Let&nbsp;me&nbsp;know&nbsp;if&nbsp;that&nbsp;makes&nbsp;any&nbsp;sense.&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;Thanks&nbsp;in&nbsp;advance!&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;-&nbsp;Oren&lt;/div&gt;
</tt>
