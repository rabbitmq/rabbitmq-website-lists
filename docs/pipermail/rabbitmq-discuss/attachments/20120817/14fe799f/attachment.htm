<tt>
I&amp;#39;m&nbsp;got&nbsp;a&nbsp;scenario&nbsp;where&nbsp;I&nbsp;use&nbsp;a&nbsp;dedicated&nbsp;thread&nbsp;to&nbsp;write&nbsp;a&nbsp;series&nbsp;of&nbsp;messages&nbsp;in&nbsp;a&nbsp;loop.&nbsp;This&nbsp;thread&nbsp;uses&nbsp;BlockingConnection,&nbsp;calls&nbsp;add_on_return_callback&nbsp;for&nbsp;its&nbsp;channel,&nbsp;and&nbsp;when&nbsp;publishing,&nbsp;uses&nbsp;the&nbsp;mandatory=True&nbsp;flag.&lt;br&gt;<br>
&lt;br&gt;I&nbsp;want&nbsp;to&nbsp;know&nbsp;when&nbsp;a&nbsp;message&nbsp;is&nbsp;being&nbsp;returned.&nbsp;However,&nbsp;I&nbsp;can&amp;#39;t&nbsp;figure&nbsp;out&nbsp;what&nbsp;to&nbsp;call&nbsp;within&nbsp;my&nbsp;loop&nbsp;to&nbsp;give&nbsp;Pika&nbsp;the&nbsp;opportunity&nbsp;to&nbsp;see&nbsp;the&nbsp;Basic.Return&nbsp;message&nbsp;and&nbsp;invoke&nbsp;the&nbsp;callback.&lt;br&gt;&lt;br&gt;I&amp;#39;ve&nbsp;verified&nbsp;via&nbsp;WireShark&nbsp;that&nbsp;the&nbsp;Basic.Returns&nbsp;are&nbsp;coming&nbsp;back&nbsp;from&nbsp;the&nbsp;broker.&nbsp;However,&nbsp;I&nbsp;can&amp;#39;t&nbsp;figure&nbsp;out&nbsp;what&nbsp;the&nbsp;moral&nbsp;equivalent&nbsp;of&nbsp;calling&nbsp;ioloop.start()&nbsp;is,&nbsp;so&nbsp;as&nbsp;to&nbsp;give&nbsp;Pika&nbsp;the&nbsp;an&nbsp;opportunity&nbsp;to&nbsp;process&nbsp;the&nbsp;basic.return&nbsp;messages,&nbsp;but&nbsp;without&nbsp;blocking&nbsp;indefinitely.&nbsp;Just&nbsp;for&nbsp;kicks&nbsp;I&nbsp;tried&nbsp;calling&nbsp;Channel.basic_get()&nbsp;within&nbsp;the&nbsp;loop,&nbsp;and&nbsp;(as&nbsp;expected),&nbsp;I&nbsp;didn&amp;#39;t&nbsp;get&nbsp;the&nbsp;returned&nbsp;message&nbsp;callbacks.&lt;br&gt;<br>
&lt;br&gt;Thanks,&lt;br&gt;&lt;br&gt;Matt&lt;br&gt;&lt;br&gt;<br>

</tt>
