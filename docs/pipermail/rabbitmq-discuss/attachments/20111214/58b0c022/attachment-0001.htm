<tt>
&lt;span&nbsp;class=&quot;Apple-style-span&quot;&nbsp;style=&quot;font-family:arial,sans-serif;font-size:13px;background-color:rgb(255,255,255)&quot;&gt;I&amp;#39;ve&nbsp;been&nbsp;working&nbsp;on&nbsp;a&nbsp;c++&nbsp;wrapper&nbsp;around&nbsp;rabbitmq-c&nbsp;that&nbsp;presents&nbsp;a&nbsp;&amp;quot;humane&amp;quot;&nbsp;API&nbsp;to&nbsp;the&nbsp;programmer&nbsp;heavily&nbsp;inspired&nbsp;by&nbsp;the&nbsp;Puka&nbsp;project.&nbsp;(see: &lt;/span&gt;&lt;a&nbsp;href=&quot;https://github.com/alanxz/SimpleAmqpClient&quot;&nbsp;target=&quot;_blank&quot;&nbsp;style=&quot;color:rgb(0,0,204);font-family:arial,sans-serif;font-size:13px;background-color:rgb(255,255,255)&quot;&gt;https://github.com/alanxz/SimpleAmqpClient&lt;/a&gt;&lt;span&nbsp;class=&quot;Apple-style-span&quot;&nbsp;style=&quot;font-family:arial,sans-serif;font-size:13px;background-color:rgb(255,255,255)&quot;&gt;).&lt;/span&gt;&lt;div&nbsp;style=&quot;font-family:arial,sans-serif;font-size:13px;background-color:rgb(255,255,255)&quot;&gt;<br>
&lt;br&gt;&lt;/div&gt;&lt;div&nbsp;style=&quot;font-family:arial,sans-serif;font-size:13px;background-color:rgb(255,255,255)&quot;&gt;In&nbsp;developing&nbsp;this&nbsp;library&nbsp;I&amp;#39;ve&nbsp;run&nbsp;across&nbsp;several&nbsp;limitations&nbsp;of&nbsp;the&nbsp;rabbitmq-c&nbsp;when&nbsp;working&nbsp;with&nbsp;multiple&nbsp;channels,&nbsp;the&nbsp;biggest&nbsp;issue&nbsp;being:&lt;/div&gt;<br>
&lt;div&nbsp;style=&quot;font-family:arial,sans-serif;font-size:13px;background-color:rgb(255,255,255)&quot;&gt;&lt;br&gt;&lt;/div&gt;&lt;div&nbsp;style=&quot;font-family:arial,sans-serif;font-size:13px;background-color:rgb(255,255,255)&quot;&gt;-&nbsp;There&nbsp;is&nbsp;no&nbsp;way&nbsp;to&nbsp;wait&nbsp;for&nbsp;a&nbsp;list&nbsp;of&nbsp;methods&nbsp;on&nbsp;a&nbsp;channel.&nbsp; &lt;/div&gt;<br>
&lt;div&nbsp;style=&quot;font-family:arial,sans-serif;font-size:13px;background-color:rgb(255,255,255)&quot;&gt;There&nbsp;is&nbsp;amqp_simple_wait_method()&nbsp;-&nbsp;however&nbsp;this&nbsp;suffers&nbsp;from&nbsp;some&nbsp;serious&nbsp;drawbacks: &lt;/div&gt;&lt;div&nbsp;style=&quot;font-family:arial,sans-serif;font-size:13px;background-color:rgb(255,255,255)&quot;&gt;<br>
+&nbsp;you&nbsp;can&nbsp;only&nbsp;specify&nbsp;one&nbsp;method&nbsp;to&nbsp;listen&nbsp;for&lt;/div&gt;&lt;div&nbsp;style=&quot;font-family:arial,sans-serif;font-size:13px;background-color:rgb(255,255,255)&quot;&gt;+&nbsp;it&nbsp;calls&nbsp;abort()&nbsp;if&nbsp;a&nbsp;different&nbsp;method,&nbsp;or&nbsp;a&nbsp;method&nbsp;on&nbsp;a&nbsp;different&nbsp;channel&nbsp;is&nbsp;received&lt;/div&gt;<br>
&lt;div&nbsp;style=&quot;font-family:arial,sans-serif;font-size:13px;background-color:rgb(255,255,255)&quot;&gt;A&nbsp;use&nbsp;case&nbsp;for&nbsp;this&nbsp;might&nbsp;be:&nbsp;doing&nbsp;a&nbsp;basic.publish,&nbsp;and&nbsp;you&nbsp;want&nbsp;to&nbsp;want&nbsp;to&nbsp;wait&nbsp;for&nbsp;a&nbsp;basic.ack&nbsp;or&nbsp;a&nbsp;basic.return&nbsp;on&nbsp;a&nbsp;channel&nbsp;with&nbsp;confirms&nbsp;enabled&lt;/div&gt;<br>
&lt;div&nbsp;style=&quot;font-family:arial,sans-serif;font-size:13px;background-color:rgb(255,255,255)&quot;&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;The&nbsp;way&nbsp;I&nbsp;got&nbsp;around&nbsp;this&nbsp;in&nbsp;SimpleAmqpClient&nbsp;was&nbsp;to&nbsp;only&nbsp;use&nbsp;amqp_simple_wait_frame()&nbsp;and&nbsp;maintain&nbsp;queues&nbsp;of&nbsp;amqp_frame_t&nbsp;for&nbsp;each&nbsp;channel&nbsp;that&nbsp;I&nbsp;have&nbsp;open.&nbsp; &lt;/div&gt;<br>
&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;However,&nbsp;this&nbsp;comes&nbsp;with&nbsp;one&nbsp;serious&nbsp;drawback:&nbsp;memory&nbsp;management.&nbsp;Each&nbsp;decoded&nbsp;frame&nbsp;is&nbsp;allocated&nbsp;in&nbsp;a&nbsp;connection-wide&nbsp;amqp_pool_t.&nbsp; Because&nbsp;of&nbsp;this&nbsp;-&nbsp;it&nbsp;is&nbsp;impossible&nbsp;to&nbsp;recycle&nbsp;the&nbsp;pool&nbsp;and&nbsp;release&nbsp;memory&nbsp;unless&nbsp;you&nbsp;have&nbsp;dealt&nbsp;with&nbsp;all&nbsp;of&nbsp;your&nbsp;pending&nbsp;amqp_frame_t&amp;#39;s.&nbsp; This&nbsp;becomes&nbsp;a&nbsp;problem&nbsp;in pathological cases&nbsp;where&nbsp;you&nbsp;have&nbsp;two&nbsp;consumers&nbsp;sending&nbsp;simultaneously,&nbsp;you&nbsp;can&nbsp;get&nbsp;in&nbsp;the&nbsp;situation&nbsp;that&nbsp;even&nbsp;though&nbsp;the&nbsp;client&nbsp;program&nbsp;eventually&nbsp;deals&nbsp;with&nbsp;every&nbsp;consumed&nbsp;message,&nbsp;memory&nbsp;never&nbsp;gets&nbsp;released,&nbsp;because&nbsp;there&nbsp;is&nbsp;always&nbsp;at&nbsp;least&nbsp;one&nbsp;frame&nbsp;queued&nbsp;up.&lt;/div&gt;<br>
&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;The&nbsp;above&nbsp;demonstrates&nbsp;the&nbsp;second&nbsp;biggest&nbsp;issue&nbsp;with&nbsp;the&nbsp;rabbitmq-c&nbsp;API:&nbsp;memory&nbsp;management&nbsp;when&nbsp;dealing&nbsp;with&nbsp;multiple&nbsp;channels.&nbsp; There&nbsp;is&nbsp;no&nbsp;way&nbsp;to&nbsp;separate&nbsp;out&nbsp;memory&nbsp;allocation&nbsp;on,&nbsp;for&nbsp;example,&nbsp;a&nbsp;per-channel&nbsp;basis&nbsp;(with&nbsp;the&nbsp;library&nbsp;client&nbsp;keeping&nbsp;track&nbsp;of&nbsp;the&nbsp;memory&nbsp;pools&nbsp;used&nbsp;for&nbsp;example).&lt;/div&gt;<br>
&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;Before&nbsp;I&nbsp;go&nbsp;on&nbsp;I&amp;#39;d&nbsp;like&nbsp;to&nbsp;mention&nbsp;one&nbsp;feature&nbsp;that&nbsp;I&nbsp;find&nbsp;useful&nbsp;with&nbsp;the&nbsp;current&nbsp;API:&nbsp;it&nbsp;is&nbsp;possible&nbsp;to&nbsp;use&nbsp;something&nbsp;like&nbsp;select()&nbsp;before&nbsp;calling&nbsp;amqp_simple_wait_frame()&nbsp;to&nbsp;setup&nbsp;a&nbsp;timeout&nbsp;while&nbsp;waiting&nbsp;for&nbsp;a&nbsp;consumer,&nbsp;which&nbsp;is&nbsp;useful&nbsp;when&nbsp;developing&nbsp;single-threaded&nbsp;RPC&nbsp;apps. &lt;/div&gt;<br>
&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;So&nbsp;now&nbsp;the&nbsp;interesting&nbsp;part:&nbsp;how&nbsp;could&nbsp;the&nbsp;API&nbsp;be&nbsp;improved? &lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;Some&nbsp;thoughts&nbsp;I&amp;#39;ve&nbsp;had&nbsp;dealing&nbsp;with&nbsp;the&nbsp;memory&nbsp;management:&lt;/div&gt;&lt;div&gt;1.&nbsp;Create&nbsp;a&nbsp;amqp_simple_wait_frame()&nbsp;variant&nbsp;that&nbsp;as&nbsp;one&nbsp;of&nbsp;the&nbsp;parameters&nbsp;provides&nbsp;a&nbsp;callback&nbsp;to&nbsp;allocate&nbsp;memory,&nbsp;either&nbsp;something&nbsp;like&nbsp;a&nbsp;malloc()&nbsp;call,&nbsp;which&nbsp;the&nbsp;client&nbsp;would&nbsp;then&nbsp;be&nbsp;responsible&nbsp;for&nbsp;freeing,&nbsp;or&nbsp;perhaps&nbsp;something&nbsp;like&nbsp;get_amqp_pool(amqp_frame_t)&nbsp;which&nbsp;allows&nbsp;the&nbsp;client&nbsp;to&nbsp;return&nbsp;a&nbsp;memory&nbsp;pool&nbsp;which&nbsp;rabbitmq-c&nbsp;would&nbsp;use&nbsp;to&nbsp;allocate&nbsp;memory&nbsp;for&nbsp;that&nbsp;frame.&nbsp; The&nbsp;amqp_frame_t&nbsp;would&nbsp;have&nbsp;to&nbsp;have&nbsp;some&nbsp;minimal&nbsp;amount&nbsp;of&nbsp;information&nbsp;filled&nbsp;in&nbsp;-&nbsp;such&nbsp;as&nbsp;frame&nbsp;type&nbsp;and&nbsp;channel&nbsp;to&nbsp;be&nbsp;useful.&lt;/div&gt;<br>
&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;2.&nbsp;amqp_channel_t&nbsp;becomes&nbsp;a&nbsp;struct&nbsp;containing&nbsp;both&nbsp;the&nbsp;the&nbsp;channel_id&nbsp;and&nbsp;a&nbsp;amqp_pool_t.&nbsp; The&nbsp;amqp_pool&nbsp;would&nbsp;be&nbsp;used&nbsp;by&nbsp;the&nbsp;library&nbsp;to&nbsp;allocate&nbsp;frames&nbsp;received&nbsp;on&nbsp;that&nbsp;channel.&nbsp; The&nbsp;client&nbsp;would&nbsp;then&nbsp;be&nbsp;responsible&nbsp;for&nbsp;calling&nbsp;amqp_pool_recycle&nbsp;at&nbsp;an&nbsp;appropriate&nbsp;point.&lt;/div&gt;<br>
&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;Some&nbsp;thoughts&nbsp;on&nbsp;improving&nbsp;the&nbsp;API&nbsp;to&nbsp;deal&nbsp;with&nbsp;multiple&nbsp;channels:&lt;/div&gt;&lt;div&gt;1.&nbsp;Add&nbsp;the&nbsp;following&nbsp;to&nbsp;the&nbsp;API:&lt;/div&gt;&lt;div&gt;amqp_simple_wait_frame_on_channel&nbsp;-&nbsp;wait&nbsp;for&nbsp;a&nbsp;frame&nbsp;on&nbsp;a&nbsp;specified&nbsp;channel&lt;/div&gt;<br>
&lt;div&gt;amqp_simple_wait_methods&nbsp;-&nbsp;wait&nbsp;for&nbsp;multiple&nbsp;methods&nbsp;on&nbsp;a&nbsp;specified&nbsp;channel.&nbsp;Don&amp;#39;t&nbsp;abort()&nbsp;if&nbsp;the&nbsp;wrong&nbsp;method,&nbsp;or&nbsp;channel&nbsp;is&nbsp;received,&nbsp;instead&nbsp;queue&nbsp;up&nbsp;the&nbsp;frame&nbsp;as&nbsp;is&nbsp;done&nbsp;in&nbsp;amqp_simple_rpc&lt;/div&gt;&lt;div&gt;amqp_frames_enqueued_for_channel&nbsp;to&nbsp;add&nbsp;feature&nbsp;parity&nbsp;with&nbsp;amqp_frames_enqueued&lt;/div&gt;<br>
&lt;div&gt;I&nbsp;started&nbsp;to&nbsp;code&nbsp;this&nbsp;up&nbsp;at&nbsp;one&nbsp;point&nbsp;but&nbsp;abandoned&nbsp;it&nbsp;as&nbsp;it&nbsp;didn&amp;#39;t&nbsp;support&nbsp;the&nbsp;interesting&nbsp;property&nbsp;of&nbsp;being&nbsp;able&nbsp;to&nbsp;use&nbsp;select()&nbsp;to&nbsp;specify&nbsp;a&nbsp;timeout&nbsp;when&nbsp;calling&nbsp;amqp_simple_wait_frame_on_channel.&nbsp; At&nbsp;least&nbsp;not&nbsp;without&nbsp;adding&nbsp;timeout&nbsp;to&nbsp;the&nbsp;rabbitmq-c&nbsp;api,&nbsp;which&nbsp;didn&amp;#39;t&nbsp;fit&nbsp;with&nbsp;how&nbsp;the&nbsp;current&nbsp;rabbitmq-c&nbsp;api.&nbsp;Here&amp;#39;s&nbsp;the&nbsp;implementation&nbsp;I&nbsp;came&nbsp;up&nbsp;with&nbsp;before&nbsp;I&nbsp;abandoned&nbsp;it.&nbsp;I&nbsp;can&amp;#39;t&nbsp;guarantee&nbsp;is&nbsp;completely&nbsp;free&nbsp;of&nbsp;bugs. &lt;a&nbsp;href=&quot;https://github.com/alanxz/rabbitmq-c/commits/simple_wait_frame/&quot;&nbsp;target=&quot;_blank&quot;&nbsp;style=&quot;color:rgb(0,0,204)&quot;&gt;https://github.com/alanxz/rabbitmq-c/commits/simple_wait_frame/&lt;/a&gt;&lt;/div&gt;<br>
&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;2.&nbsp;Continue&nbsp;to&nbsp;duck&nbsp;the&nbsp;issue&nbsp;and&nbsp;allow&nbsp;clients&nbsp;to&nbsp;write&nbsp;their&nbsp;own&nbsp;code&nbsp;to&nbsp;deal&nbsp;with&nbsp;multiple&nbsp;channels&nbsp;(fixing&nbsp;the&nbsp;memory&nbsp;management&nbsp;issue&nbsp;using&nbsp;one&nbsp;of&nbsp;the&nbsp;above&nbsp;techniques)&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;3.&nbsp;Something&nbsp;I&nbsp;haven&amp;#39;t&nbsp;thought&nbsp;of&nbsp;yet.&lt;/div&gt;<br>
&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;So&nbsp;anyone&nbsp;have&nbsp;any&nbsp;thoughts&nbsp;on&nbsp;all&nbsp;of&nbsp;this?&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;font&nbsp;color=&quot;#888888&quot;&gt;&lt;div&gt;-Alan&lt;/div&gt;&lt;/font&gt;&lt;/div&gt;<br>

</tt>
