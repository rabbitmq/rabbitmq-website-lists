<tt>
&lt;span&nbsp;class=&quot;Apple-style-span&quot;&nbsp;style=&quot;font-family:&nbsp;arial,&nbsp;sans-serif;&nbsp;font-size:&nbsp;13px;&nbsp;border-collapse:&nbsp;collapse;&nbsp;&quot;&gt;Hi,&lt;br&gt;&lt;br&gt;I&amp;#39;m&nbsp;building&nbsp;a&nbsp;system&nbsp;which&nbsp;takes&nbsp;incoming&nbsp;messages,&nbsp;filters&nbsp;them&nbsp;and&nbsp;stores&lt;br&gt;them&nbsp;to&nbsp;DB.&nbsp;I&nbsp;have&nbsp;each&nbsp;of&nbsp;these&nbsp;three&nbsp;bits&nbsp;running&nbsp;as&nbsp;separate&nbsp;ruby&lt;br&gt;<br>
processes,&nbsp;if&nbsp;the&nbsp;filter&nbsp;or&nbsp;database&nbsp;saving&nbsp;processes&nbsp;die&nbsp;then&nbsp;when&nbsp;they&lt;br&gt;come&nbsp;back,&nbsp;new&nbsp;messages&nbsp;are&nbsp;waiting&nbsp;in&nbsp;the&nbsp;queue.&lt;br&gt;&lt;br&gt;I&amp;#39;ve&nbsp;implemented&nbsp;this&nbsp;using&nbsp;two&nbsp;separate&nbsp;queues:&nbsp;an&nbsp;incoming&nbsp;queue&nbsp;and&lt;br&gt;a&nbsp;filtered&nbsp;queue.&nbsp;The&nbsp;filtering&nbsp;process&nbsp;just&nbsp;takes&nbsp;the&nbsp;incoming&nbsp;queue,&nbsp;does&lt;br&gt;<br>
it&amp;#39;s&nbsp;business&nbsp;and&nbsp;inserts&nbsp;it&nbsp;into&nbsp;the&nbsp;filtered&nbsp;queue.&nbsp;The&nbsp;DB&nbsp;storing&nbsp;process&lt;br&gt;takes&nbsp;the&nbsp;filtered&nbsp;queue&nbsp;and&nbsp;stores&nbsp;them&nbsp;to&nbsp;DB.&lt;br&gt;&lt;br&gt;I&amp;#39;m&nbsp;very&nbsp;new&nbsp;to&nbsp;RabbitMQ,&nbsp;is&nbsp;this&nbsp;kind&nbsp;of&nbsp;flow&nbsp;correct,&nbsp;creating&nbsp;two&lt;br&gt;different&nbsp;queues?&nbsp;or&nbsp;is&nbsp;there&nbsp;a&nbsp;better&nbsp;way&nbsp;to&nbsp;do&nbsp;it&nbsp;using&nbsp;Exchanges&nbsp;or&nbsp;some&lt;br&gt;<br>
other&nbsp;part&nbsp;of&nbsp;RabbitMQ?&lt;/span&gt;<br>

</tt>
