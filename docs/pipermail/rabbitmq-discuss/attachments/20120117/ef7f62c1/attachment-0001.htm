<tt>
In&nbsp;order&nbsp;to&nbsp;do&nbsp;this&nbsp;in&nbsp;our&nbsp;setup,&nbsp;we&nbsp;use&nbsp;&lt;a&nbsp;href=&quot;http://haproxy.1wt.eu/&quot;&gt;HAProxy&lt;/a&gt;&amp;nbsp;in&nbsp;front&nbsp;of&nbsp;three&nbsp;virtual&nbsp;machines&nbsp;(our&nbsp;systems&nbsp;are&nbsp;all&nbsp;deployed&nbsp;on&nbsp;RackSpace&nbsp;Cloud&nbsp;VMs).&nbsp;&amp;nbsp;All&nbsp;of&nbsp;our&nbsp;software&nbsp;only&nbsp;knows&nbsp;about&nbsp;the&nbsp;Virtual&nbsp;IP&nbsp;that&nbsp;points&nbsp;at&nbsp;our&nbsp;HAProxy&nbsp;installation;&nbsp;HAProxy&nbsp;knows&nbsp;about&nbsp;the&nbsp;three&nbsp;VMs,&nbsp;each&nbsp;of&nbsp;which&nbsp;is&nbsp;running&nbsp;one&nbsp;node&nbsp;of&nbsp;a&nbsp;RabbitMQ&nbsp;cluster.&nbsp;&amp;nbsp;All&nbsp;of&nbsp;our&nbsp;Queues&nbsp;are&nbsp;created&nbsp;as&nbsp;HA&nbsp;queues&nbsp;so&nbsp;that&nbsp;messages&nbsp;are&nbsp;replicated&nbsp;across&nbsp;all&nbsp;nodes&nbsp;in&nbsp;the&nbsp;event&nbsp;of&nbsp;a&nbsp;single&nbsp;node&nbsp;failure.&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;This&nbsp;method&nbsp;allows&nbsp;us&nbsp;to&nbsp;simply&nbsp;add&nbsp;another&nbsp;VM&nbsp;and&nbsp;bring&nbsp;it&nbsp;into&nbsp;the&nbsp;cluster&nbsp;if&nbsp;we&nbsp;want&nbsp;to&nbsp;expand&nbsp;capacity,&nbsp;and&nbsp;no&nbsp;updates&nbsp;are&nbsp;required&nbsp;to&nbsp;our&nbsp;code&nbsp;base&nbsp;as&nbsp;it&nbsp;continues&nbsp;to&nbsp;interact&nbsp;with&nbsp;HAProxy&nbsp;for&nbsp;connections.&nbsp;&amp;nbsp;The&nbsp;trick&nbsp;was&nbsp;to&nbsp;make&nbsp;sure&nbsp;we&nbsp;set&nbsp;everything&nbsp;up&nbsp;properly&nbsp;to&nbsp;automatically&nbsp;reconnect&nbsp;in&nbsp;our&nbsp;code&nbsp;in&nbsp;the&nbsp;event&nbsp;of&nbsp;a&nbsp;disconnection,&nbsp;as&nbsp;HAProxy&nbsp;times&nbsp;out&nbsp;connections&nbsp;at&nbsp;an&nbsp;interval&nbsp;determined&nbsp;by&nbsp;your&nbsp;settings.&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;Having&nbsp;said&nbsp;all&nbsp;that,&nbsp;we&nbsp;have&nbsp;yet&nbsp;to&nbsp;move&nbsp;this&nbsp;into&nbsp;production,&nbsp;so&nbsp;I&nbsp;can't&nbsp;speak&nbsp;to&nbsp;whether&nbsp;or&nbsp;not&nbsp;it&nbsp;will&nbsp;behave&nbsp;as&nbsp;anticipated&nbsp;in&nbsp;the&nbsp;wild.&nbsp;&amp;nbsp;However,&nbsp;initial&nbsp;testing&nbsp;is&nbsp;very&nbsp;promising,&nbsp;and&nbsp;when&nbsp;we&nbsp;force&nbsp;a&nbsp;node&nbsp;to&nbsp;fail,&nbsp;HAProxy&nbsp;automatically&nbsp;detects&nbsp;that&nbsp;it&nbsp;has&nbsp;gone&nbsp;down,&nbsp;and&nbsp;just&nbsp;stops&nbsp;handing&nbsp;out&nbsp;connections&nbsp;to&nbsp;that&nbsp;node.&nbsp;&amp;nbsp;Just&nbsp;in&nbsp;case&nbsp;anyone&nbsp;complains&nbsp;about&nbsp;the&nbsp;single&nbsp;point&nbsp;of&nbsp;failure&nbsp;that&nbsp;is&nbsp;HAProxy,&nbsp;that&nbsp;has&nbsp;also&nbsp;been&nbsp;setup&nbsp;to&nbsp;failover&nbsp;on&nbsp;a&nbsp;Virtual&nbsp;IP;&nbsp;should&nbsp;our&nbsp;main&nbsp;HAProxy&nbsp;machine&nbsp;ever&nbsp;go&nbsp;down,&nbsp;the&nbsp;other&nbsp;HAProxy&nbsp;instance&nbsp;will&nbsp;take&nbsp;over&nbsp;and&nbsp;continue&nbsp;handing&nbsp;out&nbsp;node&nbsp;connections.&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;This&nbsp;has&nbsp;been&nbsp;an&nbsp;interesting&nbsp;experiment,&nbsp;feel&nbsp;free&nbsp;to&nbsp;bug&nbsp;me&nbsp;if&nbsp;you&nbsp;want&nbsp;more&nbsp;details&nbsp;on&nbsp;our&nbsp;setup.&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;-&nbsp;jrob&lt;/div&gt;
</tt>
