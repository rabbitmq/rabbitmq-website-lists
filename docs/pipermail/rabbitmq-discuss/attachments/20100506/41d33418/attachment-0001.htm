<tt>
&lt;!DOCTYPE&nbsp;HTML&nbsp;PUBLIC&nbsp;&quot;-//W3C//DTD&nbsp;HTML&nbsp;4.01&nbsp;Transitional//EN&quot;&gt;<br>
&lt;html&gt;<br>
&lt;head&gt;<br>
&nbsp;&nbsp;&lt;meta&nbsp;content=&quot;text/html;&nbsp;charset=ISO-8859-1&quot;<br>
&nbsp;http-equiv=&quot;Content-Type&quot;&gt;<br>
&lt;/head&gt;<br>
&lt;body&nbsp;bgcolor=&quot;#ffffff&quot;&nbsp;text=&quot;#000000&quot;&gt;<br>
&lt;font&nbsp;face=&quot;Calibri&quot;&gt;Something&nbsp;smells&nbsp;rotten&nbsp;in&nbsp;Denmark.&amp;nbsp;&nbsp;I&nbsp;can't<br>
comment&nbsp;on&nbsp;your&nbsp;particular<br>
implementation&nbsp;but&nbsp;what&nbsp;I&nbsp;can&nbsp;tell&nbsp;you&nbsp;is&nbsp;that&nbsp;we're&nbsp;pumping&nbsp;a&nbsp;lot&nbsp;of<br>
data&nbsp;through&nbsp;RabbitMQ&nbsp;(avg&nbsp;320KiB/s&nbsp;24x7),&nbsp;that&nbsp;we're&nbsp;far&nbsp;exceeding<br>
your<br>
volumes&nbsp;(as&nbsp;I&nbsp;can&nbsp;decipher&nbsp;from&nbsp;your&nbsp;post),&nbsp;and&nbsp;that&nbsp;we&nbsp;routinely&nbsp;run<br>
for&nbsp;days/weeks&nbsp;on&nbsp;end&nbsp;without&nbsp;any&nbsp;issues.&amp;nbsp;&amp;nbsp;&nbsp;&lt;br&gt;<br>
&lt;br&gt;<br>
Given&nbsp;that&nbsp;your&nbsp;store&nbsp;is&nbsp;Cassandra,&nbsp;you&nbsp;probably&nbsp;shouldn't&nbsp;even&nbsp;be<br>
seeing&nbsp;a&nbsp;meaningful&nbsp;CPU&nbsp;load&nbsp;at&nbsp;those&nbsp;volumes&nbsp;(for&nbsp;the&nbsp;database).&lt;br&gt;<br>
&lt;br&gt;<br>
And&nbsp;I&nbsp;don't&nbsp;understand&nbsp;your&nbsp;'hold&nbsp;what&nbsp;fits&nbsp;in&nbsp;memory'&nbsp;comment&nbsp;at&nbsp;all.&lt;br&gt;<br>
&lt;br&gt;<br>
Would&nbsp;someone&nbsp;who&nbsp;knows&nbsp;something&nbsp;about&nbsp;the&nbsp;python&nbsp;API&nbsp;please&nbsp;steer<br>
this&nbsp;lost&nbsp;soul&nbsp;in&nbsp;the&nbsp;right&nbsp;direction?&lt;/font&gt;&lt;br&gt;<br>
&lt;br&gt;<br>
On&nbsp;5/6/2010&nbsp;12:49&nbsp;PM,&nbsp;Wayne&nbsp;Van&nbsp;Den&nbsp;Handel&nbsp;wrote:<br>
&lt;blockquote&nbsp;cite=&quot;mid:4BE3013E.9080308@dataraker.com&quot;&nbsp;type=&quot;cite&quot;&gt;<br>
&nbsp;&nbsp;&lt;pre&nbsp;wrap=&quot;&quot;&gt;I&nbsp;am&nbsp;evaluating&nbsp;RabbitMQ&nbsp;for&nbsp;purposes&nbsp;of&nbsp;parallelization&nbsp;on&nbsp;top&nbsp;of&nbsp;a&nbsp;<br>
Cassandra&nbsp;data&nbsp;store.&nbsp;I&nbsp;have&nbsp;created&nbsp;a&nbsp;simple&nbsp;test&nbsp;scenario&nbsp;of&nbsp;a&nbsp;set&nbsp;of&nbsp;<br>
Queues&nbsp;that&nbsp;are&nbsp;given&nbsp;data&nbsp;to&nbsp;be&nbsp;loaded&nbsp;from&nbsp;a&nbsp;single&nbsp;Python&nbsp;publisher&nbsp;<br>
and&nbsp;3-4&nbsp;Python&nbsp;Consumer&nbsp;applications&nbsp;take&nbsp;the&nbsp;data&nbsp;from&nbsp;the&nbsp;Queues&nbsp;and&nbsp;<br>
load&nbsp;into&nbsp;Cassandra.&nbsp;The&nbsp;entire&nbsp;scenario&nbsp;was&nbsp;easily&nbsp;set&nbsp;up&nbsp;and&nbsp;runs&nbsp;<br>
great&nbsp;for&nbsp;about&nbsp;10&nbsp;minutes&nbsp;when&nbsp;RabbitMQ&nbsp;proceeds&nbsp;to&nbsp;use&nbsp;up&nbsp;all&nbsp;<br>
available&nbsp;memory&nbsp;and&nbsp;crashes.&nbsp;&nbsp;I&nbsp;then&nbsp;discovered&nbsp;the&nbsp;passive&nbsp;mode&nbsp;to&nbsp;<br>
create&nbsp;a&nbsp;queue&nbsp;(and&nbsp;find&nbsp;out&nbsp;how&nbsp;many&nbsp;messages&nbsp;it&nbsp;has)&nbsp;and&nbsp;now&nbsp;only&nbsp;add&nbsp;<br>
more&nbsp;work&nbsp;to&nbsp;the&nbsp;queue&nbsp;when&nbsp;there&nbsp;is&nbsp;less&nbsp;than&nbsp;1000&nbsp;messages&nbsp;in&nbsp;the&nbsp;<br>
queue&nbsp;(which&nbsp;easily&nbsp;fit&nbsp;into&nbsp;memory).&nbsp;I&nbsp;start&nbsp;up&nbsp;my&nbsp;test&nbsp;again&nbsp;and&nbsp;still&nbsp;<br>
blow&nbsp;RabbitMQ&nbsp;up&nbsp;in&nbsp;10&nbsp;minutes.&nbsp;I&nbsp;am&nbsp;watching&nbsp;with&nbsp;the&nbsp;admin&nbsp;console&nbsp;the&nbsp;<br>
entire&nbsp;time&nbsp;and&nbsp;there&nbsp;is&nbsp;never&nbsp;more&nbsp;than&nbsp;a&nbsp;total&nbsp;1000&nbsp;messages&nbsp;in&nbsp;all&nbsp;<br>
queues&nbsp;at&nbsp;any&nbsp;given&nbsp;time.&nbsp;Watching&nbsp;top&nbsp;I&nbsp;see&nbsp;RabbitMQ&nbsp;take&nbsp;up&nbsp;more&nbsp;and&nbsp;<br>
more&nbsp;memory&nbsp;over&nbsp;time.&nbsp;It&nbsp;seems&nbsp;that&nbsp;it&nbsp;can&nbsp;only&nbsp;process&nbsp;30-40k&nbsp;messages&nbsp;<br>
in&nbsp;total/aggregate&nbsp;before&nbsp;it&nbsp;crashes&nbsp;(even&nbsp;though&nbsp;there&nbsp;is&nbsp;never&nbsp;more&nbsp;<br>
than&nbsp;1000&nbsp;messages&nbsp;in&nbsp;all&nbsp;queues&nbsp;at&nbsp;one&nbsp;time).<br>
<br>
Am&nbsp;I&nbsp;missing&nbsp;something&nbsp;here?&nbsp;The&nbsp;product&nbsp;seems&nbsp;very&nbsp;easy&nbsp;to&nbsp;use&nbsp;and&nbsp;<br>
works&nbsp;great&nbsp;but&nbsp;it&nbsp;totally&nbsp;un-scalable.&nbsp;Is&nbsp;RabbitMQ&nbsp;not&nbsp;meant&nbsp;for&nbsp;high&nbsp;<br>
data&nbsp;volumes/traffic?&nbsp;What&nbsp;would&nbsp;better&nbsp;serve&nbsp;this&nbsp;purpose?&nbsp;We&nbsp;need&nbsp;<br>
something&nbsp;on&nbsp;top&nbsp;of&nbsp;Cassandra&nbsp;to&nbsp;provide&nbsp;high&nbsp;volume&nbsp;parallelization.&nbsp;I&nbsp;<br>
understand&nbsp;that&nbsp;we&nbsp;can&nbsp;only&nbsp;hold&nbsp;what&nbsp;fits&nbsp;in&nbsp;memory&nbsp;right&nbsp;now&nbsp;(when&nbsp;<br>
will&nbsp;that&nbsp;be&nbsp;fixed?),&nbsp;but&nbsp;even&nbsp;that&nbsp;is&nbsp;not&nbsp;true&nbsp;as&nbsp;memory&nbsp;is&nbsp;never&nbsp;given&nbsp;<br>
back.<br>
<br>
Environment:<br>
CentOS&nbsp;5.4&nbsp;64&nbsp;Bit<br>
RabbitMQ&nbsp;v1.7.2-1.el5&nbsp;installed&nbsp;from&nbsp;yum<br>
py-amqplib<br>
<br>
Create&nbsp;Queue<br>
chan.queue_declare(queue=&quot;dr_load.1&quot;,&nbsp;durable=True,&nbsp;exclusive=False,&nbsp;<br>
auto_delete=False)<br>
chan.exchange_declare(exchange=&quot;dr_load&quot;,&nbsp;type=&quot;direct&quot;,&nbsp;durable=True,&nbsp;<br>
auto_delete=False)<br>
chan.queue_bind(queue=&quot;dr_load.1&quot;,&nbsp;exchange=&quot;dr_load&quot;,&nbsp;<br>
routing_key=&quot;Instance.1&quot;)<br>
<br>
Publish&nbsp;Data<br>
chan.basic_publish(msg,exchange=&quot;dr_load&quot;,routing_key=&quot;Instance.1&quot;,mandatory=True)<br>
<br>
Consume&nbsp;Data<br>
msg&nbsp;=&nbsp;chan.basic_get(&quot;Instance.1&quot;)<br>
chan.basic_ack(msg.delivery_tag)<br>
<br>
Thanks!<br>
<br>
&nbsp;&nbsp;&lt;/pre&gt;<br>
&lt;/blockquote&gt;<br>
&lt;/body&gt;<br>
&lt;/html&gt;<br>

</tt>
