<tt>
Tony&nbsp;-&lt;br&gt;&lt;br&gt;Thanks,&nbsp;that&nbsp;really&nbsp;helps.&lt;br&gt;&lt;br&gt;-&nbsp;Jim&lt;br&gt;&lt;br&gt;Jim&nbsp;Irrer&nbsp; &nbsp; &nbsp;&lt;a&nbsp;href=&quot;mailto:irrer@umich.edu&quot;&gt;irrer@umich.edu&lt;/a&gt;&nbsp; &nbsp; &nbsp; &nbsp;(734)&nbsp;647-4409&lt;br&gt;University&nbsp;of&nbsp;Michigan&nbsp;Hospital&nbsp;Radiation&nbsp;Oncology&lt;br&gt;519&nbsp;W.&nbsp;William&nbsp;St.&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;Ann&nbsp;Arbor,&nbsp;MI&nbsp;48103&lt;br&gt;<br>
<br>
&lt;br&gt;&lt;br&gt;&lt;div&nbsp;class=&quot;gmail_quote&quot;&gt;----------&nbsp;Forwarded&nbsp;message&nbsp;----------&lt;br&gt;From:&nbsp;&lt;b&nbsp;class=&quot;gmail_sendername&quot;&gt;Tony&nbsp;Garnock-Jones&lt;/b&gt;&nbsp;&lt;span&nbsp;dir=&quot;ltr&quot;&gt;&amp;lt;&lt;a&nbsp;href=&quot;mailto:tonyg@lshift.net&quot;&gt;tonyg@lshift.net&lt;/a&gt;&amp;gt;&lt;/span&gt;&lt;br&gt;<br>
Date:&nbsp;Thu,&nbsp;Jul&nbsp;1,&nbsp;2010&nbsp;at&nbsp;8:39&nbsp;PM&lt;br&gt;Subject:&nbsp;Re:&nbsp;C&nbsp;client&nbsp;and&nbsp;thread&nbsp;safety&lt;br&gt;To:&nbsp;Jim&nbsp;Irrer&nbsp;&amp;lt;&lt;a&nbsp;href=&quot;mailto:irrer@umich.edu&quot;&gt;irrer@umich.edu&lt;/a&gt;&amp;gt;&lt;br&gt;Cc:&nbsp;rabbitmq-discuss&nbsp;&amp;lt;&lt;a&nbsp;href=&quot;mailto:rabbitmq-discuss@lists.rabbitmq.com&quot;&gt;rabbitmq-discuss@lists.rabbitmq.com&lt;/a&gt;&amp;gt;&lt;br&gt;<br>
&lt;br&gt;&lt;br&gt;Hi&nbsp;Jim,&lt;br&gt;<br>
&lt;div&nbsp;class=&quot;im&quot;&gt;&lt;br&gt;<br>
Jim&nbsp;Irrer&nbsp;wrote:&lt;br&gt;<br>
&amp;gt;&nbsp;I&amp;#39;m&nbsp;working&nbsp;with&nbsp;the&nbsp;RabbitMQ&nbsp;C&nbsp;client,&nbsp;and&nbsp;had&nbsp;a&nbsp;few&nbsp;questions&lt;br&gt;<br>
&amp;gt;&nbsp;about&nbsp;thread&nbsp;safety.&lt;br&gt;<br>
&lt;br&gt;<br>
&lt;/div&gt;In&nbsp;general,&nbsp;there&nbsp;is&nbsp;no&nbsp;thread&nbsp;awareness&nbsp;built&nbsp;in&nbsp;to&nbsp;librabbitmq&nbsp;at&nbsp;all.&nbsp;It&nbsp;is&lt;br&gt;<br>
currently&nbsp;the&nbsp;responsibility&nbsp;of&nbsp;applications&nbsp;using&nbsp;the&nbsp;library&nbsp;to&nbsp;ensure&nbsp;that&lt;br&gt;<br>
multiple&nbsp;threads&nbsp;don&amp;#39;t&nbsp;screw&nbsp;up&nbsp;the&nbsp;library&amp;#39;s&nbsp;state.&lt;br&gt;<br>
&lt;br&gt;<br>
That&nbsp;said,&nbsp;there&nbsp;is&nbsp;no&nbsp;longer&nbsp;any&nbsp;global&nbsp;state&nbsp;at&nbsp;all&nbsp;in&nbsp;the&nbsp;library,&nbsp;so&nbsp;if&nbsp;you&lt;br&gt;<br>
stick&nbsp;to&nbsp;one&nbsp;connection&nbsp;(and&nbsp;thus&nbsp;one&nbsp;socket)&nbsp;per&nbsp;thread,&nbsp;you&nbsp;should&nbsp;be&nbsp;fine.&lt;br&gt;<br>
&lt;div&nbsp;class=&quot;im&quot;&gt;&lt;br&gt;<br>
&amp;gt;&nbsp;Must&nbsp;a&nbsp;socket&nbsp;returned&nbsp;by&nbsp;amqp_open_socket&nbsp;be&nbsp;exclusively&lt;br&gt;<br>
&amp;gt;&nbsp;associated&nbsp;with&nbsp;one&nbsp;connection,&nbsp;or&nbsp;can&nbsp;it&nbsp;be&nbsp;used&nbsp;for&nbsp;multiple&lt;br&gt;<br>
&amp;gt;&nbsp;connections?&lt;br&gt;<br>
&lt;br&gt;<br>
&lt;/div&gt;One&nbsp;connection.&nbsp;Each&nbsp;AMQP&nbsp;connection&nbsp;needs&nbsp;exactly&nbsp;one&nbsp;socket&nbsp;to&nbsp;communicate&nbsp;over.&lt;br&gt;<br>
&lt;div&nbsp;class=&quot;im&quot;&gt;&lt;br&gt;<br>
&amp;gt;&nbsp;Must&nbsp;a&nbsp;socket&nbsp;returned&nbsp;by&nbsp;amqp_open_socket&nbsp;be&nbsp;exclusively&lt;br&gt;<br>
&amp;gt;&nbsp;used&nbsp;by&nbsp;one&nbsp;thread,&nbsp;or&nbsp;can&nbsp;it&nbsp;be&nbsp;used&nbsp;by&nbsp;multiple&nbsp;threads?&lt;br&gt;<br>
&lt;br&gt;<br>
&lt;/div&gt;The&nbsp;connection&nbsp;associated&nbsp;with&nbsp;the&nbsp;socket&nbsp;must&nbsp;be&nbsp;used&nbsp;by&nbsp;one&nbsp;thread&nbsp;*at&nbsp;a&lt;br&gt;<br>
time*.&nbsp;The&nbsp;locking&nbsp;can&nbsp;get&nbsp;quite&nbsp;complicated&nbsp;when&nbsp;you&nbsp;take&nbsp;into&nbsp;account&nbsp;the&nbsp;way&lt;br&gt;<br>
librabbitmq&nbsp;currently&nbsp;deals&nbsp;with&nbsp;incoming&nbsp;events,&nbsp;so&nbsp;sticking&nbsp;with&nbsp;one&lt;br&gt;<br>
connection&nbsp;for&nbsp;each&nbsp;thread&nbsp;makes&nbsp;life&nbsp;much&nbsp;easier.&lt;br&gt;<br>
&lt;div&nbsp;class=&quot;im&quot;&gt;&lt;br&gt;<br>
&amp;gt;&nbsp;Must&nbsp;a&nbsp;connection&nbsp;returned&nbsp;by&nbsp;amqp_new_connection&nbsp;be&nbsp;exclusively&lt;br&gt;<br>
&amp;gt;&nbsp;used&nbsp;to&nbsp;read&nbsp;from&nbsp;or&nbsp;write&nbsp;to&nbsp;one&nbsp;channel/queue,&nbsp;or&nbsp;is&nbsp;using&nbsp;multiple&nbsp;ok,&lt;br&gt;<br>
&amp;gt;&nbsp;even&nbsp;in&nbsp;a&nbsp;multi-threaded&nbsp;environment.&lt;br&gt;<br>
&lt;br&gt;<br>
&lt;/div&gt;Multiple&nbsp;are&nbsp;OK,&nbsp;but&nbsp;again,&nbsp;each&nbsp;connection&nbsp;is&nbsp;best&nbsp;kept&nbsp;to&nbsp;a&nbsp;single&nbsp;thread.&lt;br&gt;<br>
Think&nbsp;of&nbsp;multiple&nbsp;channels&nbsp;as&nbsp;separate&nbsp;*transaction*&nbsp;and&nbsp;*error&nbsp;reporting*&lt;br&gt;<br>
contexts;&nbsp;they&nbsp;don&amp;#39;t&nbsp;buy&nbsp;much&nbsp;else&nbsp;in&nbsp;current&nbsp;versions&nbsp;of&nbsp;the&nbsp;AMQP&nbsp;protocol&nbsp;:-)&lt;br&gt;<br>
&lt;div&nbsp;class=&quot;im&quot;&gt;&lt;br&gt;<br>
&amp;gt;&nbsp;If&nbsp;any&nbsp;of&nbsp;these&nbsp;can&nbsp;be&nbsp;used&nbsp;by&nbsp;multiple&nbsp;threads,&nbsp;is&nbsp;there&nbsp;a&nbsp;performance&lt;br&gt;<br>
&amp;gt;&nbsp;advantage&nbsp;in&nbsp;reusing&nbsp;the&nbsp;same&nbsp;socket&nbsp;or&nbsp;connection,&nbsp;or&nbsp;is&nbsp;using&nbsp;multiple&lt;br&gt;<br>
&amp;gt;&nbsp;ones&nbsp;better?&lt;br&gt;<br>
&lt;br&gt;<br>
&lt;/div&gt;Using&nbsp;a&nbsp;single&nbsp;connection&nbsp;with&nbsp;multiple&nbsp;channels&nbsp;means&nbsp;that&nbsp;TCPs&lt;br&gt;<br>
congestion-avoidance&nbsp;counts&nbsp;all&nbsp;AMQP&nbsp;traffic&nbsp;as&nbsp;a&nbsp;single&nbsp;stream,&nbsp;whereas&nbsp;using&lt;br&gt;<br>
multiple&nbsp;connections&nbsp;with&nbsp;a&nbsp;single&nbsp;channel&nbsp;each&nbsp;means&nbsp;that&nbsp;TCP&nbsp;will&nbsp;count&nbsp;each&lt;br&gt;<br>
stream&nbsp;separately.&nbsp;Which&nbsp;is&nbsp;more&nbsp;appropriate&nbsp;to&nbsp;your&nbsp;application&nbsp;depends&nbsp;on&nbsp;the&lt;br&gt;<br>
structure&nbsp;of&nbsp;your&nbsp;network:&nbsp;the&nbsp;former&nbsp;might&nbsp;be&nbsp;more&nbsp;appropriate&nbsp;for&nbsp;a&nbsp;WAN&nbsp;link,&lt;br&gt;<br>
the&nbsp;latter&nbsp;for&nbsp;a&nbsp;LAN&nbsp;or&nbsp;a&nbsp;datacentre,&nbsp;etc.&lt;br&gt;<br>
&lt;div&nbsp;class=&quot;im&quot;&gt;&lt;br&gt;<br>
&amp;gt;&nbsp;It&nbsp;looks&nbsp;like&nbsp;channels&nbsp;(created&nbsp;with&nbsp;amqp_channel_open)&nbsp;are&nbsp;identified&lt;br&gt;<br>
&amp;gt;&nbsp;by&nbsp;(small?)&lt;br&gt;<br>
&amp;gt;&nbsp;integers&nbsp;chosen&nbsp;by&nbsp;the&nbsp;application&nbsp;and&nbsp;are&nbsp;associated&nbsp;with&nbsp;the&lt;br&gt;<br>
&amp;gt;&nbsp;connection.&nbsp; This&lt;br&gt;<br>
&amp;gt;&nbsp;means&nbsp;that&nbsp;it&nbsp;is&nbsp;the&nbsp;responsibility&nbsp;of&nbsp;the&nbsp;application&nbsp;to&nbsp;choose&nbsp;unique&lt;br&gt;<br>
&amp;gt;&nbsp;numbers,&lt;br&gt;<br>
&amp;gt;&nbsp;properly&nbsp;close&nbsp;them,&nbsp;etc..&nbsp; &nbsp;It&nbsp;would&nbsp;seem&nbsp;cleaner&nbsp;to&nbsp;pass&nbsp;a&nbsp;connection&nbsp;as&nbsp;a&lt;br&gt;<br>
&amp;gt;&nbsp;single&nbsp;parameter&nbsp;to&nbsp;amqp_channel_open&nbsp;and&nbsp;have&nbsp;it&nbsp;return&nbsp;a&nbsp;pointer&nbsp;to&nbsp;a&lt;br&gt;<br>
&amp;gt;&nbsp;channel,&lt;br&gt;<br>
&amp;gt;&nbsp;and&nbsp;the&nbsp;list&nbsp;of&nbsp;channels&nbsp;would&nbsp;be&nbsp;maintained&nbsp;in&nbsp;the&nbsp;connection.&lt;br&gt;<br>
&lt;br&gt;<br>
&lt;/div&gt;Yes,&nbsp;there&nbsp;is&nbsp;a&nbsp;lot&nbsp;of&nbsp;per-channel&nbsp;state&nbsp;management&nbsp;the&nbsp;library&nbsp;currently&lt;br&gt;<br>
doesn&amp;#39;t&nbsp;do.&nbsp;A&nbsp;set&nbsp;of&nbsp;&amp;quot;active&amp;quot;&nbsp;channel&nbsp;numbers&nbsp;might&nbsp;not&nbsp;be&nbsp;too&nbsp;hard&nbsp;to&nbsp;manage.&lt;br&gt;<br>
&lt;div&nbsp;class=&quot;im&quot;&gt;&lt;br&gt;<br>
&amp;gt;&nbsp;Also,&nbsp;it&nbsp;looks&nbsp;like&nbsp;amqp_new_connection&nbsp;uses&nbsp;&amp;#39;calloc&amp;#39;&nbsp;to&nbsp;allocate&lt;br&gt;<br>
&amp;gt;&nbsp;memory&nbsp;for&nbsp;a&nbsp;connection,&nbsp;but&nbsp;amqp_connection_close&nbsp;does&nbsp;not&nbsp;do&lt;br&gt;<br>
&amp;gt;&nbsp;a&nbsp;&amp;#39;free&amp;#39;&nbsp;to&nbsp;avoid&nbsp;the&nbsp;memory&nbsp;leak.&nbsp; Maybe&nbsp;that&nbsp;was&nbsp;intentional,&nbsp;but&nbsp;if&lt;br&gt;<br>
&amp;gt;&nbsp;not&nbsp;it&nbsp;should&nbsp;be&nbsp;changed.&lt;br&gt;<br>
&lt;br&gt;<br>
&lt;/div&gt;The&nbsp;amqp_connection_close()&nbsp;function&nbsp;causes&nbsp;an&nbsp;AMQP&nbsp;Connection.Close&nbsp;RPC&nbsp;to&lt;br&gt;<br>
happen&nbsp;on&nbsp;the&nbsp;open&nbsp;socket,&nbsp;but&nbsp;does&nbsp;not&nbsp;then&nbsp;tear&nbsp;down&nbsp;any&nbsp;of&nbsp;the&nbsp;application&lt;br&gt;<br>
state:&nbsp;that&amp;#39;s&nbsp;what&nbsp;amqp_destroy_connection()&nbsp;is&nbsp;for.&nbsp;The&nbsp;relevant&nbsp;pairings&nbsp;are&lt;br&gt;<br>
roughly&lt;br&gt;<br>
&lt;br&gt;<br>
For&nbsp;local&nbsp;connection&nbsp;state&nbsp;management&nbsp;(calloc/free):&lt;br&gt;<br>
&nbsp; amqp_new_connection&lt;br&gt;<br>
&nbsp; amqp_destroy_connection&lt;br&gt;<br>
&lt;br&gt;<br>
For&nbsp;remote&nbsp;connection&nbsp;state&nbsp;management&nbsp;(Connection.Open/Tune/Close,&nbsp;once&nbsp;local&lt;br&gt;<br>
connection&nbsp;state&nbsp;exists):&lt;br&gt;<br>
&nbsp; amqp_login&lt;br&gt;<br>
&nbsp; amqp_connection_close&lt;br&gt;<br>
...plus&nbsp;interactions&nbsp;required&nbsp;on&nbsp;receipt&nbsp;of&nbsp;a&nbsp;Connection.Close&nbsp;method&nbsp;frame&lt;br&gt;<br>
from&nbsp;the&nbsp;peer.&lt;br&gt;<br>
&lt;br&gt;<br>
Cheers,&lt;br&gt;<br>
&lt;font&nbsp;color=&quot;#888888&quot;&gt;&nbsp; Tony&lt;br&gt;<br>
&lt;br&gt;<br>
&lt;/font&gt;&lt;/div&gt;&lt;br&gt;<br>

</tt>
