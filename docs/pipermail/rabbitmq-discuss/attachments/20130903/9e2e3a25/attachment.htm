<tt>
&lt;html&gt;&lt;head&gt;&lt;/head&gt;&lt;body&nbsp;style=&quot;word-wrap:&nbsp;break-word;&nbsp;-webkit-nbsp-mode:&nbsp;space;&nbsp;-webkit-line-break:&nbsp;after-white-space;&nbsp;&quot;&gt;&lt;div&gt;Jesper,&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;This&nbsp;is&nbsp;totally&nbsp;awesome,&nbsp;thanks&nbsp;for&nbsp;all&nbsp;your&nbsp;efforts!&nbsp;Quite&nbsp;a&nbsp;few&nbsp;of&nbsp;these&nbsp;items&nbsp;we&nbsp;already&nbsp;have&nbsp;open&nbsp;bugs&nbsp;for,&nbsp;but&nbsp;we've&nbsp;not&nbsp;prioritised&nbsp;optimising&nbsp;the&nbsp;Erlang&nbsp;client&nbsp;up&nbsp;until&nbsp;now.&nbsp;I&nbsp;will&nbsp;however,&nbsp;be&nbsp;picking&nbsp;up&nbsp;these&nbsp;patches&nbsp;and&nbsp;looking&nbsp;at&nbsp;incorporating&nbsp;them.&nbsp;Is&nbsp;it&nbsp;ok&nbsp;if&nbsp;I&nbsp;contact&nbsp;you&nbsp;offline&nbsp;if&nbsp;and&nbsp;when&nbsp;I&nbsp;need&nbsp;to&nbsp;discuss&nbsp;the&nbsp;changes?&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;Cheers,&lt;/div&gt;&lt;div&gt;Tim&lt;/div&gt;&lt;br&gt;&lt;div&gt;&lt;div&gt;On&nbsp;3&nbsp;Sep&nbsp;2013,&nbsp;at&nbsp;13:35,&nbsp;Jesper&nbsp;Louis&nbsp;Andersen&nbsp;wrote:&lt;/div&gt;&lt;br&nbsp;class=&quot;Apple-interchange-newline&quot;&gt;&lt;blockquote&nbsp;type=&quot;cite&quot;&gt;&lt;div&nbsp;dir=&quot;ltr&quot;&gt;&lt;div&gt;#&nbsp;Optimizing&nbsp;the&nbsp;Erlang&nbsp;RabbitMQ&nbsp;Client&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;I&nbsp;originally&nbsp;thought&nbsp;about&nbsp;this&nbsp;as&nbsp;a&nbsp;blog&nbsp;post,&nbsp;but&nbsp;as&nbsp;I&nbsp;don't&nbsp;really&nbsp;have&nbsp;time&nbsp;finishing&nbsp;it&nbsp;up&nbsp;and&nbsp;polishing&nbsp;it&nbsp;more,&nbsp;I'd&nbsp;just&nbsp;write&nbsp;it&nbsp;here&nbsp;on&nbsp;the&nbsp;mailing&nbsp;list&nbsp;instead.&nbsp;There&nbsp;are&nbsp;some&nbsp;patches&nbsp;in&nbsp;the&nbsp;mail&nbsp;you&nbsp;may&nbsp;want&nbsp;to&nbsp;grab&nbsp;and&nbsp;apply&nbsp;on&nbsp;the&nbsp;RabbitMQ&nbsp;Erlang&nbsp;client.&nbsp;In&nbsp;my&nbsp;benchmarks,&nbsp;they&nbsp;helped&nbsp;me&nbsp;get&nbsp;some&nbsp;more&nbsp;performance&nbsp;squeezed&nbsp;out&nbsp;of&nbsp;my&nbsp;systems&nbsp;in&nbsp;the&nbsp;ballpark&nbsp;of&nbsp;15-40%&nbsp;more&nbsp;Messages&nbsp;per&nbsp;second.&lt;/div&gt;<br>
<br>
&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;My&nbsp;benchmark&nbsp;is&nbsp;quite&nbsp;synthetic&nbsp;and&nbsp;bad&nbsp;since&nbsp;it&nbsp;goes&nbsp;great&nbsp;lengths&nbsp;at&nbsp;playing&nbsp;on&nbsp;all&nbsp;of&nbsp;AMQPs&nbsp;weaknesses.&nbsp;But&nbsp;the&nbsp;patches&nbsp;are&nbsp;probably&nbsp;quite&nbsp;sound&nbsp;and&nbsp;picks&nbsp;out&nbsp;the&nbsp;low­hanging­fruit&nbsp;there&nbsp;is&nbsp;in&nbsp;there.&nbsp;In&nbsp;the&nbsp;end,&nbsp;I&nbsp;have&nbsp;written&nbsp;some&nbsp;of&nbsp;the&nbsp;ideas&nbsp;I&nbsp;have&nbsp;for&nbsp;further&nbsp;improvement&nbsp;of&nbsp;the&nbsp;client.&nbsp;But&nbsp;I&nbsp;did&nbsp;not&nbsp;have&nbsp;the&nbsp;time&nbsp;to&nbsp;do&nbsp;so,&nbsp;and&nbsp;currently,&nbsp;it&nbsp;is&nbsp;fast&nbsp;enough&nbsp;for&nbsp;our&nbsp;purposes,&nbsp;our&nbsp;load&nbsp;being&nbsp;well&nbsp;under&nbsp;an&nbsp;order&nbsp;of&nbsp;magnitude&nbsp;lower&nbsp;than&nbsp;the&nbsp;limits&nbsp;it&nbsp;imposes&nbsp;on&nbsp;systems.&lt;/div&gt;<br>
<br>
&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;In&nbsp;any&nbsp;case,&nbsp;you&nbsp;may&nbsp;want&nbsp;to&nbsp;grab&nbsp;the&nbsp;patches&nbsp;I&nbsp;made&nbsp;since&nbsp;they&nbsp;would&nbsp;probably&nbsp;help&nbsp;any&nbsp;Erlang&nbsp;RabbitMQ&nbsp;client&nbsp;user.&nbsp;This&nbsp;message&nbsp;was&nbsp;due&nbsp;to&nbsp;me&nbsp;complaining&nbsp;to&nbsp;Alvaro&nbsp;`gifsockets`&nbsp;Videla&nbsp;about&nbsp;the&nbsp;Erlang&nbsp;client,&nbsp;and&nbsp;he&nbsp;urged&nbsp;me&nbsp;to&nbsp;write&nbsp;up&nbsp;my&nbsp;findings.&nbsp;So&nbsp;here&nbsp;goes&nbsp;nothing:&lt;/div&gt;<br>
<br>
&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;##&nbsp;The&nbsp;setup&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;The&nbsp;current&nbsp;setup&nbsp;is&nbsp;like&nbsp;this:&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;*&nbsp;Run&nbsp;a&nbsp;RabbitMQ&nbsp;server&nbsp;version&nbsp;3.1.5.&lt;/div&gt;&lt;div&gt;*&nbsp;Run&nbsp;a&nbsp;fairly&nbsp;recent&nbsp;RabbitMQ&nbsp;erlang&nbsp;client.&nbsp;We&nbsp;use&nbsp;version&nbsp;3.1.1,&nbsp;but&nbsp;there&nbsp;are&nbsp;so&nbsp;few&nbsp;changes&nbsp;on&nbsp;it&nbsp;that&nbsp;it&nbsp;doesn't&nbsp;matter&nbsp;it&nbsp;is&nbsp;not&nbsp;the&nbsp;newest&nbsp;version.&lt;/div&gt;<br>
<br>
&lt;div&gt;*&nbsp;We&nbsp;run&nbsp;everything&nbsp;on&nbsp;localhost.&lt;/div&gt;&lt;div&gt;*&nbsp;We&nbsp;run&nbsp;with&nbsp;Erlang/OTP&nbsp;R16B01&lt;/div&gt;&lt;div&gt;*&nbsp;We&nbsp;make&nbsp;two&nbsp;connections&nbsp;to&nbsp;RMQ&lt;/div&gt;&lt;div&gt;*&nbsp;One&nbsp;connection&nbsp;manages&nbsp;a&nbsp;&quot;sender&quot;&nbsp;channel,&nbsp;run&nbsp;by&nbsp;a&nbsp;single&nbsp;&quot;sender&quot;&nbsp;process.&lt;/div&gt;<br>
<br>
&lt;div&gt;*&nbsp;The&nbsp;other&nbsp;connection&nbsp;runs&nbsp;10&nbsp;channels,&nbsp;each&nbsp;channel&nbsp;having&nbsp;a&nbsp;&quot;Handler&nbsp;function&quot;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;The&nbsp;setup&nbsp;is&nbsp;somewhat&nbsp;suboptimal.&nbsp;The&nbsp;same&nbsp;machine&nbsp;runs&nbsp;everything&nbsp;so&nbsp;there&nbsp;are&nbsp;certain&nbsp;nice&nbsp;optimization&nbsp;like&nbsp;setting&nbsp;scheduler&nbsp;bind&nbsp;types&nbsp;and&nbsp;so&nbsp;on&nbsp;which&nbsp;won't&nbsp;really&nbsp;help&nbsp;that&nbsp;much.&nbsp;Furthermore,&nbsp;we&nbsp;don't&nbsp;tune&nbsp;memory&nbsp;allocators,&nbsp;which&nbsp;I&nbsp;have&nbsp;a&nbsp;hunch&nbsp;could&nbsp;help&nbsp;in&nbsp;these&nbsp;situations.&lt;/div&gt;<br>
<br>
&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;A&nbsp;test&nbsp;is&nbsp;the&nbsp;following:&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;*&nbsp;We&nbsp;spawn&nbsp;100&nbsp;processes.&nbsp;These&nbsp;send&nbsp;10000&nbsp;messages&nbsp;each&nbsp;and&nbsp;wait&nbsp;for&nbsp;a&nbsp;reply.&lt;/div&gt;&lt;div&gt;*&nbsp;The&nbsp;Handlers&nbsp;reply&nbsp;via&nbsp;reply_to&nbsp;queues.&lt;/div&gt;&lt;div&gt;*&nbsp;All&nbsp;messages&nbsp;are&nbsp;very&nbsp;small.&nbsp;A&nbsp;few&nbsp;bytes.&nbsp;We&nbsp;want&nbsp;to&nbsp;test&nbsp;messaging&nbsp;capability.&lt;/div&gt;<br>
<br>
&lt;div&gt;*&nbsp;We&nbsp;thus&nbsp;run&nbsp;one&nbsp;million&nbsp;(10⁶)&nbsp;RPC&nbsp;queries.&nbsp;Each&nbsp;query&nbsp;is&nbsp;two&nbsp;messages:&nbsp;A&nbsp;request&nbsp;and&nbsp;a&nbsp;reply.&lt;/div&gt;&lt;div&gt;*&nbsp;The&nbsp;single&nbsp;&quot;sender&quot;&nbsp;multiplexes&nbsp;and&nbsp;demultiplexes&nbsp;the&nbsp;100&nbsp;worker&nbsp;processes.&nbsp;This&nbsp;is&nbsp;a&nbsp;known&nbsp;bottleneck&nbsp;in&nbsp;the&nbsp;code&nbsp;base.&lt;/div&gt;<br>
<br>
&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;##&nbsp;Initial&nbsp;state&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;I&nbsp;have&nbsp;a&nbsp;Core&nbsp;i7-3630QM&nbsp;Based&nbsp;laptop.&nbsp;Making&nbsp;sure&nbsp;it&nbsp;is&nbsp;not&nbsp;running&nbsp;on&nbsp;battery,&nbsp;we&nbsp;can&nbsp;process&nbsp;roughly&nbsp;12.5k&nbsp;RPS&nbsp;(RPC's&nbsp;per&nbsp;second)&nbsp;on&nbsp;this&nbsp;setup.&nbsp;When&nbsp;running,&nbsp;it&nbsp;seems&nbsp;we&nbsp;max&nbsp;out&nbsp;all&nbsp;cores&nbsp;in&nbsp;the&nbsp;machine.&nbsp;Roughly&nbsp;3&nbsp;cores&nbsp;go&nbsp;to&nbsp;RMQ,&nbsp;4&nbsp;cores&nbsp;go&nbsp;to&nbsp;our&nbsp;test&nbsp;case&nbsp;and&nbsp;the&nbsp;last&nbsp;core&nbsp;does&nbsp;other&nbsp;stuff&nbsp;like&nbsp;playing&nbsp;spotify.&nbsp;My&nbsp;benchmark&nbsp;surely&nbsp;runs&nbsp;in&nbsp;a&nbsp;highly&nbsp;controlled&nbsp;environment&nbsp;:)&lt;/div&gt;<br>
<br>
&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;What&nbsp;is&nbsp;odd&nbsp;though,&nbsp;is&nbsp;the&nbsp;load&nbsp;of&nbsp;400%&nbsp;on&nbsp;the&nbsp;Client&nbsp;Erlang&nbsp;node.&nbsp;Why&nbsp;on&nbsp;*earth*&nbsp;is&nbsp;the&nbsp;client&nbsp;doing&nbsp;more&nbsp;work&nbsp;than&nbsp;the&nbsp;server?&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;When&nbsp;debugging&nbsp;stuff&nbsp;like&nbsp;this,&nbsp;the&nbsp;first&nbsp;thing&nbsp;to&nbsp;look&nbsp;at&nbsp;is&nbsp;bottom&nbsp;of&nbsp;things.&nbsp;We&nbsp;must&nbsp;make&nbsp;sure&nbsp;the&nbsp;kernel&nbsp;and&nbsp;the&nbsp;network&nbsp;is&nbsp;behaving&nbsp;like&nbsp;we&nbsp;expect&nbsp;them&nbsp;to.&nbsp;Old&nbsp;trusty&nbsp;*tcpdump*&nbsp;always&nbsp;comes&nbsp;to&nbsp;the&nbsp;rescue&nbsp;for&nbsp;these&nbsp;kinds&nbsp;of&nbsp;things.&nbsp;We&nbsp;grab&nbsp;a&nbsp;typical&nbsp;run&nbsp;on&nbsp;disk&nbsp;just&nbsp;to&nbsp;see&nbsp;what&nbsp;is&nbsp;happening.&lt;/div&gt;<br>
<br>
&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;span&nbsp;class=&quot;&quot;&nbsp;style=&quot;white-space:pre&quot;&gt;&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&lt;/span&gt;tcpdump&nbsp;-i&nbsp;lo&nbsp;-w&nbsp;tcp.dump&nbsp;'port&nbsp;5672'&lt;/div&gt;&lt;div&gt;&lt;span&nbsp;class=&quot;&quot;&nbsp;style=&quot;white-space:pre&quot;&gt;&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&lt;/span&gt;&lt;/div&gt;&lt;div&gt;Given&nbsp;such&nbsp;a&nbsp;trace,&nbsp;we&nbsp;can&nbsp;analyze&nbsp;it&nbsp;in&nbsp;tcptrace&nbsp;and&nbsp;in&nbsp;Wireshark.&nbsp;It&nbsp;can&nbsp;tell&nbsp;us&nbsp;if&nbsp;there&nbsp;are&nbsp;anything&nbsp;odd&nbsp;to&nbsp;look&nbsp;for&nbsp;in&nbsp;the&nbsp;handling&nbsp;of&nbsp;the&nbsp;low-level&nbsp;communication.&nbsp;Here&nbsp;is&nbsp;a&nbsp;simple&nbsp;breakdown&nbsp;of&nbsp;the&nbsp;packet&nbsp;sizes:&lt;/div&gt;<br>
<br>
&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;span&nbsp;class=&quot;&quot;&nbsp;style=&quot;white-space:pre&quot;&gt;&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&lt;/span&gt;Size&lt;span&nbsp;class=&quot;&quot;&nbsp;style=&quot;white-space:pre&quot;&gt;&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&lt;/span&gt;Count&lt;span&nbsp;class=&quot;&quot;&nbsp;style=&quot;white-space:pre&quot;&gt;&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&lt;/span&gt;Percent&lt;/div&gt;&lt;div&gt;&lt;span&nbsp;class=&quot;&quot;&nbsp;style=&quot;white-space:pre&quot;&gt;&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&lt;/span&gt;40-79&lt;span&nbsp;class=&quot;&quot;&nbsp;style=&quot;white-space:pre&quot;&gt;&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&lt;/span&gt;417900&lt;span&nbsp;class=&quot;&quot;&nbsp;style=&quot;white-space:pre&quot;&gt;&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&lt;/span&gt;12.38%&lt;/div&gt;<br>
<br>
&lt;div&gt;&lt;span&nbsp;class=&quot;&quot;&nbsp;style=&quot;white-space:pre&quot;&gt;&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&lt;/span&gt;[⋯]&lt;/div&gt;&lt;div&gt;&lt;span&nbsp;class=&quot;&quot;&nbsp;style=&quot;white-space:pre&quot;&gt;&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&lt;/span&gt;160-329&lt;span&nbsp;class=&quot;&quot;&nbsp;style=&quot;white-space:pre&quot;&gt;&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&lt;/span&gt;2814258&lt;span&nbsp;class=&quot;&quot;&nbsp;style=&quot;white-space:pre&quot;&gt;&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&lt;/span&gt;83.37%&lt;/div&gt;<br>
<br>
&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;This&nbsp;is&nbsp;*very*&nbsp;odd.&nbsp;A&nbsp;localhost&nbsp;interface&nbsp;has&nbsp;an&nbsp;MTU&nbsp;of&nbsp;64&nbsp;Kilobytes.&nbsp;Yet,&nbsp;most&nbsp;packets&nbsp;are&nbsp;extremely&nbsp;small.&nbsp;RabbitMQ&nbsp;disables&nbsp;Nagle's&nbsp;algorithm&nbsp;through&nbsp;setting&nbsp;*TCP_NODELAY*&nbsp;and&nbsp;it&nbsp;does&nbsp;not&nbsp;look&nbsp;like&nbsp;there&nbsp;is&nbsp;good&nbsp;handling&nbsp;of&nbsp;it.&nbsp;Most&nbsp;of&nbsp;the&nbsp;packets&nbsp;we&nbsp;transfer&nbsp;are&nbsp;pretty&nbsp;small.&nbsp;This&nbsp;is&nbsp;quite&nbsp;nasty&nbsp;for&nbsp;performance.&lt;/div&gt;<br>
<br>
&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;Wireshark&nbsp;tells&nbsp;us&nbsp;we&nbsp;can&nbsp;push&nbsp;around&nbsp;65.5&nbsp;megabit&nbsp;through&nbsp;the&nbsp;link.&nbsp;This&nbsp;isn't&nbsp;a&nbsp;lot&nbsp;on&nbsp;a&nbsp;localhost&nbsp;interface.&nbsp;I&nbsp;had&nbsp;a&nbsp;hunch&nbsp;something&nbsp;might&nbsp;be&nbsp;wrong&nbsp;with&nbsp;the&nbsp;TCP&nbsp;window,&nbsp;but&nbsp;it&nbsp;never&nbsp;closes&nbsp;according&nbsp;to&nbsp;Wireshark,&nbsp;so&nbsp;this&nbsp;can&nbsp;not&nbsp;be&nbsp;the&nbsp;case.&lt;/div&gt;<br>
<br>
&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;The&nbsp;major&nbsp;problem&nbsp;here&nbsp;is&nbsp;that&nbsp;we&nbsp;are&nbsp;not&nbsp;filling&nbsp;up&nbsp;packets&nbsp;for&nbsp;some&nbsp;reason&nbsp;and&nbsp;are&nbsp;sending&nbsp;way&nbsp;too&nbsp;small&nbsp;IP&nbsp;datagrams&nbsp;for&nbsp;this&nbsp;to&nbsp;ever&nbsp;be&nbsp;fast.&nbsp;We&nbsp;are&nbsp;dying&nbsp;by&nbsp;processing&nbsp;small&nbsp;packets.&lt;/div&gt;&lt;div&gt;&lt;br&gt;<br>
<br>
&lt;/div&gt;&lt;div&gt;##&nbsp;Eprof&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;Another&nbsp;useful&nbsp;approach&nbsp;is&nbsp;to&nbsp;use&nbsp;the&nbsp;*eprof*&nbsp;profiler.&nbsp;We&nbsp;hook&nbsp;amqp_client&nbsp;and&nbsp;change&nbsp;the&nbsp;main&nbsp;application&nbsp;start&nbsp;callback&nbsp;such&nbsp;that&nbsp;it&nbsp;will&nbsp;profile&nbsp;its&nbsp;own&nbsp;tree:&lt;/div&gt;&lt;div&gt;&lt;br&gt;<br>
<br>
&lt;/div&gt;&lt;div&gt;&lt;span&nbsp;class=&quot;&quot;&nbsp;style=&quot;white-space:pre&quot;&gt;&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&lt;/span&gt;start(_StartType,&nbsp;_StartArgs)&nbsp;-&amp;gt;&lt;/div&gt;&lt;div&gt;&lt;span&nbsp;class=&quot;&quot;&nbsp;style=&quot;white-space:pre&quot;&gt;&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&lt;/span&gt;eprof:start_profiling([self()]),&lt;/div&gt;&lt;div&gt;&lt;span&nbsp;class=&quot;&quot;&nbsp;style=&quot;white-space:pre&quot;&gt;&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&lt;/span&gt;amqp_sup:start_link().&lt;/div&gt;<br>
<br>
&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;In&nbsp;our&nbsp;test&nbsp;case,&nbsp;we&nbsp;can&nbsp;now&nbsp;run&nbsp;a&nbsp;call&nbsp;to&nbsp;`eprof:stop_profiling()`&nbsp;followed&nbsp;by&nbsp;a&nbsp;call&nbsp;to&nbsp;`eprof:log/1`&nbsp;and&nbsp;`eprof:analyze()`.&nbsp;This&nbsp;only&nbsp;profiles&nbsp;the&nbsp;amqp_client,&nbsp;not&nbsp;our&nbsp;own&nbsp;test&nbsp;code&nbsp;which&nbsp;we&nbsp;use&nbsp;to&nbsp;load&nbsp;it.&nbsp;Hence,&nbsp;all&nbsp;the&nbsp;time&nbsp;reported&nbsp;is&nbsp;spent&nbsp;in&nbsp;the&nbsp;AMQP&nbsp;side&nbsp;of&nbsp;things.&nbsp;We&nbsp;could&nbsp;also&nbsp;try&nbsp;to&nbsp;optimize&nbsp;the&nbsp;test&nbsp;code,&nbsp;but&nbsp;for&nbsp;now,&nbsp;the&nbsp;focus&nbsp;is&nbsp;on&nbsp;the&nbsp;`amqp_client`&nbsp;side&nbsp;of&nbsp;things.&nbsp;We&nbsp;get&nbsp;a&nbsp;lot&nbsp;of&nbsp;interesting&nbsp;output,&nbsp;most&nbsp;notably&nbsp;one&nbsp;for&nbsp;a&nbsp;process&nbsp;doing&nbsp;a&nbsp;lot&nbsp;of&nbsp;work:&lt;/div&gt;<br>
<br>
&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;span&nbsp;class=&quot;&quot;&nbsp;style=&quot;white-space:pre&quot;&gt;&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&lt;/span&gt;&nbsp;******&nbsp;Process&nbsp;&amp;lt;0.184.0&amp;gt;&nbsp;&amp;nbsp;&nbsp;&amp;nbsp;--&nbsp;18.45&nbsp;%&nbsp;of&nbsp;profiled&nbsp;time&nbsp;***&amp;nbsp;&lt;/div&gt;&lt;div&gt;&lt;span&nbsp;class=&quot;&quot;&nbsp;style=&quot;white-space:pre&quot;&gt;&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&lt;/span&gt;&nbsp;FUNCTION&nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&nbsp;&amp;nbsp;CALLS&nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&nbsp;&amp;nbsp;%&nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&nbsp;&amp;nbsp;TIME&nbsp;&amp;nbsp;[uS&nbsp;/&nbsp;CALLS]&lt;/div&gt;<br>
<br>
&lt;div&gt;&lt;span&nbsp;class=&quot;&quot;&nbsp;style=&quot;white-space:pre&quot;&gt;&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&lt;/span&gt;&nbsp;--------&nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&nbsp;&amp;nbsp;-----&nbsp;&amp;nbsp;&nbsp;&amp;nbsp;---&nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&nbsp;&amp;nbsp;----&nbsp;&amp;nbsp;[----------]&lt;/div&gt;&lt;div&gt;&lt;span&nbsp;class=&quot;&quot;&nbsp;style=&quot;white-space:pre&quot;&gt;&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&lt;/span&gt;&nbsp;[⋯]&lt;/div&gt;&lt;div&gt;&lt;span&nbsp;class=&quot;&quot;&nbsp;style=&quot;white-space:pre&quot;&gt;&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&lt;/span&gt;&nbsp;amqp_main_reader:init/1&nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&nbsp;1&nbsp;&amp;nbsp;&nbsp;0.00&nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&nbsp;1&nbsp;&amp;nbsp;[&nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&nbsp;&amp;nbsp;1.00]&lt;/div&gt;<br>
<br>
&lt;div&gt;&lt;span&nbsp;class=&quot;&quot;&nbsp;style=&quot;white-space:pre&quot;&gt;&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&lt;/span&gt;&nbsp;[⋯]&lt;/div&gt;&lt;div&gt;&lt;span&nbsp;class=&quot;&quot;&nbsp;style=&quot;white-space:pre&quot;&gt;&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&lt;/span&gt;&nbsp;erlang:port_control/3&nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&nbsp;6000087&nbsp;&amp;nbsp;&nbsp;4.06&nbsp;&amp;nbsp;&nbsp;2124919&nbsp;&amp;nbsp;[&nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&nbsp;&amp;nbsp;0.35]&lt;/div&gt;&lt;div&gt;&lt;span&nbsp;class=&quot;&quot;&nbsp;style=&quot;white-space:pre&quot;&gt;&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&lt;/span&gt;&nbsp;prim_inet:ctl_cmd/3&nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&nbsp;6000087&nbsp;&amp;nbsp;&nbsp;4.16&nbsp;&amp;nbsp;&nbsp;2177725&nbsp;&amp;nbsp;[&nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&nbsp;&amp;nbsp;0.36]&lt;/div&gt;<br>
<br>
&lt;div&gt;&lt;span&nbsp;class=&quot;&quot;&nbsp;style=&quot;white-space:pre&quot;&gt;&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&lt;/span&gt;&nbsp;gen_server:dispatch/3&nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&nbsp;6000086&nbsp;&amp;nbsp;&nbsp;4.24&nbsp;&amp;nbsp;&nbsp;2223023&nbsp;&amp;nbsp;[&nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&nbsp;&amp;nbsp;0.37]&lt;/div&gt;&lt;div&gt;&lt;span&nbsp;class=&quot;&quot;&nbsp;style=&quot;white-space:pre&quot;&gt;&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&lt;/span&gt;&nbsp;prim_inet:enc_time/1&nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&nbsp;&amp;nbsp;6000087&nbsp;&amp;nbsp;&nbsp;5.07&nbsp;&amp;nbsp;&nbsp;2656325&nbsp;&amp;nbsp;[&nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&nbsp;&amp;nbsp;0.44]&lt;/div&gt;<br>
<br>
&lt;div&gt;&lt;span&nbsp;class=&quot;&quot;&nbsp;style=&quot;white-space:pre&quot;&gt;&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&lt;/span&gt;&nbsp;erlang:send/3&nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&nbsp;3000040&nbsp;&amp;nbsp;&nbsp;6.39&nbsp;&amp;nbsp;&nbsp;3349936&nbsp;&amp;nbsp;[&nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&nbsp;&amp;nbsp;1.12]&lt;/div&gt;&lt;div&gt;&lt;span&nbsp;class=&quot;&quot;&nbsp;style=&quot;white-space:pre&quot;&gt;&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&lt;/span&gt;&nbsp;amqp_main_reader:handle_info/2&nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&nbsp;&amp;nbsp;6000086&nbsp;&amp;nbsp;&nbsp;7.10&nbsp;&amp;nbsp;&nbsp;3717176&nbsp;&amp;nbsp;[&nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&nbsp;&amp;nbsp;0.62]&lt;/div&gt;<br>
<br>
&lt;div&gt;&lt;span&nbsp;class=&quot;&quot;&nbsp;style=&quot;white-space:pre&quot;&gt;&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&lt;/span&gt;&nbsp;erts_internal:port_control/3&nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&nbsp;&amp;nbsp;6000087&nbsp;&amp;nbsp;38.26&nbsp;&amp;nbsp;20042440&nbsp;&amp;nbsp;[&nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&nbsp;&amp;nbsp;3.34]&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;This&nbsp;process&nbsp;runs&nbsp;around&nbsp;20%&nbsp;of&nbsp;the&nbsp;load&nbsp;and&nbsp;runs&nbsp;roughly&nbsp;6&nbsp;million&nbsp;calls&nbsp;to&nbsp;`erts_internal:port_control/3`.&nbsp;This&nbsp;is&nbsp;odd.&nbsp;We&nbsp;would&nbsp;expect&nbsp;there&nbsp;to&nbsp;be&nbsp;fewer&nbsp;calls.&nbsp;Since&nbsp;we&nbsp;are&nbsp;passing&nbsp;both&nbsp;the&nbsp;request&nbsp;and&nbsp;the&nbsp;reply&nbsp;through&nbsp;this&nbsp;area&nbsp;in&nbsp;the&nbsp;code&nbsp;base,&nbsp;it&nbsp;seems&nbsp;odd&nbsp;that&nbsp;we&nbsp;are&nbsp;making&nbsp;6&nbsp;calls&nbsp;per&nbsp;RPC.&nbsp;In&nbsp;fact,&nbsp;the&nbsp;number&nbsp;shouldn't&nbsp;even&nbsp;be&nbsp;two!&nbsp;We&nbsp;are&nbsp;passing&nbsp;a&nbsp;*lot*&nbsp;of&nbsp;data&nbsp;through&nbsp;the&nbsp;socket&nbsp;so&nbsp;we&nbsp;expect&nbsp;Erlang&nbsp;to&nbsp;be&nbsp;able&nbsp;to&nbsp;pick&nbsp;up&nbsp;a&nbsp;lot&nbsp;of&nbsp;data&nbsp;and&nbsp;process&nbsp;it&nbsp;with&nbsp;a&nbsp;single&nbsp;call&nbsp;to&nbsp;the&nbsp;underlying&nbsp;socket.&nbsp;Not&nbsp;a&nbsp;call&nbsp;per&nbsp;message&nbsp;which&nbsp;is&nbsp;very&nbsp;expensive.&lt;/div&gt;<br>
<br>
&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;Looking&nbsp;into&nbsp;the&nbsp;`amqp_main_reader`&nbsp;module,&nbsp;we&nbsp;see&nbsp;that&nbsp;it&nbsp;handles&nbsp;the&nbsp;underlying&nbsp;socket&nbsp;in&nbsp;a&nbsp;very&nbsp;odd&nbsp;way.&nbsp;First,&nbsp;it&nbsp;reads&nbsp;exactly&nbsp;7&nbsp;bytes&nbsp;off&nbsp;the&nbsp;socket&nbsp;for&nbsp;the&nbsp;AMQP&nbsp;header.&nbsp;From&nbsp;this&nbsp;it&nbsp;obtains&nbsp;the&nbsp;payload&nbsp;length&nbsp;and&nbsp;then&nbsp;it&nbsp;reads&nbsp;the&nbsp;payload&nbsp;length.&nbsp;This&nbsp;means&nbsp;two&nbsp;context&nbsp;switches&nbsp;to&nbsp;get&nbsp;a&nbsp;single&nbsp;packet.&nbsp;And&nbsp;the&nbsp;reason&nbsp;why&nbsp;we&nbsp;are&nbsp;spending&nbsp;all&nbsp;the&nbsp;time&nbsp;in&nbsp;port&nbsp;control.&lt;/div&gt;<br>
<br>
&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;The&nbsp;optimization&nbsp;is&nbsp;straight&nbsp;forward:&nbsp;Read&nbsp;as&nbsp;much&nbsp;data&nbsp;as&nbsp;possible&nbsp;from&nbsp;the&nbsp;underlying&nbsp;socket&nbsp;per&nbsp;call.&nbsp;Then&nbsp;process&nbsp;as&nbsp;much&nbsp;data&nbsp;as&nbsp;you&nbsp;can&nbsp;before&nbsp;going&nbsp;to&nbsp;the&nbsp;socket&nbsp;again.&nbsp;There&nbsp;are&nbsp;basically&nbsp;two&nbsp;scenarios.&nbsp;Either&nbsp;the&nbsp;socket&nbsp;is&nbsp;not&nbsp;loaded&nbsp;at&nbsp;all&nbsp;and&nbsp;then&nbsp;there&nbsp;are&nbsp;no&nbsp;reason&nbsp;to&nbsp;even&nbsp;think&nbsp;about&nbsp;optimization.&nbsp;Or&nbsp;the&nbsp;socket&nbsp;is&nbsp;loaded&nbsp;in&nbsp;which&nbsp;case&nbsp;we&nbsp;should&nbsp;optimize&nbsp;for&nbsp;the&nbsp;fast&nbsp;path.&nbsp;The&nbsp;fast&nbsp;path&nbsp;in&nbsp;this&nbsp;case&nbsp;is&nbsp;that&nbsp;all&nbsp;data&nbsp;is&nbsp;available&nbsp;for&nbsp;a&nbsp;message.&nbsp;If&nbsp;not,&nbsp;we&nbsp;can&nbsp;just&nbsp;append&nbsp;data&nbsp;to&nbsp;the&nbsp;old&nbsp;data&lt;/div&gt;<br>
<br>
&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;span&nbsp;class=&quot;&quot;&nbsp;style=&quot;white-space:pre&quot;&gt;&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&lt;/span&gt;&amp;lt;&amp;lt;OldData/binary,&nbsp;NewData/binary&amp;gt;&amp;gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;since&nbsp;in&nbsp;Erlang&nbsp;releases&nbsp;after&nbsp;OTP&nbsp;R12B&nbsp;this&nbsp;will&nbsp;use&nbsp;the&nbsp;extra&nbsp;capacity&nbsp;allocated&nbsp;for&nbsp;binaries&nbsp;and&nbsp;avoid&nbsp;copying&nbsp;in&nbsp;most&nbsp;cases&nbsp;anyhow.&nbsp;Also,&nbsp;when&nbsp;the&nbsp;socket&nbsp;is&nbsp;running&nbsp;slowly,&nbsp;a&nbsp;bit&nbsp;of&nbsp;extra&nbsp;copying&nbsp;like&nbsp;this&nbsp;is&nbsp;not&nbsp;going&nbsp;to&nbsp;be&nbsp;a&nbsp;problem.&nbsp;Whereas&nbsp;if&nbsp;the&nbsp;socket&nbsp;processes&nbsp;lots&nbsp;of&nbsp;data,&nbsp;we&nbsp;can&nbsp;fast­path&nbsp;the&nbsp;code.&nbsp;In&nbsp;other&nbsp;words,&nbsp;the&nbsp;natural&nbsp;implementation&nbsp;is&nbsp;reasonably&nbsp;fast.&nbsp;Implementing&nbsp;this&nbsp;change&nbsp;immediately&nbsp;pushes&nbsp;messages&nbsp;per&nbsp;second&nbsp;to&nbsp;31k,&nbsp;so&nbsp;we&nbsp;are&nbsp;up&nbsp;6000&nbsp;or&nbsp;around&nbsp;3000&nbsp;RPC&nbsp;calls.&lt;/div&gt;<br>
<br>
&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;It&nbsp;also&nbsp;pushes&nbsp;the&nbsp;6&nbsp;million&nbsp;calls&nbsp;down&nbsp;to&nbsp;6&nbsp;*&nbsp;10⁵&nbsp;shaving&nbsp;off&nbsp;an&nbsp;order&nbsp;of&nbsp;magnitude&nbsp;calls.&nbsp;And&nbsp;it&nbsp;shuffles&nbsp;the&nbsp;load&nbsp;in&nbsp;the&nbsp;system&nbsp;to&nbsp;other&nbsp;parts&nbsp;for&nbsp;now.&nbsp;The&nbsp;main&nbsp;problem&nbsp;now&nbsp;is&nbsp;the&nbsp;small&nbsp;packets&nbsp;being&nbsp;pushed&nbsp;all&nbsp;the&nbsp;time,&nbsp;which&nbsp;has&nbsp;to&nbsp;do&nbsp;with&nbsp;the&nbsp;send­path&nbsp;in&nbsp;RabbitMQ.&lt;/div&gt;<br>
<br>
&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;span&nbsp;class=&quot;&quot;&nbsp;style=&quot;white-space:pre&quot;&gt;&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&lt;/span&gt;[&lt;a&nbsp;href=&quot;https://github.com/issuu/amqp_client/commit/d8b64beb31f0aa63df7624e240bc324a0ed3f8f8.patch&quot;&gt;https://github.com/issuu/amqp_client/commit/d8b64beb31f0aa63df7624e240bc324a0ed3f8f8.patch&lt;/a&gt;]&lt;/div&gt;<br>
<br>
&lt;div&gt;&lt;span&nbsp;class=&quot;&quot;&nbsp;style=&quot;white-space:pre&quot;&gt;&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&lt;/span&gt;[&lt;a&nbsp;href=&quot;https://github.com/issuu/amqp_client/commit/5f01fd355e82a4e6555e646d4f9fb6a521ef1911.patch&quot;&gt;https://github.com/issuu/amqp_client/commit/5f01fd355e82a4e6555e646d4f9fb6a521ef1911.patch&lt;/a&gt;]&lt;/div&gt;<br>
<br>
&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;##&nbsp;Next&nbsp;optimizations&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;After&nbsp;these&nbsp;optimizations&nbsp;we&nbsp;have&nbsp;the&nbsp;following&nbsp;breakdown:&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;span&nbsp;class=&quot;&quot;&nbsp;style=&quot;white-space:pre&quot;&gt;&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&lt;/span&gt;amqp_channels_manager&lt;span&nbsp;class=&quot;&quot;&nbsp;style=&quot;white-space:pre&quot;&gt;&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&lt;/span&gt;9.91%&nbsp;time&lt;/div&gt;<br>
<br>
&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;It&nbsp;uses&nbsp;its&nbsp;time&nbsp;for&nbsp;two&nbsp;things.&nbsp;First,&nbsp;for&nbsp;decoding&nbsp;incoming&nbsp;frames.&nbsp;And&nbsp;secondly&nbsp;on&nbsp;looking&nbsp;up&nbsp;and&nbsp;updating&nbsp;a&nbsp;`gb_trees`&nbsp;structure&nbsp;mapping&nbsp;to&nbsp;the&nbsp;channel.&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;span&nbsp;class=&quot;&quot;&nbsp;style=&quot;white-space:pre&quot;&gt;&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&lt;/span&gt;amqp_main_reader&lt;span&nbsp;class=&quot;&quot;&nbsp;style=&quot;white-space:pre&quot;&gt;&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&lt;/span&gt;8.64%&nbsp;time&lt;/div&gt;<br>
<br>
&lt;div&gt;&lt;span&nbsp;class=&quot;&quot;&nbsp;style=&quot;white-space:pre&quot;&gt;&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&lt;/span&gt;amqp_main_reader&lt;span&nbsp;class=&quot;&quot;&nbsp;style=&quot;white-space:pre&quot;&gt;&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&lt;/span&gt;7.43%&nbsp;time&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;Most&nbsp;of&nbsp;the&nbsp;time&nbsp;is&nbsp;now&nbsp;spent&nbsp;decoding&nbsp;and&nbsp;analyzing&nbsp;frames&nbsp;in&nbsp;the&nbsp;two&nbsp;main&nbsp;reader&nbsp;processes.&nbsp;They&nbsp;are&nbsp;not&nbsp;working&nbsp;on&nbsp;the&nbsp;socket&nbsp;and&nbsp;using&nbsp;around&nbsp;20%&nbsp;cpu&nbsp;each.&nbsp;Rather,&nbsp;they&nbsp;are&nbsp;spending&nbsp;the&nbsp;time&nbsp;in&nbsp;the&nbsp;frame&nbsp;decoder&nbsp;loop,&nbsp;which&nbsp;is&nbsp;exactly&nbsp;where&nbsp;we&nbsp;want&nbsp;them&nbsp;to&nbsp;spend&nbsp;their&nbsp;time.&nbsp;Optimizing&nbsp;further&nbsp;is&nbsp;definitely&nbsp;a&nbsp;great&nbsp;idea,&nbsp;but&nbsp;Amdahl&nbsp;tells&nbsp;us&nbsp;there&nbsp;are&nbsp;other&nbsp;culprits&nbsp;where&nbsp;we&nbsp;can&nbsp;gain&nbsp;more&nbsp;by&nbsp;optimizing.&lt;/div&gt;<br>
<br>
&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;span&nbsp;class=&quot;&quot;&nbsp;style=&quot;white-space:pre&quot;&gt;&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&lt;/span&gt;amqp_channels_manager&lt;span&nbsp;class=&quot;&quot;&nbsp;style=&quot;white-space:pre&quot;&gt;&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&lt;/span&gt;8.81%&nbsp;time&lt;/div&gt;&lt;div&gt;&lt;span&nbsp;class=&quot;&quot;&nbsp;style=&quot;white-space:pre&quot;&gt;&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&lt;/span&gt;amqp_direct_consumer&lt;span&nbsp;class=&quot;&quot;&nbsp;style=&quot;white-space:pre&quot;&gt;&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&lt;/span&gt;4.32%&nbsp;time&lt;/div&gt;<br>
<br>
&lt;div&gt;&lt;span&nbsp;class=&quot;&quot;&nbsp;style=&quot;white-space:pre&quot;&gt;&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&lt;/span&gt;amqp_channel&lt;span&nbsp;class=&quot;&quot;&nbsp;style=&quot;white-space:pre&quot;&gt;&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&lt;/span&gt;13.11%&nbsp;time&lt;/div&gt;&lt;div&gt;&lt;span&nbsp;class=&quot;&quot;&nbsp;style=&quot;white-space:pre&quot;&gt;&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&lt;/span&gt;rabbit_writer&lt;span&nbsp;class=&quot;&quot;&nbsp;style=&quot;white-space:pre&quot;&gt;&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&lt;/span&gt;14.45%&nbsp;time&lt;/div&gt;<br>
<br>
&lt;div&gt;&lt;span&nbsp;class=&quot;&quot;&nbsp;style=&quot;white-space:pre&quot;&gt;&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&lt;/span&gt;&lt;/div&gt;&lt;div&gt;This&nbsp;is&nbsp;around&nbsp;66.6%&nbsp;of&nbsp;all&nbsp;time&nbsp;spent&nbsp;for&nbsp;the&nbsp;selected&nbsp;processes&nbsp;and&nbsp;their&nbsp;underlying&nbsp;modules.&nbsp;The&nbsp;remaining&nbsp;33%&nbsp;are&nbsp;in&nbsp;the&nbsp;same&nbsp;modules,&nbsp;but&nbsp;for&nbsp;processes&nbsp;that&nbsp;spend&nbsp;less&nbsp;than&nbsp;2%&nbsp;time&nbsp;each.&nbsp;For&nbsp;the&nbsp;second&nbsp;round,&nbsp;the&nbsp;major&nbsp;processes&nbsp;to&nbsp;look&nbsp;into&nbsp;is&nbsp;the&nbsp;channel&nbsp;itself&nbsp;and&nbsp;the&nbsp;rabbit_writer&nbsp;process.&nbsp;Perhaps&nbsp;looking&nbsp;at&nbsp;the&nbsp;latter&nbsp;can&nbsp;tell&nbsp;us&nbsp;why&nbsp;packets&nbsp;are&nbsp;so&nbsp;small.&nbsp;And&nbsp;looking&nbsp;into&nbsp;the&nbsp;former&nbsp;can&nbsp;explain&nbsp;why&nbsp;we&nbsp;spend&nbsp;so&nbsp;much&nbsp;time&nbsp;handling&nbsp;channels.&lt;/div&gt;<br>
<br>
&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;Let&nbsp;us&nbsp;look&nbsp;at&nbsp;what&nbsp;the&nbsp;`rabbit_writer`&nbsp;is&nbsp;doing.&nbsp;It&nbsp;manages&nbsp;writing&nbsp;of&nbsp;frames&nbsp;to&nbsp;the&nbsp;underlying&nbsp;socket.&nbsp;It&nbsp;can&nbsp;write&nbsp;in&nbsp;two&nbsp;modes,&nbsp;which&nbsp;are&nbsp;the&nbsp;ubiquituous&nbsp;async&nbsp;and&nbsp;sync&nbsp;variants.&nbsp;The&nbsp;idea&nbsp;is&nbsp;that&nbsp;you&nbsp;can&nbsp;buffer&nbsp;up&nbsp;writes&nbsp;before&nbsp;pushing&nbsp;them&nbsp;onto&nbsp;the&nbsp;socket,&nbsp;which&nbsp;is&nbsp;running&nbsp;in&nbsp;TCP_NODELAY&nbsp;mode.&nbsp;This&nbsp;means&nbsp;that&nbsp;we&nbsp;can&nbsp;get&nbsp;low&nbsp;latency&nbsp;operation,&nbsp;but&nbsp;it&nbsp;also&nbsp;requires&nbsp;us&nbsp;to&nbsp;handle&nbsp;buffering&nbsp;in&nbsp;our&nbsp;end.&nbsp;Otherwise&nbsp;the&nbsp;packets&nbsp;will&nbsp;get&nbsp;small.&nbsp;Who&nbsp;calls&nbsp;rabbit&nbsp;writer?&lt;/div&gt;<br>
<br>
&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;span&nbsp;class=&quot;&quot;&nbsp;style=&quot;white-space:pre&quot;&gt;&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&lt;/span&gt;&nbsp;#&nbsp;`gg`&nbsp;is&nbsp;an&nbsp;alias&nbsp;for&nbsp;[git&nbsp;grep&nbsp;-n&nbsp;&quot;$@&quot;]&lt;/div&gt;&lt;div&gt;&lt;span&nbsp;class=&quot;&quot;&nbsp;style=&quot;white-space:pre&quot;&gt;&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&lt;/span&gt;&nbsp;;&nbsp;gg&nbsp;rabbit_writer:&lt;/div&gt;&lt;div&gt;&lt;span&nbsp;class=&quot;&quot;&nbsp;style=&quot;white-space:pre&quot;&gt;&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&lt;/span&gt;&nbsp;src/amqp_channel.erl:784:&nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&nbsp;&amp;nbsp;{network,&nbsp;none,&nbsp;_}&nbsp;&amp;nbsp;-&amp;gt;&nbsp;rabbit_writer:send_command_sync(W,&nbsp;Method);&lt;/div&gt;<br>
<br>
&lt;div&gt;&lt;span&nbsp;class=&quot;&quot;&nbsp;style=&quot;white-space:pre&quot;&gt;&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&lt;/span&gt;&nbsp;src/amqp_channel.erl:785:&nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&nbsp;&amp;nbsp;{network,&nbsp;_,&nbsp;_}&nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&nbsp;-&amp;gt;&nbsp;rabbit_writer:send_command_sync(W,&nbsp;Method,&lt;/div&gt;&lt;div&gt;&lt;span&nbsp;class=&quot;&quot;&nbsp;style=&quot;white-space:pre&quot;&gt;&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&lt;/span&gt;&nbsp;src/amqp_network_connection.erl:56:&nbsp;&amp;nbsp;&nbsp;&amp;nbsp;catch&nbsp;rabbit_writer:send_command_sync(Writer,&nbsp;Method).&lt;/div&gt;<br>
<br>
&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;Ouch!&nbsp;All&nbsp;writes&nbsp;are&nbsp;synchronous!&nbsp;This&nbsp;means&nbsp;we&nbsp;are&nbsp;forcing&nbsp;a&nbsp;flush&nbsp;to&nbsp;the&nbsp;underlying&nbsp;socket&nbsp;whenever&nbsp;we&nbsp;write&nbsp;something&nbsp;on&nbsp;it.&nbsp;And&nbsp;we&nbsp;are&nbsp;forcing&nbsp;a&nbsp;context&nbsp;switch&nbsp;from&nbsp;the&nbsp;`amqp_channel`&nbsp;code&nbsp;to&nbsp;the&nbsp;`rabbit_writer`&nbsp;all&nbsp;the&nbsp;time,&nbsp;even&nbsp;though&nbsp;we&nbsp;don't&nbsp;need&nbsp;to&nbsp;do&nbsp;so.&nbsp;This&nbsp;accounts&nbsp;for&nbsp;the&nbsp;small&nbsp;packets&nbsp;we&nbsp;are&nbsp;seeing&nbsp;when&nbsp;we&nbsp;are&nbsp;writing.&nbsp;The&nbsp;response&nbsp;is&nbsp;written&nbsp;on&nbsp;the&nbsp;socket&nbsp;and&nbsp;then&nbsp;it&nbsp;immediately&nbsp;pushes&nbsp;the&nbsp;result&nbsp;because&nbsp;of&nbsp;TCP_NODELAY.&nbsp;It&nbsp;also&nbsp;means&nbsp;each&nbsp;write&nbsp;results&nbsp;in&nbsp;a&nbsp;write&nbsp;to&nbsp;the&nbsp;underlying&nbsp;erlang&nbsp;`port()`&nbsp;which&nbsp;is&nbsp;quite&nbsp;expensive.&lt;/div&gt;<br>
<br>
&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;span&nbsp;class=&quot;&quot;&nbsp;style=&quot;white-space:pre&quot;&gt;&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&lt;/span&gt;[&lt;a&nbsp;href=&quot;https://github.com/issuu/amqp_client/commit/42856090936e7196eab6c8e71107a479883f97a9.patch&quot;&gt;https://github.com/issuu/amqp_client/commit/42856090936e7196eab6c8e71107a479883f97a9.patch&lt;/a&gt;]&lt;/div&gt;<br>
<br>
&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;RabbitMQ&nbsp;itself&nbsp;does&nbsp;not&nbsp;use&nbsp;the&nbsp;sync&nbsp;writes&nbsp;for&nbsp;anything&nbsp;but&nbsp;closing&nbsp;down&nbsp;the&nbsp;line.&nbsp;So&nbsp;we&nbsp;can&nbsp;probably&nbsp;safely&nbsp;change&nbsp;to&nbsp;use&nbsp;async&nbsp;writes&nbsp;on&nbsp;the&nbsp;socket.&nbsp;The&nbsp;change&nbsp;severely&nbsp;cuts&nbsp;down&nbsp;on&nbsp;the&nbsp;amount&nbsp;of&nbsp;calls&nbsp;to&nbsp;the&nbsp;`port()`&nbsp;since&nbsp;they&nbsp;can&nbsp;now&nbsp;happen&nbsp;in&nbsp;larger&nbsp;batches.&lt;/div&gt;<br>
<br>
&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;The&nbsp;change&nbsp;does&nbsp;not&nbsp;help&nbsp;too&nbsp;much&nbsp;on&nbsp;the&nbsp;packet&nbsp;sizes&nbsp;however.&nbsp;Most&nbsp;packets&nbsp;are&nbsp;still&nbsp;small&nbsp;due&nbsp;to&nbsp;TCP_NODELAY&nbsp;and&nbsp;due&nbsp;to&nbsp;how&nbsp;the&nbsp;processing&nbsp;is&nbsp;happening&nbsp;on&nbsp;the&nbsp;interface.&nbsp;The&nbsp;main&nbsp;loop&nbsp;looks&nbsp;like&nbsp;this:&lt;/div&gt;<br>
<br>
&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;span&nbsp;class=&quot;&quot;&nbsp;style=&quot;white-space:pre&quot;&gt;&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&lt;/span&gt;&nbsp;mainloop1(State)&nbsp;-&amp;gt;&lt;/div&gt;&lt;div&gt;&lt;span&nbsp;class=&quot;&quot;&nbsp;style=&quot;white-space:pre&quot;&gt;&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&lt;/span&gt;&nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&nbsp;receive&lt;/div&gt;&lt;div&gt;&lt;span&nbsp;class=&quot;&quot;&nbsp;style=&quot;white-space:pre&quot;&gt;&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&lt;/span&gt;&nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&nbsp;Message&nbsp;-&amp;gt;&nbsp;?MODULE:mainloop1(handle_message(Message,&nbsp;State))&lt;/div&gt;<br>
<br>
&lt;div&gt;&lt;span&nbsp;class=&quot;&quot;&nbsp;style=&quot;white-space:pre&quot;&gt;&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&lt;/span&gt;&nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&nbsp;after&nbsp;0&nbsp;-&amp;gt;&lt;/div&gt;&lt;div&gt;&lt;span&nbsp;class=&quot;&quot;&nbsp;style=&quot;white-space:pre&quot;&gt;&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&lt;/span&gt;&nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&nbsp;?MODULE:mainloop1(internal_flush(State))&lt;/div&gt;&lt;div&gt;&lt;span&nbsp;class=&quot;&quot;&nbsp;style=&quot;white-space:pre&quot;&gt;&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&lt;/span&gt;&nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&nbsp;end.&lt;/div&gt;<br>
<br>
&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;So&nbsp;if&nbsp;the&nbsp;mailbox&nbsp;is&nbsp;usually&nbsp;small,&nbsp;then&nbsp;we&nbsp;will&nbsp;often&nbsp;push&nbsp;out&nbsp;small&nbsp;packets.&nbsp;Looking&nbsp;at&nbsp;a&nbsp;running&nbsp;system&nbsp;through&nbsp;the&nbsp;`observer`&nbsp;application&nbsp;shows&nbsp;us&nbsp;that&nbsp;the&nbsp;main&nbsp;users&nbsp;of&nbsp;reductions&nbsp;in&nbsp;the&nbsp;system&nbsp;is&nbsp;currently&nbsp;`amqp_channels_mgr`&nbsp;and&nbsp;our&nbsp;muxing&nbsp;client&nbsp;we&nbsp;use&nbsp;for&nbsp;the&nbsp;test.&lt;/div&gt;<br>
<br>
&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;##&nbsp;Two&nbsp;major&nbsp;problems&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;The&nbsp;main&nbsp;problems&nbsp;at&nbsp;this&nbsp;point&nbsp;is&nbsp;two­fold:&nbsp;We&nbsp;spend&nbsp;a&nbsp;lot&nbsp;of&nbsp;time&nbsp;decoding&nbsp;and&nbsp;encoding&nbsp;packets.&nbsp;And&nbsp;we&nbsp;spend&nbsp;an&nbsp;extremely&nbsp;high&nbsp;amount&nbsp;of&nbsp;time&nbsp;finding&nbsp;the&nbsp;correct&nbsp;channel&nbsp;endpoint&nbsp;for&nbsp;a&nbsp;message.&nbsp;The&nbsp;reason&nbsp;for&nbsp;the&nbsp;latter&nbsp;is&nbsp;simply&nbsp;the&nbsp;fact&nbsp;that&nbsp;every&nbsp;time&nbsp;we&nbsp;find&nbsp;an&nbsp;appropriate&nbsp;channel&nbsp;process,&nbsp;we&nbsp;also&nbsp;update&nbsp;the&nbsp;appropriate&nbsp;assembler&nbsp;state.&nbsp;And&nbsp;we&nbsp;run&nbsp;the&nbsp;decoder&nbsp;loop&nbsp;in&nbsp;the&nbsp;channels&nbsp;manager.&amp;nbsp;&lt;/div&gt;<br>
<br>
&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;The&nbsp;assembler&nbsp;state&nbsp;is&nbsp;a&nbsp;protocol&nbsp;verifier.&nbsp;It&nbsp;tracks&nbsp;the&nbsp;protocol&nbsp;version&nbsp;and&nbsp;it&nbsp;checks&nbsp;the&nbsp;next&nbsp;frame&nbsp;matches&nbsp;the&nbsp;expected&nbsp;frame&nbsp;in&nbsp;question.&nbsp;This&nbsp;is&nbsp;of&nbsp;course&nbsp;a&nbsp;nice&nbsp;and&nbsp;necessary&nbsp;thing&nbsp;to&nbsp;do.&nbsp;But&nbsp;keeping&nbsp;all&nbsp;channels&nbsp;in&nbsp;the&nbsp;same&nbsp;process&nbsp;and&nbsp;managing&nbsp;the&nbsp;decoder&nbsp;loop&nbsp;like&nbsp;this&nbsp;is&nbsp;odd.&nbsp;We&nbsp;get&nbsp;no&nbsp;parallel&nbsp;execution&nbsp;on&nbsp;the&nbsp;connection&nbsp;and&nbsp;we&nbsp;have&nbsp;to&nbsp;update&nbsp;a&nbsp;state&nbsp;map&nbsp;for&nbsp;the&nbsp;assembler&nbsp;state&nbsp;all&nbsp;the&nbsp;time.&nbsp;Furthermore,&nbsp;by&nbsp;decoding&nbsp;first&nbsp;and&nbsp;then&nbsp;passing&nbsp;data,&nbsp;we&nbsp;will&nbsp;have&nbsp;to&nbsp;send&nbsp;more&nbsp;complex&nbsp;messages&nbsp;rather&nbsp;than&nbsp;simply&nbsp;a&nbsp;binary&nbsp;reference.&lt;/div&gt;<br>
<br>
&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;I&nbsp;would&nbsp;probably&nbsp;have&nbsp;chosen&nbsp;a&nbsp;design&nbsp;based&nbsp;on&nbsp;an&nbsp;ETS&nbsp;lookup&nbsp;table.&nbsp;And&nbsp;then&nbsp;have&nbsp;kept&nbsp;the&nbsp;state&nbsp;in&nbsp;the&nbsp;channel&nbsp;process&nbsp;itself&nbsp;to&nbsp;maximize&nbsp;parallel&nbsp;behaviour.&nbsp;In&nbsp;turn,&nbsp;we&nbsp;can&nbsp;avoid&nbsp;spending&nbsp;a&nbsp;lot&nbsp;of&nbsp;time&nbsp;updating&nbsp;internal&nbsp;memory&nbsp;state&nbsp;in&nbsp;a&nbsp;process&nbsp;on&nbsp;the&nbsp;critical&nbsp;path&nbsp;which&nbsp;would&nbsp;speed&nbsp;up&nbsp;the&nbsp;system&nbsp;by&nbsp;quite&nbsp;a&nbsp;lot.&nbsp;Also,&nbsp;we&nbsp;are&nbsp;paying&nbsp;reductions&nbsp;on&nbsp;busy&nbsp;channels.&nbsp;This&nbsp;will&nbsp;help&nbsp;fairness.&lt;/div&gt;<br>
<br>
&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;Also,&nbsp;this&nbsp;means&nbsp;we&nbsp;can&nbsp;do&nbsp;away&nbsp;with&nbsp;the&nbsp;channels_manager&nbsp;process&nbsp;entirely.&nbsp;There&nbsp;is&nbsp;no&nbsp;need&nbsp;since&nbsp;a&nbsp;decoded&nbsp;message&nbsp;can&nbsp;just&nbsp;be&nbsp;forwarded&nbsp;to&nbsp;the&nbsp;channel&nbsp;directly,&nbsp;skipping&nbsp;an&nbsp;unneeded&nbsp;message&nbsp;pass&nbsp;on&nbsp;the&nbsp;critical&nbsp;decoder&nbsp;path.&lt;/div&gt;<br>
<br>
&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;##&nbsp;More&nbsp;controversial&nbsp;patches&nbsp;to&nbsp;`rabbit_writer`&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;The&nbsp;writer&nbsp;process&nbsp;inside&nbsp;RabbitMQ&nbsp;is&nbsp;something&nbsp;I&nbsp;wanted&nbsp;to&nbsp;optimize&nbsp;as&nbsp;well,&nbsp;so&nbsp;I&nbsp;tried&nbsp;changing&nbsp;two&nbsp;things&nbsp;in&nbsp;it.&nbsp;First,&nbsp;I&nbsp;avoided&nbsp;a&nbsp;recomputation&nbsp;of&nbsp;`iolist_size/1`&nbsp;on&nbsp;every&nbsp;received&nbsp;message.&nbsp;And&nbsp;I&nbsp;just&nbsp;dropped&nbsp;keeping&nbsp;a&nbsp;small&nbsp;1414&nbsp;byte&nbsp;packet&nbsp;size&nbsp;around.&nbsp;The&nbsp;rationale&nbsp;is&nbsp;this:&nbsp;either&nbsp;we&nbsp;will&nbsp;be&nbsp;running&nbsp;at&nbsp;a&nbsp;high&nbsp;pace&nbsp;in&nbsp;the&nbsp;writer&nbsp;code&nbsp;and&nbsp;then&nbsp;easily&nbsp;exceed&nbsp;the&nbsp;1414&nbsp;byte&nbsp;packet&nbsp;size.&nbsp;In&nbsp;this&nbsp;case,&nbsp;bumping&nbsp;it&nbsp;to&nbsp;64&nbsp;kilobytes&nbsp;and&nbsp;making&nbsp;few&nbsp;calls&nbsp;to&nbsp;the&nbsp;underlying&nbsp;port&nbsp;seems&nbsp;to&nbsp;be&nbsp;the&nbsp;right&nbsp;thing&nbsp;to&nbsp;do.&nbsp;Otherwise,&nbsp;we&nbsp;will&nbsp;be&nbsp;running&nbsp;slowly,&nbsp;which&nbsp;means&nbsp;we&nbsp;will&nbsp;eventually&nbsp;be&nbsp;able&nbsp;to&nbsp;empty&nbsp;the&nbsp;mailbox&nbsp;of&nbsp;the&nbsp;writer&nbsp;process.&nbsp;When&nbsp;this&nbsp;happens,&nbsp;we&nbsp;will&nbsp;flush&nbsp;whatever&nbsp;is&nbsp;in&nbsp;our&nbsp;buffer&nbsp;anyway.&nbsp;The&nbsp;controversy&nbsp;is&nbsp;the&nbsp;fact&nbsp;that&nbsp;if&nbsp;we&nbsp;get&nbsp;into&nbsp;a&nbsp;situation&nbsp;where&nbsp;the&nbsp;writer&nbsp;is&nbsp;kept&nbsp;buffering&nbsp;all&nbsp;the&nbsp;time,&nbsp;then&nbsp;the&nbsp;64&nbsp;kilobyte&nbsp;window&nbsp;is&nbsp;quite&nbsp;large&nbsp;and&nbsp;may&nbsp;take&nbsp;time&nbsp;to&nbsp;fill.&nbsp;But&nbsp;I&nbsp;guess&nbsp;this&nbsp;won't&nbsp;happen&nbsp;since&nbsp;writing&nbsp;like&nbsp;this&nbsp;will&nbsp;be&nbsp;awfully&nbsp;fast&nbsp;and&nbsp;it&nbsp;is&nbsp;unlikely&nbsp;that&nbsp;you&nbsp;will&nbsp;be&nbsp;overwhelmed&nbsp;with&nbsp;exactly&nbsp;that&nbsp;kind&nbsp;of&nbsp;slow-but-steady&nbsp;trickling&nbsp;of&nbsp;messages&nbsp;in&nbsp;practice.&lt;/div&gt;<br>
<br>
&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;span&nbsp;class=&quot;&quot;&nbsp;style=&quot;white-space:pre&quot;&gt;&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&lt;/span&gt;[&lt;a&nbsp;href=&quot;https://github.com/issuu/rabbit_common/commit/62104657aaf2189e35eb28f93fa2033b28973dde.patch&quot;&gt;https://github.com/issuu/rabbit_common/commit/62104657aaf2189e35eb28f93fa2033b28973dde.patch&lt;/a&gt;]&lt;/div&gt;<br>
<br>
&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;While&nbsp;here,&nbsp;I&nbsp;don't&nbsp;know&nbsp;why&nbsp;we&nbsp;are&nbsp;producing&nbsp;an&nbsp;iolist()&nbsp;in&nbsp;the&nbsp;reverse&nbsp;direction&nbsp;of&nbsp;what&nbsp;we&nbsp;need.&nbsp;Rather,&nbsp;we&nbsp;can&nbsp;just&nbsp;build&nbsp;up&nbsp;an&nbsp;iolist()&nbsp;tree&nbsp;and&nbsp;then&nbsp;send&nbsp;it&nbsp;out&nbsp;over&nbsp;the&nbsp;line.&nbsp;This&nbsp;avoids&nbsp;a&nbsp;reverse&nbsp;on&nbsp;the&nbsp;critical&nbsp;path&nbsp;and&nbsp;there&nbsp;is&nbsp;no&nbsp;reason&nbsp;to&nbsp;do&nbsp;that:&lt;/div&gt;<br>
<br>
&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;span&nbsp;class=&quot;&quot;&nbsp;style=&quot;white-space:pre&quot;&gt;&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&lt;/span&gt;[&lt;a&nbsp;href=&quot;https://github.com/issuu/rabbit_common/commit/15c270fcb75ab758d312cf0e4d1d5864127f5244.patch&quot;&gt;https://github.com/issuu/rabbit_common/commit/15c270fcb75ab758d312cf0e4d1d5864127f5244.patch&lt;/a&gt;]&lt;/div&gt;<br>
<br>
&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;This&nbsp;patch&nbsp;is&nbsp;also&nbsp;slightly&nbsp;controversial&nbsp;since&nbsp;it&nbsp;may&nbsp;not&nbsp;be&nbsp;what&nbsp;you&nbsp;guys&nbsp;want&nbsp;to&nbsp;do.&nbsp;Furthermore,&nbsp;it&nbsp;did&nbsp;not&nbsp;increase&nbsp;the&nbsp;send&nbsp;and&nbsp;receive&nbsp;rates&nbsp;in&nbsp;a&nbsp;significant&nbsp;way&nbsp;in&nbsp;my&nbsp;tests.&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;<br>
<br>
&lt;div&gt;&lt;br&gt;&lt;/div&gt;--&nbsp;&lt;br&gt;J.<br>
&lt;/div&gt;<br>
_______________________________________________&lt;br&gt;rabbitmq-discuss&nbsp;mailing&nbsp;list&lt;br&gt;&lt;a&nbsp;href=&quot;mailto:rabbitmq-discuss@lists.rabbitmq.com&quot;&gt;rabbitmq-discuss@lists.rabbitmq.com&lt;/a&gt;&lt;br&gt;https://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss&lt;br&gt;&lt;/blockquote&gt;&lt;/div&gt;&lt;br&gt;&lt;/body&gt;&lt;/html&gt;
</tt>
