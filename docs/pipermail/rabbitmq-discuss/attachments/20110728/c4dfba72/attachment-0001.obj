diff -r 68a8204c89ba src/amqp_direct_consumer.erl
--- a/src/amqp_direct_consumer.erl	Wed Jul 27 16:03:16 2011 +0100
+++ b/src/amqp_direct_consumer.erl	Thu Jul 28 00:23:19 2011 +0200
@@ -54,7 +54,7 @@
 
 %% @private
 init([ConsumerPid]) ->
-    monitor(process, ConsumerPid),
+    erlang:monitor(process, ConsumerPid),
     {ok, ConsumerPid}.
 
 %% @private
diff -r 68a8204c89ba src/amqp_selective_consumer.erl
--- a/src/amqp_selective_consumer.erl	Wed Jul 27 16:03:16 2011 +0100
+++ b/src/amqp_selective_consumer.erl	Thu Jul 28 00:23:19 2011 +0200
@@ -101,7 +101,7 @@
         {true, #'basic.consume'{nowait = true}} ->
             {ok, State#state
              {consumers = dict:store(Tag, Pid, Consumers),
-              monitors  = dict:store(Pid, monitor(process, Pid), Monitors)}};
+              monitors  = dict:store(Pid, erlang:monitor(process, Pid), Monitors)}};
         {true, #'basic.consume'{nowait = false}} ->
             {ok, State#state{unassigned = Pid}};
         {false, #'basic.consume'{nowait = true}} ->
@@ -121,7 +121,7 @@
     State1 = State#state{consumers  =
                              dict:store(tag(BasicConsumeOk), Pid, Consumers),
                          monitors   =
-                             dict:store(Pid, monitor(process, Pid), Monitors),
+                             dict:store(Pid, erlang:monitor(process, Pid), Monitors),
                          unassigned = undefined},
     deliver(BasicConsumeOk, State1),
     {ok, State1}.
@@ -176,12 +176,12 @@
                            monitors         = Monitors}) ->
     case PrevPid of
         none -> ok;
-        _    -> demonitor(dict:fetch(PrevPid, Monitors)),
+        _    -> erlang:demonitor(dict:fetch(PrevPid, Monitors)),
                 dict:erase(PrevPid, Monitors)
     end,
     {reply, ok,
      State#state{default_consumer = Pid,
-                 monitors = dict:store(Pid, monitor(process, Pid),
+                 monitors = dict:store(Pid, erlang:monitor(process, Pid),
                                        Monitors)}}.
 
 %% @private
@@ -209,7 +209,7 @@
     Tag = tag(Cancel),
     case dict:find(Tag, Consumers) of
         {ok, Pid} -> MRef = dict:fetch(Pid, Monitors),
-                     demonitor(MRef),
+                     erlang:demonitor(MRef),
                      State#state{consumers = dict:erase(Tag, Consumers),
                                  monitors  = dict:erase(Pid, Monitors)};
         error     -> %% Untracked consumer. Do nothing.
