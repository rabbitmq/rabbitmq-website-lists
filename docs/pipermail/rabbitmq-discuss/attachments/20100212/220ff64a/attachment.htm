<tt>
Thanks&nbsp;for&nbsp;your&nbsp;response.&lt;br&gt;As&nbsp;per&nbsp;my&nbsp;code&nbsp;each&nbsp;thread&nbsp;is&nbsp;using&nbsp;different&nbsp;channel.&lt;br&gt;May&nbsp;I&nbsp;get&nbsp;any &nbsp;multi&nbsp;threaded&nbsp;C&nbsp;client&nbsp;samples?&lt;br&gt;Could&nbsp;you&nbsp;please&nbsp;let&nbsp;me&nbsp;know&nbsp;the&nbsp;constraints&nbsp;also?&lt;br&gt;&lt;br&gt;thanks,&lt;br&gt;Ragavendra.&lt;br&gt;<br>
&lt;br&gt;&lt;br&gt;&lt;div&nbsp;class=&quot;gmail_quote&quot;&gt;On&nbsp;Thu,&nbsp;Feb&nbsp;11,&nbsp;2010&nbsp;at&nbsp;9:37&nbsp;PM,&nbsp;Matthew&nbsp;Sackman&nbsp;&lt;span&nbsp;dir=&quot;ltr&quot;&gt;&amp;lt;&lt;a&nbsp;href=&quot;mailto:matthew@lshift.net&quot;&gt;matthew@lshift.net&lt;/a&gt;&amp;gt;&lt;/span&gt;&nbsp;wrote:&lt;br&gt;&lt;blockquote&nbsp;class=&quot;gmail_quote&quot;&nbsp;style=&quot;border-left:&nbsp;1px&nbsp;solid&nbsp;rgb(204,&nbsp;204,&nbsp;204);&nbsp;margin:&nbsp;0pt&nbsp;0pt&nbsp;0pt&nbsp;0.8ex;&nbsp;padding-left:&nbsp;1ex;&quot;&gt;<br>
Hi,&lt;br&gt;<br>
&lt;br&gt;<br>
I&amp;#39;m&nbsp;afraid&nbsp;the&nbsp;RabbitMQ-C&nbsp;client&nbsp;is&nbsp;highly&nbsp;experimental&nbsp;and&nbsp;not&nbsp;really&lt;br&gt;<br>
receiving&nbsp;much&nbsp;development&nbsp;attention&nbsp;at&nbsp;the&nbsp;moment.&nbsp;We&nbsp;would&nbsp;not&lt;br&gt;<br>
recommend&nbsp;it&nbsp;for&nbsp;production&nbsp;use&nbsp;-&nbsp;it&nbsp;has&nbsp;not&nbsp;been&nbsp;through&nbsp;our&nbsp;QA&lt;br&gt;<br>
processes.&nbsp;I&amp;#39;m&nbsp;fairly&nbsp;sure&nbsp;that&nbsp;you&nbsp;need&nbsp;to&nbsp;make&nbsp;sure&nbsp;that&nbsp;you&nbsp;don&amp;#39;t&nbsp;use&lt;br&gt;<br>
a&nbsp;channel&nbsp;from&nbsp;more&nbsp;than&nbsp;one&nbsp;thread,&nbsp;but&nbsp;I&nbsp;have&nbsp;a&nbsp;feeling&nbsp;there&nbsp;are&nbsp;even&lt;br&gt;<br>
more&nbsp;constraints&nbsp;than&nbsp;that.&nbsp;I&amp;#39;m&nbsp;afraid,&nbsp;if&nbsp;in&nbsp;doubt,&nbsp;don&amp;#39;t&nbsp;use&nbsp;the&nbsp;C&lt;br&gt;<br>
client,&nbsp;at&nbsp;the&nbsp;moment.&lt;br&gt;<br>
&lt;br&gt;<br>
Matthew&lt;br&gt;<br>
&lt;div&gt;&lt;div&gt;&lt;/div&gt;&lt;div&nbsp;class=&quot;h5&quot;&gt;&lt;br&gt;<br>
On&nbsp;Wed,&nbsp;Feb&nbsp;10,&nbsp;2010&nbsp;at&nbsp;05:41:49PM&nbsp;+0000,&nbsp;raghu&nbsp;a&nbsp;wrote:&lt;br&gt;<br>
&amp;gt;&nbsp;Hi,&lt;br&gt;<br>
&amp;gt;&lt;br&gt;<br>
&amp;gt;&nbsp;I&nbsp;am&nbsp;very&nbsp;new&nbsp;to&nbsp;RabbitMQ.&nbsp;we&nbsp;are&nbsp;using&nbsp;Rabbit&nbsp;MQ&nbsp;C&nbsp;API&nbsp;to&nbsp;talk&nbsp;with&nbsp;the&lt;br&gt;<br>
&amp;gt;&nbsp;broker.&lt;br&gt;<br>
&amp;gt;&nbsp;We&nbsp;are&nbsp;playing&nbsp;with&nbsp;the&nbsp;examples(with&nbsp;few&nbsp;modifications)&nbsp;given&nbsp;by&nbsp;RabbitMQ.&lt;br&gt;<br>
&amp;gt;&nbsp;We&nbsp;created&nbsp;one&nbsp;producer&nbsp;and&nbsp;one&nbsp;consumer&nbsp;with&nbsp;the&nbsp;same&nbsp;connection&nbsp;but&lt;br&gt;<br>
&amp;gt;&nbsp;difference&nbsp;channels.&lt;br&gt;<br>
&amp;gt;&nbsp;In&nbsp;the&nbsp;following&nbsp;code&nbsp;amqp_channel_open(conn,&nbsp;2)&nbsp;statement&nbsp;is&nbsp;causing&nbsp;the&nbsp;my&lt;br&gt;<br>
&amp;gt;&nbsp;main&nbsp;thread&nbsp;to&nbsp;block&lt;br&gt;<br>
&amp;gt;&nbsp;but&nbsp;if&nbsp;i&nbsp;move&nbsp;this&nbsp;statement&nbsp;before&nbsp;creating&nbsp;of&nbsp;consumer&nbsp;thread&nbsp;then&nbsp;every&lt;br&gt;<br>
&amp;gt;&nbsp;thing&nbsp;seems&nbsp;to&nbsp;be&nbsp;working.&lt;br&gt;<br>
&amp;gt;&lt;br&gt;<br>
&amp;gt;&nbsp;My&nbsp;code&nbsp;is&nbsp;as&nbsp;follows.&lt;br&gt;<br>
&amp;gt;&nbsp;static&nbsp;void&nbsp;send_batch(amqp_connection_&lt;br&gt;<br>
&amp;gt;&nbsp;state_t&nbsp;conn,&lt;br&gt;<br>
&amp;gt;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; char&nbsp;const&nbsp;*queue_name,&lt;br&gt;<br>
&amp;gt;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; int&nbsp;rate_limit,&lt;br&gt;<br>
&amp;gt;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; int&nbsp;message_count)&lt;br&gt;<br>
&amp;gt;&nbsp;{&lt;br&gt;<br>
&amp;gt;&nbsp; &nbsp;char&nbsp;message[256]&nbsp;=&nbsp;&amp;quot;test&amp;quot;;&lt;br&gt;<br>
&amp;gt;&nbsp; &nbsp;die_on_error(amqp_basic_publish(conn,&lt;br&gt;<br>
&amp;gt;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;2,&lt;br&gt;<br>
&amp;gt;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;amqp_cstring_bytes(&amp;quot;amq.direct&amp;quot;),&lt;br&gt;<br>
&amp;gt;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;amqp_cstring_bytes(queue_name),&lt;br&gt;<br>
&amp;gt;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;0,&lt;br&gt;<br>
&amp;gt;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;0,&lt;br&gt;<br>
&amp;gt;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;NULL,&lt;br&gt;<br>
&amp;gt;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;(amqp_bytes_t)&nbsp;{.len&nbsp;=&nbsp;sizeof(message),&lt;br&gt;<br>
&amp;gt;&nbsp;.bytes&nbsp;=&nbsp;message}),&lt;br&gt;<br>
&amp;gt;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &amp;quot;Publishing&amp;quot;);&lt;br&gt;<br>
&amp;gt;&nbsp; &nbsp; &nbsp;printf(&amp;quot;Message&nbsp;sent&nbsp;by&nbsp;producer\n&amp;quot;);&lt;br&gt;<br>
&amp;gt;&nbsp;}&lt;br&gt;<br>
&amp;gt;&lt;br&gt;<br>
&amp;gt;&nbsp;static&nbsp;void&nbsp;run(amqp_connection_state_t&nbsp;conn)&lt;br&gt;<br>
&amp;gt;&nbsp;{&lt;br&gt;<br>
&amp;gt;&nbsp; &nbsp;amqp_frame_t&nbsp;frame;&lt;br&gt;<br>
&amp;gt;&nbsp; &nbsp;int&nbsp;result;&lt;br&gt;<br>
&amp;gt;&nbsp; &nbsp;size_t&nbsp;body_received;&lt;br&gt;<br>
&amp;gt;&nbsp; &nbsp;size_t&nbsp;body_target;&lt;br&gt;<br>
&amp;gt;&nbsp; &nbsp;int&nbsp; received&nbsp;=&nbsp;0;&lt;br&gt;<br>
&amp;gt;&nbsp; &nbsp;while&nbsp;(1)&nbsp;{&lt;br&gt;<br>
&amp;gt;&nbsp; &nbsp; &nbsp;amqp_maybe_release_buffers(conn);&lt;br&gt;<br>
&amp;gt;&nbsp; &nbsp; &nbsp;result&nbsp;=&nbsp;amqp_simple_wait_frame(conn,&nbsp;&amp;amp;frame);&lt;br&gt;<br>
&amp;gt;&nbsp; &nbsp; &nbsp;if&nbsp;(result&nbsp;&amp;lt;=&nbsp;0)&nbsp;return;&lt;br&gt;<br>
&amp;gt;&nbsp; &nbsp; &nbsp;if&nbsp;(frame.frame_type&nbsp;!=&nbsp;AMQP_FRAME_METHOD)&lt;br&gt;<br>
&amp;gt;&nbsp; &nbsp; &nbsp; &nbsp;continue;&lt;br&gt;<br>
&amp;gt;&nbsp; &nbsp; &nbsp;if&nbsp;(&lt;a&nbsp;href=&quot;http://frame.payload.method.id&quot;&nbsp;target=&quot;_blank&quot;&gt;frame.payload.method.id&lt;/a&gt;&nbsp;!=&nbsp;AMQP_BASIC_DELIVER_METHOD)&lt;br&gt;<br>
&amp;gt;&nbsp; &nbsp; &nbsp; &nbsp;continue;&lt;br&gt;<br>
&amp;gt;&nbsp; &nbsp; &nbsp;result&nbsp;=&nbsp;amqp_simple_wait_frame(conn,&nbsp;&amp;amp;frame);&lt;br&gt;<br>
&amp;gt;&nbsp; &nbsp; &nbsp;if&nbsp;(result&nbsp;&amp;lt;=&nbsp;0)&nbsp;return;&lt;br&gt;<br>
&amp;gt;&nbsp; &nbsp; &nbsp;if&nbsp;(frame.frame_type&nbsp;!=&nbsp;AMQP_FRAME_HEADER)&nbsp;{&lt;br&gt;<br>
&amp;gt;&nbsp; &nbsp; &nbsp; &nbsp;abort();&lt;br&gt;<br>
&amp;gt;&nbsp; &nbsp; &nbsp;}&lt;br&gt;<br>
&amp;gt;&nbsp; &nbsp; &nbsp;body_target&nbsp;=&nbsp;frame.payload.properties.body_size;&lt;br&gt;<br>
&amp;gt;&nbsp; &nbsp; &nbsp;body_received&nbsp;=&nbsp;0;&lt;br&gt;<br>
&amp;gt;&nbsp; &nbsp; &nbsp;while&nbsp;(body_received&nbsp;&amp;lt;&nbsp;body_target)&nbsp;{&lt;br&gt;<br>
&amp;gt;&nbsp; &nbsp; &nbsp; &nbsp;result&nbsp;=&nbsp;amqp_simple_wait_frame(conn,&nbsp;&amp;amp;frame);&lt;br&gt;<br>
&amp;gt;&nbsp; &nbsp; &nbsp; &nbsp;if&nbsp;(result&nbsp;&amp;lt;=&nbsp;0)&nbsp;return;&lt;br&gt;<br>
&amp;gt;&nbsp; &nbsp; &nbsp; &nbsp;if&nbsp;(frame.frame_type&nbsp;!=&nbsp;AMQP_FRAME_BODY)&nbsp;{&lt;br&gt;<br>
&amp;gt;&nbsp; &nbsp; &nbsp;abort();&lt;br&gt;<br>
&amp;gt;&nbsp; &nbsp; &nbsp; &nbsp;}&lt;br&gt;<br>
&amp;gt;&nbsp; &nbsp; &nbsp; &nbsp;body_received&nbsp;+=&nbsp;frame.payload.body_fragment.len;&lt;br&gt;<br>
&amp;gt;&nbsp; &nbsp; &nbsp; &nbsp;assert(body_received&nbsp;&amp;lt;=&nbsp;body_target);&lt;br&gt;<br>
&amp;gt;&nbsp; &nbsp; &nbsp;}&lt;br&gt;<br>
&amp;gt;&nbsp; &nbsp; &nbsp;received++;&lt;br&gt;<br>
&amp;gt;&nbsp; &nbsp; &nbsp;printf(&amp;quot;received=%d\n&amp;quot;,received);&lt;br&gt;<br>
&amp;gt;&nbsp; &nbsp;}&lt;br&gt;<br>
&amp;gt;&nbsp;}&lt;br&gt;<br>
&amp;gt;&nbsp;void*&nbsp; consume(void*&nbsp;conn){&lt;br&gt;<br>
&amp;gt;&nbsp; &nbsp;run(*((amqp_connection_state_t*)conn));&lt;br&gt;<br>
&amp;gt;&nbsp;}&lt;br&gt;<br>
&amp;gt;&nbsp;int&nbsp;main(int&nbsp;argc,&nbsp;char&nbsp;const&nbsp;*&nbsp;const&nbsp;*argv)&nbsp;{&lt;br&gt;<br>
&amp;gt;&nbsp; &nbsp;char&nbsp;const&nbsp;*hostname=&amp;quot;127.0.0.1&amp;quot;;&lt;br&gt;<br>
&amp;gt;&nbsp; &nbsp;int&nbsp;port=&amp;quot;5672&amp;quot;;&lt;br&gt;<br>
&amp;gt;&nbsp; &nbsp;char&nbsp;const&nbsp;*exchange;&lt;br&gt;<br>
&amp;gt;&nbsp; &nbsp;char&nbsp;const&nbsp;*bindingkey;&lt;br&gt;<br>
&amp;gt;&nbsp; &nbsp;int&nbsp;sockfd;&lt;br&gt;<br>
&amp;gt;&nbsp; &nbsp;amqp_connection_state_t&nbsp;conn;&lt;br&gt;<br>
&amp;gt;&nbsp; &nbsp;amqp_bytes_t&nbsp;queuename;&lt;br&gt;<br>
&amp;gt;&nbsp; &nbsp;exchange&nbsp;=&nbsp;&amp;quot;amq.direct&amp;quot;;&nbsp;//argv[3];&lt;br&gt;<br>
&amp;gt;&nbsp; &nbsp;bindingkey&nbsp;=&nbsp;&amp;quot;test&nbsp;queue&amp;quot;;&nbsp;//argv[4];&lt;br&gt;<br>
&amp;gt;&nbsp; &nbsp;int&nbsp;rate_limit&nbsp;=&nbsp;100;&lt;br&gt;<br>
&amp;gt;&nbsp; &nbsp;int&nbsp;message_count&nbsp;=&nbsp;10000;&lt;br&gt;<br>
&amp;gt;&nbsp; &nbsp;conn&nbsp;=&nbsp;amqp_new_connection();&lt;br&gt;<br>
&amp;gt;&nbsp; &nbsp;die_on_error(sockfd&nbsp;=&nbsp;amqp_open_socket(hostname,&nbsp;port),&nbsp;&amp;quot;Opening&nbsp;socket&amp;quot;);&lt;br&gt;<br>
&amp;gt;&nbsp; &nbsp;amqp_set_sockfd(conn,&nbsp;sockfd);&lt;br&gt;<br>
&amp;gt;&nbsp; &nbsp;die_on_amqp_error(amqp_login(conn,&nbsp;&amp;quot;/&amp;quot;,&nbsp;0,&nbsp;131072,&nbsp;0,&lt;br&gt;<br>
&amp;gt;&nbsp;AMQP_SASL_METHOD_PLAIN,&nbsp;&amp;quot;guest&amp;quot;,&nbsp;&amp;quot;guest&amp;quot;),&lt;br&gt;<br>
&amp;gt;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&amp;quot;Logging&nbsp;in&amp;quot;);&lt;br&gt;<br>
&amp;gt;&nbsp; &nbsp;amqp_channel_open(conn,&nbsp;1);&lt;br&gt;<br>
&amp;gt;&nbsp; &nbsp;die_on_amqp_error(amqp_rpc_reply,&nbsp;&amp;quot;Opening&nbsp;channel&amp;quot;);&lt;br&gt;<br>
&amp;gt;&nbsp; &nbsp;{&lt;br&gt;<br>
&amp;gt;&nbsp; &nbsp; &nbsp;amqp_queue_declare_ok_t&nbsp;*r&nbsp;=&nbsp;amqp_queue_declare(conn,&nbsp;1,&lt;br&gt;<br>
&amp;gt;&nbsp;AMQP_EMPTY_BYTES,&nbsp;0,&nbsp;0,&nbsp;0,&nbsp;1,&lt;br&gt;<br>
&amp;gt;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;AMQP_EMPTY_TABLE);&lt;br&gt;<br>
&amp;gt;&nbsp; &nbsp; &nbsp;die_on_amqp_error(amqp_rpc_reply,&nbsp;&amp;quot;Declaring&nbsp;queue&amp;quot;);&lt;br&gt;<br>
&amp;gt;&nbsp; &nbsp; &nbsp;queuename&nbsp;=&nbsp;amqp_bytes_malloc_dup(r-&amp;gt;queue);&lt;br&gt;<br>
&amp;gt;&nbsp; &nbsp; &nbsp;if&nbsp;(queuename.bytes&nbsp;==&nbsp;NULL)&nbsp;{&lt;br&gt;<br>
&amp;gt;&nbsp; &nbsp; &nbsp; &nbsp;die_on_error(-ENOMEM,&nbsp;&amp;quot;Copying&nbsp;queue&nbsp;name&amp;quot;);&lt;br&gt;<br>
&amp;gt;&nbsp; &nbsp; &nbsp;}&lt;br&gt;<br>
&amp;gt;&nbsp; &nbsp;}&lt;br&gt;<br>
&amp;gt;&nbsp; &nbsp;amqp_queue_bind(conn,&nbsp;1,&nbsp;queuename,&nbsp;amqp_cstring_bytes(exchange),&lt;br&gt;<br>
&amp;gt;&nbsp;amqp_cstring_bytes(bindingkey),&lt;br&gt;<br>
&amp;gt;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;AMQP_EMPTY_TABLE);&lt;br&gt;<br>
&amp;gt;&nbsp; &nbsp;die_on_amqp_error(amqp_rpc_reply,&nbsp;&amp;quot;Binding&nbsp;queue&amp;quot;);&lt;br&gt;<br>
&amp;gt;&lt;br&gt;<br>
&amp;gt;&nbsp; &nbsp;amqp_basic_consume(conn,&nbsp;1,&nbsp;queuename,&nbsp;AMQP_EMPTY_BYTES,&nbsp;0,&nbsp;1,&nbsp;0);&lt;br&gt;<br>
&amp;gt;&nbsp; &nbsp;die_on_amqp_error(amqp_rpc_reply,&nbsp;&amp;quot;Consuming&amp;quot;);&lt;br&gt;<br>
&amp;gt;&nbsp; &nbsp;pthread_t&nbsp;threadId;&lt;br&gt;<br>
&amp;gt;&nbsp; &nbsp;pthread_create(&amp;amp;threadId,NULL,consume,(void*)&amp;amp;conn);&lt;br&gt;<br>
&amp;gt;&nbsp; &nbsp;sleep(1);&lt;br&gt;<br>
&amp;gt;&nbsp; &nbsp;amqp_channel_open(conn,&nbsp;2);&lt;br&gt;<br>
&amp;gt;&nbsp; &nbsp;send_batch(conn,&nbsp;&amp;quot;test&nbsp;queue&amp;quot;,&nbsp;rate_limit,&nbsp;message_count);&lt;br&gt;<br>
&amp;gt;&nbsp; &nbsp;die_on_amqp_error(amqp_channel_close(conn,&nbsp;1,&nbsp;AMQP_REPLY_SUCCESS),&lt;br&gt;<br>
&amp;gt;&nbsp;&amp;quot;Closing&nbsp;channel&amp;quot;);&lt;br&gt;<br>
&amp;gt;&nbsp; &nbsp;die_on_amqp_error(amqp_connection_close(conn,&nbsp;AMQP_REPLY_SUCCESS),&lt;br&gt;<br>
&amp;gt;&nbsp;&amp;quot;Closing&nbsp;connection&amp;quot;);&lt;br&gt;<br>
&amp;gt;&nbsp; &nbsp;amqp_destroy_connection(conn);&lt;br&gt;<br>
&amp;gt;&nbsp; &nbsp;die_on_error(close(sockfd),&nbsp;&amp;quot;Closing&nbsp;socket&amp;quot;);&lt;br&gt;<br>
&amp;gt;&nbsp; &nbsp;return&nbsp;0;&lt;br&gt;<br>
&amp;gt;&nbsp;}&lt;br&gt;<br>
&amp;gt;&lt;br&gt;<br>
&amp;gt;&nbsp;Please&nbsp;provide&nbsp;me&nbsp;the&nbsp;reasons&nbsp;for&nbsp;blocking.&lt;br&gt;<br>
&amp;gt;&lt;br&gt;<br>
&amp;gt;&nbsp;Thanks,&lt;br&gt;<br>
&amp;gt;&nbsp;Ragavendra.&lt;br&gt;<br>
&lt;br&gt;<br>
&lt;/div&gt;&lt;/div&gt;&amp;gt;&nbsp;_______________________________________________&lt;br&gt;<br>
&amp;gt;&nbsp;rabbitmq-discuss&nbsp;mailing&nbsp;list&lt;br&gt;<br>
&amp;gt;&nbsp;&lt;a&nbsp;href=&quot;mailto:rabbitmq-discuss@lists.rabbitmq.com&quot;&gt;rabbitmq-discuss@lists.rabbitmq.com&lt;/a&gt;&lt;br&gt;<br>
&amp;gt;&nbsp;&lt;a&nbsp;href=&quot;http://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss&quot;&nbsp;target=&quot;_blank&quot;&gt;http://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss&lt;/a&gt;&lt;br&gt;<br>
&lt;br&gt;<br>
&lt;br&gt;<br>
_______________________________________________&lt;br&gt;<br>
rabbitmq-discuss&nbsp;mailing&nbsp;list&lt;br&gt;<br>
&lt;a&nbsp;href=&quot;mailto:rabbitmq-discuss@lists.rabbitmq.com&quot;&gt;rabbitmq-discuss@lists.rabbitmq.com&lt;/a&gt;&lt;br&gt;<br>
&lt;a&nbsp;href=&quot;http://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss&quot;&nbsp;target=&quot;_blank&quot;&gt;http://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss&lt;/a&gt;&lt;br&gt;<br>
&lt;/blockquote&gt;&lt;/div&gt;&lt;br&gt;<br>

</tt>
