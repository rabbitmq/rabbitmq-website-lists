<tt>
&lt;div&nbsp;dir=&quot;ltr&quot;&gt;&lt;div&gt;Created&nbsp;Cluster&nbsp;with&nbsp;two&nbsp;rabbitMQ&nbsp;nodes.&nbsp;Configuration&nbsp;is&nbsp;as&nbsp;below&nbsp;for&nbsp;rabbit1&nbsp;and&nbsp;rabbit2&nbsp;nodes.&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt; &nbsp; &nbsp;1&amp;gt;&nbsp;CachingConnectionFactory&nbsp;connectionFactory&nbsp;=&nbsp;new&nbsp;CachingConnectionFactory();&lt;/div&gt;<br>
&lt;div&gt; &nbsp; &nbsp;connectionFactory.setAddresses(&amp;quot;rabbit1:5672,rabbit2:5672&amp;quot;);&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;2&amp;gt;&nbsp;node&nbsp;types&lt;/div&gt;&lt;div&gt;rabbit1&nbsp;-&nbsp;disc&nbsp;node&lt;/div&gt;&lt;div&gt;rabbit2&nbsp;-&nbsp;ram&nbsp;node&lt;/div&gt;&lt;div&gt;3&amp;gt;&nbsp;producer&nbsp;and&nbsp;consumer&nbsp;programs&nbsp;sits&nbsp;on&nbsp;rabbit2&nbsp;node(ie&amp;gt;&nbsp;ram&nbsp;node)&lt;/div&gt;<br>
&lt;div&gt; &nbsp;  &lt;/div&gt;&lt;div&gt; &nbsp; &nbsp;4&amp;gt;&nbsp;Producer&nbsp;sample&nbsp;code&nbsp;-&lt;/div&gt;&lt;div&gt; &nbsp; &nbsp;String&nbsp;QueueName&nbsp;=&nbsp;&amp;quot;Queue.&amp;quot;;&lt;/div&gt;&lt;div&gt; &nbsp; &nbsp;for(int&nbsp;m=0;&nbsp;m&amp;lt;50000;&nbsp;m++){&lt;/div&gt;&lt;div&gt; &nbsp; &nbsp;&lt;span&nbsp;class=&quot;&quot;&nbsp;style=&quot;white-space:pre&quot;&gt;&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&lt;/span&gt;//&nbsp;send&nbsp;message&lt;/div&gt;<br>
&lt;div&gt; &nbsp; &nbsp;&lt;span&nbsp;class=&quot;&quot;&nbsp;style=&quot;white-space:pre&quot;&gt;&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&lt;/span&gt;System.out.println(this.rabbitTemplate.getConnectionFactory().getHost());&lt;/div&gt;&lt;div&gt; &nbsp; &nbsp;&lt;span&nbsp;class=&quot;&quot;&nbsp;style=&quot;white-space:pre&quot;&gt;&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&lt;/span&gt;this.rabbitTemplate.convertAndSend(m);&lt;/div&gt;<br>
&lt;div&gt; &nbsp; &nbsp;&lt;span&nbsp;class=&quot;&quot;&nbsp;style=&quot;white-space:pre&quot;&gt;&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&lt;/span&gt;/*Thread.sleep(100);*/&lt;/div&gt;&lt;div&gt; &nbsp; &nbsp;}&lt;/div&gt;&lt;div&gt; &nbsp;  &lt;/div&gt;&lt;div&gt; &nbsp; &nbsp;5&amp;gt;&nbsp;consumer&nbsp;code&nbsp;-&lt;/div&gt;&lt;div&gt; &nbsp; &nbsp;String&nbsp;QueueName&nbsp;=&nbsp;&amp;quot;Queue.&amp;quot;;&lt;/div&gt;&lt;div&gt; &nbsp; &nbsp;public&nbsp;void&nbsp;run()&nbsp;{&lt;/div&gt;<br>
&lt;div&gt; &nbsp; &nbsp;&lt;span&nbsp;class=&quot;&quot;&nbsp;style=&quot;white-space:pre&quot;&gt;&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&lt;/span&gt;System.out.println(&amp;quot;Consumer&nbsp;running&nbsp;host&nbsp;:&nbsp;&amp;quot;&nbsp;+&nbsp;this.connectionFactory.getHost());&lt;/div&gt;&lt;div&gt; &nbsp; &nbsp;&lt;span&nbsp;class=&quot;&quot;&nbsp;style=&quot;white-space:pre&quot;&gt;&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&lt;/span&gt;SimpleMessageListenerContainer&nbsp;container&nbsp;=&nbsp;new&nbsp;SimpleMessageListenerContainer();&lt;/div&gt;<br>
&lt;div&gt; &nbsp; &nbsp;&lt;span&nbsp;class=&quot;&quot;&nbsp;style=&quot;white-space:pre&quot;&gt;&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&lt;/span&gt;container.setConnectionFactory(this.connectionFactory);&lt;/div&gt;&lt;div&gt; &nbsp; &nbsp;&lt;span&nbsp;class=&quot;&quot;&nbsp;style=&quot;white-space:pre&quot;&gt;&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&lt;/span&gt;container.setQueueNames(this.queueName);&lt;/div&gt;&lt;div&gt;<br>
 &nbsp; &nbsp;&lt;span&nbsp;class=&quot;&quot;&nbsp;style=&quot;white-space:pre&quot;&gt;&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&lt;/span&gt;container.setMessageListener(new&nbsp;MessageListenerAdapter(new&nbsp;TestMessageHandler(this.connectionFactory.getHost()),&nbsp;new&nbsp;JsonMessageConverter())); &lt;/div&gt;&lt;div&gt; &nbsp; &nbsp;&lt;span&nbsp;class=&quot;&quot;&nbsp;style=&quot;white-space:pre&quot;&gt;&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&lt;/span&gt;container.start();&lt;/div&gt;<br>
&lt;div&gt; &nbsp; &nbsp;}&lt;/div&gt;&lt;div&gt; &nbsp;  &lt;/div&gt;&lt;div&gt; &nbsp; &nbsp;TestMessageHandler&nbsp;class&nbsp;sample&nbsp;code-&lt;/div&gt;&lt;div&gt; &nbsp;  &lt;/div&gt;&lt;div&gt; &nbsp; &nbsp;&lt;span&nbsp;class=&quot;&quot;&nbsp;style=&quot;white-space:pre&quot;&gt;&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&lt;/span&gt;public&nbsp;TestMessageHandler(String&nbsp;hostName){&lt;/div&gt;&lt;div&gt; &nbsp; &nbsp;&lt;span&nbsp;class=&quot;&quot;&nbsp;style=&quot;white-space:pre&quot;&gt;&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&lt;/span&gt;System.out.println(&amp;quot;Host:&nbsp;&amp;quot;&nbsp;+&nbsp;hostName);&lt;/div&gt;<br>
&lt;div&gt; &nbsp; &nbsp;&lt;span&nbsp;class=&quot;&quot;&nbsp;style=&quot;white-space:pre&quot;&gt;&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&lt;/span&gt;this.hostName&nbsp;=&nbsp;hostName;&lt;/div&gt;&lt;div&gt; &nbsp; &nbsp;&lt;span&nbsp;class=&quot;&quot;&nbsp;style=&quot;white-space:pre&quot;&gt;&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&lt;/span&gt;}&lt;/div&gt;&lt;div&gt; &nbsp; &nbsp;&lt;span&nbsp;class=&quot;&quot;&nbsp;style=&quot;white-space:pre&quot;&gt;&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&lt;/span&gt;&lt;/div&gt;&lt;div&gt; &nbsp; &nbsp;&lt;span&nbsp;class=&quot;&quot;&nbsp;style=&quot;white-space:pre&quot;&gt;&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&lt;/span&gt;//&nbsp;Handle&nbsp;message&lt;/div&gt;<br>
&lt;div&gt; &nbsp; &nbsp;&lt;span&nbsp;class=&quot;&quot;&nbsp;style=&quot;white-space:pre&quot;&gt;&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&lt;/span&gt;public&nbsp;void&nbsp;handleMessage(int&nbsp;message)&nbsp;{&lt;/div&gt;&lt;div&gt; &nbsp; &nbsp;&lt;span&nbsp;class=&quot;&quot;&nbsp;style=&quot;white-space:pre&quot;&gt;&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&lt;/span&gt;System.out.println(&amp;quot;handleMessage&nbsp;Host:&nbsp;&amp;quot;&nbsp;+&nbsp;this.hostName);&lt;/div&gt;<br>
&lt;div&gt; &nbsp; &nbsp;&lt;span&nbsp;class=&quot;&quot;&nbsp;style=&quot;white-space:pre&quot;&gt;&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&lt;/span&gt;System.out.println(&amp;quot;Int&nbsp;:&nbsp;&amp;quot;&nbsp;+&nbsp;message);&lt;/div&gt;&lt;div&gt; &nbsp; &nbsp;&lt;span&nbsp;class=&quot;&quot;&nbsp;style=&quot;white-space:pre&quot;&gt;&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&lt;/span&gt;}&lt;/div&gt;&lt;div&gt; &nbsp; &nbsp;&lt;span&nbsp;class=&quot;&quot;&nbsp;style=&quot;white-space:pre&quot;&gt;&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&lt;/span&gt;&lt;/div&gt;<br>
&lt;div&gt; &nbsp; &nbsp;6&amp;gt;&nbsp;Each&nbsp;node&nbsp;executed&nbsp;below&nbsp;policy&lt;/div&gt;&lt;div&gt; &nbsp; &nbsp;cmd&amp;gt;&nbsp;rabbitmqctl&nbsp;set_policy&nbsp;ha-all&nbsp;&amp;quot;^Queue\.&amp;quot;&nbsp;&amp;quot;{&amp;quot;&amp;quot;ha-mode&amp;quot;&amp;quot;:&amp;quot;&amp;quot;all&amp;quot;&amp;quot;}&amp;quot;&lt;/div&gt;&lt;div&gt; &nbsp;  &lt;/div&gt;&lt;div&gt; &nbsp; &nbsp;7&amp;gt;&nbsp;Started&nbsp;producer&nbsp;and&nbsp;consumer&nbsp;simultaneously.&nbsp;Could&nbsp;see&nbsp;host&nbsp;name&nbsp;as&nbsp;&amp;quot;rabbit1&amp;quot;&nbsp;then&nbsp;stopped&nbsp;&amp;quot;rabbit1&amp;quot;&nbsp;node&nbsp;with&nbsp;&amp;quot;rabbitmqctl&nbsp;stop_app&amp;quot;&nbsp;command&nbsp;to&nbsp;test&nbsp;fail-over&nbsp;scenario.&nbsp;Then&nbsp;got&nbsp;the&nbsp;below&nbsp;error&lt;/div&gt;<br>
&lt;div&gt; &nbsp;  &lt;/div&gt;&lt;div&gt; &nbsp; &nbsp; &nbsp; &nbsp;WARN&nbsp; [.listener.SimpleMessageListenerContainer]:&nbsp;Consumer&nbsp;raised&nbsp;exception,&nbsp;processing&nbsp;can&nbsp;restart&nbsp;if&nbsp;the&nbsp;connection&nbsp;factory&nbsp;supports&nbsp;it&lt;/div&gt;&lt;div&gt; &nbsp; &nbsp; &nbsp; &nbsp;com.rabbitmq.client.ShutdownSignalException:&nbsp;connection&nbsp;error;&nbsp;reason:&nbsp;{#method&amp;lt;connection.close&amp;gt;(reply-code=541,&nbsp;reply-text=INTERNAL_ERROR,&nbsp;class-id=0,&nbsp;method-id=0),&nbsp;null,&nbsp;&amp;quot;&amp;quot;}&lt;/div&gt;<br>
&lt;div&gt; &nbsp; &nbsp; &nbsp; &nbsp;&lt;span&nbsp;class=&quot;&quot;&nbsp;style=&quot;white-space:pre&quot;&gt;&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&lt;/span&gt;at&nbsp;com.rabbitmq.client.impl.AMQConnection.startShutdown(AMQConnection.java:678)&lt;/div&gt;&lt;div&gt; &nbsp; &nbsp; &nbsp; &nbsp;&lt;span&nbsp;class=&quot;&quot;&nbsp;style=&quot;white-space:pre&quot;&gt;&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&lt;/span&gt;at&nbsp;com.rabbitmq.client.impl.AMQConnection.shutdown(AMQConnection.java:668)&lt;/div&gt;<br>
&lt;div&gt; &nbsp; &nbsp; &nbsp; &nbsp;&lt;span&nbsp;class=&quot;&quot;&nbsp;style=&quot;white-space:pre&quot;&gt;&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&lt;/span&gt;at&nbsp;com.rabbitmq.client.impl.AMQConnection.handleConnectionClose(AMQConnection.java:624)&lt;/div&gt;&lt;div&gt; &nbsp; &nbsp; &nbsp; &nbsp;&lt;span&nbsp;class=&quot;&quot;&nbsp;style=&quot;white-space:pre&quot;&gt;&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&lt;/span&gt;at&nbsp;com.rabbitmq.client.impl.AMQConnection.processControlCommand(AMQConnection.java:598)&lt;/div&gt;<br>
&lt;div&gt; &nbsp; &nbsp; &nbsp; &nbsp;&lt;span&nbsp;class=&quot;&quot;&nbsp;style=&quot;white-space:pre&quot;&gt;&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&lt;/span&gt;at&nbsp;com.rabbitmq.client.impl.AMQConnection$1.processAsync(AMQConnection.java:96)&lt;/div&gt;&lt;div&gt; &nbsp; &nbsp; &nbsp; &nbsp;&lt;span&nbsp;class=&quot;&quot;&nbsp;style=&quot;white-space:pre&quot;&gt;&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&lt;/span&gt;at&nbsp;com.rabbitmq.client.impl.AMQChannel.handleCompleteInboundCommand(AMQChannel.java:144)&lt;/div&gt;<br>
&lt;div&gt; &nbsp; &nbsp; &nbsp; &nbsp;&lt;span&nbsp;class=&quot;&quot;&nbsp;style=&quot;white-space:pre&quot;&gt;&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&lt;/span&gt;at&nbsp;com.rabbitmq.client.impl.AMQChannel.handleFrame(AMQChannel.java:91)&lt;/div&gt;&lt;div&gt; &nbsp; &nbsp; &nbsp; &nbsp;&lt;span&nbsp;class=&quot;&quot;&nbsp;style=&quot;white-space:pre&quot;&gt;&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&lt;/span&gt;at&nbsp;com.rabbitmq.client.impl.AMQConnection$MainLoop.run(AMQConnection.java:523)&lt;/div&gt;<br>
&lt;div&gt; &nbsp; &nbsp; &nbsp; &nbsp;INFO&nbsp; [.listener.SimpleMessageListenerContainer]:&nbsp;Restarting&nbsp;Consumer:&nbsp;tag=[amq.ctag-5CJ3YJYfMZDnJOnXsds6_Q],&nbsp;channel=Cached&nbsp;Rabbit&nbsp;Channel:&nbsp;AMQChannel(amqp://&lt;a&nbsp;href=&quot;http://guest@192.168.97.70:5672/,1&quot;&gt;guest@192.168.97.70:5672/,1&lt;/a&gt;),&nbsp;acknowledgeMode=AUTO&nbsp;local&nbsp;queue&nbsp;size=0&lt;/div&gt;<br>
&lt;div&gt; &nbsp;  &lt;/div&gt;&lt;div&gt; &nbsp; &nbsp;after&nbsp;this&nbsp;warning,&nbsp;again&nbsp;am&nbsp;getting&nbsp;host&nbsp;name&nbsp;as&nbsp;&amp;quot;rabbit1&amp;quot;&nbsp;only.&nbsp;actually&nbsp;it&nbsp;should&nbsp;be&nbsp;&amp;quot;rabbit2&amp;quot;&nbsp;as&nbsp;per&nbsp;my&nbsp;understanding&nbsp;but&nbsp;its&nbsp;not&nbsp;happening.&lt;/div&gt;&lt;div&gt; &nbsp;  &lt;/div&gt;&lt;div&gt; &nbsp; &nbsp; &nbsp; &nbsp;So,&nbsp;here&nbsp;are&nbsp;my&nbsp;Queries&nbsp;-&lt;/div&gt;<br>
&lt;div&gt; &nbsp; &nbsp; &nbsp;  &lt;/div&gt;&lt;div&gt; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;1&amp;gt;&nbsp;Why&nbsp;am&nbsp;getting&nbsp;host&nbsp;name&nbsp;as&nbsp;&amp;quot;rabbit1&amp;quot;&nbsp;even&nbsp;after&nbsp;stopping?&lt;/div&gt;&lt;div&gt; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;2&amp;gt;&nbsp;To&nbsp;test&nbsp;the&nbsp;fail-over&nbsp;do&nbsp;we&nbsp;require&nbsp;any&nbsp;load&nbsp;balancer?&lt;/div&gt;&lt;div&gt; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;3&amp;gt;&nbsp;If&nbsp;my&nbsp;steps&nbsp;are&nbsp;wrong&nbsp;for&nbsp;testing&nbsp;fail-over&nbsp;case,&nbsp;please&nbsp;provide&nbsp;steps&nbsp;for&nbsp;the&nbsp;same?&lt;/div&gt;<br>
&lt;div&gt; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;4&amp;gt;&nbsp;How&nbsp;to&nbsp;distribute&nbsp;queues/messages&nbsp;to&nbsp;particular&nbsp;node,&nbsp;as&nbsp;below,&nbsp;1-500&nbsp;messages/queues&nbsp;to&nbsp;node1,&nbsp;501-1000&nbsp;messages/queues&nbsp;to&nbsp;node2,&nbsp;etc.&lt;/div&gt;&lt;div&gt; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;5&amp;gt;&nbsp;Please&nbsp;let&nbsp;me&nbsp;know&nbsp;is&nbsp;there&nbsp;any&nbsp;other&nbsp;approach&nbsp;to&nbsp;test&nbsp;fail-over&nbsp;scenario?&lt;/div&gt;<br>
&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;Appreciate&nbsp;any&nbsp;help&nbsp;on&nbsp;this.&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;/div&gt;<br>

</tt>
