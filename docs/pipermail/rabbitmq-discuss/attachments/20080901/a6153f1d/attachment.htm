<tt>
&lt;div&nbsp;dir=&quot;ltr&quot;&gt;If&nbsp;you&nbsp;run&nbsp;with&nbsp;such&nbsp;short&nbsp;messages,&nbsp;what&nbsp;you&nbsp;are&nbsp;also&nbsp;indirectly&nbsp;measuring&nbsp;is&nbsp;the&nbsp;maximum&nbsp;efficiency&nbsp;of&nbsp;the&nbsp;AMQP&nbsp;protocol&nbsp;because&nbsp;almost&nbsp;all&nbsp;of&nbsp;the&nbsp;data&nbsp;will&nbsp;be&nbsp;AMQP&nbsp;PDU&nbsp;data.&lt;br&gt;&lt;br&gt;Another&nbsp;consideration&nbsp;is&nbsp;that&nbsp;when&nbsp;you&nbsp;run&nbsp;using&nbsp;basic.consume,&nbsp;RabbitMQ&nbsp;will&nbsp;push&nbsp;messages&nbsp;to&nbsp;the&nbsp;consumer&nbsp;as&nbsp;fast&nbsp;as&nbsp;possible.&nbsp;If&nbsp;the&nbsp;consumer&nbsp;is&nbsp;an&nbsp;Erlang&nbsp;process,&nbsp;all&nbsp;that&nbsp;achieves&nbsp;is&nbsp;to&nbsp;fill&nbsp;up&nbsp;the&nbsp;Erlang&amp;nbsp;&nbsp;consumer&amp;#39;s&nbsp;process&nbsp;message&nbsp;queue&nbsp;as&nbsp;fast&nbsp;as&nbsp;Erlang&nbsp;can&nbsp;take&nbsp;it&nbsp;(which&nbsp;is&nbsp;pretty&nbsp;fast).&nbsp;This&nbsp;only&nbsp;reflects&nbsp;the&nbsp;speed&nbsp;at&nbsp;which&nbsp;RabbitMQ&nbsp;can&nbsp;publish&nbsp;messages,&nbsp;not&nbsp;the&nbsp;end-to-end&nbsp;throughput&nbsp;of&nbsp;the&nbsp;system&nbsp;as&nbsp;such.&nbsp;However,&nbsp;I&nbsp;can&nbsp;think&nbsp;of&nbsp;a&nbsp;possible&nbsp;way&nbsp;around&nbsp;this&nbsp;(described&nbsp;later).&lt;br&gt;<br>
&lt;br&gt;I&nbsp;think&nbsp;we&nbsp;need&nbsp;a&nbsp;number&nbsp;of&nbsp;different&nbsp;approaches&nbsp;taken&nbsp;together.&lt;br&gt;&lt;br&gt;The&nbsp;first&nbsp;approach,&nbsp;which&nbsp;we&nbsp;could&nbsp;call&nbsp;the&nbsp;&amp;quot;pedal-to-the-metal&amp;quot;&nbsp;approach,&nbsp;would&nbsp;be&nbsp;to&nbsp;measure&nbsp;the&nbsp;theoretical&nbsp;maximum&nbsp;performance&nbsp;envelope&nbsp;for&nbsp;a&nbsp;specific&nbsp;hardware/OS&nbsp;platform,&nbsp;by&nbsp;running&nbsp;Erlang-only&nbsp;clients&nbsp;in-process&nbsp;with&nbsp;the&nbsp;Rabbit&nbsp;server&nbsp;(i.e.&nbsp;in&nbsp;the&nbsp;same&nbsp;VM).&nbsp;This&nbsp;would&nbsp;eliminate&nbsp;all&nbsp;networking&nbsp;because&nbsp;data&nbsp;would&nbsp;be&nbsp;passed&nbsp;between&nbsp;RabbitMQ&nbsp;and&nbsp;clients&nbsp;internally&nbsp;via&nbsp;Erlang.&nbsp;This&nbsp;probably&nbsp;represents&nbsp;the&nbsp;fastest&nbsp;possible&nbsp;model.&nbsp;At&nbsp;the&nbsp;same&nbsp;time,&nbsp;we&nbsp;would&nbsp;use&nbsp;the&nbsp;1-byte&nbsp;data&nbsp;suggested&nbsp;by&nbsp;Martin,&nbsp;because&nbsp;that&nbsp;represents&nbsp;the&nbsp;smallest&nbsp;possible&nbsp;packets.&nbsp;The&nbsp;result&nbsp;of&nbsp;this&nbsp;benchmark&nbsp;would&nbsp;be&nbsp;a&nbsp;messages/second&nbsp;number&nbsp;that&nbsp;would&nbsp;represent&nbsp;the&nbsp;theoretical&nbsp;peak&nbsp;one&nbsp;could&nbsp;approach&nbsp;(for&nbsp;one&nbsp;producer&nbsp;and&nbsp;consumer).&lt;br&gt;<br>
&lt;br&gt;The&nbsp;above&nbsp;very&nbsp;synthetic&nbsp;benchmark&nbsp;could&nbsp;be&nbsp;used&nbsp;to&nbsp;probe&nbsp;system&nbsp;(i.e.&nbsp;hardware&nbsp;+&nbsp;OS&nbsp;+&nbsp;Erlang)&nbsp;specific&nbsp;parameters&nbsp;to&nbsp;push&nbsp;performance.&nbsp;Nobody&nbsp;would&nbsp;consider&nbsp;it&nbsp;to&nbsp;be&nbsp;realistic,&nbsp;but&nbsp;it&amp;#39;s&nbsp;still&nbsp;useful.&nbsp;For&nbsp;example,&nbsp;using&nbsp;+S&nbsp;1&nbsp;with&nbsp;multiple&nbsp;RMQ&nbsp;+&nbsp;client&nbsp;nodes;&nbsp;showing&nbsp;the&nbsp;effects&nbsp;of&nbsp;using&nbsp;kernel&nbsp;poll&nbsp;(should&nbsp;be&nbsp;nil&nbsp;because&nbsp;there&nbsp;are&nbsp;no&nbsp;sockets&nbsp;being&nbsp;used);&nbsp;pre-allocated&nbsp;Erlang&nbsp;process&nbsp;heaps;&nbsp;SMP&nbsp;Erlang&nbsp;vs&nbsp;single-CPU&nbsp;Erlang&nbsp;with&nbsp;and&nbsp;without&nbsp;processor&nbsp;affinity;&nbsp;and&nbsp;so&nbsp;on.&lt;br&gt;<br>
&lt;br&gt;Of&nbsp;course,&nbsp;what&nbsp;if&nbsp;you&nbsp;have&nbsp;multiple&nbsp;producers&nbsp;and&nbsp;consumers?&nbsp;How&nbsp;many&nbsp;channels&nbsp;do&nbsp;you&nbsp;use?&nbsp;How&nbsp;do&nbsp;you&nbsp;configure&nbsp;the&nbsp;exchange(s)?&nbsp;It&nbsp;rapidly&nbsp;becomes&nbsp;very&nbsp;complicated.&lt;br&gt;&lt;br&gt;The&nbsp;next&nbsp;approach&nbsp;could&nbsp;be&nbsp;to&nbsp;move&nbsp;the&nbsp;Erlang&nbsp;clients&nbsp;to&nbsp;a&nbsp;TCP/IP&nbsp;networking&nbsp;model&nbsp;(different&nbsp;VM,&nbsp;but&nbsp;on&nbsp;the&nbsp;same&nbsp;physical&nbsp;host,&nbsp;so&nbsp;hopefully&nbsp;it&amp;#39;s&nbsp;only&nbsp;the&nbsp;TCP/IP&nbsp;stack&nbsp;at&nbsp;play&nbsp;and&nbsp;no&nbsp;Ethernet&nbsp;hardware)&nbsp;and&nbsp;see&nbsp;the&nbsp;difference.&nbsp;Of&nbsp;course,&nbsp;this&nbsp;is&nbsp;tricky&nbsp;because&nbsp;the&nbsp;clients&nbsp;and&nbsp;servers&nbsp;are&nbsp;both&nbsp;on&nbsp;the&nbsp;same&nbsp;machine&nbsp;and&nbsp;may&nbsp;contend&nbsp;for&nbsp;resources.&lt;br&gt;<br>
&lt;br&gt;Then&nbsp;we&nbsp;could&nbsp;move&nbsp;the&nbsp;clients&nbsp;to&nbsp;a&nbsp;different&nbsp;host&nbsp;altogether&nbsp;and&nbsp;hope&nbsp;the&nbsp;Ethernet&nbsp;speed&nbsp;is&nbsp;not&nbsp;a&nbsp;significant&nbsp;limitation.&nbsp;The&nbsp;resource&nbsp;bottleneck&nbsp;probably&nbsp;becomes&nbsp;the&nbsp;LAN&nbsp;hardware&nbsp;here.&lt;br&gt;&lt;br&gt;Then&nbsp;we&nbsp;could&nbsp;start&nbsp;trying&nbsp;clustered&nbsp;RabbitMQ&nbsp;servers&nbsp;on&nbsp;multiple&nbsp;hosts,&nbsp;and&nbsp;this&nbsp;is&nbsp;where&nbsp;it&nbsp;stops&nbsp;for&nbsp;most&nbsp;people&nbsp;(including&nbsp;me)&nbsp;because&nbsp;they&nbsp;don&amp;#39;t&nbsp;have&nbsp;the&nbsp;resources.&lt;br&gt;<br>
&lt;br&gt;For&nbsp;each&nbsp;test,&nbsp;we&nbsp;could&nbsp;vary&nbsp;the&nbsp;message&nbsp;sizes&nbsp;and&nbsp;see&nbsp;the&nbsp;effect&nbsp;on&nbsp;message&nbsp;rate&nbsp;and&nbsp;throughput.&nbsp;We&nbsp;could&nbsp;also&nbsp;try&nbsp;persistent&nbsp;vs.&nbsp;non-persistent,&nbsp;basic.get&nbsp;vs&nbsp;basic.consume,&nbsp;and&nbsp;so&nbsp;on.&nbsp;There&nbsp;are&nbsp;so&nbsp;many&nbsp;possible&nbsp;variations&nbsp;that&nbsp;this&nbsp;could&nbsp;become&nbsp;a&nbsp;full-time&nbsp;job!&lt;br&gt;<br>
&lt;br&gt;&nbsp;As&nbsp;Martin&nbsp;points&nbsp;out,&nbsp;measuring&nbsp;throughput&nbsp;can&nbsp;be&nbsp;tricky.&nbsp;I&nbsp;suggest&nbsp;some&nbsp;sort&nbsp;of&nbsp;feedback&nbsp;mechanism&nbsp;to&nbsp;adjust&nbsp;the&nbsp;speed&nbsp;at&nbsp;which&nbsp;messages&nbsp;are&nbsp;sent.&nbsp;For&nbsp;example,&nbsp;the&nbsp;Erlang&nbsp;client&nbsp;could&nbsp;write&nbsp;its&nbsp;message&nbsp;consumption&nbsp;rate&nbsp;each&nbsp;second&nbsp;into&nbsp;an&nbsp;ets&nbsp;table,&nbsp;which&nbsp;the&nbsp;producer&nbsp;could&nbsp;read.&nbsp;As&nbsp;long&nbsp;as&nbsp;the&nbsp;rate&nbsp;goes&nbsp;up,&nbsp;the&nbsp;producer&nbsp;keeps&nbsp;pumping&nbsp;more&nbsp;through.&nbsp;As&nbsp;soon&nbsp;as&nbsp;the&nbsp;producer&nbsp;sees&nbsp;the&nbsp;rate&nbsp;plateau&nbsp;or&nbsp;even&nbsp;drop,&nbsp;averaged&nbsp;over&nbsp;a&nbsp;few&nbsp;measurements&nbsp;to&nbsp;prevent&nbsp;hysteresis,&nbsp;it&nbsp;cuts&nbsp;back.&nbsp;When&nbsp;the&nbsp;Erlang&nbsp;client&nbsp;is&nbsp;in&nbsp;a&nbsp;different&nbsp;VM,&nbsp;this&nbsp;is&nbsp;more&nbsp;complicated,&nbsp;but&nbsp;you&nbsp;get&nbsp;the&nbsp;idea.&nbsp;Also,&nbsp;a&nbsp;problem&nbsp;is&nbsp;that&nbsp;the&nbsp;feedback&nbsp;mechanism&nbsp;itself&nbsp;has&nbsp;CPU&nbsp;and&nbsp;networking&nbsp;overhead&nbsp;which&nbsp;will&nbsp;have&nbsp;to&nbsp;be&nbsp;taken&nbsp;into&nbsp;account.&nbsp;&lt;br&gt;<br>
&lt;br&gt;If&nbsp;the&nbsp;benchmarks&nbsp;are&nbsp;run&nbsp;for&nbsp;long&nbsp;enough&nbsp;(hours&nbsp;or&nbsp;even&nbsp;days),&nbsp;I&nbsp;think&nbsp;we&nbsp;might&nbsp;overcome&nbsp;some&nbsp;of&nbsp;the&nbsp;statistical&nbsp;issues&nbsp;that&nbsp;Martin&nbsp;mentions.&lt;br&gt;&lt;br&gt;My&nbsp;2c&nbsp;worth.&lt;br&gt;&lt;br&gt;&lt;div&nbsp;class=&quot;gmail_quote&quot;&gt;On&nbsp;Mon,&nbsp;Sep&nbsp;1,&nbsp;2008&nbsp;at&nbsp;4:09&nbsp;PM,&nbsp;Martin&nbsp;Sustrik&nbsp;&lt;span&nbsp;dir=&quot;ltr&quot;&gt;&amp;lt;&lt;a&nbsp;href=&quot;mailto:sustrik@imatix.com&quot;&gt;sustrik@imatix.com&lt;/a&gt;&amp;gt;&lt;/span&gt;&nbsp;wrote:&lt;br&gt;<br>
&lt;blockquote&nbsp;class=&quot;gmail_quote&quot;&nbsp;style=&quot;border-left:&nbsp;1px&nbsp;solid&nbsp;rgb(204,&nbsp;204,&nbsp;204);&nbsp;margin:&nbsp;0pt&nbsp;0pt&nbsp;0pt&nbsp;0.8ex;&nbsp;padding-left:&nbsp;1ex;&quot;&gt;&lt;br&gt;<br>
Just&nbsp;few&nbsp;hints:&lt;br&gt;<br>
&lt;br&gt;<br>
1.&nbsp;Measuring&nbsp;maximal&nbsp;throughput&nbsp;is&nbsp;tricky&nbsp;for&nbsp;various&nbsp;reasons,&nbsp;queueing&lt;br&gt;<br>
being&nbsp;only&nbsp;one&nbsp;of&nbsp;them.&nbsp;There&nbsp;are&nbsp;statistical&nbsp;and&nbsp;methodological&lt;br&gt;<br>
problems&nbsp;like&nbsp;hidden&nbsp;average,&nbsp;non-stability&nbsp;of&nbsp;the&nbsp;metric&nbsp;etc.&nbsp;However,&lt;br&gt;<br>
simple&nbsp;way&nbsp;to&nbsp;get&nbsp;*some*&nbsp;results&nbsp;is&nbsp;to&nbsp;run&nbsp;the&nbsp;tests&nbsp;with&nbsp;publisher&lt;br&gt;<br>
publishing&nbsp;messages&nbsp;at&nbsp;various&nbsp;rates.&nbsp;Maximal&nbsp;rate&nbsp;where&nbsp;latency&nbsp;doesn&amp;#39;t&lt;br&gt;<br>
increase&nbsp;ad&nbsp;infinitum&nbsp;can&nbsp;be&nbsp;considered&nbsp;&amp;quot;maximal&nbsp;throughput&amp;quot;.&lt;br&gt;<br>
&lt;br&gt;<br>
2.&nbsp;380,000&nbsp;256-byte&nbsp;messages&nbsp;a&nbsp;second&nbsp;is&nbsp;a&nbsp;nice&nbsp;result,&nbsp;however,&nbsp;it&lt;br&gt;<br>
doesn&amp;#39;t&nbsp;tell&nbsp;much&nbsp;about&nbsp;the&nbsp;messaging&nbsp;system.&nbsp;It&nbsp;simply&nbsp;means&nbsp;that&nbsp;the&lt;br&gt;<br>
system&nbsp;is&nbsp;able&nbsp;to&nbsp;exhaust&nbsp;1GbE&nbsp;with&nbsp;messages&nbsp;256&nbsp;bytes&nbsp;long.&nbsp;To&nbsp;get&nbsp;more&lt;br&gt;<br>
interesting&nbsp;results,&nbsp;test&nbsp;should&nbsp;be&nbsp;run&nbsp;with&nbsp;smaller&nbsp;messages&lt;br&gt;<br>
(preferably&nbsp;0&nbsp;or&nbsp;1&nbsp;bytes&nbsp;long)&nbsp;where&nbsp;processing&nbsp;power&nbsp;will&nbsp;be&nbsp;the&lt;br&gt;<br>
bottleneck&nbsp;rather&nbsp;than&nbsp;the&nbsp;networking&nbsp;infrastructure.&lt;br&gt;<br>
&lt;br&gt;<br>
HTH.&lt;br&gt;<br>
&lt;font&nbsp;color=&quot;#888888&quot;&gt;Martin&lt;br&gt;<br>
&lt;/font&gt;&lt;div&gt;&lt;div&gt;&lt;/div&gt;&lt;div&nbsp;class=&quot;Wj3C7c&quot;&gt;&lt;br&gt;<br>
Matthias&nbsp;Radestock&nbsp;wrote:&lt;br&gt;<br>
&amp;gt;&nbsp;Michael,&lt;br&gt;<br>
&amp;gt;&lt;br&gt;<br>
&amp;gt;&nbsp;Mayne,&nbsp;Michael&nbsp;wrote:&lt;br&gt;<br>
&amp;gt;&lt;br&gt;<br>
&amp;gt;&amp;gt;&nbsp;Red&nbsp;has&nbsp;produced&nbsp;a&nbsp;paper&nbsp;recently&nbsp;(June&nbsp;2008)&nbsp;explaining&nbsp;its&nbsp;performance&lt;br&gt;<br>
&amp;gt;&amp;gt;&nbsp;testing&nbsp;lab&nbsp;that&nbsp;it&nbsp;did&nbsp;recently&nbsp;to&nbsp;show&nbsp;how&nbsp;optimised&nbsp;Red&nbsp;Hat&nbsp;on&nbsp;Intel&lt;br&gt;<br>
&amp;gt;&amp;gt;&nbsp;Xeon&nbsp;hardware&nbsp;can&nbsp;process&nbsp;very&nbsp;high&nbsp;message&nbsp;rates:&lt;br&gt;<br>
&amp;gt;&amp;gt;&nbsp;&lt;a&nbsp;href=&quot;http://www.redhat.com/f/pdf/mrg/Reference_Architecture_MRG_Messaging_Thr&quot;&nbsp;target=&quot;_blank&quot;&gt;http://www.redhat.com/f/pdf/mrg/Reference_Architecture_MRG_Messaging_Thr&lt;/a&gt;&lt;br&gt;<br>
&amp;gt;&amp;gt;&nbsp;oughput.pdf&lt;br&gt;<br>
&amp;gt;&amp;gt;&lt;br&gt;<br>
&amp;gt;&amp;gt;&nbsp;This&nbsp;paper&nbsp;was&nbsp;presented&nbsp;at&nbsp;an&nbsp;Intel&nbsp;FasterCITY&nbsp;-&nbsp;fasterMESSAGING&nbsp;event&lt;br&gt;<br>
&amp;gt;&amp;gt;&nbsp;in&nbsp;London&nbsp;on&nbsp;23&nbsp;June.&lt;br&gt;<br>
&amp;gt;&amp;gt;&nbsp;&lt;a&nbsp;href=&quot;http://www.intelfasterfs.com/fastermessaging/&quot;&nbsp;target=&quot;_blank&quot;&gt;http://www.intelfasterfs.com/fastermessaging/&lt;/a&gt;&lt;br&gt;<br>
&amp;gt;&amp;gt;&nbsp;It&nbsp;contains&nbsp;a&nbsp;description&nbsp;of&nbsp;the&nbsp;test&nbsp;bench&nbsp;it&nbsp;used&nbsp;to&nbsp;generate&nbsp;its&lt;br&gt;<br>
&amp;gt;&amp;gt;&nbsp;figures&nbsp;-&nbsp;which&nbsp;were&nbsp;a&nbsp;repeatable&nbsp;ingress&nbsp;rate&nbsp;of&nbsp;380,000&nbsp;(256&nbsp;byte)&lt;br&gt;<br>
&amp;gt;&amp;gt;&nbsp;messages&nbsp;per&nbsp;second.&nbsp;There&nbsp;is&nbsp;obviously&nbsp;a&nbsp;lot&nbsp;more&nbsp;to&nbsp;it&nbsp;-&nbsp;see&nbsp;the&nbsp;paper&lt;br&gt;<br>
&amp;gt;&amp;gt;&nbsp;for&nbsp;details.&lt;br&gt;<br>
&amp;gt;&amp;gt;&lt;br&gt;<br>
&amp;gt;&amp;gt;&nbsp;That&nbsp;could&nbsp;be&nbsp;a&nbsp;starter&nbsp;for&nbsp;ten.&lt;br&gt;<br>
&amp;gt;&lt;br&gt;<br>
&amp;gt;&nbsp;I&nbsp;am&nbsp;familiar&nbsp;with&nbsp;that&nbsp;report.&nbsp;The&nbsp;tests&nbsp;conducted&nbsp;are&nbsp;pretty&nbsp;similar&lt;br&gt;<br>
&amp;gt;&nbsp;to&nbsp;the&nbsp;ones&nbsp;we&nbsp;did&nbsp;with&nbsp;Intel&nbsp;last&nbsp;year&nbsp;and&nbsp;earlier&nbsp;this&nbsp;year&nbsp;(see&lt;br&gt;<br>
&amp;gt;&nbsp;&lt;a&nbsp;href=&quot;http://www.rabbitmq.com/resources/AMQP_Solution_Brief_final.pdf&quot;&nbsp;target=&quot;_blank&quot;&gt;http://www.rabbitmq.com/resources/AMQP_Solution_Brief_final.pdf&lt;/a&gt;).&lt;br&gt;<br>
&amp;gt;&lt;br&gt;<br>
&amp;gt;&nbsp;Unfortunately&nbsp;the&nbsp;test&nbsp;setup&nbsp;-&nbsp;&amp;quot;producers&nbsp;reliably&nbsp;en-queues&nbsp;messages&lt;br&gt;<br>
&amp;gt;&nbsp;onto&nbsp;the&nbsp;broker&nbsp;as&nbsp;fast&nbsp;as&nbsp;they&nbsp;can,&nbsp;consumers&nbsp;reliably&nbsp;de-queue&lt;br&gt;<br>
&amp;gt;&nbsp;messages&nbsp;from&nbsp;the&nbsp;broker&nbsp;as&nbsp;fast&nbsp;as&nbsp;they&nbsp;can&amp;quot;&nbsp;-&nbsp;isn&amp;#39;t&nbsp;addressing&nbsp;the&nbsp;key&lt;br&gt;<br>
&amp;gt;&nbsp;problem&nbsp;I&nbsp;described,&nbsp;namely&nbsp;controlling&nbsp;and&nbsp;adapting&nbsp;the&nbsp;ingress&nbsp;rate&nbsp;in&lt;br&gt;<br>
&amp;gt;&nbsp;order&nbsp;to&nbsp;maximise&nbsp;throughput.&lt;br&gt;<br>
&amp;gt;&lt;br&gt;<br>
&amp;gt;&lt;br&gt;<br>
&amp;gt;&nbsp;Matthias.&lt;br&gt;<br>
&amp;gt;&lt;br&gt;<br>
&amp;gt;&nbsp;_______________________________________________&lt;br&gt;<br>
&amp;gt;&nbsp;rabbitmq-discuss&nbsp;mailing&nbsp;list&lt;br&gt;<br>
&amp;gt;&nbsp;&lt;a&nbsp;href=&quot;mailto:rabbitmq-discuss@lists.rabbitmq.com&quot;&gt;rabbitmq-discuss@lists.rabbitmq.com&lt;/a&gt;&lt;br&gt;<br>
&amp;gt;&nbsp;&lt;a&nbsp;href=&quot;http://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss&quot;&nbsp;target=&quot;_blank&quot;&gt;http://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss&lt;/a&gt;&lt;br&gt;<br>
&lt;br&gt;<br>
&lt;br&gt;<br>
_______________________________________________&lt;br&gt;<br>
rabbitmq-discuss&nbsp;mailing&nbsp;list&lt;br&gt;<br>
&lt;a&nbsp;href=&quot;mailto:rabbitmq-discuss@lists.rabbitmq.com&quot;&gt;rabbitmq-discuss@lists.rabbitmq.com&lt;/a&gt;&lt;br&gt;<br>
&lt;a&nbsp;href=&quot;http://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss&quot;&nbsp;target=&quot;_blank&quot;&gt;http://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss&lt;/a&gt;&lt;br&gt;<br>
&lt;br&gt;<br>
&lt;/div&gt;&lt;/div&gt;&lt;/blockquote&gt;&lt;/div&gt;&lt;br&gt;&lt;br&nbsp;clear=&quot;all&quot;&gt;&lt;br&gt;--&nbsp;&lt;br&gt;For&nbsp;every&nbsp;expert&nbsp;there&nbsp;is&nbsp;an&nbsp;equal&nbsp;and&nbsp;opposite&nbsp;expert&nbsp;-&nbsp;Arthur&nbsp;C.&nbsp;Clarke&lt;br&gt;<br>
&lt;/div&gt;<br>

</tt>
