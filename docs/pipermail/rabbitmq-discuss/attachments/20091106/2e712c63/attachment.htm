<tt>
&lt;div&nbsp;class=&quot;gmail_quote&quot;&gt;On&nbsp;Fri,&nbsp;Nov&nbsp;6,&nbsp;2009&nbsp;at&nbsp;2:43&nbsp;AM,&nbsp;Matthew&nbsp;Sackman&nbsp;&lt;span&nbsp;dir=&quot;ltr&quot;&gt;&amp;lt;&lt;a&nbsp;href=&quot;mailto:matthew@lshift.net&quot;&gt;matthew@lshift.net&lt;/a&gt;&amp;gt;&lt;/span&gt;&nbsp;wrote:&lt;br&gt;&lt;blockquote&nbsp;class=&quot;gmail_quote&quot;&nbsp;style=&quot;border-left:&nbsp;1px&nbsp;solid&nbsp;rgb(204,&nbsp;204,&nbsp;204);&nbsp;margin:&nbsp;0pt&nbsp;0pt&nbsp;0pt&nbsp;0.8ex;&nbsp;padding-left:&nbsp;1ex;&quot;&gt;<br>
&lt;div&nbsp;class=&quot;im&quot;&gt;On&nbsp;Fri,&nbsp;Nov&nbsp;06,&nbsp;2009&nbsp;at&nbsp;10:06:20AM&nbsp;+0000,&nbsp;Matthew&nbsp;Sackman&nbsp;wrote:&lt;br&gt;<br>
&amp;gt;&nbsp;That&amp;#39;s&nbsp;fine.&nbsp;I&nbsp;have&nbsp;to&nbsp;say&nbsp;that&nbsp;it&amp;#39;s&nbsp;unlikely&nbsp;this&nbsp;patch&nbsp;will&nbsp;make&nbsp;it&lt;br&gt;<br>
&amp;gt;&nbsp;through&nbsp;-&nbsp;the&nbsp;memory&nbsp;management&nbsp;code&nbsp;has&nbsp;gone&nbsp;through&nbsp;a&nbsp;lot&nbsp;of&nbsp;change&lt;br&gt;<br>
&amp;gt;&nbsp;recently&nbsp;as&nbsp;we&amp;#39;re&nbsp;getting&nbsp;a&nbsp;much&nbsp;better&nbsp;handle&nbsp;on&nbsp;resource&nbsp;management.&lt;br&gt;&lt;/div&gt;&lt;/blockquote&gt;&lt;div&gt;Agreed.&nbsp;This&nbsp;is&nbsp;a&nbsp;definitely&nbsp;a&nbsp;workaround&nbsp;fix&nbsp;for&nbsp;the&nbsp;problem.&nbsp;In&nbsp;the&nbsp;interest&nbsp;of&nbsp;full&nbsp;disclosure,&nbsp;I&nbsp;have&nbsp;gotten&nbsp;rabbitmq&nbsp;to&nbsp;crash&nbsp;with&nbsp;this&nbsp;patch&nbsp;for&nbsp;the&nbsp;same&nbsp;reason,&nbsp;by&nbsp;getting&nbsp;the&nbsp;memory&nbsp;to&nbsp;spike&nbsp;before&nbsp;excess&nbsp;can&nbsp;be&nbsp;collected,&nbsp;so&nbsp;this&nbsp;isn&amp;#39;t&nbsp;a&nbsp;full&nbsp;fix&nbsp;by&nbsp;any&nbsp;means.&nbsp;I&nbsp;will&nbsp;try&nbsp;to&nbsp;dig&nbsp;further&nbsp;into&nbsp;the&nbsp;root&nbsp;cause&nbsp;in&nbsp;1.7.0&nbsp;release&nbsp;when&nbsp;I&nbsp;have&nbsp;time.&lt;br&gt;<br>
 &lt;/div&gt;&lt;blockquote&nbsp;class=&quot;gmail_quote&quot;&nbsp;style=&quot;border-left:&nbsp;1px&nbsp;solid&nbsp;rgb(204,&nbsp;204,&nbsp;204);&nbsp;margin:&nbsp;0pt&nbsp;0pt&nbsp;0pt&nbsp;0.8ex;&nbsp;padding-left:&nbsp;1ex;&quot;&gt;&lt;div&nbsp;class=&quot;im&quot;&gt;<br>
&amp;gt;&nbsp;Whilst&nbsp;you&amp;#39;ve&nbsp;obviously&nbsp;been&nbsp;working&nbsp;from&nbsp;the&nbsp;head&nbsp;of&nbsp;our&nbsp;default&nbsp;branch&lt;br&gt;<br>
&amp;gt;&nbsp;(many&nbsp;thanks!),&nbsp;there&nbsp;are&nbsp;a&nbsp;couple&nbsp;of&nbsp;issues&nbsp;with&nbsp;garbage&nbsp;collecting&lt;br&gt;<br>
&amp;gt;&nbsp;every&nbsp;process&nbsp;like&nbsp;that,&nbsp;for&nbsp;example,&nbsp;it&amp;#39;s&nbsp;possible&nbsp;that&nbsp;garbage&lt;br&gt;<br>
&amp;gt;&nbsp;collecting&nbsp;vast&nbsp;numbers&nbsp;of&nbsp;processes&nbsp;will&nbsp;take&nbsp;longer&nbsp;than&nbsp;the&lt;br&gt;<br>
&amp;gt;&nbsp;memory_check_interval,&nbsp;making&nbsp;messages&nbsp;queue&nbsp;up&nbsp;for&nbsp;the&nbsp;memory&nbsp;manager&lt;br&gt;<br>
&amp;gt;&nbsp;process.&nbsp;This&nbsp;would&nbsp;become&nbsp;a&nbsp;problem&nbsp;if&nbsp;the&nbsp;garbage&nbsp;collection&nbsp;is&nbsp;unable&lt;br&gt;<br>
&amp;gt;&nbsp;to&nbsp;reclaim&nbsp;any&nbsp;memory&nbsp;at&nbsp;all&nbsp;-&nbsp;eg&nbsp;millions&nbsp;of&nbsp;queues,&nbsp;all&nbsp;of&nbsp;which&nbsp;are&lt;br&gt;<br>
&amp;gt;&nbsp;empty.&lt;br&gt;&lt;/div&gt;&lt;/blockquote&gt;&lt;div&gt;However,&nbsp;with&nbsp;rabbit&amp;#39;s&nbsp;current&nbsp;memory&nbsp;problems,&nbsp;I&nbsp;wouldn&amp;#39;t&nbsp;run&nbsp;it&nbsp;with&nbsp;more&nbsp;than&nbsp;10&nbsp;queues,&nbsp;let&nbsp;alone&nbsp;millions&nbsp;;).&nbsp;I&nbsp;will&nbsp;give&nbsp;the&nbsp;java&nbsp;client&nbsp;test&nbsp;a&nbsp;try.&lt;br&gt; &lt;/div&gt;&lt;blockquote&nbsp;class=&quot;gmail_quote&quot;&nbsp;style=&quot;border-left:&nbsp;1px&nbsp;solid&nbsp;rgb(204,&nbsp;204,&nbsp;204);&nbsp;margin:&nbsp;0pt&nbsp;0pt&nbsp;0pt&nbsp;0.8ex;&nbsp;padding-left:&nbsp;1ex;&quot;&gt;<br>
&lt;div&nbsp;class=&quot;im&quot;&gt;<br>
&lt;br&gt;<br>
&lt;/div&gt;Some&nbsp;immediate&nbsp;ideas&nbsp;to&nbsp;improve&nbsp;this&nbsp;a&nbsp;little.&lt;br&gt;<br>
1)&nbsp;Only&nbsp;do&nbsp;the&nbsp;GC&nbsp;when&nbsp;you&nbsp;initially&nbsp;hit&nbsp;the&nbsp;memory&nbsp;alarm.&nbsp;I.e.&nbsp;in&nbsp;the&lt;br&gt;<br>
first&nbsp;case&nbsp;when&nbsp;going&nbsp;from&nbsp;non-alarmed&nbsp;to&nbsp;alarmed,&nbsp;put&nbsp;the&nbsp;gc&nbsp;in&nbsp;there,&lt;br&gt;<br>
then&nbsp;maybe&nbsp;recurse&nbsp;again&nbsp;(though&nbsp;you&amp;#39;ll&nbsp;likely&nbsp;want&nbsp;another&nbsp;param&nbsp;on&nbsp;the&lt;br&gt;<br>
function&nbsp;to&nbsp;stop&nbsp;infinite&nbsp;recursion).&lt;br&gt;&lt;/blockquote&gt;&lt;div&gt;This&nbsp;was&nbsp;my&nbsp;initial&nbsp;thought&nbsp;as&nbsp;well.&nbsp;However,&nbsp;by&nbsp;the&nbsp;time&nbsp;the&nbsp;alarm&nbsp;goes&nbsp;off,&nbsp;it&nbsp;is&nbsp;often&nbsp;too&nbsp;late&nbsp;for&nbsp;this&nbsp;to&nbsp;stop&nbsp;rabbit&nbsp;from&nbsp;crashing.&nbsp;For&nbsp;example,&nbsp;the&nbsp;default&nbsp;memory&nbsp;alarm&nbsp;is&nbsp;set&nbsp;to&nbsp;0.95.&nbsp;Many&nbsp;of&nbsp;the&nbsp;crashes&nbsp;where&nbsp;to&nbsp;due&nbsp;to&nbsp;a&nbsp;failed&nbsp;allocation&nbsp;of&nbsp;200-300&nbsp;MB&nbsp;by&nbsp;the&nbsp;VM.&nbsp;At&nbsp;4GB&nbsp;(rounding&nbsp;*up*),&nbsp;200&nbsp;MB&nbsp;is&nbsp;the&nbsp;limit&nbsp;of&nbsp;the&nbsp;allocation&nbsp;that&nbsp;can&nbsp;be&nbsp;made&nbsp;before&nbsp;garbage&nbsp;collecting&nbsp;(1&nbsp;-&nbsp;.2/4&nbsp;=&nbsp;0.95).&nbsp;So,&nbsp;if&nbsp;more&nbsp;is&nbsp;allocated,&nbsp;the&nbsp;server&nbsp;is&nbsp;dead&nbsp;in&nbsp;the&nbsp;water.&lt;br&gt;<br>
&lt;br&gt;&lt;/div&gt;&lt;blockquote&nbsp;class=&quot;gmail_quote&quot;&nbsp;style=&quot;border-left:&nbsp;1px&nbsp;solid&nbsp;rgb(204,&nbsp;204,&nbsp;204);&nbsp;margin:&nbsp;0pt&nbsp;0pt&nbsp;0pt&nbsp;0.8ex;&nbsp;padding-left:&nbsp;1ex;&quot;&gt;<br>
&lt;br&gt;<br>
2)&nbsp;Only&nbsp;put&nbsp;GC&nbsp;in&nbsp;processes&nbsp;that&nbsp;are&nbsp;known&nbsp;to&nbsp;eat&nbsp;lots&nbsp;of&nbsp;RAM.&nbsp;Eg&nbsp;if&lt;br&gt;<br>
it&amp;#39;s&nbsp;the&nbsp;persister,&nbsp;then&nbsp;putting&nbsp;in&nbsp;a&nbsp;manual&nbsp;GC&nbsp;right&nbsp;after&nbsp;it&nbsp;does&nbsp;a&lt;br&gt;<br>
snapshot&nbsp;is&nbsp;probably&nbsp;a&nbsp;good&nbsp;idea.&lt;br&gt;&lt;/blockquote&gt;&lt;div&gt;The&nbsp;persister&nbsp;is&nbsp;indeed&nbsp;where&nbsp;the&nbsp;binary&nbsp;memory&nbsp;is&nbsp;hanging&nbsp;around,&nbsp;but&nbsp;I&nbsp;am&nbsp;not&nbsp;sure&nbsp;if&nbsp;the&nbsp;snapshot&nbsp;point&nbsp;is&nbsp;the&nbsp;problem.&nbsp;The&nbsp;crashes&nbsp;happen&nbsp;when&nbsp;adding&nbsp;batches&nbsp;into&nbsp;the&nbsp;queue.&nbsp;Its&nbsp;like&nbsp;the&nbsp;persister&nbsp;can&amp;#39;t&nbsp;keep&nbsp;up.&nbsp;&lt;br&gt;<br>
&lt;br&gt;For&nbsp;now,&nbsp;I&nbsp;will&nbsp;try&nbsp;this&nbsp;at&nbsp;the&nbsp;same&nbsp;point&nbsp;shown&nbsp;in&nbsp;the&nbsp;patch,&nbsp;but&nbsp;only&nbsp;do&nbsp;the&nbsp;persister:&lt;br&gt;&lt;br&gt;garbage_collect(whereis(rabbit_persister)).&lt;br&gt;&lt;br&gt;I&nbsp;would&nbsp;say&nbsp;the&nbsp;correct&nbsp;pattern&nbsp;would&nbsp;be&nbsp;something&nbsp;like&nbsp;python&amp;#39;s&nbsp;MemoryError&nbsp;or&nbsp;handling&nbsp;of&nbsp;a&nbsp;malloc&nbsp;failure&nbsp;in&nbsp;C.&nbsp;Is&nbsp;there&nbsp;an&nbsp;exception&nbsp;that&nbsp;is&nbsp;thrown,&nbsp;where&nbsp;a&nbsp;garbage&nbsp;collect&nbsp;can&nbsp;be&nbsp;run?&nbsp;&lt;/div&gt;<br>
&lt;/div&gt;&lt;br&gt;_steve&lt;br&gt;<br>

</tt>
