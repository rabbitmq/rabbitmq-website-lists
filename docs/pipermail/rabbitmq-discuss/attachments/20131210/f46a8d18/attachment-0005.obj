package com.att.dlife.dlcore.mbus.client.demo;

import java.io.*;
  import java.security.*;
  import javax.net.ssl.*;

  import com.rabbitmq.client.*;


  public class SslWithCertSend
  {
      public static void main(String[] args) throws Exception
      {

     /*   char[] keyPassphrase = "MySecretPassword".toCharArray();
        KeyStore ks = KeyStore.getInstance("PKCS12");
        ks.load(new FileInputStream("/home/rabbitmq/my_rabbitmq_certs/client/keycert.p12"), keyPassphrase);

        char[] passphrase = "MySecretPassword".toCharArray();
        KeyManagerFactory kmf = KeyManagerFactory.getInstance("SunX509");
        kmf.init(ks, passphrase);
*/
        char[] trustPassphrase = "rabbitstore".toCharArray();  
        KeyStore tks = KeyStore.getInstance("JKS");
        FileInputStream fis=   new FileInputStream(".//resources//rabbitstore");
        tks.load(fis, trustPassphrase);

        TrustManagerFactory tmf = TrustManagerFactory.getInstance("SunX509");
        tmf.init(tks);

        SSLContext c = SSLContext.getInstance("SSLv3");
      //  c.init(kmf.getKeyManagers(), tmf.getTrustManagers(), null); 
        c.init(null, tmf.getTrustManagers(), null); 

        /*
 	if not using client-side cert:
		1) - code for KeyStore and KeyManagerFactory can be commented out
		2) - rabbitmq server (rabbitmq.config) must have setting "{fail_if_no_peer_cert,false}  
		 c.init(null, tmf.getTrustManagers(), null);
	*/

        ConnectionFactory factory = new ConnectionFactory();
        factory.setHost("135.187.175.238");
        factory.setPort(5671);
        factory.useSslProtocol(c);

        Connection conn = factory.newConnection();
        Channel channel = conn.createChannel();

        channel.queueDeclare("rabbitmq-java-test", false, false, true, null);
        channel.basicPublish("", "rabbitmq-java-test", null, "Hello, World".getBytes());


        channel.close();
        conn.close();
    }
}
