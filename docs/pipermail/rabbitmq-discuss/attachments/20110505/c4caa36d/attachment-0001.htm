<tt>
Good&nbsp;day,&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;While&nbsp;writing&nbsp;some&nbsp;code&nbsp;using&nbsp;the&nbsp;Ruby&nbsp;AMQP&nbsp;gem&nbsp;against&nbsp;RabbitMQ,&nbsp;I&amp;#39;ve&nbsp;noticed&nbsp;that&nbsp;if&nbsp;I&nbsp;publish&nbsp;a&nbsp;message&nbsp;and&nbsp;quickly&nbsp;close&nbsp;the&nbsp;connection,&nbsp;even&nbsp;though&nbsp;I&amp;#39;ve&nbsp;received&nbsp;a&nbsp;publish-ok&nbsp;response&nbsp;from&nbsp;the&nbsp;server,&nbsp;the&nbsp;message&nbsp;fails&nbsp;to&nbsp;be&nbsp;queued&nbsp;by&nbsp;the&nbsp;broker.&lt;/div&gt;<br>
&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;The&nbsp;code&nbsp;in&nbsp;question&nbsp;looks&nbsp;like:&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;require&nbsp;&amp;#39;amqp&amp;#39;&lt;/div&gt;&lt;div&gt;EM.run&nbsp;do&lt;/div&gt;&lt;div&gt;  client&nbsp; &nbsp;=&nbsp;AMQP.connect(:host&nbsp;=&amp;gt;&nbsp;&amp;#39;127.0.0.1&amp;#39;)&lt;/div&gt;&lt;div&gt;  channel&nbsp; =&nbsp;AMQP::Channel.new(client)&lt;/div&gt;<br>
&lt;div&gt;  channel.on_error&nbsp;{&nbsp;puts&nbsp;&amp;#39;channel&nbsp;error&amp;#39;;&nbsp;EM.stop&nbsp;}&lt;/div&gt;&lt;div&gt;  exchange&nbsp;=&nbsp;channel.topic&nbsp;&amp;#39;foo&amp;#39;,:durable&nbsp;=&amp;gt;&nbsp;true&lt;/div&gt;&lt;div&gt;  exchange.publish(&nbsp;&amp;#39;hello&nbsp;world&amp;#39;,&nbsp;:routing_key&nbsp;=&amp;gt;&nbsp;&amp;quot;some_topic&amp;quot;,&nbsp;:persistent&nbsp;=&amp;gt;&nbsp;true, :nowait&nbsp;=&amp;gt;&nbsp;false&nbsp;)&nbsp;{&nbsp;puts&nbsp;&amp;#39;publish-ok&amp;#39;;&nbsp;EM.stop&nbsp;}&lt;/div&gt;<br>
&lt;div&gt;end&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;I&nbsp;should&nbsp;clarify&nbsp;that&nbsp;there&nbsp;is&nbsp;a&nbsp;binding&nbsp;in&nbsp;place&nbsp;to&nbsp;route&nbsp;messages&nbsp;with&nbsp;routing_key&nbsp;&amp;quot;some_topic&amp;quot;&nbsp;to&nbsp;the&nbsp;a&nbsp;queue&nbsp;on&nbsp;the&nbsp;&amp;quot;foo&amp;quot;&nbsp;exchange.&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;If&nbsp;I&nbsp;remove&nbsp;the&nbsp;EM.stop&nbsp;call&nbsp;in&nbsp;the&nbsp;publish-ok&nbsp;callback,&nbsp;allowing&nbsp;the&nbsp;connection&nbsp;to&nbsp;exist&nbsp;after&nbsp;the&nbsp;publish,&nbsp;then&nbsp;I&nbsp;the&nbsp;message&nbsp;is&nbsp;queued.&lt;/div&gt;<br>
&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;Is&nbsp;this&nbsp;expected&nbsp;behavior?&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;I&nbsp;would&nbsp;expect&nbsp;that&nbsp;if&nbsp;the&nbsp;broker&nbsp;has&nbsp;responded&nbsp;with&nbsp;a&nbsp;publish-ok,&nbsp;then&nbsp;regardless&nbsp;of&nbsp;what&nbsp;happens&nbsp;to&nbsp;the&nbsp;connection&nbsp;from&nbsp;that&nbsp;point&nbsp;forward,&nbsp;it&nbsp;will&nbsp;do&nbsp;its&nbsp;best&nbsp;to&nbsp;deliver&nbsp;that&nbsp;message&nbsp;to&nbsp;a&nbsp;queue.&lt;/div&gt;<br>
&lt;br&gt;--&nbsp;&lt;br&gt;&lt;b&gt;Elias&nbsp;Levy&lt;/b&gt;&lt;div&gt;Fellow,&nbsp;Technical&nbsp;Research&nbsp;Group&lt;/div&gt;&lt;div&gt;SourceFire&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;br&gt;<br>
&lt;/div&gt;<br>

</tt>
