<tt>
Micheal,&nbsp;I&nbsp;looked&nbsp;at&nbsp;the&nbsp;links&nbsp;you&nbsp;sent&nbsp;me&nbsp;and&nbsp;based&nbsp;my&nbsp;new&nbsp;approach&nbsp;on&nbsp;them.&nbsp;And,&nbsp;I&nbsp;did&nbsp;the&nbsp;following&nbsp;(and&nbsp;no&nbsp;errors&nbsp;but&nbsp;it&amp;#39;s&nbsp;not&nbsp;doing&nbsp;what&nbsp;i&nbsp;wanted):&lt;br&gt;&lt;br&gt;I&nbsp;declared&nbsp;two&nbsp;queues&nbsp;q1&nbsp;and&nbsp;q2&nbsp;and&nbsp;bind&nbsp;them&nbsp;to&nbsp;a&nbsp;fanout&nbsp;exchange.&nbsp;Then&nbsp;I&nbsp;published&nbsp;the&nbsp;message&nbsp;to&nbsp;the&nbsp;exchange.&lt;br&gt;<br>
&lt;br&gt;On&nbsp;the&nbsp;receiving&nbsp;end&nbsp;of&nbsp;my&nbsp;application,&nbsp;I&nbsp;declared&nbsp;another&nbsp;queue&nbsp;(q3)&nbsp;and&nbsp;bind&nbsp;it&nbsp;to&nbsp;the&nbsp;same&nbsp;exchange.&nbsp;Then&nbsp;when&nbsp;I&nbsp;consume&nbsp;messages&nbsp;I&nbsp;consume&nbsp;from&nbsp;q3&nbsp;via&nbsp;the&nbsp;exchange&nbsp;I&nbsp;declared.&nbsp;But&nbsp;I&nbsp;don&amp;#39;t&nbsp;expect&nbsp;to&nbsp;get&nbsp;any&nbsp;messages&nbsp;since&nbsp;I&nbsp;send&nbsp;the&nbsp;messages&nbsp;to&nbsp;queues&nbsp;q1&nbsp;and&nbsp;q2&nbsp;but&nbsp;requesting&nbsp;a&nbsp;message&nbsp;from&nbsp;q3.&nbsp;The&nbsp;problem&nbsp;is,&nbsp;I&nbsp;still&nbsp;get&nbsp;messages.&nbsp;I&nbsp;could&nbsp;be&nbsp;asking&nbsp;a&nbsp;lot&nbsp;but&nbsp;please&nbsp;bear&nbsp;with&nbsp;me.&nbsp;Please&nbsp;look&nbsp;at&nbsp;the&nbsp;code&nbsp;I&nbsp;have&nbsp;and&nbsp;point&nbsp;me&nbsp;to&nbsp;the&nbsp;right&nbsp;direction:&lt;br&gt;<br>
&lt;br&gt;//EmitLog.cs&lt;br&gt;using&nbsp;System;&lt;br&gt;using&nbsp;RabbitMQ.Client;&lt;br&gt;&lt;br&gt;class&nbsp;EmitLog&nbsp;{&lt;br&gt;   &nbsp;public&nbsp;static&nbsp;void&nbsp;Main(string[]&nbsp;args)&nbsp;{&lt;br&gt;       &nbsp;ConnectionFactory&nbsp;factory&nbsp;=&nbsp;new&nbsp;ConnectionFactory();&lt;br&gt;       &nbsp;factory.HostName&nbsp;=&nbsp;&amp;quot;localhost&amp;quot;;&lt;br&gt;<br>
       &nbsp;using&nbsp;(IConnection&nbsp;connection&nbsp;=&nbsp;factory.CreateConnection())&lt;br&gt;       &nbsp;using&nbsp;(IModel&nbsp;channel&nbsp;=&nbsp;connection.CreateModel())&nbsp;{&lt;br&gt;           &nbsp;channel.ExchangeDeclare(&amp;quot;logs&amp;quot;,&nbsp;&amp;quot;fanout&amp;quot;);&lt;br&gt;   &nbsp;   &nbsp;   &nbsp;channel.QueueDeclare(&amp;quot;q1&amp;quot;,&nbsp;false,&nbsp;false,&nbsp;false,&nbsp;null);&lt;br&gt;<br>
   &nbsp;   &nbsp;   &nbsp;channel.QueueDeclare(&amp;quot;q2&amp;quot;,&nbsp;false,&nbsp;false,&nbsp;false,&nbsp;null);&lt;br&gt;   &nbsp;   &nbsp;   &nbsp;channel.QueueBind(&amp;quot;q1&amp;quot;,&nbsp;&amp;quot;logs&amp;quot;,&nbsp;&amp;quot;&amp;quot;);&lt;br&gt;           &nbsp;channel.QueueBind(&amp;quot;q2&amp;quot;,&nbsp;&amp;quot;logs&amp;quot;,&nbsp;&amp;quot;&amp;quot;);&lt;br&gt;<br>
   &nbsp;   &nbsp;   &nbsp;&lt;br&gt;           &nbsp;string&nbsp;message&nbsp;=&nbsp;(args.Length&nbsp;&amp;gt;&nbsp;0)&nbsp;?&nbsp;string.Join(&amp;quot;&nbsp;&amp;quot;,&nbsp;args)&lt;br&gt;                                              &nbsp;:&nbsp;&amp;quot;info:&nbsp;Hello&nbsp;World!&amp;quot;;&lt;br&gt;           &nbsp;byte[]&nbsp;body&nbsp;=&nbsp;System.Text.Encoding.UTF8.GetBytes(message);&lt;br&gt;<br>
           &nbsp;channel.BasicPublish(&amp;quot;logs&amp;quot;,&nbsp;&amp;quot;&amp;quot;,&nbsp;null,&nbsp;body);&lt;br&gt;   &nbsp;   &nbsp;   &nbsp;Console.WriteLine(&amp;quot;&nbsp;[x]&nbsp;Sent&nbsp;{0}&amp;quot;,&nbsp;message);&lt;br&gt;       &nbsp;}&lt;br&gt;   &nbsp;}&lt;br&gt;}&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;//ReceiveLogs.cs&lt;br&gt;using&nbsp;System;&lt;br&gt;<br>
using&nbsp;RabbitMQ.Client;&lt;br&gt;using&nbsp;RabbitMQ.Client.Events;&lt;br&gt;&lt;br&gt;class&nbsp;ReceiveLogs&nbsp;{&lt;br&gt;   &nbsp;public&nbsp;static&nbsp;void&nbsp;Main(string[]&nbsp;args)&nbsp;{&lt;br&gt;       &nbsp;ConnectionFactory&nbsp;factory&nbsp;=&nbsp;new&nbsp;ConnectionFactory();&lt;br&gt;       &nbsp;factory.HostName&nbsp;=&nbsp;&amp;quot;localhost&amp;quot;;&lt;br&gt;<br>
       &nbsp;using&nbsp;(IConnection&nbsp;connection&nbsp;=&nbsp;factory.CreateConnection())&lt;br&gt;       &nbsp;using&nbsp;(IModel&nbsp;channel&nbsp;=&nbsp;connection.CreateModel())&nbsp;{&lt;br&gt;           &nbsp;channel.ExchangeDeclare(&amp;quot;logs&amp;quot;,&nbsp;&amp;quot;fanout&amp;quot;);&lt;br&gt;&lt;br&gt;           &nbsp;//string&nbsp;queue_name&nbsp;=&nbsp;channel.QueueDeclare();&lt;br&gt;<br>
   &nbsp;   &nbsp;   &nbsp;//string&nbsp;queue_name2&nbsp;=&nbsp;channel.QueueDeclare();&lt;br&gt;   &nbsp;   &nbsp;   &nbsp;//channel.QueueDeclare(&amp;quot;q1&amp;quot;,&nbsp;false,&nbsp;false,&nbsp;false,&nbsp;null);&lt;br&gt;   &nbsp;   &nbsp;   &nbsp;channel.QueueDeclare(&amp;quot;q3&amp;quot;,&nbsp;false,&nbsp;false,&nbsp;false,&nbsp;null);&lt;br&gt;<br>
   &nbsp;&lt;br&gt;   &nbsp;   &nbsp;   &nbsp;//channel.QueueBind(&amp;quot;q2&amp;quot;,&nbsp;&amp;quot;logs&amp;quot;,&nbsp;&amp;quot;&amp;quot;);&lt;br&gt;           &nbsp;channel.QueueBind(&amp;quot;q3&amp;quot;,&nbsp;&amp;quot;logs&amp;quot;,&nbsp;&amp;quot;&amp;quot;);&lt;br&gt;           &nbsp;QueueingBasicConsumer&nbsp;consumer&nbsp;=&nbsp;new&nbsp;QueueingBasicConsumer(channel);&lt;br&gt;<br>
           &nbsp;//channel.BasicConsume(&amp;quot;q2&amp;quot;,&nbsp;true,&nbsp;consumer);&lt;br&gt;   &nbsp;   &nbsp;   &nbsp;channel.BasicConsume(&amp;quot;q3&amp;quot;,&nbsp;true,&nbsp;consumer);&lt;br&gt;   &nbsp;   &nbsp;   &nbsp;&lt;br&gt;           &nbsp;Console.WriteLine(&amp;quot;&nbsp;[*]&nbsp;Waiting&nbsp;for&nbsp;logs.&amp;quot;&nbsp;+&lt;br&gt;<br>
                             &nbsp;&amp;quot;To&nbsp;exit&nbsp;press&nbsp;CTRL+C&amp;quot;);&lt;br&gt;           &nbsp;while(true)&nbsp;{&lt;br&gt;               &nbsp;BasicDeliverEventArgs&nbsp;ea&nbsp;=&lt;br&gt;                   &nbsp;(BasicDeliverEventArgs)consumer.Queue.Dequeue();&lt;br&gt;&lt;br&gt;               &nbsp;byte[]&nbsp;body&nbsp;=&nbsp;ea.Body;&lt;br&gt;<br>
               &nbsp;string&nbsp;message&nbsp;=&nbsp;System.Text.Encoding.UTF8.GetString(body);&lt;br&gt;               &nbsp;Console.WriteLine(&amp;quot;&nbsp;[x]&nbsp;{0}&amp;quot;,&nbsp;message);&lt;br&gt;           &nbsp;}&lt;br&gt;       &nbsp;}&lt;br&gt;   &nbsp;}&lt;br&gt;}&lt;br&gt;&lt;br&gt;Thanks,&lt;br&gt;&lt;br&gt;&lt;div&nbsp;class=&quot;gmail_quote&quot;&gt;<br>
On&nbsp;Sat,&nbsp;Jul&nbsp;9,&nbsp;2011&nbsp;at&nbsp;1:00&nbsp;PM,&nbsp;Michael&nbsp;Klishin&nbsp;&lt;span&nbsp;dir=&quot;ltr&quot;&gt;&amp;lt;&lt;a&nbsp;href=&quot;mailto:michael.s.klishin@gmail.com&quot;&gt;michael.s.klishin@gmail.com&lt;/a&gt;&amp;gt;&lt;/span&gt;&nbsp;wrote:&lt;br&gt;&lt;blockquote&nbsp;class=&quot;gmail_quote&quot;&nbsp;style=&quot;margin:0&nbsp;0&nbsp;0&nbsp;.8ex;border-left:1px&nbsp;#ccc&nbsp;solid;padding-left:1ex;&quot;&gt;<br>
&lt;br&gt;&lt;br&gt;&lt;div&nbsp;class=&quot;gmail_quote&quot;&gt;&lt;div&nbsp;class=&quot;im&quot;&gt;2011/7/9&nbsp;Demiss&nbsp;Zike&nbsp;&lt;span&nbsp;dir=&quot;ltr&quot;&gt;&amp;lt;&lt;a&nbsp;href=&quot;mailto:habtdemis@gmail.com&quot;&nbsp;target=&quot;_blank&quot;&gt;habtdemis@gmail.com&lt;/a&gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/div&gt;&lt;div&nbsp;class=&quot;im&quot;&gt;&lt;blockquote&nbsp;class=&quot;gmail_quote&quot;&nbsp;style=&quot;margin:0&nbsp;0&nbsp;0&nbsp;.8ex;border-left:1px&nbsp;#ccc&nbsp;solid;padding-left:1ex&quot;&gt;<br>
<br>
<br>
However,&nbsp;I&nbsp;am&nbsp;getting&nbsp;CS1501:&nbsp;No&nbsp;overload&nbsp;for&nbsp;method&nbsp;&amp;#39;QueueDeclare&amp;#39;&nbsp;takes&nbsp;2&nbsp;arguments.&nbsp;&lt;/blockquote&gt;&lt;/div&gt;&lt;div&gt; &lt;br&gt;According&nbsp;to&nbsp;&lt;a&nbsp;href=&quot;http://www.rabbitmq.com/releases/rabbitmq-dotnet-client/v2.5.1/rabbitmq-dotnet-client-2.5.1-user-guide.pdf&quot;&nbsp;target=&quot;_blank&quot;&gt;http://www.rabbitmq.com/releases/rabbitmq-dotnet-client/v2.5.1/rabbitmq-dotnet-client-2.5.1-user-guide.pdf&lt;/a&gt;,&nbsp;QueueDeclare&nbsp;takes&nbsp;at&nbsp;least&nbsp;4&nbsp;arguments:&nbsp;name,&nbsp;durability,&nbsp;exclusivity&nbsp;and&nbsp;auto-deletion&nbsp;setting.&nbsp;Why&nbsp;don&amp;#39;t&nbsp;you&nbsp;just&nbsp;follow&nbsp;examples&nbsp;from&nbsp;that&nbsp;user&nbsp;guide,&nbsp;it&nbsp;seems&nbsp;to&nbsp;be&nbsp;pretty&nbsp;extensive&nbsp;and&nbsp;includes&nbsp;code&nbsp;examples.&lt;br&gt;<br>
<br>
<br>
&lt;br&gt;&lt;/div&gt;&lt;div&nbsp;class=&quot;im&quot;&gt;&lt;blockquote&nbsp;class=&quot;gmail_quote&quot;&nbsp;style=&quot;margin:0pt&nbsp;0pt&nbsp;0pt&nbsp;0.8ex;border-left:1px&nbsp;solid&nbsp;rgb(204,&nbsp;204,&nbsp;204);padding-left:1ex&quot;&gt;My&nbsp;question&nbsp;is&nbsp;1)&nbsp;can&nbsp;i&nbsp;declare&nbsp;multiple&nbsp;queues&nbsp;to&nbsp;then&nbsp;use&nbsp;fanout&nbsp;exchange&nbsp;and&nbsp;publish&nbsp;a&nbsp;message&nbsp;to&nbsp;multiple&nbsp;queues?&lt;/blockquote&gt;<br>
<br>
<br>
&lt;/div&gt;&lt;div&gt;&lt;br&gt;Yes.&lt;br&gt; &lt;/div&gt;&lt;div&nbsp;class=&quot;im&quot;&gt;&lt;blockquote&nbsp;class=&quot;gmail_quote&quot;&nbsp;style=&quot;margin:0pt&nbsp;0pt&nbsp;0pt&nbsp;0.8ex;border-left:1px&nbsp;solid&nbsp;rgb(204,&nbsp;204,&nbsp;204);padding-left:1ex&quot;&gt;2)&nbsp;what&nbsp;is&nbsp;the&nbsp;last&nbsp;argument&nbsp;for&nbsp;QueueBind?&lt;/blockquote&gt;<br>
&lt;/div&gt;&lt;/div&gt;&lt;br&gt;Binding&nbsp;arguments.&nbsp;More&nbsp;about&nbsp;bindings&nbsp;can&nbsp;be&nbsp;found&nbsp;in&nbsp;AMQP&nbsp;0.9.1&nbsp;spec&nbsp;document&nbsp;(introductory&nbsp;chapters&nbsp;are&nbsp;a&nbsp;pretty&nbsp;easy&nbsp;read)&nbsp;&lt;a&nbsp;href=&quot;http://bit.ly/hw2ELX&quot;&nbsp;target=&quot;_blank&quot;&gt;http://bit.ly/hw2ELX&lt;/a&gt;.&lt;div&gt;&lt;div&gt;<br>
&lt;/div&gt;&lt;div&nbsp;class=&quot;h5&quot;&gt;&lt;br&nbsp;clear=&quot;all&quot;&gt;<br>
<br>
&lt;br&gt;--&nbsp;&lt;br&gt;MK&lt;br&gt;&lt;br&gt;&lt;a&nbsp;href=&quot;http://github.com/michaelklishin&quot;&nbsp;target=&quot;_blank&quot;&gt;http://github.com/michaelklishin&lt;/a&gt;&lt;br&gt;&lt;a&nbsp;href=&quot;http://twitter.com/michaelklishin&quot;&nbsp;target=&quot;_blank&quot;&gt;http://twitter.com/michaelklishin&lt;/a&gt;&lt;br&gt;<br>
<br>
<br>
&lt;br&gt;<br>
&lt;/div&gt;&lt;/div&gt;&lt;/blockquote&gt;&lt;/div&gt;&lt;br&gt;<br>

</tt>
