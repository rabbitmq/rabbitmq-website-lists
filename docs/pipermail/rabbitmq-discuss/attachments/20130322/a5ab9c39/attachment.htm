<tt>
I'm&nbsp;seeing&nbsp;really&nbsp;odd&nbsp;application&nbsp;performance&nbsp;and&nbsp;hoping&nbsp;for&nbsp;good&nbsp;ideas.&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;My&nbsp;application&nbsp;starts&nbsp;lots&nbsp;of&nbsp;threads&nbsp;that&nbsp;each&nbsp;subscribe&nbsp;to&nbsp;a&nbsp;queue.&nbsp;&amp;nbsp;When&nbsp;they&nbsp;receive&nbsp;a&nbsp;message,&nbsp;they&nbsp;persist&nbsp;to&nbsp;an&nbsp;NFS&nbsp;store,&nbsp;then&nbsp;publish&nbsp;a&nbsp;new&nbsp;message&nbsp;back&nbsp;to&nbsp;rabbit.&nbsp;&amp;nbsp;As&nbsp;the&nbsp;application&nbsp;runs,&nbsp;new&nbsp;&quot;pathways&quot;&nbsp;of&nbsp;data&nbsp;are&nbsp;created&nbsp;--&nbsp;additional&nbsp;sources&nbsp;of&nbsp;data,&nbsp;additional&nbsp;queues,&nbsp;additional&nbsp;threads&nbsp;to&nbsp;persist&nbsp;the&nbsp;data.&nbsp;&amp;nbsp;Each&nbsp;thread&nbsp;reports&nbsp;the&nbsp;time&nbsp;taken&nbsp;to&nbsp;process&nbsp;each&nbsp;message&nbsp;(averaged&nbsp;over&nbsp;100&nbsp;messages).&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;I&nbsp;expected&nbsp;a&nbsp;distribution&nbsp;of&nbsp;time&nbsp;to&nbsp;handle&nbsp;each&nbsp;message,&nbsp;with&nbsp;the&nbsp;average&nbsp;gradually&nbsp;increasing&nbsp;with&nbsp;increasing&nbsp;load.&nbsp;&amp;nbsp;When&nbsp;I&nbsp;look&nbsp;at&nbsp;a&nbsp;graph&nbsp;of&nbsp;all&nbsp;these&nbsp;data&nbsp;points&nbsp;(average&nbsp;time&nbsp;to&nbsp;process&nbsp;message&nbsp;versus&nbsp;clock&nbsp;time)&nbsp;it&nbsp;looks&nbsp;a&nbsp;lot&nbsp;as&nbsp;I&nbsp;would&nbsp;expect.&nbsp;&amp;nbsp;You&nbsp;can&nbsp;see&nbsp;an&nbsp;example&nbsp;&lt;a&nbsp;href=&quot;https://confluence.oceanobservatories.org/display/CIDev/Scale+Test+Results+Mar21&quot;&gt;here&lt;/a&gt;&nbsp;(second&nbsp;graph&nbsp;on&nbsp;page),&nbsp;but&nbsp;this&nbsp;has&nbsp;been&nbsp;reproduced&nbsp;each&nbsp;time&nbsp;I&nbsp;start&nbsp;to&nbsp;put&nbsp;load&nbsp;on&nbsp;the&nbsp;system.&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;But&nbsp;then&nbsp;when&nbsp;I&nbsp;single&nbsp;out&nbsp;individual&nbsp;threads,&nbsp;they&nbsp;follow&nbsp;very&nbsp;distinct&nbsp;paths&nbsp;on&nbsp;this&nbsp;graph.&nbsp;&amp;nbsp;For&nbsp;example,&nbsp;if&nbsp;I&nbsp;compare&nbsp;two&nbsp;threads&nbsp;A&nbsp;and&nbsp;B,&nbsp;I&nbsp;see&nbsp;that&nbsp;one&nbsp;thread&nbsp;may&nbsp;always&nbsp;take&nbsp;0.5sec&nbsp;longer&nbsp;to&nbsp;process&nbsp;messages.&nbsp;&amp;nbsp;The&nbsp;performance&nbsp;of&nbsp;both&nbsp;threads&nbsp;rise&nbsp;and&nbsp;fall&nbsp;in&nbsp;parallel&nbsp;lines,&nbsp;but&amp;nbsp;one&nbsp;thread&nbsp;is&nbsp;consistently&nbsp;slower&nbsp;than&nbsp;another!&nbsp;&amp;nbsp;It&nbsp;seems&nbsp;that&nbsp;the&nbsp;earlier&nbsp;the&nbsp;thread&nbsp;is&nbsp;started&nbsp;within&nbsp;the&nbsp;VM,&nbsp;the&nbsp;faster&nbsp;it&nbsp;can&nbsp;publish.&nbsp;&amp;nbsp;But&nbsp;as&nbsp;the&nbsp;cloud-based&nbsp;system&nbsp;grows&nbsp;and&nbsp;starts&nbsp;new&nbsp;VMs&nbsp;running&nbsp;the&nbsp;same&nbsp;application,&nbsp;new&nbsp;threads&nbsp;on&nbsp;the&nbsp;new&nbsp;VM&nbsp;perform&nbsp;as&nbsp;fast&nbsp;as&nbsp;the&nbsp;first&nbsp;threads&nbsp;on&nbsp;an&nbsp;earlier&nbsp;VM&nbsp;(so&nbsp;the&nbsp;performance&nbsp;drops&nbsp;off&nbsp;as&nbsp;the&nbsp;VM&nbsp;has&nbsp;been&nbsp;running&nbsp;longer&nbsp;--&nbsp;not&nbsp;as&nbsp;the&nbsp;system&nbsp;or&nbsp;broker&nbsp;load&nbsp;grows).&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;The&nbsp;broker&nbsp;VM&nbsp;shows&nbsp;very&nbsp;low&nbsp;utilization&nbsp;(&amp;lt;10%&nbsp;CPU&nbsp;used&nbsp;on&nbsp;4-core&nbsp;system,&nbsp;only&nbsp;25%&nbsp;of&nbsp;2GB&nbsp;RAM&nbsp;used).&nbsp;&amp;nbsp;The&nbsp;application&nbsp;VM&nbsp;grows&nbsp;until&nbsp;it&nbsp;reaches&nbsp;about&nbsp;65%&nbsp;CPU,&nbsp;memory&nbsp;shows&nbsp;35%&nbsp;of&nbsp;4GB&nbsp;used.&nbsp;&amp;nbsp;Message&nbsp;rates&nbsp;are&nbsp;relatively&nbsp;low&nbsp;--&nbsp;growing&nbsp;from&nbsp;0&nbsp;to&nbsp;~150msgs/sec&nbsp;with&nbsp;avg&nbsp;size&nbsp;~500bytes.&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;I&nbsp;wish&nbsp;I&nbsp;could&nbsp;give&nbsp;you&nbsp;a&nbsp;nice&nbsp;easy&nbsp;code&nbsp;snippet&nbsp;to&nbsp;reproduce,&nbsp;but&nbsp;it&nbsp;will&nbsp;take&nbsp;some&nbsp;effort&nbsp;to&nbsp;extract&nbsp;a&nbsp;faithful&nbsp;reproduction&nbsp;from&nbsp;our&nbsp;complex&nbsp;publisher/subscriber/data&nbsp;process&nbsp;OO&nbsp;wrappings.&nbsp;&amp;nbsp;I'm&nbsp;hoping&nbsp;from&nbsp;the&nbsp;description,&nbsp;someone&nbsp;can&nbsp;point&nbsp;me&nbsp;at&nbsp;some&nbsp;possible&nbsp;explanations.&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;Many&nbsp;thanks&nbsp;for&nbsp;any&nbsp;suggestions&nbsp;or&nbsp;ideas!&lt;/div&gt;&lt;div&gt;Jonathan&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;
</tt>
