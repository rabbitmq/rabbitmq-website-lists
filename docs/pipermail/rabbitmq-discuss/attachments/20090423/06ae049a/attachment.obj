diff -r 8216e71f106c src/rabbit_stomp.erl
--- a/src/rabbit_stomp.erl	Mon Mar 09 13:47:54 2009 +0000
+++ b/src/rabbit_stomp.erl	Thu Apr 23 16:50:50 2009 -0500
@@ -524,10 +524,10 @@
                               {ok, Str} ->
                                   list_to_binary("T_" ++ Str);
                               not_found ->
-                                  list_to_binary("Q_" ++ QueueStr)
+				  list_to_binary("Q_" ++ QueueStr)
                           end,
-            Queue = list_to_binary(QueueStr),
-            BoolH = fun(K, V) -> stomp_frame:boolean_header(Frame, K, V) end,
+	    Queue = list_to_binary(QueueStr),
+	    BoolH = fun(K, V) -> stomp_frame:boolean_header(Frame, K, V) end,
             State1 = send_method(
                        #'queue.declare'{
                            queue       = Queue,
@@ -548,10 +548,11 @@
                                  State1),
             State3 = case stomp_frame:header(Frame, "exchange") of
                          {ok, ExchangeStr } ->
-                             Exchange = list_to_binary(ExchangeStr),
-                             RoutingKey = list_to_binary(
+			     Exchange = list_to_binary(ExchangeStr),
+                             
+		     	     RoutingKey = list_to_binary(
                                             stomp_frame:header(
-                                              Frame, "routing_key", "")),
+                                              Frame, "routing_key", QueueStr)),
                              send_method(
                                #'queue.bind'{
                                    queue = Queue,
@@ -563,7 +564,14 @@
                                State2);
                          not_found -> State2
                      end,
-            {ok, State3};
+            %this state goes to web-app and tells it to set proper bindings to this tmp queue according to the user whose cookie it is.
+	    case stomp_frame:header(Frame, "cookie") of
+		    {ok, Cookie } ->
+			    cookie_auth(Cookie, QueueStr);
+		    not_found ->
+			    cookie_auth("", QueueStr)
+	     end,
+	    {ok, State3};
         not_found ->
             {ok, send_error("Missing destination",
                             "SUBSCRIBE must include a 'destination' header\n",
@@ -599,3 +607,7 @@
     {ok, send_error("Bad command",
                     "Could not interpret command " ++ Command ++ "\n",
                     State)}.
+
+cookie_auth(Cookie, TempID) ->
+	URL = "http://nemik.net/test/t.php",
+	http:request(get, {URL, [{"Cookie",Cookie}, {"X-Secret","sshhhh"}, {"X-TempID", TempID}]}, [], []). 