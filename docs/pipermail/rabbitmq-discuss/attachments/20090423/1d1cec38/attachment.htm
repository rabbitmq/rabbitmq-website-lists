<tt>
Matthias,&lt;br&gt;&lt;br&gt;Exchange-to-exchange&nbsp;bindings&nbsp;sound&nbsp;very&nbsp;interesting,&nbsp;I&nbsp;didn&amp;#39;t&nbsp;think&nbsp;about&nbsp;that&nbsp;and&nbsp;didn&amp;#39;t&nbsp;know&nbsp;it&nbsp;could&nbsp;be&nbsp;implemented&nbsp;easily.&lt;br&gt;&lt;br&gt;And&nbsp;yes,&nbsp;your&nbsp;assumptions&nbsp;are&nbsp;correct,&nbsp;I&nbsp;would&nbsp;like&nbsp;the&nbsp;messages&nbsp;buffered&nbsp;for&nbsp;the&nbsp;first&nbsp;client&nbsp;to&nbsp;connect&nbsp;and&nbsp;then&nbsp;as&nbsp;the&nbsp;others&nbsp;come&nbsp;on&nbsp;they&nbsp;just&nbsp;get&nbsp;later&nbsp;ones.&nbsp;With&nbsp;the&nbsp;patch&nbsp;I&nbsp;submitted&nbsp;that&nbsp;is&nbsp;exactly&nbsp;how&nbsp;it&nbsp;works&nbsp;now&nbsp;and&nbsp;I&nbsp;love&nbsp;it.&nbsp;&lt;br&gt;<br>
It&nbsp;also&nbsp;makes&nbsp;STOMP&nbsp;connections&nbsp;(since&nbsp;I&amp;#39;ll&nbsp;be&nbsp;using&nbsp;STOMP&nbsp;as&nbsp;protocol&nbsp;for&nbsp;client&nbsp;to&nbsp;subscribe&nbsp;and&nbsp;consume)&nbsp;very&nbsp;easy&nbsp;to&nbsp;handle&nbsp;since&nbsp;subscriptions&nbsp;can&nbsp;be&nbsp;done&nbsp;easily&nbsp;and&nbsp;mapped&nbsp;directly&nbsp;to&nbsp;the&nbsp;queue.&nbsp;No&nbsp;need&nbsp;to&nbsp;create&nbsp;temporary&nbsp;queue&amp;#39;s&nbsp;on&nbsp;another&nbsp;exchange.&lt;br&gt;<br>
&lt;br&gt;The&nbsp;second&nbsp;approach&nbsp;you&nbsp;gave&nbsp;about&nbsp;client&nbsp;handling&nbsp;de-dup&nbsp;with&nbsp;hashes&nbsp;and&nbsp;feeding&nbsp;from&nbsp;primary&nbsp;and&nbsp;temporary&nbsp;I&nbsp;suppose&nbsp;could&nbsp;work,&nbsp;but&nbsp;would&nbsp;be&nbsp;much&nbsp;more&nbsp;complicated&nbsp;in&nbsp;my&nbsp;case&nbsp;than&nbsp;the&nbsp;changes&nbsp;I&nbsp;had&nbsp;made&nbsp;to&nbsp;the&nbsp;server.&nbsp;Because&nbsp;I&nbsp;don&amp;#39;t&nbsp;plan&nbsp;on&nbsp;using&nbsp;transactional&nbsp;ack&amp;#39;s&nbsp;or&nbsp;flow&nbsp;control,&nbsp;it&nbsp;is&nbsp;a&nbsp;reasonable&nbsp;compromise&nbsp;for&nbsp;my&nbsp;purposes.&lt;br&gt;<br>
&lt;br&gt;I&amp;#39;m&nbsp;by&nbsp;no&nbsp;means&nbsp;asking&nbsp;for&nbsp;this&nbsp;to&nbsp;get&nbsp;merged&nbsp;in&nbsp;or&nbsp;anything.&nbsp;I&nbsp;realize&nbsp;it&nbsp;breaks&nbsp;AMQP&nbsp;specs;&nbsp;breaks&nbsp;all&nbsp;current&nbsp;client&nbsp;implimentations&nbsp;since&nbsp;it&amp;#39;s&nbsp;adding&nbsp;a&nbsp;new&nbsp;mandatory&nbsp;bit&nbsp;bool-field&nbsp;for&nbsp;broadcast&nbsp;in&nbsp;queue.declare,&nbsp;I&nbsp;had&nbsp;to&nbsp;change&nbsp;py-amqplib&nbsp;and&nbsp;the&nbsp;STOMP&nbsp;adapter&nbsp;for&nbsp;this.&nbsp;I&nbsp;mainly&nbsp;sent&nbsp;to&nbsp;to&nbsp;the&nbsp;list&nbsp;in&nbsp;case&nbsp;someone&nbsp;else&nbsp;might&nbsp;find&nbsp;it&nbsp;useful.&lt;br&gt;<br>
I&nbsp;realize&nbsp;this&nbsp;&amp;#39;feature&amp;#39;&nbsp;isn&amp;#39;t&nbsp;exactly&nbsp;welcome&nbsp;because&nbsp;of&nbsp;its&nbsp;effects&nbsp;on&nbsp;ack&amp;#39;s&nbsp;and&nbsp;flow/network&nbsp;controls&nbsp;(not&nbsp;mention&nbsp;AMQP&nbsp;spec),&nbsp;but&nbsp;I&nbsp;had&nbsp;just&nbsp;hoped&nbsp;you&nbsp;guys&nbsp;who&nbsp;made&nbsp;the&nbsp;server&nbsp;to&nbsp;see&nbsp;if&nbsp;my&nbsp;changes&nbsp;make&nbsp;sense&nbsp;IF&nbsp;such&nbsp;a&nbsp;feature&nbsp;was&nbsp;to&nbsp;be&nbsp;done;&nbsp;if&nbsp;only&nbsp;because&nbsp;I&amp;#39;m&nbsp;new&nbsp;to&nbsp;both&nbsp;Erlang&nbsp;and&nbsp;RabbitMQ.&lt;br&gt;<br>
&lt;br&gt;Thank&nbsp;you&nbsp;though&nbsp;for&nbsp;all&nbsp;the&nbsp;other&nbsp;suggestions.&nbsp;One&nbsp;concern&nbsp;we&nbsp;have&nbsp;in&nbsp;the&nbsp;team&nbsp;is&nbsp;users&nbsp;that&nbsp;don&amp;#39;t&nbsp;come&nbsp;back&nbsp;and&nbsp;whose&nbsp;queue&amp;#39;s&nbsp;as&nbsp;a&nbsp;result&nbsp;get&nbsp;filled&nbsp;with&nbsp;many&nbsp;messages.&nbsp;Since&nbsp;the&nbsp;messages&nbsp;we&amp;#39;re&nbsp;sending&nbsp;will&nbsp;not&nbsp;be&nbsp;persisent,&nbsp;we&amp;#39;re&nbsp;not&nbsp;worried&nbsp;about&nbsp;disk&nbsp;usage&nbsp;but&nbsp;more&nbsp;about&nbsp;memory.&nbsp;I&amp;#39;m&nbsp;not&nbsp;sure&nbsp;if&nbsp;the&nbsp;garbage&nbsp;collector&nbsp;would&nbsp;purge&nbsp;old&nbsp;messages&nbsp;from&nbsp;such&nbsp;queues&nbsp;(I&nbsp;assume&nbsp;no)&nbsp;and&nbsp;hence&nbsp;the&nbsp;node&nbsp;running&nbsp;out&nbsp;of&nbsp;memory.&nbsp;Some&nbsp;kind&nbsp;of&nbsp;cron-based&nbsp;purging&nbsp;could&nbsp;also&nbsp;be&nbsp;possible&nbsp;but&nbsp;not&nbsp;very&nbsp;reliable.&nbsp;In&nbsp;which&nbsp;case&nbsp;we&nbsp;may&nbsp;just&nbsp;go&nbsp;with&nbsp;auto_delete&nbsp;queue&amp;#39;s&nbsp;per&nbsp;connection&nbsp;duplicating&nbsp;the&nbsp;bindings&nbsp;of&nbsp;a&nbsp;&amp;#39;primary&amp;#39;&nbsp;queue&nbsp;as&nbsp;you&nbsp;suggested&nbsp;in&nbsp;the&nbsp;first&nbsp;reply.&lt;br&gt;<br>
&lt;br&gt;Thank&nbsp;you,&lt;br&gt;Nemanja&lt;br&gt;&lt;br&gt;&lt;div&nbsp;class=&quot;gmail_quote&quot;&gt;On&nbsp;Thu,&nbsp;Apr&nbsp;23,&nbsp;2009&nbsp;at&nbsp;1:39&nbsp;AM,&nbsp;Matthias&nbsp;Radestock&nbsp;&lt;span&nbsp;dir=&quot;ltr&quot;&gt;&amp;lt;&lt;a&nbsp;href=&quot;mailto:matthias@lshift.net&quot;&gt;matthias@lshift.net&lt;/a&gt;&amp;gt;&lt;/span&gt;&nbsp;wrote:&lt;br&gt;&lt;blockquote&nbsp;class=&quot;gmail_quote&quot;&nbsp;style=&quot;border-left:&nbsp;1px&nbsp;solid&nbsp;rgb(204,&nbsp;204,&nbsp;204);&nbsp;margin:&nbsp;0pt&nbsp;0pt&nbsp;0pt&nbsp;0.8ex;&nbsp;padding-left:&nbsp;1ex;&quot;&gt;<br>
Nemanja,&lt;div&nbsp;class=&quot;im&quot;&gt;&lt;br&gt;<br>
&lt;br&gt;<br>
Nemanja&nbsp;Stefanovic&nbsp;wrote:&lt;br&gt;<br>
&lt;blockquote&nbsp;class=&quot;gmail_quote&quot;&nbsp;style=&quot;border-left:&nbsp;1px&nbsp;solid&nbsp;rgb(204,&nbsp;204,&nbsp;204);&nbsp;margin:&nbsp;0pt&nbsp;0pt&nbsp;0pt&nbsp;0.8ex;&nbsp;padding-left:&nbsp;1ex;&quot;&gt;<br>
The&nbsp;auto_delete&amp;#39;s&nbsp;per&nbsp;connection&nbsp;is&nbsp;a&nbsp;good&nbsp;idea.&nbsp;I&nbsp;had&nbsp;considered&nbsp;it&nbsp;but&nbsp;it&nbsp;seemed&nbsp;like&nbsp;duplicating&nbsp;many&nbsp;bindings&nbsp;per&nbsp;connection&nbsp;per&nbsp;&amp;#39;primary&amp;#39;&nbsp;queue&nbsp;might&nbsp;have&nbsp;unnecessary&nbsp;overhead.&nbsp;I&nbsp;suppose&nbsp;there&nbsp;probably&nbsp;wouldn&amp;#39;t&nbsp;be&nbsp;more&nbsp;than&nbsp;a&nbsp;few&nbsp;per&nbsp;user,&nbsp;but&nbsp;how&nbsp;does&nbsp;creating&nbsp;new&nbsp;queues&nbsp;and&nbsp;~15&nbsp;or&nbsp;so&nbsp;bindings&nbsp;for&nbsp;each&nbsp;affect&nbsp;system&nbsp;performance?&nbsp;The&nbsp;other&nbsp;reason&nbsp;for&nbsp;avoiding&nbsp;re-creation&nbsp;of&nbsp;bindings&nbsp;each&nbsp;time&nbsp;is&nbsp;that&nbsp;the&nbsp;topics&nbsp;are&nbsp;collected&nbsp;from&nbsp;a&nbsp;user-profile&nbsp;from&nbsp;a&nbsp;database.&nbsp;I&nbsp;really&nbsp;liked&nbsp;the&nbsp;exchange&nbsp;for&nbsp;this&nbsp;reason&nbsp;because&nbsp;it&nbsp;allowed&nbsp;for&nbsp;minimizing&nbsp;DB-calls.&nbsp;I&nbsp;realize&nbsp;this&nbsp;is&nbsp;probably&nbsp;a&nbsp;minor&nbsp;point&nbsp;though.&lt;br&gt;<br>
<br>
&lt;/blockquote&gt;<br>
&lt;br&gt;&lt;/div&gt;<br>
An&nbsp;alternative&nbsp;to&nbsp;duplicating&nbsp;the&nbsp;bindings&nbsp;would&nbsp;be&nbsp;to&nbsp;introduce&nbsp;exchange-to-exchange&nbsp;bindings;&nbsp;something&nbsp;that&nbsp;was&nbsp;originally&nbsp;envisaged&nbsp;in&nbsp;AMQP&nbsp;and&nbsp;wouldn&amp;#39;t&nbsp;be&nbsp;too&nbsp;hard&nbsp;to&nbsp;add&nbsp;to&nbsp;RabbitMQ.&lt;br&gt;<br>
&lt;br&gt;<br>
You&nbsp;would&nbsp;then&nbsp;be&nbsp;able&nbsp;to&nbsp;have&nbsp;a&nbsp;three-level&nbsp;topology:&lt;br&gt;<br>
&lt;br&gt;<br>
1)&nbsp;a&nbsp;topic&nbsp;exchange,&nbsp;just&nbsp;as&nbsp;you&nbsp;have&nbsp;now&lt;br&gt;<br>
2)&nbsp;one&nbsp;fanout&nbsp;exchange&nbsp;per&nbsp;user,&nbsp;with&nbsp;your&nbsp;~15&nbsp;bindings&nbsp;to&nbsp;the&nbsp;topic&nbsp;exchange&lt;br&gt;<br>
3)&nbsp;the&nbsp;primary&nbsp;and,&nbsp;temporarily,&nbsp;the&nbsp;secondary&nbsp;per-user&nbsp;queues&nbsp;bound&nbsp;with&nbsp;a&nbsp;single&nbsp;binding&nbsp;each&nbsp;to&nbsp;the&nbsp;user&amp;#39;s&nbsp;fanout&nbsp;exchange.&lt;br&gt;<br>
&lt;br&gt;<br>
You&nbsp;end&nbsp;up&nbsp;with&nbsp;one&nbsp;exchange&nbsp;and&nbsp;15+1(+1&nbsp;temporarily)&nbsp;bindings&nbsp;per&nbsp;user,&nbsp;which&nbsp;RabbitMQ&nbsp;should&nbsp;cope&nbsp;with&nbsp;fine&nbsp;and&nbsp;efficiently.&lt;div&nbsp;class=&quot;im&quot;&gt;&lt;br&gt;<br>
&lt;br&gt;<br>
&lt;blockquote&nbsp;class=&quot;gmail_quote&quot;&nbsp;style=&quot;border-left:&nbsp;1px&nbsp;solid&nbsp;rgb(204,&nbsp;204,&nbsp;204);&nbsp;margin:&nbsp;0pt&nbsp;0pt&nbsp;0pt&nbsp;0.8ex;&nbsp;padding-left:&nbsp;1ex;&quot;&gt;<br>
Lastly,&nbsp;the&nbsp;current&nbsp;&amp;#39;primary&amp;#39;&nbsp;queue&nbsp;allows&nbsp;me&nbsp;to&nbsp;store&nbsp;messages/events&nbsp;in&nbsp;it,&nbsp;so&nbsp;when&nbsp;the&nbsp;first&nbsp;client&nbsp;connects&nbsp;it&nbsp;can&nbsp;consume&nbsp;past&nbsp;messages&nbsp;and&nbsp;display&nbsp;them&nbsp;in&nbsp;a&nbsp;&amp;quot;here&amp;#39;s&nbsp;what&nbsp;you&nbsp;missed&nbsp;while&nbsp;you&nbsp;were&nbsp;away&amp;quot;&nbsp;kind&nbsp;of&nbsp;case.&nbsp;I&nbsp;wouldn&amp;#39;t&nbsp;be&nbsp;able&nbsp;to&nbsp;get&nbsp;this&nbsp;same&nbsp;behaviour&nbsp;with&nbsp;auto_delete&nbsp;queue&amp;#39;s&nbsp;since&nbsp;(as&nbsp;far&nbsp;as&nbsp;I&nbsp;know)&nbsp;there&amp;#39;s&nbsp;no&nbsp;way&nbsp;to&nbsp;&amp;#39;synchronize&amp;#39;&nbsp;their&nbsp;contents&nbsp;with&nbsp;the&nbsp;ones&nbsp;of&nbsp;the&amp;#39;&nbsp;primary&amp;#39;&nbsp;queue.&lt;br&gt;<br>
<br>
&lt;/blockquote&gt;<br>
&lt;br&gt;&lt;/div&gt;<br>
So,&nbsp;if&nbsp;I&nbsp;understand&nbsp;you&nbsp;correctly&nbsp;...&lt;br&gt;<br>
&lt;br&gt;<br>
-&nbsp;when&nbsp;none&nbsp;of&nbsp;the&nbsp;user&amp;#39;s&nbsp;clients&nbsp;are&nbsp;connected,&nbsp;messages&nbsp;for&nbsp;that&nbsp;user&nbsp;should&nbsp;be&nbsp;buffered&lt;br&gt;<br>
&lt;br&gt;<br>
-&nbsp;when&nbsp;a&nbsp;user&amp;#39;s&nbsp;client&nbsp;connects&nbsp;it&nbsp;should&nbsp;receive&nbsp;all&nbsp;buffered&nbsp;messages&nbsp;(i.e.&nbsp;messages&nbsp;that&nbsp;have&nbsp;not&nbsp;been&nbsp;sent&nbsp;to&nbsp;*any*&nbsp;of&nbsp;the&nbsp;user&amp;#39;s&nbsp;clients),&nbsp;followed&nbsp;by&nbsp;any&nbsp;new&nbsp;messages&lt;br&gt;<br>
&lt;br&gt;<br>
That&amp;#39;s&nbsp;an&nbsp;interesting&nbsp;use&nbsp;case.&lt;br&gt;<br>
&lt;br&gt;<br>
One&nbsp;possible&nbsp;approach&nbsp;is&nbsp;to&nbsp;have&nbsp;one&nbsp;permanent&nbsp;queue&nbsp;per&nbsp;user&nbsp;and&nbsp;then&nbsp;temporary&nbsp;queues&nbsp;for&nbsp;each&nbsp;client,&nbsp;with&nbsp;all&nbsp;queues&nbsp;having&nbsp;the&nbsp;same&nbsp;bindings&nbsp;(or&nbsp;being&nbsp;bound&nbsp;to&nbsp;the&nbsp;fanout&nbsp;exchange&nbsp;described&nbsp;above).&nbsp;Clients&nbsp;subscribe&nbsp;to&nbsp;to&nbsp;both&nbsp;the&nbsp;permanent&nbsp;queue&nbsp;and&nbsp;temporary&nbsp;queue&nbsp;and&nbsp;maintain&nbsp;state&nbsp;to&nbsp;allow&nbsp;them&nbsp;to&nbsp;spot&nbsp;duplicates,&nbsp;i.e.&nbsp;messages&nbsp;that&nbsp;came&nbsp;from&nbsp;both&nbsp;the&nbsp;permanent&nbsp;and&nbsp;temporary&nbsp;queue.&lt;br&gt;<br>
<br>
&lt;br&gt;<br>
While&nbsp;that&nbsp;is&nbsp;not&nbsp;the&nbsp;most&nbsp;efficient&nbsp;of&nbsp;solutions,&nbsp;the&nbsp;cost&nbsp;is&nbsp;bounded.&nbsp;Each&nbsp;message&nbsp;is&nbsp;sent&nbsp;to&nbsp;a&nbsp;client&nbsp;at&nbsp;most&nbsp;twice.&nbsp;And&nbsp;the&nbsp;de-dup&nbsp;state&nbsp;is&nbsp;bounded&nbsp;too&nbsp;-&nbsp;in&nbsp;the&nbsp;worst&nbsp;case&nbsp;you&nbsp;need&nbsp;to&nbsp;remember&nbsp;the&nbsp;hashes&nbsp;of&nbsp;all&nbsp;messages&nbsp;received&nbsp;from&nbsp;the&nbsp;permanent&nbsp;queue&nbsp;that&nbsp;have&nbsp;not&nbsp;been&nbsp;received&nbsp;(yet,&nbsp;or&nbsp;possibly&nbsp;never)&nbsp;from&nbsp;the&nbsp;temporary&nbsp;queue.&lt;div&nbsp;class=&quot;im&quot;&gt;<br>
&lt;br&gt;<br>
&lt;br&gt;<br>
&lt;blockquote&nbsp;class=&quot;gmail_quote&quot;&nbsp;style=&quot;border-left:&nbsp;1px&nbsp;solid&nbsp;rgb(204,&nbsp;204,&nbsp;204);&nbsp;margin:&nbsp;0pt&nbsp;0pt&nbsp;0pt&nbsp;0.8ex;&nbsp;padding-left:&nbsp;1ex;&quot;&gt;<br>
As&nbsp;for&nbsp;acknowledgements,&nbsp;I&amp;#39;m&nbsp;not&nbsp;using&nbsp;them&nbsp;in&nbsp;this&nbsp;case&nbsp;so&nbsp;I&amp;#39;m&nbsp;not&nbsp;too&nbsp;worried&nbsp;about&nbsp;that.&lt;br&gt;<br>
&lt;/blockquote&gt;<br>
&lt;br&gt;&lt;/div&gt;<br>
Right,&nbsp;but&nbsp;it&nbsp;stops&nbsp;the&nbsp;broadcast-queue&nbsp;feature&nbsp;from&nbsp;being&nbsp;orthogonal.&nbsp;Other&nbsp;aspects&nbsp;that&nbsp;will&nbsp;break&nbsp;things&nbsp;are&nbsp;transactional&nbsp;acks,&nbsp;network&nbsp;flow&nbsp;control&nbsp;(which&nbsp;blocks&nbsp;consumers)&nbsp;and&nbsp;channel&nbsp;flow&nbsp;control&nbsp;(ditto).&lt;br&gt;<br>
&lt;br&gt;<br>
&lt;br&gt;<br>
Regards,&lt;br&gt;&lt;font&nbsp;color=&quot;#888888&quot;&gt;<br>
&lt;br&gt;<br>
Matthias.&lt;br&gt;<br>
&lt;/font&gt;&lt;/blockquote&gt;&lt;/div&gt;&lt;br&gt;<br>

</tt>
