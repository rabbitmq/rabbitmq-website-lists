From 0x6e6562 at gmail.com  Mon Sep  1 00:14:15 2008
From: 0x6e6562 at gmail.com (Ben Hood)
Date: Mon, 1 Sep 2008 00:14:15 +0100
Subject: [rabbitmq-discuss] Urgently Need help to get RabbitMQ
	publishing to Flex-based subscriber
In-Reply-To: <7aa8bd9d0808291934l19d9c70atd7822677f904d1da@mail.gmail.com>
References: <7aa8bd9d0808291934l19d9c70atd7822677f904d1da@mail.gmail.com>
Message-ID: <269388e30808311614i1ef7c800l479ca874a1f9eb25@mail.gmail.com>

Anne,

On Sat, Aug 30, 2008 at 3:34 AM, Pete Kay <petedao at gmail.com> wrote:
> error on TCP connection <0.8716.0> from 192.168.1.100:50021
> {handshake_timeout,frame_header}
>
> Here is my code, could someone help me to find out what is wrong?

I've just had a look at your code, and it works for me :-(

But only after changing it to get it compile, which leads me to think
that you may have sent a different version to me and the list than the
actual mxml file that you are testing with.

Could you double check this, please?

For example, the variable "sub" is not defined (I assume that you
meant to use the subClient variable).

Also there is no import statement for the JSONSerializer.

So after changing these two things, I was able to sucessfully connect to Rabbit.

Your test, BTW, does not have a producer that sends anything that a
subscriber can listen to.

Maybe it would be an idea to start with the publish client, rather
than the subscribe client in order to get first things first.

HTH,

Ben



From 0x6e6562 at gmail.com  Mon Sep  1 00:16:19 2008
From: 0x6e6562 at gmail.com (Ben Hood)
Date: Mon, 1 Sep 2008 00:16:19 +0100
Subject: [rabbitmq-discuss] Linux processor affinity and C code
In-Reply-To: <6c2563b20808301626v7114b8a8t8ebb9c8f719b9260@mail.gmail.com>
References: <6c2563b20808301624u60385da6n5777ea911d6b0eaf@mail.gmail.com>
	<6c2563b20808301626v7114b8a8t8ebb9c8f719b9260@mail.gmail.com>
Message-ID: <269388e30808311616g56bdea21p5636b47d4f1dcbb4@mail.gmail.com>

Hey Edwin,

On Sun, Aug 31, 2008 at 12:26 AM, Edwin Fine
<rabbitmq-discuss_efine at usa.net> wrote:
> Anyone interested in seeing if there are RabbitMQ performance improvements
> by doing this? I'd be happy to post the code (which is very short, 125 lines
> of C). Otherwise I will play around with it on non-RabbitMQ code as time
> permits.

I think this would be an excellent idea and we would be very
interested in the mileage you get here.

Ben



From 0x6e6562 at gmail.com  Mon Sep  1 00:24:02 2008
From: 0x6e6562 at gmail.com (Ben Hood)
Date: Mon, 1 Sep 2008 00:24:02 +0100
Subject: [rabbitmq-discuss] Running RabbitMQ as a Windows Service -
	Having some problems
In-Reply-To: <48BAF588.2030802@gmail.com>
References: <48BAF588.2030802@gmail.com>
Message-ID: <269388e30808311624i562b86fw87e525ac6f4d05d8@mail.gmail.com>

Eran,

On Sun, Aug 31, 2008 at 8:48 PM, Eran Sandler <eran.sandler at gmail.com> wrote:
> I've tried numerous ways of running RabbitMQ as a Windows service on Windows
> 2003.
>
> I've used erlsrv.exe with the following command:
>
> erlsrv add rabbitmq_messagequeue -sname rabbit -args "-mnesia dir
> '\"C:/RabbitMQ/db/rabbit-mnesia\"' -boot start_sasl -s rabbit -sasl
> errlog_type error"
>
> The service runs but rabbitmq isn't running if I run "rabbitmqctrl.bat
> status". I tried passing the rest of the arguments such as the log file
> location etc but that makes the service not run.

First of all, I have not run erlsrv myself because I don't have access
to a windows machine, but I'm sure that this can achieved via VMware
soon.

However, I do know of somebody who has done this already with windows,
so I've prompted them for the solution, hopefully that will turn up
soon.

BTW, to clarify your question - are you saying that Rabbit is actually
running (meaning that you can connect to it via a client) and that the
rabbitmqctrl.bat is just returning the wrong status when it is
invoked?

HTH,

Ben



From petedao at gmail.com  Mon Sep  1 01:35:45 2008
From: petedao at gmail.com (Pete Kay)
Date: Mon, 1 Sep 2008 08:35:45 +0800
Subject: [rabbitmq-discuss] Urgently Need help to get RabbitMQ
	publishing to Flex-based subscriber
In-Reply-To: <269388e30808311614i1ef7c800l479ca874a1f9eb25@mail.gmail.com>
References: <7aa8bd9d0808291934l19d9c70atd7822677f904d1da@mail.gmail.com>
	<269388e30808311614i1ef7c800l479ca874a1f9eb25@mail.gmail.com>
Message-ID: <7aa8bd9d0808311735q6c629a17s5e01c8dd05b2ed94@mail.gmail.com>

Hi Ben,

Sorry I pasted the wrong one. The code I am running had those two issues
fixed actually.

I tried install another RabbitMQ on localhost but it does not work as well.
I am compiling the lib against Flex 3.1, is this the version you are using
as well?

Is it possible you can email me your ampq.swc so I can test against the
exact same one you are using?

The strange thing is that when I tried using the out-of-box
TestPublishClientTest.mxml and the other .mxml test cases, I also get that
handshake_timeout,frame_header error.

May I try the same ampq.swc that you are using see if it works.

Thanks for your help.

Anne
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20080901/cf32e9bf/attachment.htm 

From 0x6e6562 at gmail.com  Mon Sep  1 01:39:10 2008
From: 0x6e6562 at gmail.com (Ben Hood)
Date: Mon, 1 Sep 2008 01:39:10 +0100
Subject: [rabbitmq-discuss] EOFException when messages in queue
In-Reply-To: <7fa430270808311234q24956417p66124eeea161a9d0@mail.gmail.com>
References: <7fa430270808311234q24956417p66124eeea161a9d0@mail.gmail.com>
Message-ID: <269388e30808311739y63e42f7bhbfeb2d93bf178b02@mail.gmail.com>

Hi Bradford,

On Sun, Aug 31, 2008 at 8:34 PM, bradford <fingermark at gmail.com> wrote:
> I'm running the AMQPExampleFunPack.actorExample scala example from:
> http://github.com/dpp/liftweb/tree/master/lift-amqp/src/main/scala/net/liftweb/amqp/AMQPSender.scala
> It was working great until I shutdown the client listeners and
> RabbitMQ queued up 2 messages.

This would be expected behaviour if a client dies. The broker will
queue up messages for them until they re-connect and start consuming
again.

> Now when I run the
> AMQPExampleFunPack.actorExample scala example I get an EOFException.
> My questions are 1) is it possible to clear a queue ("routeroute") in
> RabbitMQ w/o writing code for it?

Using the protocol/API client you can purge a queue using the
queue.purge command.

Other than that, queue purging is not exposed in the rabbitmqctl
script, but there is an ongoing discussion about management within
Rabbit, so you could participate in that with this requirement.

If you would like to issue an Rabbit native call in Erlang, either in
the VM that the server is running in or via a remote shell, you call
rabbitmq_amqueue:lookup/1 to get the PID of a queue and then call
rabbitmq_amqueue:purge/1 with the result.

>2) Is there anything obvious I need
> to do to fix the exception, in the event that messages queue up in the
> future?

See point above.

>
> [WARNING] Consumer com.newpers.amqp.SerializedConsumer at 337d0f method
> handleDelivery for channel
> AMQChannel(amqp://guest at 192.168.2.1:5672/,1) threw an exception:
> [WARNING] java.io.EOFException
> [WARNING]       at
> java.io.ObjectInputStream$PeekInputStream.readFully(ObjectInputStream.java:2281)
> [WARNING]       at
> java.io.ObjectInputStream$BlockDataInputStream.readShort(ObjectInputStream.java:2750)
> [WARNING]       at
> java.io.ObjectInputStream.readStreamHeader(ObjectInputStream.java:780)
> [WARNING]       at java.io.ObjectInputStream.<init>(ObjectInputStream.java:280)
> [WARNING]       at
> com.newpers.amqp.SerializedConsumer.handleDelivery(AMQPDispatcher.scala:105)
> [WARNING]       at
> com.rabbitmq.client.impl.ChannelN.processAsync(ChannelN.java:189)
> [WARNING]       at
> com.rabbitmq.client.impl.AMQChannel.handleCompleteInboundCommand(AMQChannel.java:146)
> [WARNING]       at
> com.rabbitmq.client.impl.AMQChannel.handleFrame(AMQChannel.java:101)
> [WARNING]       at
> com.rabbitmq.client.impl.AMQConnection$MainLoop.run(AMQConnection.java:440)

I'm not an expert with this particular scala client but it looks to be
within the context of actually unpacking the payload on the
application layer, so I would have expected the data to have been
buffered up already. Is there any way you can dump the verbatim of the
payload without parsing it to see what is coming in off the wire?

HTH,

Ben



From rabbitmq at tmm1.net  Mon Sep  1 01:48:38 2008
From: rabbitmq at tmm1.net (Aman Gupta)
Date: Sun, 31 Aug 2008 17:48:38 -0700
Subject: [rabbitmq-discuss] Linux processor affinity and C code
In-Reply-To: <269388e30808311616g56bdea21p5636b47d4f1dcbb4@mail.gmail.com>
References: <6c2563b20808301624u60385da6n5777ea911d6b0eaf@mail.gmail.com>
	<6c2563b20808301626v7114b8a8t8ebb9c8f719b9260@mail.gmail.com>
	<269388e30808311616g56bdea21p5636b47d4f1dcbb4@mail.gmail.com>
Message-ID: <e1c05edd0808311748v4500dd1docebc1831a4d6dcca@mail.gmail.com>

You can also use taskset:
http://www.linuxcommand.org/man_pages/taskset1.html
  Aman

On Sun, Aug 31, 2008 at 4:16 PM, Ben Hood <0x6e6562 at gmail.com> wrote:

> Hey Edwin,
>
> On Sun, Aug 31, 2008 at 12:26 AM, Edwin Fine
> <rabbitmq-discuss_efine at usa.net> wrote:
> > Anyone interested in seeing if there are RabbitMQ performance
> improvements
> > by doing this? I'd be happy to post the code (which is very short, 125
> lines
> > of C). Otherwise I will play around with it on non-RabbitMQ code as time
> > permits.
>
> I think this would be an excellent idea and we would be very
> interested in the mileage you get here.
>
> Ben
>
> _______________________________________________
> rabbitmq-discuss mailing list
> rabbitmq-discuss at lists.rabbitmq.com
> http://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20080831/8e52bead/attachment.htm 

From rabbitmq-discuss_efine at usa.net  Mon Sep  1 01:55:41 2008
From: rabbitmq-discuss_efine at usa.net (Edwin Fine)
Date: Sun, 31 Aug 2008 20:55:41 -0400
Subject: [rabbitmq-discuss] Linux processor affinity and C code
In-Reply-To: <e1c05edd0808311748v4500dd1docebc1831a4d6dcca@mail.gmail.com>
References: <6c2563b20808301624u60385da6n5777ea911d6b0eaf@mail.gmail.com>
	<6c2563b20808301626v7114b8a8t8ebb9c8f719b9260@mail.gmail.com>
	<269388e30808311616g56bdea21p5636b47d4f1dcbb4@mail.gmail.com>
	<e1c05edd0808311748v4500dd1docebc1831a4d6dcca@mail.gmail.com>
Message-ID: <6c2563b20808311755h66f8aa11oc9f27f40dcdad5c9@mail.gmail.com>

Excellent, I didn't know about that command. That's even better. Thank you.

On Sun, Aug 31, 2008 at 8:48 PM, Aman Gupta <rabbitmq at tmm1.net> wrote:

> You can also use taskset:
> http://www.linuxcommand.org/man_pages/taskset1.html
>   Aman
>
> On Sun, Aug 31, 2008 at 4:16 PM, Ben Hood <0x6e6562 at gmail.com> wrote:
>
>> Hey Edwin,
>>
>> On Sun, Aug 31, 2008 at 12:26 AM, Edwin Fine
>> <rabbitmq-discuss_efine at usa.net> wrote:
>> > Anyone interested in seeing if there are RabbitMQ performance
>> improvements
>> > by doing this? I'd be happy to post the code (which is very short, 125
>> lines
>> > of C). Otherwise I will play around with it on non-RabbitMQ code as time
>> > permits.
>>
>> I think this would be an excellent idea and we would be very
>> interested in the mileage you get here.
>>
>> Ben
>>
>> _______________________________________________
>> rabbitmq-discuss mailing list
>> rabbitmq-discuss at lists.rabbitmq.com
>> http://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss
>>
>
>


-- 
For every expert there is an equal and opposite expert - Arthur C. Clarke
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20080831/90de4017/attachment.htm 

From petedao at gmail.com  Mon Sep  1 02:30:57 2008
From: petedao at gmail.com (Pete Kay)
Date: Mon, 1 Sep 2008 09:30:57 +0800
Subject: [rabbitmq-discuss] Urgently Need help to get RabbitMQ
	publishing to Flex-based subscriber
In-Reply-To: <269388e30808311741q57c662e3mc87d77d0e934dd0a@mail.gmail.com>
References: <7aa8bd9d0808291934l19d9c70atd7822677f904d1da@mail.gmail.com>
	<269388e30808311614i1ef7c800l479ca874a1f9eb25@mail.gmail.com>
	<7aa8bd9d0808311735q6c629a17s5e01c8dd05b2ed94@mail.gmail.com>
	<269388e30808311741q57c662e3mc87d77d0e934dd0a@mail.gmail.com>
Message-ID: <7aa8bd9d0808311830p4e17536n58cff391dff5cfa@mail.gmail.com>

Hi Ben,

It still fails.  I am still getting
{handshake_timeout,frame_header} from the server log.

I am pretty desperated now and I think I am pretty much running out of idea
at this moment.

Any suggestion would be greatly appreciated.

Anne
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20080901/be1f6c24/attachment.htm 

From lahiru at apache.org  Mon Sep  1 04:18:27 2008
From: lahiru at apache.org (lahiru gunathilake)
Date: Mon, 1 Sep 2008 08:48:27 +0530
Subject: [rabbitmq-discuss] EOFException when messages in queue
In-Reply-To: <7fa430270808311234q24956417p66124eeea161a9d0@mail.gmail.com>
References: <7fa430270808311234q24956417p66124eeea161a9d0@mail.gmail.com>
Message-ID: <72b4c7110808312018m4d526ffbh96aebe8cb00dcc07@mail.gmail.com>

Hi Bradford,

Yes this would be a feature in RabbitMQ Management, other than that you'll
be able to delete message by message and move one message from one queue to
another, view message content and view message headers.

Cheers
Lahiru

On Mon, Sep 1, 2008 at 1:04 AM, bradford <fingermark at gmail.com> wrote:

> I'm running the AMQPExampleFunPack.actorExample scala example from:
>
> http://github.com/dpp/liftweb/tree/master/lift-amqp/src/main/scala/net/liftweb/amqp/AMQPSender.scala
>
> It was working great until I shutdown the client listeners and
> RabbitMQ queued up 2 messages.  Now when I run the
> AMQPExampleFunPack.actorExample scala example I get an EOFException.
> My questions are 1) is it possible to clear a queue ("routeroute") in
> RabbitMQ w/o writing code for it?  2) Is there anything obvious I need
> to do to fix the exception, in the event that messages queue up in the
> future?
>
> [WARNING] Consumer com.newpers.amqp.SerializedConsumer at 337d0f method
> handleDelivery for channel
> AMQChannel(amqp://guest at 192.168.2.1:5672/,1) threw an exception:
> [WARNING] java.io.EOFException
> [WARNING]       at
>
> java.io.ObjectInputStream$PeekInputStream.readFully(ObjectInputStream.java:2281)
> [WARNING]       at
>
> java.io.ObjectInputStream$BlockDataInputStream.readShort(ObjectInputStream.java:2750)
> [WARNING]       at
> java.io.ObjectInputStream.readStreamHeader(ObjectInputStream.java:780)
> [WARNING]       at
> java.io.ObjectInputStream.<init>(ObjectInputStream.java:280)
> [WARNING]       at
>
> com.newpers.amqp.SerializedConsumer.handleDelivery(AMQPDispatcher.scala:105)
> [WARNING]       at
> com.rabbitmq.client.impl.ChannelN.processAsync(ChannelN.java:189)
> [WARNING]       at
>
> com.rabbitmq.client.impl.AMQChannel.handleCompleteInboundCommand(AMQChannel.java:146)
> [WARNING]       at
> com.rabbitmq.client.impl.AMQChannel.handleFrame(AMQChannel.java:101)
> [WARNING]       at
> com.rabbitmq.client.impl.AMQConnection$MainLoop.run(AMQConnection.java:440)
>
> _______________________________________________
> rabbitmq-discuss mailing list
> rabbitmq-discuss at lists.rabbitmq.com
> http://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20080901/d87ae9b0/attachment.htm 

From petedao at gmail.com  Mon Sep  1 04:26:16 2008
From: petedao at gmail.com (Pete Kay)
Date: Mon, 1 Sep 2008 11:26:16 +0800
Subject: [rabbitmq-discuss] RabbitMQ Flex Client - TCP CHECKSUM INCORRECT
Message-ID: <7aa8bd9d0808312026u79bb2df4gfa3474c1e174cbd9@mail.gmail.com>

Hi,

I really don't want to give up on the possibility of using RabbitMQ client
because I think that is a much straight foward solution for what I am
doing.

I tried to capture the TCP/IP messages and I found that there is a *TCP
CHECKSUM INCORRECT*  error at the end.

Could this be the problem causing my RabbitMQ Flex client not being able to
connect?  How can I fix this problem?

"251","13.415510","192.168.1.100","192.168.1.104","TCP","51159 > amqp [SYN]
Seq=0 Win=8192 Len=0 MSS=1460"

"252","13.415699","192.168.1.104","192.168.1.100","TCP","amqp > 51159 [SYN,
ACK] Seq=0 Ack=1 Win=2144 Len=0 MSS=536"

"253","13.415729","192.168.1.100","192.168.1.104","TCP","51159 > amqp [ACK]
Seq=1 Ack=1 Win=65392 [TCP CHECKSUM INCORRECT] Len=0"

"254","13.420887","192.168.1.100","192.168.1.104","AMQP","Protocol-Header "

"255","13.421157","192.168.1.104","192.168.1.100","TCP","amqp > 51159 [ACK]
Seq=1 Ack=9 Win=2144 Len=0"

"256","13.421553","192.168.1.104","192.168.1.100","AMQP","Connection.Start "

*"257","13.618752","192.168.1.100","192.168.1.104","TCP","51159 > amqp [ACK]
Seq=9 Ack=297 Win=65096 [TCP CHECKSUM INCORRECT] Len=0"*
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20080901/22c2097e/attachment.htm 

From rabbitmq-discuss_efine at usa.net  Mon Sep  1 05:06:28 2008
From: rabbitmq-discuss_efine at usa.net (Edwin Fine)
Date: Mon, 1 Sep 2008 00:06:28 -0400
Subject: [rabbitmq-discuss] RabbitMQ Flex Client - TCP CHECKSUM INCORRECT
In-Reply-To: <7aa8bd9d0808312026u79bb2df4gfa3474c1e174cbd9@mail.gmail.com>
References: <7aa8bd9d0808312026u79bb2df4gfa3474c1e174cbd9@mail.gmail.com>
Message-ID: <6c2563b20808312106r28584cd1ie2e88960af70c417@mail.gmail.com>

IIRC, the Wireshark/Ethereal help says this occurs when the checksum
calculation is offloaded to the Ethernet hardware and doesn't mean much in
this case... but if I were you I would check the help just to make sure.
It's been a while since I looked at it and I could be wrong.

On Sun, Aug 31, 2008 at 11:26 PM, Pete Kay <petedao at gmail.com> wrote:

> Hi,
>
> I really don't want to give up on the possibility of using RabbitMQ client
> because I think that is a much straight foward solution for what I am
> doing.
>
> I tried to capture the TCP/IP messages and I found that there is a *TCP
> CHECKSUM INCORRECT*  error at the end.
>
> Could this be the problem causing my RabbitMQ Flex client not being able to
> connect?  How can I fix this problem?
>
> "251","13.415510","192.168.1.100","192.168.1.104","TCP","51159 > amqp
> [SYN] Seq=0 Win=8192 Len=0 MSS=1460"
>
> "252","13.415699","192.168.1.104","192.168.1.100","TCP","amqp > 51159
> [SYN, ACK] Seq=0 Ack=1 Win=2144 Len=0 MSS=536"
>
> "253","13.415729","192.168.1.100","192.168.1.104","TCP","51159 > amqp
> [ACK] Seq=1 Ack=1 Win=65392 [TCP CHECKSUM INCORRECT] Len=0"
>
> "254","13.420887","192.168.1.100","192.168.1.104","AMQP","Protocol-Header
> "
>
> "255","13.421157","192.168.1.104","192.168.1.100","TCP","amqp > 51159
> [ACK] Seq=1 Ack=9 Win=2144 Len=0"
>
> "256","13.421553","192.168.1.104","192.168.1.100","AMQP","Connection.Start
> "
> *"257","13.618752","192.168.1.100","192.168.1.104","TCP","51159 > amqp
> [ACK] Seq=9 Ack=297 Win=65096 [TCP CHECKSUM INCORRECT] Len=0"*
>
> _______________________________________________
> rabbitmq-discuss mailing list
> rabbitmq-discuss at lists.rabbitmq.com
> http://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss
>
>


-- 
For every expert there is an equal and opposite expert - Arthur C. Clarke
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20080901/d528fc9f/attachment.htm 

From eran.sandler at gmail.com  Mon Sep  1 06:17:44 2008
From: eran.sandler at gmail.com (Eran Sandler)
Date: Mon, 1 Sep 2008 08:17:44 +0300
Subject: [rabbitmq-discuss] Running RabbitMQ as a Windows Service -
	Having some problems
In-Reply-To: <269388e30808311624i562b86fw87e525ac6f4d05d8@mail.gmail.com>
References: <48BAF588.2030802@gmail.com>
	<269388e30808311624i562b86fw87e525ac6f4d05d8@mail.gmail.com>
Message-ID: <5f884b720808312217p35fc7ea2sa15c683eb87dd73f@mail.gmail.com>

Hi Ben,

Thanks for the response.

The Erlang process goes up (it seems erlsrv when started takes the process
up) and I can telnet to port 5672 and get a response that contains the words
AQMP (which is usually the quickest way I check if the service is up), but
when I run "rabbitmqctrl status" it says the node is down.

Eran

On Mon, Sep 1, 2008 at 2:24 AM, Ben Hood <0x6e6562 at gmail.com> wrote:

> Eran,
>
> On Sun, Aug 31, 2008 at 8:48 PM, Eran Sandler <eran.sandler at gmail.com>
> wrote:
> > I've tried numerous ways of running RabbitMQ as a Windows service on
> Windows
> > 2003.
> >
> > I've used erlsrv.exe with the following command:
> >
> > erlsrv add rabbitmq_messagequeue -sname rabbit -args "-mnesia dir
> > '\"C:/RabbitMQ/db/rabbit-mnesia\"' -boot start_sasl -s rabbit -sasl
> > errlog_type error"
> >
> > The service runs but rabbitmq isn't running if I run "rabbitmqctrl.bat
> > status". I tried passing the rest of the arguments such as the log file
> > location etc but that makes the service not run.
>
> First of all, I have not run erlsrv myself because I don't have access
> to a windows machine, but I'm sure that this can achieved via VMware
> soon.
>
> However, I do know of somebody who has done this already with windows,
> so I've prompted them for the solution, hopefully that will turn up
> soon.
>
> BTW, to clarify your question - are you saying that Rabbit is actually
> running (meaning that you can connect to it via a client) and that the
> rabbitmqctrl.bat is just returning the wrong status when it is
> invoked?
>
> HTH,
>
> Ben
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20080901/5c072ffa/attachment.htm 

From 0x6e6562 at gmail.com  Mon Sep  1 07:56:43 2008
From: 0x6e6562 at gmail.com (Ben Hood)
Date: Mon, 1 Sep 2008 07:56:43 +0100
Subject: [rabbitmq-discuss] Urgently Need help to get RabbitMQ
	publishing to Flex-based subscriber
In-Reply-To: <7aa8bd9d0808311830p4e17536n58cff391dff5cfa@mail.gmail.com>
References: <7aa8bd9d0808291934l19d9c70atd7822677f904d1da@mail.gmail.com>
	<269388e30808311614i1ef7c800l479ca874a1f9eb25@mail.gmail.com>
	<7aa8bd9d0808311735q6c629a17s5e01c8dd05b2ed94@mail.gmail.com>
	<269388e30808311741q57c662e3mc87d77d0e934dd0a@mail.gmail.com>
	<7aa8bd9d0808311830p4e17536n58cff391dff5cfa@mail.gmail.com>
Message-ID: <269388e30808312356h610135d2s4a8c9086adff4881@mail.gmail.com>

Anne,

On Mon, Sep 1, 2008 at 2:30 AM, Pete Kay <petedao at gmail.com> wrote:
> It still fails.  I am still getting
> {handshake_timeout,frame_header} from the server log.

There maybe a few things one could to start eliminating things:

1. Run the broker on the same machine as the client, to eliminate any
possible network effects;

2. Test the broker across the network with a different Rabbit client,
e.g. Java, C# or Ruby client to verify that the setup does actually
work;

3. Debug into the onSocketConnect function in the Connection class
(either by setting a breakpoint add a trace statement). This is where
the AMQP header (the byte series 65,77,81,80,1,1,8,0 ) is written to
the peer socket. By doing this you are making sure that this function
is being invoked in the correct fashion. If you are not too familiar
with AS3, remember that it is single threaded so IO calls do not
block, every IO event has to handled asynchronously. If for example,
you haven't got an event handler set up properly, e.g. the socket
connect event, then the AMQP header won't get written out and the
server will just timeout (which is what you are seeing);

4. Because point 3 should be covered by library code that
a) is tested and known to work;
b) doesn't really need any attention from a high level API perspective
can you send me exactly the code that that you are using please? The
last time I got some code, it turned out that you had sent the wrong
code - maybe you can tar up the whole FB project that you are working
on.

HTH,

Ben



From alexis.richardson at cohesiveft.com  Mon Sep  1 10:31:07 2008
From: alexis.richardson at cohesiveft.com (Alexis Richardson)
Date: Mon, 1 Sep 2008 10:31:07 +0100
Subject: [rabbitmq-discuss] RabbitMQ / Spring integration
In-Reply-To: <57050903518809778@unknownmsgid>
References: <b93bbdbc0808140840k134999bcxebdeea7b4ab8669f@mail.gmail.com>
	<167204d20808140853s82637a5j7ee701ba1b152c12@mail.gmail.com>
	<DF438A8AE379E843A08DA47D7667EEBB9D28A7@vaebe104.NOE.Nokia.com>
	<167204d20808150706i4a84d6e1u2adca5b8cc1f0782@mail.gmail.com>
	<DF438A8AE379E843A08DA47D7667EEBBA0E853@vaebe104.NOE.Nokia.com>
	<269388e30808190106n392bb998va0e011595054417e@mail.gmail.com>
	<167204d20808190420q8369ba2i9e937f7bcd02f4db@mail.gmail.com>
	<57050903518809778@unknownmsgid>
Message-ID: <167204d20809010231s7172511ya946f0587a654bd2@mail.gmail.com>

Mark

Thanks for getting back on this.

On Fri, Aug 29, 2008 at 7:09 PM, Mark Pollack
<mark.pollack at springsource.com> wrote:
>
> The latest release candidate of Spring.NET has individual support classes
> for MSMQ, ApacheMQ, and TIBCO EMS and other vendors are planned.  I don't
> have any RabbitMQ experience but a quick look through the RabbitMQ api docs
> indicates to me that it is a low level API much in the same spirit of the
> JMS/JDBC APIs and that a template class would offer programming convenience
> to developers.

Excellent and yes we agree.  An analogy with RabbitMQ C# to Spring.NET
integration would be our WCF integration which is higher level and
provides Visual Studio integration too.  That is very much about
programming convenience.


> That said, I really don't know RabbitMQ so I'm not in the
> best position now to suggest what the interface of the template class would
> look like.

Understood.



> When I spoke with you at QCon a while ago (sorry for not following up on the
> email after that) you suggested that developers from rabbitmq would be
> interested in helping in the dev effort of spring support for rabbit-mq.

Yes, there have been a number of people asking about this on the
rabbitmq list and off list too.  Although, when I mentioned this at
QCon, I was thinking about Java-RabbitMQ primarily.  However, in the
same way that our Java and C# clients are very similar to each other,
any template work will most likely involve overlap between Java and
.NET.


> If
> that is the case, then I suggest we can form a spring-extensions project and
> start with a .NET implementation.

Would it be possible for the same project to be a home for both a .NET
implementation and a Java implementation?  (Pace your comments below)


> On the Java side there is so much momentum and developer mind-share around
> the JMS API that I don't think a case can be made for including this in the
> general spring framework.   I agree that for integration with Camel, Spring
> Integration etc., there isn't a reason the native API should be used and
> that use-case in itself isn't motivation to create template or other higher
> level helper classes to RabbitMQ

Not sure I agree with this.  Connecting frameworks to Java clients
ought to be a walk in the park; at least that has been the case with
other products eg Mule.  Putting JMS in the middle seems to create
inconvenience.  But - what do other people think?

alexis






> Cheers,
> Mark
>
> -----Original Message-----
> From: alexis.richardson at gmail.com [mailto:alexis.richardson at gmail.com] On
> Behalf Of Alexis Richardson
> Sent: Tuesday, August 19, 2008 7:20 AM
> To: Ben Hood
> Cc: carlos.quiroz-castro at nokia.com; rabbitmq; Ben Hale;
> mark.pollack at springsource.com
> Subject: Re: [rabbitmq-discuss] RabbitMQ / Spring integration
>
> Carlos, Ben,
>
> I am cc'ing folks from SpringSource who have discussed these concepts
> with me in the past.
>
>
> On Tue, Aug 19, 2008 at 9:06 AM, Ben Hood <0x6e6562 at gmail.com> wrote:
>> Hi Carlos,
>>
>> On Tue, Aug 19, 2008 at 7:05 AM,  <carlos.quiroz-castro at nokia.com> wrote:
>>> Hi
>>>
>>> I can see two ways of implementing this. One is to use the existing AMQP
>>> component which uses qpid in turn. I haven't used it and I don't know
>>> its maturity. The other one is to implement directly using the RabbitMQ
>>> library
>>
>> I think it would be most useful for users if the semantics of the AMQP
>> model were exposed via a Spring template, rather than just confining
>> users to the semantics of JMS. This could make functionality available
>> such configuring message routing that isn't available via JMS, for
>> example.
>>
>> An alternative route would be to say I want to keep the JMS template
>> semantics and then back the interface with the RabbitMQ java lib. Your
>> use case may be to provide migration without having to change client
>> code. Some concepts might be mappable between JMS and AMQP, e.g.
>> Connection(Factories), Sessions (Channels?) and Destinations (Queues),
>> but if you would have to bear in mind that this would probably not
>> pass a TCK, especially wrt transactions.
>
> At least initially, this second approach is strongly preferable in
> being far easier to implement and manage IMO.  The creation of an
> AMQPTemplate and suitable factories using the RabbitMQ Java client
> would deliver the required integration.  These should follow the
> example of the corresponding JMS tooling classes.  With this done then
> other more generic integration could be thought about and then
> achieved.
>
>
>> As for Camel, although I'm not an expert, isn't part of the value-add
>> of Camel be able to abstract away different message passing paradigms
>> and so therefore AMQP would be just another transport?
>
> I am not an expert either but I agree with this and suspect the
> pattern would be similar to that for other message based integration
> toolkits such as Mule, which used the RabbitMQ Java client directly
> without needing to go via JMS or Spring.  It was not much work at all.
>
> alexis
>
>> Ben
>>
>> _______________________________________________
>> rabbitmq-discuss mailing list
>> rabbitmq-discuss at lists.rabbitmq.com
>> http://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss
>>
>
>



From petedao at gmail.com  Mon Sep  1 10:56:53 2008
From: petedao at gmail.com (Pete Kay)
Date: Mon, 1 Sep 2008 17:56:53 +0800
Subject: [rabbitmq-discuss] Urgently Need help to get RabbitMQ publishing to
	Flex-based subscriber
In-Reply-To: <7aa8bd9d0809010256j544cf60csce4d80f983533130@mail.gmail.com>
References: <7aa8bd9d0808291934l19d9c70atd7822677f904d1da@mail.gmail.com>
	<269388e30808311614i1ef7c800l479ca874a1f9eb25@mail.gmail.com>
	<7aa8bd9d0808311735q6c629a17s5e01c8dd05b2ed94@mail.gmail.com>
	<269388e30808311741q57c662e3mc87d77d0e934dd0a@mail.gmail.com>
	<7aa8bd9d0808311830p4e17536n58cff391dff5cfa@mail.gmail.com>
	<269388e30808312356h610135d2s4a8c9086adff4881@mail.gmail.com>
	<7aa8bd9d0809010256j544cf60csce4d80f983533130@mail.gmail.com>
Message-ID: <7aa8bd9d0809010256m2e9750e5r72d3b28b96c38a72@mail.gmail.com>

 Hi Ben,

Thanks alot for helping me.

If I use the Java Client to connect to RabbitMQ on the same computer (Win
XP) or on another computer(Linux), it works.  However, my Flex client does
not work for RabbitMQ on localhost or on another computer within the same
LAN.  Here is the exact code that I am running my test on.  I debugged the
Connection class, but I don't see anything wrong with it.

 <?xml version="1.0" encoding="utf-8"?>
<mx:Application xmlns:mx="http://www.adobe.com/2006/mxml"
    layout="absolute" styleName="plain"  creationComplete="init()">
  <mx:Script>
        <![CDATA[
     import org.amqp.patterns.impl.SubscribeClientImpl;
        import org.amqp.patterns.SubscribeClient;
       import org.amqp.Connection;
      import org.amqp.ConnectionState;
     import org.amqp.patterns.CorrelatedMessageEvent;
    import org.amqp.ProtocolEvent;
     import org.amqp.Session;
     import org.amqp.SessionManager;
        import org.amqp.impl.SessionStateHandler;
        import org.amqp.test.JSONSerializer;
        private var subClient:SubscribeClientImpl;
        protected var connection:Connection;

   private var serializer:JSONSerializer = new JSONSerializer();
        public function init():void {
   trace("test sub init");
            connection = new Connection(buildConnectionState());
            subClient = new SubscribeClientImpl(connection);
   subClient.serializer = serializer;
//   subClient.realm = "/data";
   subClient.exchange = "gamex";
   subClient.exchangeType = "topic";
   subClient.subscribe("SimpleQueue",onMessageArrive);
        }
    public function buildConnectionState():ConnectionState {
            var state:ConnectionState = new ConnectionState();
            state.username = "guest";
            state.password = "guest";
            state.vhostpath = "/";
            state.serverhost = "127.0.0.1";
            return state;
        }

        public function onMessageArrive(event:CorrelatedMessageEvent):void {
            var o:* = event.result;
        }
     ]]>
    </mx:Script>
</mx:Application>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20080901/39cfa6fe/attachment.htm 

From matthias at lshift.net  Mon Sep  1 13:01:57 2008
From: matthias at lshift.net (Matthias Radestock)
Date: Mon, 01 Sep 2008 13:01:57 +0100
Subject: [rabbitmq-discuss] performance
In-Reply-To: <6c2563b20808301431qcc1c63cp8c36c790ed539ec9@mail.gmail.com>
References: <f9d1f3560808291517x41ab377cq3a8d82b0577496d5@mail.gmail.com>	<48B87832.90903@lshift.net>	<f9d1f3560808291551m584053cbqd92ca3788f38a01d@mail.gmail.com>	<48B90F23.8060609@lshift.net>
	<6c2563b20808301431qcc1c63cp8c36c790ed539ec9@mail.gmail.com>
Message-ID: <48BBD9B5.9060504@lshift.net>

Edwin,

Edwin Fine wrote:
> 
>     Some testing we did in the past indicates that generally a clustered
>     broker - with one node per core and smp disabled for the Erlang VM -
>     performs significantly better than a single smp-enabled node.
> 
> 
> Now /that/ is very interesting. I have seen the same kind of thing in 
> some ad-hoc (non-RabbitMQ related) experiments I did some time back 
> (better performance from multiple VMs, each in single-cpu configuration, 
> on a multi-core system) and thought it was my imagination because SMP 
> was supposed to be the way to go. I haven't seen much discussion on this 
> on the erlang-questions mailing lists, and quite frankly, I'm not going 
> to start one without some solid, repeatable evidence. If you have seen 
> this behavior, have you brought it up with the Erlang gurus, and if so, 
> have they said anything enlightening about it?

I have mentioned our observations to a few folks, but, as you say, there 
is no point in pursuing this further until we have solid, repeatable 
evidence. Now, our results *are* repeatable, but they are all in the 
context of RabbitMQ. To start a fruitful discussion on the Erlang list / 
with the Erlang gurus we'd need to construct a simpler, standalone test 
exhibiting the same behaviour. In the process we may well discover the 
root cause of the problem ourselves.

Btw, one issue with performance testing of RabbitMQ is that it is really 
difficult to measure the maximum throughput. RabbitMQ is a message 
*queuing* system, and any test setup will have several message buffers 
at various levels - the OS's network stack at the test client and 
RabbitMQ server, various process message queues at the server and 
buffers in the test client, and the queue processes at the server. 
Optimum throughput is achieved when all these buffers contain just the 
right amount of data so that the processing hanging off them never has 
to wait for data and yet no data is buffered unnecessarily. There are 
lots of tweakable parameters that affect buffering in the OS, the 
Erlang/Java VM, and the client/server apps. Furthermore, due to jit-ing 
and variations in scheduling decisions (by the VMs and the OS) the 
optimal settings shift over time.

As others have discovered, if a test just blasts messages at RabbitMQ, 
the broker will likely start queuing up most of them, consume increasing 
amounts of memory, and eventually grind to a halt. To get a sensible max 
throughput measurement a more sophisticated approach is required that 
controls and adapts the sending rate to the prevailing conditions.

We'd love to get the help of the community to put together a really 
simple "run this and it will report the maximum throughput" test 
program. Initially this can be for just the simplest (and fastest) 
routing scenario - single producer, single consumer (running in the same 
OS process if that is convenient), single queue, direct exchange, 
auto-ack basic.consume.

Note that this test app would work against all AMQP brokers, not just 
RabbitMQ, so could be used for performance comparison.

Any takers?


Matthias.



From eran.sandler at gmail.com  Mon Sep  1 14:26:08 2008
From: eran.sandler at gmail.com (Eran Sandler)
Date: Mon, 01 Sep 2008 16:26:08 +0300
Subject: [rabbitmq-discuss] UPDATE: Re: Running RabbitMQ as a Windows
 Service - Having some problems
In-Reply-To: <5f884b720808312217p35fc7ea2sa15c683eb87dd73f@mail.gmail.com>
References: <48BAF588.2030802@gmail.com>	
	<269388e30808311624i562b86fw87e525ac6f4d05d8@mail.gmail.com>
	<5f884b720808312217p35fc7ea2sa15c683eb87dd73f@mail.gmail.com>
Message-ID: <48BBED70.3020109@gmail.com>

I've managed to manually edit the arguments passed to the erlang 
interpreter by erlsrv and added all the necessary parameters for logging 
and for the db. So now I can start it as a Windows service and it seems 
to be working.


The log seems to behave correctly and when I telnet I see the log 
reporting on this.


When I run "rabbitmqctl status" I get the following error in the log:

** Connection attempt from disallowed node rabbitmqctl at yeddaweb7 **


Can it be a permissions problem of some kind? RabbitMQ's process runs 
under the Local system account while the process of rabbitmqctl runs 
under a local user.


Eran


Eran Sandler wrote:

> Hi Ben,
>
> Thanks for the response.
>
> The Erlang process goes up (it seems erlsrv when started takes the 
> process up) and I can telnet to port 5672 and get a response that 
> contains the words AQMP (which is usually the quickest way I check if 
> the service is up), but when I run "rabbitmqctrl status" it says the 
> node is down.
>
> Eran
>
> On Mon, Sep 1, 2008 at 2:24 AM, Ben Hood <0x6e6562 at gmail.com 
> <mailto:0x6e6562 at gmail.com>> wrote:
>
>     Eran,
>
>     On Sun, Aug 31, 2008 at 8:48 PM, Eran Sandler
>     <eran.sandler at gmail.com <mailto:eran.sandler at gmail.com>> wrote:
>     > I've tried numerous ways of running RabbitMQ as a Windows
>     service on Windows
>     > 2003.
>     >
>     > I've used erlsrv.exe with the following command:
>     >
>     > erlsrv add rabbitmq_messagequeue -sname rabbit -args "-mnesia dir
>     > '\"C:/RabbitMQ/db/rabbit-mnesia\"' -boot start_sasl -s rabbit -sasl
>     > errlog_type error"
>     >
>     > The service runs but rabbitmq isn't running if I run
>     "rabbitmqctrl.bat
>     > status". I tried passing the rest of the arguments such as the
>     log file
>     > location etc but that makes the service not run.
>
>     First of all, I have not run erlsrv myself because I don't have access
>     to a windows machine, but I'm sure that this can achieved via VMware
>     soon.
>
>     However, I do know of somebody who has done this already with windows,
>     so I've prompted them for the solution, hopefully that will turn up
>     soon.
>
>     BTW, to clarify your question - are you saying that Rabbit is actually
>     running (meaning that you can connect to it via a client) and that the
>     rabbitmqctrl.bat is just returning the wrong status when it is
>     invoked?
>
>     HTH,
>
>     Ben
>
>

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20080901/9b2e8f5f/attachment.htm 

From eran.sandler at gmail.com  Mon Sep  1 14:28:30 2008
From: eran.sandler at gmail.com (Eran Sandler)
Date: Mon, 01 Sep 2008 16:28:30 +0300
Subject: [rabbitmq-discuss] UPDATE: Re: Running RabbitMQ as a Windows
 Service - Having some problems
In-Reply-To: <48BBED70.3020109@gmail.com>
References: <48BAF588.2030802@gmail.com>		<269388e30808311624i562b86fw87e525ac6f4d05d8@mail.gmail.com>	<5f884b720808312217p35fc7ea2sa15c683eb87dd73f@mail.gmail.com>
	<48BBED70.3020109@gmail.com>
Message-ID: <48BBEDFE.2000700@gmail.com>

Forgot to mention, this is the command line that evetually runs RabbitMQ:


"C:\Program Files (x86)\erl5.5.5\erts-5.5.5\bin\erl.exe" -service_event 
ErlSrv_rabbitmq_messagequeue -nohup -sname rabbit -mnesia dir 
\""C:/RabbitMQ/db/rabbit-mnesia"\" -boot start_sasl -s rabbit -sasl 
errlog_type error -kernel inet_default_listen_options "[{sndbuf, 16384}, 
{recbuf, 4096}]" -rabbit tcp_listeners "[{\"0.0.0.0\", 5672}]" -kernel 
error_logger {file,\""C:/RabbitMQ/log/rabbit.log"\"}  -sasl 
sasl_error_logger {file,\""C:/RabbitMQ/log/rabbit-sasl.log"\"}



Eran



Eran Sandler wrote:

> I've managed to manually edit the arguments passed to the erlang 
> interpreter by erlsrv and added all the necessary parameters for 
> logging and for the db. So now I can start it as a Windows service and 
> it seems to be working.
>
>
> The log seems to behave correctly and when I telnet I see the log 
> reporting on this.
>
>
> When I run "rabbitmqctl status" I get the following error in the log:
>
> ** Connection attempt from disallowed node rabbitmqctl at yeddaweb7 **
>
>
> Can it be a permissions problem of some kind? RabbitMQ's process runs 
> under the Local system account while the process of rabbitmqctl runs 
> under a local user.
>
>
> Eran
>
>
> Eran Sandler wrote:
>
>> Hi Ben,
>>
>> Thanks for the response.
>>
>> The Erlang process goes up (it seems erlsrv when started takes the 
>> process up) and I can telnet to port 5672 and get a response that 
>> contains the words AQMP (which is usually the quickest way I check if 
>> the service is up), but when I run "rabbitmqctrl status" it says the 
>> node is down.
>>
>> Eran
>>
>> On Mon, Sep 1, 2008 at 2:24 AM, Ben Hood <0x6e6562 at gmail.com 
>> <mailto:0x6e6562 at gmail.com>> wrote:
>>
>>     Eran,
>>
>>     On Sun, Aug 31, 2008 at 8:48 PM, Eran Sandler
>>     <eran.sandler at gmail.com <mailto:eran.sandler at gmail.com>> wrote:
>>     > I've tried numerous ways of running RabbitMQ as a Windows
>>     service on Windows
>>     > 2003.
>>     >
>>     > I've used erlsrv.exe with the following command:
>>     >
>>     > erlsrv add rabbitmq_messagequeue -sname rabbit -args "-mnesia dir
>>     > '\"C:/RabbitMQ/db/rabbit-mnesia\"' -boot start_sasl -s rabbit -sasl
>>     > errlog_type error"
>>     >
>>     > The service runs but rabbitmq isn't running if I run
>>     "rabbitmqctrl.bat
>>     > status". I tried passing the rest of the arguments such as the
>>     log file
>>     > location etc but that makes the service not run.
>>
>>     First of all, I have not run erlsrv myself because I don't have
>>     access
>>     to a windows machine, but I'm sure that this can achieved via VMware
>>     soon.
>>
>>     However, I do know of somebody who has done this already with
>>     windows,
>>     so I've prompted them for the solution, hopefully that will turn up
>>     soon.
>>
>>     BTW, to clarify your question - are you saying that Rabbit is
>>     actually
>>     running (meaning that you can connect to it via a client) and
>>     that the
>>     rabbitmqctrl.bat is just returning the wrong status when it is
>>     invoked?
>>
>>     HTH,
>>
>>     Ben
>>
>>
>
> ------------------------------------------------------------------------
>
> _______________________________________________
> rabbitmq-discuss mailing list
> rabbitmq-discuss at lists.rabbitmq.com
> http://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss
>   

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20080901/f5d59992/attachment.htm 

From michael.mayne at citi.com  Mon Sep  1 15:01:09 2008
From: michael.mayne at citi.com (Mayne, Michael )
Date: Mon, 1 Sep 2008 15:01:09 +0100
Subject: [rabbitmq-discuss] performance
References: <48BBD9B5.9060504@lshift.net>
	<83BEB2D4766F8D4DAA703350B7E2FE82462826C3@exukmb02.eur.nsroot.net>
Message-ID: <83BEB2D4766F8D4DAA703350B7E2FE8246D3D841@exukmb02.eur.nsroot.net>

Matthias,
Hi. I'm new to RabbitMQ and this list, so you may know this already
but...

Red has produced a paper recently (June 2008) explaining its performance
testing lab that it did recently to show how optimised Red Hat on Intel
Xeon hardware can process very high message rates:
http://www.redhat.com/f/pdf/mrg/Reference_Architecture_MRG_Messaging_Thr
oughput.pdf 

This paper was presented at an Intel FasterCITY - fasterMESSAGING event
in London on 23 June.
http://www.intelfasterfs.com/fastermessaging/ 
It contains a description of the test bench it used to generate its
figures - which were a repeatable ingress rate of 380,000 (256 byte)
messages per second. There is obviously a lot more to it - see the paper
for details.

That could be a starter for ten.

Regards
Michael


-----Original Message-----
From: rabbitmq-discuss-bounces at lists.rabbitmq.com
[mailto:rabbitmq-discuss-bounces at lists.rabbitmq.com] On Behalf Of
Matthias Radestock
Sent: 01 September 2008 13:02
To: Edwin Fine
Cc: rabbitmq
Subject: Re: [rabbitmq-discuss] performance

Edwin,

Edwin Fine wrote:
> 
>     Some testing we did in the past indicates that generally a
clustered
>     broker - with one node per core and smp disabled for the Erlang VM
-
>     performs significantly better than a single smp-enabled node.
> 
> 
> Now /that/ is very interesting. I have seen the same kind of thing in 
> some ad-hoc (non-RabbitMQ related) experiments I did some time back 
> (better performance from multiple VMs, each in single-cpu
configuration, 
> on a multi-core system) and thought it was my imagination because SMP 
> was supposed to be the way to go. I haven't seen much discussion on
this 
> on the erlang-questions mailing lists, and quite frankly, I'm not
going 
> to start one without some solid, repeatable evidence. If you have seen

> this behavior, have you brought it up with the Erlang gurus, and if
so, 
> have they said anything enlightening about it?

I have mentioned our observations to a few folks, but, as you say, there

is no point in pursuing this further until we have solid, repeatable 
evidence. Now, our results *are* repeatable, but they are all in the 
context of RabbitMQ. To start a fruitful discussion on the Erlang list /

with the Erlang gurus we'd need to construct a simpler, standalone test 
exhibiting the same behaviour. In the process we may well discover the 
root cause of the problem ourselves.

Btw, one issue with performance testing of RabbitMQ is that it is really

difficult to measure the maximum throughput. RabbitMQ is a message 
*queuing* system, and any test setup will have several message buffers 
at various levels - the OS's network stack at the test client and 
RabbitMQ server, various process message queues at the server and 
buffers in the test client, and the queue processes at the server. 
Optimum throughput is achieved when all these buffers contain just the 
right amount of data so that the processing hanging off them never has 
to wait for data and yet no data is buffered unnecessarily. There are 
lots of tweakable parameters that affect buffering in the OS, the 
Erlang/Java VM, and the client/server apps. Furthermore, due to jit-ing 
and variations in scheduling decisions (by the VMs and the OS) the 
optimal settings shift over time.

As others have discovered, if a test just blasts messages at RabbitMQ, 
the broker will likely start queuing up most of them, consume increasing

amounts of memory, and eventually grind to a halt. To get a sensible max

throughput measurement a more sophisticated approach is required that 
controls and adapts the sending rate to the prevailing conditions.

We'd love to get the help of the community to put together a really 
simple "run this and it will report the maximum throughput" test 
program. Initially this can be for just the simplest (and fastest) 
routing scenario - single producer, single consumer (running in the same

OS process if that is convenient), single queue, direct exchange, 
auto-ack basic.consume.

Note that this test app would work against all AMQP brokers, not just 
RabbitMQ, so could be used for performance comparison.

Any takers?


Matthias.

_______________________________________________
rabbitmq-discuss mailing list
rabbitmq-discuss at lists.rabbitmq.com
http://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss



From matthias at lshift.net  Mon Sep  1 15:13:14 2008
From: matthias at lshift.net (Matthias Radestock)
Date: Mon, 01 Sep 2008 15:13:14 +0100
Subject: [rabbitmq-discuss] performance
In-Reply-To: <83BEB2D4766F8D4DAA703350B7E2FE8246D3D841@exukmb02.eur.nsroot.net>
References: <48BBD9B5.9060504@lshift.net>	<83BEB2D4766F8D4DAA703350B7E2FE82462826C3@exukmb02.eur.nsroot.net>
	<83BEB2D4766F8D4DAA703350B7E2FE8246D3D841@exukmb02.eur.nsroot.net>
Message-ID: <48BBF87A.4060102@lshift.net>

Michael,

Mayne, Michael wrote:

> Red has produced a paper recently (June 2008) explaining its performance
> testing lab that it did recently to show how optimised Red Hat on Intel
> Xeon hardware can process very high message rates:
> http://www.redhat.com/f/pdf/mrg/Reference_Architecture_MRG_Messaging_Thr
> oughput.pdf 
> 
> This paper was presented at an Intel FasterCITY - fasterMESSAGING event
> in London on 23 June.
> http://www.intelfasterfs.com/fastermessaging/ 
> It contains a description of the test bench it used to generate its
> figures - which were a repeatable ingress rate of 380,000 (256 byte)
> messages per second. There is obviously a lot more to it - see the paper
> for details.
> 
> That could be a starter for ten.

I am familiar with that report. The tests conducted are pretty similar 
to the ones we did with Intel last year and earlier this year (see 
http://www.rabbitmq.com/resources/AMQP_Solution_Brief_final.pdf).

Unfortunately the test setup - "producers reliably en-queues messages 
onto the broker as fast as they can, consumers reliably de-queue 
messages from the broker as fast as they can" - isn't addressing the key 
problem I described, namely controlling and adapting the ingress rate in 
order to maximise throughput.


Matthias.



From matthias at lshift.net  Mon Sep  1 15:29:20 2008
From: matthias at lshift.net (Matthias Radestock)
Date: Mon, 01 Sep 2008 15:29:20 +0100
Subject: [rabbitmq-discuss] UPDATE: Re: Running RabbitMQ as a Windows
 Service - Having some problems
In-Reply-To: <48BBED70.3020109@gmail.com>
References: <48BAF588.2030802@gmail.com>		<269388e30808311624i562b86fw87e525ac6f4d05d8@mail.gmail.com>	<5f884b720808312217p35fc7ea2sa15c683eb87dd73f@mail.gmail.com>
	<48BBED70.3020109@gmail.com>
Message-ID: <48BBFC40.4010509@lshift.net>

Eran,

Eran Sandler wrote:
> When I run "rabbitmqctl status" I get the following error in the log:
> 
> ** Connection attempt from disallowed node rabbitmqctl at yeddaweb7 **
> 
> 
> Can it be a permissions problem of some kind? RabbitMQ's process runs 
> under the Local system account while the process of rabbitmqctl runs 
> under a local user.

Erlang uses cookies to control which nodes are allowed to connect to 
each other. The cookie file lives in the user's home directory in the 
file .erlang.cookie.

Since in your setup the rabbitmqctl command is run by a different user 
than the RabbitMQ server, you need to either make the contents of the 
.erlang.cookie files the same or use the -setcookie <cookie> parameter 
to erl.exe to set the cookie explicitly.

Regards,

Matthias.



From eran.sandler at gmail.com  Mon Sep  1 15:33:53 2008
From: eran.sandler at gmail.com (Eran Sandler)
Date: Mon, 01 Sep 2008 17:33:53 +0300
Subject: [rabbitmq-discuss] UPDATE: Re: Running RabbitMQ as a Windows
 Service - Having some problems
In-Reply-To: <48BBFC40.4010509@lshift.net>
References: <48BAF588.2030802@gmail.com>		<269388e30808311624i562b86fw87e525ac6f4d05d8@mail.gmail.com>	<5f884b720808312217p35fc7ea2sa15c683eb87dd73f@mail.gmail.com>
	<48BBED70.3020109@gmail.com> <48BBFC40.4010509@lshift.net>
Message-ID: <48BBFD51.70104@gmail.com>

I've tried running both on the same user account and it still didn't 
manage to access it.


What do I pass to the -setcookie <cookie> parameter (so I'll try that as 
well)


Eran


Matthias Radestock wrote:

> Eran,
>
> Eran Sandler wrote:
>> When I run "rabbitmqctl status" I get the following error in the log:
>>
>> ** Connection attempt from disallowed node rabbitmqctl at yeddaweb7 **
>>
>>
>> Can it be a permissions problem of some kind? RabbitMQ's process runs 
>> under the Local system account while the process of rabbitmqctl runs 
>> under a local user.
>
> Erlang uses cookies to control which nodes are allowed to connect to 
> each other. The cookie file lives in the user's home directory in the 
> file .erlang.cookie.
>
> Since in your setup the rabbitmqctl command is run by a different user 
> than the RabbitMQ server, you need to either make the contents of the 
> .erlang.cookie files the same or use the -setcookie <cookie> parameter 
> to erl.exe to set the cookie explicitly.
>
> Regards,
>
> Matthias.

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20080901/825da741/attachment.htm 

From matthias at lshift.net  Mon Sep  1 15:52:19 2008
From: matthias at lshift.net (Matthias Radestock)
Date: Mon, 01 Sep 2008 15:52:19 +0100
Subject: [rabbitmq-discuss] UPDATE: Re: Running RabbitMQ as a Windows
 Service - Having some problems
In-Reply-To: <48BBFD51.70104@gmail.com>
References: <48BAF588.2030802@gmail.com>		<269388e30808311624i562b86fw87e525ac6f4d05d8@mail.gmail.com>	<5f884b720808312217p35fc7ea2sa15c683eb87dd73f@mail.gmail.com>	<48BBED70.3020109@gmail.com>
	<48BBFC40.4010509@lshift.net> <48BBFD51.70104@gmail.com>
Message-ID: <48BC01A3.40901@lshift.net>

Eran Sandler wrote:
> What do I pass to the -setcookie <cookie> parameter (so I'll try that as 
> well)

Anything, just as long as it's the same in both your server startup and 
rabbitmqctl.


Matthias.



From 0x6e6562 at gmail.com  Mon Sep  1 16:25:36 2008
From: 0x6e6562 at gmail.com (Ben Hood)
Date: Mon, 1 Sep 2008 16:25:36 +0100
Subject: [rabbitmq-discuss] Debugging of Connection.class
In-Reply-To: <7aa8bd9d0809010325s73592144xd70afe5df1c499be@mail.gmail.com>
References: <7aa8bd9d0809010325s73592144xd70afe5df1c499be@mail.gmail.com>
Message-ID: <269388e30809010825t304dfd77lac25f8ec34c9b86c@mail.gmail.com>

Anne,

On Mon, Sep 1, 2008 at 11:25 AM, Pete Kay <petedao at gmail.com> wrote:
> I traced the content of header before it is sent to server in the
> onSocketConnect function, it shows:
>
> header = AMQP
>
> After AMQP, there are 4 unprintable characters.
>
> Is this the right output?


It should be 8 bytes -> A, M, Q, P, 1, 1, 8, 0

Can you see that going across the network when you use Ethereal?

I would suggest deliberately changing the header to provoke a
different error from the server, but it doesn't look like that data is
is even being transmitted to the other peer.

Ben



From rabbitmq at tmm1.net  Mon Sep  1 17:31:11 2008
From: rabbitmq at tmm1.net (Aman Gupta)
Date: Mon, 1 Sep 2008 09:31:11 -0700
Subject: [rabbitmq-discuss] Gracefully shutting down rabbitmq
In-Reply-To: <269388e30808290620k7d04542ah5218dd5a02a50e26@mail.gmail.com>
References: <e1c05edd0808281810t158a2cawb043a44c57a86e54@mail.gmail.com>
	<269388e30808290102l568673c2t22d0057ed7ff4c8c@mail.gmail.com>
	<e1c05edd0808290104m1275719dv8f90920423453d96@mail.gmail.com>
	<269388e30808290620k7d04542ah5218dd5a02a50e26@mail.gmail.com>
Message-ID: <e1c05edd0809010931v6c47633p7b241140cc709642@mail.gmail.com>

>
> As side issue, can you be more specific about what part of the process
> is actually taking 20 mins?


AFICT, recovering the mnesia database.

I assume from your output that the 20 min wait is for the recovery
> phase. During this phase, all of the durable exchanges and queues are
> recovered. Do you know how many of each do you have? Also, did you
> intend to have so many durable objects, bearing in mind the cost of
> maintaining them?


I have approximately 10k durable queues and 5k durable exchanges. These must
be durable; in addition I also have several other exchanges and queues that
don't need to be durable and are not marked as such.

Are there any other commands or options for triggering a shutdown of
rabbitmq?

  Aman
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20080901/af3b28c4/attachment.htm 

From 0x6e6562 at gmail.com  Mon Sep  1 21:07:35 2008
From: 0x6e6562 at gmail.com (Ben Hood)
Date: Mon, 1 Sep 2008 21:07:35 +0100
Subject: [rabbitmq-discuss] Gracefully shutting down rabbitmq
In-Reply-To: <e1c05edd0809010931v6c47633p7b241140cc709642@mail.gmail.com>
References: <e1c05edd0808281810t158a2cawb043a44c57a86e54@mail.gmail.com>
	<269388e30808290102l568673c2t22d0057ed7ff4c8c@mail.gmail.com>
	<e1c05edd0808290104m1275719dv8f90920423453d96@mail.gmail.com>
	<269388e30808290620k7d04542ah5218dd5a02a50e26@mail.gmail.com>
	<e1c05edd0809010931v6c47633p7b241140cc709642@mail.gmail.com>
Message-ID: <269388e30809011307k39fe8fdcv1cca6fd702c7762@mail.gmail.com>

Aman,

On Mon, Sep 1, 2008 at 5:31 PM, Aman Gupta <rabbitmq at tmm1.net> wrote:
> I have approximately 10k durable queues and 5k durable exchanges. These must
> be durable; in addition I also have several other exchanges and queues that
> don't need to be durable and are not marked as such.

That doesn't seem like much. I just created 5k exchanges and
created/bound 2 queues to each (i.e. 10k queues), which took about 9
secs to complete, and then I shut the broker down, and restarted it.
The recovery phase took about 20 secs, so I'm wondering what is taking
so long when your broker has to recover. Another possibility is that
it is spending the time in playing the log back in, which happens
after the mnesia recovery phase.

> Are there any other commands or options for triggering a shutdown of
> rabbitmq?

My favourites are Ctrl-C, kill-9 and halt() :-)

On a more official note, you can call use the rabbitmqctl script with
the argument stop, but that just calls the rabbit_control module with
the stop argument, which is what you are effectively doing with the
command you mentioned previously.

If you do have Rabbit running in a shell (or even via a remote shell),
another *cleaner* option is use the OTP application handler i.e.

1> application:stop(rabbit).

I'll try to replicate your problem running the same command as you did.

BTW, when you run this command, do you see an epmd process running in
your activity log?

HTH,

Ben



From sustrik at imatix.com  Mon Sep  1 21:09:47 2008
From: sustrik at imatix.com (Martin Sustrik)
Date: Mon, 01 Sep 2008 22:09:47 +0200
Subject: [rabbitmq-discuss] performance
In-Reply-To: <48BBF87A.4060102@lshift.net>
References: <48BBD9B5.9060504@lshift.net>	<83BEB2D4766F8D4DAA703350B7E2FE82462826C3@exukmb02.eur.nsroot.net>	<83BEB2D4766F8D4DAA703350B7E2FE8246D3D841@exukmb02.eur.nsroot.net>
	<48BBF87A.4060102@lshift.net>
Message-ID: <48BC4C0B.9010101@imatix.com>


Just few hints:

1. Measuring maximal throughput is tricky for various reasons, queueing 
being only one of them. There are statistical and methodological 
problems like hidden average, non-stability of the metric etc. However, 
simple way to get *some* results is to run the tests with publisher 
publishing messages at various rates. Maximal rate where latency doesn't 
increase ad infinitum can be considered "maximal throughput".

2. 380,000 256-byte messages a second is a nice result, however, it 
doesn't tell much about the messaging system. It simply means that the 
system is able to exhaust 1GbE with messages 256 bytes long. To get more 
interesting results, test should be run with smaller messages 
(preferably 0 or 1 bytes long) where processing power will be the 
bottleneck rather than the networking infrastructure.

HTH.
Martin

Matthias Radestock wrote:
> Michael,
> 
> Mayne, Michael wrote:
> 
>> Red has produced a paper recently (June 2008) explaining its performance
>> testing lab that it did recently to show how optimised Red Hat on Intel
>> Xeon hardware can process very high message rates:
>> http://www.redhat.com/f/pdf/mrg/Reference_Architecture_MRG_Messaging_Thr
>> oughput.pdf 
>>
>> This paper was presented at an Intel FasterCITY - fasterMESSAGING event
>> in London on 23 June.
>> http://www.intelfasterfs.com/fastermessaging/ 
>> It contains a description of the test bench it used to generate its
>> figures - which were a repeatable ingress rate of 380,000 (256 byte)
>> messages per second. There is obviously a lot more to it - see the paper
>> for details.
>>
>> That could be a starter for ten.
> 
> I am familiar with that report. The tests conducted are pretty similar 
> to the ones we did with Intel last year and earlier this year (see 
> http://www.rabbitmq.com/resources/AMQP_Solution_Brief_final.pdf).
> 
> Unfortunately the test setup - "producers reliably en-queues messages 
> onto the broker as fast as they can, consumers reliably de-queue 
> messages from the broker as fast as they can" - isn't addressing the key 
> problem I described, namely controlling and adapting the ingress rate in 
> order to maximise throughput.
> 
> 
> Matthias.
> 
> _______________________________________________
> rabbitmq-discuss mailing list
> rabbitmq-discuss at lists.rabbitmq.com
> http://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss




From rabbitmq at tmm1.net  Mon Sep  1 21:16:50 2008
From: rabbitmq at tmm1.net (Aman Gupta)
Date: Mon, 1 Sep 2008 13:16:50 -0700
Subject: [rabbitmq-discuss] Gracefully shutting down rabbitmq
In-Reply-To: <269388e30809011307k39fe8fdcv1cca6fd702c7762@mail.gmail.com>
References: <e1c05edd0808281810t158a2cawb043a44c57a86e54@mail.gmail.com>
	<269388e30808290102l568673c2t22d0057ed7ff4c8c@mail.gmail.com>
	<e1c05edd0808290104m1275719dv8f90920423453d96@mail.gmail.com>
	<269388e30808290620k7d04542ah5218dd5a02a50e26@mail.gmail.com>
	<e1c05edd0809010931v6c47633p7b241140cc709642@mail.gmail.com>
	<269388e30809011307k39fe8fdcv1cca6fd702c7762@mail.gmail.com>
Message-ID: <e1c05edd0809011316r2e5f31a5j2314bc3a0f5046b4@mail.gmail.com>

>
> That doesn't seem like much. I just created 5k exchanges and
> created/bound 2 queues to each (i.e. 10k queues), which took about 9
> secs to complete, and then I shut the broker down, and restarted it.
> The recovery phase took about 20 secs, so I'm wondering what is taking
> so long when your broker has to recover. Another possibility is that
> it is spending the time in playing the log back in, which happens
> after the mnesia recovery phase.


> > Are there any other commands or options for triggering a shutdown of
> > rabbitmq?
>
> My favourites are Ctrl-C, kill-9 and halt() :-)


These are not graceful though, correct? Ideally I'd like to stop the daemon
in such a way that a recovery step is not required on the next startup.

On a more official note, you can call use the rabbitmqctl script with
> the argument stop, but that just calls the rabbit_control module with
> the stop argument, which is what you are effectively doing with the
> command you mentioned previously.
>
> If you do have Rabbit running in a shell (or even via a remote shell),
> another *cleaner* option is use the OTP application handler i.e.
>
> 1> application:stop(rabbit).


I'll try this and see if it produces better results.

I'll try to replicate your problem running the same command as you did.
>
> BTW, when you run this command, do you see an epmd process running in
> your activity log?


epmd is running on the machine.

  Aman
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20080901/9ef579a4/attachment.htm 

From 0x6e6562 at gmail.com  Mon Sep  1 21:17:22 2008
From: 0x6e6562 at gmail.com (Ben Hood)
Date: Mon, 1 Sep 2008 21:17:22 +0100
Subject: [rabbitmq-discuss] Gracefully shutting down rabbitmq
In-Reply-To: <269388e30809011307k39fe8fdcv1cca6fd702c7762@mail.gmail.com>
References: <e1c05edd0808281810t158a2cawb043a44c57a86e54@mail.gmail.com>
	<269388e30808290102l568673c2t22d0057ed7ff4c8c@mail.gmail.com>
	<e1c05edd0808290104m1275719dv8f90920423453d96@mail.gmail.com>
	<269388e30808290620k7d04542ah5218dd5a02a50e26@mail.gmail.com>
	<e1c05edd0809010931v6c47633p7b241140cc709642@mail.gmail.com>
	<269388e30809011307k39fe8fdcv1cca6fd702c7762@mail.gmail.com>
Message-ID: <269388e30809011317q313f004bj320e16f5c54b9409@mail.gmail.com>

Aman,

On Mon, Sep 1, 2008 at 9:07 PM, Ben Hood <0x6e6562 at gmail.com> wrote:
> That doesn't seem like much. I just created 5k exchanges and
> created/bound 2 queues to each (i.e. 10k queues), which took about 9
> secs to complete, and then I shut the broker down, and restarted it.
> The recovery phase took about 20 secs, so I'm wondering what is taking
> so long when your broker has to recover.

Sorry about this, but this result is a bit misleading. I ran it
against a patchset I'm currently working on (18776). I've just run the
same test against the default branch and it takes 130 secs to perform
the recovery. So if you're working off the 1.4.0 release, this may
explain your results to an extent.

Ben



From 0x6e6562 at gmail.com  Mon Sep  1 21:18:58 2008
From: 0x6e6562 at gmail.com (Ben Hood)
Date: Mon, 1 Sep 2008 21:18:58 +0100
Subject: [rabbitmq-discuss] Gracefully shutting down rabbitmq
In-Reply-To: <e1c05edd0809011316r2e5f31a5j2314bc3a0f5046b4@mail.gmail.com>
References: <e1c05edd0808281810t158a2cawb043a44c57a86e54@mail.gmail.com>
	<269388e30808290102l568673c2t22d0057ed7ff4c8c@mail.gmail.com>
	<e1c05edd0808290104m1275719dv8f90920423453d96@mail.gmail.com>
	<269388e30808290620k7d04542ah5218dd5a02a50e26@mail.gmail.com>
	<e1c05edd0809010931v6c47633p7b241140cc709642@mail.gmail.com>
	<269388e30809011307k39fe8fdcv1cca6fd702c7762@mail.gmail.com>
	<e1c05edd0809011316r2e5f31a5j2314bc3a0f5046b4@mail.gmail.com>
Message-ID: <269388e30809011318h72374105r354dab06d35a1621@mail.gmail.com>

Aman,

>> My favourites are Ctrl-C, kill-9 and halt() :-)
>
> These are not graceful though, correct? Ideally I'd like to stop the daemon
> in such a way that a recovery step is not required on the next startup.

Sorry, that was my pathetic attempt at a joke :-(

Ben



From rabbitmq at tmm1.net  Mon Sep  1 21:23:23 2008
From: rabbitmq at tmm1.net (Aman Gupta)
Date: Mon, 1 Sep 2008 13:23:23 -0700
Subject: [rabbitmq-discuss] Gracefully shutting down rabbitmq
In-Reply-To: <269388e30809011317q313f004bj320e16f5c54b9409@mail.gmail.com>
References: <e1c05edd0808281810t158a2cawb043a44c57a86e54@mail.gmail.com>
	<269388e30808290102l568673c2t22d0057ed7ff4c8c@mail.gmail.com>
	<e1c05edd0808290104m1275719dv8f90920423453d96@mail.gmail.com>
	<269388e30808290620k7d04542ah5218dd5a02a50e26@mail.gmail.com>
	<e1c05edd0809010931v6c47633p7b241140cc709642@mail.gmail.com>
	<269388e30809011307k39fe8fdcv1cca6fd702c7762@mail.gmail.com>
	<269388e30809011317q313f004bj320e16f5c54b9409@mail.gmail.com>
Message-ID: <e1c05edd0809011323r4d023c7fn75a825daaf4eac18@mail.gmail.com>

>
> On Mon, Sep 1, 2008 at 9:07 PM, Ben Hood <0x6e6562 at gmail.com> wrote:
> > That doesn't seem like much. I just created 5k exchanges and
> > created/bound 2 queues to each (i.e. 10k queues), which took about 9
> > secs to complete, and then I shut the broker down, and restarted it.
> > The recovery phase took about 20 secs, so I'm wondering what is taking
> > so long when your broker has to recover.
>
> Sorry about this, but this result is a bit misleading. I ran it
> against a patchset I'm currently working on (18776). I've just run the
> same test against the default branch and it takes 130 secs to perform
> the recovery. So if you're working off the 1.4.0 release, this may
> explain your results to an extent.
>

Ah, very interesting. What changed that the recovery time is reduced so
drastically?

  Aman
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20080901/183f07b3/attachment.htm 

From 0x6e6562 at gmail.com  Mon Sep  1 21:25:37 2008
From: 0x6e6562 at gmail.com (Ben Hood)
Date: Mon, 1 Sep 2008 21:25:37 +0100
Subject: [rabbitmq-discuss] Gracefully shutting down rabbitmq
In-Reply-To: <269388e30809011307k39fe8fdcv1cca6fd702c7762@mail.gmail.com>
References: <e1c05edd0808281810t158a2cawb043a44c57a86e54@mail.gmail.com>
	<269388e30808290102l568673c2t22d0057ed7ff4c8c@mail.gmail.com>
	<e1c05edd0808290104m1275719dv8f90920423453d96@mail.gmail.com>
	<269388e30808290620k7d04542ah5218dd5a02a50e26@mail.gmail.com>
	<e1c05edd0809010931v6c47633p7b241140cc709642@mail.gmail.com>
	<269388e30809011307k39fe8fdcv1cca6fd702c7762@mail.gmail.com>
Message-ID: <269388e30809011325x2ef91c70pb8c1581ab6ca7f52@mail.gmail.com>

Aman,

On Mon, Sep 1, 2008 at 9:07 PM, Ben Hood <0x6e6562 at gmail.com> wrote:
> I'll try to replicate your problem running the same command as you did.

I've just tried to reproduce this error using the following:

$ erl -sname rabbitmq_controller -noinput -s rabbit_control -extra -n
rabbit stop
Stopping and halting node rabbit at xlr8 ...done.

and it works perfectly :-(

So, I'm wondering what could be going on in your setup.

Can you tell us more about the OTP version your kernel, distro, etc?

Ben



From rabbitmq at tmm1.net  Mon Sep  1 21:29:35 2008
From: rabbitmq at tmm1.net (Aman Gupta)
Date: Mon, 1 Sep 2008 13:29:35 -0700
Subject: [rabbitmq-discuss] Gracefully shutting down rabbitmq
In-Reply-To: <269388e30809011325x2ef91c70pb8c1581ab6ca7f52@mail.gmail.com>
References: <e1c05edd0808281810t158a2cawb043a44c57a86e54@mail.gmail.com>
	<269388e30808290102l568673c2t22d0057ed7ff4c8c@mail.gmail.com>
	<e1c05edd0808290104m1275719dv8f90920423453d96@mail.gmail.com>
	<269388e30808290620k7d04542ah5218dd5a02a50e26@mail.gmail.com>
	<e1c05edd0809010931v6c47633p7b241140cc709642@mail.gmail.com>
	<269388e30809011307k39fe8fdcv1cca6fd702c7762@mail.gmail.com>
	<269388e30809011325x2ef91c70pb8c1581ab6ca7f52@mail.gmail.com>
Message-ID: <e1c05edd0809011329i1676a911v3e6fdaa0dd6baf95@mail.gmail.com>

$ uname -a
Linux cf 2.6.26.3 #1 SMP Wed Aug 27 00:44:10 PDT 2008 x86_64 Intel(R)
Xeon(R) CPU X3220 @ 2.40GHz GenuineIntel GNU/Linux

$ erl -v
Erlang (BEAM) emulator version 5.6.3 [source] [64-bit] [smp:4]
[async-threads:0] [hipe] [kernel-poll:false]

  Aman
On Mon, Sep 1, 2008 at 1:25 PM, Ben Hood <0x6e6562 at gmail.com> wrote:

> Aman,
>
> On Mon, Sep 1, 2008 at 9:07 PM, Ben Hood <0x6e6562 at gmail.com> wrote:
> > I'll try to replicate your problem running the same command as you did.
>
> I've just tried to reproduce this error using the following:
>
> $ erl -sname rabbitmq_controller -noinput -s rabbit_control -extra -n
> rabbit stop
> Stopping and halting node rabbit at xlr8 ...done.
>
> and it works perfectly :-(
>
> So, I'm wondering what could be going on in your setup.
>
> Can you tell us more about the OTP version your kernel, distro, etc?
>
> Ben
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20080901/96d5c56d/attachment.htm 

From 0x6e6562 at gmail.com  Mon Sep  1 21:33:40 2008
From: 0x6e6562 at gmail.com (Ben Hood)
Date: Mon, 1 Sep 2008 21:33:40 +0100
Subject: [rabbitmq-discuss] Gracefully shutting down rabbitmq
In-Reply-To: <e1c05edd0809011323r4d023c7fn75a825daaf4eac18@mail.gmail.com>
References: <e1c05edd0808281810t158a2cawb043a44c57a86e54@mail.gmail.com>
	<269388e30808290102l568673c2t22d0057ed7ff4c8c@mail.gmail.com>
	<e1c05edd0808290104m1275719dv8f90920423453d96@mail.gmail.com>
	<269388e30808290620k7d04542ah5218dd5a02a50e26@mail.gmail.com>
	<e1c05edd0809010931v6c47633p7b241140cc709642@mail.gmail.com>
	<269388e30809011307k39fe8fdcv1cca6fd702c7762@mail.gmail.com>
	<269388e30809011317q313f004bj320e16f5c54b9409@mail.gmail.com>
	<e1c05edd0809011323r4d023c7fn75a825daaf4eac18@mail.gmail.com>
Message-ID: <269388e30809011333x6dbf5941wf9249c034ff8c9fd@mail.gmail.com>

Aman,

On Mon, Sep 1, 2008 at 9:23 PM, Aman Gupta <rabbitmq at tmm1.net> wrote:
> Ah, very interesting. What changed that the recovery time is reduced so
> drastically?

Don't really know for certain, but we're refactoring the routing so
that it scales (in the worst case) linearly with the number of queues
and bindings, which in the current mainline it doesn't really do. The
re-arranging of the routing entries may have caused recovery to speed
up, but that certainly wasn't the intention, the intention was to
maintain some kind of sublinear complexity when routing to very large
numbers of queues and bindings under churn. If you want to check it
out, it's under bug18776 in hg, it passes all of the functional test
suites but we're still not convinced that it's quite there yet, hence
I'm still testing it. I'm hoping to land it this week some time, all
things going well.

Ben



From rabbitmq at tmm1.net  Mon Sep  1 22:44:04 2008
From: rabbitmq at tmm1.net (Aman Gupta)
Date: Mon, 1 Sep 2008 14:44:04 -0700
Subject: [rabbitmq-discuss] Gracefully shutting down rabbitmq
In-Reply-To: <FDF2B892-D051-4F22-A211-BA041021A062@synergy-solutions.biz>
References: <e1c05edd0808281810t158a2cawb043a44c57a86e54@mail.gmail.com>
	<269388e30808290102l568673c2t22d0057ed7ff4c8c@mail.gmail.com>
	<e1c05edd0808290104m1275719dv8f90920423453d96@mail.gmail.com>
	<269388e30808290620k7d04542ah5218dd5a02a50e26@mail.gmail.com>
	<e1c05edd0809010931v6c47633p7b241140cc709642@mail.gmail.com>
	<269388e30809011307k39fe8fdcv1cca6fd702c7762@mail.gmail.com>
	<269388e30809011325x2ef91c70pb8c1581ab6ca7f52@mail.gmail.com>
	<e1c05edd0809011329i1676a911v3e6fdaa0dd6baf95@mail.gmail.com>
	<FDF2B892-D051-4F22-A211-BA041021A062@synergy-solutions.biz>
Message-ID: <e1c05edd0809011444y33cb526wb2ed28e1bfca8c63@mail.gmail.com>

The error was being thrown by the original rabbitmq daemon, not the
controller erlang process. The controller process exited cleanly.. the
rabbitmq daemon received the halt signal and then proceeded to throw that
duplicate name error.
  Aman

On Mon, Sep 1, 2008 at 1:34 PM, Preston Marshall <
preston at synergy-solutions.biz> wrote:

> Aman, the error you were originally recieving was thrown because you were
> starting the "controller" as the same name as something that was running.
>  You either need to connect to the remote shell and run
> application:stop(rabbit). or run the command that Ben just posted.  You can
> also use toolbar:start(). to start a toolbar using X11 that will allow you
> to monitor and control nodes.  Good luck!
> On Sep 1, 2008, at 3:29 PM, Aman Gupta wrote:
>
> $ uname -a
> Linux cf 2.6.26.3 #1 SMP Wed Aug 27 00:44:10 PDT 2008 x86_64 Intel(R)
> Xeon(R) CPU X3220 @ 2.40GHz GenuineIntel GNU/Linux
>
> $ erl -v
> Erlang (BEAM) emulator version 5.6.3 [source] [64-bit] [smp:4]
> [async-threads:0] [hipe] [kernel-poll:false]
>
>   Aman
> On Mon, Sep 1, 2008 at 1:25 PM, Ben Hood <0x6e6562 at gmail.com> wrote:
>
>> Aman,
>>
>> On Mon, Sep 1, 2008 at 9:07 PM, Ben Hood <0x6e6562 at gmail.com> wrote:
>> > I'll try to replicate your problem running the same command as you did.
>>
>> I've just tried to reproduce this error using the following:
>>
>> $ erl -sname rabbitmq_controller -noinput -s rabbit_control -extra -n
>> rabbit stop
>> Stopping and halting node rabbit at xlr8 ...done.
>>
>> and it works perfectly :-(
>>
>> So, I'm wondering what could be going on in your setup.
>>
>> Can you tell us more about the OTP version your kernel, distro, etc?
>>
>> Ben
>>
>
> _______________________________________________
> rabbitmq-discuss mailing list
> rabbitmq-discuss at lists.rabbitmq.com
> http://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss
>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20080901/83f2ffc5/attachment.htm 

From rabbitmq-discuss_efine at usa.net  Mon Sep  1 23:23:07 2008
From: rabbitmq-discuss_efine at usa.net (Edwin Fine)
Date: Mon, 1 Sep 2008 18:23:07 -0400
Subject: [rabbitmq-discuss] performance
In-Reply-To: <48BC4C0B.9010101@imatix.com>
References: <48BBD9B5.9060504@lshift.net>
	<83BEB2D4766F8D4DAA703350B7E2FE82462826C3@exukmb02.eur.nsroot.net>
	<83BEB2D4766F8D4DAA703350B7E2FE8246D3D841@exukmb02.eur.nsroot.net>
	<48BBF87A.4060102@lshift.net> <48BC4C0B.9010101@imatix.com>
Message-ID: <6c2563b20809011523wbec6ebdrc2bf73da01ef9bc7@mail.gmail.com>

If you run with such short messages, what you are also indirectly measuring
is the maximum efficiency of the AMQP protocol because almost all of the
data will be AMQP PDU data.

Another consideration is that when you run using basic.consume, RabbitMQ
will push messages to the consumer as fast as possible. If the consumer is
an Erlang process, all that achieves is to fill up the Erlang  consumer's
process message queue as fast as Erlang can take it (which is pretty fast).
This only reflects the speed at which RabbitMQ can publish messages, not the
end-to-end throughput of the system as such. However, I can think of a
possible way around this (described later).

I think we need a number of different approaches taken together.

The first approach, which we could call the "pedal-to-the-metal" approach,
would be to measure the theoretical maximum performance envelope for a
specific hardware/OS platform, by running Erlang-only clients in-process
with the Rabbit server (i.e. in the same VM). This would eliminate all
networking because data would be passed between RabbitMQ and clients
internally via Erlang. This probably represents the fastest possible model.
At the same time, we would use the 1-byte data suggested by Martin, because
that represents the smallest possible packets. The result of this benchmark
would be a messages/second number that would represent the theoretical peak
one could approach (for one producer and consumer).

The above very synthetic benchmark could be used to probe system (i.e.
hardware + OS + Erlang) specific parameters to push performance. Nobody
would consider it to be realistic, but it's still useful. For example, using
+S 1 with multiple RMQ + client nodes; showing the effects of using kernel
poll (should be nil because there are no sockets being used); pre-allocated
Erlang process heaps; SMP Erlang vs single-CPU Erlang with and without
processor affinity; and so on.

Of course, what if you have multiple producers and consumers? How many
channels do you use? How do you configure the exchange(s)? It rapidly
becomes very complicated.

The next approach could be to move the Erlang clients to a TCP/IP networking
model (different VM, but on the same physical host, so hopefully it's only
the TCP/IP stack at play and no Ethernet hardware) and see the difference.
Of course, this is tricky because the clients and servers are both on the
same machine and may contend for resources.

Then we could move the clients to a different host altogether and hope the
Ethernet speed is not a significant limitation. The resource bottleneck
probably becomes the LAN hardware here.

Then we could start trying clustered RabbitMQ servers on multiple hosts, and
this is where it stops for most people (including me) because they don't
have the resources.

For each test, we could vary the message sizes and see the effect on message
rate and throughput. We could also try persistent vs. non-persistent,
basic.get vs basic.consume, and so on. There are so many possible variations
that this could become a full-time job!

As Martin points out, measuring throughput can be tricky. I suggest some
sort of feedback mechanism to adjust the speed at which messages are sent.
For example, the Erlang client could write its message consumption rate each
second into an ets table, which the producer could read. As long as the rate
goes up, the producer keeps pumping more through. As soon as the producer
sees the rate plateau or even drop, averaged over a few measurements to
prevent hysteresis, it cuts back. When the Erlang client is in a different
VM, this is more complicated, but you get the idea. Also, a problem is that
the feedback mechanism itself has CPU and networking overhead which will
have to be taken into account.

If the benchmarks are run for long enough (hours or even days), I think we
might overcome some of the statistical issues that Martin mentions.

My 2c worth.

On Mon, Sep 1, 2008 at 4:09 PM, Martin Sustrik <sustrik at imatix.com> wrote:

>
> Just few hints:
>
> 1. Measuring maximal throughput is tricky for various reasons, queueing
> being only one of them. There are statistical and methodological
> problems like hidden average, non-stability of the metric etc. However,
> simple way to get *some* results is to run the tests with publisher
> publishing messages at various rates. Maximal rate where latency doesn't
> increase ad infinitum can be considered "maximal throughput".
>
> 2. 380,000 256-byte messages a second is a nice result, however, it
> doesn't tell much about the messaging system. It simply means that the
> system is able to exhaust 1GbE with messages 256 bytes long. To get more
> interesting results, test should be run with smaller messages
> (preferably 0 or 1 bytes long) where processing power will be the
> bottleneck rather than the networking infrastructure.
>
> HTH.
> Martin
>
> Matthias Radestock wrote:
> > Michael,
> >
> > Mayne, Michael wrote:
> >
> >> Red has produced a paper recently (June 2008) explaining its performance
> >> testing lab that it did recently to show how optimised Red Hat on Intel
> >> Xeon hardware can process very high message rates:
> >>
> http://www.redhat.com/f/pdf/mrg/Reference_Architecture_MRG_Messaging_Thr
> >> oughput.pdf
> >>
> >> This paper was presented at an Intel FasterCITY - fasterMESSAGING event
> >> in London on 23 June.
> >> http://www.intelfasterfs.com/fastermessaging/
> >> It contains a description of the test bench it used to generate its
> >> figures - which were a repeatable ingress rate of 380,000 (256 byte)
> >> messages per second. There is obviously a lot more to it - see the paper
> >> for details.
> >>
> >> That could be a starter for ten.
> >
> > I am familiar with that report. The tests conducted are pretty similar
> > to the ones we did with Intel last year and earlier this year (see
> > http://www.rabbitmq.com/resources/AMQP_Solution_Brief_final.pdf).
> >
> > Unfortunately the test setup - "producers reliably en-queues messages
> > onto the broker as fast as they can, consumers reliably de-queue
> > messages from the broker as fast as they can" - isn't addressing the key
> > problem I described, namely controlling and adapting the ingress rate in
> > order to maximise throughput.
> >
> >
> > Matthias.
> >
> > _______________________________________________
> > rabbitmq-discuss mailing list
> > rabbitmq-discuss at lists.rabbitmq.com
> > http://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss
>
>
> _______________________________________________
> rabbitmq-discuss mailing list
> rabbitmq-discuss at lists.rabbitmq.com
> http://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss
>
>


-- 
For every expert there is an equal and opposite expert - Arthur C. Clarke
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20080901/a6153f1d/attachment.htm 

From petedao at gmail.com  Tue Sep  2 01:31:16 2008
From: petedao at gmail.com (Pete Kay)
Date: Tue, 2 Sep 2008 08:31:16 +0800
Subject: [rabbitmq-discuss] Debugging of Connection.class
In-Reply-To: <269388e30809010825t304dfd77lac25f8ec34c9b86c@mail.gmail.com>
References: <7aa8bd9d0809010325s73592144xd70afe5df1c499be@mail.gmail.com>
	<269388e30809010825t304dfd77lac25f8ec34c9b86c@mail.gmail.com>
Message-ID: <7aa8bd9d0809011731w6f1be734x62124caa215d7308@mail.gmail.com>

Hi Ben,

The correct bytes were written to the delegate.writeByptes().

Using ngrep, I see that the Flex client sends much less data to the server
than the Java Client:


===========================Flex Client ===============================

debian:/home/anne# ngrep  port 5672
interface: eth0 (192.168.1.0/255.255.255.0)
filter: (ip or ip6) and ( port 5672 )
########
T 192.168.1.100:58513 -> 192.168.1.104:5672 [AP]
  AMQP....
##
T 192.168.1.104:5672 -> 192.168.1.100:58513 [AP]
  ......
...........productS....RabbitMQ.versionS....1.4.0.platformS....Erlan
  g/OTP.copyrightS...gCopyright (C) 2007-2008 LShift Ltd., Cohesive
Financial
   Technologies LLC., and Rabbit Technologies Ltd..informationS...5Licensed
u
  nder the MPL.  See http://www.rabbitmq.com/....PLAIN AMQPLAIN....en_US.
#####


====================Java Client =============================


####
T 192.168.1.100:58520 -> 192.168.1.104:5672 [AP]
  AMQP....
##
T 192.168.1.104:5672 -> 192.168.1.100:58520 [AP]
  ......
...........productS....RabbitMQ.versionS....1.4.0.platformS....Erlan
  g/OTP.copyrightS...gCopyright (C) 2007-2008 LShift Ltd., Cohesive
Financial
   Technologies LLC., and Rabbit Technologies Ltd..informationS...5Licensed
u
  nder the MPL.  See http://www.rabbitmq.com/....PLAIN AMQPLAIN....en_US.
#
T 192.168.1.100:58520 -> 192.168.1.104:5672 [AP]
  ................productS....RabbitMQ.informationS...5Licensed under the
MPL
  .  See http://www.rabbitmq.com/.platformS....Java.copyrightS...gCopyright(
  C) 2007-2008 LShift Ltd., Cohesive Financial Technologies LLC., and Rabbit
  Technologies Ltd..versionS....1.4.0.PLAIN.....guest.guest.en_US.
#
T 192.168.1.104:5672 -> 192.168.1.100:58520 [AP]
  ....................
#
T 192.168.1.100:58520 -> 192.168.1.104:5672 [AP]
  ....................
##
T 192.168.1.100:58520 -> 192.168.1.104:5672 [AP]
  ..........(./...
##
T 192.168.1.104:5672 -> 192.168.1.100:58520 [AP]
  ..........).debian.sz.cn:5672.
#
T 192.168.1.100:58520 -> 192.168.1.104:5672 [AP]
  .............
#
T 192.168.1.104:5672 -> 192.168.1.100:58520 [AP]
  ............
#
T 192.168.1.100:58520 -> 192.168.1.104:5672 [AP]
  ............/data..
#
T 192.168.1.104:5672 -> 192.168.1.100:58520 [AP]
  ............e.
#
T 192.168.1.100:58520 -> 192.168.1.104:5672 [AP]
  ........2...e.SimpleQueue......
#
T 192.168.1.104:5672 -> 192.168.1.100:58520 [AP]
  ........2...SimpleQueue.........
#
T 192.168.1.100:58520 -> 192.168.1.104:5672 [AP]
  ........<...e.SimpleQueue...
#
T 192.168.1.104:5672 -> 192.168.1.100:58520 [AP]
  ......&.<..!amq.ctag-9jB3KisBEZQSrUunOq7L4w==.
##
T 192.168.1.104:5672 -> 192.168.1.100:58520 [AP]
  ........
##
T 192.168.1.100:58520 -> 192.168.1.104:5672 [AP]
  ........

It looks like when using the Java client, some data is missing or is not
being sent.  When I traced the Connection.class, I am pretty sure the
onSocketConnect() is called and the bytes are written to delegate.

Do you have any idea why this may be happening?

Thanks alot for all your help.

Best Regards,
Anne
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20080902/4de105fe/attachment.htm 

From matthias at lshift.net  Tue Sep  2 05:08:44 2008
From: matthias at lshift.net (Matthias Radestock)
Date: Tue, 02 Sep 2008 05:08:44 +0100
Subject: [rabbitmq-discuss] performance
In-Reply-To: <6c2563b20809011523wbec6ebdrc2bf73da01ef9bc7@mail.gmail.com>
References: <48BBD9B5.9060504@lshift.net>	<83BEB2D4766F8D4DAA703350B7E2FE82462826C3@exukmb02.eur.nsroot.net>	<83BEB2D4766F8D4DAA703350B7E2FE8246D3D841@exukmb02.eur.nsroot.net>	<48BBF87A.4060102@lshift.net>
	<48BC4C0B.9010101@imatix.com>
	<6c2563b20809011523wbec6ebdrc2bf73da01ef9bc7@mail.gmail.com>
Message-ID: <48BCBC4C.8010301@lshift.net>

Edwin,

Edwin Fine wrote:
> <snip>Lots of excellent suggestions of how to run tests</snip>
 > ...
> There are so many possible variations that this could become a
> full-time job!

Indeed, but, as I suggested earlier, we can start with a single test 
scenario and expand later. What's important is that the test is fully 
automated and calculates a max throughput figure that is reasonably 
accurate.

> As Martin points out, measuring throughput can be tricky. I suggest
> some sort of feedback mechanism to adjust the speed at which messages
> are sent. For example, the Erlang client could write its message
> consumption rate each second into an ets table, which the producer
> could read. As long as the rate goes up, the producer keeps pumping
> more through. As soon as the producer sees the rate plateau or even
> drop, averaged over a few measurements to prevent hysteresis, it cuts
> back.

I tried a different kind of feedback mechanism a while ago. I set up a 
test that keeps a certain number of messages "in flight" - the producer 
sends n messages and then for each message the consumer receives the 
producer sends another message. We wait a while for the system to settle 
down and then we measure the throughput. Then we pick a different 
in-flight count and repeat.

The idea behind this is that by varying the in-flight message count we 
can control how much buffering is taking place in the overall system and 
hence find the sweet spot at which it performs optimally.

Unfortunately it turns out that finding the sweet spot is hard. There 
are local maxima, and it shifts over time.


Matthias.



From 0x6e6562 at gmail.com  Tue Sep  2 07:02:41 2008
From: 0x6e6562 at gmail.com (Ben Hood)
Date: Tue, 2 Sep 2008 07:02:41 +0100
Subject: [rabbitmq-discuss] Gracefully shutting down rabbitmq
In-Reply-To: <e1c05edd0809011444y33cb526wb2ed28e1bfca8c63@mail.gmail.com>
References: <e1c05edd0808281810t158a2cawb043a44c57a86e54@mail.gmail.com>
	<269388e30808290102l568673c2t22d0057ed7ff4c8c@mail.gmail.com>
	<e1c05edd0808290104m1275719dv8f90920423453d96@mail.gmail.com>
	<269388e30808290620k7d04542ah5218dd5a02a50e26@mail.gmail.com>
	<e1c05edd0809010931v6c47633p7b241140cc709642@mail.gmail.com>
	<269388e30809011307k39fe8fdcv1cca6fd702c7762@mail.gmail.com>
	<269388e30809011325x2ef91c70pb8c1581ab6ca7f52@mail.gmail.com>
	<e1c05edd0809011329i1676a911v3e6fdaa0dd6baf95@mail.gmail.com>
	<FDF2B892-D051-4F22-A211-BA041021A062@synergy-solutions.biz>
	<e1c05edd0809011444y33cb526wb2ed28e1bfca8c63@mail.gmail.com>
Message-ID: <269388e30809012302h47318965y7210548810c1d0b6@mail.gmail.com>

Aman,

On Mon, Sep 1, 2008 at 10:44 PM, Aman Gupta <rabbitmq at tmm1.net> wrote:
> The error was being thrown by the original rabbitmq daemon, not the
> controller erlang process. The controller process exited cleanly.. the
> rabbitmq daemon received the halt signal and then proceeded to throw that
> duplicate name error.

Yes, it's really strange that it initiates the shutdown procedure,
gets through it sucessfully (the Rabbit application does actually
stop) and then it barfs.

To try to reproduce this I ran a second Erlang shell with the same
name as the shutdown controller, i.e.

$ erl -sname rabbitmq_controller

and then tried to shutdown:

$ erl -sname rabbitmq_controller -noinput -s rabbit_control -extra -n
rabbit stop

which results in the "Protocol: ~p: register error: ~p~n" that was
orginally reported, but this in the VM that is running the shutdown
command, not in the broker itself.

Also, having TCP connections open to the broker when you send the
shutdown command is handled as well, so having a few clients connected
during shutdown doesn't provoke the problem for me.

Ben



From 0x6e6562 at gmail.com  Tue Sep  2 17:37:32 2008
From: 0x6e6562 at gmail.com (Ben Hood)
Date: Tue, 2 Sep 2008 17:37:32 +0100
Subject: [rabbitmq-discuss] This is a test mail - don't bother to read this
Message-ID: <269388e30809020937v36e45b4et9017657d361a3b54@mail.gmail.com>

We have installed a new mail server at Rabbit and I'm just testing it.



From 0x6e6562 at gmail.com  Tue Sep  2 17:47:01 2008
From: 0x6e6562 at gmail.com (Ben Hood)
Date: Tue, 2 Sep 2008 17:47:01 +0100
Subject: [rabbitmq-discuss] Another test
Message-ID: <269388e30809020947y5abffcc6x10fe8e76d76de394@mail.gmail.com>

YAT



From hubert at lshift.net  Tue Sep  2 18:07:36 2008
From: hubert at lshift.net (Hubert Plociniczak)
Date: Tue, 02 Sep 2008 18:07:36 +0100
Subject: [rabbitmq-discuss] Another test
In-Reply-To: <269388e30809020947y5abffcc6x10fe8e76d76de394@mail.gmail.com>
References: <269388e30809020947y5abffcc6x10fe8e76d76de394@mail.gmail.com>
Message-ID: <48BD72D8.3040301@lshift.net>

Ben Hood wrote:
> YAT
>
> _______________________________________________
> rabbitmq-discuss mailing list
> rabbitmq-discuss at lists.rabbitmq.com
> http://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss
>   
Works for me...

-- 
 [][][] Hubert Plociniczak
   [][] LShift Ltd
 []  [] www.lshift.net




From mark.geib at echostar.com  Tue Sep  2 18:48:47 2008
From: mark.geib at echostar.com (Mark Geib)
Date: Tue, 02 Sep 2008 11:48:47 -0600
Subject: [rabbitmq-discuss] producer with no consumer
Message-ID: <48BD7C7F.6010501@echostar.com>

We are evaluating RabbitMQ for new system that will essentially provide 
a stream of messages containing some real time data. I have a prototype 
of the system built but when I stop all the consumers of the stream the 
broker starts using more cpu and the size of the broker, in memory used, 
starts growing. I assume that since the producer is still posting 
messages that they are being queued until a consumer connects.? Is this 
expected, can I configure the broker, or exchange, etc. so that messages 
are just dumped if there is no consumer.

Thanks.
Mark.


-- 
Principal Engineer
Cheyenne Software Engineering
mark.geib at echostar.com / 35-215




From 0x6e6562 at gmail.com  Tue Sep  2 19:15:50 2008
From: 0x6e6562 at gmail.com (Ben Hood)
Date: Tue, 2 Sep 2008 19:15:50 +0100
Subject: [rabbitmq-discuss] producer with no consumer
In-Reply-To: <48BD7C7F.6010501@echostar.com>
References: <48BD7C7F.6010501@echostar.com>
Message-ID: <269388e30809021115y62c22c3di4eef46444a91809e@mail.gmail.com>

Mark,

On Tue, Sep 2, 2008 at 6:48 PM, Mark Geib <mark.geib at echostar.com> wrote:
> I assume that since the producer is still posting
> messages that they are being queued until a consumer connects.? Is this
> expected, can I configure the broker, or exchange, etc. so that messages
> are just dumped if there is no consumer.

You can set the auto-delete flag when you declare your queues, so that
the queue is deleted when all consumers have finished using it, and
any subsequent messages will not be routed to those queues.

HTH,

Ben



From 0x6e6562 at gmail.com  Tue Sep  2 19:18:00 2008
From: 0x6e6562 at gmail.com (Ben Hood)
Date: Tue, 2 Sep 2008 19:18:00 +0100
Subject: [rabbitmq-discuss] Fwd:  Debugging of Connection.class
In-Reply-To: <269388e30809020642g6c7ee1baqfd3c2f72cb55756d@mail.gmail.com>
References: <7aa8bd9d0809010325s73592144xd70afe5df1c499be@mail.gmail.com>
	<269388e30809010825t304dfd77lac25f8ec34c9b86c@mail.gmail.com>
	<7aa8bd9d0809011731w6f1be734x62124caa215d7308@mail.gmail.com>
	<269388e30809020604k28072619p9e755c24b5731c74@mail.gmail.com>
	<7aa8bd9d0809020633o22dcb8bar30798f8b6b6917b4@mail.gmail.com>
	<269388e30809020642g6c7ee1baqfd3c2f72cb55756d@mail.gmail.com>
Message-ID: <269388e30809021118s1ccf1f2l274c1408b49ca3f@mail.gmail.com>

---------- Forwarded message ----------
From: Ben Hood <0x6e6562 at gmail.com>
Date: Tue, Sep 2, 2008 at 2:42 PM
Subject: Re: [rabbitmq-discuss] Debugging of Connection.class
To: Pete Kay <petedao at gmail.com>
Cc: rabbitmq <rabbitmq-discuss at lists.rabbitmq.com>


Anne,

On Tue, Sep 2, 2008 at 2:33 PM, Pete Kay <petedao at gmail.com> wrote:
> Hi Ben,
>
> I debugged into the ConnectionStateHandler and found that only the Start is
> executed:
> 1. Receive connection.Start
> 2. Send connection.StartOk
>
> The other functions are not getting called.  I am pretty sure the
> line             send(new Command(startOk));
>  is executed.

If the startOk was sent, then you shouldn't be able to see it with ngrep?

And if that got sent, then the broker should respond with a tune
command. Do you see this go over the network?

Ben



From 0x6e6562 at gmail.com  Tue Sep  2 19:18:33 2008
From: 0x6e6562 at gmail.com (Ben Hood)
Date: Tue, 2 Sep 2008 19:18:33 +0100
Subject: [rabbitmq-discuss] Fwd:  Debugging of Connection.class
In-Reply-To: <269388e30809020604k28072619p9e755c24b5731c74@mail.gmail.com>
References: <7aa8bd9d0809010325s73592144xd70afe5df1c499be@mail.gmail.com>
	<269388e30809010825t304dfd77lac25f8ec34c9b86c@mail.gmail.com>
	<7aa8bd9d0809011731w6f1be734x62124caa215d7308@mail.gmail.com>
	<269388e30809020604k28072619p9e755c24b5731c74@mail.gmail.com>
Message-ID: <269388e30809021118w37a21a8k5fcbc61679e12995@mail.gmail.com>

---------- Forwarded message ----------
From: Ben Hood <0x6e6562 at gmail.com>
Date: Tue, Sep 2, 2008 at 2:04 PM
Subject: Re: [rabbitmq-discuss] Debugging of Connection.class
To: Pete Kay <petedao at gmail.com>
Cc: rabbitmq <rabbitmq-discuss at lists.rabbitmq.com>


Anne,

On Tue, Sep 2, 2008 at 1:31 AM, Pete Kay <petedao at gmail.com> wrote:
> The correct bytes were written to the delegate.writeByptes().
>
> Using ngrep, I see that the Flex client sends much less data to the server
> than the Java Client:
>
>
> ===========================Flex Client ===============================
>
> debian:/home/anne# ngrep  port 5672
> interface: eth0 (192.168.1.0/255.255.255.0)
> filter: (ip or ip6) and ( port 5672 )
> ########
> T 192.168.1.100:58513 -> 192.168.1.104:5672 [AP]
>   AMQP....
> ##
> T 192.168.1.104:5672 -> 192.168.1.100:58513 [AP]
>   ......
> ...........productS....RabbitMQ.versionS....1.4.0.platformS....Erlan
>   g/OTP.copyrightS...gCopyright (C) 2007-2008 LShift Ltd., Cohesive
> Financial
>    Technologies LLC., and Rabbit Technologies Ltd..informationS...5Licensed
> u
>   nder the MPL.  See http://www.rabbitmq.com/....PLAIN AMQPLAIN....en_US.
> #####

So the broker is actually receiving the header. It then sends the
client the Start command and waits for the client's response - in this
case for a long time :-(

OK, now you need to debug into the command exchange that creates an
AMQP connection between the client and the broker. From the client's
perspective, the flow looks like this:

1. Receive connection.Start
2. Send connection.StartOk
3. Receive connection.Tune
4. Send connection.TuneOk
5. Send connection.Open
6. Receive connection.OpenOk

This is handled in the ConnectionStateHandler class, and the event
handling in this class is fairly well documented.

Look at the the onStart function.

HTH,

Ben



From 0x6e6562 at gmail.com  Tue Sep  2 19:21:48 2008
From: 0x6e6562 at gmail.com (Ben Hood)
Date: Tue, 2 Sep 2008 19:21:48 +0100
Subject: [rabbitmq-discuss] Mail server upgrade
Message-ID: <269388e30809021121n7ad81c22wb3582ce5e99b2954@mail.gmail.com>

Hi all,

The mail infrastructure at RabbitMQ has been upgraded today, which is
the reason why you see some funny test posts and some forwarded
messages that couldn't be delivered earlier.

Also, if you tried to post to the list today, but received a bounce,
this should be working now.

Ben



From mark.geib at echostar.com  Tue Sep  2 19:48:46 2008
From: mark.geib at echostar.com (Mark Geib)
Date: Tue, 02 Sep 2008 12:48:46 -0600
Subject: [rabbitmq-discuss] producer with no consumer
In-Reply-To: <269388e30809021115y62c22c3di4eef46444a91809e@mail.gmail.com>
References: <48BD7C7F.6010501@echostar.com>
	<269388e30809021115y62c22c3di4eef46444a91809e@mail.gmail.com>
Message-ID: <48BD8A8E.9010807@echostar.com>

I just ran another test. Restarted the broker. Then I started the 
producer but never started a consumer and the broker process continues 
to grow in memory usage. This seems odd, since no consumer has every 
connected.

Ben Hood wrote:
> Mark,
> 
> On Tue, Sep 2, 2008 at 6:48 PM, Mark Geib <mark.geib at echostar.com> wrote:
>> I assume that since the producer is still posting
>> messages that they are being queued until a consumer connects.? Is this
>> expected, can I configure the broker, or exchange, etc. so that messages
>> are just dumped if there is no consumer.
> 
> You can set the auto-delete flag when you declare your queues, so that
> the queue is deleted when all consumers have finished using it, and
> any subsequent messages will not be routed to those queues.
> 
> HTH,
> 
> Ben
> 

-- 
Principal Engineer
Cheyenne Software Engineering
mark.geib at echostar.com / 35-215




From holger at wizards.de  Tue Sep  2 20:22:46 2008
From: holger at wizards.de (=?ISO-8859-1?Q?Holger_Hoffst=E4tte?=)
Date: Tue, 02 Sep 2008 21:22:46 +0200
Subject: [rabbitmq-discuss] producer with no consumer
In-Reply-To: <48BD8A8E.9010807@echostar.com>
References: <48BD7C7F.6010501@echostar.com>	<269388e30809021115y62c22c3di4eef46444a91809e@mail.gmail.com>
	<48BD8A8E.9010807@echostar.com>
Message-ID: <48BD9286.4010003@wizards.de>

Mark Geib wrote:
> I just ran another test. Restarted the broker. Then I started the 
> producer but never started a consumer and the broker process continues 
> to grow in memory usage. This seems odd, since no consumer has every 
> connected.

ISTM that this should be either a new exchange type (probably not really a
 viable solution) or one of several policies on the exchange in addition
to the queue lifecycle handled by the client. Just like automagic spooling
to/from disk when high/low watermarks are reached etc. The spec seems
silent on such customizable behaviour, I just looked and did not find
anything..odd.
Dropping everything by default when no client queues were yet created
would probably be surprising and unexpected..

-h



From 0x6e6562 at gmail.com  Tue Sep  2 20:41:51 2008
From: 0x6e6562 at gmail.com (Ben Hood)
Date: Tue, 2 Sep 2008 20:41:51 +0100
Subject: [rabbitmq-discuss] producer with no consumer
In-Reply-To: <48BD8A8E.9010807@echostar.com>
References: <48BD7C7F.6010501@echostar.com>
	<269388e30809021115y62c22c3di4eef46444a91809e@mail.gmail.com>
	<48BD8A8E.9010807@echostar.com>
Message-ID: <269388e30809021241w1a1d2733oe676d25961b358cf@mail.gmail.com>

Mark,

On Tue, Sep 2, 2008 at 7:48 PM, Mark Geib <mark.geib at echostar.com> wrote:
> I just ran another test. Restarted the broker. Then I started the producer
> but never started a consumer and the broker process continues to grow in
> memory usage. This seems odd, since no consumer has every connected.

One explanation for this is is that you are just queuing up messages
without dequeueing them.

I'm assuming that you read my message about auto-delete and are
expecting that when you have no consumers, then you have no queues
that messages can get routed to.

If this is the case, then you are experiencing a counter intuitive
facet of the AMQP spec wrt auto-delete:

"If set, the queue is deleted when all consumers have finished using it.
Last consumer can be cancelled either explicitly or because its
channel is closed.
If there was no consumer ever on the queue, it won't be deleted."

BTW, to check queue depths, you can use the function stat_all/0 in
rabbit_amqqueue from the Erlang shell:

(rabbit at host)1> rabbit_amqqueue:stat_all().

This could also be run via a remote shell as well.

HTH,

Ben



From holger at wizards.de  Tue Sep  2 23:42:31 2008
From: holger at wizards.de (=?ISO-8859-1?Q?Holger_Hoffst=E4tte?=)
Date: Wed, 03 Sep 2008 00:42:31 +0200
Subject: [rabbitmq-discuss] producer with no consumer
In-Reply-To: <48BD9286.4010003@wizards.de>
References: <48BD7C7F.6010501@echostar.com>	<269388e30809021115y62c22c3di4eef46444a91809e@mail.gmail.com>	<48BD8A8E.9010807@echostar.com>
	<48BD9286.4010003@wizards.de>
Message-ID: <48BDC157.8040401@wizards.de>

Holger Hoffst?tte wrote:
> Dropping everything by default when no client queues were yet created
> would probably be surprising and unexpected..

As it turns out this is what happens with auto-delete, as Ben described in
his other mail.

Another approach might have been per-message TTL and -expiry, but since
the current 0.9 spec is apparently a bit unclear on the details, this is
not yet implemented in Rabbit and will have to wait until spec 0.91 is out.

Holger



From fingermark at gmail.com  Wed Sep  3 00:25:04 2008
From: fingermark at gmail.com (newps)
Date: Tue, 2 Sep 2008 16:25:04 -0700 (PDT)
Subject: [rabbitmq-discuss] producer with no consumer
In-Reply-To: <48BDC157.8040401@wizards.de>
References: <48BD7C7F.6010501@echostar.com>
	<269388e30809021115y62c22c3di4eef46444a91809e@mail.gmail.com>
	<48BD8A8E.9010807@echostar.com> <48BD9286.4010003@wizards.de>
	<48BDC157.8040401@wizards.de>
Message-ID: <19280325.post@talk.nabble.com>


> "If set, the queue is deleted when all consumers have finished using it.
> Last consumer can be cancelled either explicitly or because its
> channel is closed.
> If there was no consumer ever on the queue, it won't be deleted."

Is there some additional setting that can be applied to prevent such
behavior?  Or would that go against AMQP design somehow?

Thanks,
Bradford


Holger Hoffstaette wrote:
> 
> Holger Hoffst?tte wrote:
>> Dropping everything by default when no client queues were yet created
>> would probably be surprising and unexpected..
> 
> As it turns out this is what happens with auto-delete, as Ben described in
> his other mail.
> 
> Another approach might have been per-message TTL and -expiry, but since
> the current 0.9 spec is apparently a bit unclear on the details, this is
> not yet implemented in Rabbit and will have to wait until spec 0.91 is
> out.
> 
> Holger
> 
> _______________________________________________
> rabbitmq-discuss mailing list
> rabbitmq-discuss at lists.rabbitmq.com
> http://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss
> 
> 

-- 
View this message in context: http://www.nabble.com/producer-with-no-consumer-tp19275012p19280325.html
Sent from the RabbitMQ mailing list archive at Nabble.com.




From fingermark at gmail.com  Wed Sep  3 00:30:48 2008
From: fingermark at gmail.com (newps)
Date: Tue, 2 Sep 2008 16:30:48 -0700 (PDT)
Subject: [rabbitmq-discuss]  New to AMQP - Who Declares Exchange
Message-ID: <19280376.post@talk.nabble.com>


I'm interested in creating a topic exchange.  Which entity should declare the
exchange:  the publisher or subscriber?  And why?

Thanks,
Bradford
-- 
View this message in context: http://www.nabble.com/New-to-AMQP---Who-Declares-Exchange-tp19280376p19280376.html
Sent from the RabbitMQ mailing list archive at Nabble.com.




From petedao at gmail.com  Wed Sep  3 00:53:37 2008
From: petedao at gmail.com (Pete Kay)
Date: Wed, 3 Sep 2008 07:53:37 +0800
Subject: [rabbitmq-discuss] Fwd: Debugging of Connection.class
In-Reply-To: <269388e30809021118w37a21a8k5fcbc61679e12995@mail.gmail.com>
References: <7aa8bd9d0809010325s73592144xd70afe5df1c499be@mail.gmail.com>
	<269388e30809010825t304dfd77lac25f8ec34c9b86c@mail.gmail.com>
	<7aa8bd9d0809011731w6f1be734x62124caa215d7308@mail.gmail.com>
	<269388e30809020604k28072619p9e755c24b5731c74@mail.gmail.com>
	<269388e30809021118w37a21a8k5fcbc61679e12995@mail.gmail.com>
Message-ID: <7aa8bd9d0809021653jced9676o1741a4340fcd124a@mail.gmail.com>

Hi Ben,

I found that in the readFrom function, input.readUnsignedByte() returns 1
and input.bytesAvailable returns 0 when it is called.  How come the Flex is
not getting any bytes back?

Does anyone have any idea why?

Thanks,
Anne

On Wed, Sep 3, 2008 at 2:18 AM, Ben Hood <0x6e6562 at gmail.com> wrote:

> ---------- Forwarded message ----------
> From: Ben Hood <0x6e6562 at gmail.com>
> Date: Tue, Sep 2, 2008 at 2:04 PM
> Subject: Re: [rabbitmq-discuss] Debugging of Connection.class
> To: Pete Kay <petedao at gmail.com>
> Cc: rabbitmq <rabbitmq-discuss at lists.rabbitmq.com>
>
>
>  Anne,
>
> On Tue, Sep 2, 2008 at 1:31 AM, Pete Kay <petedao at gmail.com> wrote:
> > The correct bytes were written to the delegate.writeByptes().
> >
> > Using ngrep, I see that the Flex client sends much less data to the
> server
> > than the Java Client:
> >
> >
> > ===========================Flex Client ===============================
> >
> > debian:/home/anne# ngrep  port 5672
> > interface: eth0 (192.168.1.0/255.255.255.0)
> > filter: (ip or ip6) and ( port 5672 )
> > ########
> > T 192.168.1.100:58513 -> 192.168.1.104:5672 [AP]
> >   AMQP....
> > ##
> > T 192.168.1.104:5672 -> 192.168.1.100:58513 [AP]
> >   ......
> > ...........productS....RabbitMQ.versionS....1.4.0.platformS....Erlan
> >   g/OTP.copyrightS...gCopyright (C) 2007-2008 LShift Ltd., Cohesive
> > Financial
> >    Technologies LLC., and Rabbit Technologies
> Ltd..informationS...5Licensed
> > u
> >   nder the MPL.  See http://www.rabbitmq.com/....PLAINAMQPLAIN....en_US.
> > #####
>
> So the broker is actually receiving the header. It then sends the
> client the Start command and waits for the client's response - in this
> case for a long time :-(
>
> OK, now you need to debug into the command exchange that creates an
> AMQP connection between the client and the broker. From the client's
> perspective, the flow looks like this:
>
> 1. Receive connection.Start
> 2. Send connection.StartOk
> 3. Receive connection.Tune
> 4. Send connection.TuneOk
> 5. Send connection.Open
> 6. Receive connection.OpenOk
>
> This is handled in the ConnectionStateHandler class, and the event
> handling in this class is fairly well documented.
>
> Look at the the onStart function.
>
> HTH,
>
> Ben
>
>  _______________________________________________
> rabbitmq-discuss mailing list
> rabbitmq-discuss at lists.rabbitmq.com
> http://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20080903/d16d5421/attachment.htm 

From 0x6e6562 at gmail.com  Wed Sep  3 01:22:38 2008
From: 0x6e6562 at gmail.com (Ben Hood)
Date: Wed, 3 Sep 2008 01:22:38 +0100
Subject: [rabbitmq-discuss] producer with no consumer
In-Reply-To: <19280325.post@talk.nabble.com>
References: <48BD7C7F.6010501@echostar.com>
	<269388e30809021115y62c22c3di4eef46444a91809e@mail.gmail.com>
	<48BD8A8E.9010807@echostar.com> <48BD9286.4010003@wizards.de>
	<48BDC157.8040401@wizards.de> <19280325.post@talk.nabble.com>
Message-ID: <269388e30809021722q5fcd7a89td12d64ed25a27fbd@mail.gmail.com>

Bradford,

On Wed, Sep 3, 2008 at 12:25 AM, newps <fingermark at gmail.com> wrote:
>
>> "If set, the queue is deleted when all consumers have finished using it.
>> Last consumer can be cancelled either explicitly or because its
>> channel is closed.
>> If there was no consumer ever on the queue, it won't be deleted."
>
> Is there some additional setting that can be applied to prevent such
> behavior?  Or would that go against AMQP design somehow?

Why don't you set auto-delete to false?

Ben



From 0x6e6562 at gmail.com  Wed Sep  3 01:29:50 2008
From: 0x6e6562 at gmail.com (Ben Hood)
Date: Wed, 3 Sep 2008 01:29:50 +0100
Subject: [rabbitmq-discuss] New to AMQP - Who Declares Exchange
In-Reply-To: <19280376.post@talk.nabble.com>
References: <19280376.post@talk.nabble.com>
Message-ID: <269388e30809021729s3a66b80ar49bd0fe1475a9bd6@mail.gmail.com>

Bradford,

On Wed, Sep 3, 2008 at 12:30 AM, newps <fingermark at gmail.com> wrote:
>
> I'm interested in creating a topic exchange.  Which entity should declare the
> exchange:  the publisher or subscriber?  And why?

Not wanting to be overly theoretical, but the AMQP working group is
now moving to a more formal definition of declarations that mean that
they have the same semantics as an assertion.

So by saying declare queue q  or declare exchange x, you are
effectively saying "I assert the existence of object o, if it does not
exist, make it so".

Publishers need to write to somewhere.

Consumers need to have queues bound to something.

So both sides are only interested in the mere existence of the thing
they need to do their job, not whether they or some other guy
originally initiated that object's creation.

Does that answer your question?

Ben



From fingermark at gmail.com  Wed Sep  3 01:35:11 2008
From: fingermark at gmail.com (bradford)
Date: Tue, 2 Sep 2008 20:35:11 -0400
Subject: [rabbitmq-discuss] New to AMQP - Who Declares Exchange
In-Reply-To: <269388e30809021729s3a66b80ar49bd0fe1475a9bd6@mail.gmail.com>
References: <19280376.post@talk.nabble.com>
	<269388e30809021729s3a66b80ar49bd0fe1475a9bd6@mail.gmail.com>
Message-ID: <7fa430270809021735w2f81b99lcee6c112efa79f9@mail.gmail.com>

Yes it does.  Thank you.  So, then it makes sense for both the
publisher and consumer to both declare the exchange.

Thanks,
Bradford

On Tue, Sep 2, 2008 at 8:29 PM, Ben Hood <0x6e6562 at gmail.com> wrote:
> Bradford,
>
> On Wed, Sep 3, 2008 at 12:30 AM, newps <fingermark at gmail.com> wrote:
>>
>> I'm interested in creating a topic exchange.  Which entity should declare the
>> exchange:  the publisher or subscriber?  And why?
>
> Not wanting to be overly theoretical, but the AMQP working group is
> now moving to a more formal definition of declarations that mean that
> they have the same semantics as an assertion.
>
> So by saying declare queue q  or declare exchange x, you are
> effectively saying "I assert the existence of object o, if it does not
> exist, make it so".
>
> Publishers need to write to somewhere.
>
> Consumers need to have queues bound to something.
>
> So both sides are only interested in the mere existence of the thing
> they need to do their job, not whether they or some other guy
> originally initiated that object's creation.
>
> Does that answer your question?
>
> Ben
>



From 0x6e6562 at gmail.com  Wed Sep  3 01:46:38 2008
From: 0x6e6562 at gmail.com (Ben Hood)
Date: Wed, 3 Sep 2008 01:46:38 +0100
Subject: [rabbitmq-discuss] New to AMQP - Who Declares Exchange
In-Reply-To: <7fa430270809021735w2f81b99lcee6c112efa79f9@mail.gmail.com>
References: <19280376.post@talk.nabble.com>
	<269388e30809021729s3a66b80ar49bd0fe1475a9bd6@mail.gmail.com>
	<7fa430270809021735w2f81b99lcee6c112efa79f9@mail.gmail.com>
Message-ID: <269388e30809021746r3fabac9amcc9bbc91d971386d@mail.gmail.com>

On Wed, Sep 3, 2008 at 1:35 AM, bradford <fingermark at gmail.com> wrote:
> Yes it does.  Thank you.  So, then it makes sense for both the
> publisher and consumer to both declare the exchange.

Semantically yes. But don't be too dogmatic about it in every scenrio,
if your application knows for sure that a particular queue or exchange
definitely does exist, it can save a lookup for the existence of that
object. Just an efficiency consideration. But don't optimize
prematurely :-)



From rabbitmq-discuss_efine at usa.net  Wed Sep  3 04:24:32 2008
From: rabbitmq-discuss_efine at usa.net (Edwin Fine)
Date: Tue, 2 Sep 2008 23:24:32 -0400
Subject: [rabbitmq-discuss] New to AMQP - Who Declares Exchange
In-Reply-To: <269388e30809021746r3fabac9amcc9bbc91d971386d@mail.gmail.com>
References: <19280376.post@talk.nabble.com>
	<269388e30809021729s3a66b80ar49bd0fe1475a9bd6@mail.gmail.com>
	<7fa430270809021735w2f81b99lcee6c112efa79f9@mail.gmail.com>
	<269388e30809021746r3fabac9amcc9bbc91d971386d@mail.gmail.com>
Message-ID: <6c2563b20809022024s2c13635cqe6c212b69a4b7c6a@mail.gmail.com>

OTOH, belated pessimization is the leaf of no good :)

On Tue, Sep 2, 2008 at 8:46 PM, Ben Hood <0x6e6562 at gmail.com> wrote:

> On Wed, Sep 3, 2008 at 1:35 AM, bradford <fingermark at gmail.com> wrote:
> > Yes it does.  Thank you.  So, then it makes sense for both the
> > publisher and consumer to both declare the exchange.
>
> Semantically yes. But don't be too dogmatic about it in every scenrio,
> if your application knows for sure that a particular queue or exchange
> definitely does exist, it can save a lookup for the existence of that
> object. Just an efficiency consideration. But don't optimize
> prematurely :-)
>
> _______________________________________________
> rabbitmq-discuss mailing list
> rabbitmq-discuss at lists.rabbitmq.com
> http://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20080902/4db1a88a/attachment.htm 

From preston at synergy-solutions.biz  Thu Sep  4 02:28:32 2008
From: preston at synergy-solutions.biz (Preston Marshall)
Date: Wed, 3 Sep 2008 20:28:32 -0500
Subject: [rabbitmq-discuss] Creating Queues and Exchanges on the Fly
Message-ID: <777343D9-D050-4288-BC9C-C4CFF9AD5F5D@synergy-solutions.biz>

Hi all, I have a few questions related to RabbitMQ and tmm1's (Aman  
Gupta) Ruby library for amqp.  I have a situation where I have about 5  
different queues setup like this:

amq.queue('all').bind(amq.topic, :key => "events").subscribe

then inside of the binding, i have something that uses ActiveResource  
to add an event based on the content of the message:

doc = REXML::Document.new object.to_s
EventMessage.create :name => doc.elements['// 
headline'].text.to_s, :home_county =>  
info.headers[:sender].to_s, :acknowledged => false, :external =>  
true, :event_type_id => doc.elements['//typeid'].text.to_i, :status_id  
=> doc.elements['//statusid'].text.to_i, :scope => "#{doc.elements['// 
scope'].text}", :urgency_id => doc.elements['// 
urgencyid'].text.to_i, :severity_id => doc.elements['// 
severityid'].text.to_i, :certainty_id => doc.elements['// 
certaintyid'].text.to_i, :uuid => doc.elements['//identifier'].text.to_s

Now I have an interesting problem which probably requires and  
interesting solution :).  I can successfully pass events through my  
different exchanges, i have a 'all' queue, along with national,  
regional, state, and stateregion.  They all have different routing  
keys that can be used to send to them like for example one key is  
events.us.5.al.4, that in particular creates a queue named stateregion  
and binds to it with a key that listens for messages only for that  
state region, for that state, for that region, for that nation. Now  
what I need to do is setup a queue for events that are going on, as  
the queues I have now only pass new event notifications, not actualy  
communications for those events.  Each new event has a UUID assoicated  
with it, so I was thinking that maybe I should create a new queue when  
a new event message comes in, based on the contents of the message.   
So I would have something like this:

amq.queue('94a2b510-5c4c-012b-a451-001ff34e82f0').bind(amq.topic, :key  
=> "94a2b510-5c4c-012b-a451-001ff34e82f0.posts").subscribe

where in reality I would have something like this, since new events  
will be created and destroyed on the fly, and base the new queue's key  
and name on a message recieved from a "parent" queue.:

amq.queue(doc.elements['//eventuuid'].to_s).bind(amq.topic, :key =>  
"#{doc.elements['//eventuuid']}.posts").subscribe

This queue allows for "posts" or basically pieces of information like  
SMS messages to be passed across the network, while referencing an  
event, which is the UUID.

Is this the only way to this, or if not, the best?  Wisdom tells me  
that if you are doing something that seems really complex and hard,  
there is probably a better and easier way that you haven't seen.  I  
believe that my inexperience with AMQP and its nomenclature is causing  
me massive confusion and strife, which of course I'd love for you guys  
to help me out with.

Thanks,
Preston Marshall
-------------- next part --------------
A non-text attachment was scrubbed...
Name: smime.p7s
Type: application/pkcs7-signature
Size: 2441 bytes
Desc: not available
Url : http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20080903/280ce718/attachment.bin 

From tsuraan at gmail.com  Thu Sep  4 04:05:14 2008
From: tsuraan at gmail.com (tsuraan)
Date: Wed, 3 Sep 2008 22:05:14 -0500
Subject: [rabbitmq-discuss] Header Exchange
Message-ID: <84fb38e30809032005s61420ed2x88160ca9e6c3b531@mail.gmail.com>

Does RabbitMQ have some analogue to AMQP-0.10's header exchange?  Is
there any way to route messages based on headers in 0.8, or is
everything just based on the routing key?

Along that line, is there a list of RabbitMQ's protocol extensions, or
is it just a pure-0.8 implementation right now?



From tsuraan at gmail.com  Thu Sep  4 04:14:32 2008
From: tsuraan at gmail.com (tsuraan)
Date: Wed, 3 Sep 2008 22:14:32 -0500
Subject: [rabbitmq-discuss] Abrupt Termination
Message-ID: <84fb38e30809032014k1bd7be0bw4fb46a9436143c33@mail.gmail.com>

Second post, but I figure this is probably more polite than having a
multi-topic thread...

How well do RabbitMQ persistent queues handle abrupt termination, such
as from a power loss?  Will entire queues be corrupted, or just a
possible loss of messages that were inserted but not yet written to
disk?  If multiple messages were accepted and dispatched in a
transaction, is the entire transaction guaranteed to be fully
committed or fully lost in the event of system failure?



From 0x6e6562 at gmail.com  Thu Sep  4 09:07:32 2008
From: 0x6e6562 at gmail.com (Ben Hood)
Date: Thu, 4 Sep 2008 09:07:32 +0100
Subject: [rabbitmq-discuss] Header Exchange
In-Reply-To: <84fb38e30809032005s61420ed2x88160ca9e6c3b531@mail.gmail.com>
References: <84fb38e30809032005s61420ed2x88160ca9e6c3b531@mail.gmail.com>
Message-ID: <269388e30809040107m9ce3dbbqa258676d5f696b5f@mail.gmail.com>

Tsuraan,

On Thu, Sep 4, 2008 at 4:05 AM, tsuraan <tsuraan at gmail.com> wrote:
> Does RabbitMQ have some analogue to AMQP-0.10's header exchange?  Is
> there any way to route messages based on headers in 0.8, or is
> everything just based on the routing key?

No, it doesn't. This was actually specified before 0.10, but we felt
that the actual specification of this was

a) not clear enough to produce a tractable implementation;
b) significantly more difficult that the other types of exchanges;
c) until now, not that many have been asking about it;

so we deferred its implementation until sufficient spec clarification
and justification came to be.

This is in the pipeline, but there is no ETA for it at the moment.

So the exchange types you currently have with Rabbit are the direct,
fanout and topic exchanges.

> Along that line, is there a list of RabbitMQ's protocol extensions, or
> is it just a pure-0.8 implementation right now?

Have a look at the compatibility information for Rabbit:

http://www.rabbitmq.com/compatibility.html

Version 0.91 (as a service pack for 0.9) is currently being reviewed
by the working group and when this is signed, we will implement that.

HTH,

Ben



From matthias at lshift.net  Thu Sep  4 10:03:52 2008
From: matthias at lshift.net (Matthias Radestock)
Date: Thu, 04 Sep 2008 10:03:52 +0100
Subject: [rabbitmq-discuss] Header Exchange
In-Reply-To: <269388e30809040107m9ce3dbbqa258676d5f696b5f@mail.gmail.com>
References: <84fb38e30809032005s61420ed2x88160ca9e6c3b531@mail.gmail.com>
	<269388e30809040107m9ce3dbbqa258676d5f696b5f@mail.gmail.com>
Message-ID: <48BFA478.4010300@lshift.net>

Tsuraan,

Ben Hood wrote:
>> Along that line, is there a list of RabbitMQ's protocol extensions, or
>> is it just a pure-0.8 implementation right now?
> 
> Have a look at the compatibility information for Rabbit:
> 
> http://www.rabbitmq.com/compatibility.html

Just to follow up on that ...

To date we have not extended the AMQP protocol. Instead we have been 
focusing on extensions that make the broker more versatile by providing 
additional
- transports, e.g. HTTP,
- gateways that bridge between AMQP and several other messaging 
networks, e.g. XMPP, Stomp, SMTP,
- adapaters to various ESBs, e.g. Mule, WCF, and
- clients for various programming languages, e.g. AS3, .net.


Matthias.



From alexis.richardson at cohesiveft.com  Thu Sep  4 11:00:40 2008
From: alexis.richardson at cohesiveft.com (Alexis Richardson)
Date: Thu, 4 Sep 2008 11:00:40 +0100
Subject: [rabbitmq-discuss] Header Exchange
In-Reply-To: <269388e30809040107m9ce3dbbqa258676d5f696b5f@mail.gmail.com>
References: <84fb38e30809032005s61420ed2x88160ca9e6c3b531@mail.gmail.com>
	<269388e30809040107m9ce3dbbqa258676d5f696b5f@mail.gmail.com>
Message-ID: <167204d20809040300i1e53afcyc1102bd419b84e44@mail.gmail.com>

Tsuraan,

On Thu, Sep 4, 2008 at 9:07 AM, Ben Hood <0x6e6562 at gmail.com> wrote:
> On Thu, Sep 4, 2008 at 4:05 AM, tsuraan <tsuraan at gmail.com> wrote:
>> Does RabbitMQ have some analogue to AMQP-0.10's header exchange?  Is
>> there any way to route messages based on headers in 0.8, or is
>> everything just based on the routing key?
>
> So the exchange types you currently have with Rabbit are the direct,
> fanout and topic exchanges.
>
> Version 0.91 (as a service pack for 0.9) is currently being reviewed
> by the working group and when this is signed, we will implement that.

Just to add to the above - quite soon the community will be able to
see what is planned for 1.0.  One of the extensions under
consideration is support for a much wider range of exchanges without
having to create your own custom exchange extension.

alexis



From alexis.richardson at cohesiveft.com  Thu Sep  4 12:28:21 2008
From: alexis.richardson at cohesiveft.com (Alexis Richardson)
Date: Thu, 4 Sep 2008 12:28:21 +0100
Subject: [rabbitmq-discuss] Abrupt Termination
In-Reply-To: <84fb38e30809032014k1bd7be0bw4fb46a9436143c33@mail.gmail.com>
References: <84fb38e30809032014k1bd7be0bw4fb46a9436143c33@mail.gmail.com>
Message-ID: <167204d20809040428x5b81c140p911023c615c582a9@mail.gmail.com>

Tsuraan

On Thu, Sep 4, 2008 at 4:14 AM, tsuraan <tsuraan at gmail.com> wrote:
> Second post, but I figure this is probably more polite than having a
> multi-topic thread...
>
> How well do RabbitMQ persistent queues handle abrupt termination, such
> as from a power loss?

Well, "how well" is subjective.  We think it does a good job and is
properly architected for reliability, scale and speed.


> Will entire queues be corrupted, or just a
> possible loss of messages that were inserted but not yet written to
> disk?

RabbitMQ does not notify observers outside the transaction of work
that is completed until that work is properly committed.  For
persistent messages this means nothing and nobody can see them until
the transaction completes any in memory work, and any subsequent
logging has been flushed to disk from the buffer.  This is correct
behaviour.

I.e.: for an external observer, the broker losing work that has not
been committed to disk, should be no different than losing it on the
network before it got to the broker.

To answer your qn, this means
* Queues will not be corrupted
* Messages not committed to disk may be lost
* But nobody will believe a message has been committed to disk when in
fact it has not been
* Everything committed to disk is recoverable properly
* Operations complete correcty, or fail correctly

Two years ago we found a bug in the windows (but not any *nix) version
of OTP where sync() did not flush correctly which was then fixed.  As
far as we can tell this is all now as it should be.  DO PLEASE tell us
immediately if you see any other behaviour.



> If multiple messages were accepted and dispatched in a
> transaction, is the entire transaction guaranteed to be fully
> committed or fully lost in the event of system failure?

This is as above, for RabbitMQ, and correctly implemented.  A detailed
reading of the 0-8/0-9 specs reveals the interaction between TX and
mandatory/immediate to have been poorly expressed in your 'multiple
messages' case, at least with many queues.  But RabbitMQ does the
right thing.

Comments, thoughts, questions are welcomed on this subtle area!

alexis



From tsuraan at gmail.com  Thu Sep  4 17:14:14 2008
From: tsuraan at gmail.com (tsuraan)
Date: Thu, 4 Sep 2008 11:14:14 -0500
Subject: [rabbitmq-discuss] Abrupt Termination
In-Reply-To: <167204d20809040428x5b81c140p911023c615c582a9@mail.gmail.com>
References: <84fb38e30809032014k1bd7be0bw4fb46a9436143c33@mail.gmail.com>
	<167204d20809040428x5b81c140p911023c615c582a9@mail.gmail.com>
Message-ID: <84fb38e30809040914xb16d1bdrd6fbf5bfd44664b9@mail.gmail.com>

>> How well do RabbitMQ persistent queues handle abrupt termination, such
>> as from a power loss?
>
> Well, "how well" is subjective.  We think it does a good job and is
> properly architected for reliability, scale and speed.

Sounds just about perfect.  I'm new to this message queue thing, so I
wasn't sure if being robust to system failure was a high priority, or
if reliability was just about messages being properly and rapidly
dispatched in the normal cases.  It looks like being fully robust to
failures is definitely a high priority, so that's good.



From tsuraan at gmail.com  Thu Sep  4 17:26:01 2008
From: tsuraan at gmail.com (tsuraan)
Date: Thu, 4 Sep 2008 11:26:01 -0500
Subject: [rabbitmq-discuss] Header Exchange
In-Reply-To: <269388e30809040107m9ce3dbbqa258676d5f696b5f@mail.gmail.com>
References: <84fb38e30809032005s61420ed2x88160ca9e6c3b531@mail.gmail.com>
	<269388e30809040107m9ce3dbbqa258676d5f696b5f@mail.gmail.com>
Message-ID: <84fb38e30809040926y3c1376cq1e1781e8b436c879@mail.gmail.com>

> No, it doesn't. This was actually specified before 0.10, but we felt
> that the actual specification of this was
>
> a) not clear enough to produce a tractable implementation;
> b) significantly more difficult that the other types of exchanges;
> c) until now, not that many have been asking about it;
>
> so we deferred its implementation until sufficient spec clarification
> and justification came to be.
>
> This is in the pipeline, but there is no ETA for it at the moment.
>
> So the exchange types you currently have with Rabbit are the direct,
> fanout and topic exchanges.

Ok.  I've only read 0.10 and 0.8, so anything that happened between
those two revisions is a mystery to me :-).  For some reason, I was
thinking that I needed the functionality of the header exchange, but
now I'm fairly certain that the topic is exactly what I need, and I
can't remember why I thought the header was the thing to use.

> Have a look at the compatibility information for Rabbit:
>
> http://www.rabbitmq.com/compatibility.html
>
> Version 0.91 (as a service pack for 0.9) is currently being reviewed
> by the working group and when this is signed, we will implement that.

Ok, so the current server is 0.8 only, and the java and .net clients
can connect to 0.8 and 0.9 servers.  The rest of the page is just 0.8
compatibility, for both the server and the clients.  Is there a 0.9
compatibility page anywhere, for the clients and the server when the
0.9 implementation is started?



From tsuraan at gmail.com  Thu Sep  4 17:29:59 2008
From: tsuraan at gmail.com (tsuraan)
Date: Thu, 4 Sep 2008 11:29:59 -0500
Subject: [rabbitmq-discuss] Header Exchange
In-Reply-To: <48BFA478.4010300@lshift.net>
References: <84fb38e30809032005s61420ed2x88160ca9e6c3b531@mail.gmail.com>
	<269388e30809040107m9ce3dbbqa258676d5f696b5f@mail.gmail.com>
	<48BFA478.4010300@lshift.net>
Message-ID: <84fb38e30809040929q70560fffld107e09dfb1a5e45@mail.gmail.com>

> Just to follow up on that ...
>
> To date we have not extended the AMQP protocol. Instead we have been
> focusing on extensions that make the broker more versatile by providing
> additional
> - transports, e.g. HTTP,
> - gateways that bridge between AMQP and several other messaging
> networks, e.g. XMPP, Stomp, SMTP,
> - adapaters to various ESBs, e.g. Mule, WCF, and
> - clients for various programming languages, e.g. AS3, .net.

Is there any documentation on how erlang processes can put messages in
the queues and read from them?  I suppose that with the dozen
transports and bridges you've implemented, it shouldn't be too hard to
extract that from your source, but a page on erlang interoperability
would probably be nice to have.



From alexis.richardson at cohesiveft.com  Thu Sep  4 17:52:53 2008
From: alexis.richardson at cohesiveft.com (Alexis Richardson)
Date: Thu, 4 Sep 2008 17:52:53 +0100
Subject: [rabbitmq-discuss] Header Exchange
In-Reply-To: <84fb38e30809040926y3c1376cq1e1781e8b436c879@mail.gmail.com>
References: <84fb38e30809032005s61420ed2x88160ca9e6c3b531@mail.gmail.com>
	<269388e30809040107m9ce3dbbqa258676d5f696b5f@mail.gmail.com>
	<84fb38e30809040926y3c1376cq1e1781e8b436c879@mail.gmail.com>
Message-ID: <167204d20809040952m505e6003x5cf770d95db13afc@mail.gmail.com>

Tsuraan

Thanks for your other note to the list.

On Thu, Sep 4, 2008 at 5:26 PM, tsuraan <tsuraan at gmail.com> wrote:
>> So the exchange types you currently have with Rabbit are the direct,
>> fanout and topic exchanges.
>
> Ok.  I've only read 0.10 and 0.8, so anything that happened between
> those two revisions is a mystery to me :-).  For some reason, I was
> thinking that I needed the functionality of the header exchange, but
> now I'm fairly certain that the topic is exactly what I need, and I
> can't remember why I thought the header was the thing to use.

Don't worry that is quite a normal pattern.  Many cases of CBR turn
out to be topic based routing in disguise.  A good thing too.


>> Have a look at the compatibility information for Rabbit:
>>
>> http://www.rabbitmq.com/compatibility.html
>>
>> Version 0.91 (as a service pack for 0.9) is currently being reviewed
>> by the working group and when this is signed, we will implement that.
>
> Ok, so the current server is 0.8 only, and the java and .net clients
> can connect to 0.8 and 0.9 servers.

The C#/.NET client can talk to 0-8 and 0-9.

Would like the Java client to talk to 0-9?


> The rest of the page is just 0.8
> compatibility, for both the server and the clients.  Is there a 0.9
> compatibility page anywhere, for the clients and the server when the
> 0.9 implementation is started?

No but 0-8 and 0-9 are very very similar indeed.

alexis



From alexis.richardson at cohesiveft.com  Thu Sep  4 17:54:51 2008
From: alexis.richardson at cohesiveft.com (Alexis Richardson)
Date: Thu, 4 Sep 2008 17:54:51 +0100
Subject: [rabbitmq-discuss] Header Exchange
In-Reply-To: <84fb38e30809040929q70560fffld107e09dfb1a5e45@mail.gmail.com>
References: <84fb38e30809032005s61420ed2x88160ca9e6c3b531@mail.gmail.com>
	<269388e30809040107m9ce3dbbqa258676d5f696b5f@mail.gmail.com>
	<48BFA478.4010300@lshift.net>
	<84fb38e30809040929q70560fffld107e09dfb1a5e45@mail.gmail.com>
Message-ID: <167204d20809040954n1505f20ra011a921a9785227@mail.gmail.com>

Tsuraan

On Thu, Sep 4, 2008 at 5:29 PM, tsuraan <tsuraan at gmail.com> wrote:
>
> Is there any documentation on how erlang processes can put messages in
> the queues and read from them?

At the risk of being a wet blanket - some of this has been discussed
on list and will appear in the archives.  Let us know what you need if
you cannot find it.

> I suppose that with the dozen
> transports and bridges you've implemented, it shouldn't be too hard to
> extract that from your source, but a page on erlang interoperability
> would probably be nice to have.

Fair point.  Several folks may want to chip in at this point - Edwin
are you there?

alexis



From tsuraan at gmail.com  Thu Sep  4 18:52:50 2008
From: tsuraan at gmail.com (tsuraan)
Date: Thu, 4 Sep 2008 12:52:50 -0500
Subject: [rabbitmq-discuss] Header Exchange
In-Reply-To: <167204d20809040954n1505f20ra011a921a9785227@mail.gmail.com>
References: <84fb38e30809032005s61420ed2x88160ca9e6c3b531@mail.gmail.com>
	<269388e30809040107m9ce3dbbqa258676d5f696b5f@mail.gmail.com>
	<48BFA478.4010300@lshift.net>
	<84fb38e30809040929q70560fffld107e09dfb1a5e45@mail.gmail.com>
	<167204d20809040954n1505f20ra011a921a9785227@mail.gmail.com>
Message-ID: <84fb38e30809041052i673b73f4i7e2c319ccd5524e4@mail.gmail.com>

> At the risk of being a wet blanket - some of this has been discussed
> on list and will appear in the archives.  Let us know what you need if
> you cannot find it.

Is there a searchable version of the list archive?  The only thing I
see from the RabbitMQ page is
http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/, which doesn't
appear to have a search interface.



From rabbitmq-discuss_efine at usa.net  Thu Sep  4 18:57:52 2008
From: rabbitmq-discuss_efine at usa.net (Edwin Fine)
Date: Thu, 4 Sep 2008 13:57:52 -0400
Subject: [rabbitmq-discuss] Header Exchange
In-Reply-To: <167204d20809040954n1505f20ra011a921a9785227@mail.gmail.com>
References: <84fb38e30809032005s61420ed2x88160ca9e6c3b531@mail.gmail.com>
	<269388e30809040107m9ce3dbbqa258676d5f696b5f@mail.gmail.com>
	<48BFA478.4010300@lshift.net>
	<84fb38e30809040929q70560fffld107e09dfb1a5e45@mail.gmail.com>
	<167204d20809040954n1505f20ra011a921a9785227@mail.gmail.com>
Message-ID: <6c2563b20809041057v3f5d63d9q22629a9112beb746@mail.gmail.com>

Hi Alexis, yes, I am here.

The best place (IMHO) to look at how to program Erlang clients for RabbitMQ
is at the test code that comes with the client. It does pretty much
everything basic and I found it fairly easy to understand.Take a look at
test_util.erl (that's what I did to figure out how things work). The Erlang
client is downloadable from the RabbitMQ web site.

Regards,
Edwin

On Thu, Sep 4, 2008 at 12:54 PM, Alexis Richardson <
alexis.richardson at cohesiveft.com> wrote:

> Tsuraan
>
> On Thu, Sep 4, 2008 at 5:29 PM, tsuraan <tsuraan at gmail.com> wrote:
> >
> > Is there any documentation on how erlang processes can put messages in
> > the queues and read from them?
>
> At the risk of being a wet blanket - some of this has been discussed
> on list and will appear in the archives.  Let us know what you need if
> you cannot find it.
>
> > I suppose that with the dozen
> > transports and bridges you've implemented, it shouldn't be too hard to
> > extract that from your source, but a page on erlang interoperability
> > would probably be nice to have.
>
> Fair point.  Several folks may want to chip in at this point - Edwin
> are you there?
>
> alexis
>
> _______________________________________________
> rabbitmq-discuss mailing list
> rabbitmq-discuss at lists.rabbitmq.com
> http://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20080904/8a0c8e8a/attachment.htm 

From rabbitmq-discuss_efine at usa.net  Thu Sep  4 19:03:22 2008
From: rabbitmq-discuss_efine at usa.net (Edwin Fine)
Date: Thu, 4 Sep 2008 14:03:22 -0400
Subject: [rabbitmq-discuss] Fwd:  Header Exchange
In-Reply-To: <6c2563b20809041102u785ef7cbl97fe678889052bc3@mail.gmail.com>
References: <84fb38e30809032005s61420ed2x88160ca9e6c3b531@mail.gmail.com>
	<269388e30809040107m9ce3dbbqa258676d5f696b5f@mail.gmail.com>
	<48BFA478.4010300@lshift.net>
	<84fb38e30809040929q70560fffld107e09dfb1a5e45@mail.gmail.com>
	<167204d20809040954n1505f20ra011a921a9785227@mail.gmail.com>
	<84fb38e30809041052i673b73f4i7e2c319ccd5524e4@mail.gmail.com>
	<6c2563b20809041102u785ef7cbl97fe678889052bc3@mail.gmail.com>
Message-ID: <6c2563b20809041103n147abccbv1886b4b32a158e79@mail.gmail.com>

Yes there is. The list is mirrored on Nabble, which I believe is searchable:

http://www.nabble.com/RabbitMQ-f25704.html



On Thu, Sep 4, 2008 at 1:52 PM, tsuraan <tsuraan at gmail.com> wrote:

> > At the risk of being a wet blanket - some of this has been discussed
> > on list and will appear in the archives.  Let us know what you need if
> > you cannot find it.
>
> Is there a searchable version of the list archive?  The only thing I
> see from the RabbitMQ page is
> http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/, which doesn't
> appear to have a search interface.
>
> _______________________________________________
> rabbitmq-discuss mailing list
> rabbitmq-discuss at lists.rabbitmq.com
> http://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20080904/abb792fa/attachment.htm 

From dmitriy.samovskiy at cohesiveft.com  Thu Sep  4 19:07:46 2008
From: dmitriy.samovskiy at cohesiveft.com (Dmitriy Samovskiy)
Date: Thu, 04 Sep 2008 13:07:46 -0500
Subject: [rabbitmq-discuss] Header Exchange
In-Reply-To: <84fb38e30809041052i673b73f4i7e2c319ccd5524e4@mail.gmail.com>
References: <84fb38e30809032005s61420ed2x88160ca9e6c3b531@mail.gmail.com>	<269388e30809040107m9ce3dbbqa258676d5f696b5f@mail.gmail.com>	<48BFA478.4010300@lshift.net>	<84fb38e30809040929q70560fffld107e09dfb1a5e45@mail.gmail.com>	<167204d20809040954n1505f20ra011a921a9785227@mail.gmail.com>
	<84fb38e30809041052i673b73f4i7e2c319ccd5524e4@mail.gmail.com>
Message-ID: <48C023F2.6010902@cohesiveft.com>



tsuraan wrote:
> Is there a searchable version of the list archive?  The only thing I
> see from the RabbitMQ page is
> http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/, which doesn't
> appear to have a search interface.
This mailing list also appears to be archived at 
http://groups.google.com/group/rabbitmq-discuss .

You might also get decent results by appending "rabbitmq-discuss" or 
"site:lists.rabbitmq.com" to your Google search queries.

Also:
http://www.nabble.com/RabbitMQ-f25704.html
http://forum.trapexit.org/mailinglists/viewforum.php?f=25

- Dmitriy



From rabbitmq at tmm1.net  Thu Sep  4 19:42:14 2008
From: rabbitmq at tmm1.net (Aman Gupta)
Date: Thu, 4 Sep 2008 11:42:14 -0700
Subject: [rabbitmq-discuss] durable exclusive queues
Message-ID: <e1c05edd0809041142m5bd889b1kc76709f359f29269@mail.gmail.com>

According to the spec, a durable queue cannot be exclusive, as exclusive
implies auto-delete:
    request an exclusive queue
      Exclusive queues may only be consumed from by the current connection.
      Setting the 'exclusive' flag always implies 'auto-delete'.

Is it possible to simulate this exclusive behavior? I can do a passive
declare and look at the consumer count in the declare-ok, but that will
introduce race conditions without a central lock.

  Aman
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20080904/6ba7b4bc/attachment.htm 

From 0x6e6562 at gmail.com  Thu Sep  4 20:14:21 2008
From: 0x6e6562 at gmail.com (Ben Hood)
Date: Thu, 4 Sep 2008 20:14:21 +0100
Subject: [rabbitmq-discuss] Header Exchange
In-Reply-To: <84fb38e30809040929q70560fffld107e09dfb1a5e45@mail.gmail.com>
References: <84fb38e30809032005s61420ed2x88160ca9e6c3b531@mail.gmail.com>
	<269388e30809040107m9ce3dbbqa258676d5f696b5f@mail.gmail.com>
	<48BFA478.4010300@lshift.net>
	<84fb38e30809040929q70560fffld107e09dfb1a5e45@mail.gmail.com>
Message-ID: <269388e30809041214r7a49e058l47bb30536e9b7e62@mail.gmail.com>

Tsuraan,

On Thu, Sep 4, 2008 at 5:29 PM, tsuraan <tsuraan at gmail.com> wrote:

> Is there any documentation on how erlang processes can put messages in
> the queues and read from them?  I suppose that with the dozen
> transports and bridges you've implemented, it shouldn't be too hard to
> extract that from your source, but a page on erlang interoperability
> would probably be nice to have.

Although this is a little bit out of date, there is some documentation
on the wiki: https://dev.rabbitmq.com/wiki/ErlangClient

This documents the low level API. The high level API, lib_amqp, exists
in the repo, but we haven't made a formal release yet, but this will
happen soon. There are some points that require cleaning up,
documentation, etc.

And it is already being used by some people.

Also, a long time ago I wrote an article about it:
http://hopper.squarespace.com/blog/2008/1/12/introducing-the-erlang-amqp-client.html

HTH,

Ben



From 0x6e6562 at gmail.com  Thu Sep  4 21:04:23 2008
From: 0x6e6562 at gmail.com (Ben Hood)
Date: Thu, 4 Sep 2008 21:04:23 +0100
Subject: [rabbitmq-discuss] Creating Queues and Exchanges on the Fly
In-Reply-To: <777343D9-D050-4288-BC9C-C4CFF9AD5F5D@synergy-solutions.biz>
References: <777343D9-D050-4288-BC9C-C4CFF9AD5F5D@synergy-solutions.biz>
Message-ID: <269388e30809041304x1387af4tfa91959282378ed0@mail.gmail.com>

Hey Preston,

On Thu, Sep 4, 2008 at 2:28 AM, Preston Marshall
<preston at synergy-solutions.biz> wrote:

> Now I have an interesting problem which probably requires and interesting
> solution :).  I can successfully pass events through my different exchanges,
> i have a 'all' queue, along with national, regional, state, and stateregion.
>  They all have different routing keys that can be used to send to them like
> for example one key is events.us.5.al.4, that in particular creates a queue
> named stateregion and binds to it with a key that listens for messages only
> for that state region, for that state, for that region, for that nation. Now
> what I need to do is setup a queue for events that are going on, as the
> queues I have now only pass new event notifications, not actualy
> communications for those events.  Each new event has a UUID assoicated with
> it, so I was thinking that maybe I should create a new queue when a new
> event message comes in, based on the contents of the message.  So I would
> have something like this:
>
> amq.queue('94a2b510-5c4c-012b-a451-001ff34e82f0').bind(amq.topic, :key =>
> "94a2b510-5c4c-012b-a451-001ff34e82f0.posts").subscribe
>
> where in reality I would have something like this, since new events will be
> created and destroyed on the fly, and base the new queue's key and name on a
> message recieved from a "parent" queue.:
>
> amq.queue(doc.elements['//eventuuid'].to_s).bind(amq.topic, :key =>
> "#{doc.elements['//eventuuid']}.posts").subscribe
>
> This queue allows for "posts" or basically pieces of information like SMS
> messages to be passed across the network, while referencing an event, which
> is the UUID.
>
> Is this the only way to this, or if not, the best?  Wisdom tells me that if
> you are doing something that seems really complex and hard, there is
> probably a better and easier way that you haven't seen.  I believe that my
> inexperience with AMQP and its nomenclature is causing me massive confusion
> and strife, which of course I'd love for you guys to help me out with.

Absolutely no offense intended, I've read through your mail twice and
I'm struggling to understand exactly what your problem is.

On face value, it looks like you should be using some kind of topic
exchange, which leads me to ask whether you've looked at the
specification for topic (taken from the spec):

"The routing pattern follows the same rules as the routing key with
the addition that * matches a single word, and # matches zero or more
words. Thus the routing pattern *.stock.# matches the routing keys
usd.stock and
eur.stock.db but not stock.nasdaq"

Of course you can create and delete exchanges, queues and bindings on the fly.

One thing you may want to consider when just creating stuff in an ad
hoc fashion is the associated cost.

Whilst the cost of any these operations is not much, it is definitely
non-zero, so at very high levels of usage, you might find that this is
something you want to economize on.

However, going back to your problem, if you could describe it with
less detail and make it clearer what your focus is, I'm sure that the
Rabbit community will be more than willing to help out.

HTH,

Ben



From 0x6e6562 at gmail.com  Thu Sep  4 21:22:10 2008
From: 0x6e6562 at gmail.com (Ben Hood)
Date: Thu, 4 Sep 2008 21:22:10 +0100
Subject: [rabbitmq-discuss] Creating Queues and Exchanges on the Fly
In-Reply-To: <02F14F35-CEAB-4FF3-8F1A-BBE798DB6B0B@synergy-solutions.biz>
References: <777343D9-D050-4288-BC9C-C4CFF9AD5F5D@synergy-solutions.biz>
	<269388e30809041304x1387af4tfa91959282378ed0@mail.gmail.com>
	<02F14F35-CEAB-4FF3-8F1A-BBE798DB6B0B@synergy-solutions.biz>
Message-ID: <269388e30809041322h2ec217f1gd15e76d7b0f5d679@mail.gmail.com>

Preston,

On Thu, Sep 4, 2008 at 9:11 PM, Preston Marshall
<preston at synergy-solutions.biz> wrote:
> Heh, I agree, I have a hard time explaining it.  I understand topic
> exchanges (I think I do at least), but what I think I need to do is setup a
> new exchange with a routing key as the uuid of an event that is received
> through my other topic exchange. The reason I want to do this is because I
> need to pass posts and other event-specific messages, and I don't want all
> posts going to everyone, only the people who are "members" of that event.  I
> apologize if this isn't clear enough, it just seems really complicated to me

That sounds like you are chaining exchanges.

Since AMQP is consumer driven rather than producer driven, it is up
the consumers to decide who gets what. The producers act in a fire and
forget fashion.

Are you maybe concerned about ACLs at all and that is the reason why
you are doing this?

Ben



From 0x6e6562 at gmail.com  Thu Sep  4 23:03:41 2008
From: 0x6e6562 at gmail.com (Ben Hood)
Date: Thu, 4 Sep 2008 23:03:41 +0100
Subject: [rabbitmq-discuss] Creating Queues and Exchanges on the Fly
In-Reply-To: <454AC42F-3FE0-45A1-96BC-92DF31E65998@synergy-solutions.biz>
References: <777343D9-D050-4288-BC9C-C4CFF9AD5F5D@synergy-solutions.biz>
	<269388e30809041304x1387af4tfa91959282378ed0@mail.gmail.com>
	<02F14F35-CEAB-4FF3-8F1A-BBE798DB6B0B@synergy-solutions.biz>
	<269388e30809041322h2ec217f1gd15e76d7b0f5d679@mail.gmail.com>
	<454AC42F-3FE0-45A1-96BC-92DF31E65998@synergy-solutions.biz>
Message-ID: <269388e30809041503g742b351cufcac6c376243da8e@mail.gmail.com>

Preston,

On Thu, Sep 4, 2008 at 9:54 PM, Preston Marshall
<preston at synergy-solutions.biz> wrote:
> No I'm not concerned about ACLs, I just don't want post messages being sent
> to servers who don't want them.

The point I was trying to make before was that AMQP is consumer driven
- so if a consumer doesn't care about a message, they can set their
own routing rules in Rabbit so that they don't receive those messages.
Producers just fire and forget.

Ben



From 0x6e6562 at gmail.com  Thu Sep  4 23:06:08 2008
From: 0x6e6562 at gmail.com (Ben Hood)
Date: Thu, 4 Sep 2008 23:06:08 +0100
Subject: [rabbitmq-discuss] Creating Queues and Exchanges on the Fly
In-Reply-To: <8FBC6CF9-AA86-4922-ACB3-9F800B5E1313@synergy-solutions.biz>
References: <777343D9-D050-4288-BC9C-C4CFF9AD5F5D@synergy-solutions.biz>
	<269388e30809041304x1387af4tfa91959282378ed0@mail.gmail.com>
	<02F14F35-CEAB-4FF3-8F1A-BBE798DB6B0B@synergy-solutions.biz>
	<269388e30809041322h2ec217f1gd15e76d7b0f5d679@mail.gmail.com>
	<8FBC6CF9-AA86-4922-ACB3-9F800B5E1313@synergy-solutions.biz>
Message-ID: <269388e30809041506h77c5d290ld580c06ce3a2666@mail.gmail.com>

Preston,

On Thu, Sep 4, 2008 at 10:02 PM, Preston Marshall
<preston at synergy-solutions.biz> wrote:
> Here is my code for what I'm describing, do me a favor and see if it looks
> right:
>
> amq.queue('all').bind(amq.topic, :key => "events").subscribe{ |info, object|
>  puts "Recieved All Event Message"
>  unless info.headers[:sender].to_s == info.headers[:sender].to_s
>    doc = REXML::Document.new object.to_s
>    EventMessage.create :name => doc.elements['//headline'].text.to_s,
> :home_county => info.headers[:sender].to_s, :acknowledged => false,
> :external => true, :event_type_id => doc.elements['//typeid'].text.to_i,
> :status_id => doc.elements['//statusid'].text.to_i, :scope =>
> "#{doc.elements['//scope'].text}", :urgency_id =>
> doc.elements['//urgencyid'].text.to_i, :severity_id =>
> doc.elements['//severityid'].text.to_i, :certainty_id =>
> doc.elements['//certaintyid'].text.to_i, :uuid =>
> doc.elements['//identifier'].text.to_s
>    #Here comes the posts queue
>    amq.queue("#{doc.elements['//identifier'].text.to_s}").bind(amq.topic,
> :key =>
> "#{doc.elements['//identifier'].text.to_s}.posts").subscribe{|postinfo,
> postobject|
>      puts "Setup UUID Queue for UUID:
> #{doc.elements['//identifier'].text.to_s}"
>      puts postinfo.to_s
>      puts postobject.to_s
>      }
>  end

And I thought Ruby was supposed to be a nice concise syntax :-)

I'm sorry, I can't tell what's going on here - maybe Aman can shed
some light on the topic?

Ben



From tonyg at lshift.net  Fri Sep  5 16:34:58 2008
From: tonyg at lshift.net (Tony Garnock-Jones)
Date: Fri, 05 Sep 2008 16:34:58 +0100
Subject: [rabbitmq-discuss] Gracefully shutting down rabbitmq
In-Reply-To: <e1c05edd0809010931v6c47633p7b241140cc709642@mail.gmail.com>
References: <e1c05edd0808281810t158a2cawb043a44c57a86e54@mail.gmail.com>	<269388e30808290102l568673c2t22d0057ed7ff4c8c@mail.gmail.com>	<e1c05edd0808290104m1275719dv8f90920423453d96@mail.gmail.com>	<269388e30808290620k7d04542ah5218dd5a02a50e26@mail.gmail.com>
	<e1c05edd0809010931v6c47633p7b241140cc709642@mail.gmail.com>
Message-ID: <48C151A2.3070309@lshift.net>

Aman Gupta wrote:
>     As side issue, can you be more specific about what part of the process
>     is actually taking 20 mins?
> 
> AFICT, recovering the mnesia database. 

This could well be it. There's a known problem with mnesia: the recovery 
times can be *very* long. See discussion in erlang-questions.

Tony




From tonyg at lshift.net  Fri Sep  5 16:54:25 2008
From: tonyg at lshift.net (Tony Garnock-Jones)
Date: Fri, 05 Sep 2008 16:54:25 +0100
Subject: [rabbitmq-discuss] Stomp
In-Reply-To: <41C0F452-452C-4465-91CE-0038AF510264@crucially.net>
References: <EDD8F125-FF98-4482-B78D-455E05004B90@reasonablysmart.com>
	<41C0F452-452C-4465-91CE-0038AF510264@crucially.net>
Message-ID: <48C15631.90201@lshift.net>

Hi,

Artur Bergman wrote:
> There is a patch to the stomp gateway that implements topic selectors

This patch, http://hg.rabbitmq.com/rabbitmq-stomp/rev/538381ba2feb, lets 
subscriptions perform optional queue.declare and queue.bind steps before 
the subscription begins, which can be enough to do topics if the 
exchange you want to use exists. There's currently no support in the 
STOMP gateway to perform an actual exchange.declare though, so unless 
you're happy using the built-in default "amq.topic" topic exchange, a 
proper AMQP client program will need to be used to create your exchanges 
before the STOMP clients can bind to them.

I'm about to update the README with some more information about all 
this. I'll post again when I'm done.

Tony




From alexis.richardson at cohesiveft.com  Sat Sep  6 09:56:17 2008
From: alexis.richardson at cohesiveft.com (Alexis Richardson)
Date: Sat, 6 Sep 2008 09:56:17 +0100
Subject: [rabbitmq-discuss] jon conway on web video and messaging
Message-ID: <167204d20809060156g4e9b2af4q2f56dae5e801b80f@mail.gmail.com>

Hi

This mboi to folks on the list..

Jon did an interesting presentation at RailsConf talking about video
on the web.  He discusses options for delivery architectures with a
messaging based middle tier.  RabbitMQ is compared with other choices.

http://jaikoo.com/2008/09/05/railsconf-europe

alexis



From 0x6e6562 at gmail.com  Sat Sep  6 18:17:56 2008
From: 0x6e6562 at gmail.com (Ben Hood)
Date: Sat, 6 Sep 2008 18:17:56 +0100
Subject: [rabbitmq-discuss] fsync on OSX
Message-ID: <269388e30809061017m2c90c95cw25357264d12c423d@mail.gmail.com>

Hi all,

Recently there was a discussion on #rabbitmq about OTP's usage of the
fsync syscall on OSX.

This was identified as an issue in the context of persistent queues,
because the sync call in OTP did not have the guarantee of full
synchronous persistence.

Now, thanks to Jan, this has been patched and has found its way into R12B-4:

OTP-7471  On Mac OS X, file:sync/1 now guarantees that all filesystem
	      buffers are written to the disk by using the fcntl() with
	      F_FULLFSYNC option. Previously, file:sync/1 called fsync(),
	      which only guaranteed that the data had been transferred to
	      the disk drive. (Thanks to Jan Lehnardt.)

Ben



From matthias at lshift.net  Sun Sep  7 04:57:36 2008
From: matthias at lshift.net (Matthias Radestock)
Date: Sun, 07 Sep 2008 04:57:36 +0100
Subject: [rabbitmq-discuss] durable exclusive queues
In-Reply-To: <e1c05edd0809041142m5bd889b1kc76709f359f29269@mail.gmail.com>
References: <e1c05edd0809041142m5bd889b1kc76709f359f29269@mail.gmail.com>
Message-ID: <48C35130.4080906@lshift.net>

Aman,

Aman Gupta wrote:
> According to the spec, a durable queue cannot be exclusive, as exclusive 
> implies auto-delete:
> 
>     request an exclusive queue
>       Exclusive queues may only be consumed from by the current connection.
>       Setting the 'exclusive' flag always implies 'auto-delete'.

IIRC the spec does not prohibit the declaration of durable exclusive 
queues. However, such queues will not survive restarts since they are 
"owned" by the connection that created them - that is the essence of 
exclusivity - and since that connection will get dropped on a restart so 
will the queue. So, in a way, they durable exclusive queues are nonsensical.

> Is it possible to simulate this exclusive behavior?  I can do a passive
> declare and look at the consumer count in the declare-ok, but that will 
> introduce race conditions without a central lock.

It is not clear from the above what exactly you are trying to simulate. 
Durable exclusive queues? As I explained, that doesn't make sense.

 From your description though it appears that perhaps you want queues 
that are exclusive to one connection *at a time*, i.e. they can be 
"acquired" by different connections over their lifetime. And such queues 
could of course then sensibly be made durable.

If so, then one way to implement that is to have a secondary queue that 
holds a token. Connections that want to use the "shared exclusive queue" 
subscribe to the token queue. When they receive the token they know they 
have exclusive access. To relinquish access they publish the token back 
to the token queue, where it can be consumed by another connection.

Obviously that requires collaboration between the connections - it won't 
stop a malicious connection from just accessing the "shared exclusive 
queue" without getting the token first. Also, you may need to find a way 
to recover tokens that are "lost" when a connection gets dropped.


I hope that answers your question. If not, please explain your use case 
in more detail.


Regards,

Matthias.



From rabbitmq-discuss_efine at usa.net  Sun Sep  7 07:56:01 2008
From: rabbitmq-discuss_efine at usa.net (Edwin Fine)
Date: Sun, 7 Sep 2008 02:56:01 -0400
Subject: [rabbitmq-discuss] [BUG] Erlang RabbitMQ client requires installed
	server code
Message-ID: <6c2563b20809062356k1f492631m4b62e4a7e72ca9f9@mail.gmail.com>

I had a surprise when trying to use the Erlang client on a node on which
RabbitMQ Server was not installed.

=CRASH REPORT==== 7-Sep-2008::02:41:39 ===
  crasher:
    pid: <0.165.0>
    registered_name: []
    exception exit: {undef,
*                        [{rabbit_framing_channel,start_link,
*                             [#Fun<amqp_network_driver.0.106693221>,
                              [<0.165.0>]]},
                         {amqp_network_driver,handshake,1},

A network client should not require server code to be installed on the same
node. This is certainly true of other clients I have used.

On further investigation, I found a number of direct calls and references to
an installed server:

amqp_channel.erl:-include_lib("rabbitmq_server/include/rabbit_framing.hrl").
amqp_channel.erl:    rabbit_amqqueue:notify_sent(Q, ChPid),
amqp_connection.erl:-include_lib("rabbitmq_server/include/rabbit_framing.hrl").
amqp_consumer.erl:-include_lib("rabbitmq_server/include/rabbit_framing.hrl").
amqp_network_driver.erl:-include_lib("rabbitmq_server/include/rabbit_framing.hrl").
amqp_network_driver.erl:            FramingPid =
rabbit_framing_channel:start_link(fun(X) -> X end, [Parent]),
amqp_network_driver.erl:    rabbit_writer:shutdown(WriterPid).
amqp_network_driver.erl:    rabbit_writer:send_command(Writer, Close),
amqp_network_driver.erl:    rabbit_writer:shutdown(Writer),
amqp_network_driver.erl:do(Writer, Method) ->
rabbit_writer:send_command(Writer, Method).
amqp_network_driver.erl:do(Writer, Method, Content) ->
rabbit_writer:send_command(Writer, Method, Content).
amqp_network_driver.erl:    rabbit_framing_channel:process(ChPid, Frame).
amqp_network_driver.erl:           response =
rabbit_binary_generator:generate_table(LoginTable),
amqp_network_driver.erl:    rabbit_writer:start(Sock, Channel,
?FRAME_MIN_SIZE).
amqp_network_driver.erl:            rabbit_heartbeat:start_heartbeat(Sock,
Heartbeat),
amqp_network_driver.erl:    FramingPid =
rabbit_framing_channel:start_link(fun(X) -> link(X), X end, [ChannelPid]),
amqp_network_driver.erl:    case rabbit_reader:analyze_frame(Type, Payload)
of
amqp_network_driver.erl:            rabbit_misc:die(frame_error);
amqp_network_driver.erl:            rabbit_misc:die(frame_error);
amqp_rpc_client.erl:-include_lib("rabbitmq_server/include/rabbit_framing.hrl").
amqp_rpc_client.erl:               content_type = ContentType} =
rabbit_framing:decode_properties(ClassId, PropertiesBin),
amqp_rpc_handler.erl:-include_lib("rabbitmq_server/include/rabbit_framing.hrl").
amqp_rpc_handler.erl:    = rabbit_framing:decode_properties(ClassId,
PropertiesBin),
amqp_rpc_util.erl:-include_lib("rabbitmq_server/include/rabbit_framing.hrl").
amqp_util.erl:-include_lib("rabbitmq_server/include/rabbit_framing.hrl").

I left out the direct driver modules because by definition they need to be
on the same node.

I respectfully suggest that the above RabbitMQ server modules, and their
dependencies, be bundled with the Erlang client. Ideally, I would think it
would be best perhaps to put them a separate Erlang library application
(maybe "rabbitmq_common") that is used both by the server and the Erlang
client.

In addition to that, the include_lib("rabbitmq_server/include/xxx.hrl")
statements prevent one from even compiling the client unless the server is
installed and this should be changed to use the common library app. I was
forced to copy the include files and make a dummy rabbitmq_server
application to be able to compile the client on a different node to the
server.

Regards,
Edwin Fine
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20080907/2948d2d4/attachment.htm 

From rabbitmq-discuss_efine at usa.net  Sun Sep  7 08:48:29 2008
From: rabbitmq-discuss_efine at usa.net (Edwin Fine)
Date: Sun, 7 Sep 2008 03:48:29 -0400
Subject: [rabbitmq-discuss] [BUG] Erlang RabbitMQ client requires
	installed server code
In-Reply-To: <6c2563b20809062356k1f492631m4b62e4a7e72ca9f9@mail.gmail.com>
References: <6c2563b20809062356k1f492631m4b62e4a7e72ca9f9@mail.gmail.com>
Message-ID: <6c2563b20809070048s1bd7935ew8a5818b054195e5d@mail.gmail.com>

 Further to my previous email, a minimal list of required modules for the
proposed "rabbit_common" application are listed below (these are the ones I
needed to get things up and running). I am going to make my own
rabbit_common OTP application, and change the Erlang client to depend on it
rather than the server. I will also see what it takes to change the rabbit
1.4.0 server itself to factor out the common code and to use this
rabbit_common application. Perhaps I can use Dialyzer to ensure that I get
all dependencies. If this would be of interest I would be glad to share it.

src/rabbit_binary_generator.erl
src/rabbit_misc.erl
src/rabbit_heartbeat.erl
src/rabbit_reader.erl
src/rabbit_framing_channel.erl
src/rabbit_writer.erl
src/rabbit_amqqueue.erl
src/rabbit_framing.erl
src/rabbit_binary_parser.erl
src/rabbit_channel.erl
include/rabbit_framing.hrl
include/rabbit_framing_spec.hrl
include/rabbit.hrl

Regards,
Edwin Fine

On Sun, Sep 7, 2008 at 2:56 AM, Edwin Fine
<rabbitmq-discuss_efine at usa.net>wrote:

> I had a surprise when trying to use the Erlang client on a node on which
> RabbitMQ Server was not installed.
>
> =CRASH REPORT==== 7-Sep-2008::02:41:39 ===
>   crasher:
>     pid: <0.165.0>
>     registered_name: []
>     exception exit: {undef,
> *                        [{rabbit_framing_channel,start_link,
> *                             [#Fun<amqp_network_driver.0.106693221>,
>                               [<0.165.0>]]},
>                          {amqp_network_driver,handshake,1},
>
> A network client should not require server code to be installed on the same
> node. This is certainly true of other clients I have used.
>
> On further investigation, I found a number of direct calls and references
> to an installed server:
>
>
> amqp_channel.erl:-include_lib("rabbitmq_server/include/rabbit_framing.hrl").
> amqp_channel.erl:    rabbit_amqqueue:notify_sent(Q, ChPid),
>
> amqp_connection.erl:-include_lib("rabbitmq_server/include/rabbit_framing.hrl").
>
> amqp_consumer.erl:-include_lib("rabbitmq_server/include/rabbit_framing.hrl").
>
> amqp_network_driver.erl:-include_lib("rabbitmq_server/include/rabbit_framing.hrl").
> amqp_network_driver.erl:            FramingPid =
> rabbit_framing_channel:start_link(fun(X) -> X end, [Parent]),
> amqp_network_driver.erl:    rabbit_writer:shutdown(WriterPid).
> amqp_network_driver.erl:    rabbit_writer:send_command(Writer, Close),
> amqp_network_driver.erl:    rabbit_writer:shutdown(Writer),
> amqp_network_driver.erl:do(Writer, Method) ->
> rabbit_writer:send_command(Writer, Method).
> amqp_network_driver.erl:do(Writer, Method, Content) ->
> rabbit_writer:send_command(Writer, Method, Content).
> amqp_network_driver.erl:    rabbit_framing_channel:process(ChPid, Frame).
> amqp_network_driver.erl:           response =
> rabbit_binary_generator:generate_table(LoginTable),
> amqp_network_driver.erl:    rabbit_writer:start(Sock, Channel,
> ?FRAME_MIN_SIZE).
> amqp_network_driver.erl:            rabbit_heartbeat:start_heartbeat(Sock,
> Heartbeat),
> amqp_network_driver.erl:    FramingPid =
> rabbit_framing_channel:start_link(fun(X) -> link(X), X end, [ChannelPid]),
> amqp_network_driver.erl:    case rabbit_reader:analyze_frame(Type, Payload)
> of
> amqp_network_driver.erl:            rabbit_misc:die(frame_error);
> amqp_network_driver.erl:            rabbit_misc:die(frame_error);
>
> amqp_rpc_client.erl:-include_lib("rabbitmq_server/include/rabbit_framing.hrl").
> amqp_rpc_client.erl:               content_type = ContentType} =
> rabbit_framing:decode_properties(ClassId, PropertiesBin),
>
> amqp_rpc_handler.erl:-include_lib("rabbitmq_server/include/rabbit_framing.hrl").
> amqp_rpc_handler.erl:    = rabbit_framing:decode_properties(ClassId,
> PropertiesBin),
>
> amqp_rpc_util.erl:-include_lib("rabbitmq_server/include/rabbit_framing.hrl").
> amqp_util.erl:-include_lib("rabbitmq_server/include/rabbit_framing.hrl").
>
> I left out the direct driver modules because by definition they need to be
> on the same node.
>
> I respectfully suggest that the above RabbitMQ server modules, and their
> dependencies, be bundled with the Erlang client. Ideally, I would think it
> would be best perhaps to put them a separate Erlang library application
> (maybe "rabbitmq_common") that is used both by the server and the Erlang
> client.
>
> In addition to that, the include_lib("rabbitmq_server/include/xxx.hrl")
> statements prevent one from even compiling the client unless the server is
> installed and this should be changed to use the common library app. I was
> forced to copy the include files and make a dummy rabbitmq_server
> application to be able to compile the client on a different node to the
> server.
>
> Regards,
> Edwin Fine
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20080907/3db504e3/attachment.htm 

From 0x6e6562 at gmail.com  Sun Sep  7 09:33:25 2008
From: 0x6e6562 at gmail.com (Ben Hood)
Date: Sun, 7 Sep 2008 09:33:25 +0100
Subject: [rabbitmq-discuss] [BUG] Erlang RabbitMQ client requires
	installed server code
In-Reply-To: <6c2563b20809062356k1f492631m4b62e4a7e72ca9f9@mail.gmail.com>
References: <6c2563b20809062356k1f492631m4b62e4a7e72ca9f9@mail.gmail.com>
Message-ID: <269388e30809070133if25586do9431ffa2f6e0af83@mail.gmail.com>

Hi Edwin,

On Sun, Sep 7, 2008 at 7:56 AM, Edwin Fine
<rabbitmq-discuss_efine at usa.net> wrote:
> I had a surprise when trying to use the Erlang client on a node on which
> RabbitMQ Server was not installed.

Opening up this discussion on a friendly note :-) , the README does
state that you need to install the Rabbit server for the client.

> A network client should not require server code to be installed on the same
> node. This is certainly true of other clients I have used.
>
> On further investigation, I found a number of direct calls and references to
> an installed server:

This is code reuse :-)

A number of design considerations went into the Erlang client:

- Reuse the codec handling facilities that were already implemented in
the server;
- Implement a plain jane TCP based AMQP wire client in Erlang using
the principles that were known to work from the server;
- Provide a an embedded client that offers the same AMQP based API as
the TCP based client - effectively swap out networking and codec
marshalling for sending native Erlang messages, but keep it
transparent to the client. The use case for this is for colocated
client applications for efficiencies' sake that are not dependent on
the native Rabbit API, which could change over time.

To implement the third point, we had to generalize the channel concept
in the server to provide a coarse grained interface that allows the
client to implemented as an inversion of the server.

The approach that was taken for the direct client was also taken for
the TCP client, in order to keep things consistent and to benefit from
proven design principles.

Also, from a maintainance perspective, there are a lot of benefits
from re-using tested server code.

Hence you will notice many dependencies on the server code base.

> amqp_channel.erl:-include_lib("rabbitmq_server/include/rabbit_framing.hrl").
> amqp_util.erl:-include_lib("rabbitmq_server/include/rabbit_framing.hrl").
.......
> I left out the direct driver modules because by definition they need to be
> on the same node.

True.

> I respectfully suggest that the above RabbitMQ server modules, and their
> dependencies, be bundled with the Erlang client. Ideally, I would think it
> would be best perhaps to put them a separate Erlang library application
> (maybe "rabbitmq_common") that is used both by the server and the Erlang
> client.

When suggesting this, you don't have to be respect, because it is
obviously a very good idea :-)

In fact, when we wrote the first version of the client, we did think
about breaking out the commonalities between the server and the client
into a separate common module. We didn't go down that route to begin
with because we wanted to see how the client would work and to get
feedback from people using it. We thought it would be a better idea to
get the code out in a usable state rather than put lots of effort into
packaging something that people may not even want to use.

However, now it has become apparent that there is interest in a client
for Erlang, so it is now time to promote the client's status from
experimental to an officially supported package. This should include
proper packaging, documentation and the resolution of some minor
outstanding issues.

> In addition to that, the include_lib("rabbitmq_server/include/xxx.hrl")
> statements prevent one from even compiling the client unless the server is
> installed and this should be changed to use the common library app. I was
> forced to copy the include files and make a dummy rabbitmq_server
> application to be able to compile the client on a different node to the
> server.

Yes, this is a drawback. I see you've written a follow up mail, so I
will go into more details when replying to that.

Ben



From 0x6e6562 at gmail.com  Sun Sep  7 09:49:13 2008
From: 0x6e6562 at gmail.com (Ben Hood)
Date: Sun, 7 Sep 2008 09:49:13 +0100
Subject: [rabbitmq-discuss] [BUG] Erlang RabbitMQ client requires
	installed server code
In-Reply-To: <6c2563b20809070048s1bd7935ew8a5818b054195e5d@mail.gmail.com>
References: <6c2563b20809062356k1f492631m4b62e4a7e72ca9f9@mail.gmail.com>
	<6c2563b20809070048s1bd7935ew8a5818b054195e5d@mail.gmail.com>
Message-ID: <269388e30809070149s48a5b9b6r7880168c64c1a526@mail.gmail.com>

Edwin,

On Sun, Sep 7, 2008 at 8:48 AM, Edwin Fine
<rabbitmq-discuss_efine at usa.net> wrote:
> Further to my previous email, a minimal list of required modules for the
> proposed "rabbit_common" application are listed below (these are the ones I
> needed to get things up and running). I am going to make my own
> rabbit_common OTP application, and change the Erlang client to depend on it
> rather than the server. I will also see what it takes to change the rabbit
> 1.4.0 server itself to factor out the common code and to use this
> rabbit_common application. Perhaps I can use Dialyzer to ensure that I get
> all dependencies. If this would be of interest I would be glad to share it.

This would of great value. As indicated in my previous mail, we should
promote the client, so this refactoring work should go into the core
build and release process. Because of the centrality of this work, we
may need to consider effects that it would have on the core process.
The various parts of Rabbit have already been broken out into separate
hg repos, which for practical purposes, need to be checked to sibling
directories in order for the build to work (e.g. rabbitmq-server
expects rabbitmq-codegen to be checked out into the same parent
directory). This approach could be taken for a common Erlang module.

The other consideration that you might make is how this patch gets
played back to the Rabbit dev team. You could generate a simple patch
or you could use hg as a DVCS. One consideration with the latter is
that we use named branches for each new feature or bug. If you were
just to clone and implement this in the default branch of your repo,
we may need to think about how to handle the history (because hg
doesn't rewrite it in the same way that git does).

But having said that I don't want to let any formalities get in the
way of you contributing to Rabbit, so at the end of the day, I would
do what is most convenient for you.


> src/rabbit_binary_generator.erl
> src/rabbit_misc.erl
> src/rabbit_heartbeat.erl
> src/rabbit_reader.erl
> src/rabbit_framing_channel.erl
> src/rabbit_writer.erl
> src/rabbit_amqqueue.erl
> src/rabbit_framing.erl
> src/rabbit_binary_parser.erl
> src/rabbit_channel.erl
> include/rabbit_framing.hrl
> include/rabbit_framing_spec.hrl
> include/rabbit.hrl

Apart from rabbit_amqqueue and rabbitmq_misc, all of those modules
were designed to be eventually sharable, so that is fine.

My gut feeling is that rabbit_amqqueue and rabbitmq_misc are purely
server side concerns and if there is a dependency there, we should
look at it and potentially factor it out.

Cheers,

Ben



From matthias at lshift.net  Sun Sep  7 09:51:33 2008
From: matthias at lshift.net (Matthias Radestock)
Date: Sun, 07 Sep 2008 09:51:33 +0100
Subject: [rabbitmq-discuss] [BUG] Erlang RabbitMQ client requires
 installed server code
In-Reply-To: <6c2563b20809062356k1f492631m4b62e4a7e72ca9f9@mail.gmail.com>
References: <6c2563b20809062356k1f492631m4b62e4a7e72ca9f9@mail.gmail.com>
Message-ID: <48C39615.7070509@lshift.net>

Edwin,

Edwin Fine wrote:
> A network client should not require server code to be installed on the 
> same node. This is certainly true of other clients I have used.

Bear in mind that the Erlang client code base can operate in both direct 
and networked mode. For the former you definitely need a server.

> I respectfully suggest that the above RabbitMQ server modules, and their 
> dependencies, be bundled with the Erlang client. Ideally, I would think 
> it would be best perhaps to put them a separate Erlang library 
> application (maybe "rabbitmq_common") that is used both by the server 
> and the Erlang client.

The above is on our todo list. Refactoring the code is the easy part. 
The challenges are in:

- updating the module structure of the VCS - is rabbitmq_common going to 
be a separate HG module?

- figuring out how rabbitmq_common will be distributed. This can be a 
combination of all of the following: a) separately, b) as part of the 
Erlang client and server source packages, c) as part of the Erlang 
client and server binary packages. Then there also the Debian and RPM 
packages to consider - are we going to have a separate packages for 
rabbitmq_common or will it be bundled with the existing packages?

Depending on the above choices a significant amount of work needs to be 
put into revising the build system, the packaging system, our automated 
deployment system, the documentation, and parts of the web site.

That's why it hasn't happened yet.

> Further to my previous email, a minimal list of required modules for
> the proposed "rabbit_common" application are listed below (these are
> the ones I needed to get things up and running). I am going to make
> my own rabbit_common OTP application, and change the Erlang client to
> depend on it rather than the server. I will also see what it takes to
> change the rabbit 1.4.0 server itself to factor out the common code
> and to use this rabbit_common application. Perhaps I can use Dialyzer
> to ensure that I get all dependencies. If this would be of interest I
> would be glad to share it.

We definitely appreciate your help in this. Please give the above points 
some thought. Also, rather than basing your work on 1.4.0, I'd suggest 
working off the current 'default' branches in hg.

Some comments on the list of files you came up with:

> src/rabbit_misc.erl

This should probably be split into the truly common part, the server 
part and the client part.

 > include/rabbit.hrl

Ditto, though this is less important.

> src/rabbit_amqqueue.erl
 > src/rabbit_channel.erl

These should not be required since they are only used by the direct client.


Regards,

Matthias.



From 0x6e6562 at gmail.com  Sun Sep  7 10:05:32 2008
From: 0x6e6562 at gmail.com (Ben Hood)
Date: Sun, 7 Sep 2008 10:05:32 +0100
Subject: [rabbitmq-discuss] [BUG] Erlang RabbitMQ client requires
	installed server code
In-Reply-To: <48C39615.7070509@lshift.net>
References: <6c2563b20809062356k1f492631m4b62e4a7e72ca9f9@mail.gmail.com>
	<48C39615.7070509@lshift.net>
Message-ID: <269388e30809070205n5d680580t77ac891e2f9124d3@mail.gmail.com>

Matthias,

On Sun, Sep 7, 2008 at 9:51 AM, Matthias Radestock <matthias at lshift.net> wrote:
>> src/rabbit_amqqueue.erl
>  > src/rabbit_channel.erl
>
> These should not be required since they are only used by the direct client.

Sorry, I overlooked rabbit_channel in my last mail. This has obviously
no place in the network driver.

Ben



From matthias at lshift.net  Sun Sep  7 10:19:33 2008
From: matthias at lshift.net (Matthias Radestock)
Date: Sun, 07 Sep 2008 10:19:33 +0100
Subject: [rabbitmq-discuss] [BUG] Erlang RabbitMQ client
 requires	installed server code
In-Reply-To: <269388e30809070205n5d680580t77ac891e2f9124d3@mail.gmail.com>
References: <6c2563b20809062356k1f492631m4b62e4a7e72ca9f9@mail.gmail.com>	<48C39615.7070509@lshift.net>
	<269388e30809070205n5d680580t77ac891e2f9124d3@mail.gmail.com>
Message-ID: <48C39CA5.3070501@lshift.net>

Ben Hood wrote:
> On Sun, Sep 7, 2008 at 9:51 AM, Matthias Radestock <matthias at lshift.net> wrote:
>>> src/rabbit_amqqueue.erl
>>  > src/rabbit_channel.erl
>>
>> These should not be required since they are only used by the direct client.
> 
> Sorry, I overlooked rabbit_channel in my last mail. This has obviously
> no place in the network driver.

Found one more: rabbit_reader. The Erlang network client currently has a 
dependency on the analyze_frame method, but that should probably be 
moved, perhaps to rabbit_binary_parser.


Matthias.



From 0x6e6562 at gmail.com  Sun Sep  7 14:01:59 2008
From: 0x6e6562 at gmail.com (Ben Hood)
Date: Sun, 7 Sep 2008 14:01:59 +0100
Subject: [rabbitmq-discuss] [BUG] Erlang RabbitMQ client requires
	installed server code
In-Reply-To: <6c2563b20809070048s1bd7935ew8a5818b054195e5d@mail.gmail.com>
References: <6c2563b20809062356k1f492631m4b62e4a7e72ca9f9@mail.gmail.com>
	<6c2563b20809070048s1bd7935ew8a5818b054195e5d@mail.gmail.com>
Message-ID: <269388e30809070601g6a35525blaccea923144f1d54@mail.gmail.com>

Edwin,

On Sun, Sep 7, 2008 at 8:48 AM, Edwin Fine
<rabbitmq-discuss_efine at usa.net> wrote:
> needed to get things up and running). I am going to make my own
> rabbit_common OTP application, and change the Erlang client to depend on it
> rather than the server. I will also see what it takes to change the rabbit
> 1.4.0 server itself to factor out the common code and to use this
> rabbit_common application.

Just FYI, please be aware that the server code base has moved on
structurally since the 1.4.0 release, so you may want to code against
something more recent, without of course coding against a moving
target. Also, there are improvements in a branches in the client that
will go back into the default branch, e.g. introduction of lib_amqp as
a high level API.

Ben



From chime at mu.dk  Sun Sep  7 20:40:37 2008
From: chime at mu.dk (Michael Arnoldus)
Date: Sun, 7 Sep 2008 21:40:37 +0200
Subject: [rabbitmq-discuss] Internal services (was Re: Queue info)
In-Reply-To: <269388e30807160355v4f86fa12r48dd4cc0d46def1d@mail.gmail.com>
References: <DC162902A1CB844CBEF4A6753064B42D03584055@usamal03.usatech.com>
	<47C65F88.8020700@lshift.net>
	<167204d20802280025i56ea3f83u55b5b19219a2b1b@mail.gmail.com>
	<3D9A6D60-2D06-46C8-847F-56923360C878@mu.dk>
	<487DC2F2.1050206@lshift.net>
	<269388e30807160355v4f86fa12r48dd4cc0d46def1d@mail.gmail.com>
Message-ID: <4D72E0F0-BCFD-4B94-AF89-A5AC203EDDCA@mu.dk>

Sorry for the late reply.

As far as I remember, my primary concern was dependency on the  
internals of Rabbit and also on Rabbit itself.

Using the erlang client would solve both problems.

Michael

On Jul 16, 2008, at 12:55 , Ben Hood wrote:

> Michael,
>
> On Wed, Jul 16, 2008 at 10:44 AM, Tony Garnock-Jones  
> <tonyg at lshift.net> wrote:
>> Hi Michael,
>>
>> Michael Arnoldus wrote:
>>> Speaking of which - if it should happen that I one late night are
>>> finding myself sorely missing working in erlang to the degree that  
>>> I'd
>>> like to experiment with this - do you have any docs or just  
>>> pointers to
>>> how to receive and send AMQP from inside erlang? I guess using the
>>> erlang AMQP client to let the server talk to itself isn't exactly  
>>> the
>>> right approach ...
>
> Can you elaborate on why using the Erlang client to let the *server
> speak to itself* may the wrong approach?
>
> As Tony has pointed out in the previous post, you can use the internal
> rabbit API to send and receive messages, but this means that you tie
> yourself in the internals of Rabbit, which *may* change over time.
>
> HTH,
>
> Ben
>
> _______________________________________________
> rabbitmq-discuss mailing list
> rabbitmq-discuss at lists.rabbitmq.com
> http://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss

-------------- next part --------------
A non-text attachment was scrubbed...
Name: smime.p7s
Type: application/pkcs7-signature
Size: 1912 bytes
Desc: not available
Url : http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20080907/0f769b03/attachment.bin 

From 0x6e6562 at gmail.com  Sun Sep  7 21:04:00 2008
From: 0x6e6562 at gmail.com (Ben Hood)
Date: Sun, 7 Sep 2008 21:04:00 +0100
Subject: [rabbitmq-discuss] Internal services (was Re: Queue info)
In-Reply-To: <4D72E0F0-BCFD-4B94-AF89-A5AC203EDDCA@mu.dk>
References: <DC162902A1CB844CBEF4A6753064B42D03584055@usamal03.usatech.com>
	<47C65F88.8020700@lshift.net>
	<167204d20802280025i56ea3f83u55b5b19219a2b1b@mail.gmail.com>
	<3D9A6D60-2D06-46C8-847F-56923360C878@mu.dk>
	<487DC2F2.1050206@lshift.net>
	<269388e30807160355v4f86fa12r48dd4cc0d46def1d@mail.gmail.com>
	<4D72E0F0-BCFD-4B94-AF89-A5AC203EDDCA@mu.dk>
Message-ID: <269388e30809071304w34cc818fief43b4af13c1503f@mail.gmail.com>

Michael,

On Sun, Sep 7, 2008 at 8:40 PM, Michael Arnoldus <chime at mu.dk> wrote:
> As far as I remember, my primary concern was dependency on the internals of
> Rabbit and also on Rabbit itself.
>
> Using the erlang client would solve both problems.

This was one of the design intentions of the Erlang client - to
provide an embedded interface to the broker that is not tied to the
underlying Rabbit API (which would change over time).

The Erlang client started as an experimental client, but now, due to
increased interest, we have decided to promote this to become a
supported client interface.

This means that there is currently some clean-up, bug fixes,
documentation and a "last minute" feedback phase for the design of the
lower and upper level APIs before it will be officially released.

Just FYI,

Ben



From rabbitmq-discuss_efine at usa.net  Sun Sep  7 22:32:26 2008
From: rabbitmq-discuss_efine at usa.net (Edwin Fine)
Date: Sun, 7 Sep 2008 17:32:26 -0400
Subject: [rabbitmq-discuss] [BUG] Erlang RabbitMQ client requires
	installed server code
In-Reply-To: <48C39615.7070509@lshift.net>
References: <6c2563b20809062356k1f492631m4b62e4a7e72ca9f9@mail.gmail.com>
	<48C39615.7070509@lshift.net>
Message-ID: <6c2563b20809071432w7ed1d9co24fdfc1e1053e673@mail.gmail.com>

Matthias,

> src/rabbit_amqqueue.erl
> src/rabbit_channel.erl
> These should not be required since they are only used by the direct
client.

   - As the most up to date client code currently stands, amqp_channel calls
   rabbit_amqqueue in a handle_info function. Although this handle_info
   function is used only by the direct client, I am uncomfortable with having
   server-specific code mixed in with pure client code. There should be a clean
   separation of concerns and all "direct" code, which calls into the
   server-specific code, should be in one module, and the network-only code in
   another.


   - amqp_network_driver calls rabbit_framing_channel, which in turn calls
   rabbit_channel. So indirectly, the network client uses rabbit_channel and
   needs it in the common distribution.

I wrote a small program that uses xref to compute all the dependencies
(transitive closure, I think) of the network client code, after commenting
out all code (that I could find, anyway) used for or by the direct driver.
This commented-out code needs to be separated so that there is a network
client, an orthogonal direct client, and functions in a common app that is
used both by clients and the server. I will look into how this can be done
cleanly.

The output is as follows (I removed dependencies of test code and direct
code modules):

['$M_EXPR',amqp_channel,amqp_connection,amqp_network_driver,
 amqp_rpc_client,amqp_rpc_handler,amqp_rpc_util,amqp_util,
 dict,gen_event,gen_server,gen_tcp,hessian,io,lists,
 prim_inet,queue,rabbit_binary_generator,rabbit_framing,
 rabbit_framing_channel,rabbit_heartbeat,rabbit_misc,
 rabbit_reader,rabbit_writer]

So, ignoring modules provided by Erlang/OTP, and the network client modules
themselves, the following modules are needed by the network client:

hessian
rabbit_binary_generator
rabbit_framing
rabbit_framing_channel
rabbit_heartbeat
rabbit_misc
rabbit_reader
rabbit_writer

I'd say that would be the basis of a common app.

Regards,
Edwin

On Sun, Sep 7, 2008 at 4:51 AM, Matthias Radestock <matthias at lshift.net>wrote:

> Edwin,
>
> Edwin Fine wrote:
>
>> A network client should not require server code to be installed on the
>> same node. This is certainly true of other clients I have used.
>>
>
> Bear in mind that the Erlang client code base can operate in both direct
> and networked mode. For the former you definitely need a server.
>
>  I respectfully suggest that the above RabbitMQ server modules, and their
>> dependencies, be bundled with the Erlang client. Ideally, I would think it
>> would be best perhaps to put them a separate Erlang library application
>> (maybe "rabbitmq_common") that is used both by the server and the Erlang
>> client.
>>
>
> The above is on our todo list. Refactoring the code is the easy part. The
> challenges are in:
>
> - updating the module structure of the VCS - is rabbitmq_common going to be
> a separate HG module?
>
> - figuring out how rabbitmq_common will be distributed. This can be a
> combination of all of the following: a) separately, b) as part of the Erlang
> client and server source packages, c) as part of the Erlang client and
> server binary packages. Then there also the Debian and RPM packages to
> consider - are we going to have a separate packages for rabbitmq_common or
> will it be bundled with the existing packages?
>
> Depending on the above choices a significant amount of work needs to be put
> into revising the build system, the packaging system, our automated
> deployment system, the documentation, and parts of the web site.
>
> That's why it hasn't happened yet.
>
>  Further to my previous email, a minimal list of required modules for
>> the proposed "rabbit_common" application are listed below (these are
>> the ones I needed to get things up and running). I am going to make
>> my own rabbit_common OTP application, and change the Erlang client to
>> depend on it rather than the server. I will also see what it takes to
>> change the rabbit 1.4.0 server itself to factor out the common code
>> and to use this rabbit_common application. Perhaps I can use Dialyzer
>> to ensure that I get all dependencies. If this would be of interest I
>> would be glad to share it.
>>
>
> We definitely appreciate your help in this. Please give the above points
> some thought. Also, rather than basing your work on 1.4.0, I'd suggest
> working off the current 'default' branches in hg.
>
> Some comments on the list of files you came up with:
>
>  src/rabbit_misc.erl
>>
>
> This should probably be split into the truly common part, the server part
> and the client part.
>
> > include/rabbit.hrl
>
> Ditto, though this is less important.
>
>  src/rabbit_amqqueue.erl
>>
> > src/rabbit_channel.erl
>
> These should not be required since they are only used by the direct client.
>
>
> Regards,
>
> Matthias.
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20080907/f1905a1e/attachment.htm 

From rabbitmq-discuss_efine at usa.net  Sun Sep  7 22:35:06 2008
From: rabbitmq-discuss_efine at usa.net (Edwin Fine)
Date: Sun, 7 Sep 2008 17:35:06 -0400
Subject: [rabbitmq-discuss] [BUG] Erlang RabbitMQ client requires
	installed server code
In-Reply-To: <269388e30809070601g6a35525blaccea923144f1d54@mail.gmail.com>
References: <6c2563b20809062356k1f492631m4b62e4a7e72ca9f9@mail.gmail.com>
	<6c2563b20809070048s1bd7935ew8a5818b054195e5d@mail.gmail.com>
	<269388e30809070601g6a35525blaccea923144f1d54@mail.gmail.com>
Message-ID: <6c2563b20809071435w4fd6fb39odb8752555a5283c6@mail.gmail.com>

Ben,

Thanks, I pulled down the latest client code from Mercurial, and it has
lib_amqp in it. I'll look at pulling down the server code, but please
understand that I actually need this stuff working by tomorrow, so I may
have to kluge something in the meantime, which I promise never to give to
you ;) But at least it will give me some experience so I mostly know what to
expect in the new code base.

Regards,
Ed

On Sun, Sep 7, 2008 at 9:01 AM, Ben Hood <0x6e6562 at gmail.com> wrote:

> Edwin,
>
> On Sun, Sep 7, 2008 at 8:48 AM, Edwin Fine
> <rabbitmq-discuss_efine at usa.net> wrote:
> > needed to get things up and running). I am going to make my own
> > rabbit_common OTP application, and change the Erlang client to depend on
> it
> > rather than the server. I will also see what it takes to change the
> rabbit
> > 1.4.0 server itself to factor out the common code and to use this
> > rabbit_common application.
>
> Just FYI, please be aware that the server code base has moved on
> structurally since the 1.4.0 release, so you may want to code against
> something more recent, without of course coding against a moving
> target. Also, there are improvements in a branches in the client that
> will go back into the default branch, e.g. introduction of lib_amqp as
> a high level API.
>
> Ben
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20080907/e4098857/attachment.htm 

From rabbitmq-discuss_efine at usa.net  Sun Sep  7 22:59:27 2008
From: rabbitmq-discuss_efine at usa.net (Edwin Fine)
Date: Sun, 7 Sep 2008 17:59:27 -0400
Subject: [rabbitmq-discuss] [BUG] Erlang RabbitMQ client requires
	installed server code
In-Reply-To: <48C39615.7070509@lshift.net>
References: <6c2563b20809062356k1f492631m4b62e4a7e72ca9f9@mail.gmail.com>
	<48C39615.7070509@lshift.net>
Message-ID: <6c2563b20809071459o1028ce17sa5a487a3671c8680@mail.gmail.com>

Matthias,


> Bear in mind that the Erlang client code base can operate in both direct
> and networked mode. For the former you definitely need a server.


I do understand, but there should be separate direct network clients. I
think it's asking for trouble, and untidy, to have references in code to
something that it will never use and will crash if it ever magically does
try to use it. It also confuses dependency analysis tools. I want to build a
release consisting only of modules that are needed for a network client, for
a sort of embedded server scenario. As things stand now, I will have to pull
in some or all of the rabbitmq_server application, and I will have to have
the server code installed on the build system even if I am never going to
use it on that system. Maybe I am being picky here (call me "purist", if you
must), but that doesn't feel right to me. I didn't need the server code to
build client-related code with WebSphere MQ.

 I respectfully suggest that the above RabbitMQ server modules, and their
> dependencies, be bundled with the Erlang client. Ideally, I would think it
> would be best perhaps to put them a separate Erlang library application
> (maybe "rabbitmq_common") that is used both by the server and the Erlang
> client.
>

The above is on our todo list. Refactoring the code is the easy part. The
> challenges are in:
>
> - updating the module structure of the VCS - is rabbitmq_common going to be
> a separate HG module?


That depends. Is it something that is reusable in a number of contexts? If
so, I would say yes, although I am not sure what the HG-specific
consequences are of having a separate HG module.


> - figuring out how rabbitmq_common will be distributed. This can be a
> combination of all of the following: a) separately, b) as part of the Erlang
> client and server source packages, c) as part of the Erlang client and
> server binary packages. Then there also the Debian and RPM packages to
> consider - are we going to have a separate packages for rabbitmq_common or
> will it be bundled with the existing packages?


I think of this as a library on which multiple different applications
depend, something like glibc. It needs to be there, in the correct version,
before you can install packages that depend on it. So it needs to be a
separately installable app. rabbitmq_server.app, rabbitmq_direct_client.app,
and rabbitmq_network_client.app will all show rabbitmq_common as an
included_application.

If you do this, I believe it fits in to the Debian/RPM/Yum/YaST/Uncle Tom
Cobbleigh and all's dependency model.

Depending on the above choices a significant amount of work needs to be put
> into revising the build system, the packaging system, our automated
> deployment system, the documentation, and parts of the web site.
>

That's for sure!


>
> That's why it hasn't happened yet.
>

I understand. I was just caught by surprise trying to create what is
effectively an embedded client. I've been trying to tease apart the
dependencies of many products for a few days now :(

Regards,
>
> Matthias.
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20080907/2e675e0b/attachment.htm 

From rabbitmq-discuss_efine at usa.net  Sun Sep  7 23:07:19 2008
From: rabbitmq-discuss_efine at usa.net (Edwin Fine)
Date: Sun, 7 Sep 2008 18:07:19 -0400
Subject: [rabbitmq-discuss] [BUG] Erlang RabbitMQ client requires
	installed server code
In-Reply-To: <269388e30809070149s48a5b9b6r7880168c64c1a526@mail.gmail.com>
References: <6c2563b20809062356k1f492631m4b62e4a7e72ca9f9@mail.gmail.com>
	<6c2563b20809070048s1bd7935ew8a5818b054195e5d@mail.gmail.com>
	<269388e30809070149s48a5b9b6r7880168c64c1a526@mail.gmail.com>
Message-ID: <6c2563b20809071507r5d3fb9d1w829ca3617cfbb62a@mail.gmail.com>

Ben,

This would of great value. As indicated in my previous mail, we should
> promote the client, so this refactoring work should go into the core
> build and release process. Because of the centrality of this work, we
> may need to consider effects that it would have on the core process.
> The various parts of Rabbit have already been broken out into separate
> hg repos, which for practical purposes, need to be checked to sibling
> directories in order for the build to work (e.g. rabbitmq-server
> expects rabbitmq-codegen to be checked out into the same parent
> directory). This approach could be taken for a common Erlang module.
>

That's good - so it's not an alien procedure.


>
> The other consideration that you might make is how this patch gets
> played back to the Rabbit dev team. You could generate a simple patch
> or you could use hg as a DVCS. One consideration with the latter is
> that we use named branches for each new feature or bug. If you were
> just to clone and implement this in the default branch of your repo,
> we may need to think about how to handle the history (because hg
> doesn't rewrite it in the same way that git does).
>

I don't have any HG experience - it seems like there's now an explosion of
configuration management and source code control tools and I just can't keep
up :)
I will defer to your wisdom in these matters.


> But having said that I don't want to let any formalities get in the
> way of you contributing to Rabbit, so at the end of the day, I would
> do what is most convenient for you.
>

Maybe we can meet halfway. I didn't really want to get into rearchitecting
the RabbitMQ module structure (well, I wish I could, but I don't have time.
The mortgage payment beckons and all that incidental stuff).


> Apart from rabbit_amqqueue and rabbitmq_misc, all of those modules
> were designed to be eventually sharable, so that is fine.
>
> My gut feeling is that rabbit_amqqueue and rabbitmq_misc are purely
> server side concerns and if there is a dependency there, we should
> look at it and potentially factor it out.
>

I agree. I said something like that in one of my other emails before I
replied to this one. One could put the factored-out code into the "common"
app.

Regards,
Edwin
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20080907/f4fb2c2d/attachment.htm 

From 0x6e6562 at gmail.com  Mon Sep  8 00:24:28 2008
From: 0x6e6562 at gmail.com (Ben Hood)
Date: Mon, 8 Sep 2008 00:24:28 +0100
Subject: [rabbitmq-discuss] [BUG] Erlang RabbitMQ client requires
	installed server code
In-Reply-To: <6c2563b20809071507r5d3fb9d1w829ca3617cfbb62a@mail.gmail.com>
References: <6c2563b20809062356k1f492631m4b62e4a7e72ca9f9@mail.gmail.com>
	<6c2563b20809070048s1bd7935ew8a5818b054195e5d@mail.gmail.com>
	<269388e30809070149s48a5b9b6r7880168c64c1a526@mail.gmail.com>
	<6c2563b20809071507r5d3fb9d1w829ca3617cfbb62a@mail.gmail.com>
Message-ID: <269388e30809071624l18c8e87fk41f0dcc24fe34116@mail.gmail.com>

Edwin,

On Sun, Sep 7, 2008 at 11:07 PM, Edwin Fine
<rabbitmq-discuss_efine at usa.net> wrote:
> Maybe we can meet halfway. I didn't really want to get into rearchitecting
> the RabbitMQ module structure (well, I wish I could, but I don't have time.
> The mortgage payment beckons and all that incidental stuff).

Sure. I don't think myself or Matthias thought that you would be able
to go this far, because it is difficult enough for ourselves to do
this.

The main thing for us is that there is some active participation in
the community which provides feedback about what is needed.

Let us know if you need any help in reaching your short term goal.

Ben



From 0x6e6562 at gmail.com  Mon Sep  8 00:41:36 2008
From: 0x6e6562 at gmail.com (Ben Hood)
Date: Mon, 8 Sep 2008 00:41:36 +0100
Subject: [rabbitmq-discuss] [BUG] Erlang RabbitMQ client requires
	installed server code
In-Reply-To: <6c2563b20809071432w7ed1d9co24fdfc1e1053e673@mail.gmail.com>
References: <6c2563b20809062356k1f492631m4b62e4a7e72ca9f9@mail.gmail.com>
	<48C39615.7070509@lshift.net>
	<6c2563b20809071432w7ed1d9co24fdfc1e1053e673@mail.gmail.com>
Message-ID: <269388e30809071641l205890bcr6e4fc6888af0780d@mail.gmail.com>

Edwin,

On Sun, Sep 7, 2008 at 10:32 PM, Edwin Fine
<rabbitmq-discuss_efine at usa.net> wrote:
>
> As the most up to date client code currently stands, amqp_channel calls
> rabbit_amqqueue in a handle_info function. Although this handle_info
> function is used only by the direct client, I am uncomfortable with having
> server-specific code mixed in with pure client code. There should be a clean
> separation of concerns and all "direct" code, which calls into the
> server-specific code, should be in one module, and the network-only code in
> another.

The clean separation has been accomplished by having both modes of
operation (embedded vs TCP) implemented in separate driver modules.

So if you want to build a network only package, you can just leave out
the amqp_direct_driver module.

Hence with all due respect, I would disagree that concerns have been mixed.

> amqp_network_driver calls rabbit_framing_channel, which in turn calls
> rabbit_channel. So indirectly, the network client uses rabbit_channel and
> needs it in the common distribution.

This is true, but this only pertains to the do/2 and do/3 calls, which
*could* be abstracted out of the rabbit_channel module with not too
many changes.

> So, ignoring modules provided by Erlang/OTP, and the network client modules
> themselves, the following modules are needed by the network client:
>
> hessian

I have just deleted the reference to hessian (bug19334). This was
something experimental and should not be in the client code base.

> rabbit_binary_generator
> rabbit_framing
> rabbit_framing_channel
> rabbit_heartbeat
> rabbit_misc
> rabbit_reader
> rabbit_writer

Ben



From rabbitmq-discuss_efine at usa.net  Mon Sep  8 00:43:30 2008
From: rabbitmq-discuss_efine at usa.net (Edwin Fine)
Date: Sun, 7 Sep 2008 19:43:30 -0400
Subject: [rabbitmq-discuss] [BUG] Erlang RabbitMQ client requires
	installed server code
In-Reply-To: <269388e30809071624l18c8e87fk41f0dcc24fe34116@mail.gmail.com>
References: <6c2563b20809062356k1f492631m4b62e4a7e72ca9f9@mail.gmail.com>
	<6c2563b20809070048s1bd7935ew8a5818b054195e5d@mail.gmail.com>
	<269388e30809070149s48a5b9b6r7880168c64c1a526@mail.gmail.com>
	<6c2563b20809071507r5d3fb9d1w829ca3617cfbb62a@mail.gmail.com>
	<269388e30809071624l18c8e87fk41f0dcc24fe34116@mail.gmail.com>
Message-ID: <6c2563b20809071643tbcdaeb0j42b752b09824db1@mail.gmail.com>

On Sun, Sep 7, 2008 at 7:24 PM, Ben Hood <0x6e6562 at gmail.com> wrote:

> Edwin,
>
> On Sun, Sep 7, 2008 at 11:07 PM, Edwin Fine
> <rabbitmq-discuss_efine at usa.net> wrote:
> > Maybe we can meet halfway. I didn't really want to get into
> rearchitecting
> > the RabbitMQ module structure (well, I wish I could, but I don't have
> time.
> > The mortgage payment beckons and all that incidental stuff).
>
> Sure. I don't think myself or Matthias thought that you would be able
> to go this far, because it is difficult enough for ourselves to do
> this.
>

Ok.


>
> The main thing for us is that there is some active participation in
> the community which provides feedback about what is needed.
>

Well, since you asked ;-) ...  My understanding is that OTP standards are
for the .app file to have the same name as the application behaviour
callback and the directory in which it is situated. For example, the OTP
compiler application is in the compiler directory, and under ebin, there is
compiler.app, and under src there is compiler.erl.

With RabbitMQ, the app config file is named rabbit.app, the app itself is
rabbit.erl, but the directory is named rabbitmq_server. This is
inconsistent. Now before you call me nitpicky, there is a practical issue
behind this. The client that is written uses things like
-include_lib("rabbitmq_server/include/rabbit.hrl"). This forces the server
code to stay in a directory named rabbitmq_server, because this is what
allows the includes to work via code:lib_dir(). The problem is that because
the app is named rabbit, automated dependency tools like Sinan have trouble
with the inconsistency.

Could you either rename the app to rabbitmq_server, or change all references
(and the dir name) to rabbit?


> Let us know if you need any help in reaching your short term goal.
>

Well, right now I have fudged what's needed to get going, but I the above
changes would be most appreciated if at all possible.


> Ben


Regards,
Ed
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20080907/e25c816c/attachment.htm 

From rabbitmq-discuss_efine at usa.net  Mon Sep  8 00:47:59 2008
From: rabbitmq-discuss_efine at usa.net (Edwin Fine)
Date: Sun, 7 Sep 2008 19:47:59 -0400
Subject: [rabbitmq-discuss] [BUG] Erlang RabbitMQ client requires
	installed server code
In-Reply-To: <269388e30809071641l205890bcr6e4fc6888af0780d@mail.gmail.com>
References: <6c2563b20809062356k1f492631m4b62e4a7e72ca9f9@mail.gmail.com>
	<48C39615.7070509@lshift.net>
	<6c2563b20809071432w7ed1d9co24fdfc1e1053e673@mail.gmail.com>
	<269388e30809071641l205890bcr6e4fc6888af0780d@mail.gmail.com>
Message-ID: <6c2563b20809071647j64bb910cp340f48bbd9b67a1b@mail.gmail.com>

On Sun, Sep 7, 2008 at 7:41 PM, Ben Hood <0x6e6562 at gmail.com> wrote:

> Edwin,
>
> On Sun, Sep 7, 2008 at 10:32 PM, Edwin Fine
> <rabbitmq-discuss_efine at usa.net> wrote:
> >
> > As the most up to date client code currently stands, amqp_channel calls
> > rabbit_amqqueue in a handle_info function. Although this handle_info
> > function is used only by the direct client, I am uncomfortable with
> having
> > server-specific code mixed in with pure client code. There should be a
> clean
> > separation of concerns and all "direct" code, which calls into the
> > server-specific code, should be in one module, and the network-only code
> in
> > another.
>
> The clean separation has been accomplished by having both modes of
> operation (embedded vs TCP) implemented in separate driver modules.
>
> So if you want to build a network only package, you can just leave out
> the amqp_direct_driver module.
>
> Hence with all due respect, I would disagree that concerns have been mixed.


With all due respect in return, check out this code from
amqp_connection.erl:

%% Starts a new network channel.
handle_call({network, ChannelNumber, OutOfBand}, From, State) ->
    handle_start({ChannelNumber, OutOfBand},
                 fun amqp_network_driver:open_channel/3,
                 fun amqp_network_driver:close_channel/1,
                 fun amqp_network_driver:do/2,
                 fun amqp_network_driver:do/3,
                 State);

%% Starts a new direct channel.
handle_call({direct, ChannelNumber, OutOfBand}, From, State) ->
    handle_start({ChannelNumber, OutOfBand},
                 fun amqp_direct_driver:open_channel/3,
                 fun amqp_direct_driver:close_channel/1,
                 fun amqp_direct_driver:do/2,
                 fun amqp_direct_driver:do/3,
                 State);

This ties the module to amqp_direct_driver by naming it. xref will show this
code is dependent on amqp_direct_driver. Dialyzer will complain if
amqp_direct_driver is not there. This call should be handled somewhere else.
In my humble opinion.


>
>
> > amqp_network_driver calls rabbit_framing_channel, which in turn calls
> > rabbit_channel. So indirectly, the network client uses rabbit_channel and
> > needs it in the common distribution.
>
> This is true, but this only pertains to the do/2 and do/3 calls, which
> *could* be abstracted out of the rabbit_channel module with not too
> many changes.


Well, then, let's factor it out.


> > So, ignoring modules provided by Erlang/OTP, and the network client
> modules
> > themselves, the following modules are needed by the network client:
> >
> > hessian
>
> I have just deleted the reference to hessian (bug19334). This was
> something experimental and should not be in the client code base.


Ok, good to know!


> > rabbit_binary_generator
> > rabbit_framing
> > rabbit_framing_channel
> > rabbit_heartbeat
> > rabbit_misc
> > rabbit_reader
> > rabbit_writer
>
> Ben
>

Regards,
Edwin
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20080907/3b26d973/attachment.htm 

From 0x6e6562 at gmail.com  Mon Sep  8 00:53:15 2008
From: 0x6e6562 at gmail.com (Ben Hood)
Date: Mon, 8 Sep 2008 00:53:15 +0100
Subject: [rabbitmq-discuss] [BUG] Erlang RabbitMQ client requires
	installed server code
In-Reply-To: <6c2563b20809071647j64bb910cp340f48bbd9b67a1b@mail.gmail.com>
References: <6c2563b20809062356k1f492631m4b62e4a7e72ca9f9@mail.gmail.com>
	<48C39615.7070509@lshift.net>
	<6c2563b20809071432w7ed1d9co24fdfc1e1053e673@mail.gmail.com>
	<269388e30809071641l205890bcr6e4fc6888af0780d@mail.gmail.com>
	<6c2563b20809071647j64bb910cp340f48bbd9b67a1b@mail.gmail.com>
Message-ID: <269388e30809071653i11aec850ya78b97a5ffb65e69@mail.gmail.com>

Edwin,

On Mon, Sep 8, 2008 at 12:47 AM, Edwin Fine
<rabbitmq-discuss_efine at usa.net> wrote:
> With all due respect in return, check out this code from
> amqp_connection.erl:
>
> %% Starts a new network channel.
> handle_call({network, ChannelNumber, OutOfBand}, From, State) ->
>     handle_start({ChannelNumber, OutOfBand},
>                  fun amqp_network_driver:open_channel/3,
>                  fun amqp_network_driver:close_channel/1,
>                  fun amqp_network_driver:do/2,
>                  fun amqp_network_driver:do/3,
>                  State);
>
> %% Starts a new direct channel.
> handle_call({direct, ChannelNumber, OutOfBand}, From, State) ->
>     handle_start({ChannelNumber, OutOfBand},
>                  fun amqp_direct_driver:open_channel/3,
>                  fun amqp_direct_driver:close_channel/1,
>                  fun amqp_direct_driver:do/2,
>                  fun amqp_direct_driver:do/3,
>                  State);
>
> This ties the module to amqp_direct_driver by naming it. xref will show this
> code is dependent on amqp_direct_driver. Dialyzer will complain if
> amqp_direct_driver is not there. This call should be handled somewhere else.
> In my humble opinion.

This is a valid point. We should look into splitting this out somehow.
I don't have an answer straight away, but I'm sure we can come up with
something.

>>
>>
>> > amqp_network_driver calls rabbit_framing_channel, which in turn calls
>> > rabbit_channel. So indirectly, the network client uses rabbit_channel
>> > and
>> > needs it in the common distribution.
>>
>> This is true, but this only pertains to the do/2 and do/3 calls, which
>> *could* be abstracted out of the rabbit_channel module with not too
>> many changes.
>
>
> Well, then, let's factor it out.

I'll take this down as a point of discussion as well.

Cheers,

Ben



From 0x6e6562 at gmail.com  Mon Sep  8 01:03:48 2008
From: 0x6e6562 at gmail.com (Ben Hood)
Date: Mon, 8 Sep 2008 01:03:48 +0100
Subject: [rabbitmq-discuss] [BUG] Erlang RabbitMQ client requires
	installed server code
In-Reply-To: <6c2563b20809071647j64bb910cp340f48bbd9b67a1b@mail.gmail.com>
References: <6c2563b20809062356k1f492631m4b62e4a7e72ca9f9@mail.gmail.com>
	<48C39615.7070509@lshift.net>
	<6c2563b20809071432w7ed1d9co24fdfc1e1053e673@mail.gmail.com>
	<269388e30809071641l205890bcr6e4fc6888af0780d@mail.gmail.com>
	<6c2563b20809071647j64bb910cp340f48bbd9b67a1b@mail.gmail.com>
Message-ID: <269388e30809071703t5b5d30dpd867dd246c871323@mail.gmail.com>

On Mon, Sep 8, 2008 at 12:47 AM, Edwin Fine
<rabbitmq-discuss_efine at usa.net> wrote:

> With all due respect in return, check out this code from
> amqp_connection.erl:
>
> %% Starts a new network channel.
> handle_call({network, ChannelNumber, OutOfBand}, From, State) ->
>     handle_start({ChannelNumber, OutOfBand},
>                  fun amqp_network_driver:open_channel/3,
>                  fun amqp_network_driver:close_channel/1,
>                  fun amqp_network_driver:do/2,
>                  fun amqp_network_driver:do/3,
>                  State);
>
> %% Starts a new direct channel.
> handle_call({direct, ChannelNumber, OutOfBand}, From, State) ->
>     handle_start({ChannelNumber, OutOfBand},
>                  fun amqp_direct_driver:open_channel/3,
>                  fun amqp_direct_driver:close_channel/1,
>                  fun amqp_direct_driver:do/2,
>                  fun amqp_direct_driver:do/3,
>                  State);
>
> This ties the module to amqp_direct_driver by naming it. xref will show this
> code is dependent on amqp_direct_driver. Dialyzer will complain if
> amqp_direct_driver is not there. This call should be handled somewhere else.
> In my humble opinion.

I was just thinking back to an earlier version of the client that used
parameterized modules to solve this dependency. Maybe that could an
option. Or perhaps by defining a new OTP behavior?



From rabbitmq-discuss_efine at usa.net  Mon Sep  8 01:06:19 2008
From: rabbitmq-discuss_efine at usa.net (Edwin Fine)
Date: Sun, 7 Sep 2008 20:06:19 -0400
Subject: [rabbitmq-discuss] [BUG] Erlang RabbitMQ client requires
	installed server code
In-Reply-To: <269388e30809071653i11aec850ya78b97a5ffb65e69@mail.gmail.com>
References: <6c2563b20809062356k1f492631m4b62e4a7e72ca9f9@mail.gmail.com>
	<48C39615.7070509@lshift.net>
	<6c2563b20809071432w7ed1d9co24fdfc1e1053e673@mail.gmail.com>
	<269388e30809071641l205890bcr6e4fc6888af0780d@mail.gmail.com>
	<6c2563b20809071647j64bb910cp340f48bbd9b67a1b@mail.gmail.com>
	<269388e30809071653i11aec850ya78b97a5ffb65e69@mail.gmail.com>
Message-ID: <6c2563b20809071706ofd4d34bh4f889c77cd26475d@mail.gmail.com>

Let me make a constructive suggestion. By using the configuration, we could
avoid the compile-time dependency on either of those modules, and at the
same time we could make amqp_connection more flexible.

%% Starts a new channel. Flavor is direct or network. flavor_module is set
up to be
%% one of amqp_direct_driver or amqp_network_driver (or, some other driver -
e.g. future amqp_wmq_driver)
handle_call({Flavor, ChannelNumber, OutOfBand}, From, State) ->
    {ok, Module} = proplists:get_value(Flavor, State#state.flavor_module),
    handle_start({ChannelNumber, OutOfBand},
                 fun Module:open_channel/3,
                 fun Module:close_channel/1,
                 fun Module:do/2,
                 fun Module:do/3,
                 State);

What do you think?

Regards,
Edwin
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20080907/ba2aeb00/attachment.htm 

From rabbitmq-discuss_efine at usa.net  Mon Sep  8 01:06:48 2008
From: rabbitmq-discuss_efine at usa.net (Edwin Fine)
Date: Sun, 7 Sep 2008 20:06:48 -0400
Subject: [rabbitmq-discuss] [BUG] Erlang RabbitMQ client requires
	installed server code
In-Reply-To: <269388e30809071703t5b5d30dpd867dd246c871323@mail.gmail.com>
References: <6c2563b20809062356k1f492631m4b62e4a7e72ca9f9@mail.gmail.com>
	<48C39615.7070509@lshift.net>
	<6c2563b20809071432w7ed1d9co24fdfc1e1053e673@mail.gmail.com>
	<269388e30809071641l205890bcr6e4fc6888af0780d@mail.gmail.com>
	<6c2563b20809071647j64bb910cp340f48bbd9b67a1b@mail.gmail.com>
	<269388e30809071703t5b5d30dpd867dd246c871323@mail.gmail.com>
Message-ID: <6c2563b20809071706m2ae0bb4eqabc6ae9c1b7bb90@mail.gmail.com>

Our emails crossed in the ether :)

On Sun, Sep 7, 2008 at 8:03 PM, Ben Hood <0x6e6562 at gmail.com> wrote:

> On Mon, Sep 8, 2008 at 12:47 AM, Edwin Fine
> <rabbitmq-discuss_efine at usa.net> wrote:
>
> > With all due respect in return, check out this code from
> > amqp_connection.erl:
> >
> > %% Starts a new network channel.
> > handle_call({network, ChannelNumber, OutOfBand}, From, State) ->
> >     handle_start({ChannelNumber, OutOfBand},
> >                  fun amqp_network_driver:open_channel/3,
> >                  fun amqp_network_driver:close_channel/1,
> >                  fun amqp_network_driver:do/2,
> >                  fun amqp_network_driver:do/3,
> >                  State);
> >
> > %% Starts a new direct channel.
> > handle_call({direct, ChannelNumber, OutOfBand}, From, State) ->
> >     handle_start({ChannelNumber, OutOfBand},
> >                  fun amqp_direct_driver:open_channel/3,
> >                  fun amqp_direct_driver:close_channel/1,
> >                  fun amqp_direct_driver:do/2,
> >                  fun amqp_direct_driver:do/3,
> >                  State);
> >
> > This ties the module to amqp_direct_driver by naming it. xref will show
> this
> > code is dependent on amqp_direct_driver. Dialyzer will complain if
> > amqp_direct_driver is not there. This call should be handled somewhere
> else.
> > In my humble opinion.
>
> I was just thinking back to an earlier version of the client that used
> parameterized modules to solve this dependency. Maybe that could an
> option. Or perhaps by defining a new OTP behavior?
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20080907/8818b3ae/attachment.htm 

From rabbitmq-discuss_efine at usa.net  Mon Sep  8 01:13:25 2008
From: rabbitmq-discuss_efine at usa.net (Edwin Fine)
Date: Sun, 7 Sep 2008 20:13:25 -0400
Subject: [rabbitmq-discuss] [BUG] Erlang RabbitMQ client requires
	installed server code
In-Reply-To: <6c2563b20809071706ofd4d34bh4f889c77cd26475d@mail.gmail.com>
References: <6c2563b20809062356k1f492631m4b62e4a7e72ca9f9@mail.gmail.com>
	<48C39615.7070509@lshift.net>
	<6c2563b20809071432w7ed1d9co24fdfc1e1053e673@mail.gmail.com>
	<269388e30809071641l205890bcr6e4fc6888af0780d@mail.gmail.com>
	<6c2563b20809071647j64bb910cp340f48bbd9b67a1b@mail.gmail.com>
	<269388e30809071653i11aec850ya78b97a5ffb65e69@mail.gmail.com>
	<6c2563b20809071706ofd4d34bh4f889c77cd26475d@mail.gmail.com>
Message-ID: <6c2563b20809071713m535c5844g60e66c32075d9dbb@mail.gmail.com>

Hm, I made a mistake in my excitement :)

    {ok, Module} = proplists:get_value(Flavor, State#state.flavor_module),

should be

    Module = proplists:get_value(Flavor, State#state.flavor_modules),

where flavor_modules would contain something like [{direct,
amqp_direct_driver}, {network, amqp_network_driver}, {whatever,
amqp_whatever_driver}].

On Sun, Sep 7, 2008 at 8:06 PM, Edwin Fine
<rabbitmq-discuss_efine at usa.net>wrote:

> Let me make a constructive suggestion. By using the configuration, we could
> avoid the compile-time dependency on either of those modules, and at the
> same time we could make amqp_connection more flexible.
>
> %% Starts a new channel. Flavor is direct or network. flavor_module is set
> up to be
> %% one of amqp_direct_driver or amqp_network_driver (or, some other driver
> - e.g. future amqp_wmq_driver)
> handle_call({Flavor, ChannelNumber, OutOfBand}, From, State) ->
>     {ok, Module} = proplists:get_value(Flavor, State#state.flavor_module),
>     handle_start({ChannelNumber, OutOfBand},
>                  fun Module:open_channel/3,
>                  fun Module:close_channel/1,
>                  fun Module:do/2,
>                  fun Module:do/3,
>                  State);
>
> What do you think?
>
> Regards,
> Edwin
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20080907/9bcd210e/attachment.htm 

From rabbitmq-discuss_efine at usa.net  Mon Sep  8 01:40:35 2008
From: rabbitmq-discuss_efine at usa.net (Edwin Fine)
Date: Sun, 7 Sep 2008 20:40:35 -0400
Subject: [rabbitmq-discuss] [BUG] Erlang RabbitMQ client requires
	installed server code
In-Reply-To: <6c2563b20809071713m535c5844g60e66c32075d9dbb@mail.gmail.com>
References: <6c2563b20809062356k1f492631m4b62e4a7e72ca9f9@mail.gmail.com>
	<48C39615.7070509@lshift.net>
	<6c2563b20809071432w7ed1d9co24fdfc1e1053e673@mail.gmail.com>
	<269388e30809071641l205890bcr6e4fc6888af0780d@mail.gmail.com>
	<6c2563b20809071647j64bb910cp340f48bbd9b67a1b@mail.gmail.com>
	<269388e30809071653i11aec850ya78b97a5ffb65e69@mail.gmail.com>
	<6c2563b20809071706ofd4d34bh4f889c77cd26475d@mail.gmail.com>
	<6c2563b20809071713m535c5844g60e66c32075d9dbb@mail.gmail.com>
Message-ID: <6c2563b20809071740r2ab07d50p5420b506ac058909@mail.gmail.com>

Ok, I can see an issue here. There's a bit of a Catch-22 where the
IntialState is obtained from the driver, but we don't know which driver to
get it from because the drive name has to be in the state :).

So I have another suggestion. By the principle of convention over
configuration, I present some code, unfortunately a bit long winded but
necessary.

%% Starts a direct connection to the Rabbit AMQP server, assuming that
%% the server is running in the same process space.
start(User,Password,ProcLink) when is_boolean(ProcLink) ->
    InitialState = #connection_state{username = User,
                                     password = Password,
                                     vhostpath = <<"/">>},
*    {ok, Pid} = start_internal(InitialState, "direct", ProcLink),
*    {Pid, direct};

%% Starts a networked conection to a remote AMQP server.
start(User,Password,Host,VHost,ProcLink) ->
    InitialState = #connection_state{username = User,
                                     password = Password,
                                     serverhost = Host,
                                     vhostpath = VHost},
*    {ok, Pid} = start_internal(InitialState, "network", ProcLink),
*    {Pid, network}.

start_internal(InitialState, DriverType, ProcLink) when is_list(DriverType)
->
    DriverSpec = build_driver_spec(DriverType),
    case ProcLink of
        true ->
            gen_server:start_link(?MODULE, [InitialState, DriverSpec], []);
        false ->
            gen_server:start(?MODULE, [InitialState, DriverSpec], [])
    end.

init([InitialState, {M, F}]) ->
    State = apply(M, F, [InitialState]),
    {ok, State#driver_module = M}.
    % or if we can't modify the driver state record format,
    % we could piggyback it, e.g. #mystate{drv_state = State, drv_module =
Module}

l2a(L) ->
    case catch list_to_existing_atom(L) of
        A when is_atom(A) ->
            A;
        _ ->
            list_to_atom(L)
    end.

build_driver_spec(DriverType) ->
    DriverModule = l2a("amqp_" ++ DriverType ++ "_driver"),
    DriverFn = handshake,
    {DriverModule, DriverFn}.
    % or maybe just return a fun(X) -> DriverModule:handshake/1, but is that
legal?


The rest follows as before.

Thoughts?


On Sun, Sep 7, 2008 at 8:13 PM, Edwin Fine
<rabbitmq-discuss_efine at usa.net>wrote:

> Hm, I made a mistake in my excitement :)
>
>     {ok, Module} = proplists:get_value(Flavor, State#state.flavor_module),
>
> should be
>
>     Module = proplists:get_value(Flavor, State#state.flavor_modules),
>
> where flavor_modules would contain something like [{direct,
> amqp_direct_driver}, {network, amqp_network_driver}, {whatever,
> amqp_whatever_driver}].
>
>
> On Sun, Sep 7, 2008 at 8:06 PM, Edwin Fine <rabbitmq-discuss_efine at usa.net
> > wrote:
>
>> Let me make a constructive suggestion. By using the configuration, we
>> could avoid the compile-time dependency on either of those modules, and at
>> the same time we could make amqp_connection more flexible.
>>
>> %% Starts a new channel. Flavor is direct or network. flavor_module is set
>> up to be
>> %% one of amqp_direct_driver or amqp_network_driver (or, some other driver
>> - e.g. future amqp_wmq_driver)
>> handle_call({Flavor, ChannelNumber, OutOfBand}, From, State) ->
>>     {ok, Module} = proplists:get_value(Flavor, State#state.flavor_module),
>>     handle_start({ChannelNumber, OutOfBand},
>>                  fun Module:open_channel/3,
>>                  fun Module:close_channel/1,
>>                  fun Module:do/2,
>>                  fun Module:do/3,
>>                  State);
>>
>> What do you think?
>>
>> Regards,
>> Edwin
>>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20080907/a9042158/attachment.htm 

From rabbitmq-discuss_efine at usa.net  Mon Sep  8 01:49:02 2008
From: rabbitmq-discuss_efine at usa.net (Edwin Fine)
Date: Sun, 7 Sep 2008 20:49:02 -0400
Subject: [rabbitmq-discuss] [BUG] Erlang RabbitMQ client requires
	installed server code
In-Reply-To: <6c2563b20809071740r2ab07d50p5420b506ac058909@mail.gmail.com>
References: <6c2563b20809062356k1f492631m4b62e4a7e72ca9f9@mail.gmail.com>
	<48C39615.7070509@lshift.net>
	<6c2563b20809071432w7ed1d9co24fdfc1e1053e673@mail.gmail.com>
	<269388e30809071641l205890bcr6e4fc6888af0780d@mail.gmail.com>
	<6c2563b20809071647j64bb910cp340f48bbd9b67a1b@mail.gmail.com>
	<269388e30809071653i11aec850ya78b97a5ffb65e69@mail.gmail.com>
	<6c2563b20809071706ofd4d34bh4f889c77cd26475d@mail.gmail.com>
	<6c2563b20809071713m535c5844g60e66c32075d9dbb@mail.gmail.com>
	<6c2563b20809071740r2ab07d50p5420b506ac058909@mail.gmail.com>
Message-ID: <6c2563b20809071749u2ed3c633lc1488dafedaf8a6f@mail.gmail.com>

Just a slight correction.

    State = apply(M, F, [InitialState]),

would be better as

    State = M:F(InitialState),

I'm kind of new to Erlang so sometimes these things don't occur to me until
later (after I press Send ;)
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20080907/02ccbd9b/attachment.htm 

From rabbitmq-discuss_efine at usa.net  Mon Sep  8 03:28:32 2008
From: rabbitmq-discuss_efine at usa.net (Edwin Fine)
Date: Sun, 7 Sep 2008 22:28:32 -0400
Subject: [rabbitmq-discuss] [BUG] Erlang RabbitMQ client requires
	installed server code
In-Reply-To: <6c2563b20809071749u2ed3c633lc1488dafedaf8a6f@mail.gmail.com>
References: <6c2563b20809062356k1f492631m4b62e4a7e72ca9f9@mail.gmail.com>
	<48C39615.7070509@lshift.net>
	<6c2563b20809071432w7ed1d9co24fdfc1e1053e673@mail.gmail.com>
	<269388e30809071641l205890bcr6e4fc6888af0780d@mail.gmail.com>
	<6c2563b20809071647j64bb910cp340f48bbd9b67a1b@mail.gmail.com>
	<269388e30809071653i11aec850ya78b97a5ffb65e69@mail.gmail.com>
	<6c2563b20809071706ofd4d34bh4f889c77cd26475d@mail.gmail.com>
	<6c2563b20809071713m535c5844g60e66c32075d9dbb@mail.gmail.com>
	<6c2563b20809071740r2ab07d50p5420b506ac058909@mail.gmail.com>
	<6c2563b20809071749u2ed3c633lc1488dafedaf8a6f@mail.gmail.com>
Message-ID: <6c2563b20809071928r262db585vfd131641dde3a361@mail.gmail.com>

So here's my first change (attached file ampq_connection.erl).

I've modified amqp_connection to be completely dynamic and not depend at all
at compile time on any network driver module. Now some people may shudder at
building a module name from strings, but it's not uncommon outside Erlang
and it certainly does give flexibility.

I have successfully run the network_client_test, but could not run the
direct test. Is this possibly because the Rabbit 1.4.0 I have installed is
not in sync with the API expected by the direct driver?

As an added bonus, I was able to prevent code from running that was marked
with

%% TODO This differentiation is only necessary for the direct channel,

because the server state now "knows" what kind of connection it is.

I'd be very interested to hear your thoughts on this approach, and whether
or not you can get the direct driver test to work.

Regards,
Edwin
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20080907/f762bc43/attachment.htm 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: amqp_connection.erl
Type: text/x-erlang
Size: 11217 bytes
Desc: not available
Url : http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20080907/f762bc43/attachment.bin 

From gsim at redhat.com  Mon Sep  8 07:18:28 2008
From: gsim at redhat.com (Gordon Sim)
Date: Mon, 08 Sep 2008 07:18:28 +0100
Subject: [rabbitmq-discuss] durable exclusive queues
In-Reply-To: <48C35130.4080906@lshift.net>
References: <e1c05edd0809041142m5bd889b1kc76709f359f29269@mail.gmail.com>
	<48C35130.4080906@lshift.net>
Message-ID: <48C4C3B4.7010803@redhat.com>

Matthias Radestock wrote:
> Aman Gupta wrote:
>> Is it possible to simulate this exclusive behavior?  I can do a passive
>> declare and look at the consumer count in the declare-ok, but that will 
>> introduce race conditions without a central lock.
> 
> It is not clear from the above what exactly you are trying to simulate. 
> Durable exclusive queues? As I explained, that doesn't make sense.
> 
>  From your description though it appears that perhaps you want queues 
> that are exclusive to one connection *at a time*, i.e. they can be 
> "acquired" by different connections over their lifetime. And such queues 
> could of course then sensibly be made durable.
> 
> If so, then one way to implement that is to have a secondary queue that 
> holds a token. Connections that want to use the "shared exclusive queue" 
> subscribe to the token queue. When they receive the token they know they 
> have exclusive access. To relinquish access they publish the token back 
> to the token queue, where it can be consumed by another connection.

The 'exclusive' field on the 'basic.consume' method allows consumers to 
request exclusive access to a queue; if someone else is already 
accessing it they are informed through an error condition. This at least 
allows the application to detect and rely on the fact that only one 
client can consume at a time.



From 0x6e6562 at gmail.com  Mon Sep  8 08:19:09 2008
From: 0x6e6562 at gmail.com (Ben Hood)
Date: Mon, 8 Sep 2008 08:19:09 +0100
Subject: [rabbitmq-discuss] [BUG] Erlang RabbitMQ client requires
	installed server code
In-Reply-To: <6c2563b20809071928r262db585vfd131641dde3a361@mail.gmail.com>
References: <6c2563b20809062356k1f492631m4b62e4a7e72ca9f9@mail.gmail.com>
	<6c2563b20809071432w7ed1d9co24fdfc1e1053e673@mail.gmail.com>
	<269388e30809071641l205890bcr6e4fc6888af0780d@mail.gmail.com>
	<6c2563b20809071647j64bb910cp340f48bbd9b67a1b@mail.gmail.com>
	<269388e30809071653i11aec850ya78b97a5ffb65e69@mail.gmail.com>
	<6c2563b20809071706ofd4d34bh4f889c77cd26475d@mail.gmail.com>
	<6c2563b20809071713m535c5844g60e66c32075d9dbb@mail.gmail.com>
	<6c2563b20809071740r2ab07d50p5420b506ac058909@mail.gmail.com>
	<6c2563b20809071749u2ed3c633lc1488dafedaf8a6f@mail.gmail.com>
	<6c2563b20809071928r262db585vfd131641dde3a361@mail.gmail.com>
Message-ID: <269388e30809080019w298a8f79l97429550c38e66d8@mail.gmail.com>

Edwin,

On Mon, Sep 8, 2008 at 3:28 AM, Edwin Fine
<rabbitmq-discuss_efine at usa.net> wrote:
> So here's my first change (attached file ampq_connection.erl).
>
> I've modified amqp_connection to be completely dynamic and not depend at all
> at compile time on any network driver module. Now some people may shudder at
> building a module name from strings, but it's not uncommon outside Erlang
> and it certainly does give flexibility.

I'm not overly concerned about this either - it's all self contained.

> I have successfully run the network_client_test, but could not run the
> direct test. Is this possibly because the Rabbit 1.4.0 I have installed is
> not in sync with the API expected by the direct driver?

This is unlikely. Can you be more specific about why the direct test
does not run? Is there an error?

>
> As an added bonus, I was able to prevent code from running that was marked
> with
>
> %% TODO This differentiation is only necessary for the direct channel,
>
> because the server state now "knows" what kind of connection it is.

:-)

> I'd be very interested to hear your thoughts on this approach, and whether
> or not you can get the direct driver test to work.

On initial perusal this looks quite good. I'm going to have to create
a branch for this and do some proper testing, so I'll try and get this
done as soon as possible.

Ben



From joes.mailing.lists at gmail.com  Mon Sep  8 14:09:26 2008
From: joes.mailing.lists at gmail.com (Novak Joe)
Date: Mon, 8 Sep 2008 22:09:26 +0900
Subject: [rabbitmq-discuss] python stomp examples
Message-ID: <2e45e80809080609g4035afa0ldedb6cb74fee48aa@mail.gmail.com>

Hi,
  I've just installed rabbitmq on debian etch.  I found it very simple
to get the package installed, and set the server running, however I'd
now like to put together a simple python-based test client, and use it
to test basic communication with the rabbitmq server, over the stomp
protocol.  I initially tried using the stompy module,
http://www.briggs.net.nz/log/projects/stomppy/
$ python stomp.py localhost 61613
subscribe /queue/test
send /queue/test hello world

  albeit without making any changes to the default setup of the
rabbitmq server, but had very mixed results.
  In particular, the first time I tried the example given on the page
above, the server returned a message regarding some gnu project, but
subsequent attempts to send messages did not return any results.

  Are there any lowbrow, python examples of how to actually use the
server to send and receive messages?  I was unable to find any on the
main website but I suspect I must have missed something obvious.  For
example, do I need to install the rabbitmq-stomp gateway, in addition
to the rabbitmq-server, before I can hope to accomplish anything?
Maybe it will suffice for me to first read all of the various blog
entries recommended for the stomp gateway.

  Cheers



From chime at mu.dk  Mon Sep  8 14:26:53 2008
From: chime at mu.dk (Michael Arnoldus)
Date: Mon, 8 Sep 2008 15:26:53 +0200
Subject: [rabbitmq-discuss] python stomp examples
In-Reply-To: <2e45e80809080609g4035afa0ldedb6cb74fee48aa@mail.gmail.com>
References: <2e45e80809080609g4035afa0ldedb6cb74fee48aa@mail.gmail.com>
Message-ID: <2A64833E-1268-4F2D-B288-65D2349A9818@mu.dk>

Hi,

I still have my first Python AMQP example program around using the  
QPID AMQP client and not stomp. Let me know if that's of any  
intererest to you.

Michael Arnoldus

On Sep 8, 2008, at 15:09 , Novak Joe wrote:

> Hi,
>  I've just installed rabbitmq on debian etch.  I found it very simple
> to get the package installed, and set the server running, however I'd
> now like to put together a simple python-based test client, and use it
> to test basic communication with the rabbitmq server, over the stomp
> protocol.  I initially tried using the stompy module,
> http://www.briggs.net.nz/log/projects/stomppy/
> $ python stomp.py localhost 61613
> subscribe /queue/test
> send /queue/test hello world
>
>  albeit without making any changes to the default setup of the
> rabbitmq server, but had very mixed results.
>  In particular, the first time I tried the example given on the page
> above, the server returned a message regarding some gnu project, but
> subsequent attempts to send messages did not return any results.
>
>  Are there any lowbrow, python examples of how to actually use the
> server to send and receive messages?  I was unable to find any on the
> main website but I suspect I must have missed something obvious.  For
> example, do I need to install the rabbitmq-stomp gateway, in addition
> to the rabbitmq-server, before I can hope to accomplish anything?
> Maybe it will suffice for me to first read all of the various blog
> entries recommended for the stomp gateway.
>
>  Cheers
>
> _______________________________________________
> rabbitmq-discuss mailing list
> rabbitmq-discuss at lists.rabbitmq.com
> http://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss

-------------- next part --------------
A non-text attachment was scrubbed...
Name: smime.p7s
Type: application/pkcs7-signature
Size: 1912 bytes
Desc: not available
Url : http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20080908/904b98d3/attachment.bin 

From 0x6e6562 at gmail.com  Mon Sep  8 15:23:52 2008
From: 0x6e6562 at gmail.com (Ben Hood)
Date: Mon, 8 Sep 2008 15:23:52 +0100
Subject: [rabbitmq-discuss] python stomp examples
In-Reply-To: <2e45e80809080609g4035afa0ldedb6cb74fee48aa@mail.gmail.com>
References: <2e45e80809080609g4035afa0ldedb6cb74fee48aa@mail.gmail.com>
Message-ID: <269388e30809080723t461bd7feqba05d2f51cbe28a7@mail.gmail.com>

Joe,

On Mon, Sep 8, 2008 at 2:09 PM, Novak Joe <joes.mailing.lists at gmail.com> wrote:
> Hi,
>  I've just installed rabbitmq on debian etch.  I found it very simple
> to get the package installed, and set the server running, however I'd
> now like to put together a simple python-based test client, and use it
> to test basic communication with the rabbitmq server, over the stomp
> protocol.  I initially tried using the stompy module,
> http://www.briggs.net.nz/log/projects/stomppy/
> $ python stomp.py localhost 61613
> subscribe /queue/test
> send /queue/test hello world
>
>  albeit without making any changes to the default setup of the
> rabbitmq server, but had very mixed results.
>  In particular, the first time I tried the example given on the page
> above, the server returned a message regarding some gnu project, but
> subsequent attempts to send messages did not return any results.
>
>  Are there any lowbrow, python examples of how to actually use the
> server to send and receive messages?  I was unable to find any on the
> main website but I suspect I must have missed something obvious.  For
> example, do I need to install the rabbitmq-stomp gateway, in addition
> to the rabbitmq-server, before I can hope to accomplish anything?
> Maybe it will suffice for me to first read all of the various blog
> entries recommended for the stomp gateway.

Have you read Tony's article about how to install and run the STOMP
adapter (which is not bundled with the Rabbit package for Debian)?

http://www.lshift.net/blog/2008/04/30/stomp-adapter-updated-for-rabbitmq-130

IIRC, this also contains client examples in Ruby and Perl.

Also, if you would send in the error or ordinary response messages, it
would help other people diagnose the problem.

BTW, is your goal to speak to Rabbit from Python fullstop, or do you
specifically need to use STOMP?

If you are just interested in the former, you may just want to start
out with Barry's Python library for AMQP:
http://barryp.org/software/py-amqplib/

HTH,

Ben



From chime at mu.dk  Mon Sep  8 15:36:28 2008
From: chime at mu.dk (Michael Arnoldus)
Date: Mon, 8 Sep 2008 16:36:28 +0200
Subject: [rabbitmq-discuss] python stomp examples
In-Reply-To: <269388e30809080723t461bd7feqba05d2f51cbe28a7@mail.gmail.com>
References: <2e45e80809080609g4035afa0ldedb6cb74fee48aa@mail.gmail.com>
	<269388e30809080723t461bd7feqba05d2f51cbe28a7@mail.gmail.com>
Message-ID: <C70F5471-9ED4-4DC8-B6E6-A9EE7AC23599@mu.dk>

Ben,
> If you are just interested in the former, you may just want to start
> out with Barry's Python library for AMQP:
> http://barryp.org/software/py-amqplib/

Speaking of which - I can't get the latest version - is there  
something wrong with my setup here or a problem downloading the 0.5  
version?

Michael

-------------- next part --------------
A non-text attachment was scrubbed...
Name: smime.p7s
Type: application/pkcs7-signature
Size: 1912 bytes
Desc: not available
Url : http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20080908/e0ba213d/attachment.bin 

From 0x6e6562 at gmail.com  Mon Sep  8 15:48:20 2008
From: 0x6e6562 at gmail.com (Ben Hood)
Date: Mon, 8 Sep 2008 15:48:20 +0100
Subject: [rabbitmq-discuss] python stomp examples
In-Reply-To: <C70F5471-9ED4-4DC8-B6E6-A9EE7AC23599@mu.dk>
References: <2e45e80809080609g4035afa0ldedb6cb74fee48aa@mail.gmail.com>
	<269388e30809080723t461bd7feqba05d2f51cbe28a7@mail.gmail.com>
	<C70F5471-9ED4-4DC8-B6E6-A9EE7AC23599@mu.dk>
Message-ID: <269388e30809080748y3fbd231o20fa010c1d4387b@mail.gmail.com>

Michael,

On Mon, Sep 8, 2008 at 3:36 PM, Michael Arnoldus <chime at mu.dk> wrote:
> Speaking of which - I can't get the latest version - is there something
> wrong with my setup here or a problem downloading the 0.5 version?

Have you tried checking it from Barry's hg repo -
http://hg.barryp.org/py-amqplib/ ?

Ben



From chime at mu.dk  Mon Sep  8 16:21:16 2008
From: chime at mu.dk (Michael Arnoldus)
Date: Mon, 8 Sep 2008 17:21:16 +0200
Subject: [rabbitmq-discuss] python stomp examples
In-Reply-To: <269388e30809080748y3fbd231o20fa010c1d4387b@mail.gmail.com>
References: <2e45e80809080609g4035afa0ldedb6cb74fee48aa@mail.gmail.com>
	<269388e30809080723t461bd7feqba05d2f51cbe28a7@mail.gmail.com>
	<C70F5471-9ED4-4DC8-B6E6-A9EE7AC23599@mu.dk>
	<269388e30809080748y3fbd231o20fa010c1d4387b@mail.gmail.com>
Message-ID: <B0BF0D43-E9B4-4723-9BEF-2E411BA7AC3A@mu.dk>

Ben,

On Sep 8, 2008, at 16:48 , Ben Hood wrote:

> Michael,
>
> On Mon, Sep 8, 2008 at 3:36 PM, Michael Arnoldus <chime at mu.dk> wrote:
>> Speaking of which - I can't get the latest version - is there  
>> something
>> wrong with my setup here or a problem downloading the 0.5 version?
>
> Have you tried checking it from Barry's hg repo -
> http://hg.barryp.org/py-amqplib/ ?
>
> Ben

Thanks - it worked - and I've learned to use Mercurial at the same  
time :-)

Michael
-------------- next part --------------
A non-text attachment was scrubbed...
Name: smime.p7s
Type: application/pkcs7-signature
Size: 1912 bytes
Desc: not available
Url : http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20080908/95c8a966/attachment.bin 

From joes.mailing.lists at gmail.com  Mon Sep  8 16:26:40 2008
From: joes.mailing.lists at gmail.com (Novak Joe)
Date: Tue, 9 Sep 2008 00:26:40 +0900
Subject: [rabbitmq-discuss] python stomp examples
In-Reply-To: <269388e30809080723t461bd7feqba05d2f51cbe28a7@mail.gmail.com>
References: <2e45e80809080609g4035afa0ldedb6cb74fee48aa@mail.gmail.com>
	<269388e30809080723t461bd7feqba05d2f51cbe28a7@mail.gmail.com>
Message-ID: <2e45e80809080826r297131dt61748d5a82620c92@mail.gmail.com>

Hi,
  Thanks for the quick reply!

> Have you read Tony's article about how to install and run the STOMP
> adapter (which is not bundled with the Rabbit package for Debian)?
> http://www.lshift.net/blog/2008/04/30/stomp-adapter-updated-for-rabbitmq-130

Yes, in the interim I've now read through the article you mentioned
and got the STOMP adapter plugged in.  I've also successfully tested
it using the bundled ruby code.  I had to do it from source though -
the directions for Debian users installing the .deb package did not
quite work, as the Makefile specified the server name as:
RABBIT_SERVER_SOURCE_ROOT=$(RABBIT_SOURCE_ROOT)/rabbitmq-server-1.4.0
but the debian package is:
/usr/lib/erlang/lib/rabbitmq_server-1.4.0/

Running the make file, after correcting this still gave an error about
the src directory not having a run target, so I started over with
everything from source and it worked quite well, but required the
erlang-dev package for debian.
>
> IIRC, this also contains client examples in Ruby and Perl.
I've now got the ruby examples running, but unfortunately I know
nothing about Ruby so it takes a little longer to figure out what is
going on.

> Also, if you would send in the error or ordinary response messages, it
> would help other people diagnose the problem.
Right, sorry about that - the problem was that there was no error -
there was no response of any kind, but this was definitely because I
hadn't installed the STOMP adapter, so that problem is now resolved.

> BTW, is your goal to speak to Rabbit from Python fullstop, or do you
> specifically need to use STOMP?
I specifically need to use STOMP, and I want to integrate this with
Orbited ( www.orbited.org ), and an existing pylons application.

> If you are just interested in the former, you may just want to start
> out with Barry's Python library for AMQP:
> http://barryp.org/software/py-amqplib/
I am also interested in finding out more about this, and actually just
received some sample python-AMQP code from another kind replier in
this list, which I think I neglected to reply-to-all to...

The stomp.py test program I'm using, which comes directly from the
site mentioned in my original post, is still giving the following
error:
ERROR
message: Bad CONNECT
content-length: 36

Missing login or passcode header(s)

despite my most certainly sending the headers.  But I suspect there is
some descrepancy between this and the ruby examples that ship with the
stomp adapter source, so maybe a bit of digging around will be
sufficient for me to solve this!

Cheers,
  Joe
>
> HTH,
>
> Ben
>



From 0x6e6562 at gmail.com  Mon Sep  8 16:54:01 2008
From: 0x6e6562 at gmail.com (Ben Hood)
Date: Mon, 8 Sep 2008 16:54:01 +0100
Subject: [rabbitmq-discuss] python stomp examples
In-Reply-To: <2e45e80809080826r297131dt61748d5a82620c92@mail.gmail.com>
References: <2e45e80809080609g4035afa0ldedb6cb74fee48aa@mail.gmail.com>
	<269388e30809080723t461bd7feqba05d2f51cbe28a7@mail.gmail.com>
	<2e45e80809080826r297131dt61748d5a82620c92@mail.gmail.com>
Message-ID: <269388e30809080854y5562ddccjb1d2603cf32a93c6@mail.gmail.com>

Joe,

On Mon, Sep 8, 2008 at 4:26 PM, Novak Joe <joes.mailing.lists at gmail.com> wrote:

>> BTW, is your goal to speak to Rabbit from Python fullstop, or do you
>> specifically need to use STOMP?
> I specifically need to use STOMP, and I want to integrate this with
> Orbited ( www.orbited.org ), and an existing pylons application.

Sure. BTW, have you read this article:
http://orbited.org/blog/2008/09/integrating-orbited-with-web-app-frameworks/

> The stomp.py test program I'm using, which comes directly from the
> site mentioned in my original post, is still giving the following
> error:
> ERROR
> message: Bad CONNECT
> content-length: 36
>
> Missing login or passcode header(s)
>
> despite my most certainly sending the headers.  But I suspect there is
> some descrepancy between this and the ruby examples that ship with the
> stomp adapter source, so maybe a bit of digging around will be
> sufficient for me to solve this!

Maybe Jason (cc'ed) can help debug this?

Ben



From joes.mailing.lists at gmail.com  Mon Sep  8 16:59:53 2008
From: joes.mailing.lists at gmail.com (Novak Joe)
Date: Tue, 9 Sep 2008 00:59:53 +0900
Subject: [rabbitmq-discuss] python stomp examples
In-Reply-To: <269388e30809080854y5562ddccjb1d2603cf32a93c6@mail.gmail.com>
References: <2e45e80809080609g4035afa0ldedb6cb74fee48aa@mail.gmail.com>
	<269388e30809080723t461bd7feqba05d2f51cbe28a7@mail.gmail.com>
	<2e45e80809080826r297131dt61748d5a82620c92@mail.gmail.com>
	<269388e30809080854y5562ddccjb1d2603cf32a93c6@mail.gmail.com>
Message-ID: <2e45e80809080859g6be5be0aqb09a689c8899ce78@mail.gmail.com>

Hi,

>>> BTW, is your goal to speak to Rabbit from Python fullstop, or do you
>>> specifically need to use STOMP?
>> I specifically need to use STOMP, and I want to integrate this with
>> Orbited ( www.orbited.org ), and an existing pylons application.
>
> Sure. BTW, have you read this article:
> http://orbited.org/blog/2008/09/integrating-orbited-with-web-app-frameworks/
Indeed I have - actually I was talking to one of the orbited
developers on their website (i think he was in the process of writing
that article), and he pointed me at rabbitmq - which is what has lead
me eventually to this list!

>
>> The stomp.py test program I'm using, which comes directly from the
>> site mentioned in my original post, is still giving the following
>> error:
>> ERROR
>> message: Bad CONNECT
>> content-length: 36
>>
>> Missing login or passcode header(s)
>>
>> despite my most certainly sending the headers.  But I suspect there is
>> some descrepancy between this and the ruby examples that ship with the
>> stomp adapter source, so maybe a bit of digging around will be
>> sufficient for me to solve this!
>
> Maybe Jason (cc'ed) can help debug this?
Thanks again!

>
> Ben
>



From joes.mailing.lists at gmail.com  Mon Sep  8 18:04:54 2008
From: joes.mailing.lists at gmail.com (Novak Joe)
Date: Tue, 9 Sep 2008 02:04:54 +0900
Subject: [rabbitmq-discuss] python stomp examples
In-Reply-To: <269388e30809080854y5562ddccjb1d2603cf32a93c6@mail.gmail.com>
References: <2e45e80809080609g4035afa0ldedb6cb74fee48aa@mail.gmail.com>
	<269388e30809080723t461bd7feqba05d2f51cbe28a7@mail.gmail.com>
	<2e45e80809080826r297131dt61748d5a82620c92@mail.gmail.com>
	<269388e30809080854y5562ddccjb1d2603cf32a93c6@mail.gmail.com>
Message-ID: <2e45e80809081004p2277392bt3fd688c9471925d1@mail.gmail.com>

Hi again,
  I gave up on stomp.py and instead decided to give stomper a try:
http://code.google.com/p/stomper/

  this 'just worked' and I could see the messages also propagating to
the bundled ruby listener that ships with the stomp adapter for
rabbitmq.
  I did however notice something that seemed odd.  The example twisted
python stomper client functions as both a sender and a listener, and
sends out periodic messages to a pre-specified destination.  When I
had the ruby listener subscribed to the same channel, 'carl', I
noticed that one message would go to the ruby listener, and the next
would be received by the python listener.
  If both are subscribed to the 'carl' channel, my intuition tells me
that both should be able to hear each and every message.
  Why does this not seem to actually be the case?  (sorry if this is a
really naive question)
  Is there some additional header I need to send in order to broadcast
messages, or is broadcasting a horse of a different color?

   Cheers,
    Joe

2008/9/9 Ben Hood <0x6e6562 at gmail.com>:
> Joe,
>
> On Mon, Sep 8, 2008 at 4:26 PM, Novak Joe <joes.mailing.lists at gmail.com> wrote:
>
>>> BTW, is your goal to speak to Rabbit from Python fullstop, or do you
>>> specifically need to use STOMP?
>> I specifically need to use STOMP, and I want to integrate this with
>> Orbited ( www.orbited.org ), and an existing pylons application.
>
> Sure. BTW, have you read this article:
> http://orbited.org/blog/2008/09/integrating-orbited-with-web-app-frameworks/
>
>> The stomp.py test program I'm using, which comes directly from the
>> site mentioned in my original post, is still giving the following
>> error:
>> ERROR
>> message: Bad CONNECT
>> content-length: 36
>>
>> Missing login or passcode header(s)
>>
>> despite my most certainly sending the headers.  But I suspect there is
>> some descrepancy between this and the ruby examples that ship with the
>> stomp adapter source, so maybe a bit of digging around will be
>> sufficient for me to solve this!
>
> Maybe Jason (cc'ed) can help debug this?
>
> Ben
>



From terry at jon.es  Tue Sep  9 11:53:05 2008
From: terry at jon.es (terrycojones)
Date: Tue, 9 Sep 2008 03:53:05 -0700 (PDT)
Subject: [rabbitmq-discuss] anyone using Twisted?
Message-ID: <19335528.post@talk.nabble.com>


[I tried to send this last week, but hadn't subscribed. So the ref below to
next week is actually this week....]

Hi all

Sorry to join this thread so late, I was on holiday for a couple of weeks.
Paul, thanks for the frank feedback, I loved the Tsk Tsk :-)

Yes, the code is quite alpha. We'd be happy to work on getting it into
better shape. The person who actually wrote it is Esteve Fernandez. He's on
holidays this week, but will surely respond in a few days.

Sorry we wont be making it to PyCon UK this year :-(

Regards,
Terry Jones

-- 
View this message in context: http://www.nabble.com/anyone-using-Twisted--tp19091228p19335528.html
Sent from the RabbitMQ mailing list archive at Nabble.com.




From tonyg at lshift.net  Tue Sep  9 13:37:13 2008
From: tonyg at lshift.net (Tony Garnock-Jones)
Date: Tue, 09 Sep 2008 13:37:13 +0100
Subject: [rabbitmq-discuss] Broadcasting and STOMP (was Re: python stomp
	examples)
In-Reply-To: <2e45e80809081004p2277392bt3fd688c9471925d1@mail.gmail.com>
References: <2e45e80809080609g4035afa0ldedb6cb74fee48aa@mail.gmail.com>	<269388e30809080723t461bd7feqba05d2f51cbe28a7@mail.gmail.com>	<2e45e80809080826r297131dt61748d5a82620c92@mail.gmail.com>	<269388e30809080854y5562ddccjb1d2603cf32a93c6@mail.gmail.com>
	<2e45e80809081004p2277392bt3fd688c9471925d1@mail.gmail.com>
Message-ID: <48C66DF9.8030507@lshift.net>

Hi Joe,

Novak Joe wrote:
>   this 'just worked' and I could see the messages also propagating to
> the bundled ruby listener that ships with the stomp adapter for
> rabbitmq.

Hooray!

>   If both are subscribed to the 'carl' channel, my intuition tells me
> that both should be able to hear each and every message.
>   Why does this not seem to actually be the case?  (sorry if this is a
> really naive question)
>   Is there some additional header I need to send in order to broadcast
> messages, or is broadcasting a horse of a different color?

This is a good question. Here's where STOMP's definition gets weaker,
and where we start to see AMQP's semantics leaking through.

The way AMQP works is that messages are

 - sent by /producers/ to /exchanges/, and from there are
 - forwarded to /queues/ along /bindings/, from which they are
 - distributed round-robin(ish) to /consumers/

As messages pass through an exchange, they are duplicated, and a /copy/
is sent down each activated binding.

In contrast, when messages leave a queue for a consumer, they are not
duplicated. One message, sitting on a queue, is delivered to only one of
the available consumers. Only if that consumer rejects the message
somehow (e.g. by crashing or otherwise disconnecting before it
acknowledges the message) will the message be sent on by the queue to
some other consumer.

With the STOMP adapter, a plain old

  SUBSCRIBE
  destination: myqueue

will create a new consumer. If there are multiple clients, all
SUBSCRIBEing to the same queue, then there will be multiple consumers
all on the same queue, leading to round-robin delivery to those clients.

In order to get broadcast behaviour, you need to use a feature
(originally contributed by Artur, now present in the trunk) which
exposes a little more of AMQP's semantics through STOMP:

  SUBSCRIBE
  id: da9d4779-92b9-4cef-86c0-800bdc977f15
  destination:
  exchange: amq.topic
  routing_key: #

The empty-string used for the "destination" header tells the adapter to
create a private queue for this one subscription, which will last for
the duration of your connection, or until you UNSUBSCRIBE.

The "id" header should be some string unique to the current connection
(!) which names the subscription. I've used a fresh GUID here, but
anything connection-unique is acceptable.

If you omit the "id" header, the current implementation has a wart
meaning you won't be able to issue more than one SUBSCRIBE with an empty
destination string; we could remove that if absolutely required, but in
my view it's all round simplest and best just to require an "id" header.

The "exchange" header tells the adapter to bind the new private queue to
the named exchange. All AMQP brokers come with preconfigured
"amq.direct", "amq.topic" and "amq.fanout" exchanges, with semantics
described by the AMQP specification (section 3.1.3 of
http://jira.amqp.org/confluence/download/attachments/720900/amqp0-8.pdf?version=1).
The "routing_key" header is used as described in ?3.1.3 to select which
messages are copied into the queue by the exchange.

The STOMP gateway doesn't provide a way of creating a new exchange, yet;
you have to use a real AMQP client (one that can issue
"exchange.declare" commands) for that, currently. Suggestions welcome!

To unsubscribe from a private queue,

  UNSUBSCRIBE
  id: da9d4779-92b9-4cef-86c0-800bdc977f15

as usual, supplying the same "id" you supplied to the SUBSCRIBE.

The private queue will be deleted when the UNSUBSCRIBE has completed.

I've just committed
http://hg.rabbitmq.com/rabbitmq-stomp/rev/8972d204473a, which contains
some (ruby!) examples of topic broadcast, private-queue creation, and
unsubscription.

Regards,
  Tony
-- 
 [][][] Tony Garnock-Jones     | Mob: +44 (0)7905 974 211
   [][] LShift Ltd             | Tel: +44 (0)20 7729 7060
 []  [] http://www.lshift.net/ | Email: tonyg at lshift.net



From joes.mailing.lists at gmail.com  Wed Sep 10 10:22:12 2008
From: joes.mailing.lists at gmail.com (Novak Joe)
Date: Wed, 10 Sep 2008 18:22:12 +0900
Subject: [rabbitmq-discuss] Broadcasting and STOMP (was Re: python stomp
	examples)
In-Reply-To: <48C66DF9.8030507@lshift.net>
References: <2e45e80809080609g4035afa0ldedb6cb74fee48aa@mail.gmail.com>
	<269388e30809080723t461bd7feqba05d2f51cbe28a7@mail.gmail.com>
	<2e45e80809080826r297131dt61748d5a82620c92@mail.gmail.com>
	<269388e30809080854y5562ddccjb1d2603cf32a93c6@mail.gmail.com>
	<2e45e80809081004p2277392bt3fd688c9471925d1@mail.gmail.com>
	<48C66DF9.8030507@lshift.net>
Message-ID: <2e45e80809100222x4d2bb469xac6de6cc3065b170@mail.gmail.com>

Hi,

  First I wanted to thank you for this post, it was tremendously
informative for me and pointed me at some other very useful resources.
 I think much of my initial confusion came from a lack of clear
boundaries (in my head) between AMQP and STOMP within rabbitmq.  Also,
lthough this response cleared up a lot, it also prompted some further
questions.
  Again, I've now got a total of roughly 2 days experience with STOMP
and AMQP so I apologize if these questions are a bit on the weak side.

> This is a good question. Here's where STOMP's definition gets weaker,
> and where we start to see AMQP's semantics leaking through.
>
> The way AMQP works is that messages are
>
>  - sent by /producers/ to /exchanges/, and from there are
>  - forwarded to /queues/ along /bindings/, from which they are
>  - distributed round-robin(ish) to /consumers/
>
> As messages pass through an exchange, they are duplicated, and a /copy/
> is sent down each activated binding.
>
> In contrast, when messages leave a queue for a consumer, they are not
> duplicated. One message, sitting on a queue, is delivered to only one of
> the available consumers. Only if that consumer rejects the message
> somehow (e.g. by crashing or otherwise disconnecting before it
> acknowledges the message) will the message be sent on by the queue to
> some other consumer.
Is this round-robin functionality predictable in terms of the order in
which a set of consumers subscribed to a single queue will be
notified?  That is, if I have 5 consumers subscribed to one queue,
(A,B,C,D,E) and my producer sends a message which makes its way to the
queue, how does rabbitmq determine which of those 5 consumers should
receive the message?  If message 234 is sent and A rejects, then B
accepts it, will the next message 235 first be sent to consumer C?  Or
is this just kind of random?

I'm primarily concerned with broadcasting so this isn't a big deal to
me at the moment but I'm curious how things work.

> With the STOMP adapter, a plain old
>
>  SUBSCRIBE
>  destination: myqueue
>
> will create a new consumer. If there are multiple clients, all
> SUBSCRIBEing to the same queue, then there will be multiple consumers
> all on the same queue, leading to round-robin delivery to those clients.
>
> In order to get broadcast behaviour, you need to use a feature
> (originally contributed by Artur, now present in the trunk) which
> exposes a little more of AMQP's semantics through STOMP:
>
>  SUBSCRIBE
>  id: da9d4779-92b9-4cef-86c0-800bdc977f15
>  destination:
>  exchange: amq.topic
>  routing_key: #
>
> The empty-string used for the "destination" header tells the adapter to
> create a private queue for this one subscription, which will last for
> the duration of your connection, or until you UNSUBSCRIBE.
Awesome, this is what I was looking for.

> The "id" header should be some string unique to the current connection
> (!) which names the subscription. I've used a fresh GUID here, but
> anything connection-unique is acceptable.
Would there be any argument against using some version of a GUID-style
browser session cookie here?  This would provide me with a nice
mapping to my web application as well, to help keep things organized.

> The "exchange" header tells the adapter to bind the new private queue to
> the named exchange. All AMQP brokers come with preconfigured
> "amq.direct", "amq.topic" and "amq.fanout" exchanges, with semantics
> described by the AMQP specification (section 3.1.3 of
> http://jira.amqp.org/confluence/download/attachments/720900/amqp0-8.pdf?version=1 ).
Thanks for this link, although maybe I should have looked harder for
the spec myself.  Instead I fruitlessly searched about the rabbitmq
site for 'fanout' and 'topic'.

> The "routing_key" header is used as described in ?3.1.3 to select which
> messages are copied into the queue by the exchange.
Based on the AMQP spec it looks like a topic exchange is best suited
to my needs.  This provides the same basic functionality as the
fanout, but also provides added granularity in terms of determining
who gets what in a hierarchical fashion ( I guess it doesn't
necessarily have to be hierarchical though ).

> The STOMP gateway doesn't provide a way of creating a new exchange, yet;
> you have to use a real AMQP client (one that can issue
> "exchange.declare" commands) for that, currently. Suggestions welcome!
Hmm.  From the AMQP spec it looks like I can create a 'durable'
exchange, which means that there shouldn't be any obstacle to creating
a hybrid producer client, right?  I am working primarily with python,
so I'm thinking I can use stomper+py-amqplib or python-qpid
(http://barryp.org/software/py-amqplib/) then just use amqp module to
add the exchange and do all my message passing with STOMP.

> To unsubscribe from a private queue,
>
>  UNSUBSCRIBE
>  id: da9d4779-92b9-4cef-86c0-800bdc977f15
>
> as usual, supplying the same "id" you supplied to the SUBSCRIBE.
>
> The private queue will be deleted when the UNSUBSCRIBE has completed.
>
> I've just committed
> http://hg.rabbitmq.com/rabbitmq-stomp/rev/8972d204473a, which contains
> some (ruby!) examples of topic broadcast, private-queue creation, and
> unsubscription.
Awesome, thanks for all that!

Cheers,
  Joe





>
> Regards,
>  Tony
> --
>  [][][] Tony Garnock-Jones     | Mob: +44 (0)7905 974 211
>   [][] LShift Ltd             | Tel: +44 (0)20 7729 7060
>  []  [] http://www.lshift.net/ | Email: tonyg at lshift.net
>



From 0x6e6562 at gmail.com  Wed Sep 10 11:22:30 2008
From: 0x6e6562 at gmail.com (Ben Hood)
Date: Wed, 10 Sep 2008 11:22:30 +0100
Subject: [rabbitmq-discuss] Broadcasting and STOMP (was Re: python stomp
	examples)
In-Reply-To: <2e45e80809100222x4d2bb469xac6de6cc3065b170@mail.gmail.com>
References: <2e45e80809080609g4035afa0ldedb6cb74fee48aa@mail.gmail.com>
	<269388e30809080723t461bd7feqba05d2f51cbe28a7@mail.gmail.com>
	<2e45e80809080826r297131dt61748d5a82620c92@mail.gmail.com>
	<269388e30809080854y5562ddccjb1d2603cf32a93c6@mail.gmail.com>
	<2e45e80809081004p2277392bt3fd688c9471925d1@mail.gmail.com>
	<48C66DF9.8030507@lshift.net>
	<2e45e80809100222x4d2bb469xac6de6cc3065b170@mail.gmail.com>
Message-ID: <269388e30809100322i269afb80kdc3064f7071989be@mail.gmail.com>

Joe,

On Wed, Sep 10, 2008 at 10:22 AM, Novak Joe
<joes.mailing.lists at gmail.com> wrote:
>> In contrast, when messages leave a queue for a consumer, they are not
>> duplicated. One message, sitting on a queue, is delivered to only one of
>> the available consumers. Only if that consumer rejects the message
>> somehow (e.g. by crashing or otherwise disconnecting before it
>> acknowledges the message) will the message be sent on by the queue to
>> some other consumer.
> Is this round-robin functionality predictable in terms of the order in
> which a set of consumers subscribed to a single queue will be
> notified?  That is, if I have 5 consumers subscribed to one queue,
> (A,B,C,D,E) and my producer sends a message which makes its way to the
> queue, how does rabbitmq determine which of those 5 consumers should
> receive the message?  If message 234 is sent and A rejects, then B
> accepts it, will the next message 235 first be sent to consumer C?  Or
> is this just kind of random?

Tony described it as being round-robin-ish, meaning that it's
round-robin on average but not every message is guaranteed to be sent
in a strictly round-robin fashion.

> Thanks for this link, although maybe I should have looked harder for
> the spec myself.  Instead I fruitlessly searched about the rabbitmq
> site for 'fanout' and 'topic'.

There are a few questions about direct, fanout and topic exchanges in
the FAQ on the dev wiki:
https://dev.rabbitmq.com/wiki/FrequentlyAskedQuestions

>> The STOMP gateway doesn't provide a way of creating a new exchange, yet;
>> you have to use a real AMQP client (one that can issue
>> "exchange.declare" commands) for that, currently. Suggestions welcome!
> Hmm.  From the AMQP spec it looks like I can create a 'durable'
> exchange, which means that there shouldn't be any obstacle to creating
> a hybrid producer client, right?  I am working primarily with python,
> so I'm thinking I can use stomper+py-amqplib or python-qpid
> (http://barryp.org/software/py-amqplib/) then just use amqp module to
> add the exchange and do all my message passing with STOMP.

Sounds reasonable.

HTH,

Ben



From 0x6e6562 at gmail.com  Wed Sep 10 11:24:47 2008
From: 0x6e6562 at gmail.com (Ben Hood)
Date: Wed, 10 Sep 2008 11:24:47 +0100
Subject: [rabbitmq-discuss] Fwd:  python stomp examples
In-Reply-To: <1A65D9BF-86C6-4405-A907-1EE4DFBCD140@gmail.com>
References: <A7AFF39AC91C174ABA1FB64931A0804277CA32@SPR3V4.office.local>
	<1A65D9BF-86C6-4405-A907-1EE4DFBCD140@gmail.com>
Message-ID: <269388e30809100324g6dd4b9ecj3a4205801374c443@mail.gmail.com>

FYI, this is how Jason replied to me about stompy + Rabbit.

---------- Forwarded message ----------
From: Jason Briggs <jasonrbriggs at gmail.com>
Date: Mon, Sep 8, 2008 at 10:12 PM
Subject: Re: [rabbitmq-discuss] python stomp examples
To: 0x6e6562 at gmail.com


Looks like he's resolved his problem by using something else.  My
stomp code pretty much hasn't been touched in months (I'm not
supporting it any more), so I'm not surprised it doesn't work.  As a
matter of interest, it still works correctly against ActiveMQ (I just
checked), but when I tried against Rabbit I got a similar problem.
Weird... but I've got no time to investigate why.


On 8 Sep 2008, at 16:55, Jason Briggs wrote:

>
>
> -----Original Message-----
> From: Ben Hood [mailto:0x6e6562 at gmail.com]
> Sent: 08 September 2008 16:54
> To: Novak Joe
> Cc: rabbitmq-discuss at lists.rabbitmq.com; Jason Briggs
> Subject: Re: [rabbitmq-discuss] python stomp examples
>
> Joe,
>
> On Mon, Sep 8, 2008 at 4:26 PM, Novak Joe <joes.mailing.lists at gmail.com>
> wrote:
>
>>> BTW, is your goal to speak to Rabbit from Python fullstop, or do you
>>> specifically need to use STOMP?
>>
>> I specifically need to use STOMP, and I want to integrate this with
>> Orbited ( www.orbited.org ), and an existing pylons application.
>
> Sure. BTW, have you read this article:
> http://orbited.org/blog/2008/09/integrating-orbited-with-web-app-framewo
> rks/
>
>> The stomp.py test program I'm using, which comes directly from the
>> site mentioned in my original post, is still giving the following
>> error:
>> ERROR
>> message: Bad CONNECT
>> content-length: 36
>>
>> Missing login or passcode header(s)
>>
>> despite my most certainly sending the headers.  But I suspect there is
>
>> some descrepancy between this and the ruby examples that ship with the
>
>> stomp adapter source, so maybe a bit of digging around will be
>> sufficient for me to solve this!
>
> Maybe Jason (cc'ed) can help debug this?
>
> Ben
>
> *****************************************************
> This email is issued by a VocaLink group company. It is confidential and intended for the exclusive use of the addressee only. You should not disclose its contents to any other person. If you are not the addressee (or responsible for delivery of the message to the addressee), please notify the originator immediately by return message and destroy the original message. The contents of this email will have no contractual effect unless it is otherwise agreed between a specific VocaLink group company and the recipient.
>
> The VocaLink group companies include, among others: VocaLink Limited (Company No 06119048, VAT No. 907 9619 87) which is registered in England and Wales at registered office Drake House, Homestead Road, Rickmansworth, WD3 1FX. United Kingdom, Voca Limited (Company no 1023742, VAT No. 907 9619 87) which is registered in England and Wales at registered office Drake House, Three Rivers Court, Homestead Road, Rickmansworth, Hertfordshire. WD3 1FX. United Kingdom, LINK Interchange Network Limited (Company No 3565766, VAT No. 907 9619 87) which is registered in England and Wales at registered office Arundel House, 1 Liverpool Gardens, Worthing, West Sussex, BN11 1SL and VocaLink Holdings Limited (Company No 06119036, VAT No. 907 9619 87) which is registered in England and Wales at registered office Drake House, Homestead Road, Rickmansworth, WD3 1FX. United Kingdom.
>
> The views and opinions expressed in this email may not reflect those of any member of the VocaLink group. This message and any attachments have been scanned for viruses prior to leaving the VocaLink group network; however, VocaLink does not guarantee the security of this message and will not be responsible for any damages arising as a result of any virus being passed on or arising from any alteration of this message by a third party. The VocaLink group may monitor emails sent to and from the VocaLink group network.
>
> This message has been checked for all email viruses by MessageLabs.
> *************************************************************



From tonyg at lshift.net  Wed Sep 10 12:34:16 2008
From: tonyg at lshift.net (Tony Garnock-Jones)
Date: Wed, 10 Sep 2008 12:34:16 +0100
Subject: [rabbitmq-discuss] Broadcasting and STOMP (was Re: python stomp
 examples)
In-Reply-To: <2e45e80809100222x4d2bb469xac6de6cc3065b170@mail.gmail.com>
References: <2e45e80809080609g4035afa0ldedb6cb74fee48aa@mail.gmail.com>	
	<269388e30809080723t461bd7feqba05d2f51cbe28a7@mail.gmail.com>	
	<2e45e80809080826r297131dt61748d5a82620c92@mail.gmail.com>	
	<269388e30809080854y5562ddccjb1d2603cf32a93c6@mail.gmail.com>	
	<2e45e80809081004p2277392bt3fd688c9471925d1@mail.gmail.com>	
	<48C66DF9.8030507@lshift.net>
	<2e45e80809100222x4d2bb469xac6de6cc3065b170@mail.gmail.com>
Message-ID: <48C7B0B8.4020705@lshift.net>

Hi Joe,

Novak Joe wrote:
> First I wanted to thank you for this post

Glad I could help. I'll use it as feedstock for growing the README and
the wiki page (https://dev.rabbitmq.com/wiki/StompGateway), too.

> Is this round-robin functionality predictable in terms of the order in
> which a set of consumers subscribed to a single queue will be
> notified?

It's not perfect. It will *usually* be a fairish round-robin, cycling
through consumers in a regular cycle. If anything happens, though, such
as the addition or removal of a consumer, or the rejection of an
individual message, or TCP flow-control kicking in, the order of
consumers can be shuffled. Usually the shuffling will be minor, but it
can in general be arbitrary.

>> The "id" header should be some string unique to the current connection
>> (!) which names the subscription. I've used a fresh GUID here, but
>> anything connection-unique is acceptable.
> Would there be any argument against using some version of a GUID-style
> browser session cookie here?  This would provide me with a nice
> mapping to my web application as well, to help keep things organized.

No argument against that. So long as the "id" string there is unique to
the individual STOMP connection (socket), you're good to go.

> Thanks for this link, although maybe I should have looked harder for
> the spec myself.  Instead I fruitlessly searched about the rabbitmq
> site for 'fanout' and 'topic'.

We're working on improving the website and the wiki.

> Based on the AMQP spec it looks like a topic exchange is best suited
> to my needs.  This provides the same basic functionality as the
> fanout, but also provides added granularity in terms of determining
> who gets what in a hierarchical fashion ( I guess it doesn't
> necessarily have to be hierarchical though ).

Yes. Note that fanout is a bit more efficient in the current implementation.

> Hmm.  From the AMQP spec it looks like I can create a 'durable'
> exchange, which means that there shouldn't be any obstacle to creating
> a hybrid producer client, right?  I am working primarily with python,
> so I'm thinking I can use stomper+py-amqplib or python-qpid
> (http://barryp.org/software/py-amqplib/) then just use amqp module to
> add the exchange and do all my message passing with STOMP.

Absolutely. That sounds right to me.

Regards,
  Tony
-- 
 [][][] Tony Garnock-Jones     | Mob: +44 (0)7905 974 211
   [][] LShift Ltd             | Tel: +44 (0)20 7729 7060
 []  [] http://www.lshift.net/ | Email: tonyg at lshift.net



From tonyg at lshift.net  Wed Sep 10 12:37:56 2008
From: tonyg at lshift.net (Tony Garnock-Jones)
Date: Wed, 10 Sep 2008 12:37:56 +0100
Subject: [rabbitmq-discuss] Stomp
In-Reply-To: <EDD8F125-FF98-4482-B78D-455E05004B90@reasonablysmart.com>
References: <EDD8F125-FF98-4482-B78D-455E05004B90@reasonablysmart.com>
Message-ID: <48C7B194.4000102@lshift.net>

Hi James,

James A. Duncan wrote:
> Is there any concise documentation anywhere on how to configure the  
> queue through Stomp? Particularly I'm looking to set up exchanges and  
> topics...

It's taken me a long time, but I'm finally gathering together the
various bits and pieces strewn around the internet and putting them on
https://dev.rabbitmq.com/wiki/StompGateway.

Regards,
  Tony
-- 
 [][][] Tony Garnock-Jones     | Mob: +44 (0)7905 974 211
   [][] LShift Ltd             | Tel: +44 (0)20 7729 7060
 []  [] http://www.lshift.net/ | Email: tonyg at lshift.net



From eran.sandler at gmail.com  Wed Sep 10 13:41:48 2008
From: eran.sandler at gmail.com (Eran Sandler)
Date: Wed, 10 Sep 2008 15:41:48 +0300
Subject: [rabbitmq-discuss] Error code 541
Message-ID: <48C7C08C.90101@gmail.com>

Hi all,

Any idea why I started to get the following error using the .NET client and RabbitMQ running on Windows?

RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=541, text="INTERNAL_ERROR", classId=0, methodId=0, cause=
   at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply()
   at RabbitMQ.Client.Impl.ModelBase.BasicGet(UInt16 ticket, String queue, Boolean noAck)

I've set the heartbeat to 0 and it worked well for a couple of days until today, when it started to yell at this.

My current code handle it by closing the connection and opening a new connection, model and ticket, but I still would rather not get this.

Thanks in advance,
Eran

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20080910/497a04f6/attachment.htm 

From eran.sandler at gmail.com  Wed Sep 10 13:49:21 2008
From: eran.sandler at gmail.com (Eran Sandler)
Date: Wed, 10 Sep 2008 15:49:21 +0300
Subject: [rabbitmq-discuss] Durable queues persister file size
Message-ID: <48C7C251.3050807@gmail.com>

Hi all,


As far as I understand, durable queues data get written into 
rabbit_persister.log file.

When I send an Ack message, the message should be deleted from the 
rabbit_persister.log file, right?


The message doesn't exists but it seems that rabbit_persister keeps on 
growing (it about 170Mb at the moment).


Is there a required delete operation that I need to do?


Thanks in advance,

Eran



-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20080910/37a38b08/attachment.htm 

From matthias at lshift.net  Wed Sep 10 13:49:27 2008
From: matthias at lshift.net (Matthias Radestock)
Date: Wed, 10 Sep 2008 13:49:27 +0100
Subject: [rabbitmq-discuss] Error code 541
In-Reply-To: <48C7C08C.90101@gmail.com>
References: <48C7C08C.90101@gmail.com>
Message-ID: <48C7C257.4070604@lshift.net>

Eran,

Eran Sandler wrote:
> Any idea why I started to get the following error using the .NET client and RabbitMQ running on Windows?
> 
> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=541, text="INTERNAL_ERROR", classId=0, methodId=0, cause=
>    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply()
>    at RabbitMQ.Client.Impl.ModelBase.BasicGet(UInt16 ticket, String queue, Boolean noAck)

Are there any errors in the server logs?


Matthias.



From eran.sandler at gmail.com  Wed Sep 10 14:06:13 2008
From: eran.sandler at gmail.com (Eran Sandler)
Date: Wed, 10 Sep 2008 16:06:13 +0300
Subject: [rabbitmq-discuss] Error code 541
In-Reply-To: <48C7C257.4070604@lshift.net>
References: <48C7C08C.90101@gmail.com> <48C7C257.4070604@lshift.net>
Message-ID: <48C7C645.3080405@gmail.com>

The only thing I get is this:


=ERROR REPORT==== 10-Sep-2008::05:17:39 ===
error on TCP connection <0.337.0> from 10.23.43.15:1193
connection_closed_abruptly

=INFO REPORT==== 10-Sep-2008::05:17:39 ===
closing TCP connection <0.337.0> from 10.23.43.15:1193


I see the connection created, accepted and then this error.


I have a bunch of web server issuing data into the queue, they never get 
an error.

I have a dedicated process that reads info from the queue. It connects 
ones and keeps on reading data (no subscription).


That connection alone is making the problem. Since it gets an error I 
open a new connection and model for it and it works a bit but then dies.


The 541 error has no cause, as you can see.



In addition to that, I have a lot of the following errors:

=ERROR REPORT==== 10-Sep-2008::05:17:39 ===
Lax ticket check mode: ignoring cross-realm access for ticket 0


Though I think they are not related.



Eran



Matthias Radestock wrote:

> Eran,
>
> Eran Sandler wrote:
>> Any idea why I started to get the following error using the .NET 
>> client and RabbitMQ running on Windows?
>>
>> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP 
>> operation was interrupted: AMQP close-reason, initiated by Peer, 
>> code=541, text="INTERNAL_ERROR", classId=0, methodId=0, cause=
>>    at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply()
>>    at RabbitMQ.Client.Impl.ModelBase.BasicGet(UInt16 ticket, String 
>> queue, Boolean noAck)
>
> Are there any errors in the server logs?
>
>
> Matthias.

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20080910/429db153/attachment.htm 

From 0x6e6562 at gmail.com  Wed Sep 10 16:18:58 2008
From: 0x6e6562 at gmail.com (Ben Hood)
Date: Wed, 10 Sep 2008 16:18:58 +0100
Subject: [rabbitmq-discuss] Durable queues persister file size
In-Reply-To: <48C7C251.3050807@gmail.com>
References: <48C7C251.3050807@gmail.com>
Message-ID: <269388e30809100818l14c11658j958c976e5bff4037@mail.gmail.com>

Eran,

On Wed, Sep 10, 2008 at 1:49 PM, Eran Sandler <eran.sandler at gmail.com> wrote:
> As far as I understand, durable queues data get written into
> rabbit_persister.log file.

Sort of.

A durable queue is one whose definition will survive a broker restart.

You can still send a transient message to a durable queue, and if the
broker crashes or is restarted, that message will be lost.

To make sure that your messages are persistent, you need to set the
appropriate flag in the header properties when sending the message.

When you set the delivery mode on a message to be persistent, then the
broker will write it into the rabbit_persister.log file.

> When I send an Ack message, the message should be deleted from the
> rabbit_persister.log file, right?

Not necessarily. The semantics of the ack are such that an
acknowledged message will not get requeued as part of recovery.

This does mean or require that the message payload be removed
synchronously from the disk log. The disk log will be rolled over
periodically.

In general the persister is designed to write messages as fast as
possible in the most efficient fashion that is still reliable. Second
to that it needs to record acks as efficiently as possible.

> The message doesn't exists but it seems that rabbit_persister keeps on
> growing (it about 170Mb at the moment).

If you are worried about this, you can force a snapshot by calling
rabbit_persister:force_snapshot (there is a target for this in the
Makefile as well, I don't it's exposed anywhere else).

HTH,

Ben



From 0x6e6562 at gmail.com  Wed Sep 10 16:21:10 2008
From: 0x6e6562 at gmail.com (Ben Hood)
Date: Wed, 10 Sep 2008 16:21:10 +0100
Subject: [rabbitmq-discuss] Durable queues persister file size
In-Reply-To: <269388e30809100818l14c11658j958c976e5bff4037@mail.gmail.com>
References: <48C7C251.3050807@gmail.com>
	<269388e30809100818l14c11658j958c976e5bff4037@mail.gmail.com>
Message-ID: <269388e30809100821k6062078em65143f2268179e77@mail.gmail.com>

Eran,

On Wed, Sep 10, 2008 at 4:18 PM, Ben Hood <0x6e6562 at gmail.com> wrote:
> If you are worried about this, you can force a snapshot by calling
> rabbit_persister:force_snapshot (there is a target for this in the
> Makefile as well, I don't it's exposed anywhere else).

I forgot to say that I would only bother if you think you have a
problem with disk space. Otherwise I wouldn't worry and just let it
roll over for itself.

Ben



From tonyg at lshift.net  Wed Sep 10 16:28:19 2008
From: tonyg at lshift.net (Tony Garnock-Jones)
Date: Wed, 10 Sep 2008 16:28:19 +0100
Subject: [rabbitmq-discuss] Durable queues persister file size
In-Reply-To: <48C7C251.3050807@gmail.com>
References: <48C7C251.3050807@gmail.com>
Message-ID: <48C7E793.4060908@lshift.net>

Eran Sandler wrote:
> When I send an Ack message, the message should be deleted from the
> rabbit_persister.log file, right?

Yes, but the way it's done is a bit tricky: the log file is append-only,
so what the system does is write a record to it noting the fact of the
arrival of the ack. When the file grows beyond a certain point, the
persister will "garbage-collect" the log and start a new log file, which
will contain only the remaining unacknowledged messages.

> Is there a required delete operation that I need to do?

Not unless you have a very limited amount of space, that is smaller than
the default limits on the persister log file size. In that case, you'll
have to tweak the source code to make the "garbage-collector" run more
often.

Regards,
  Tony
-- 
 [][][] Tony Garnock-Jones     | Mob: +44 (0)7905 974 211
   [][] LShift Ltd             | Tel: +44 (0)20 7729 7060
 []  [] http://www.lshift.net/ | Email: tonyg at lshift.net



From dmitriy.samovskiy at cohesiveft.com  Wed Sep 10 21:18:03 2008
From: dmitriy.samovskiy at cohesiveft.com (Dmitriy Samovskiy)
Date: Wed, 10 Sep 2008 15:18:03 -0500
Subject: [rabbitmq-discuss] Durable queue disappears
Message-ID: <48C82B7B.4080809@cohesiveft.com>

Hi all,

I came across a strange situation, and can't see what I am doing wrong.

If you run the script below (uses py-amqplib) without a basic_consume call, a queue still 
exists in rabbit_amqqueue:stat_all() output after the script exits. However, if you run 
the same script with basic_consume call, a queue will exist in stat_all output while the 
script is running, but will disappear after the script exits.

This is with rabbitmq-server 1.4.0 on debian. During this test, there are no messages 
published to amq.direct with "bar" routing key.


#!/usr/bin/python2.5


import sys
from time import sleep, time
import amqplib.client_0_8 as rabbit

q = "foo%d" % int(time())

conn = rabbit.Connection("127.0.0.1", "guest", "guest")
ch = conn.channel()

ch.queue_declare(queue=q, durable=True)
ch.queue_bind(q, "amq.direct", "bar")

# if we do not start consumer, queue will remain after conn close - good
# if we do start consumer, queue will be gone - why?
#ch.basic_consume(q, callback=str)

print "stat_all will now have %s queue" % q
print "Ctrl+C to quit"

try:
   while True: sleep(100)
except KeyboardInterrupt: pass

ch.close()
conn.close()

print "Now do stat_all - %s is missing if consumer was started" % q






From 0x6e6562 at gmail.com  Wed Sep 10 22:39:59 2008
From: 0x6e6562 at gmail.com (Ben Hood)
Date: Wed, 10 Sep 2008 22:39:59 +0100
Subject: [rabbitmq-discuss] Durable queue disappears
In-Reply-To: <48C82B7B.4080809@cohesiveft.com>
References: <48C82B7B.4080809@cohesiveft.com>
Message-ID: <269388e30809101439i4a325774v667f775841d89dc9@mail.gmail.com>

Hey Dmitriy,

On Wed, Sep 10, 2008 at 9:18 PM, Dmitriy Samovskiy
<dmitriy.samovskiy at cohesiveft.com> wrote:
> If you run the script below (uses py-amqplib) without a basic_consume call, a queue still
> exists in rabbit_amqqueue:stat_all() output after the script exits. However, if you run
> the same script with basic_consume call, a queue will exist in stat_all output while the
> script is running, but will disappear after the script exits.
>
> This is with rabbitmq-server 1.4.0 on debian. During this test, there are no messages
> published to amq.direct with "bar" routing key.

I have just run the script that you posted and I can verify the
behaviour you are talking about.

So I ran an equivalent test using the Rabbit Java client:

public static void main(String[] args) throws Exception {
        Connection con = new ConnectionFactory().newConnection("0.0.0.0", 5672);
        Channel channel = con.createChannel();

        String q = "foo" + System.currentTimeMillis();

        channel.queueDeclare(1, q, true);
        channel.basicConsume(1, q, new QueueingConsumer(channel));

        Thread.sleep(1000);

        channel.close(200, "hasta la vista, baby");
        con.close();
}

I left out the binding for brevity's sake.

When I run this, the queue that you declare is durable and shows up
using stat_all and also when you restart the broker.

So the next step might be to have a deeper look into the code of
py-amqplib to see if there are any clues there.

Maybe Barry can help out with this?

Sorry I can't much further at this stage,

Ben



From 0x6e6562 at gmail.com  Wed Sep 10 23:03:29 2008
From: 0x6e6562 at gmail.com (Ben Hood)
Date: Wed, 10 Sep 2008 23:03:29 +0100
Subject: [rabbitmq-discuss] Durable queue disappears
In-Reply-To: <48C82B7B.4080809@cohesiveft.com>
References: <48C82B7B.4080809@cohesiveft.com>
Message-ID: <269388e30809101503q4ce516f4u896cd37175bcb689@mail.gmail.com>

Dmitriy,

On Wed, Sep 10, 2008 at 9:18 PM, Dmitriy Samovskiy
<dmitriy.samovskiy at cohesiveft.com> wrote:
> Hi all,
>
> I came across a strange situation, and can't see what I am doing wrong.
>

It seems that the auto_delete flag overrides the durable flag, which I
guess is a permissible interpretation of the spec :-(

If you change your code when you declare the queue to the following:

ch.queue_declare(queue=q, auto_delete=False, durable=True)

it will behave as you expect.

Now why is that so?

I can't give you a definitive answer off the cuff, but my initial
thought is the way the spec has been construed at this point.

Refer to the definition of auto-delete:

"If set, the queue is deleted when all consumers have finished using
it. Last consumer can be cancelled
either explicitly or because its channel is closed. If there was no
consumer ever on the queue, it won't be deleted."

So if you give auto-delete precedence over durable, this would explain
this behaviour.

Stay tuned for a more authoritative answer.

Ben



From 0x6e6562 at gmail.com  Wed Sep 10 23:11:46 2008
From: 0x6e6562 at gmail.com (Ben Hood)
Date: Wed, 10 Sep 2008 23:11:46 +0100
Subject: [rabbitmq-discuss] Durable queue disappears
In-Reply-To: <7D1D3CEE146B8D4D9388279CAB0416F62D1DCECC@ushqwmb01.palm1.palmone.com>
References: <48C82B7B.4080809@cohesiveft.com>
	<269388e30809101439i4a325774v667f775841d89dc9@mail.gmail.com>
	<7D1D3CEE146B8D4D9388279CAB0416F62D1DCECC@ushqwmb01.palm1.palmone.com>
Message-ID: <269388e30809101511n173eace0o886d49c0794c97e4@mail.gmail.com>

Sreeni

On Wed, Sep 10, 2008 at 10:55 PM, Sreeni Kankanala
<Sreeni.Kankanala at palm.com> wrote:
> Hi Ben,
>
> I am new to RabbitMQ and trying to use it from y'day.

Cool.

> Installed rabbitMq 1.4.0 on debian java client on windows, everything looks good, ran some basic admin tasks and sample examples provided.
>
> My question is wondering is there a way to see the messages, queues in rabbitMQ throw browser or some other means.
>
> How to use the rabbit_amqqueue:stat_all()?

Normally when you run Rabbit, the name of the Erlang node that it is
running in is called rabbit at YOUR_HOSTNAME.

So to start a remote shell to that node, start a new Erlang shell
using the following command line:

$ erl -sname foo -remsh rabbit at YOUR_HOSTNAME

Then you should see:

Erlang (BEAM) emulator version 5.6.4 [source] [smp:2]
[async-threads:0] [kernel-poll:false]

Eshell V5.6.4  (abort with ^G)
(rabbit at xlr8)1>

(As an aside, if you had run rabbit in the foreground and could access
it's Erlang shell, you would see the following pop up when the 2nd
node connects to it: node foo at xlr8 up).

In the remote shell, type in rabbit_amqqueue:stat_all():

(rabbit at xlr8)1> rabbit_amqqueue:stat_all().
[{ok,{resource,<<"/">>,queue,<<"foo1221083995729">>},0,0}]

And there you go.

BTW, one request - please post to the list and not to me personally :-)

HTH,

Ben



From 0x6e6562 at gmail.com  Wed Sep 10 23:54:40 2008
From: 0x6e6562 at gmail.com (Ben Hood)
Date: Wed, 10 Sep 2008 23:54:40 +0100
Subject: [rabbitmq-discuss] [BUG] Erlang RabbitMQ client requires
	installed server code
In-Reply-To: <269388e30809080019w298a8f79l97429550c38e66d8@mail.gmail.com>
References: <6c2563b20809062356k1f492631m4b62e4a7e72ca9f9@mail.gmail.com>
	<269388e30809071641l205890bcr6e4fc6888af0780d@mail.gmail.com>
	<6c2563b20809071647j64bb910cp340f48bbd9b67a1b@mail.gmail.com>
	<269388e30809071653i11aec850ya78b97a5ffb65e69@mail.gmail.com>
	<6c2563b20809071706ofd4d34bh4f889c77cd26475d@mail.gmail.com>
	<6c2563b20809071713m535c5844g60e66c32075d9dbb@mail.gmail.com>
	<6c2563b20809071740r2ab07d50p5420b506ac058909@mail.gmail.com>
	<6c2563b20809071749u2ed3c633lc1488dafedaf8a6f@mail.gmail.com>
	<6c2563b20809071928r262db585vfd131641dde3a361@mail.gmail.com>
	<269388e30809080019w298a8f79l97429550c38e66d8@mail.gmail.com>
Message-ID: <269388e30809101554p3697ef87q7ce452702333a63@mail.gmail.com>

Edwin,

On Mon, Sep 8, 2008 at 8:19 AM, Ben Hood <0x6e6562 at gmail.com> wrote:
>> I'd be very interested to hear your thoughts on this approach, and whether
>> or not you can get the direct driver test to work.

I've started a branch for this in hg, it's called bug19373.

All that I've done so far is to apply your patch and fix the line that
you commented out that made the direct test fail (you un-exported the
start/2 function, which is required for the direct client).

I do have a few observations that I'll just work into that branch -

1. The string building is probably unecessary - you could just pass
the module name in 1:1
2. I think you took the comment in the unregister/2 function a little
too literally, I don't think it need any driver specific
differentiation. If it did, then the correct thing to do is to
encapsulate this in a callback and let the driver handle it.

Also, this will all be dependent on another bug that I've started to
do the necessary splitting in the server code base.

Just wanted to give you a heads up to let you that we're not
completely slacking off here.

As for time lines, ATM this is about priority 2 behind some major
server refactoring, so I'll let you know as soon as I can.

HTH,

Ben



From Sreeni.Kankanala at palm.com  Thu Sep 11 01:02:11 2008
From: Sreeni.Kankanala at palm.com (Sreeni Kankanala)
Date: Wed, 10 Sep 2008 17:02:11 -0700
Subject: [rabbitmq-discuss] FW:  Durable queue disappears
Message-ID: <7D1D3CEE146B8D4D9388279CAB0416F62D1DCFC3@ushqwmb01.palm1.palmone.com>



-----Original Message-----
From: Sreeni Kankanala
Sent: Wednesday, September 10, 2008 4:58 PM
To: 'rabbitmq-discuss-bounces at lists.rabbitmq.com'
Cc: 'Ben Hood'
Subject: RE: [rabbitmq-discuss] Durable queue disappears

Hi Ben

Thanks you very much for your quick reply and I did the following.


root at LT7400JMX3QG1:~# erl -sname rabbitmq -remsh rabbitmq at LT7400JMX3QG1

(rabbitmq at LT7400JMX3QG1)1> rabbit_amqqueue:stat_all().
** exited: {aborted,{no_exists,[amqqueue,[{'$1',[],['$1']}]]}} **

I am getting that error, please suggest, thank you in advance

Thanks
Sreeni

-----Original Message-----
From: Ben Hood [mailto:0x6e6562 at gmail.com]
Sent: Wednesday, September 10, 2008 3:12 PM
To: Sreeni Kankanala
Cc: RabbitMQ Discuss
Subject: Re: [rabbitmq-discuss] Durable queue disappears

Sreeni

On Wed, Sep 10, 2008 at 10:55 PM, Sreeni Kankanala
<Sreeni.Kankanala at palm.com> wrote:
> Hi Ben,
>
> I am new to RabbitMQ and trying to use it from y'day.

Cool.

> Installed rabbitMq 1.4.0 on debian java client on windows, everything looks good, ran some basic admin tasks and sample examples provided.
>
> My question is wondering is there a way to see the messages, queues in rabbitMQ throw browser or some other means.
>
> How to use the rabbit_amqqueue:stat_all()?

Normally when you run Rabbit, the name of the Erlang node that it is
running in is called rabbit at YOUR_HOSTNAME.

So to start a remote shell to that node, start a new Erlang shell
using the following command line:

$ erl -sname foo -remsh rabbit at YOUR_HOSTNAME

Then you should see:

Erlang (BEAM) emulator version 5.6.4 [source] [smp:2]
[async-threads:0] [kernel-poll:false]

Eshell V5.6.4  (abort with ^G)
(rabbit at xlr8)1>

(As an aside, if you had run rabbit in the foreground and could access
it's Erlang shell, you would see the following pop up when the 2nd
node connects to it: node foo at xlr8 up).

In the remote shell, type in rabbit_amqqueue:stat_all():

(rabbit at xlr8)1> rabbit_amqqueue:stat_all().
[{ok,{resource,<<"/">>,queue,<<"foo1221083995729">>},0,0}]

And there you go.

BTW, one request - please post to the list and not to me personally :-)

HTH,

Ben



From 0x6e6562 at gmail.com  Thu Sep 11 01:50:07 2008
From: 0x6e6562 at gmail.com (Ben Hood)
Date: Thu, 11 Sep 2008 01:50:07 +0100
Subject: [rabbitmq-discuss] Durable queue disappears
In-Reply-To: <7D1D3CEE146B8D4D9388279CAB0416F62D1DCFB6@ushqwmb01.palm1.palmone.com>
References: <48C82B7B.4080809@cohesiveft.com>
	<269388e30809101439i4a325774v667f775841d89dc9@mail.gmail.com>
	<7D1D3CEE146B8D4D9388279CAB0416F62D1DCECC@ushqwmb01.palm1.palmone.com>
	<269388e30809101511n173eace0o886d49c0794c97e4@mail.gmail.com>
	<7D1D3CEE146B8D4D9388279CAB0416F62D1DCFB6@ushqwmb01.palm1.palmone.com>
Message-ID: <269388e30809101750y4bc822dn1a23c3338d11b0fd@mail.gmail.com>

Sreeni,

On Thu, Sep 11, 2008 at 12:57 AM, Sreeni Kankanala
<Sreeni.Kankanala at palm.com> wrote:
> root at LT7400JMX3QG1:~# erl -sname rabbitmq -remsh rabbitmq at LT7400JMX3QG1
>
> (rabbitmq at LT7400JMX3QG1)1> rabbit_amqqueue:stat_all().
> ** exited: {aborted,{no_exists,[amqqueue,[{'$1',[],['$1']}]]}} **

Try

# erl -sname rabbitmq -remsh rabbit at LT7400JMX3QG1

instead of

# erl -sname rabbitmq -remsh rabbitmq at LT7400JMX3QG1

HTH,

Ben



From 0x6e6562 at gmail.com  Thu Sep 11 01:53:11 2008
From: 0x6e6562 at gmail.com (Ben Hood)
Date: Thu, 11 Sep 2008 01:53:11 +0100
Subject: [rabbitmq-discuss] python stomp examples
In-Reply-To: <269388e30809100324g6dd4b9ecj3a4205801374c443@mail.gmail.com>
References: <A7AFF39AC91C174ABA1FB64931A0804277CA32@SPR3V4.office.local>
	<1A65D9BF-86C6-4405-A907-1EE4DFBCD140@gmail.com>
	<269388e30809100324g6dd4b9ecj3a4205801374c443@mail.gmail.com>
Message-ID: <269388e30809101753o6de097a0r14f560789b55b09@mail.gmail.com>

On Wed, Sep 10, 2008 at 11:24 AM, Ben Hood <0x6e6562 at gmail.com> wrote:
> FYI, this is how Jason replied to me about stompy + Rabbit.

Looks like stompy *may* be back in own:
http://www.briggs.net.nz/log/2008/09/11/minor-updates-to-stomppy/



From 0x6e6562 at gmail.com  Thu Sep 11 01:53:39 2008
From: 0x6e6562 at gmail.com (Ben Hood)
Date: Thu, 11 Sep 2008 01:53:39 +0100
Subject: [rabbitmq-discuss] python stomp examples
In-Reply-To: <269388e30809101753o6de097a0r14f560789b55b09@mail.gmail.com>
References: <A7AFF39AC91C174ABA1FB64931A0804277CA32@SPR3V4.office.local>
	<1A65D9BF-86C6-4405-A907-1EE4DFBCD140@gmail.com>
	<269388e30809100324g6dd4b9ecj3a4205801374c443@mail.gmail.com>
	<269388e30809101753o6de097a0r14f560789b55b09@mail.gmail.com>
Message-ID: <269388e30809101753k63410e4ci1e55bf06b6ed52c@mail.gmail.com>

In town, I mean

On Thu, Sep 11, 2008 at 1:53 AM, Ben Hood <0x6e6562 at gmail.com> wrote:
> On Wed, Sep 10, 2008 at 11:24 AM, Ben Hood <0x6e6562 at gmail.com> wrote:
>> FYI, this is how Jason replied to me about stompy + Rabbit.
>
> Looks like stompy *may* be back in own:
> http://www.briggs.net.nz/log/2008/09/11/minor-updates-to-stomppy/
>



From rabbitmq-discuss_efine at usa.net  Thu Sep 11 02:05:33 2008
From: rabbitmq-discuss_efine at usa.net (Edwin Fine)
Date: Wed, 10 Sep 2008 21:05:33 -0400
Subject: [rabbitmq-discuss] [BUG] Erlang RabbitMQ client requires
	installed server code
In-Reply-To: <269388e30809101554p3697ef87q7ce452702333a63@mail.gmail.com>
References: <6c2563b20809062356k1f492631m4b62e4a7e72ca9f9@mail.gmail.com>
	<6c2563b20809071647j64bb910cp340f48bbd9b67a1b@mail.gmail.com>
	<269388e30809071653i11aec850ya78b97a5ffb65e69@mail.gmail.com>
	<6c2563b20809071706ofd4d34bh4f889c77cd26475d@mail.gmail.com>
	<6c2563b20809071713m535c5844g60e66c32075d9dbb@mail.gmail.com>
	<6c2563b20809071740r2ab07d50p5420b506ac058909@mail.gmail.com>
	<6c2563b20809071749u2ed3c633lc1488dafedaf8a6f@mail.gmail.com>
	<6c2563b20809071928r262db585vfd131641dde3a361@mail.gmail.com>
	<269388e30809080019w298a8f79l97429550c38e66d8@mail.gmail.com>
	<269388e30809101554p3697ef87q7ce452702333a63@mail.gmail.com>
Message-ID: <6c2563b20809101805p16aca3f3t3faf54bcfbf198a7@mail.gmail.com>

Ben,

Thanks so much for looking into this and giving it your consideration. I'm
happy that you found it of some value. I was a bit worried that you would
have concerns about the performance of the modified code, given that it's no
longer a direct module call. I read your comments below with interest, and I
am watching and learning. I'll be very curious to see the actual finished
code when it's released. I'm glad the direct driver problem was just a
commented-out line of code - I admit I did do it all in a hurry as a proof
of concept.

I have in the meantime created my own little rabbitmq_common application,
used only by the Erlang client, and it is all working famously and nicely
decoupled from the server. I trust that the changes you are talking about
will come out in the next release of RabbitMQ, so when that happens, I'll
change my code to use the "official" client and whatever the common app is
called.

Regards,
Edwin

On Wed, Sep 10, 2008 at 6:54 PM, Ben Hood <0x6e6562 at gmail.com> wrote:

> Edwin,
>
> On Mon, Sep 8, 2008 at 8:19 AM, Ben Hood <0x6e6562 at gmail.com> wrote:
> >> I'd be very interested to hear your thoughts on this approach, and
> whether
> >> or not you can get the direct driver test to work.
>
> I've started a branch for this in hg, it's called bug19373.
>
> All that I've done so far is to apply your patch and fix the line that
> you commented out that made the direct test fail (you un-exported the
> start/2 function, which is required for the direct client).
>
> I do have a few observations that I'll just work into that branch -
>
> 1. The string building is probably unecessary - you could just pass
> the module name in 1:1
> 2. I think you took the comment in the unregister/2 function a little
> too literally, I don't think it need any driver specific
> differentiation. If it did, then the correct thing to do is to
> encapsulate this in a callback and let the driver handle it.
>
> Also, this will all be dependent on another bug that I've started to
> do the necessary splitting in the server code base.
>
> Just wanted to give you a heads up to let you that we're not
> completely slacking off here.
>
> As for time lines, ATM this is about priority 2 behind some major
> server refactoring, so I'll let you know as soon as I can.
>
> HTH,
>
> Ben
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20080910/9098517f/attachment.htm 

From matthias at lshift.net  Thu Sep 11 05:05:56 2008
From: matthias at lshift.net (Matthias Radestock)
Date: Thu, 11 Sep 2008 05:05:56 +0100
Subject: [rabbitmq-discuss] Durable queue disappears
In-Reply-To: <269388e30809101503q4ce516f4u896cd37175bcb689@mail.gmail.com>
References: <48C82B7B.4080809@cohesiveft.com>
	<269388e30809101503q4ce516f4u896cd37175bcb689@mail.gmail.com>
Message-ID: <48C89924.2030203@lshift.net>

Ben Hood wrote:
> So if you give auto-delete precedence over durable, this would explain
> this behaviour.
> 
> Stay tuned for a more authoritative answer.

It's not so much a case of giving auto-delete precedence over durable 
but of simply implementing what the spec says.

Durable queues can be deleted like any other queue. This can happen 
explictly via queue.delete, or implicitly via auto-deletion which, as 
the name suggests, is just automatic deletion based on some triggering 
criteria.

So, IMHO, the observed behaviour follows directly and unambiguously from 
the spec.


Matthias.



From eran.sandler at gmail.com  Thu Sep 11 07:17:53 2008
From: eran.sandler at gmail.com (Eran Sandler)
Date: Thu, 11 Sep 2008 09:17:53 +0300
Subject: [rabbitmq-discuss] Durable queues persister file size
In-Reply-To: <269388e30809100821k6062078em65143f2268179e77@mail.gmail.com>
References: <48C7C251.3050807@gmail.com>	
	<269388e30809100818l14c11658j958c976e5bff4037@mail.gmail.com>
	<269388e30809100821k6062078em65143f2268179e77@mail.gmail.com>
Message-ID: <48C8B811.8040908@gmail.com>

Thanks for the info.


Eran


Ben Hood wrote:

> Eran,
>
> On Wed, Sep 10, 2008 at 4:18 PM, Ben Hood <0x6e6562 at gmail.com> wrote:
>   
>> If you are worried about this, you can force a snapshot by calling
>> rabbit_persister:force_snapshot (there is a target for this in the
>> Makefile as well, I don't it's exposed anywhere else).
>>     
>
> I forgot to say that I would only bother if you think you have a
> problem with disk space. Otherwise I wouldn't worry and just let it
> roll over for itself.
>
> Ben
>   

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20080911/492e0a1a/attachment.htm 

From eran.sandler at gmail.com  Thu Sep 11 07:20:11 2008
From: eran.sandler at gmail.com (Eran Sandler)
Date: Thu, 11 Sep 2008 09:20:11 +0300
Subject: [rabbitmq-discuss] Starting Persister stage takes a long time
Message-ID: <48C8B89B.3070403@gmail.com>

Hi all,


I've been using erlsrv to run rabbitmq. At some point when I started to 
get the 541 error I previously reported upon I decided to restart the 
service. It seems to get stuck and not respond so I run the command line 
and saw that its stuck on the starting persister stage and uses a lot of 
CPU.


Is it because I simply stopped the service instead of using rabbitmqctl 
stop ? What is the proper way of stopping rabbitmq?


Thanks in advance for the help,

Eran

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20080911/8120f91c/attachment.htm 

From eran.sandler at gmail.com  Thu Sep 11 07:23:57 2008
From: eran.sandler at gmail.com (Eran Sandler)
Date: Thu, 11 Sep 2008 09:23:57 +0300
Subject: [rabbitmq-discuss] RabbitMQ memory management
Message-ID: <48C8B97D.5020004@gmail.com>

Hi all,


After having all of the previous errors, I ran rabbitmq just as a 
console application (not through erlsrv).

At some point the process that was suppose to read from it wasn't 
restarted and the queue eventually kept on growing.


When it reached a certain amount of memory it died because it couldn't 
allocate more memory.


My question is, if no one reads from a persistent queue will rabbitmq 
simply die?


Thanks in advance for the help,

Eran

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20080911/29a05bb0/attachment.htm 

From CLW at ridgecrestfinancial.com  Thu Sep 11 07:43:37 2008
From: CLW at ridgecrestfinancial.com (Lakmali Weeraratne)
Date: Thu, 11 Sep 2008 12:13:37 +0530
Subject: [rabbitmq-discuss] c#.Net client  + BytesMessageBuilder
Message-ID: <73DE98796DEF7648900B97A9EA9222B43DF202@RCAPLDC4.rcapl.com>

Hi,

 

Does RabbitMQ  C#.net client implements
BytesMessageBuilder/BytesMessageReader where I can use WriteDouble ;
WriteChar methods .

 

Regards,

/Lakmali

 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20080911/9f8dfbd1/attachment.htm 

From 0x6e6562 at gmail.com  Thu Sep 11 08:54:51 2008
From: 0x6e6562 at gmail.com (Ben Hood)
Date: Thu, 11 Sep 2008 08:54:51 +0100
Subject: [rabbitmq-discuss] Durable queue disappears
In-Reply-To: <7D1D3CEE146B8D4D9388279CAB0416F62D1DD00F@ushqwmb01.palm1.palmone.com>
References: <48C82B7B.4080809@cohesiveft.com>
	<269388e30809101439i4a325774v667f775841d89dc9@mail.gmail.com>
	<7D1D3CEE146B8D4D9388279CAB0416F62D1DCECC@ushqwmb01.palm1.palmone.com>
	<269388e30809101511n173eace0o886d49c0794c97e4@mail.gmail.com>
	<7D1D3CEE146B8D4D9388279CAB0416F62D1DCFB6@ushqwmb01.palm1.palmone.com>
	<269388e30809101750y4bc822dn1a23c3338d11b0fd@mail.gmail.com>
	<7D1D3CEE146B8D4D9388279CAB0416F62D1DD00F@ushqwmb01.palm1.palmone.com>
Message-ID: <269388e30809110054r7cd5636cw4b5eec5b08e6999c@mail.gmail.com>

Sreeni,

On Thu, Sep 11, 2008 at 1:58 AM, Sreeni Kankanala
<Sreeni.Kankanala at palm.com> wrote:

> When I try the following getting this error:
>
> root at LT7400JMX3QG1:/# erl -sname rabbitmq -remsh rabbit at LT7400JMX3QG1
> Erlang (BEAM) emulator version 5.5.5 [source] [async-threads:0] [kernel-poll:false]
>
> *** ERROR: Shell process terminated! (^G to start new job) ***

This may indicate that the node rabbit at LT7400JMX3QG1 is not actually
running. Please restart Rabbit and verify that Rabbit is actually
starting.

Also, can I please kindly request that you post these questions to the
rabbit list rather than to me directly.

HTH,

Ben



From jasonrbriggs at gmail.com  Thu Sep 11 09:58:19 2008
From: jasonrbriggs at gmail.com (Jason Briggs)
Date: Thu, 11 Sep 2008 09:58:19 +0100
Subject: [rabbitmq-discuss] python stomp examples
Message-ID: <221955B5-D006-442C-8631-DEBCA28A56C7@gmail.com>

Hi All

Rather late to the party, but I thought I'd let you know I've found  
out what the problem was with stomp.py. Two problems actually:

1.  the user/passcode headers weren't being issued with the connect  
(dumb omission on my part)

2.  the stomp protocol is a bit ambiguous about the use of spacing  
between header key and value.  For example:

      header: value
      header:value

Both forms are used in the stomp protocol examples.  My version of the  
client used a space -- it appears RabbitMQ doesn't like it.  I've  
removed the space, and along with the prior fix it appears to work  
properly now (the latest version is on my site).

Just for your info.

Kind regards
Jason



 > Hi again,
 >   I gave up on stomp.py and instead decided to give stomper a try:
 > http://code.google.com/p/stomper/
 >
 >   this 'just worked' and I could see the messages also propagating to
 > the bundled ruby listener that ships with the stomp adapter for
 > rabbitmq.
 >   I did however notice something that seemed odd.  The example  
twisted
 > python stomper client functions as both a sender and a listener, and
 > sends out periodic messages to a pre-specified destination.  When I
 > had the ruby listener subscribed to the same channel, 'carl', I
 > noticed that one message would go to the ruby listener, and the next
 > would be received by the python listener.
 >   If both are subscribed to the 'carl' channel, my intuition tells me
 > that both should be able to hear each and every message.
 >   Why does this not seem to actually be the case?  (sorry if this  
is a
 > really naive question)
 >   Is there some additional header I need to send in order to  
broadcast
 > messages, or is broadcasting a horse of a different color?
 >
 >    Cheers,
 >     Joe
 >
 > 2008/9/9 Ben Hood <0x6e6562 at gmail.com>:
 >> Joe,
 >>
 >> On Mon, Sep 8, 2008 at 4:26 PM, Novak Joe <joes.mailing.lists at  
gmail.com> wrote:
 >>
 >>>> BTW, is your goal to speak to Rabbit from Python fullstop, or do  
you
 >>>> specifically need to use STOMP?
 >>> I specifically need to use STOMP, and I want to integrate this with
 >>> Orbited ( www.orbited.org ), and an existing pylons application.
 >>
 >> Sure. BTW, have you read this article:
 >> http://orbited.org/blog/2008/09/integrating-orbited-with-web-app-frameworks/
 >>
 >>> The stomp.py test program I'm using, which comes directly from the
 >>> site mentioned in my original post, is still giving the following
 >>> error:
 >>> ERROR
 >>> message: Bad CONNECT
 >>> content-length: 36
 >>>
 >>> Missing login or passcode header(s)
 >>>
 >>> despite my most certainly sending the headers.  But I suspect  
there is
 >>> some descrepancy between this and the ruby examples that ship  
with the
 >>> stomp adapter source, so maybe a bit of digging around will be
 >>> sufficient for me to solve this!
 >>
 >> Maybe Jason (cc'ed) can help debug this?
 >>
 >> Ben
 >>

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20080911/fbab92f8/attachment.htm 

From 0x6e6562 at gmail.com  Thu Sep 11 11:47:03 2008
From: 0x6e6562 at gmail.com (Ben Hood)
Date: Thu, 11 Sep 2008 11:47:03 +0100
Subject: [rabbitmq-discuss] Error code 541
In-Reply-To: <48C7C645.3080405@gmail.com>
References: <48C7C08C.90101@gmail.com> <48C7C257.4070604@lshift.net>
	<48C7C645.3080405@gmail.com>
Message-ID: <269388e30809110347o7ba89312y5fec995035cddaab@mail.gmail.com>

Eran,

On Wed, Sep 10, 2008 at 2:06 PM, Eran Sandler <eran.sandler at gmail.com> wrote:
> The only thing I get is this:
>
> =ERROR REPORT==== 10-Sep-2008::05:17:39 ===
> error on TCP connection <0.337.0> from 10.23.43.15:1193
> connection_closed_abruptly
>
> =INFO REPORT==== 10-Sep-2008::05:17:39 ===
> closing TCP connection <0.337.0> from 10.23.43.15:1193
>
> I see the connection created, accepted and then this error.
>
> I have a bunch of web server issuing data into the queue, they never get an
> error.
>
> I have a dedicated process that reads info from the queue. It connects ones
> and keeps on reading data (no subscription).
>
> That connection alone is making the problem. Since it gets an error I open a
> new connection and model for it and it works a bit but then dies.
>
> The 541 error has no cause, as you can see.

This is strange. 541 is a general internal error which would get
logged to the server log under normal circumstances.

Could you send a condensed version of your code that can help us
reproduce this please?

A 541 error will also cause the broker to close both the channel and
the connection to the client.

>
> In addition to that, I have a lot of the following errors:
>
> =ERROR REPORT==== 10-Sep-2008::05:17:39 ===
> Lax ticket check mode: ignoring cross-realm access for ticket 0
>
> Though I think they are not related.

No, this is just a cosmetic bug in 1.4.0 which has been fixed in the
mainline code and will not be there in the next release.

HTH,

Ben



From 0x6e6562 at gmail.com  Thu Sep 11 11:54:23 2008
From: 0x6e6562 at gmail.com (Ben Hood)
Date: Thu, 11 Sep 2008 11:54:23 +0100
Subject: [rabbitmq-discuss] Starting Persister stage takes a long time
In-Reply-To: <48C8B89B.3070403@gmail.com>
References: <48C8B89B.3070403@gmail.com>
Message-ID: <269388e30809110354l30a1d710gb711f105267b610@mail.gmail.com>

Eran,

On Thu, Sep 11, 2008 at 7:20 AM, Eran Sandler <eran.sandler at gmail.com> wrote:
> I've been using erlsrv to run rabbitmq. At some point when I started to get
> the 541 error I previously reported upon I decided to restart the service.
> It seems to get stuck and not respond so I run the command line and saw that
> its stuck on the starting persister stage and uses a lot of CPU.

Bear in mind that whilst erlsrv is known to work for a few people from
the community, this is not something that we have tested nor support
yet.

When you say that it is stuck, for how long does it stick in the
persister stage?

Also, how big is the log file?

Again, if you send some code that reproduces your usage so that we can
run it, stop the broker and restart so that we can reproduce your
problem.


> Is it because I simply stopped the service instead of using rabbitmqctl stop
> ? What is the proper way of stopping rabbitmq?

No, that's a perfectly fine way of stopping the broker.

Ben



From 0x6e6562 at gmail.com  Thu Sep 11 12:14:50 2008
From: 0x6e6562 at gmail.com (Ben Hood)
Date: Thu, 11 Sep 2008 12:14:50 +0100
Subject: [rabbitmq-discuss] RabbitMQ memory management
In-Reply-To: <48C8B97D.5020004@gmail.com>
References: <48C8B97D.5020004@gmail.com>
Message-ID: <269388e30809110414g5551be49of57af97fa4e36861@mail.gmail.com>

Eran,

On Thu, Sep 11, 2008 at 7:23 AM, Eran Sandler <eran.sandler at gmail.com> wrote:
> At some point the process that was suppose to read from it wasn't restarted
> and the queue eventually kept on growing.

Yes, that's the point of a message queuing system :-)

> When it reached a certain amount of memory it died because it couldn't
> allocate more memory.
>
> My question is, if no one reads from a persistent queue will rabbitmq simply
> die?

Yes, if the Rabbit eats too many carrots, it will die.

Currently we have not implemented an administrative limit of queue
depths, so basically a queue will grow until the Erlang process cannot
allocate any more heap (if the queue is never drained), but this is
something that we are thinking about. This falls under the category of
broker management, for which there have been a few threads already.
This is on our radar, but due to limited resources, we cannot say when
we will get around to doing this.

This also ties into message expiry, which would be a solution to this
problem, but alas, we haven't implemented the TTL property yet (due to
lack of resource and an ambiguous spec). Message expiry has been
discussed in other threads as well.

This is also an item on our todo list, but we will need to be
convinced to prioritize this.

So where does that leave you now?

You've got 2 options:

1. Set the immediate flag when publishing a message. If this flag is
set, the message will not be queued, if it cannot be delivered to a
consumer, it will be discarded.

2. Cluster Rabbit, so that if an instance dies, you don't loose
complete availability.

HTH,

Ben



From 0x6e6562 at gmail.com  Thu Sep 11 12:19:10 2008
From: 0x6e6562 at gmail.com (Ben Hood)
Date: Thu, 11 Sep 2008 12:19:10 +0100
Subject: [rabbitmq-discuss] c#.Net client + BytesMessageBuilder
In-Reply-To: <73DE98796DEF7648900B97A9EA9222B43DF202@RCAPLDC4.rcapl.com>
References: <73DE98796DEF7648900B97A9EA9222B43DF202@RCAPLDC4.rcapl.com>
Message-ID: <269388e30809110419p9ba218o779724bccff2f7d2@mail.gmail.com>

Lakmali,

On Thu, Sep 11, 2008 at 7:43 AM, Lakmali Weeraratne
<CLW at ridgecrestfinancial.com> wrote:
> Does RabbitMQ  C#.net client implements
>  BytesMessageBuilder/BytesMessageReader where I can use WriteDouble ;
> WriteChar methods .

Have you read the API documentation on this interface?

http://www.rabbitmq.com/releases/rabbitmq-dotnet-client/v1.4.0/rabbitmq-dotnet-client-1.4.0-net-2.0-htmldoc/type-RabbitMQ.Client.Content.BytesMessageBuilder.html

Also, have you read the general documentation on the C# client?

http://www.rabbitmq.com/dotnet.html

HTH,

Ben



From 0x6e6562 at gmail.com  Thu Sep 11 12:21:38 2008
From: 0x6e6562 at gmail.com (Ben Hood)
Date: Thu, 11 Sep 2008 12:21:38 +0100
Subject: [rabbitmq-discuss] python stomp examples
In-Reply-To: <221955B5-D006-442C-8631-DEBCA28A56C7@gmail.com>
References: <221955B5-D006-442C-8631-DEBCA28A56C7@gmail.com>
Message-ID: <269388e30809110421i9f07a74ndd063260e2450f94@mail.gmail.com>

Jason,

On Thu, Sep 11, 2008 at 9:58 AM, Jason Briggs <jasonrbriggs at gmail.com> wrote:
> Hi All
> Rather late to the party, but I thought I'd let you know I've found out what
> the problem was with stomp.py. Two problems actually:
> 1.  the user/passcode headers weren't being issued with the connect (dumb
> omission on my part)
> 2.  the stomp protocol is a bit ambiguous about the use of spacing between
> header key and value.  For example:
>      header: value
>      header:value
> Both forms are used in the stomp protocol examples.  My version of the
> client used a space -- it appears RabbitMQ doesn't like it.  I've removed
> the space, and along with the prior fix it appears to work properly now (the
> latest version is on my site).

Thanks for looking into this. So now we know that stompy works with
the Rabbit STOMP adapter.

I can't say anything about the correctness of the protocol usage,
maybe Tony or somebody with more STOMP experience can comment on this.

Ben



From 0x6e6562 at gmail.com  Thu Sep 11 12:27:36 2008
From: 0x6e6562 at gmail.com (Ben Hood)
Date: Thu, 11 Sep 2008 12:27:36 +0100
Subject: [rabbitmq-discuss] [BUG] Erlang RabbitMQ client requires
	installed server code
In-Reply-To: <6c2563b20809101805p16aca3f3t3faf54bcfbf198a7@mail.gmail.com>
References: <6c2563b20809062356k1f492631m4b62e4a7e72ca9f9@mail.gmail.com>
	<269388e30809071653i11aec850ya78b97a5ffb65e69@mail.gmail.com>
	<6c2563b20809071706ofd4d34bh4f889c77cd26475d@mail.gmail.com>
	<6c2563b20809071713m535c5844g60e66c32075d9dbb@mail.gmail.com>
	<6c2563b20809071740r2ab07d50p5420b506ac058909@mail.gmail.com>
	<6c2563b20809071749u2ed3c633lc1488dafedaf8a6f@mail.gmail.com>
	<6c2563b20809071928r262db585vfd131641dde3a361@mail.gmail.com>
	<269388e30809080019w298a8f79l97429550c38e66d8@mail.gmail.com>
	<269388e30809101554p3697ef87q7ce452702333a63@mail.gmail.com>
	<6c2563b20809101805p16aca3f3t3faf54bcfbf198a7@mail.gmail.com>
Message-ID: <269388e30809110427s4ebf359dn3903de4215cc4b8@mail.gmail.com>

Edwin,

On Thu, Sep 11, 2008 at 2:05 AM, Edwin Fine
<rabbitmq-discuss_efine at usa.net> wrote:
> Thanks so much for looking into this and giving it your consideration. I'm
> happy that you found it of some value. I was a bit worried that you would
> have concerns about the performance of the modified code, given that it's no
> longer a direct module call.

I shouldn't think this makes a difference, but having said that, it
would be a good idea to test it.

We are always interested in relative performance comparisons from the
community (as long as they are tractable, that is).

(And show Rabbit off in a good light :-)

> I read your comments below with interest, and I
> am watching and learning. I'll be very curious to see the actual finished
> code when it's released. I'm glad the direct driver problem was just a
> commented-out line of code - I admit I did do it all in a hurry as a proof
> of concept.
>
> I have in the meantime created my own little rabbitmq_common application,
> used only by the Erlang client, and it is all working famously and nicely
> decoupled from the server. I trust that the changes you are talking about
> will come out in the next release of RabbitMQ, so when that happens, I'll
> change my code to use the "official" client and whatever the common app is
> called.

OK, so you are good for now?

Ben



From 0x6e6562 at gmail.com  Thu Sep 11 12:38:13 2008
From: 0x6e6562 at gmail.com (Ben Hood)
Date: Thu, 11 Sep 2008 12:38:13 +0100
Subject: [rabbitmq-discuss] RabbitMQ memory management
In-Reply-To: <269388e30809110414g5551be49of57af97fa4e36861@mail.gmail.com>
References: <48C8B97D.5020004@gmail.com>
	<269388e30809110414g5551be49of57af97fa4e36861@mail.gmail.com>
Message-ID: <269388e30809110438o7a2a809dr4ea9742f6e04f59b@mail.gmail.com>

Eran,

On Thu, Sep 11, 2008 at 12:14 PM, Ben Hood <0x6e6562 at gmail.com> wrote:
> You've got 2 options:

You might also have a third option: setting the auto-delete flag. By
setting this flag, when the consumer goes away, the queue will be
auto-deleted and hence the messages will be dropped.

ATM, I assume you have a durable queue that you are sending persistent
messages to. Does this necessarily fit in with the nature of your
application from a design perspective? Do you *really* need persistent
messages for stuff that you are apparently not interested in
consuming?

Off on a tangent, this *may* be a use case for pluggable queues. If
you implemented a queue backend that overflowed to disk, then you
could happily queue up messages until the cows come home. Or at least
until your SAN fills up. Again, this could be a future feature.

HTH,

Ben



From eran.sandler at gmail.com  Thu Sep 11 13:28:51 2008
From: eran.sandler at gmail.com (Eran Sandler)
Date: Thu, 11 Sep 2008 15:28:51 +0300
Subject: [rabbitmq-discuss] Error code 541
In-Reply-To: <269388e30809110347o7ba89312y5fec995035cddaab@mail.gmail.com>
References: <48C7C08C.90101@gmail.com> <48C7C257.4070604@lshift.net>	
	<48C7C645.3080405@gmail.com>
	<269388e30809110347o7ba89312y5fec995035cddaab@mail.gmail.com>
Message-ID: <48C90F03.5060102@gmail.com>

I use a virtual host and created a user that got access to the vhost and 
have "all" access to the queue.



This is some partial code of the publish part:


==================

MapMessageBuilder mapMessageBuilder = new MapMessageBuilder(ch);
mapMessageBuilder.Properties.DeliveryMode = 2;

foreach (KeyValuePair<string, object> pair in data) {
    if (pair.Value != null) {
        if (IsSupportedType(pair.Value.GetType())) {
            mapMessageBuilder.Body.Add(pair.Key, pair.Value);
        } else {
            throw new ApplicationException(string.Format("Parameter 
named \"{0}\" of type \"{1}\" is not supproted as a valid value.", 
pair.Key, pair.Value.GetType().Name));
        }
    }
}

ch.BasicPublish(ticket, string.Empty, string.Empty, 
mapMessageBuilder.GetContentHeader() as IBasicProperties, 
mapMessageBuilder.GetContentBody());


=======================


I use the MapMessageBuilder to add only simple types (strings, int, 
dates, etc - that's what the IsSupportedType checks) and publish it to a 
persistent queue.


This is what the web servers use to publish various actions to the queue.


On the other end I have a dedicated service that among other things 
accesses the queue to get the items published and perform various things 
according to the data sent.


The code there looks something like this:


===================


result = ch.BasicGet(ticket, queueName, false);
if (result != null) {
  try {
        ch.BasicAck(result.DeliveryTag, false);

        .

        . do some work

        .

  catch (Exception ex) {

       If we had a problem figure what it was, promote a counter on the 
job itself and submit it back to the queue (after X tries we will not 
resubmit it back)

  }


==================


The publish code keeps on working correctly while the BasicGet code, on 
the BasicGet call gets the 541 error.


When all of this started to happen I delete the content of the DB 
folder, recreated everything (including redefining the user, vhost and 
durable queue) and restarted the app again.


It worked for a while but kept on happening again. I have a snapshot of 
all the files but the persister is about 180MB (which seems to be its 
average size).


Now it runs for about 12 hours through the command line (not erlsrv) and 
so far it seems ok.

The memory jumps up and down reaching ~500-600mb and sometimes dropping 
back to 100mb and going straight up to 500-600mb. Currently its ~300Mb.



Eran



Ben Hood wrote:

> Eran,
>
> On Wed, Sep 10, 2008 at 2:06 PM, Eran Sandler <eran.sandler at gmail.com> wrote:
>   
>> The only thing I get is this:
>>
>> =ERROR REPORT==== 10-Sep-2008::05:17:39 ===
>> error on TCP connection <0.337.0> from 10.23.43.15:1193
>> connection_closed_abruptly
>>
>> =INFO REPORT==== 10-Sep-2008::05:17:39 ===
>> closing TCP connection <0.337.0> from 10.23.43.15:1193
>>
>> I see the connection created, accepted and then this error.
>>
>> I have a bunch of web server issuing data into the queue, they never get an
>> error.
>>
>> I have a dedicated process that reads info from the queue. It connects ones
>> and keeps on reading data (no subscription).
>>
>> That connection alone is making the problem. Since it gets an error I open a
>> new connection and model for it and it works a bit but then dies.
>>
>> The 541 error has no cause, as you can see.
>>     
>
> This is strange. 541 is a general internal error which would get
> logged to the server log under normal circumstances.
>
> Could you send a condensed version of your code that can help us
> reproduce this please?
>
> A 541 error will also cause the broker to close both the channel and
> the connection to the client.
>
>   
>> In addition to that, I have a lot of the following errors:
>>
>> =ERROR REPORT==== 10-Sep-2008::05:17:39 ===
>> Lax ticket check mode: ignoring cross-realm access for ticket 0
>>
>> Though I think they are not related.
>>     
>
> No, this is just a cosmetic bug in 1.4.0 which has been fixed in the
> mainline code and will not be there in the next release.
>
> HTH,
>
> Ben
>   

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20080911/c329c193/attachment.htm 

From eran.sandler at gmail.com  Thu Sep 11 13:46:21 2008
From: eran.sandler at gmail.com (Eran Sandler)
Date: Thu, 11 Sep 2008 15:46:21 +0300
Subject: [rabbitmq-discuss] RabbitMQ memory management
In-Reply-To: <269388e30809110414g5551be49of57af97fa4e36861@mail.gmail.com>
References: <48C8B97D.5020004@gmail.com>
	<269388e30809110414g5551be49of57af97fa4e36861@mail.gmail.com>
Message-ID: <48C9131D.6050506@gmail.com>

I think. Thanks for the lengthy reply :-)


Since its open source I might be able to invest some time for things 
that will be relevant for us and I would probably benefit from learning 
Erlang more intimately as well as from your experience :-)


Regarding clustering, I have a question about that.

Configuring the clustering on the rabbitmq side is easy, but how it all 
translates on the client side?


Does the .NET client (or any other client for that matter) supports 
flipping between nodes on a cluster automagically or is it something 
that I need define by myself and tell it to connect to a different node 
in a cluster?


Eran


Ben Hood wrote:

> Eran,
>
> On Thu, Sep 11, 2008 at 7:23 AM, Eran Sandler <eran.sandler at gmail.com> wrote:
>   
>> At some point the process that was suppose to read from it wasn't restarted
>> and the queue eventually kept on growing.
>>     
>
> Yes, that's the point of a message queuing system :-)
>
>   
>> When it reached a certain amount of memory it died because it couldn't
>> allocate more memory.
>>
>> My question is, if no one reads from a persistent queue will rabbitmq simply
>> die?
>>     
>
> Yes, if the Rabbit eats too many carrots, it will die.
>
> Currently we have not implemented an administrative limit of queue
> depths, so basically a queue will grow until the Erlang process cannot
> allocate any more heap (if the queue is never drained), but this is
> something that we are thinking about. This falls under the category of
> broker management, for which there have been a few threads already.
> This is on our radar, but due to limited resources, we cannot say when
> we will get around to doing this.
>
> This also ties into message expiry, which would be a solution to this
> problem, but alas, we haven't implemented the TTL property yet (due to
> lack of resource and an ambiguous spec). Message expiry has been
> discussed in other threads as well.
>
> This is also an item on our todo list, but we will need to be
> convinced to prioritize this.
>
> So where does that leave you now?
>
> You've got 2 options:
>
> 1. Set the immediate flag when publishing a message. If this flag is
> set, the message will not be queued, if it cannot be delivered to a
> consumer, it will be discarded.
>
> 2. Cluster Rabbit, so that if an instance dies, you don't loose
> complete availability.
>
> HTH,
>
> Ben
>   

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20080911/8bcd66a3/attachment.htm 

From 0x6e6562 at gmail.com  Thu Sep 11 13:47:31 2008
From: 0x6e6562 at gmail.com (Ben Hood)
Date: Thu, 11 Sep 2008 13:47:31 +0100
Subject: [rabbitmq-discuss] Error code 541
In-Reply-To: <48C90F03.5060102@gmail.com>
References: <48C7C08C.90101@gmail.com> <48C7C257.4070604@lshift.net>
	<48C7C645.3080405@gmail.com>
	<269388e30809110347o7ba89312y5fec995035cddaab@mail.gmail.com>
	<48C90F03.5060102@gmail.com>
Message-ID: <269388e30809110547j70ef638aic43afaec0c52f1b@mail.gmail.com>

Eran,

On Thu, Sep 11, 2008 at 1:28 PM, Eran Sandler <eran.sandler at gmail.com> wrote:
> The publish code keeps on working correctly while the BasicGet code, on the
> BasicGet call gets the 541 error.

Thanks for publishing the code, and no offense intended, but the easy
you make it for us to reproduce your problem, the more likely it that
you will get a response. So could you attach a complete working class
that we can just run. Otherwise we need to piece your code snippets
together ourselves, which costs us time.

For example, it is difficult to tell what queues you have bound to
what exchanges.

Also, when you are publishing a message you seem to passing in an
empty string for the exhange name and the routing key - this seems a
little strange.

> When all of this started to happen I delete the content of the DB folder,
> recreated everything (including redefining the user, vhost and durable
> queue) and restarted the app again.
>
> It worked for a while but kept on happening again. I have a snapshot of all
> the files but the persister is about 180MB (which seems to be its average
> size).
>
> Now it runs for about 12 hours through the command line (not erlsrv) and so
> far it seems ok.
>
> The memory jumps up and down reaching ~500-600mb and sometimes dropping back
> to 100mb and going straight up to 500-600mb. Currently its ~300Mb.

As indicated before, depending on what you are doing, this may create
more or less load of the routing infrastructure in Rabbit.

BTW, do you need to use Basic.Get?

Would Basic.Consume be an option?

Ben



From eran.sandler at gmail.com  Thu Sep 11 13:53:24 2008
From: eran.sandler at gmail.com (Eran Sandler)
Date: Thu, 11 Sep 2008 15:53:24 +0300
Subject: [rabbitmq-discuss] RabbitMQ memory management
In-Reply-To: <269388e30809110438o7a2a809dr4ea9742f6e04f59b@mail.gmail.com>
References: <48C8B97D.5020004@gmail.com>	
	<269388e30809110414g5551be49of57af97fa4e36861@mail.gmail.com>
	<269388e30809110438o7a2a809dr4ea9742f6e04f59b@mail.gmail.com>
Message-ID: <48C914C4.7050004@gmail.com>

The reason we are using a message queue is to be able to send various 
messages to perform actions in an async manner.


I prefer not to lose these messages, hence the durable queue, but I can 
recover from not getting them.


The behavior I would expect, such as flowing back to the disk is to 
flush them to the disk and only keep a small portion in-memory, when 
"the cows come home" (or more exactly, the cowboy comes back and pushes 
the cows to their rightful place) it will start reading from the disk 
chunk by chunk until it reaches a point where all the backlog finished 
and from there it will go back to work as it was before.


Having that combined with a key that says when we should start throwing 
things directly to the disk without keeping them in memory (or without 
keeping them in memory too much) as well as a max queue length (depth, 
depends on where you look at it) would be really great.


Having the ability to write a queue plugin would be really great. There 
is always that 20% that requires a certain behavior that is not off the 
shelf :-)


Eran 


Ben Hood wrote:

> Eran,
>
> On Thu, Sep 11, 2008 at 12:14 PM, Ben Hood <0x6e6562 at gmail.com> wrote:
>   
>> You've got 2 options:
>>     
>
> You might also have a third option: setting the auto-delete flag. By
> setting this flag, when the consumer goes away, the queue will be
> auto-deleted and hence the messages will be dropped.
>
> ATM, I assume you have a durable queue that you are sending persistent
> messages to. Does this necessarily fit in with the nature of your
> application from a design perspective? Do you *really* need persistent
> messages for stuff that you are apparently not interested in
> consuming?
>
> Off on a tangent, this *may* be a use case for pluggable queues. If
> you implemented a queue backend that overflowed to disk, then you
> could happily queue up messages until the cows come home. Or at least
> until your SAN fills up. Again, this could be a future feature.
>
> HTH,
>
> Ben
>   

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20080911/2042abda/attachment.htm 

From 0x6e6562 at gmail.com  Thu Sep 11 13:54:55 2008
From: 0x6e6562 at gmail.com (Ben Hood)
Date: Thu, 11 Sep 2008 13:54:55 +0100
Subject: [rabbitmq-discuss] RabbitMQ memory management
In-Reply-To: <48C9131D.6050506@gmail.com>
References: <48C8B97D.5020004@gmail.com>
	<269388e30809110414g5551be49of57af97fa4e36861@mail.gmail.com>
	<48C9131D.6050506@gmail.com>
Message-ID: <269388e30809110554w16ab42e3v891e4f9619914bec@mail.gmail.com>

Eran,

On Thu, Sep 11, 2008 at 1:46 PM, Eran Sandler <eran.sandler at gmail.com> wrote:
> Regarding clustering, I have a question about that.
>
> Configuring the clustering on the rabbitmq side is easy, but how it all
> translates on the client side?
>
> Does the .NET client (or any other client for that matter) supports flipping
> between nodes on a cluster automagically or is it something that I need
> define by myself and tell it to connect to a different node in a cluster?

ATM, none of the clients are smart to do any of this automagically.
There are mechanisms that you could use, but I think should the
subject of a new discussion thread.

Ben



From 0x6e6562 at gmail.com  Thu Sep 11 13:56:14 2008
From: 0x6e6562 at gmail.com (Ben Hood)
Date: Thu, 11 Sep 2008 13:56:14 +0100
Subject: [rabbitmq-discuss] RabbitMQ memory management
In-Reply-To: <48C9131D.6050506@gmail.com>
References: <48C8B97D.5020004@gmail.com>
	<269388e30809110414g5551be49of57af97fa4e36861@mail.gmail.com>
	<48C9131D.6050506@gmail.com>
Message-ID: <269388e30809110556v3b2663dap53ce2c1a85ac1d7c@mail.gmail.com>

Eran,

On Thu, Sep 11, 2008 at 1:46 PM, Eran Sandler <eran.sandler at gmail.com> wrote:
> Since its open source I might be able to invest some time for things that
> will be relevant for us and I would probably benefit from learning Erlang
> more intimately as well as from your experience :-)

Sure contributions are always welcome. It would be a good idea to
scope things out first though.

Ben



From eran.sandler at gmail.com  Thu Sep 11 13:57:36 2008
From: eran.sandler at gmail.com (Eran Sandler)
Date: Thu, 11 Sep 2008 15:57:36 +0300
Subject: [rabbitmq-discuss] Error code 541
In-Reply-To: <269388e30809110547j70ef638aic43afaec0c52f1b@mail.gmail.com>
References: <48C7C08C.90101@gmail.com> <48C7C257.4070604@lshift.net>	
	<48C7C645.3080405@gmail.com>	
	<269388e30809110347o7ba89312y5fec995035cddaab@mail.gmail.com>	
	<48C90F03.5060102@gmail.com>
	<269388e30809110547j70ef638aic43afaec0c52f1b@mail.gmail.com>
Message-ID: <48C915C0.8060909@gmail.com>

I don't use an exchange. I saw that its possible to use this without an 
exchange (but perhaps I'm screwing myself with regards to clustering, I 
haven't taken a closer look as to how to work well with clustering).


I think BasicConsume should work just fine. I saw that it can handle the 
Ack automatically. The reason I thought using BasicGet was to keep my 
options open as to refuse a message for a point in time where my 
consuming code will run on a couple of machines that might get upgraded 
sequentially. This might lead to scenario in which I have added a new 
message type I want to handle and I don't have the new code on all 
consumers.


Regarding the sample, I will write something quick based on my original 
code and send it so it will make your life (and mine) a lot nicer (and 
quicker) :-)


Eran


Ben Hood wrote:

> Eran,
>
> On Thu, Sep 11, 2008 at 1:28 PM, Eran Sandler <eran.sandler at gmail.com> wrote:
>   
>> The publish code keeps on working correctly while the BasicGet code, on the
>> BasicGet call gets the 541 error.
>>     
>
> Thanks for publishing the code, and no offense intended, but the easy
> you make it for us to reproduce your problem, the more likely it that
> you will get a response. So could you attach a complete working class
> that we can just run. Otherwise we need to piece your code snippets
> together ourselves, which costs us time.
>
> For example, it is difficult to tell what queues you have bound to
> what exchanges.
>
> Also, when you are publishing a message you seem to passing in an
> empty string for the exhange name and the routing key - this seems a
> little strange.
>
>   
>> When all of this started to happen I delete the content of the DB folder,
>> recreated everything (including redefining the user, vhost and durable
>> queue) and restarted the app again.
>>
>> It worked for a while but kept on happening again. I have a snapshot of all
>> the files but the persister is about 180MB (which seems to be its average
>> size).
>>
>> Now it runs for about 12 hours through the command line (not erlsrv) and so
>> far it seems ok.
>>
>> The memory jumps up and down reaching ~500-600mb and sometimes dropping back
>> to 100mb and going straight up to 500-600mb. Currently its ~300Mb.
>>     
>
> As indicated before, depending on what you are doing, this may create
> more or less load of the routing infrastructure in Rabbit.
>
> BTW, do you need to use Basic.Get?
>
> Would Basic.Consume be an option?
>
> Ben
>   

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20080911/84ccdd0a/attachment.htm 

From eran.sandler at gmail.com  Thu Sep 11 13:58:22 2008
From: eran.sandler at gmail.com (Eran Sandler)
Date: Thu, 11 Sep 2008 15:58:22 +0300
Subject: [rabbitmq-discuss] RabbitMQ memory management
In-Reply-To: <269388e30809110556v3b2663dap53ce2c1a85ac1d7c@mail.gmail.com>
References: <48C8B97D.5020004@gmail.com>	
	<269388e30809110414g5551be49of57af97fa4e36861@mail.gmail.com>	
	<48C9131D.6050506@gmail.com>
	<269388e30809110556v3b2663dap53ce2c1a85ac1d7c@mail.gmail.com>
Message-ID: <48C915EE.60803@gmail.com>

Of course. I'm still rather new to rabbitmq and would like to explore 
all of my use cases before I dive into the code.


Eran


Ben Hood wrote:

> Eran,
>
> On Thu, Sep 11, 2008 at 1:46 PM, Eran Sandler <eran.sandler at gmail.com> wrote:
>   
>> Since its open source I might be able to invest some time for things that
>> will be relevant for us and I would probably benefit from learning Erlang
>> more intimately as well as from your experience :-)
>>     
>
> Sure contributions are always welcome. It would be a good idea to
> scope things out first though.
>
> Ben
>   

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20080911/498fd38c/attachment.htm 

From 0x6e6562 at gmail.com  Thu Sep 11 14:02:53 2008
From: 0x6e6562 at gmail.com (Ben Hood)
Date: Thu, 11 Sep 2008 14:02:53 +0100
Subject: [rabbitmq-discuss] RabbitMQ memory management
In-Reply-To: <48C914C4.7050004@gmail.com>
References: <48C8B97D.5020004@gmail.com>
	<269388e30809110414g5551be49of57af97fa4e36861@mail.gmail.com>
	<269388e30809110438o7a2a809dr4ea9742f6e04f59b@mail.gmail.com>
	<48C914C4.7050004@gmail.com>
Message-ID: <269388e30809110602i3e4bd9aah475dd4497609c77a@mail.gmail.com>

Eran,

On Thu, Sep 11, 2008 at 1:53 PM, Eran Sandler <eran.sandler at gmail.com> wrote:
> I prefer not to lose these messages, hence the durable queue, but I can
> recover from not getting them.

OK, then you have a choice :-) You can use Rabbit in resource hungry
way, which is fine or you can manage by exception and recover from
where ever the data came from. The choice is an architecture decision,
so there is no right or wrong way.

> The behavior I would expect, such as flowing back to the disk is to flush
> them to the disk and only keep a small portion in-memory, when "the cows
> come home" (or more exactly, the cowboy comes back and pushes the cows to
> their rightful place) it will start reading from the disk chunk by chunk
> until it reaches a point where all the backlog finished and from there it
> will go back to work as it was before.
>
> Having that combined with a key that says when we should start throwing
> things directly to the disk without keeping them in memory (or without
> keeping them in memory too much) as well as a max queue length (depth,
> depends on where you look at it) would be really great.

Sounds reasonable, so let's hope your disk doesn't fill up :-)

> Having the ability to write a queue plugin would be really great. There is
> always that 20% that requires a certain behavior that is not off the shelf

Sure, and if we had pluggable queues, this kind of requirement could
be tackled without having to hack on the server.

Code and/or design suggestions are welcome :-)

Ben



From 0x6e6562 at gmail.com  Thu Sep 11 14:07:30 2008
From: 0x6e6562 at gmail.com (Ben Hood)
Date: Thu, 11 Sep 2008 14:07:30 +0100
Subject: [rabbitmq-discuss] Error code 541
In-Reply-To: <48C915C0.8060909@gmail.com>
References: <48C7C08C.90101@gmail.com> <48C7C257.4070604@lshift.net>
	<48C7C645.3080405@gmail.com>
	<269388e30809110347o7ba89312y5fec995035cddaab@mail.gmail.com>
	<48C90F03.5060102@gmail.com>
	<269388e30809110547j70ef638aic43afaec0c52f1b@mail.gmail.com>
	<48C915C0.8060909@gmail.com>
Message-ID: <269388e30809110607t6b4907b2l649e9cee1fb514c4@mail.gmail.com>

Eran,

On Thu, Sep 11, 2008 at 1:57 PM, Eran Sandler <eran.sandler at gmail.com> wrote:
> I don't use an exchange. I saw that its possible to use this without an
> exchange (but perhaps I'm screwing myself with regards to clustering, I
> haven't taken a closer look as to how to work well with clustering).

No, that's fine. What you are doing is using what is known as the
default exchange. This means that message is routed to a queue with
the same name as the routing key.

> I think BasicConsume should work just fine. I saw that it can handle the Ack
> automatically. The reason I thought using BasicGet was to keep my options
> open as to refuse a message for a point in time where my consuming code will
> run on a couple of machines that might get upgraded sequentially. This might
> lead to scenario in which I have added a new message type I want to handle
> and I don't have the new code on all consumers.

You can ack manually if you want to. Set the no_ack flag to true and
then make a application specific decision of whether to ack or not in
the onDeliver callback.

> Regarding the sample, I will write something quick based on my original code
> and send it so it will make your life (and mine) a lot nicer (and quicker)

Cool, hopefully one of us will get some time to look at it.

Ben



From eran.sandler at gmail.com  Thu Sep 11 14:32:22 2008
From: eran.sandler at gmail.com (Eran Sandler)
Date: Thu, 11 Sep 2008 16:32:22 +0300
Subject: [rabbitmq-discuss] Error code 541
In-Reply-To: <269388e30809110607t6b4907b2l649e9cee1fb514c4@mail.gmail.com>
References: <48C7C08C.90101@gmail.com> <48C7C257.4070604@lshift.net>	
	<48C7C645.3080405@gmail.com>	
	<269388e30809110347o7ba89312y5fec995035cddaab@mail.gmail.com>	
	<48C90F03.5060102@gmail.com>	
	<269388e30809110547j70ef638aic43afaec0c52f1b@mail.gmail.com>	
	<48C915C0.8060909@gmail.com>
	<269388e30809110607t6b4907b2l649e9cee1fb514c4@mail.gmail.com>
Message-ID: <48C91DE6.9090708@gmail.com>

Here are the tests.


There is the one project for producing stuff that looks like the 
messages I'm sending and a very simple consumer.


This is VERY crude (I did this very quickly) stuff and I might be wrong 
in my programming paradigm that I use with RabbitMQ so please let me 
know of everything I should change.


That's basically what I do.


Be sure to define the username, password and virtual. This sample 
assumes there is a queue named ActionsQueue and it was already created 
(creating it with the CreateQueue sample that comes with the .NET 
library and making it durable will make it exactly how I've defined it).


I don't use the automatic consumer that waits for data because I need 
some flexibility in that area, that's why I have the sleep part.


Hope that will help,

Eran


Ben Hood wrote:

> Eran,
>
> On Thu, Sep 11, 2008 at 1:57 PM, Eran Sandler <eran.sandler at gmail.com> wrote:
>   
>> I don't use an exchange. I saw that its possible to use this without an
>> exchange (but perhaps I'm screwing myself with regards to clustering, I
>> haven't taken a closer look as to how to work well with clustering).
>>     
>
> No, that's fine. What you are doing is using what is known as the
> default exchange. This means that message is routed to a queue with
> the same name as the routing key.
>
>   
>> I think BasicConsume should work just fine. I saw that it can handle the Ack
>> automatically. The reason I thought using BasicGet was to keep my options
>> open as to refuse a message for a point in time where my consuming code will
>> run on a couple of machines that might get upgraded sequentially. This might
>> lead to scenario in which I have added a new message type I want to handle
>> and I don't have the new code on all consumers.
>>     
>
> You can ack manually if you want to. Set the no_ack flag to true and
> then make a application specific decision of whether to ack or not in
> the onDeliver callback.
>
>   
>> Regarding the sample, I will write something quick based on my original code
>> and send it so it will make your life (and mine) a lot nicer (and quicker)
>>     
>
> Cool, hopefully one of us will get some time to look at it.
>
> Ben
>   

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20080911/3f1c788d/attachment.htm 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: eran_rabbitmq_tests.zip
Type: application/zip
Size: 14379 bytes
Desc: not available
Url : http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20080911/3f1c788d/attachment.zip 

From eran.sandler at gmail.com  Thu Sep 11 14:34:21 2008
From: eran.sandler at gmail.com (Eran Sandler)
Date: Thu, 11 Sep 2008 16:34:21 +0300
Subject: [rabbitmq-discuss] RabbitMQ memory management
In-Reply-To: <269388e30809110554w16ab42e3v891e4f9619914bec@mail.gmail.com>
References: <48C8B97D.5020004@gmail.com>	
	<269388e30809110414g5551be49of57af97fa4e36861@mail.gmail.com>	
	<48C9131D.6050506@gmail.com>
	<269388e30809110554w16ab42e3v891e4f9619914bec@mail.gmail.com>
Message-ID: <48C91E5D.6040900@gmail.com>

Just to be sure on the clustering side of things, when I cluster 
RabbitMQ nodes they messages gets replicated to both servers, right?


Eran


Ben Hood wrote:

> Eran,
>
> On Thu, Sep 11, 2008 at 1:46 PM, Eran Sandler <eran.sandler at gmail.com> wrote:
>   
>> Regarding clustering, I have a question about that.
>>
>> Configuring the clustering on the rabbitmq side is easy, but how it all
>> translates on the client side?
>>
>> Does the .NET client (or any other client for that matter) supports flipping
>> between nodes on a cluster automagically or is it something that I need
>> define by myself and tell it to connect to a different node in a cluster?
>>     
>
> ATM, none of the clients are smart to do any of this automagically.
> There are mechanisms that you could use, but I think should the
> subject of a new discussion thread.
>
> Ben
>   

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20080911/b56ebd4a/attachment.htm 

From 0x6e6562 at gmail.com  Thu Sep 11 14:56:05 2008
From: 0x6e6562 at gmail.com (Ben Hood)
Date: Thu, 11 Sep 2008 14:56:05 +0100
Subject: [rabbitmq-discuss] Error code 541
In-Reply-To: <269388e30809110607t6b4907b2l649e9cee1fb514c4@mail.gmail.com>
References: <48C7C08C.90101@gmail.com> <48C7C257.4070604@lshift.net>
	<48C7C645.3080405@gmail.com>
	<269388e30809110347o7ba89312y5fec995035cddaab@mail.gmail.com>
	<48C90F03.5060102@gmail.com>
	<269388e30809110547j70ef638aic43afaec0c52f1b@mail.gmail.com>
	<48C915C0.8060909@gmail.com>
	<269388e30809110607t6b4907b2l649e9cee1fb514c4@mail.gmail.com>
Message-ID: <269388e30809110656n187d64edqeb1885f2a63c87ac@mail.gmail.com>

On Thu, Sep 11, 2008 at 2:07 PM, Ben Hood <0x6e6562 at gmail.com> wrote:
> You can ack manually if you want to. Set the no_ack flag to true and
> then make a application specific decision of whether to ack or not in
> the onDeliver callback.

That should read: set the no_ack to false.



From 0x6e6562 at gmail.com  Thu Sep 11 15:11:31 2008
From: 0x6e6562 at gmail.com (Ben Hood)
Date: Thu, 11 Sep 2008 15:11:31 +0100
Subject: [rabbitmq-discuss] RabbitMQ memory management
In-Reply-To: <48C91E5D.6040900@gmail.com>
References: <48C8B97D.5020004@gmail.com>
	<269388e30809110414g5551be49of57af97fa4e36861@mail.gmail.com>
	<48C9131D.6050506@gmail.com>
	<269388e30809110554w16ab42e3v891e4f9619914bec@mail.gmail.com>
	<48C91E5D.6040900@gmail.com>
Message-ID: <269388e30809110711o43142d50gea218d4938e775f1@mail.gmail.com>

Eran,

On Thu, Sep 11, 2008 at 2:34 PM, Eran Sandler <eran.sandler at gmail.com> wrote:
> Just to be sure on the clustering side of things, when I cluster RabbitMQ
> nodes they messages gets replicated to both servers, right?

Nope.

[This is now in the clustering section of the FAQs:
https://dev.rabbitmq.com/wiki/FrequentlyAskedQuestions#section_8]

Although we *could* do this, we don't, because it's too expensive.
This would mean replicating every message across the the network in a
synchronous fashion. And not too many *really* need it, in the event
of a Rabbit node crashing, they just replay the log for that node.

BBHoss started a discussion about this on IRC (look for the discusion
about HA and DR between BBHoss and hal):
http://dev.rabbitmq.com/irclog/index.php?date=2008-08-27

Having said that, this may be a use case for pluggable queues, for the
avail-o-nados out there :-)

Ben



From esteve at sindominio.net  Thu Sep 11 15:25:32 2008
From: esteve at sindominio.net (Esteve Fernandez)
Date: Thu, 11 Sep 2008 16:25:32 +0200
Subject: [rabbitmq-discuss] anyone using Twisted?
Message-ID: <200809111625.32668.esteve@sindominio.net>

Hi all,

sorry for chimming in so late, I just came back from holidays.

On Thu, Aug 21, 2008 at 7:10 PM, Paul C. Nendick <paul.nendick at ...> wrote:
> Some observations about txamqp:
> * it's very alpha and clearly incomplete

Although I'm not sure if I would label it production-ready, I'd definetely say 
it's beta quality code and fairly complete. What features would you like to 
see? The testsuite already covers extensively both 0.8 and 0.9 specs, so I 
don't know what else can be added. We'll adapt it to Qpid M3, once it's 
released.

> * it's fundamentally misunderstood the way AMQP  routes of messages
> over separate channels. Deferred calls often don't fire since txamqp
> is waiting for the response on the wrong channel. Oops!

Can you provide a testcase for this? I cannot reproduce the bug. Find attached 
an example that creates 5 channels and 5 different consumers, messages are 
sent and received to/from the right channel. The example works with Qpid M2 
and Rabbit 1.4.0, but not with OpenAMQ (as it doesn't implement multiple 
channels).

> * txamqp is multi-threaded. Tsk tsk, this is a no-no for twisted
> protocol handlers

Nope, it's not multi-threaded, please take a look at the code. We use Qpid for 
autogenerating the AMQP classes and methods, but not for reading/writing from 
sockets or for queueing messages (we use DeferredQueues instead).

> * the txamqp unit tests are very good and quite easy to adapt to be
> made asynchronous

Thanks, but all credit goes to the Qpid crew, we simply adapted the testsuite 
to use Deferreds. However, it's already asynchronous, notice that it uses the 
inlineCallbacks idiom, which makes code look as if it was sequential without 
blocking the reactor.

> We've resolved these and other issues. In the end, it will help me
> open source the code to know the level of your interest in it. I'll
> announce any news on this list.

Since txAMQP does not use threads and channels do work, I hope you reconsider 
your opinion about txAMQP. Anyway, what actual issues did you find? The 
Launchpad project page [1] includes a bug section [2] and we would be glad to 
hear about what could be improved. If you want to contribute some code, I'll 
happily add you to the txAMQP team.

Cheers.

1 - https://launchpad.net/txamqp
2 - https://bugs.launchpad.net/txamqp
-------------- next part --------------
A non-text attachment was scrubbed...
Name: txamqp_example.py
Type: application/x-python
Size: 3033 bytes
Desc: not available
Url : http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20080911/08ee5000/attachment.bin 

From dmitriy.samovskiy at cohesiveft.com  Thu Sep 11 16:20:13 2008
From: dmitriy.samovskiy at cohesiveft.com (Dmitriy Samovskiy)
Date: Thu, 11 Sep 2008 10:20:13 -0500
Subject: [rabbitmq-discuss] Durable queue disappears
In-Reply-To: <48C89924.2030203@lshift.net>
References: <48C82B7B.4080809@cohesiveft.com>
	<269388e30809101503q4ce516f4u896cd37175bcb689@mail.gmail.com>
	<48C89924.2030203@lshift.net>
Message-ID: <48C9372D.9060804@cohesiveft.com>



Matthias Radestock wrote:
> 
> Durable queues can be deleted like any other queue. This can happen 
> explictly via queue.delete, or implicitly via auto-deletion which, as 
> the name suggests, is just automatic deletion based on some triggering 
> criteria.
Thanks for the explanation.

Just re-read the spec, like Ben suggested:


<field name="auto delete" type="bit">
     auto-delete queue when unused
<doc>
       If set, the queue is deleted when all consumers have finished
       using it. Last consumer can be cancelled either explicitly or because
       its channel is closed. If there was no consumer ever on the queue, it
       won't be deleted.
</doc>

It was the last sentence of the <doc> that makes the difference: "If there was no consumer 
ever on the queue, it won't be deleted." So technically speaking, this field is not 
"auto-delete queue when unused" but "auto-delete queue when no longer used."

Thanks again!

- Dmitriy



From joes.mailing.lists at gmail.com  Thu Sep 11 16:35:58 2008
From: joes.mailing.lists at gmail.com (Novak Joe)
Date: Fri, 12 Sep 2008 00:35:58 +0900
Subject: [rabbitmq-discuss] Broadcasting and STOMP (was Re: python stomp
	examples)
In-Reply-To: <48C7B0B8.4020705@lshift.net>
References: <2e45e80809080609g4035afa0ldedb6cb74fee48aa@mail.gmail.com>
	<269388e30809080723t461bd7feqba05d2f51cbe28a7@mail.gmail.com>
	<2e45e80809080826r297131dt61748d5a82620c92@mail.gmail.com>
	<269388e30809080854y5562ddccjb1d2603cf32a93c6@mail.gmail.com>
	<2e45e80809081004p2277392bt3fd688c9471925d1@mail.gmail.com>
	<48C66DF9.8030507@lshift.net>
	<2e45e80809100222x4d2bb469xac6de6cc3065b170@mail.gmail.com>
	<48C7B0B8.4020705@lshift.net>
Message-ID: <2e45e80809110835p2b35f957u55701ba55ea9a25a@mail.gmail.com>

Hi again,

  Thanks for all the info the last couple of days.  I think I've now
got my head around the basics, and I've also got my alpha application
working with broadcast, so cheers to that.

> It's not perfect. It will *usually* be a fairish round-robin, cycling
> through consumers in a regular cycle. If anything happens, though, such
> as the addition or removal of a consumer, or the rejection of an
> individual message, or TCP flow-control kicking in, the order of
> consumers can be shuffled. Usually the shuffling will be minor, but it
> can in general be arbitrary.
Good to know.

>> Thanks for this link, although maybe I should have looked harder for
>> the spec myself.  Instead I fruitlessly searched about the rabbitmq
>> site for 'fanout' and 'topic'.
>
> We're working on improving the website and the wiki.
I hadn't meant this comment as a criticism of the website or wiki,
rather I was indicting myself for being lazy and not seeking out the
protocol specification myself from the very beginning.

That said, I think it would also be useful to add to the STOMP wiki
page an additional note on broadcast SEND.  In particular I found that
in order to send a message to a broadcast exchange it needs look
something like:
---------------------------------
SEND
destination:x.mytopic
exchange:amq.topic

my message
\x00
--------------------------------

However my initial newb intuition was that it should look more like:
---------------------------------
SEND
destination:
exchange:amq.topic
routing_key:x.mytopic

my message
\x00
--------------------------------

The ruby examples cleared this up but not before I experienced a bit
of confusion on the subject.

Thanks again!

Cheers,
  Joe








>
>> Hmm.  From the AMQP spec it looks like I can create a 'durable'
>> exchange, which means that there shouldn't be any obstacle to creating
>> a hybrid producer client, right?  I am working primarily with python,
>> so I'm thinking I can use stomper+py-amqplib or python-qpid
>> (http://barryp.org/software/py-amqplib/) then just use amqp module to
>> add the exchange and do all my message passing with STOMP.
>
> Absolutely. That sounds right to me.
>
> Regards,
>  Tony
> --
>  [][][] Tony Garnock-Jones     | Mob: +44 (0)7905 974 211
>   [][] LShift Ltd             | Tel: +44 (0)20 7729 7060
>  []  [] http://www.lshift.net/ | Email: tonyg at lshift.net
>



From matthias at lshift.net  Thu Sep 11 16:39:27 2008
From: matthias at lshift.net (Matthias Radestock)
Date: Thu, 11 Sep 2008 16:39:27 +0100
Subject: [rabbitmq-discuss] Durable queue disappears
In-Reply-To: <48C9372D.9060804@cohesiveft.com>
References: <48C82B7B.4080809@cohesiveft.com>	<269388e30809101503q4ce516f4u896cd37175bcb689@mail.gmail.com>	<48C89924.2030203@lshift.net>
	<48C9372D.9060804@cohesiveft.com>
Message-ID: <48C93BAF.2070509@lshift.net>

Dmitriy,

Dmitriy Samovskiy wrote:

> It was the last sentence of the <doc> that makes the difference: "If 
> there was no consumer ever on the queue, it won't be deleted." So 
> technically speaking, this field is not "auto-delete queue when unused" 
> but "auto-delete queue when no longer used."

The former wouldn't be very useful since it would require the queues to 
be deleted right after their creation :)


Matthias.



From eran.sandler at gmail.com  Thu Sep 11 16:42:23 2008
From: eran.sandler at gmail.com (Eran Sandler)
Date: Thu, 11 Sep 2008 18:42:23 +0300
Subject: [rabbitmq-discuss] Starting Persister stage takes a long time
In-Reply-To: <269388e30809110354l30a1d710gb711f105267b610@mail.gmail.com>
References: <48C8B89B.3070403@gmail.com>
	<269388e30809110354l30a1d710gb711f105267b610@mail.gmail.com>
Message-ID: <48C93C5F.4060807@gmail.com>

Ben Hood wrote:

> Bear in mind that whilst erlsrv is known to work for a few people from
> the community, this is not something that we have tested nor support
> yet.
>
> When you say that it is stuck, for how long does it stick in the
> persister stage?
>   
I've waiting for 10min and it still didn't come back up (the same for 
when I ran it the server manually).
The thing is, that it might be related to erlsrv and its monitoring 
since erlsrv monitors the node and knows how to kill it and bring it back.

Other than that monitoring feature and as far as I could figure out, 
erlsrv is mostly good for monitoring the real node's process and I don't 
think that it should have (or do have) anything specific with this issue.

> Also, how big is the log file?
>
> Again, if you send some code that reproduces your usage so that we can
> run it, stop the broker and restart so that we can reproduce your
> problem.
>   
The code is sent is the code (see it in the "Error Code 541" thread) is 
what I used here as well.
The file size was ~180Mb.

Eran

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20080911/25972f0e/attachment.htm 

From eran.sandler at gmail.com  Thu Sep 11 16:46:31 2008
From: eran.sandler at gmail.com (Eran Sandler)
Date: Thu, 11 Sep 2008 18:46:31 +0300
Subject: [rabbitmq-discuss] Newer version of the erlang emulator and RabbitMQ
Message-ID: <48C93D57.9040708@gmail.com>

Hi all,


The version of erlang distributed for Windows is rather old (about 1+ 
years old).


Is there any specific benefit for moving to a new emulator?

Is there a test suite of some kind that I can use if I want to test 
RabbitMQ on Windows on a newer erlang emulator?


I suspect that my previous problems that caused the 541 error might be 
related to a combination of Windows, old erlang and RabbitMQ and I want 
to rule that out.


Currently, my RabbitMQ runs OK for the past 20+ hours but its running in 
a command line shell which is not really favorable when you have a 
remote Windows machine that needs a login to run this executable and 
someone might accidentally log off the session...


I hope that the new erlsrv might fix the issue that I'm currently 
experiencing.


Eran


-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20080911/5fc6acbe/attachment.htm 

From 0x6e6562 at gmail.com  Thu Sep 11 17:07:05 2008
From: 0x6e6562 at gmail.com (Ben Hood)
Date: Thu, 11 Sep 2008 17:07:05 +0100
Subject: [rabbitmq-discuss] Newer version of the erlang emulator and
	RabbitMQ
In-Reply-To: <48C93D57.9040708@gmail.com>
References: <48C93D57.9040708@gmail.com>
Message-ID: <269388e30809110907k7e091c3bpc93487ce0b970a5e@mail.gmail.com>

Eran,

On Thu, Sep 11, 2008 at 4:46 PM, Eran Sandler <eran.sandler at gmail.com> wrote:
> The version of erlang distributed for Windows is rather old (about 1+ years
> old).
>
> Is there any specific benefit for moving to a new emulator?

We have had various reports of performance increases when moving from
11RB-x to 12RB-y, so it would be definitely worth your while to
upgrade to the latest version of Erlang (I am using 12RB-4).

As much as anything, the OTP team has put in lots of fixes and
performance increases in the last year, so it is good idea to keep up
to date with this.

> Is there a test suite of some kind that I can use if I want to test RabbitMQ
> on Windows on a newer erlang emulator?

If you want to test the performance, you can look at the performance
tests in the Java client (MulticastMain, ProducerMain, ConsumerMain).

> I suspect that my previous problems that caused the 541 error might be
> related to a combination of Windows, old erlang and RabbitMQ and I want to
> rule that out.

I shouldn't think so, but it would be very interesting to know if this
were really the case.

> I hope that the new erlsrv might fix the issue that I'm currently
> experiencing.

Without having any experience of this, I can't comment.

Ben



From peter.kieltyka at gmail.com  Thu Sep 11 17:16:19 2008
From: peter.kieltyka at gmail.com (Peter Kieltyka)
Date: Thu, 11 Sep 2008 12:16:19 -0400
Subject: [rabbitmq-discuss] Newer version of the erlang emulator and
	RabbitMQ
In-Reply-To: <269388e30809110907k7e091c3bpc93487ce0b970a5e@mail.gmail.com>
References: <48C93D57.9040708@gmail.com>
	<269388e30809110907k7e091c3bpc93487ce0b970a5e@mail.gmail.com>
Message-ID: <36593E6E-A867-4538-A02A-27BC7C0EFD2B@gmail.com>

Ben,

When trying to use Erlang R12B-4 this morning with the newest RabbitMQ  
I ran into the error:

=ERROR REPORT==== 11-Sep-2008::09:49:31 ===
Error in process <0.4413.0> on node 'rabbit at ziggy' with exit value:  
{function_clause,[{io_lib_fread,fread,["{ ~f ~f ~f }",[],0,[]]}, 
{cpu_sup,get_uint32_measurement,2},{cpu_sup,measurement_server_loop,1}]}

Have you tried using R12B-4 yourself?

Regards,

Peter

On 11-Sep-08, at 12:07 PM, Ben Hood wrote:

> Eran,
>
> On Thu, Sep 11, 2008 at 4:46 PM, Eran Sandler  
> <eran.sandler at gmail.com> wrote:
>> The version of erlang distributed for Windows is rather old (about  
>> 1+ years
>> old).
>>
>> Is there any specific benefit for moving to a new emulator?
>
> We have had various reports of performance increases when moving from
> 11RB-x to 12RB-y, so it would be definitely worth your while to
> upgrade to the latest version of Erlang (I am using 12RB-4).
>
> As much as anything, the OTP team has put in lots of fixes and
> performance increases in the last year, so it is good idea to keep up
> to date with this.
>
>> Is there a test suite of some kind that I can use if I want to test  
>> RabbitMQ
>> on Windows on a newer erlang emulator?
>
> If you want to test the performance, you can look at the performance
> tests in the Java client (MulticastMain, ProducerMain, ConsumerMain).
>
>> I suspect that my previous problems that caused the 541 error might  
>> be
>> related to a combination of Windows, old erlang and RabbitMQ and I  
>> want to
>> rule that out.
>
> I shouldn't think so, but it would be very interesting to know if this
> were really the case.
>
>> I hope that the new erlsrv might fix the issue that I'm currently
>> experiencing.
>
> Without having any experience of this, I can't comment.
>
> Ben
>
> _______________________________________________
> rabbitmq-discuss mailing list
> rabbitmq-discuss at lists.rabbitmq.com
> http://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss




From 0x6e6562 at gmail.com  Thu Sep 11 17:29:21 2008
From: 0x6e6562 at gmail.com (Ben Hood)
Date: Thu, 11 Sep 2008 17:29:21 +0100
Subject: [rabbitmq-discuss] Newer version of the erlang emulator and
	RabbitMQ
In-Reply-To: <36593E6E-A867-4538-A02A-27BC7C0EFD2B@gmail.com>
References: <48C93D57.9040708@gmail.com>
	<269388e30809110907k7e091c3bpc93487ce0b970a5e@mail.gmail.com>
	<36593E6E-A867-4538-A02A-27BC7C0EFD2B@gmail.com>
Message-ID: <269388e30809110929i409c5cb8p8ec826b7ad0468fa@mail.gmail.com>

Peter,

On Thu, Sep 11, 2008 at 5:16 PM, Peter Kieltyka
<peter.kieltyka at gmail.com> wrote:
> Ben,
>
> When trying to use Erlang R12B-4 this morning with the newest RabbitMQ
> I ran into the error:
>
> =ERROR REPORT==== 11-Sep-2008::09:49:31 ===
> Error in process <0.4413.0> on node 'rabbit at ziggy' with exit value:
> {function_clause,[{io_lib_fread,fread,["{ ~f ~f ~f }",[],0,[]]},
> {cpu_sup,get_uint32_measurement,2},{cpu_sup,measurement_server_loop,1}]}

This looks like a bug I commented on a while back:
http://erlang.org/pipermail/erlang-questions/2008-May/034889.html

> Have you tried using R12B-4 yourself?

Of course. (After all, it has been out for ages :-)

Ben



From peter.kieltyka at gmail.com  Thu Sep 11 17:34:55 2008
From: peter.kieltyka at gmail.com (Peter Kieltyka)
Date: Thu, 11 Sep 2008 12:34:55 -0400
Subject: [rabbitmq-discuss] Newer version of the erlang emulator and
	RabbitMQ
In-Reply-To: <269388e30809110929i409c5cb8p8ec826b7ad0468fa@mail.gmail.com>
References: <48C93D57.9040708@gmail.com>
	<269388e30809110907k7e091c3bpc93487ce0b970a5e@mail.gmail.com>
	<36593E6E-A867-4538-A02A-27BC7C0EFD2B@gmail.com>
	<269388e30809110929i409c5cb8p8ec826b7ad0468fa@mail.gmail.com>
Message-ID: <5D10DF73-5427-4D54-860A-C6DF650FCFFB@gmail.com>

Ben,

Gotcha. So presently its in the form of a patch but going to be  
included into the next release of Erlang?

The Erlang website shows that Erlang/OTP R12B-4 was released on  
September 3rd, 2008. But that patch is dated for May 19th. Am I  
missing something here?

Regards,

Peter

On 11-Sep-08, at 12:29 PM, Ben Hood wrote:

> Peter,
>
> On Thu, Sep 11, 2008 at 5:16 PM, Peter Kieltyka
> <peter.kieltyka at gmail.com> wrote:
>> Ben,
>>
>> When trying to use Erlang R12B-4 this morning with the newest  
>> RabbitMQ
>> I ran into the error:
>>
>> =ERROR REPORT==== 11-Sep-2008::09:49:31 ===
>> Error in process <0.4413.0> on node 'rabbit at ziggy' with exit value:
>> {function_clause,[{io_lib_fread,fread,["{ ~f ~f ~f }",[],0,[]]},
>> {cpu_sup,get_uint32_measurement,2},{cpu_sup,measurement_server_loop, 
>> 1}]}
>
> This looks like a bug I commented on a while back:
> http://erlang.org/pipermail/erlang-questions/2008-May/034889.html
>
>> Have you tried using R12B-4 yourself?
>
> Of course. (After all, it has been out for ages :-)
>
> Ben




From 0x6e6562 at gmail.com  Thu Sep 11 17:56:58 2008
From: 0x6e6562 at gmail.com (Ben Hood)
Date: Thu, 11 Sep 2008 17:56:58 +0100
Subject: [rabbitmq-discuss] Newer version of the erlang emulator and
	RabbitMQ
In-Reply-To: <5D10DF73-5427-4D54-860A-C6DF650FCFFB@gmail.com>
References: <48C93D57.9040708@gmail.com>
	<269388e30809110907k7e091c3bpc93487ce0b970a5e@mail.gmail.com>
	<36593E6E-A867-4538-A02A-27BC7C0EFD2B@gmail.com>
	<269388e30809110929i409c5cb8p8ec826b7ad0468fa@mail.gmail.com>
	<5D10DF73-5427-4D54-860A-C6DF650FCFFB@gmail.com>
Message-ID: <269388e30809110956o50e6ca4bo60881ceb583b53dc@mail.gmail.com>

Peter,

On Thu, Sep 11, 2008 at 5:34 PM, Peter Kieltyka
<peter.kieltyka at gmail.com> wrote:
> Gotcha. So presently its in the form of a patch but going to be
> included into the next release of Erlang?

God only knows, I'm not on the OTP team, but this is what Bj?rn-Egil
posted to me a while back:

---snip---

It seems to be an error in cpu_sup for darwin and locales, it should
probably use LC_ALL=C uptime instead of LANG=C uptime.

This should resolve it (not fully tested though). diff follows:

------------------------------------------------------------

diff -Naur otp_src_R12B-2/lib/os_mon/src/cpu_sup.erl
otp_src_R12B-2_cpu_sup_fix/lib/os_mon/src/cpu_sup.erl
--- otp_src_R12B-2/lib/os_mon/src/cpu_sup.erl   2008-05-09
15:08:52.228457000 +0200
+++ otp_src_R12B-2_cpu_sup_fix/lib/os_mon/src/cpu_sup.erl
2008-05-09 15:08:43.138456000 +0200
@@ -264,7 +264,7 @@
    end;
 get_uint32_measurement(Request, #internal{os_type = {unix, darwin}}) ->
    %% Get the load average using uptime, overriding Locale setting.
-    D = os:cmd("LANG=C uptime") -- "\n",
+    D = os:cmd("LANG=C LC_ALL=C uptime") -- "\n",
    %% Here is a sample uptime string from Mac OS 10.3.8 (C Locale):
    %%    "11:17  up 12 days, 20:39, 2 users, load averages: 1.07 0.95 0.66"
    %% The safest way to extract the load averages seems to be grab everything


------------------------------------------------------------

I agree, it is sad that output like this is modified by locale
settings which makes it a little difficult to parse. A more robust way
should be implemented then parsing human readables. No such
implementation is on the horizon nor seriously contemplated at the
moment.

---snip---

> The Erlang website shows that Erlang/OTP R12B-4 was released on
> September 3rd, 2008. But that patch is dated for May 19th. Am I
> missing something here?

I don't really know. The only reason why I even asked was because we
use that call in Rabbit and a user reported an issue with OSX and a
German locale, so I began an enquiry. It didn't seem that the issue
had too high a priority with the OTP team, and neither with me,
because the person that reported the bug disappeared and hence I
didn't much point in wasting energy on it (especially seeing as it
works fine for me on OSX).

As for R12B-4, I'm using it, and it seems fine.

Ben



From rabbitmq-discuss_efine at usa.net  Thu Sep 11 20:22:14 2008
From: rabbitmq-discuss_efine at usa.net (Edwin Fine)
Date: Thu, 11 Sep 2008 15:22:14 -0400
Subject: [rabbitmq-discuss] [BUG] Erlang RabbitMQ client requires
	installed server code
In-Reply-To: <269388e30809110427s4ebf359dn3903de4215cc4b8@mail.gmail.com>
References: <6c2563b20809062356k1f492631m4b62e4a7e72ca9f9@mail.gmail.com>
	<6c2563b20809071706ofd4d34bh4f889c77cd26475d@mail.gmail.com>
	<6c2563b20809071713m535c5844g60e66c32075d9dbb@mail.gmail.com>
	<6c2563b20809071740r2ab07d50p5420b506ac058909@mail.gmail.com>
	<6c2563b20809071749u2ed3c633lc1488dafedaf8a6f@mail.gmail.com>
	<6c2563b20809071928r262db585vfd131641dde3a361@mail.gmail.com>
	<269388e30809080019w298a8f79l97429550c38e66d8@mail.gmail.com>
	<269388e30809101554p3697ef87q7ce452702333a63@mail.gmail.com>
	<6c2563b20809101805p16aca3f3t3faf54bcfbf198a7@mail.gmail.com>
	<269388e30809110427s4ebf359dn3903de4215cc4b8@mail.gmail.com>
Message-ID: <6c2563b20809111222u137efa6bq846dbbd19df40a88@mail.gmail.com>

Yep, I'm good for now, thanks.

On Thu, Sep 11, 2008 at 7:27 AM, Ben Hood <0x6e6562 at gmail.com> wrote:

> Edwin,
>
> On Thu, Sep 11, 2008 at 2:05 AM, Edwin Fine
> <rabbitmq-discuss_efine at usa.net> wrote:
> > Thanks so much for looking into this and giving it your consideration.
> I'm
> > happy that you found it of some value. I was a bit worried that you would
> > have concerns about the performance of the modified code, given that it's
> no
> > longer a direct module call.
>
> I shouldn't think this makes a difference, but having said that, it
> would be a good idea to test it.
>
> We are always interested in relative performance comparisons from the
> community (as long as they are tractable, that is).
>
> (And show Rabbit off in a good light :-)
>
> > I read your comments below with interest, and I
> > am watching and learning. I'll be very curious to see the actual finished
> > code when it's released. I'm glad the direct driver problem was just a
> > commented-out line of code - I admit I did do it all in a hurry as a
> proof
> > of concept.
> >
> > I have in the meantime created my own little rabbitmq_common application,
> > used only by the Erlang client, and it is all working famously and nicely
> > decoupled from the server. I trust that the changes you are talking about
> > will come out in the next release of RabbitMQ, so when that happens, I'll
> > change my code to use the "official" client and whatever the common app
> is
> > called.
>
> OK, so you are good for now?
>
> Ben
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20080911/91fc3684/attachment.htm 

From rabbitmq-discuss_efine at usa.net  Thu Sep 11 23:48:35 2008
From: rabbitmq-discuss_efine at usa.net (Edwin Fine)
Date: Thu, 11 Sep 2008 18:48:35 -0400
Subject: [rabbitmq-discuss] RabbitMQ memory management
In-Reply-To: <6c2563b20809111546s20197294ude38ba9fbbfa95b1@mail.gmail.com>
References: <48C8B97D.5020004@gmail.com>
	<269388e30809110414g5551be49of57af97fa4e36861@mail.gmail.com>
	<48C9131D.6050506@gmail.com>
	<269388e30809110554w16ab42e3v891e4f9619914bec@mail.gmail.com>
	<48C91E5D.6040900@gmail.com>
	<269388e30809110711o43142d50gea218d4938e775f1@mail.gmail.com>
	<6c2563b20809111546s20197294ude38ba9fbbfa95b1@mail.gmail.com>
Message-ID: <6c2563b20809111548k50cf326dgf30bec7d0fbefb5f@mail.gmail.com>

Ben,

I don't know if I am reading this discussion correctly, but I am using
RabbitMQ specifically in a store-and-forward context. It should be able to
store persistent messages until the disk fills up even if no consumer is
draining the queue. If it is going to die because memory fills up before
forwarding gets done, that's a show-stopper for me. I don't mean to beat you
over the head by comparing RabbitMQ to WebSphere MQ, but it doesn't fall
over in this scenario unless the disk fills up (or the max queue depth is
reached), and even then, it just refuses to take more messages. IMHO, this
is how any messaging and queuing system that supports persistent messages
should work.

Please tell me I am misunderstanding.

Regards,
Edwin


On Thu, Sep 11, 2008 at 10:11 AM, Ben Hood <0x6e6562 at gmail.com> wrote:

> Eran,
>
> On Thu, Sep 11, 2008 at 2:34 PM, Eran Sandler <eran.sandler at gmail.com>
> wrote:
> > Just to be sure on the clustering side of things, when I cluster RabbitMQ
> > nodes they messages gets replicated to both servers, right?
>
> Nope.
>
> [This is now in the clustering section of the FAQs:
> https://dev.rabbitmq.com/wiki/FrequentlyAskedQuestions#section_8]
>
> Although we *could* do this, we don't, because it's too expensive.
> This would mean replicating every message across the the network in a
> synchronous fashion. And not too many *really* need it, in the event
> of a Rabbit node crashing, they just replay the log for that node.
>
> BBHoss started a discussion about this on IRC (look for the discusion
> about HA and DR between BBHoss and hal):
> http://dev.rabbitmq.com/irclog/index.php?date=2008-08-27
>
> Having said that, this may be a use case for pluggable queues, for the
> avail-o-nados out there :-)
>
> Ben
>
> _______________________________________________
> rabbitmq-discuss mailing list
> rabbitmq-discuss at lists.rabbitmq.com
> http://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20080911/ada4b33f/attachment.htm 

From 0x6e6562 at gmail.com  Fri Sep 12 00:59:27 2008
From: 0x6e6562 at gmail.com (Ben Hood)
Date: Fri, 12 Sep 2008 00:59:27 +0100
Subject: [rabbitmq-discuss] RabbitMQ memory management
In-Reply-To: <6c2563b20809111546s20197294ude38ba9fbbfa95b1@mail.gmail.com>
References: <48C8B97D.5020004@gmail.com>
	<269388e30809110414g5551be49of57af97fa4e36861@mail.gmail.com>
	<48C9131D.6050506@gmail.com>
	<269388e30809110554w16ab42e3v891e4f9619914bec@mail.gmail.com>
	<48C91E5D.6040900@gmail.com>
	<269388e30809110711o43142d50gea218d4938e775f1@mail.gmail.com>
	<6c2563b20809111546s20197294ude38ba9fbbfa95b1@mail.gmail.com>
Message-ID: <269388e30809111659q6058f6f1xbcc50ebb43941ab@mail.gmail.com>

Edwin,

On Thu, Sep 11, 2008 at 11:46 PM, Edwin Fine <emofine at gmail.com> wrote:
> I don't know if I am reading this discussion correctly, but I am using
> RabbitMQ specifically in a store-and-forward context. It should be able to
> store persistent messages until the disk fills up even if no consumer is
> draining the queue. If it is going to die because memory fills up before
> forwarding gets done, that's a show-stopper for me. I don't mean to beat you
> over the head by comparing RabbitMQ to WebSphere MQ, but it doesn't fall
> over in this scenario unless the disk fills up (or the max queue depth is
> reached), and even then, it just refuses to take more messages. IMHO, this
> is how any messaging and queuing system that supports persistent messages
> should work.
>
> Please tell me I am misunderstanding.

No, you've understood it correctly. If you send enough non-persistent
messages, eventually the queues will fill up, the broker will crash
and you will lose all of the messages that you sent to that node. ATM
Rabbit does not actively refuse to accept a message based on any
system resource usage. The most it will do is to not acknowledge the
receipt of a message that it cannot accept the responsibility of
requeueing should a crash occur.

It is perfectly legitimate to compare Rabbit to MQ Series - maybe you
can elaborate on the conditions and constraints under which MQ Series
implements the behaviour you expect. Are you talking about
non-transactional transient messages, transactional transient
messages, non-transactional persistent messages or transactional
persistent messages?

Furthermore, I would recommend due diligence to anybody evaluating
Rabbit - or any piece of software for that matter - make sure you test
the real hard requirements your application has.

Remember, we're not trying to sell you something, so if Rabbit doesn't
meet your needs, ask us, and we will give you an honest opinion of the
limitations of the system, even if it means you using something else.

Then you have the option of leaving it for something else, or
improving it to suit your requirements.

HTH,

Ben



From 0x6e6562 at gmail.com  Fri Sep 12 01:04:08 2008
From: 0x6e6562 at gmail.com (Ben Hood)
Date: Fri, 12 Sep 2008 01:04:08 +0100
Subject: [rabbitmq-discuss] RabbitMQ memory management
In-Reply-To: <269388e30809111659q6058f6f1xbcc50ebb43941ab@mail.gmail.com>
References: <48C8B97D.5020004@gmail.com>
	<269388e30809110414g5551be49of57af97fa4e36861@mail.gmail.com>
	<48C9131D.6050506@gmail.com>
	<269388e30809110554w16ab42e3v891e4f9619914bec@mail.gmail.com>
	<48C91E5D.6040900@gmail.com>
	<269388e30809110711o43142d50gea218d4938e775f1@mail.gmail.com>
	<6c2563b20809111546s20197294ude38ba9fbbfa95b1@mail.gmail.com>
	<269388e30809111659q6058f6f1xbcc50ebb43941ab@mail.gmail.com>
Message-ID: <269388e30809111704n55655140h2180f2044a406888@mail.gmail.com>

Edwin,

On Fri, Sep 12, 2008 at 12:59 AM, Ben Hood <0x6e6562 at gmail.com> wrote:
> system resource usage. The most it will do is to not acknowledge the
> receipt of a message that it cannot accept the responsibility of
> requeueing should a crash occur.

Sorry about the atrocious English in that last sentence.

I meant to say: The most Rabbit will do is to not acknowledge the
receipt of a message for which it cannot accept the responsibility of
requeueing in the event of a system crash.

HTH,

Ben



From jonatan at heysan.com  Fri Sep 12 02:04:56 2008
From: jonatan at heysan.com (Jonatan Kallus)
Date: Thu, 11 Sep 2008 18:04:56 -0700
Subject: [rabbitmq-discuss] Stomp frame not terminated with null character
Message-ID: <4cc167ca0809111804s121af456s8b2fa1207e34509c@mail.gmail.com>

I am trying to use the php5 stomp client with rabbitmq and the stomp
gateway (using rabbitmq server 1.4.0 and revision from Wed Jul 16
11:10:07 2008 of the stomp gateway).

Problem is that the frames sent back from rabbitmq does not seem to be
terminated with a null character. The 'CONNECTED' frame ends with an
empty line and the 'MESSAGE' frame just ends.

When I simply let each read time out, the rest of the set up seems to
be working.

As far as I understand, the protocol states that all frames should end
with a null character, (even when the header contains the length of
the message).

Is this an issue with my configuration or me losing the null character
in some way between the server and the client?

As a side note, the examples in the stomp protocol definition shows a
space between <key>: and <value>, whereas the stomp gateway
interpreted 'login: guest' as a log in try with the username ' guest',
thus failing.



From rabbitmq-discuss_efine at usa.net  Fri Sep 12 02:31:07 2008
From: rabbitmq-discuss_efine at usa.net (Edwin Fine)
Date: Thu, 11 Sep 2008 21:31:07 -0400
Subject: [rabbitmq-discuss] RabbitMQ memory management
In-Reply-To: <269388e30809111704n55655140h2180f2044a406888@mail.gmail.com>
References: <48C8B97D.5020004@gmail.com>
	<269388e30809110414g5551be49of57af97fa4e36861@mail.gmail.com>
	<48C9131D.6050506@gmail.com>
	<269388e30809110554w16ab42e3v891e4f9619914bec@mail.gmail.com>
	<48C91E5D.6040900@gmail.com>
	<269388e30809110711o43142d50gea218d4938e775f1@mail.gmail.com>
	<6c2563b20809111546s20197294ude38ba9fbbfa95b1@mail.gmail.com>
	<269388e30809111659q6058f6f1xbcc50ebb43941ab@mail.gmail.com>
	<269388e30809111704n55655140h2180f2044a406888@mail.gmail.com>
Message-ID: <6c2563b20809111831s2fa2d4cag3e1e624fd8c2d48c@mail.gmail.com>

Ben,

I think you misunderstood my message. I was saying RabbitMQ should be able
to store a non-memory-limited number of *persistent* messages in the absence
of a consumer draining the queue. So to be exact, these would be
*non-transactional
persistent messages*. You replied to me about *non-persistent* messages,
which I know are memory-limited. I am confused, because I was at one time
(when I was doing my due diligence) convinced that RabbitMQ had no practical
limit (other than any set by Mnesia and hard disk space) for storing
non-transactional persistent messages. I am simply concerned that perhaps I
was mistaken and was asking you to elaborate.

I hope that clears up what I am asking.

I understand that nobody is forcing me to use the product. I am just trying
to establish if I was originally mistaken so that I can take the necessary
steps.

Regards,
Edwin

On Thu, Sep 11, 2008 at 8:04 PM, Ben Hood <0x6e6562 at gmail.com> wrote:

> Edwin,
>
> On Fri, Sep 12, 2008 at 12:59 AM, Ben Hood <0x6e6562 at gmail.com> wrote:
> > system resource usage. The most it will do is to not acknowledge the
> > receipt of a message that it cannot accept the responsibility of
> > requeueing should a crash occur.
>
> Sorry about the atrocious English in that last sentence.
>
> I meant to say: The most Rabbit will do is to not acknowledge the
> receipt of a message for which it cannot accept the responsibility of
> requeueing in the event of a system crash.
>
> HTH,
>
> Ben
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20080911/1c38ae2c/attachment.htm 

From bp at barryp.org  Fri Sep 12 06:47:48 2008
From: bp at barryp.org (Barry Pederson)
Date: Fri, 12 Sep 2008 00:47:48 -0500
Subject: [rabbitmq-discuss] python stomp examples
In-Reply-To: <C70F5471-9ED4-4DC8-B6E6-A9EE7AC23599@mu.dk>
References: <2e45e80809080609g4035afa0ldedb6cb74fee48aa@mail.gmail.com>	<269388e30809080723t461bd7feqba05d2f51cbe28a7@mail.gmail.com>
	<C70F5471-9ED4-4DC8-B6E6-A9EE7AC23599@mu.dk>
Message-ID: <48CA0284.7090400@barryp.org>

Michael Arnoldus wrote:
> Ben,
>> If you are just interested in the former, you may just want to start
>> out with Barry's Python library for AMQP:
>> http://barryp.org/software/py-amqplib/
> 
> Speaking of which - I can't get the latest version - is there something 
> wrong with my setup here or a problem downloading the 0.5 version?

Sorry about that, I recently updated my Django installation and there 
were some backward incompatibilities that broke the download links.  It 
should be fixed now.

It's also available on the cheeseshop, so if you have easy_install, you 
can also just run

    easy_install amqplib

from your command prompt.

	Barry



From tonyg at lshift.net  Fri Sep 12 12:47:26 2008
From: tonyg at lshift.net (Tony Garnock-Jones)
Date: Fri, 12 Sep 2008 12:47:26 +0100
Subject: [rabbitmq-discuss] .NET heartbeating
Message-ID: <48CA56CE.5030001@lshift.net>

Hi all,

There's a problem with .NET heartbeating. Heartbeating in other clients,
and in the server, is fine (so far as we know!).

We have disabled heartbeating in the default branch of our .NET client's
mercurial repository, for now, while we address the problem.

For those using released versions, if you're having trouble with
heartbeats, disable them by setting
ConnectionParameters.RequestedHeartbeat to zero (0) on your
ConnectionFactory before calling CreateConnection.

Hopefully, it'll be easy to find and fix the problem.

Regards,
  Tony
-- 
 [][][] Tony Garnock-Jones     | Mob: +44 (0)7905 974 211
   [][] LShift Ltd             | Tel: +44 (0)20 7729 7060
 []  [] http://www.lshift.net/ | Email: tonyg at lshift.net



From tonyg at lshift.net  Fri Sep 12 12:51:27 2008
From: tonyg at lshift.net (Tony Garnock-Jones)
Date: Fri, 12 Sep 2008 12:51:27 +0100
Subject: [rabbitmq-discuss] Example of DefaultBasicConsumer use
Message-ID: <48CA57BF.7010405@lshift.net>

Hi all,

I've just committed
http://hg.rabbitmq.com/rabbitmq-dotnet-client/file/tip/src/examples/LowlevelLogTail.cs,
which is an example of consuming from a queue using the very low-level
DefaultBasicConsumer, rather than using the higher-level
QueueingBasicConsumer or Subscription objects.

This can be useful for those wanting to avoid running background threads
of their own simply to get asynchronous deliveries from queues. Be
warned, however, by the comments in the API docs for
DefaultBasicConsumer [1] and by the details in section 2.9 of the user
guide [2]!

Regards,
  Tony

[1]
http://www.rabbitmq.com/releases/rabbitmq-dotnet-client/v1.4.0/rabbitmq-dotnet-client-1.4.0-net-2.0-htmldoc/type-RabbitMQ.Client.DefaultBasicConsumer.html
[2]
http://www.rabbitmq.com/releases/rabbitmq-dotnet-client/v1.4.0/rabbitmq-dotnet-client-1.4.0-user-guide.pdf

-- 
 [][][] Tony Garnock-Jones     | Mob: +44 (0)7905 974 211
   [][] LShift Ltd             | Tel: +44 (0)20 7729 7060
 []  [] http://www.lshift.net/ | Email: tonyg at lshift.net



From 0x6e6562 at gmail.com  Fri Sep 12 17:27:40 2008
From: 0x6e6562 at gmail.com (Ben Hood)
Date: Fri, 12 Sep 2008 17:27:40 +0100
Subject: [rabbitmq-discuss] RabbitMQ memory management
In-Reply-To: <6c2563b20809111831s2fa2d4cag3e1e624fd8c2d48c@mail.gmail.com>
References: <48C8B97D.5020004@gmail.com>
	<269388e30809110414g5551be49of57af97fa4e36861@mail.gmail.com>
	<48C9131D.6050506@gmail.com>
	<269388e30809110554w16ab42e3v891e4f9619914bec@mail.gmail.com>
	<48C91E5D.6040900@gmail.com>
	<269388e30809110711o43142d50gea218d4938e775f1@mail.gmail.com>
	<6c2563b20809111546s20197294ude38ba9fbbfa95b1@mail.gmail.com>
	<269388e30809111659q6058f6f1xbcc50ebb43941ab@mail.gmail.com>
	<269388e30809111704n55655140h2180f2044a406888@mail.gmail.com>
	<6c2563b20809111831s2fa2d4cag3e1e624fd8c2d48c@mail.gmail.com>
Message-ID: <269388e30809120927g2c1fb57fi5e900becb77d9cd0@mail.gmail.com>

Edwin,

On Fri, Sep 12, 2008 at 2:31 AM, Edwin Fine
<rabbitmq-discuss_efine at usa.net> wrote:
> I think you misunderstood my message. I was saying RabbitMQ should be able
> to store a non-memory-limited number of persistent messages in the absence
> of a consumer draining the queue. So to be exact, these would be
> non-transactional persistent messages. You replied to me about
> non-persistent messages, which I know are memory-limited. I am confused,
> because I was at one time (when I was doing my due diligence) convinced that
> RabbitMQ had no practical limit (other than any set by Mnesia and hard disk
> space) for storing non-transactional persistent messages. I am simply
> concerned that perhaps I was mistaken and was asking you to elaborate.

Thanks for the clarification.

The status quo is that irrespective of whether we are talking about
persistent or non-persistent messages, messages are queued up in
memory until they are drained. The difference between persistent and
non-persistent is that with persistent messages a replica of each
message is written to disk. This disk copy will only be used in a
recovery situation for messages that have not been acknowledged.

Obviously the limit to which you carry on queuing messages without
draining them depends on the physical resources available to the
Erlang VM and how virtual memory is utilized, which in turn depends on
your OS and production setup.

So to draw a line in the sand, you could go through and calibrate your
setup wrt to the point at which it cannot allocate any more memory. By
doing so, you've worked out approximately what your absolute bottom
line will be. If, for example, your expected capacity is a small
fraction of this known limit for your particular setup, and that in
practice, you would notice undrained messages long before you hit the
limit, you *might* decide that for all intents and purposes this is a
acceptable and manageable risk.

Whilst doing your testing, you may not have encountered any problems,
because you may not have pushed it to the limit. All I am saying is
that in doing stress testing for the scalability improvements I am
working on, I have pushed Rabbit to its limits at various stages and
am just informing you of the current theoretical worse case scenario -
ATM queue depth is bounded by memory and there is no overflow
facility.

However, you may be more risk averse and not want to entertain the
possibility of exhausting your system resources, ever.

In that case, as you have rightfully pointed out, an obvious
improvement to Rabbit is to overflow to disk when a certain queue
depth is reached.

This could apply to persistent and non-persistent messages alike.

I'll take this down as an enhancement suggestion which may factored in
the work that we have planned to make queues pluggable. An alternative
is to incorporate this into the current queue implementation, but
whether we do this would basically depend on what resources we have
available and how acute it is time wise.

Another related improvement includes implementing message expiry.

Please let us what your time scales are for when you absolutely need
this in production.

HTH,

Ben



From rabbitmq-discuss_efine at usa.net  Fri Sep 12 18:36:16 2008
From: rabbitmq-discuss_efine at usa.net (Edwin Fine)
Date: Fri, 12 Sep 2008 13:36:16 -0400
Subject: [rabbitmq-discuss] RabbitMQ memory management
In-Reply-To: <269388e30809120927g2c1fb57fi5e900becb77d9cd0@mail.gmail.com>
References: <48C8B97D.5020004@gmail.com> <48C9131D.6050506@gmail.com>
	<269388e30809110554w16ab42e3v891e4f9619914bec@mail.gmail.com>
	<48C91E5D.6040900@gmail.com>
	<269388e30809110711o43142d50gea218d4938e775f1@mail.gmail.com>
	<6c2563b20809111546s20197294ude38ba9fbbfa95b1@mail.gmail.com>
	<269388e30809111659q6058f6f1xbcc50ebb43941ab@mail.gmail.com>
	<269388e30809111704n55655140h2180f2044a406888@mail.gmail.com>
	<6c2563b20809111831s2fa2d4cag3e1e624fd8c2d48c@mail.gmail.com>
	<269388e30809120927g2c1fb57fi5e900becb77d9cd0@mail.gmail.com>
Message-ID: <6c2563b20809121036q346a387cj55aa1af6419a977@mail.gmail.com>

Ben,

Thanks for clarifying. Disclaimer: what follows is not an attack on Rabbit,
or you, or anything like that. It's simply explaining my situation without
judgment and asking for suggestions.

I now understand that in the worst-case scenario as discussed, the Rabbit
Erlang VM could crash due to out of memory conditions. What I should then do
is probably set the rabbit node up with a heartbeat so that in the extremely
unlikely event of this happening, at least the system will auto-recover. All
persistent messages will be on disk, so nothing crucial will be lost.
Presumably, if there are a grillion (that's a metric SI term for "a lot of"
;)) persistent messages in Mnesia for a specific queue, RabbitMQ won't try
to load these all into memory and cause the crash to repeat itself.
*That*would be unfortunate.

I think it would be a really solid addition to RabbitMQ to limit the number
of messages kept in memory and hence reduce considerably the likelihood of
out of memory conditions. It is very difficult for me to know exactly when I
will need this feature, because I don't yet know the volumes that could be
hitting the system when it goes into full production. It's currently in
limited production. However, the sooner the better. In my opinion, and I
really like RabbitMQ, so don't get me wrong, the lack of this feature
severely limits the usefulness of RabbitMQ in a store and forward scenario.
Basically, it means that barring other solution, I would have to store the
messages myself in a database, and dequeue them myself. This means I would
have to write a mini-queuing system myself, which I was trying to avoid. In
particular, I didn't want to write it because Mnesia has a serious
limitation in that if your table is a set, it cannot be disk-only, which
means... that all the messages in the database are kept in memory!! There
are some ways around this, but I just didn't want to have to handle these
issues myself.

Look, it's not your fault that I didn't understand that RabbitMQ keeps all
the queued messages in memory until they are delivered (although this should
be prominently featured in the documentation, if it is not already, but I
haven't seen it). But now I do.

The system that I am using RabbitMQ is part of is an SMS message aggregator.
It stores and forwards of the order of a million SMS text messages and other
kinds of messages per day. I had a choice when designing the system: either
write my own database queuing mechanism, or find a messaging and queuing
system. I had used WebSphereMQ for very similar systems in the past, so I
was averse to reinventing the wheel. When I evaluated RabbitMQ, I saw that
it did persistent messaging and made an erroneous assumption that it worked
the same way as WebSphereMQ in how it dealt with persistent messages. My
testing never showed any different, but I probably never stressed RabbitMQ
to the point where it would have shown up.

In fact, I originally had a problem, which I posted on this mailing list,
where my consumers were being overwhelmed by the speed at which RabbitMQ was
pushing messages to them. This caused the messages to be buffered in the
consumer's Erlang queue, which made the consumer's memory usage go through
the roof. There was no way to throttle the sender because QoS was not
implemented, so I changed my consumers to use a basic.get. This, I thought,
pushed the problem back into RabbitMQ's camp, which I thought would solve
the problem because I had believed it was all going to disk and did not know
it was being shadowed in memory too. So it didn't solve the problem, it
simply pushed it to a different part of the system.

I put a great deal of effort into ensuring that the consumers stay running
at all times, but the thing that is out of my control is whether they can
keep up with the messages that are being put into the system. The reason for
this is that the consumers deliver messages to various URLs over http, and
the server behind the URL might be offline for any period of time, or
delivery might be very slow. This can cause the messages to back up if they
are being added at a high rate. Messages are added at a high rate sometimes
when a client wants to send a batch of tens of thousands of messages in a
store and forward mode.

So... in the absence of the "feature" discussed above, do you have any
suggestions as to how I can dig myself out of this hole (without using a
different m&q system) ? :)

Regards,
Edwin


On Fri, Sep 12, 2008 at 12:27 PM, Ben Hood <0x6e6562 at gmail.com> wrote:

> Edwin,
>
> On Fri, Sep 12, 2008 at 2:31 AM, Edwin Fine
> <rabbitmq-discuss_efine at usa.net> wrote:
> > I think you misunderstood my message. I was saying RabbitMQ should be
> able
> > to store a non-memory-limited number of persistent messages in the
> absence
> > of a consumer draining the queue. So to be exact, these would be
> > non-transactional persistent messages. You replied to me about
> > non-persistent messages, which I know are memory-limited. I am confused,
> > because I was at one time (when I was doing my due diligence) convinced
> that
> > RabbitMQ had no practical limit (other than any set by Mnesia and hard
> disk
> > space) for storing non-transactional persistent messages. I am simply
> > concerned that perhaps I was mistaken and was asking you to elaborate.
>
> Thanks for the clarification.
>
> The status quo is that irrespective of whether we are talking about
> persistent or non-persistent messages, messages are queued up in
> memory until they are drained. The difference between persistent and
> non-persistent is that with persistent messages a replica of each
> message is written to disk. This disk copy will only be used in a
> recovery situation for messages that have not been acknowledged.
>
> Obviously the limit to which you carry on queuing messages without
> draining them depends on the physical resources available to the
> Erlang VM and how virtual memory is utilized, which in turn depends on
> your OS and production setup.
>
> So to draw a line in the sand, you could go through and calibrate your
> setup wrt to the point at which it cannot allocate any more memory. By
> doing so, you've worked out approximately what your absolute bottom
> line will be. If, for example, your expected capacity is a small
> fraction of this known limit for your particular setup, and that in
> practice, you would notice undrained messages long before you hit the
> limit, you *might* decide that for all intents and purposes this is a
> acceptable and manageable risk.
>
> Whilst doing your testing, you may not have encountered any problems,
> because you may not have pushed it to the limit. All I am saying is
> that in doing stress testing for the scalability improvements I am
> working on, I have pushed Rabbit to its limits at various stages and
> am just informing you of the current theoretical worse case scenario -
> ATM queue depth is bounded by memory and there is no overflow
> facility.
>
> However, you may be more risk averse and not want to entertain the
> possibility of exhausting your system resources, ever.
>
> In that case, as you have rightfully pointed out, an obvious
> improvement to Rabbit is to overflow to disk when a certain queue
> depth is reached.
>
> This could apply to persistent and non-persistent messages alike.
>
> I'll take this down as an enhancement suggestion which may factored in
> the work that we have planned to make queues pluggable. An alternative
> is to incorporate this into the current queue implementation, but
> whether we do this would basically depend on what resources we have
> available and how acute it is time wise.
>
> Another related improvement includes implementing message expiry.
>
> Please let us what your time scales are for when you absolutely need
> this in production.
>
> HTH,
>
> Ben
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20080912/4b6bcefa/attachment.htm 

From 0x6e6562 at gmail.com  Fri Sep 12 19:30:54 2008
From: 0x6e6562 at gmail.com (Ben Hood)
Date: Fri, 12 Sep 2008 19:30:54 +0100
Subject: [rabbitmq-discuss] RabbitMQ memory management
In-Reply-To: <6c2563b20809121036q346a387cj55aa1af6419a977@mail.gmail.com>
References: <48C8B97D.5020004@gmail.com>
	<269388e30809110554w16ab42e3v891e4f9619914bec@mail.gmail.com>
	<48C91E5D.6040900@gmail.com>
	<269388e30809110711o43142d50gea218d4938e775f1@mail.gmail.com>
	<6c2563b20809111546s20197294ude38ba9fbbfa95b1@mail.gmail.com>
	<269388e30809111659q6058f6f1xbcc50ebb43941ab@mail.gmail.com>
	<269388e30809111704n55655140h2180f2044a406888@mail.gmail.com>
	<6c2563b20809111831s2fa2d4cag3e1e624fd8c2d48c@mail.gmail.com>
	<269388e30809120927g2c1fb57fi5e900becb77d9cd0@mail.gmail.com>
	<6c2563b20809121036q346a387cj55aa1af6419a977@mail.gmail.com>
Message-ID: <269388e30809121130m4fb7f3d8la5314b0b8aa9846a@mail.gmail.com>

Edwin,

On Fri, Sep 12, 2008 at 6:36 PM, Edwin Fine
<rabbitmq-discuss_efine at usa.net> wrote:
> So... in the absence of the "feature" discussed above, do you have any
> suggestions as to how I can dig myself out of this hole (without using a
> different m&q system) ? :)

Quick question: what are your exact volumetrics?

You mentioned 1M SMS/day. Is this from day 1 or does this allow for
growth? And how big is the average SMS inclusive of all of the
application layer stuff you want to attach to each one?

Ben



From rabbitmq-discuss_efine at usa.net  Fri Sep 12 21:02:27 2008
From: rabbitmq-discuss_efine at usa.net (Edwin Fine)
Date: Fri, 12 Sep 2008 16:02:27 -0400
Subject: [rabbitmq-discuss] RabbitMQ memory management
In-Reply-To: <269388e30809121130m4fb7f3d8la5314b0b8aa9846a@mail.gmail.com>
References: <48C8B97D.5020004@gmail.com> <48C91E5D.6040900@gmail.com>
	<269388e30809110711o43142d50gea218d4938e775f1@mail.gmail.com>
	<6c2563b20809111546s20197294ude38ba9fbbfa95b1@mail.gmail.com>
	<269388e30809111659q6058f6f1xbcc50ebb43941ab@mail.gmail.com>
	<269388e30809111704n55655140h2180f2044a406888@mail.gmail.com>
	<6c2563b20809111831s2fa2d4cag3e1e624fd8c2d48c@mail.gmail.com>
	<269388e30809120927g2c1fb57fi5e900becb77d9cd0@mail.gmail.com>
	<6c2563b20809121036q346a387cj55aa1af6419a977@mail.gmail.com>
	<269388e30809121130m4fb7f3d8la5314b0b8aa9846a@mail.gmail.com>
Message-ID: <6c2563b20809121302t196b93c3r228d68dedaab0317@mail.gmail.com>

Ben,

Exact volumetrics are difficult to obtain. Averages don't mean much,
unfortunately, because when you look at the mean you also have to look at
the standard deviation, and the standard deviation in this case is I believe
- high. This is because the SMS vary widely in number and size, depending on
the content ("Hello" vs "War and Peace ";), the sending client and the type
of SMS (WAP push, plain text, proprietary attachments, etc). My
understanding is that the binary component of this (i.e. the sum total of
all messages if the exacty data as received over TCP/IP to a binary file)
would come to about 1 GB per day.

The million messages per day is in a way from day 1, since there is an
existing system handling this volume and the Erlang system I am writing is
replacing parts of it. However, only a fraction of that volume will come on
stream immediately; there will be a gradual cut-over once we are satisfied
with the functionality and performance, and we will monitor things to make
sure the system is coping before cutting over mroe clients.

At this stage of Real Life In Software Development (tm), I don't know
exactly how long the cutover will take or when it will start. In
business-driven things, I have learned to expect anything at any time and
not expect anything ever, if you get my drift. So it could happen in two
weeks or in 6 months. Sorry I can't be more precise, but with the "luxury"
of an existing system keeping the store going, the pressure to cut over is
driven by a number of factors over which I have no control and into which I
have little visibility. For example, if the company gets a large, rich, new
client tomorrow that MUST have the new functionality provided by the Erlang
system and wants to come on board starting yesterday (the usual scenario),
you can bet the cutover will be pretty soon ;-)

So it's a bit of a time bomb, but will not be the show-stopper I imagined,
because if the VM does crash for any reason, I will make sure it gets
restarted by a watchdog, so service won't be interrupted for long and nobody
besides myself and my client will know any better or even care. I'll also
have to make sure that my code notices that Rabbit died and reconnect when
it comes back up (which the code should be doing anyway). The worst that
will happen is that some in-flight messages that didn't make it to disk may
need to be re-sent.

I am not panicking, stuff happens, so I will wait until the desired
functionality is added and hope that YOU guys soon get a rich, impatient
client that wants this and can afford to pay for it right now. In the
meantime, I will probably just add some sort of disk spillover mechanism and
tell my client to get lots more memory for the production servers :) .

Bottom line: no serious worries. Let's work together on this as and when it
becomes a priority for you guys. I understand what it means to have limited
resources, and I really like your product and the way you support it, so
please don't stop and don't sweat it.

Regards,
Edwin

On Fri, Sep 12, 2008 at 2:30 PM, Ben Hood <0x6e6562 at gmail.com> wrote:

> Edwin,
>
> On Fri, Sep 12, 2008 at 6:36 PM, Edwin Fine
> <rabbitmq-discuss_efine at usa.net> wrote:
> > So... in the absence of the "feature" discussed above, do you have any
> > suggestions as to how I can dig myself out of this hole (without using a
> > different m&q system) ? :)
>
> Quick question: what are your exact volumetrics?
>
> You mentioned 1M SMS/day. Is this from day 1 or does this allow for
> growth? And how big is the average SMS inclusive of all of the
> application layer stuff you want to attach to each one?
>
> Ben
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20080912/9bd28649/attachment.htm 

From tsuraan at gmail.com  Fri Sep 12 21:16:37 2008
From: tsuraan at gmail.com (tsuraan)
Date: Fri, 12 Sep 2008 15:16:37 -0500
Subject: [rabbitmq-discuss] RabbitMQ memory management
In-Reply-To: <6c2563b20809121302t196b93c3r228d68dedaab0317@mail.gmail.com>
References: <48C8B97D.5020004@gmail.com>
	<269388e30809110711o43142d50gea218d4938e775f1@mail.gmail.com>
	<6c2563b20809111546s20197294ude38ba9fbbfa95b1@mail.gmail.com>
	<269388e30809111659q6058f6f1xbcc50ebb43941ab@mail.gmail.com>
	<269388e30809111704n55655140h2180f2044a406888@mail.gmail.com>
	<6c2563b20809111831s2fa2d4cag3e1e624fd8c2d48c@mail.gmail.com>
	<269388e30809120927g2c1fb57fi5e900becb77d9cd0@mail.gmail.com>
	<6c2563b20809121036q346a387cj55aa1af6419a977@mail.gmail.com>
	<269388e30809121130m4fb7f3d8la5314b0b8aa9846a@mail.gmail.com>
	<6c2563b20809121302t196b93c3r228d68dedaab0317@mail.gmail.com>
Message-ID: <84fb38e30809121316q3381654y705041be440c9e8c@mail.gmail.com>

> So it's a bit of a time bomb, but will not be the show-stopper I imagined,
> because if the VM does crash for any reason, I will make sure it gets
> restarted by a watchdog, so service won't be interrupted for long and nobody
> besides myself and my client will know any better or even care. I'll also
> have to make sure that my code notices that Rabbit died and reconnect when
> it comes back up (which the code should be doing anyway). The worst that
> will happen is that some in-flight messages that didn't make it to disk may
> need to be re-sent.

If RabbitMQ crashes because it's out of memory, I understand that it
should be able to start again without losing any data.  Will the next
message sent to it (before any messages are dequeued) cause the queue
to crash again?  I assume that must be the case, since nothing was
lost when the program crashed.  I don't know what to do about this,
but it may be something to try to plan around.



From rabbitmq-discuss_efine at usa.net  Fri Sep 12 21:19:04 2008
From: rabbitmq-discuss_efine at usa.net (Edwin Fine)
Date: Fri, 12 Sep 2008 16:19:04 -0400
Subject: [rabbitmq-discuss] RabbitMQ memory management
In-Reply-To: <84fb38e30809121316q3381654y705041be440c9e8c@mail.gmail.com>
References: <48C8B97D.5020004@gmail.com>
	<6c2563b20809111546s20197294ude38ba9fbbfa95b1@mail.gmail.com>
	<269388e30809111659q6058f6f1xbcc50ebb43941ab@mail.gmail.com>
	<269388e30809111704n55655140h2180f2044a406888@mail.gmail.com>
	<6c2563b20809111831s2fa2d4cag3e1e624fd8c2d48c@mail.gmail.com>
	<269388e30809120927g2c1fb57fi5e900becb77d9cd0@mail.gmail.com>
	<6c2563b20809121036q346a387cj55aa1af6419a977@mail.gmail.com>
	<269388e30809121130m4fb7f3d8la5314b0b8aa9846a@mail.gmail.com>
	<6c2563b20809121302t196b93c3r228d68dedaab0317@mail.gmail.com>
	<84fb38e30809121316q3381654y705041be440c9e8c@mail.gmail.com>
Message-ID: <6c2563b20809121319j5c9540etd82266f64d32e42d@mail.gmail.com>

Very good point. I did ask that question in my previous email, but I don't
think it has been answered yet.

On Fri, Sep 12, 2008 at 4:16 PM, tsuraan <tsuraan at gmail.com> wrote:

> > So it's a bit of a time bomb, but will not be the show-stopper I
> imagined,
> > because if the VM does crash for any reason, I will make sure it gets
> > restarted by a watchdog, so service won't be interrupted for long and
> nobody
> > besides myself and my client will know any better or even care. I'll also
> > have to make sure that my code notices that Rabbit died and reconnect
> when
> > it comes back up (which the code should be doing anyway). The worst that
> > will happen is that some in-flight messages that didn't make it to disk
> may
> > need to be re-sent.
>
> If RabbitMQ crashes because it's out of memory, I understand that it
> should be able to start again without losing any data.  Will the next
> message sent to it (before any messages are dequeued) cause the queue
> to crash again?  I assume that must be the case, since nothing was
> lost when the program crashed.  I don't know what to do about this,
> but it may be something to try to plan around.
>
> _______________________________________________
> rabbitmq-discuss mailing list
> rabbitmq-discuss at lists.rabbitmq.com
> http://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20080912/7c264129/attachment.htm 

From dmitriy.samovskiy at cohesiveft.com  Fri Sep 12 22:22:46 2008
From: dmitriy.samovskiy at cohesiveft.com (Dmitriy Samovskiy)
Date: Fri, 12 Sep 2008 16:22:46 -0500
Subject: [rabbitmq-discuss] RabbitMQ memory management
In-Reply-To: <269388e30809111659q6058f6f1xbcc50ebb43941ab@mail.gmail.com>
References: <48C8B97D.5020004@gmail.com>	<269388e30809110414g5551be49of57af97fa4e36861@mail.gmail.com>	<48C9131D.6050506@gmail.com>	<269388e30809110554w16ab42e3v891e4f9619914bec@mail.gmail.com>	<48C91E5D.6040900@gmail.com>	<269388e30809110711o43142d50gea218d4938e775f1@mail.gmail.com>	<6c2563b20809111546s20197294ude38ba9fbbfa95b1@mail.gmail.com>
	<269388e30809111659q6058f6f1xbcc50ebb43941ab@mail.gmail.com>
Message-ID: <48CADDA6.6030907@cohesiveft.com>



Ben Hood wrote:

> No, you've understood it correctly. If you send enough non-persistent
> messages, eventually the queues will fill up, the broker will crash
> and you will lose all of the messages that you sent to that node. ATM
I assume this condition can't happen by design if messages are published with immediate 
flag set to true, right?


<field name = "immediate" type = "bit">
     request immediate delivery
     <doc>
       This flag tells the server how to react if the message cannot be
       routed to a queue consumer immediately.  If this flag is set, the
       server will return an undeliverable message with a Return method.
       If this flag is zero, the server will queue the message, but with
       no guarantee that it will ever be consumed.
     </doc>
     <doc name = "rule" test = "amq_basic_16">
       The server SHOULD implement the immediate flag.
     </doc>
   </field>


Does it mean a message is returned if it can't be immediately routed to a queue or a 
message is returned if it can't be immediately routed to a consumer?

- Dmitriy




From matthias at lshift.net  Sat Sep 13 04:47:58 2008
From: matthias at lshift.net (Matthias Radestock)
Date: Sat, 13 Sep 2008 04:47:58 +0100
Subject: [rabbitmq-discuss] RabbitMQ memory management
In-Reply-To: <48CADDA6.6030907@cohesiveft.com>
References: <48C8B97D.5020004@gmail.com>	<269388e30809110414g5551be49of57af97fa4e36861@mail.gmail.com>	<48C9131D.6050506@gmail.com>	<269388e30809110554w16ab42e3v891e4f9619914bec@mail.gmail.com>	<48C91E5D.6040900@gmail.com>	<269388e30809110711o43142d50gea218d4938e775f1@mail.gmail.com>	<6c2563b20809111546s20197294ude38ba9fbbfa95b1@mail.gmail.com>	<269388e30809111659q6058f6f1xbcc50ebb43941ab@mail.gmail.com>
	<48CADDA6.6030907@cohesiveft.com>
Message-ID: <48CB37EE.4030504@lshift.net>

Dmitriy,

Dmitriy Samovskiy wrote:
> Ben Hood wrote:
> 
>> No, you've understood it correctly. If you send enough non-persistent
>> messages, eventually the queues will fill up, the broker will crash
>> and you will lose all of the messages that you sent to that node. ATM
> 
> I assume this condition can't happen by design if messages are
> published with immediate flag set to true, right?

Correct.

> Does it mean a message is returned if it can't be immediately routed
> to a queue or a message is returned if it can't be immediately routed
> to a consumer?

The latter. The former is done by the 'mandatory' flag.

With immediate=true no queuing takes place.


Matthias.



From matthias at lshift.net  Sat Sep 13 05:00:45 2008
From: matthias at lshift.net (Matthias Radestock)
Date: Sat, 13 Sep 2008 05:00:45 +0100
Subject: [rabbitmq-discuss] RabbitMQ memory management
In-Reply-To: <84fb38e30809121316q3381654y705041be440c9e8c@mail.gmail.com>
References: <48C8B97D.5020004@gmail.com>	<269388e30809110711o43142d50gea218d4938e775f1@mail.gmail.com>	<6c2563b20809111546s20197294ude38ba9fbbfa95b1@mail.gmail.com>	<269388e30809111659q6058f6f1xbcc50ebb43941ab@mail.gmail.com>	<269388e30809111704n55655140h2180f2044a406888@mail.gmail.com>	<6c2563b20809111831s2fa2d4cag3e1e624fd8c2d48c@mail.gmail.com>	<269388e30809120927g2c1fb57fi5e900becb77d9cd0@mail.gmail.com>	<6c2563b20809121036q346a387cj55aa1af6419a977@mail.gmail.com>	<269388e30809121130m4fb7f3d8la5314b0b8aa9846a@mail.gmail.com>	<6c2563b20809121302t196b93c3r228d68dedaab0317@mail.gmail.com>
	<84fb38e30809121316q3381654y705041be440c9e8c@mail.gmail.com>
Message-ID: <48CB3AED.6060606@lshift.net>

Hi,

tsuraan wrote:
> If RabbitMQ crashes because it's out of memory, I understand that it
> should be able to start again without losing any data

Only *durable* queues and exchanges, and *persistent* messages are 
recoverable, as per the spec.

> Will the next message sent to it (before any messages are dequeued)
> cause the queue to crash again? I assume that must be the case, since
> nothing was lost when the program crashed.

Messages aren't the only entities consuming memory. I would hope that 
RabbitMQ is able to recover the state (as defined above) after an OoM 
error, and take in a few more messages, but it's not something we have 
tested. It's possible that the startup sequence uses just that little 
bit more memory which would push the system over the edge.

Generally, if there are worries about RabbitMQ running out of memory one 
should try catching that case well before it happens. It's not really 
advisable to run a system so close to the limits.


Matthias.



From alexis.richardson at cohesiveft.com  Sat Sep 13 10:07:24 2008
From: alexis.richardson at cohesiveft.com (Alexis Richardson)
Date: Sat, 13 Sep 2008 10:07:24 +0100
Subject: [rabbitmq-discuss] RabbitMQ memory management
In-Reply-To: <48CB3AED.6060606@lshift.net>
References: <48C8B97D.5020004@gmail.com>
	<269388e30809111659q6058f6f1xbcc50ebb43941ab@mail.gmail.com>
	<269388e30809111704n55655140h2180f2044a406888@mail.gmail.com>
	<6c2563b20809111831s2fa2d4cag3e1e624fd8c2d48c@mail.gmail.com>
	<269388e30809120927g2c1fb57fi5e900becb77d9cd0@mail.gmail.com>
	<6c2563b20809121036q346a387cj55aa1af6419a977@mail.gmail.com>
	<269388e30809121130m4fb7f3d8la5314b0b8aa9846a@mail.gmail.com>
	<6c2563b20809121302t196b93c3r228d68dedaab0317@mail.gmail.com>
	<84fb38e30809121316q3381654y705041be440c9e8c@mail.gmail.com>
	<48CB3AED.6060606@lshift.net>
Message-ID: <167204d20809130207l5d3b95a0he7e067ff86b7d18b@mail.gmail.com>

Hi all,

I have been following this discussion on the list.  To recap:

1 - the overhead of storing a message in rabbitmq is very low meaning
that the case 'broker has filled up, I need more nodes' is quite
unusual and certainly manageable
2 - anyone who needs more queue memory can add more nodes to the broker
cluster transparently
3 - durable/persistent messages are also stored on disk for recovery purposes

If you have slower consumers than producers, then either:
a) #queues will grow in size
or:
b) at least one queue will grow in size.

Note that case (a) is solved by 2 above.  Add more nodes.  How often would you
have to add more nodes?  Due to 1, you can work this out based on your message
size.  For almost all use cases the consumers will have to lag
producers by several
days.  Think about it.  And don't forget you can add more consumers.

Let's say that you cannot add more nodes and you cannot add more consumers.
Assume also that rabbitmq is set up to persist messages to disk for recovery per
point 3 above, but that due to your application you need copies of each message
in memory.  Finally assume you have only one queue, many fast producers, and
one slow consumer.  One example would be SMS.  Even a small old server could
store millions of SMS messages without any of them being consumed.  So that
is your scenario.

[ the above is extreme but the problem use cases are variants of this ]

In cases like this we would need to do one of the following:

* provide a means to tell producers to back off, or alert an operator
* or, implement a system that created more queues and nodes for you,
if one queue became ginormous
* implement either rolling buffers, or agents, that flushed/paged
messages to pluggable stores or directly to disk
* .. or (more extremely) implement rolling buffers that deleted old
unconsumed messages completely when queue size maxed out, and notified
consumers and operators as needed
* some other more fancy flow control TBD
* OR - recommend the application deigner thinks about why their queues
are growing to very large size and if this can be prevented through
application changes

You'll appreciate that the first couple of fixes in this list are
fairly simple to implement, with potential difficulties increasing as
you go down the list ;-)

Yet despite all this, in summary, it is reasonable for users to ask
for a solution that is more 'self healing'.

So - any takers?  Comments, thoughts?

alexis


On Sat, Sep 13, 2008 at 5:00 AM, Matthias Radestock <matthias at lshift.net> wrote:
> Hi,
>
> tsuraan wrote:
>> If RabbitMQ crashes because it's out of memory, I understand that it
>> should be able to start again without losing any data
>
> Only *durable* queues and exchanges, and *persistent* messages are
> recoverable, as per the spec.
>
>> Will the next message sent to it (before any messages are dequeued)
>> cause the queue to crash again? I assume that must be the case, since
>> nothing was lost when the program crashed.
>
> Messages aren't the only entities consuming memory. I would hope that
> RabbitMQ is able to recover the state (as defined above) after an OoM
> error, and take in a few more messages, but it's not something we have
> tested. It's possible that the startup sequence uses just that little
> bit more memory which would push the system over the edge.
>
> Generally, if there are worries about RabbitMQ running out of memory one
> should try catching that case well before it happens. It's not really
> advisable to run a system so close to the limits.
>
>
> Matthias.
>
> _______________________________________________
> rabbitmq-discuss mailing list
> rabbitmq-discuss at lists.rabbitmq.com
> http://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss
>



From matthias at lshift.net  Sat Sep 13 11:28:04 2008
From: matthias at lshift.net (Matthias Radestock)
Date: Sat, 13 Sep 2008 11:28:04 +0100
Subject: [rabbitmq-discuss] RabbitMQ memory management
In-Reply-To: <167204d20809130207l5d3b95a0he7e067ff86b7d18b@mail.gmail.com>
References: <48C8B97D.5020004@gmail.com>	<269388e30809111659q6058f6f1xbcc50ebb43941ab@mail.gmail.com>	<269388e30809111704n55655140h2180f2044a406888@mail.gmail.com>	<6c2563b20809111831s2fa2d4cag3e1e624fd8c2d48c@mail.gmail.com>	<269388e30809120927g2c1fb57fi5e900becb77d9cd0@mail.gmail.com>	<6c2563b20809121036q346a387cj55aa1af6419a977@mail.gmail.com>	<269388e30809121130m4fb7f3d8la5314b0b8aa9846a@mail.gmail.com>	<6c2563b20809121302t196b93c3r228d68dedaab0317@mail.gmail.com>	<84fb38e30809121316q3381654y705041be440c9e8c@mail.gmail.com>	<48CB3AED.6060606@lshift.net>
	<167204d20809130207l5d3b95a0he7e067ff86b7d18b@mail.gmail.com>
Message-ID: <48CB95B4.2020706@lshift.net>


Alexis Richardson wrote:

> * provide a means to tell producers to back off, or alert an operator

The easiest solution I can think of is to

1) configure Erlang's memsup 
(http://www.erlang.org/doc/apps/os_mon/index.html) to trigger alarms 
when memory consumption gets tight.

This can be done without any code change; in the rabbitmq-server startup 
script simply change the "-os_mon start_memsup false" to "true" and 
adjust the thresholds with additional options of the form "-memsup 
<param> <value>"

When a threshold is reached, a message like this will appear in the 
rabbit.log:

=INFO REPORT==== 13-Sep-2008::10:59:37 ===
     alarm_handler: {set,{process_memory_high_watermark,<0.31.0>}}

When the memory usage drops below the threshold again a similar message 
is logged.

One can also set up SNMP monitoring, but that is more complicated.


2) get queues to drop messages when memory consumption is above the 
thresholds.

This does require some coding, but not very much.

We set up an alarm handler that informs all a node's queues when a "high 
memory" alarm is set/cleared. Queues record that information as part of 
their state.

When a message is routed to a queue while the alarm is set, and the 
queue cannot immediately route the message to an auto-ack consumer - in 
other words, the message requires queueing - it discards the message. If 
that happens and either the mandatory or immediate flag were set, and 
the message could not be routed to any other queues / consumers, then 
the message is returned to the sender with basic.return.


We can think of other actions to take instead of discarding messages, 
but the above is simple and neatly exploits the existing 
mandatory/immediate functionality.



Matthias.



From fingermark at gmail.com  Sat Sep 13 15:03:42 2008
From: fingermark at gmail.com (newps)
Date: Sat, 13 Sep 2008 07:03:42 -0700 (PDT)
Subject: [rabbitmq-discuss]  Erlang resh - shell process terminated.
Message-ID: <19470869.post@talk.nabble.com>


I'm trying to connect to the RabbitMQ Erlang node so that I may run some of
the rabbitmq_amqueue functions, but I cannot.  I'm using the CohesiveFT
Elastic Server, packaged with RabbitMQ.

Note that I'm trying to connect to the Erlang node from the RabbitMQ server.

cat /etc/hosts
127.0.0.1 srabbitmq

sudo rabbitmqctl status
Status of node rabbit at srabbitmq ...
[{running_applications,[{rabbit, "RabbitMQ", "1.2.0"}, ...

erl -sname foo -resh rabbit at srabbitmq
*** ERROR:  Shell process terminated! (^G to start new job) ***

erl -sname foo
(foo at srabbitmq)2> net_adm:ping(rabbit at srabbitmq).
pang


What am doing wrong?
-- 
View this message in context: http://www.nabble.com/Erlang-resh---shell-process-terminated.-tp19470869p19470869.html
Sent from the RabbitMQ mailing list archive at Nabble.com.




From fingermark at gmail.com  Sat Sep 13 15:23:07 2008
From: fingermark at gmail.com (newps)
Date: Sat, 13 Sep 2008 07:23:07 -0700 (PDT)
Subject: [rabbitmq-discuss] Erlang resh - shell process terminated.
In-Reply-To: <19470869.post@talk.nabble.com>
References: <19470869.post@talk.nabble.com>
Message-ID: <19471067.post@talk.nabble.com>


I had a typo (resh should be remsh): 

erl -sname foo -remsh rabbit at srabbitmq
*** ERROR:  Shell process terminated! (^G to start new job) ***


newps wrote:
> 
> I'm trying to connect to the RabbitMQ Erlang node so that I may run some
> of the rabbitmq_amqueue functions, but I cannot.  I'm using the CohesiveFT
> Elastic Server, packaged with RabbitMQ.
> 
> Note that I'm trying to connect to the Erlang node from the RabbitMQ
> server.
> 
> cat /etc/hosts
> 127.0.0.1 srabbitmq
> 
> sudo rabbitmqctl status
> Status of node rabbit at srabbitmq ...
> [{running_applications,[{rabbit, "RabbitMQ", "1.2.0"}, ...
> 
> erl -sname foo -resh rabbit at srabbitmq
> *** ERROR:  Shell process terminated! (^G to start new job) ***
> 
> erl -sname foo
> (foo at srabbitmq)2> net_adm:ping(rabbit at srabbitmq).
> pang
> 
> 
> What am doing wrong?
> 

-- 
View this message in context: http://www.nabble.com/Erlang-resh---shell-process-terminated.-tp19470869p19471067.html
Sent from the RabbitMQ mailing list archive at Nabble.com.




From fingermark at gmail.com  Sat Sep 13 15:27:09 2008
From: fingermark at gmail.com (newps)
Date: Sat, 13 Sep 2008 07:27:09 -0700 (PDT)
Subject: [rabbitmq-discuss] Erlang resh - shell process terminated.
In-Reply-To: <19471067.post@talk.nabble.com>
References: <19470869.post@talk.nabble.com> <19471067.post@talk.nabble.com>
Message-ID: <19471099.post@talk.nabble.com>


If anyone else has this problem:

cat /var/lib/rabbitmq/.erlang.cookie
SOMECOOKIE

erl -sname foo -setcookie SOMECOOKIE  -remsh rabbit at srabbitmq


newps wrote:
> 
> I had a typo (resh should be remsh): 
> 
> erl -sname foo -remsh rabbit at srabbitmq
> *** ERROR:  Shell process terminated! (^G to start new job) ***
> 
> 
> newps wrote:
>> 
>> I'm trying to connect to the RabbitMQ Erlang node so that I may run some
>> of the rabbitmq_amqueue functions, but I cannot.  I'm using the
>> CohesiveFT Elastic Server, packaged with RabbitMQ.
>> 
>> Note that I'm trying to connect to the Erlang node from the RabbitMQ
>> server.
>> 
>> cat /etc/hosts
>> 127.0.0.1 srabbitmq
>> 
>> sudo rabbitmqctl status
>> Status of node rabbit at srabbitmq ...
>> [{running_applications,[{rabbit, "RabbitMQ", "1.2.0"}, ...
>> 
>> erl -sname foo -resh rabbit at srabbitmq
>> *** ERROR:  Shell process terminated! (^G to start new job) ***
>> 
>> erl -sname foo
>> (foo at srabbitmq)2> net_adm:ping(rabbit at srabbitmq).
>> pang
>> 
>> 
>> What am doing wrong?
>> 
> 
> 

-- 
View this message in context: http://www.nabble.com/Erlang-resh---shell-process-terminated.-tp19470869p19471099.html
Sent from the RabbitMQ mailing list archive at Nabble.com.




From rabbitmq-discuss_efine at usa.net  Sat Sep 13 18:07:51 2008
From: rabbitmq-discuss_efine at usa.net (Edwin Fine)
Date: Sat, 13 Sep 2008 13:07:51 -0400
Subject: [rabbitmq-discuss] Erlang resh - shell process terminated.
In-Reply-To: <19471099.post@talk.nabble.com>
References: <19470869.post@talk.nabble.com> <19471067.post@talk.nabble.com>
	<19471099.post@talk.nabble.com>
Message-ID: <6c2563b20809131007t67619aeci6355d82eecf88631@mail.gmail.com>

May I make a suggestion?

Putting the cookie on the command line is insecure from the point of view
that anyone that can do a ps on the system can see the cookie, and connect
to your node and do evil things. If you're just a home user, that's probably
not a problem, but the suggestion may be of user anyway. What I do is create
a user per application that uses RabbitMQ, and copy the
$RABBIT_DIR/.erlang.cookie file from RabbitMQ into the user's home
directory. Then, if I log on as that user, I never have to worry about the
cookie or about the security aspect and just type in erl -sname test$$
-remsh rabbit at localhost

Regards,
Edwin Fine

On Sat, Sep 13, 2008 at 10:27 AM, newps <fingermark at gmail.com> wrote:

>
> If anyone else has this problem:
>
> cat /var/lib/rabbitmq/.erlang.cookie
> SOMECOOKIE
>
> erl -sname foo -setcookie SOMECOOKIE  -remsh rabbit at srabbitmq
>
>
> newps wrote:
> >
> > I had a typo (resh should be remsh):
> >
> > erl -sname foo -remsh rabbit at srabbitmq
> > *** ERROR:  Shell process terminated! (^G to start new job) ***
> >
> >
> > newps wrote:
> >>
> >> I'm trying to connect to the RabbitMQ Erlang node so that I may run some
> >> of the rabbitmq_amqueue functions, but I cannot.  I'm using the
> >> CohesiveFT Elastic Server, packaged with RabbitMQ.
> >>
> >> Note that I'm trying to connect to the Erlang node from the RabbitMQ
> >> server.
> >>
> >> cat /etc/hosts
> >> 127.0.0.1 srabbitmq
> >>
> >> sudo rabbitmqctl status
> >> Status of node rabbit at srabbitmq ...
> >> [{running_applications,[{rabbit, "RabbitMQ", "1.2.0"}, ...
> >>
> >> erl -sname foo -resh rabbit at srabbitmq
> >> *** ERROR:  Shell process terminated! (^G to start new job) ***
> >>
> >> erl -sname foo
> >> (foo at srabbitmq)2> net_adm:ping(rabbit at srabbitmq).
> >> pang
> >>
> >>
> >> What am doing wrong?
> >>
> >
> >
>
> --
> View this message in context:
> http://www.nabble.com/Erlang-resh---shell-process-terminated.-tp19470869p19471099.html
> Sent from the RabbitMQ mailing list archive at Nabble.com.
>
>
> _______________________________________________
> rabbitmq-discuss mailing list
> rabbitmq-discuss at lists.rabbitmq.com
> http://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20080913/48c70161/attachment.htm 

From rabbitmq-discuss_efine at usa.net  Sat Sep 13 18:08:34 2008
From: rabbitmq-discuss_efine at usa.net (Edwin Fine)
Date: Sat, 13 Sep 2008 13:08:34 -0400
Subject: [rabbitmq-discuss] Erlang resh - shell process terminated.
In-Reply-To: <6c2563b20809131007t67619aeci6355d82eecf88631@mail.gmail.com>
References: <19470869.post@talk.nabble.com> <19471067.post@talk.nabble.com>
	<19471099.post@talk.nabble.com>
	<6c2563b20809131007t67619aeci6355d82eecf88631@mail.gmail.com>
Message-ID: <6c2563b20809131008l39f54e96oa504304cbbe33732@mail.gmail.com>

That should have read, the suggestion may be of *use* anyway :)

On Sat, Sep 13, 2008 at 1:07 PM, Edwin Fine
<rabbitmq-discuss_efine at usa.net>wrote:

> May I make a suggestion?
>
> Putting the cookie on the command line is insecure from the point of view
> that anyone that can do a ps on the system can see the cookie, and connect
> to your node and do evil things. If you're just a home user, that's probably
> not a problem, but the suggestion may be of user anyway. What I do is create
> a user per application that uses RabbitMQ, and copy the
> $RABBIT_DIR/.erlang.cookie file from RabbitMQ into the user's home
> directory. Then, if I log on as that user, I never have to worry about the
> cookie or about the security aspect and just type in erl -sname test$$
> -remsh rabbit at localhost
>
> Regards,
> Edwin Fine
>
>
> On Sat, Sep 13, 2008 at 10:27 AM, newps <fingermark at gmail.com> wrote:
>
>>
>> If anyone else has this problem:
>>
>> cat /var/lib/rabbitmq/.erlang.cookie
>> SOMECOOKIE
>>
>> erl -sname foo -setcookie SOMECOOKIE  -remsh rabbit at srabbitmq
>>
>>
>> newps wrote:
>> >
>> > I had a typo (resh should be remsh):
>> >
>> > erl -sname foo -remsh rabbit at srabbitmq
>> > *** ERROR:  Shell process terminated! (^G to start new job) ***
>> >
>> >
>> > newps wrote:
>> >>
>> >> I'm trying to connect to the RabbitMQ Erlang node so that I may run
>> some
>> >> of the rabbitmq_amqueue functions, but I cannot.  I'm using the
>> >> CohesiveFT Elastic Server, packaged with RabbitMQ.
>> >>
>> >> Note that I'm trying to connect to the Erlang node from the RabbitMQ
>> >> server.
>> >>
>> >> cat /etc/hosts
>> >> 127.0.0.1 srabbitmq
>> >>
>> >> sudo rabbitmqctl status
>> >> Status of node rabbit at srabbitmq ...
>> >> [{running_applications,[{rabbit, "RabbitMQ", "1.2.0"}, ...
>> >>
>> >> erl -sname foo -resh rabbit at srabbitmq
>> >> *** ERROR:  Shell process terminated! (^G to start new job) ***
>> >>
>> >> erl -sname foo
>> >> (foo at srabbitmq)2> net_adm:ping(rabbit at srabbitmq).
>> >> pang
>> >>
>> >>
>> >> What am doing wrong?
>> >>
>> >
>> >
>>
>> --
>> View this message in context:
>> http://www.nabble.com/Erlang-resh---shell-process-terminated.-tp19470869p19471099.html
>> Sent from the RabbitMQ mailing list archive at Nabble.com.
>>
>>
>> _______________________________________________
>> rabbitmq-discuss mailing list
>> rabbitmq-discuss at lists.rabbitmq.com
>> http://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss
>>
>>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20080913/e511ad26/attachment.htm 

From dmitriy.samovskiy at cohesiveft.com  Sat Sep 13 19:41:16 2008
From: dmitriy.samovskiy at cohesiveft.com (Dmitriy Samovskiy)
Date: Sat, 13 Sep 2008 13:41:16 -0500
Subject: [rabbitmq-discuss] Erlang resh - shell process terminated.
In-Reply-To: <19471099.post@talk.nabble.com>
References: <19470869.post@talk.nabble.com> <19471067.post@talk.nabble.com>
	<19471099.post@talk.nabble.com>
Message-ID: <48CC094C.8040307@cohesiveft.com>



newps wrote:
> If anyone else has this problem:
> 
> cat /var/lib/rabbitmq/.erlang.cookie
> SOMECOOKIE
> 
> erl -sname foo -setcookie SOMECOOKIE  -remsh rabbit at srabbitmq
Alternatively, as non-root user (cftuser on Elastic Server) try this:

sudo su - rabbitmq -s /bin/sh -c 'erl -sname foo -remsh rabbit at srabbitmq'



From rabbitmq-discuss_efine at usa.net  Sat Sep 13 21:28:57 2008
From: rabbitmq-discuss_efine at usa.net (Edwin Fine)
Date: Sat, 13 Sep 2008 16:28:57 -0400
Subject: [rabbitmq-discuss] Erlang resh - shell process terminated.
In-Reply-To: <48CC094C.8040307@cohesiveft.com>
References: <19470869.post@talk.nabble.com> <19471067.post@talk.nabble.com>
	<19471099.post@talk.nabble.com> <48CC094C.8040307@cohesiveft.com>
Message-ID: <6c2563b20809131328u164bb0f5ib3fd60819e68d991@mail.gmail.com>

That will also work, if you have sudo privileges and you don't mind running
as the rabbitmq user. I prefer separating things in a production
environment, but that's just me :)

On Sat, Sep 13, 2008 at 2:41 PM, Dmitriy Samovskiy <
dmitriy.samovskiy at cohesiveft.com> wrote:

>
>
> newps wrote:
> > If anyone else has this problem:
> >
> > cat /var/lib/rabbitmq/.erlang.cookie
> > SOMECOOKIE
> >
> > erl -sname foo -setcookie SOMECOOKIE  -remsh rabbit at srabbitmq
> Alternatively, as non-root user (cftuser on Elastic Server) try this:
>
> sudo su - rabbitmq -s /bin/sh -c 'erl -sname foo -remsh rabbit at srabbitmq'
>
> _______________________________________________
> rabbitmq-discuss mailing list
> rabbitmq-discuss at lists.rabbitmq.com
> http://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20080913/f72bc127/attachment.htm 

From 0x6e6562 at gmail.com  Sun Sep 14 11:53:13 2008
From: 0x6e6562 at gmail.com (Ben Hood)
Date: Sun, 14 Sep 2008 11:53:13 +0100
Subject: [rabbitmq-discuss] RabbitMQ memory management
In-Reply-To: <48CB95B4.2020706@lshift.net>
References: <48C8B97D.5020004@gmail.com>
	<6c2563b20809111831s2fa2d4cag3e1e624fd8c2d48c@mail.gmail.com>
	<269388e30809120927g2c1fb57fi5e900becb77d9cd0@mail.gmail.com>
	<6c2563b20809121036q346a387cj55aa1af6419a977@mail.gmail.com>
	<269388e30809121130m4fb7f3d8la5314b0b8aa9846a@mail.gmail.com>
	<6c2563b20809121302t196b93c3r228d68dedaab0317@mail.gmail.com>
	<84fb38e30809121316q3381654y705041be440c9e8c@mail.gmail.com>
	<48CB3AED.6060606@lshift.net>
	<167204d20809130207l5d3b95a0he7e067ff86b7d18b@mail.gmail.com>
	<48CB95B4.2020706@lshift.net>
Message-ID: <269388e30809140353m6cef1189xdaad58b28b170e12@mail.gmail.com>

Matthias,

On Sat, Sep 13, 2008 at 11:28 AM, Matthias Radestock
<matthias at lshift.net> wrote:
>
> Alexis Richardson wrote:
>
>> * provide a means to tell producers to back off, or alert an operator
>
> The easiest solution I can think of is to
>
> 1) configure Erlang's memsup
> (http://www.erlang.org/doc/apps/os_mon/index.html) to trigger alarms
> when memory consumption gets tight.
>
> This can be done without any code change; in the rabbitmq-server startup
> script simply change the "-os_mon start_memsup false" to "true" and
> adjust the thresholds with additional options of the form "-memsup
> <param> <value>"
>
> When a threshold is reached, a message like this will appear in the
> rabbit.log:
>
> =INFO REPORT==== 13-Sep-2008::10:59:37 ===
>     alarm_handler: {set,{process_memory_high_watermark,<0.31.0>}}
>
> When the memory usage drops below the threshold again a similar message
> is logged.
>
> One can also set up SNMP monitoring, but that is more complicated.
>
>
> 2) get queues to drop messages when memory consumption is above the
> thresholds.
>
> This does require some coding, but not very much.
>
> We set up an alarm handler that informs all a node's queues when a "high
> memory" alarm is set/cleared. Queues record that information as part of
> their state.
>
> When a message is routed to a queue while the alarm is set, and the
> queue cannot immediately route the message to an auto-ack consumer - in
> other words, the message requires queueing - it discards the message. If
> that happens and either the mandatory or immediate flag were set, and
> the message could not be routed to any other queues / consumers, then
> the message is returned to the sender with basic.return.
>
> We can think of other actions to take instead of discarding messages,
> but the above is simple and neatly exploits the existing
> mandatory/immediate functionality.

I think this is a good idea of how to use the mangement functionality
that comes with OTP. This is one of the reasons why we are using OTP
in the first place.

Ben



From 0x6e6562 at gmail.com  Sun Sep 14 12:05:44 2008
From: 0x6e6562 at gmail.com (Ben Hood)
Date: Sun, 14 Sep 2008 12:05:44 +0100
Subject: [rabbitmq-discuss] RabbitMQ memory management
In-Reply-To: <167204d20809130207l5d3b95a0he7e067ff86b7d18b@mail.gmail.com>
References: <48C8B97D.5020004@gmail.com>
	<269388e30809111704n55655140h2180f2044a406888@mail.gmail.com>
	<6c2563b20809111831s2fa2d4cag3e1e624fd8c2d48c@mail.gmail.com>
	<269388e30809120927g2c1fb57fi5e900becb77d9cd0@mail.gmail.com>
	<6c2563b20809121036q346a387cj55aa1af6419a977@mail.gmail.com>
	<269388e30809121130m4fb7f3d8la5314b0b8aa9846a@mail.gmail.com>
	<6c2563b20809121302t196b93c3r228d68dedaab0317@mail.gmail.com>
	<84fb38e30809121316q3381654y705041be440c9e8c@mail.gmail.com>
	<48CB3AED.6060606@lshift.net>
	<167204d20809130207l5d3b95a0he7e067ff86b7d18b@mail.gmail.com>
Message-ID: <269388e30809140405n641a049du39a04cad4f1a9b9a@mail.gmail.com>

Alexis,

On Sat, Sep 13, 2008 at 10:07 AM, Alexis Richardson
<alexis.richardson at cohesiveft.com> wrote:
> Note that case (a) is solved by 2 above.  Add more nodes.  How often would you
> have to add more nodes?  Due to 1, you can work this out based on your message
> size.  For almost all use cases the consumers will have to lag
> producers by several
> days.  Think about it.  And don't forget you can add more consumers.

Good point.

The main reason why I asked Edwin about his realsitic expectations
surrounding volumetrics was to find out what the breaking point was
for a simple OTS Rabbit installation to do a *very* naive reality
check.

So in the absense of better knowledge, I just thought to myself that
an SMS is roughly 160 bytes long (160 chars with an encoding that is
something less than 8 bit/char plus some routing headers) and just
created an infinite loop to publish them. A sinlge instance of Rabbit
got overfed after publishing 2.5 million of these messages (on a
simple pizzabox setup).

So under the assumption that you may also use more than one logical
queue (by way of natural application partitioning), you may be
spreading the total system load over multiple queues that reside in
memory on different nodes.

In the degenerate case that you send 1 million messages per day to a
single instance, you still have a day and a bit to find some way to
drain the queues. Presumeably, if no SMS's were getting delivered to
the downstream consumers over the course of a day, somebody would
start to care about the fact that the system wasn't actually doing
something. This person would still have a fair amount of time to find
out what is going on and drain the queues before resource consumption
becomes acute.

Ben



From rabbitmq-discuss_efine at usa.net  Sun Sep 14 12:43:53 2008
From: rabbitmq-discuss_efine at usa.net (Edwin Fine)
Date: Sun, 14 Sep 2008 07:43:53 -0400
Subject: [rabbitmq-discuss] RabbitMQ memory management
In-Reply-To: <269388e30809140405n641a049du39a04cad4f1a9b9a@mail.gmail.com>
References: <48C8B97D.5020004@gmail.com>
	<6c2563b20809111831s2fa2d4cag3e1e624fd8c2d48c@mail.gmail.com>
	<269388e30809120927g2c1fb57fi5e900becb77d9cd0@mail.gmail.com>
	<6c2563b20809121036q346a387cj55aa1af6419a977@mail.gmail.com>
	<269388e30809121130m4fb7f3d8la5314b0b8aa9846a@mail.gmail.com>
	<6c2563b20809121302t196b93c3r228d68dedaab0317@mail.gmail.com>
	<84fb38e30809121316q3381654y705041be440c9e8c@mail.gmail.com>
	<48CB3AED.6060606@lshift.net>
	<167204d20809130207l5d3b95a0he7e067ff86b7d18b@mail.gmail.com>
	<269388e30809140405n641a049du39a04cad4f1a9b9a@mail.gmail.com>
Message-ID: <6c2563b20809140443y4cae4b93peb5a7de7220166d6@mail.gmail.com>

Hi Ben,

Actually, we have a bit of a different use case. Our company (my client, as
it were) provides SMS aggregation services. Essentially, we provide a
unified interface for SMS, MMS, USSD and other types of messages on behalf
of our customers, who are content providers. The main value add is that they
only have to deal with us and our interface, and not the interfaces of
multiple cellular companies. Without disclosing confidential information, I
can tell you that the way it works is as follows:

   1. SMS and other kinds of messages (MMS, USSD, and others) sent by the
   content providers (i.e. MT messages, not from cell phones) arrive at a
   non-Erlang front end where they are captured into a database.
   2. The messages are forwarded to the appropriate cell phone companies.
   3. At the same time, MO messages are sent from the cell phone companies
   which are destined for the content providers (our customers). These MO
   messages go thought the Erlang portion of the system.
   4. Status notifications are also sent to the Erlang portion of the system
   as the messages go through various processing states (e.g. Queued,
   Acknowledged, Delivered, Failed etc).
   5. The front-end sends these status notifications as fast as the Erlang
   back-end can take them. The back end then splits the messages into multiple
   RabbitMQ queues based on content and provider (e.g. SMS for company X goes
   to one queue, while MMS for company Y will go to another). Each queue has a
   consumer that delivers the status messages to a content-provider's web
   site\URL. The status notifications are essentially the final step in the
   process, confirming what the content provider initially sent. It is
   necessary to split the initial transmission from the status messages like
   this because delivery could take minutes or hours in some cases, and the
   sender can't wait around for that long to get a response. So the request is
   sent in one operation to us, and the actual response is sent in a separate
   operation back to them.
   6. The rationale behind having queues like this is to avoid a bottleneck
   where, if there was just one delivery process and a URL choked up, all
   deliveries would be held back unnecessarily.
   7. If one of the URLs is offline, or incorrectly specified, the
   associated queue will build up persistent messages until the situation is
   rectified. This is where the scenario we discussed could come into play.
   Where the real problem comes in is that sometimes a client will send a batch
   of a few hundred thousand messages. Ideally, this batch would be queued up
   by Rabbit and drained as the system is able to process the load. It may even
   be kept for off-peak times.
   8. I was hoping that I could use Rabbit the way I used to use MQ, which
   is as a database-backed queue. Now that I understand I cannot, I must make
   other design decisions. The batches, for example, will have to be stored in
   files or database, and trickled into the system at the correct rate. Now
   here is the second kicker: without any flow control, it is not trivial to
   figure out what the optimum rate is. Too slow, and the batch does not
   compete quickly enough. Too fast, and I risk excessive loading the Rabbit
   node's memory.
   9. Distributing the load across multiple Rabbit nodes may solve
   individual node's memory issues, but will place more pressure on the overall
   system's memory load. This will have cost implications because additional
   hardware will need to be purchased, and additional complexity added to
   distribute traffic to, and manage and monitor, the additional nodes. Sure,
   we have os-mon and SNMP and all that, but it has to be set up and
   configured, and ultimately someone has to sit and watch that. With more
   nodes, it just becomes more of an administrative burden, especially if
   traffic-wise, a single node would do the job just fine, but because of
   implementation-specific behavior, it will not be good enough without
   incurring some risk.
   10. The bottom line is, having all the persistent data needing to be in
   memory is a regrettable situation for the reasons outlined above, a
   situation which I accept, but the consequences of which I wish you, the
   developers, to be fully aware; not to feel bad or be beaten up, but simply
   to know and to use in decision-making processes as appropriate.

Thanks for your time. I hope the above information gives you a better feel
for what I am trying to achieve, and perhaps will generate some more useful
thoughts about how I can do so using your very excellent product (which I am
committed to using, by the way).

Best regards,
Edwin Fine

On Sun, Sep 14, 2008 at 7:05 AM, Ben Hood <0x6e6562 at gmail.com> wrote:

> Alexis,
>
> On Sat, Sep 13, 2008 at 10:07 AM, Alexis Richardson
> <alexis.richardson at cohesiveft.com> wrote:
> > Note that case (a) is solved by 2 above.  Add more nodes.  How often
> would you
> > have to add more nodes?  Due to 1, you can work this out based on your
> message
> > size.  For almost all use cases the consumers will have to lag
> > producers by several
> > days.  Think about it.  And don't forget you can add more consumers.
>
> Good point.
>
> The main reason why I asked Edwin about his realsitic expectations
> surrounding volumetrics was to find out what the breaking point was
> for a simple OTS Rabbit installation to do a *very* naive reality
> check.
>
> So in the absense of better knowledge, I just thought to myself that
> an SMS is roughly 160 bytes long (160 chars with an encoding that is
> something less than 8 bit/char plus some routing headers) and just
> created an infinite loop to publish them. A sinlge instance of Rabbit
> got overfed after publishing 2.5 million of these messages (on a
> simple pizzabox setup).
>
> So under the assumption that you may also use more than one logical
> queue (by way of natural application partitioning), you may be
> spreading the total system load over multiple queues that reside in
> memory on different nodes.
>
> In the degenerate case that you send 1 million messages per day to a
> single instance, you still have a day and a bit to find some way to
> drain the queues. Presumeably, if no SMS's were getting delivered to
> the downstream consumers over the course of a day, somebody would
> start to care about the fact that the system wasn't actually doing
> something. This person would still have a fair amount of time to find
> out what is going on and drain the queues before resource consumption
> becomes acute.
>
> Ben
>
> _______________________________________________
> rabbitmq-discuss mailing list
> rabbitmq-discuss at lists.rabbitmq.com
> http://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20080914/9f51a35b/attachment.htm 

From aconbere at gmail.com  Mon Sep 15 05:39:04 2008
From: aconbere at gmail.com (anders conbere)
Date: Sun, 14 Sep 2008 21:39:04 -0700
Subject: [rabbitmq-discuss] changes to rabbit_amqqueue:declare in trunk
Message-ID: <8ca3fbe80809142139y4279d83cle7f21f8bbb9620c1@mail.gmail.com>

I've noticed that there are changes in rabbit_amqqueue:declare in
trunk from 1.4.0

that along with the changes today in default bindings has caused me
some troubles
(changeset http://hg.rabbitmq.com/rabbitmq-server/rev/93d69099da14)

(timelope at anders-conberes-macbook)2> timelope_api:add_user("aconbere").
** exception throw: {error,
                        {function_clause,
                            [{rabbit_amqqueue,default_binding_spec,

[<<"url:timelope.com:timelope:aconbere:friend_stream">>]},
                             {rabbit_amqqueue,recover_bindings,1},
                             {rabbit_amqqueue,recover_queue,1},
                             {rabbit_amqqueue,'-declare/4-fun-0-',2},
                             {mnesia_tm,apply_fun,3},
                             {mnesia_tm,execute_transaction,5},
                             {rabbit_misc,execute_mnesia_transaction,1},
                             {rabbit_amqqueue,declare,4}]}}
     in function  rabbit_misc:execute_mnesia_transaction/1
     in call from rabbit_amqqueue:declare/4
     in call from timelope_api:add_user/1

Is there a description somewhere of what the declare function now
expects? (I simple removed the Realm argument I was passing shifting
everything over, but that seems to have broken when passed to default
binding).

~ Anders



From matthias at lshift.net  Mon Sep 15 08:13:35 2008
From: matthias at lshift.net (Matthias Radestock)
Date: Mon, 15 Sep 2008 08:13:35 +0100
Subject: [rabbitmq-discuss] changes to rabbit_amqqueue:declare in trunk
In-Reply-To: <8ca3fbe80809142139y4279d83cle7f21f8bbb9620c1@mail.gmail.com>
References: <8ca3fbe80809142139y4279d83cle7f21f8bbb9620c1@mail.gmail.com>
Message-ID: <48CE0B1F.706@lshift.net>

Anders,

anders conbere wrote:
> I've noticed that there are changes in rabbit_amqqueue:declare in
> trunk from 1.4.0
> [...]
> Is there a description somewhere of what the declare function now
> expects?

There's a type signature near the beginning of rabbit_amqqueue:

-spec(declare/4 :: (queue_name(), bool(), bool(), amqp_table()) ->
              amqqueue()).

> (I simple removed the Realm argument I was passing shifting
> everything over,

That is correct.

> but that seems to have broken when passed to default binding).

The queue name now needs to be passed in as a #resource. Use something like
   rabbit_misc:r(<<"/">>, queue, <<"TheQueueName">>)
to create it.


Matthias.



From matthias at lshift.net  Mon Sep 15 08:36:51 2008
From: matthias at lshift.net (Matthias Radestock)
Date: Mon, 15 Sep 2008 08:36:51 +0100
Subject: [rabbitmq-discuss] changes to rabbit_amqqueue:declare in trunk
In-Reply-To: <8ca3fbe80809150031l758ad3dak804c488eb6c993b4@mail.gmail.com>
References: <8ca3fbe80809142139y4279d83cle7f21f8bbb9620c1@mail.gmail.com>	
	<48CE0B1F.706@lshift.net>
	<8ca3fbe80809150031l758ad3dak804c488eb6c993b4@mail.gmail.com>
Message-ID: <48CE1093.1070501@lshift.net>

Anders,

anders conbere wrote:
> On Mon, Sep 15, 2008 at 12:13 AM, Matthias Radestock
> <matthias at lshift.net> wrote:
>> There's a type signature near the beginning of rabbit_amqqueue:
>>
>> -spec(declare/4 :: (queue_name(), bool(), bool(), amqp_table()) ->
>>             amqqueue()).
> 
> Yeah, I just didn't find "queue_name" to be particularly illuminating
> about what the actual value should be.

I got a bit carried away with the type abstractions ;) ...

Take a look at rabbit.hrl:

-type(queue_name() :: r('queue')).
-type(r(Kind) ::
       #resource{virtual_host :: vhost(),
                 kind         :: Kind,
                 name         :: resource_name()}).

and then rabbit_framing_spec.hrl:

-type(resource_name() :: binary()).
-type(vhost() :: binary()).


Matthias.



From 0x6e6562 at gmail.com  Mon Sep 15 08:45:51 2008
From: 0x6e6562 at gmail.com (Ben Hood)
Date: Mon, 15 Sep 2008 08:45:51 +0100
Subject: [rabbitmq-discuss] changes to rabbit_amqqueue:declare in trunk
In-Reply-To: <48CE0B1F.706@lshift.net>
References: <8ca3fbe80809142139y4279d83cle7f21f8bbb9620c1@mail.gmail.com>
	<48CE0B1F.706@lshift.net>
Message-ID: <269388e30809150045u20b4856aia88ffc9f79b25eb@mail.gmail.com>

Anders,

On Mon, Sep 15, 2008 at 8:13 AM, Matthias Radestock <matthias at lshift.net> wrote:
>> Is there a description somewhere of what the declare function now
>> expects?
>
> There's a type signature near the beginning of rabbit_amqqueue:
>
> -spec(declare/4 :: (queue_name(), bool(), bool(), amqp_table()) ->
>              amqqueue()).

I was coincidentally looking at the latest changes to rabbit_amqqueue
in another branch and there may be further changes that could affect
you (though I don't think it will affect the signature of declare/4).

One way to avoid this moving target is to use the Erlang AMQP client
instead of the native API, if that can provide you with the
functionality you require.

HTH,

Ben



From aconbere at gmail.com  Mon Sep 15 17:07:02 2008
From: aconbere at gmail.com (anders conbere)
Date: Mon, 15 Sep 2008 09:07:02 -0700
Subject: [rabbitmq-discuss] changes to rabbit_amqqueue:declare in trunk
In-Reply-To: <48CE1093.1070501@lshift.net>
References: <8ca3fbe80809142139y4279d83cle7f21f8bbb9620c1@mail.gmail.com>
	<48CE0B1F.706@lshift.net>
	<8ca3fbe80809150031l758ad3dak804c488eb6c993b4@mail.gmail.com>
	<48CE1093.1070501@lshift.net>
Message-ID: <8ca3fbe80809150907m206f3ea8g9eff18d9724001c8@mail.gmail.com>

On Mon, Sep 15, 2008 at 12:36 AM, Matthias Radestock
<matthias at lshift.net> wrote:
> Anders,
>
> anders conbere wrote:
>>
>> On Mon, Sep 15, 2008 at 12:13 AM, Matthias Radestock
>> <matthias at lshift.net> wrote:
>>>
>>> There's a type signature near the beginning of rabbit_amqqueue:
>>>
>>> -spec(declare/4 :: (queue_name(), bool(), bool(), amqp_table()) ->
>>>            amqqueue()).
>>
>> Yeah, I just didn't find "queue_name" to be particularly illuminating
>> about what the actual value should be.
>
> I got a bit carried away with the type abstractions ;) ...
>
> Take a look at rabbit.hrl:
>
> -type(queue_name() :: r('queue')).
> -type(r(Kind) ::
>      #resource{virtual_host :: vhost(),
>                kind         :: Kind,
>                name         :: resource_name()}).
>
> and then rabbit_framing_spec.hrl:
>
> -type(resource_name() :: binary()).
> -type(vhost() :: binary()).

Ah interesting, I haven't quite seen anything like that in erlang yet.

~ Anders

>
>
> Matthias.
>



From aconbere at gmail.com  Mon Sep 15 17:08:35 2008
From: aconbere at gmail.com (anders conbere)
Date: Mon, 15 Sep 2008 09:08:35 -0700
Subject: [rabbitmq-discuss] changes to rabbit_amqqueue:declare in trunk
In-Reply-To: <269388e30809150045u20b4856aia88ffc9f79b25eb@mail.gmail.com>
References: <8ca3fbe80809142139y4279d83cle7f21f8bbb9620c1@mail.gmail.com>
	<48CE0B1F.706@lshift.net>
	<269388e30809150045u20b4856aia88ffc9f79b25eb@mail.gmail.com>
Message-ID: <8ca3fbe80809150908m61da98f1hb7154fe497e1726d@mail.gmail.com>

On Mon, Sep 15, 2008 at 12:45 AM, Ben Hood <0x6e6562 at gmail.com> wrote:
> Anders,
>
> On Mon, Sep 15, 2008 at 8:13 AM, Matthias Radestock <matthias at lshift.net> wrote:
>>> Is there a description somewhere of what the declare function now
>>> expects?
>>
>> There's a type signature near the beginning of rabbit_amqqueue:
>>
>> -spec(declare/4 :: (queue_name(), bool(), bool(), amqp_table()) ->
>>              amqqueue()).
>
> I was coincidentally looking at the latest changes to rabbit_amqqueue
> in another branch and there may be further changes that could affect
> you (though I don't think it will affect the signature of declare/4).
>
> One way to avoid this moving target is to use the Erlang AMQP client
> instead of the native API, if that can provide you with the
> functionality you require.

It's true, I've been using the rabbiter source to pick up on how
rabbitmq works, and Tony's used the native api. Now I think I've got
it pretty much figured out and that api will make a lot more sense.

~ Anders

>
> HTH,
>
> Ben
>



From sjjelinek at gmail.com  Mon Sep 15 19:45:09 2008
From: sjjelinek at gmail.com (Sarah Jelinek)
Date: Mon, 15 Sep 2008 12:45:09 -0600
Subject: [rabbitmq-discuss] error connecting to rabbitmq node
Message-ID: <48CEAD35.5030407@gmail.com>

Hi All,

I am a new user to rabbitmq. I got the rabbitmq server pkg installed on 
my ubuntu, Hardy system. I started the server, and after some tweaking 
to the erlang path(-pa) value it started the server correctly. When 
installing the rabbitmq-server pkg via apt-get or even dpkg it installs 
the utilities in /usr/sbin/, but the rabbitmq* scripts expect to be able 
to see the 'ebin' directory at '../ebin'.

My server is running:

> /usr/local/lib/erlang/erts-5.6.3/bin/beam.smp -W w -K true -A30 -- 
> -root /usr/local/lib/erlang -progname erl -- -home /home/build -pa 
> ./../ebin -noshell -noinput -s rabbit -sname rabbit -boot start_sasl 
> -kernel inet_default_listen_options [{sndbuf,16384},{recbuf,4096}] 
> -rabbit tcp_listeners [{"0.0.0.0", 5672}] -sasl errlog_type error 
> -kernel error_logger {file,"/var/log/rabbitmq/rabbit.log"} -sasl 
> sasl_error_logger {file,"/var/log/rabbitmq/rabbit-sasl.log"} -os_mon 
> start_cpu_sup true -os_mon start_disksup false -os_mon start_memsup 
> false -os_mon start_os_sup false -mnesia dir 
> "/var/lib/rabbitmq/mnesia/rabbit" start

netstat -a shows:

tcp        0      0 *:5672                  *:*                     
LISTEN    

However, when I try to see the status, etc.. of this using rabbitmqctl, 
I always get:

> rabbitmqctl status
> Status of node rabbit at re ...
> {badrpc,nodedown}
> done.

or..
> rabbitmqctl start_app
> Starting node rabbit at re ...
> rabbit_control action start_app failed:
> {badrpc,nodedown}

My log file says this:

....
=INFO REPORT==== 15-Sep-2008::18:41:48 ===
started TCP listener on 0.0.0.0:5672

=ERROR REPORT==== 15-Sep-2008::18:42:36 ===
** Connection attempt from disallowed node rabbitmqctl27468 at re **

=ERROR REPORT==== 15-Sep-2008::18:42:50 ===
** Connection attempt from disallowed node rabbitmqctl27495 at re **

Why would this connection be disallowed?

Regards,
sarah











From matthias at lshift.net  Mon Sep 15 19:59:18 2008
From: matthias at lshift.net (Matthias Radestock)
Date: Mon, 15 Sep 2008 19:59:18 +0100
Subject: [rabbitmq-discuss] error connecting to rabbitmq node
In-Reply-To: <48CEAD35.5030407@gmail.com>
References: <48CEAD35.5030407@gmail.com>
Message-ID: <48CEB086.8020402@lshift.net>

Sarah,

Sarah Jelinek wrote:
> I am a new user to rabbitmq. I got the rabbitmq server pkg installed on 
> my ubuntu, Hardy system. I started the server, and after some tweaking 
> to the erlang path(-pa) value it started the server correctly. When 
> installing the rabbitmq-server pkg via apt-get or even dpkg it installs 
> the utilities in /usr/sbin/, but the rabbitmq* scripts expect to be able 
> to see the 'ebin' directory at '../ebin'.

You shouldn't have to tweak the erlang load path; the RabbitMQ Erlang 
code gets installed alongside the Erlang/OTP libraries, so should be 
picked up automatically.

What error did you get when you tried starting the server prior to 
modifying the path?

> when I try to see the status, etc.. of this using rabbitmqctl, 
> I always get:
> 
>> rabbitmqctl status
>> Status of node rabbit at re ...
>> {badrpc,nodedown}
>> done.

> My log file says this:
> =ERROR REPORT==== 15-Sep-2008::18:42:36 ===
> ** Connection attempt from disallowed node rabbitmqctl27468 at re **

This looks like an Erlang .cookie mismatch. The most likely cause is 
that you started rabbit as a user other than 'rabbitmq'. The scripts 
installed by the .deb into /usr/sbin expect the server to be running as 
the 'rabbitmq' user, which is what the init.d scripts start it under.


Regards,

Matthias.



From 0x6e6562 at gmail.com  Mon Sep 15 20:11:04 2008
From: 0x6e6562 at gmail.com (Ben Hood)
Date: Mon, 15 Sep 2008 20:11:04 +0100
Subject: [rabbitmq-discuss] error connecting to rabbitmq node
In-Reply-To: <48CEAD35.5030407@gmail.com>
References: <48CEAD35.5030407@gmail.com>
Message-ID: <269388e30809151211x78e2094emabb5d5a208fcebb2@mail.gmail.com>

Hi Sarah,

On Mon, Sep 15, 2008 at 7:45 PM, Sarah Jelinek <sjjelinek at gmail.com> wrote:
> Why would this connection be disallowed?

The short answer to your question is that this is due to the cookie
mechanism in Erlang.

To fix this, you can can use the -setcookie argument when starting
Erlang (make sure that 2 nodes are using the same cookie) or create a
.erlang.cookie containing the plain text of a cookie in the home
directory of the user starting rabbit.

Furthermore, the log shows that the server did actually start, and so
you might just skip the rabbitmqctl script and start using a client to
test the connectivity of the broker.

I'm a bit short of time to look into what adjustments you had to make
to get things going, so I've just tried to give you some information
to get yourself going as quickly as possible.

HTH,

Ben



From 0x6e6562 at gmail.com  Mon Sep 15 20:15:30 2008
From: 0x6e6562 at gmail.com (Ben Hood)
Date: Mon, 15 Sep 2008 20:15:30 +0100
Subject: [rabbitmq-discuss] error connecting to rabbitmq node
In-Reply-To: <48CEB086.8020402@lshift.net>
References: <48CEAD35.5030407@gmail.com> <48CEB086.8020402@lshift.net>
Message-ID: <269388e30809151215k26a53235ucd20a2d5b9180b9f@mail.gmail.com>

Matthias,

On Mon, Sep 15, 2008 at 7:59 PM, Matthias Radestock <matthias at lshift.net> wrote:
> Sarah Jelinek wrote:
>> I am a new user to rabbitmq. I got the rabbitmq server pkg installed on
>> my ubuntu, Hardy system. I started the server, and after some tweaking
>> to the erlang path(-pa) value it started the server correctly. When
>> installing the rabbitmq-server pkg via apt-get or even dpkg it installs
>> the utilities in /usr/sbin/, but the rabbitmq* scripts expect to be able
>> to see the 'ebin' directory at '../ebin'.
>
> You shouldn't have to tweak the erlang load path; the RabbitMQ Erlang
> code gets installed alongside the Erlang/OTP libraries, so should be
> picked up automatically.
>
> What error did you get when you tried starting the server prior to
> modifying the path?

Sorry, I didn't see that you'd already begun to answer the question.
I'll back off :-)

Ben



From sjjelinek at gmail.com  Mon Sep 15 20:17:09 2008
From: sjjelinek at gmail.com (Sarah Jelinek)
Date: Mon, 15 Sep 2008 13:17:09 -0600
Subject: [rabbitmq-discuss] error connecting to rabbitmq node
In-Reply-To: <48CEB086.8020402@lshift.net>
References: <48CEAD35.5030407@gmail.com> <48CEB086.8020402@lshift.net>
Message-ID: <48CEB4B5.5070107@gmail.com>

Matthias Radestock wrote:
> Sarah,
>
> Sarah Jelinek wrote:
>> I am a new user to rabbitmq. I got the rabbitmq server pkg installed 
>> on my ubuntu, Hardy system. I started the server, and after some 
>> tweaking to the erlang path(-pa) value it started the server 
>> correctly. When installing the rabbitmq-server pkg via apt-get or 
>> even dpkg it installs the utilities in /usr/sbin/, but the rabbitmq* 
>> scripts expect to be able to see the 'ebin' directory at '../ebin'.
>
> You shouldn't have to tweak the erlang load path; the RabbitMQ Erlang 
> code gets installed alongside the Erlang/OTP libraries, so should be 
> picked up automatically.
>
> What error did you get when you tried starting the server prior to 
> modifying the path?
>
The rabbitmq code is installed in /usr/lib/erlang/lib/rabbitmq_server... 
But, when trying to start the server via
> rabbitmq at re:~$ /usr/sbin/invoke-rc.d rabbitmq-server start

I get:

> Starting rabbitmq-server: TIMEOUT - check 
> /var/log/rabbitmq/startup.{log,err}
> rabbitmq-server.

And the log shows:
> more /var/log/rabbitmq/startup.log
> {"init terminating in 
> do_boot",{undef,[{rabbit_multi,start,[]},{init,start_it,1},{init,start_em,
> 1}]}}

The /etc/init.d/rabbitmq-server script starts /usr/sbin/rabbitmq-multi, 
which in turn does:

> exec erl \
>     -pa ../ebin \
>     -noinput \
>     -hidden \
>     ${ERL_ARGS} \
>     -sname rabbitmq_multi$$ \
>     -s rabbit_multi \
>     ${START_ARGS} \
>     -extra "$@"

It is looking in /usr/sbin/../ebin for erlang code. It isn't in that 
path when starting the server this way. Unless I put a symlink in 
/usr/lib/erlang/lib/rabbitmq_server-1.4.0/bin it doesn't find the .beam 
files.

I am using apt-get to install the rabbitmq server pkg. Is there 
something else I should be doing?

Using the instructions here:
> http://www.rabbitmq.com/debian.html#apt


Regards,
sarah
****



>> when I try to see the status, etc.. of this using rabbitmqctl, I 
>> always get:
>>
>>> rabbitmqctl status
>>> Status of node rabbit at re ...
>>> {badrpc,nodedown}
>>> done.
>
>> My log file says this:
>> =ERROR REPORT==== 15-Sep-2008::18:42:36 ===
>> ** Connection attempt from disallowed node rabbitmqctl27468 at re **
>
> This looks like an Erlang .cookie mismatch. The most likely cause is 
> that you started rabbit as a user other than 'rabbitmq'. The scripts 
> installed by the .deb into /usr/sbin expect the server to be running 
> as the 'rabbitmq' user, which is what the init.d scripts start it under.
>
>

> Regards,
>
> Matthias.




From matthias at lshift.net  Mon Sep 15 20:41:57 2008
From: matthias at lshift.net (Matthias Radestock)
Date: Mon, 15 Sep 2008 20:41:57 +0100
Subject: [rabbitmq-discuss] error connecting to rabbitmq node
In-Reply-To: <48CEB4B5.5070107@gmail.com>
References: <48CEAD35.5030407@gmail.com> <48CEB086.8020402@lshift.net>
	<48CEB4B5.5070107@gmail.com>
Message-ID: <48CEBA85.5010408@lshift.net>

Sarah,

Sarah Jelinek wrote:
> Matthias Radestock wrote:
>> What error did you get when you tried starting the server prior to 
>> modifying the path?
>>
> The rabbitmq code is installed in /usr/lib/erlang/lib/rabbitmq_server... 
> And the log shows:
>> more /var/log/rabbitmq/startup.log
>> {"init terminating in 
>> do_boot",{undef,[{rabbit_multi,start,[]},{init,start_it,1},{init,start_em, 
>>
>> 1}]}}

That is strange. Where are your Erlang/OTP modules installed? They 
*should* be under /usr/lib/erlang/ .

> The /etc/init.d/rabbitmq-server script starts /usr/sbin/rabbitmq-multi, 
> ... is looking in /usr/sbin/../ebin for erlang code.

../ebin is just *one* of the places where erl looks for modules. erl 
will also look in the place where Erlang/OTP is installed, and *that's* 
where it should find the rabbit modules.

> I am using apt-get to install the rabbitmq server pkg. Is there 
> something else I should be doing?

That's all you should have to do.


Matthias.



From sjjelinek at gmail.com  Mon Sep 15 21:15:16 2008
From: sjjelinek at gmail.com (Sarah Jelinek)
Date: Mon, 15 Sep 2008 14:15:16 -0600
Subject: [rabbitmq-discuss] error connecting to rabbitmq node
In-Reply-To: <48CEBA85.5010408@lshift.net>
References: <48CEAD35.5030407@gmail.com> <48CEB086.8020402@lshift.net>
	<48CEB4B5.5070107@gmail.com> <48CEBA85.5010408@lshift.net>
Message-ID: <48CEC254.6050302@gmail.com>

Matthias Radestock wrote:
> Sarah,
>
> Sarah Jelinek wrote:
>> Matthias Radestock wrote:
>>> What error did you get when you tried starting the server prior to 
>>> modifying the path?
>>>
>> The rabbitmq code is installed in 
>> /usr/lib/erlang/lib/rabbitmq_server... And the log shows:
>>> more /var/log/rabbitmq/startup.log
>>> {"init terminating in 
>>> do_boot",{undef,[{rabbit_multi,start,[]},{init,start_it,1},{init,start_em, 
>>>
>>> 1}]}}
>
> That is strange. Where are your Erlang/OTP modules installed? They 
> *should* be under /usr/lib/erlang/ .
I have two places where erlang appears to be installed:

/usr/lib/erlang

And:

/usr/local/lib/erlang.

The rabbitmq-server is installed in /usr/lib/erlang/lib/ location. There 
are two mnesia apps installed, one in each of the above as well.

Could this be causing the confusion/issues?

thanks,
sarah
****
>
>> The /etc/init.d/rabbitmq-server script starts 
>> /usr/sbin/rabbitmq-multi, ... is looking in /usr/sbin/../ebin for 
>> erlang code.
>
> ../ebin is just *one* of the places where erl looks for modules. erl 
> will also look in the place where Erlang/OTP is installed, and 
> *that's* where it should find the rabbit modules.
>
>> I am using apt-get to install the rabbitmq server pkg. Is there 
>> something else I should be doing?
>
> That's all you should have to do.
>
>
> Matthias.




From sjjelinek at gmail.com  Mon Sep 15 21:31:13 2008
From: sjjelinek at gmail.com (Sarah Jelinek)
Date: Mon, 15 Sep 2008 14:31:13 -0600
Subject: [rabbitmq-discuss] got past connection error
In-Reply-To: <48CEBA85.5010408@lshift.net>
References: <48CEAD35.5030407@gmail.com> <48CEB086.8020402@lshift.net>
	<48CEB4B5.5070107@gmail.com> <48CEBA85.5010408@lshift.net>
Message-ID: <48CEC611.2080600@gmail.com>

Hi Matthias,

FYI.. I got past the connection error by running the rabbitmqctl command 
as the rabbitmq user. For now, I am up and running. Still would like to 
figure out why I can't start the server out of the box as I should be 
able to.

Thank you for all your help.

Regards,
sarah



From kyle at threerings.net  Tue Sep 16 02:54:19 2008
From: kyle at threerings.net (Kyle Sampson)
Date: Mon, 15 Sep 2008 18:54:19 -0700
Subject: [rabbitmq-discuss] Problems Closing Channels
Message-ID: <0D4CABC7-DDA5-4F45-A10D-9FF023516C35@threerings.net>

Hello, I'm using the Java RabbitMQ client 1.4.0.  I've noticed that  
there are occasions where calling Channel.close() causes the thread  
the block indefinitely.  Most often this occurs when it's trying to  
close a channel that has already been closed.  However, recently I've  
run into a situation where calling this method will halt the thread  
even after a call to Channel.isOpen() returns true; no other threads  
are closing the channel or the connection.  Any ideas what could be  
causing this?  Thank you for your time.

Kyle Sampson
kyle at threerings.net






From matthias at lshift.net  Tue Sep 16 08:19:47 2008
From: matthias at lshift.net (Matthias Radestock)
Date: Tue, 16 Sep 2008 08:19:47 +0100
Subject: [rabbitmq-discuss] error connecting to rabbitmq node
In-Reply-To: <48CEC254.6050302@gmail.com>
References: <48CEAD35.5030407@gmail.com>
	<48CEB086.8020402@lshift.net>	<48CEB4B5.5070107@gmail.com>
	<48CEBA85.5010408@lshift.net> <48CEC254.6050302@gmail.com>
Message-ID: <48CF5E13.8030102@lshift.net>

Sarah,

Sarah Jelinek wrote:
> I have two places where erlang appears to be installed:
> /usr/lib/erlang
> And:
> /usr/local/lib/erlang.

Did you compile&install Erlang from source? IIRC that installs into 
/usr/local by default.

What does 'which erl' return? If it's /usr/local/bin/erl then it's 
picking up the source-compiled install, which will look for modules in 
/usr/local/lib/erlang and hence not find the rabbit modules.

In that case you have several options:

- uninstall the source-compiled version, leaving you just with the 
debian version

- change the rabbit startup scripts to use /usr/bin/erl and thus pick up 
the debian version

- symlink /usr/local/lib/erlang/lib/rabbitmq... to 
/usr/lib/erlang/lib/rabbitmq..., thus making the rabbit modules 
available in both the source-compiled and debian Erlang version


Matthias.



From 0x6e6562 at gmail.com  Tue Sep 16 08:37:29 2008
From: 0x6e6562 at gmail.com (Ben Hood)
Date: Tue, 16 Sep 2008 08:37:29 +0100
Subject: [rabbitmq-discuss] Problems Closing Channels
In-Reply-To: <0D4CABC7-DDA5-4F45-A10D-9FF023516C35@threerings.net>
References: <0D4CABC7-DDA5-4F45-A10D-9FF023516C35@threerings.net>
Message-ID: <269388e30809160037q4f1ed74ek560dee314da09ba@mail.gmail.com>

Kyle,

On Tue, Sep 16, 2008 at 2:54 AM, Kyle Sampson <kyle at threerings.net> wrote:
> Hello, I'm using the Java RabbitMQ client 1.4.0.  I've noticed that
> there are occasions where calling Channel.close() causes the thread
> the block indefinitely.  Most often this occurs when it's trying to
> close a channel that has already been closed.  However, recently I've
> run into a situation where calling this method will halt the thread
> even after a call to Channel.isOpen() returns true; no other threads
> are closing the channel or the connection.  Any ideas what could be
> causing this?  Thank you for your time.

This sounds like a bug that was recently fixed. Could you check out
the latest mainline version of the Java client and see if that solves
your problem?

To do this, just clone the this repo:

$ hg clone http://hg.rabbitmq.com/rabbitmq-java-client

HTH,

Ben



From anthony-rabbitmq at hogan.id.au  Tue Sep 16 08:43:22 2008
From: anthony-rabbitmq at hogan.id.au (Anthony)
Date: Tue, 16 Sep 2008 17:43:22 +1000
Subject: [rabbitmq-discuss] Access control documentation
Message-ID: <1bf8be120809160043o297d1b76gf072641b142416c7@mail.gmail.com>

Hi,

Recently I've been tasked, from a sysadmin perspective, of managing
the deployment of some RabbitMQ servers. The devs are taking care of
our applications up.. and I need to take care of the server down..

I gotta say, kudos on ease of installation! Debian packages made it real easy..

Now the documentation in the management section talks of virtual hosts
and realms - I'm familiar with the way that Apache can do virtual
hosts, but feel the documentation for Rabbit is a bit sparse in what
exactly is regarded as a virtual host and what a realm does.

Primarily, I've been tasked with seeking out information on the
possibility of, and how if so one might restrict different parties
from either read or write of a given stream.

Would I be right in thinking that this is something perhaps covered in
an AMQP spec document and RabbitMQ just implements it? Am very happy
to be advised to RTFM if someone's willing to tell me where the manual
in question is :D



From matthias at lshift.net  Tue Sep 16 08:44:48 2008
From: matthias at lshift.net (Matthias Radestock)
Date: Tue, 16 Sep 2008 08:44:48 +0100
Subject: [rabbitmq-discuss] Problems Closing Channels
In-Reply-To: <0D4CABC7-DDA5-4F45-A10D-9FF023516C35@threerings.net>
References: <0D4CABC7-DDA5-4F45-A10D-9FF023516C35@threerings.net>
Message-ID: <48CF63F0.201@lshift.net>

Kyle,

Kyle Sampson wrote:
> Hello, I'm using the Java RabbitMQ client 1.4.0.  I've noticed that  
> there are occasions where calling Channel.close() causes the thread  
> the block indefinitely.  Most often this occurs when it's trying to  
> close a channel that has already been closed.

Channel.close() is waiting for the server to respond with AMQP's 
channel.close-ok reply, and by default it will wait indefinitely for 
that reply to arrive. It certainly shouldn't wait when the channel has 
been closed already though...

> However, recently I've run into a situation where calling this method
> will halt the thread even after a call to Channel.isOpen() returns
> true; no other threads are closing the channel or the connection.

Could it be that the server is closing the channel or connection? Even 
so, Channel.close() should return at that point.

We have recently fixed a few bugs in this area of the client code, and 
also extended the API to allow you to specify timeouts when closing a 
channel or connection, and to optionally ignore the case when the 
connection or channel are closed already.

So, if you can, please give the latest version of the Java client from 
our mercurial repository a try:
   hg clone http://hg.rabbitmq.com/rabbitmq-java-client/
or download a zip/tar.gz/bz2 from
 
http://hg.rabbitmq.com/rabbitmq-erlang-client/archive/tip.{zip,tar.gz,bz2}


Matthias.



From 0x6e6562 at gmail.com  Tue Sep 16 09:10:57 2008
From: 0x6e6562 at gmail.com (Ben Hood)
Date: Tue, 16 Sep 2008 09:10:57 +0100
Subject: [rabbitmq-discuss] Access control documentation
In-Reply-To: <1bf8be120809160043o297d1b76gf072641b142416c7@mail.gmail.com>
References: <1bf8be120809160043o297d1b76gf072641b142416c7@mail.gmail.com>
Message-ID: <269388e30809160110v1a64b3d0we8780c4ad485ac89@mail.gmail.com>

Anthony,

On Tue, Sep 16, 2008 at 8:43 AM, Anthony <anthony-rabbitmq at hogan.id.au> wrote:
> Now the documentation in the management section talks of virtual hosts
> and realms - I'm familiar with the way that Apache can do virtual
> hosts, but feel the documentation for Rabbit is a bit sparse in what
> exactly is regarded as a virtual host and what a realm does.

A virtual host is an grouping of objects (essentially exchanges and
queues) that an administrator can set access control privileges for.
There is a more formal definition in the AMQP spec
(http://jira.amqp.org/confluence/download/attachments/720900/amqp0-9.pdf?version=1).

Realms are a finer grained ACL mechanism within a virtual host, which
allow to set read and write privileges.

However, not many implementors of the spec understood realms, so what
happened is that only RabbitMQ actually implemented them.

Because of this, it was decided to drop them from the new version of
the spec, and hence, they have now disappeared from Rabbit as well.

So you are left with vhost based ACLs, for which there is
documentation in the server admin guide.

> Primarily, I've been tasked with seeking out information on the
> possibility of, and how if so one might restrict different parties
> from either read or write of a given stream.

Vhost ACL would do this, but in a coarse grained all or nothing
fashion (realms used to give fine grained control).

> Would I be right in thinking that this is something perhaps covered in
> an AMQP spec document and RabbitMQ just implements it? Am very happy
> to be advised to RTFM if someone's willing to tell me where the manual
> in question is :D

See my comments above.

HTH,

Ben



From matthias at lshift.net  Tue Sep 16 09:22:15 2008
From: matthias at lshift.net (Matthias Radestock)
Date: Tue, 16 Sep 2008 09:22:15 +0100
Subject: [rabbitmq-discuss] Access control documentation
In-Reply-To: <269388e30809160110v1a64b3d0we8780c4ad485ac89@mail.gmail.com>
References: <1bf8be120809160043o297d1b76gf072641b142416c7@mail.gmail.com>
	<269388e30809160110v1a64b3d0we8780c4ad485ac89@mail.gmail.com>
Message-ID: <48CF6CB7.60905@lshift.net>

Anthony,

Ben Hood wrote:
> it was decided to drop them [realms] from the new version of
> the spec, and hence, they have now disappeared from Rabbit as well.

Just to clarify that...

Realms are going to be dropped from the forthcoming 0.91 version of the 
AMQP spec. That spec hasn't been released yet though.

Realms will disappear from the RabbitMQ server in the next version - the 
current 1.4.0 release still has them.


Matthias.



From mdarling at veodia.com  Tue Sep 16 18:53:30 2008
From: mdarling at veodia.com (Matt Darling)
Date: Tue, 16 Sep 2008 10:53:30 -0700
Subject: [rabbitmq-discuss] JMS rabbitmq spring implementation
Message-ID: <C4F540AA.D80%mdarling@veodia.com>

I?m aware attempts have been made to create a proper Spring mapping
implementation for RabbitMQ ? excellent start there Joern.  In a previous
gig, I ended up hacking together a wrapper that was based on some simple
passed in properties at runtime to the rabbitmq java client and even thought
it works well, I really never liked it.  Current gig is using ActiveMQ and
I?d like to see if a better implementation can be had using rabbitmq.

Looking back at the archives, there have been numerous proposals but it
doesn?t appear that anything has stuck.  That said, I?m going to attempt to
implement the AMQPTemplate approach that Alexis suggested and build that
around the JmsTemplate in Spring.  My thought is that once we have a basic
template working, it shouldn?t be much more difficult to extend it and add
new features.  At the same time it?ll still provide the jms interface for
those who are comfortable with it.  My hope is that building out AMQP
connectivity in Spring will be much easier and provide a decent stepping
stone for newcomers.

I?m certainly not making any promises here, but I?ll give it a go and see
what happens.  Ideally, I?ll take the existing rabbitmq java client and
attempt to wrap it in Spring through the JMS interfaces.

This has probably been mentioned/noted prior, but I?ll be referencing some
information located in the following links to make my life easier.

https://wiki.108.redhat.com/wiki/index.php/AMQP-JMS_Mapping
https://wiki.108.redhat.com/wiki/index.php/AMQP:JMS_Specification

I don?t know the full extent of what has been implemented across the board
here, but any insight, info, code, etc would be beneficial.

-matt

Matt Darling
Systems Architect, Business Services
Veodia
1825 S. Grant, #500
San Mateo, CA  94402
(w) 650.349.2100 x3119
(m) 415.505.4623

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20080916/f1207da1/attachment.htm 

From dmitriy.samovskiy at cohesiveft.com  Tue Sep 16 21:34:56 2008
From: dmitriy.samovskiy at cohesiveft.com (Dmitriy Samovskiy)
Date: Tue, 16 Sep 2008 15:34:56 -0500
Subject: [rabbitmq-discuss] Clustering question
Message-ID: <48D01870.20401@cohesiveft.com>


Hi all,

I am running a RabbitMQ cluster - rabbit at host1 and rabbit at host2. After a loss of network 
connectivity between host1 and host2, each node fails to note its counterpart's presence 
even after connectivity is restored.

rabbitmqctl status on host1 says:
{nodes,[rabbit at host1,rabbit at host2]},
{running_nodes,[rabbit at host1]}

rabbitmqctl on host2 says:
{nodes,[rabbit at host1,rabbit at host2]},
{running_nodes,[rabbit at host2]}

This does not change if I start a producer and start publishing, or if I start a consumer. 
I also tried to remsh into nodes and force them to do net_adm:ping of its peer (returns 
pong - connectivity is restored), as described here (http://www.ejabberd.im/node/3164) but 
this did not help either (btw, is this expected behavior?)

I can fix the problem only by restarting a rabbit node on at least one host.

Is there a way to restore cluster connectivity by remsh'ing into a node and calling some 
command? I don't want to restart nodes, or even restart app only if at all possible. Has 
anybody experienced problems like this?



Thanks,
Dmitriy



From peter.kieltyka at gmail.com  Wed Sep 17 02:42:42 2008
From: peter.kieltyka at gmail.com (Peter Kieltyka)
Date: Tue, 16 Sep 2008 21:42:42 -0400
Subject: [rabbitmq-discuss] AS3 AMQP Library
Message-ID: <565FE750-637C-47EB-9138-EABF4132D7F5@gmail.com>

Hey guys,

I was wondering if anyone on the mailing list is using the AS3-AMQP  
library in an application? I'm running into an issue where the client  
library cannot establish a connection to RabbitMQ on a Windows system  
using Flash 9 or above. I've spoken with Ben regarding the issue but  
he's already too spread thin as it is, so I'd like to begin my own  
investigation.

I'd also like to say what a fantastic library it is indeed and how  
clean the code base is. I've been using it strictly with OS X up to  
this point where it's exceeded my expectations.

Thanks.

Regards,

Peter



From anthony-rabbitmq at hogan.id.au  Wed Sep 17 06:32:02 2008
From: anthony-rabbitmq at hogan.id.au (Anthony)
Date: Wed, 17 Sep 2008 15:32:02 +1000
Subject: [rabbitmq-discuss] Access control documentation
In-Reply-To: <269388e30809160110v1a64b3d0we8780c4ad485ac89@mail.gmail.com>
References: <1bf8be120809160043o297d1b76gf072641b142416c7@mail.gmail.com>
	<269388e30809160110v1a64b3d0we8780c4ad485ac89@mail.gmail.com>
Message-ID: <1bf8be120809162232s37b82cecs64e20269667dad6f@mail.gmail.com>

Hi Ben,

> Because of this, it was decided to drop them from the new version of
> the spec, and hence, they have now disappeared from Rabbit as well.
> ...
> So you are left with vhost based ACLs, for which there is
> documentation in the server admin guide.
> ...
> Vhost ACL would do this, but in a coarse grained all or nothing
> fashion (realms used to give fine grained control).

This would sound like a significant step backwards and place a larger
security onus on front-end systems, no?

I've read through the AMQP spec you linked for me (thanks!) - so I'm
clear, is the following right?

1. If a given data stream is to be accessible in a specific vhost, the
source of this data must connect to the given vhost and put it in
there - streams cannot be shared/published/mirrored to multiple vhosts
without an explicit connection by the source to each vhost in its own
connection.

2. If a given stream is in the same vhost you authenticate into, you
have full access with no limitations to it (all or nothing).

Am not bagging RabbitMQ here, as what it sounds like, it's just that
the other implementers didn't quite get it.. But it just seems like a
big loss to lose realms from the spec.

--
Regards,

Anthony Hogan
System Administrator



From 0x6e6562 at gmail.com  Wed Sep 17 07:59:13 2008
From: 0x6e6562 at gmail.com (Ben Hood)
Date: Wed, 17 Sep 2008 07:59:13 +0100
Subject: [rabbitmq-discuss] AS3 AMQP Library
In-Reply-To: <565FE750-637C-47EB-9138-EABF4132D7F5@gmail.com>
References: <565FE750-637C-47EB-9138-EABF4132D7F5@gmail.com>
Message-ID: <269388e30809162359n21f65aa5q60ce0cb20d0d49f7@mail.gmail.com>

Peter,

On Wed, Sep 17, 2008 at 2:42 AM, Peter Kieltyka
<peter.kieltyka at gmail.com> wrote:
> I was wondering if anyone on the mailing list is using the AS3-AMQP
> library in an application? I'm running into an issue where the client
> library cannot establish a connection to RabbitMQ on a Windows system
> using Flash 9 or above. I've spoken with Ben regarding the issue but
> he's already too spread thin as it is, so I'd like to begin my own
> investigation.

I think it's great that you're looking into this one - until now the
library hasn't been tested on Windows :-(

Although I have to prioritize some other Rabbit stuff (and my day
job), I will get around to looking at the issue hopefully within a
week, so don't despair if you don't make any headway.

At the same time I'll review your latest patches and apply them to the
main tree where appropriate.

Ben



From 0x6e6562 at gmail.com  Wed Sep 17 08:19:57 2008
From: 0x6e6562 at gmail.com (Ben Hood)
Date: Wed, 17 Sep 2008 08:19:57 +0100
Subject: [rabbitmq-discuss] Access control documentation
In-Reply-To: <1bf8be120809162232s37b82cecs64e20269667dad6f@mail.gmail.com>
References: <1bf8be120809160043o297d1b76gf072641b142416c7@mail.gmail.com>
	<269388e30809160110v1a64b3d0we8780c4ad485ac89@mail.gmail.com>
	<1bf8be120809162232s37b82cecs64e20269667dad6f@mail.gmail.com>
Message-ID: <269388e30809170019n7093a21ft8d983bf809614ca1@mail.gmail.com>

Anthony,

On Wed, Sep 17, 2008 at 6:32 AM, Anthony <anthony-rabbitmq at hogan.id.au> wrote:
> This would sound like a significant step backwards and place a larger
> security onus on front-end systems, no?

I don't think I quite follow the second half of the question - can you
elaborate?

> I've read through the AMQP spec you linked for me (thanks!) - so I'm
> clear, is the following right?
>
> 1. If a given data stream is to be accessible in a specific vhost, the
> source of this data must connect to the given vhost and put it in
> there - streams cannot be shared/published/mirrored to multiple vhosts
> without an explicit connection by the source to each vhost in its own
> connection.

A vhost is bound to a connection, so you'd need multiple connections
to access multiple vhosts.

> 2. If a given stream is in the same vhost you authenticate into, you
> have full access with no limitations to it (all or nothing).

Correct.

> Am not bagging RabbitMQ here, as what it sounds like, it's just that
> the other implementers didn't quite get it.. But it just seems like a
> big loss to lose realms from the spec.

I think you're raising a fair point that I presume is coming from a
sys admin perspective. However the decision to remove this fine
grained ACL mechanism was that most people felt the benefits of it did
not justify the added complexity of implementing it, and also there
may have been some potential spec interpretation issues in this area.
On the whole, most people who have commented on this have wished for
the simplest thing possible.

I don't think that the other implementers don't get it - I just think
that they though it is tricky to do and hence they just deferred it.

The realm functionality as per the spec is completely implemented in
RabbitMQ 1.4.0, so you can still use it today. But it has already been
removed from the mainline source tree and will hence disappear in the
next release.

To give you an idea of why this area is so fiddly, the realm handling
code in Rabbit 1.4.0 makes up about 12% of the entire code base.

So whilst we welcome the simplification that it brings, we are a
little bit sad that we have spent a lot of time faithfully
implementing a spec only to have to remove all of the code - an
unfortunate waste of time.

But BTW, we always welcome comments and contributions about the spec,
in order to make AMQP more community driven.

HTH,

Ben



From joes.mailing.lists at gmail.com  Thu Sep 18 07:45:05 2008
From: joes.mailing.lists at gmail.com (Novak Joe)
Date: Thu, 18 Sep 2008 15:45:05 +0900
Subject: [rabbitmq-discuss] AS3 AMQP Library
Message-ID: <2e45e80809172345q1a8eb808kce4d09e34c7100ce@mail.gmail.com>

Hi,
  I'm interested in this topic as well, although I'm focusing on the
flex3+STOMP solution,
http://flexonrails.net/?p=106

  I was just about to ask a question in this same vein when I saw the
below thread.  Now I wonder if my question, and the bit of research
I've done pertaining to it, might have some relevance to yours.
  In particular, adobe seems to have ratcheted up its crossdomain
security requirements in flash9:
http://www.adobe.com/devnet/flashplayer/articles/fplayer9_security.html
http://www.adobe.com/devnet/flashplayer/articles/fplayer9_security_05.html
http://www.adobe.com/devnet/flashplayer/articles/fplayer9_security_04.html

This last is probably the most important
http://www.adobe.com/devnet/articles/crossdomain_policy_file_spec.html

  The bits related to socket policy files and xml socket are probably
of the greatest relevance.

   It seems that the latest players, whenever they try to initialize a
new socket connection, first make request for a socket policy file,
where this policy-file-request is 'just the root element of a single
node xml document' that looks like:
<policy-file-request/>
http://www.adobe.com/devnet/articles/crossdomain_policy_file_spec.html#policy-file-request

   If the socket doesn't serve a policy file, in reply to the initial
policy-file-request, the flash app will not be able to establish a
connection, leaving everyone involved rather unhappy.

   So that brings me, in a round-about way, to the initial question I
had prepared:
Is rabbitmq provisioned in any way, either via one of its adapters, or
the as3 client libraries (doubtful), to serve this socket policy file?
 If it is not so equipped, what will need to be done to equip either
rabbitmq, or in my case the STOMP adapter, with the ability to repsond
properly to flash9 policy-file-requests?

    Also, I apologize if I've completely missed the boat on this one!

   Cheers,
     Joe

>> I was wondering if anyone on the mailing list is using the AS3-AMQP
>> library in an application? I'm running into an issue where the client
>> library cannot establish a connection to RabbitMQ on a Windows system
>> using Flash 9 or above. I've spoken with Ben regarding the issue but
>> he's already too spread thin as it is, so I'd like to begin my own
>> investigation.
>I think it's great that you're looking into this one - until now the
>library hasn't been tested on Windows :-(
>Although I have to prioritize some other Rabbit stuff (and my day
>job), I will get around to looking at the issue hopefully within a
>week, so don't despair if you don't make any headway.
>At the same time I'll review your latest patches and apply them to the
>main tree where appropriate.

Ben



From joes.mailing.lists at gmail.com  Thu Sep 18 08:24:51 2008
From: joes.mailing.lists at gmail.com (Novak Joe)
Date: Thu, 18 Sep 2008 16:24:51 +0900
Subject: [rabbitmq-discuss] AS3 AMQP Library
In-Reply-To: <2e45e80809172345q1a8eb808kce4d09e34c7100ce@mail.gmail.com>
References: <2e45e80809172345q1a8eb808kce4d09e34c7100ce@mail.gmail.com>
Message-ID: <2e45e80809180024o7268ce5em3ef708d7b76212ad@mail.gmail.com>

Hi again,
   So following up on my early post, and assuming I'm on the right
track here, I think the solution is probably pretty simple, and that
there is actually no need to serve anything directly from the port
that rabbitmq is running on.  Instead it is sufficient to host a
master socket policy on the adobe-specified socket-policy-request port
843:

Explanation and some test examples:
http://www.adobe.com/devnet/flashplayer/articles/socket_policy_files.html

Another socket policy server, which is claimed to be production grade:
http://www.flash-resources.net/download.html
Which I trawled from the internets via (response #10):
http://flexonrails.net/?p=88

  Hopefully this is sufficient info to resolve the issue.  It still
remains for me to properly test it all.

  Cheers,
    Joe


2008/9/18 Novak Joe <joes.mailing.lists at gmail.com>:
> Hi,
>  I'm interested in this topic as well, although I'm focusing on the
> flex3+STOMP solution,
> http://flexonrails.net/?p=106
>
>  I was just about to ask a question in this same vein when I saw the
> below thread.  Now I wonder if my question, and the bit of research
> I've done pertaining to it, might have some relevance to yours.
>  In particular, adobe seems to have ratcheted up its crossdomain
> security requirements in flash9:
> http://www.adobe.com/devnet/flashplayer/articles/fplayer9_security.html
> http://www.adobe.com/devnet/flashplayer/articles/fplayer9_security_05.html
> http://www.adobe.com/devnet/flashplayer/articles/fplayer9_security_04.html
>
> This last is probably the most important
> http://www.adobe.com/devnet/articles/crossdomain_policy_file_spec.html
>
>  The bits related to socket policy files and xml socket are probably
> of the greatest relevance.
>
>   It seems that the latest players, whenever they try to initialize a
> new socket connection, first make request for a socket policy file,
> where this policy-file-request is 'just the root element of a single
> node xml document' that looks like:
> <policy-file-request/>
> http://www.adobe.com/devnet/articles/crossdomain_policy_file_spec.html#policy-file-request
>
>   If the socket doesn't serve a policy file, in reply to the initial
> policy-file-request, the flash app will not be able to establish a
> connection, leaving everyone involved rather unhappy.
>
>   So that brings me, in a round-about way, to the initial question I
> had prepared:
> Is rabbitmq provisioned in any way, either via one of its adapters, or
> the as3 client libraries (doubtful), to serve this socket policy file?
>  If it is not so equipped, what will need to be done to equip either
> rabbitmq, or in my case the STOMP adapter, with the ability to repsond
> properly to flash9 policy-file-requests?
>
>    Also, I apologize if I've completely missed the boat on this one!
>
>   Cheers,
>     Joe
>
>>> I was wondering if anyone on the mailing list is using the AS3-AMQP
>>> library in an application? I'm running into an issue where the client
>>> library cannot establish a connection to RabbitMQ on a Windows system
>>> using Flash 9 or above. I've spoken with Ben regarding the issue but
>>> he's already too spread thin as it is, so I'd like to begin my own
>>> investigation.
>>I think it's great that you're looking into this one - until now the
>>library hasn't been tested on Windows :-(
>>Although I have to prioritize some other Rabbit stuff (and my day
>>job), I will get around to looking at the issue hopefully within a
>>week, so don't despair if you don't make any headway.
>>At the same time I'll review your latest patches and apply them to the
>>main tree where appropriate.
>
> Ben
>



From peter.kieltyka at gmail.com  Thu Sep 18 16:34:21 2008
From: peter.kieltyka at gmail.com (Peter Kieltyka)
Date: Thu, 18 Sep 2008 11:34:21 -0400
Subject: [rabbitmq-discuss] AS3 AMQP Library
In-Reply-To: <2e45e80809180024o7268ce5em3ef708d7b76212ad@mail.gmail.com>
References: <2e45e80809172345q1a8eb808kce4d09e34c7100ce@mail.gmail.com>
	<2e45e80809180024o7268ce5em3ef708d7b76212ad@mail.gmail.com>
Message-ID: <94488A7B-7413-401D-93ED-F8203A00C729@gmail.com>

Hi Joe,

Thats exactly it. Using the Flash policy server to send the socket  
policy file for an application to authorize socket connections. I'm  
using it in a production environment with AMQP and it works great.  
Adobe has released simple socket servers to serve the policy file in  
two version Python and Perl. The Python version was buggy so I've been  
using the Perl version since but it would be trivial to write this in  
any language as all its doing is transmitting an xml file upon a  
connection to port 843.

Regards,

Peter

On 18-Sep-08, at 3:24 AM, Novak Joe wrote:

> Hi again,
>   So following up on my early post, and assuming I'm on the right
> track here, I think the solution is probably pretty simple, and that
> there is actually no need to serve anything directly from the port
> that rabbitmq is running on.  Instead it is sufficient to host a
> master socket policy on the adobe-specified socket-policy-request port
> 843:
>
> Explanation and some test examples:
> http://www.adobe.com/devnet/flashplayer/articles/socket_policy_files.html
>
> Another socket policy server, which is claimed to be production grade:
> http://www.flash-resources.net/download.html
> Which I trawled from the internets via (response #10):
> http://flexonrails.net/?p=88
>
>  Hopefully this is sufficient info to resolve the issue.  It still
> remains for me to properly test it all.
>
>  Cheers,
>    Joe
>
>
> 2008/9/18 Novak Joe <joes.mailing.lists at gmail.com>:
>> Hi,
>> I'm interested in this topic as well, although I'm focusing on the
>> flex3+STOMP solution,
>> http://flexonrails.net/?p=106
>>
>> I was just about to ask a question in this same vein when I saw the
>> below thread.  Now I wonder if my question, and the bit of research
>> I've done pertaining to it, might have some relevance to yours.
>> In particular, adobe seems to have ratcheted up its crossdomain
>> security requirements in flash9:
>> http://www.adobe.com/devnet/flashplayer/articles/fplayer9_security.html
>> http://www.adobe.com/devnet/flashplayer/articles/fplayer9_security_05.html
>> http://www.adobe.com/devnet/flashplayer/articles/fplayer9_security_04.html
>>
>> This last is probably the most important
>> http://www.adobe.com/devnet/articles/ 
>> crossdomain_policy_file_spec.html
>>
>> The bits related to socket policy files and xml socket are probably
>> of the greatest relevance.
>>
>>  It seems that the latest players, whenever they try to initialize a
>> new socket connection, first make request for a socket policy file,
>> where this policy-file-request is 'just the root element of a single
>> node xml document' that looks like:
>> <policy-file-request/>
>> http://www.adobe.com/devnet/articles/crossdomain_policy_file_spec.html#policy-file-request
>>
>>  If the socket doesn't serve a policy file, in reply to the initial
>> policy-file-request, the flash app will not be able to establish a
>> connection, leaving everyone involved rather unhappy.
>>
>>  So that brings me, in a round-about way, to the initial question I
>> had prepared:
>> Is rabbitmq provisioned in any way, either via one of its adapters,  
>> or
>> the as3 client libraries (doubtful), to serve this socket policy  
>> file?
>> If it is not so equipped, what will need to be done to equip either
>> rabbitmq, or in my case the STOMP adapter, with the ability to  
>> repsond
>> properly to flash9 policy-file-requests?
>>
>>   Also, I apologize if I've completely missed the boat on this one!
>>
>>  Cheers,
>>    Joe
>>
>>>> I was wondering if anyone on the mailing list is using the AS3-AMQP
>>>> library in an application? I'm running into an issue where the  
>>>> client
>>>> library cannot establish a connection to RabbitMQ on a Windows  
>>>> system
>>>> using Flash 9 or above. I've spoken with Ben regarding the issue  
>>>> but
>>>> he's already too spread thin as it is, so I'd like to begin my own
>>>> investigation.
>>> I think it's great that you're looking into this one - until now the
>>> library hasn't been tested on Windows :-(
>>> Although I have to prioritize some other Rabbit stuff (and my day
>>> job), I will get around to looking at the issue hopefully within a
>>> week, so don't despair if you don't make any headway.
>>> At the same time I'll review your latest patches and apply them to  
>>> the
>>> main tree where appropriate.
>>
>> Ben
>>




From holger at wizards.de  Thu Sep 18 17:10:00 2008
From: holger at wizards.de (=?ISO-8859-1?Q?Holger_Hoffst=E4tte?=)
Date: Thu, 18 Sep 2008 18:10:00 +0200
Subject: [rabbitmq-discuss] Question about initial cluster connect &
	client-side cluster awareness
Message-ID: <48D27D58.8020707@wizards.de>


I've been experimenting with a cluster of rabbits (keeping the current
limitations in mind) and was wondering about the client side of things.
How should the problem of the initial connection be approached? As far as
I can tell there are no built-in mechanisms in place to have a client

- dynamically discover a broker or a cluster of nodes on a network

- try to connect to a number of hosts in order to get an initial connection

- be aware of the available cluster nodes via the known_hosts field (as
described in the docs) so that when that node dies, the client can
automatically reconnect to a live member

Would this be an accurate description or am I missing something? I was
happy to see the known_hosts returned (a great first step!) but I am for
now more concerned about initial connection bootstrap in a loosely coupled
environment where the hosts may come and go.

Would love to hear any thoughts on this.

regards
Holger

PS: maybe soemwhat OT but as far as autodiscovery is concerned, Erlang/OTP
 itself does not seem to have any built-in mechanisms for this, right?
Like a node-aware service registry or something. DNS-SD aka zeroconf would
work and be cross-platform/standards-compliant etc. but is not really
sufficient, IMHO.




From dmitriy.samovskiy at cohesiveft.com  Thu Sep 18 17:50:57 2008
From: dmitriy.samovskiy at cohesiveft.com (Dmitriy Samovskiy)
Date: Thu, 18 Sep 2008 11:50:57 -0500
Subject: [rabbitmq-discuss] Question about initial cluster connect
 &	client-side cluster awareness
In-Reply-To: <48D27D58.8020707@wizards.de>
References: <48D27D58.8020707@wizards.de>
Message-ID: <48D286F1.7010400@cohesiveft.com>

Hi Holger,

Holger Hoffst?tte wrote:
> I've been experimenting with a cluster of rabbits (keeping the current
> limitations in mind) and was wondering about the client side of things.
> How should the problem of the initial connection be approached? As far as
> I can tell there are no built-in mechanisms in place to have a client
> 
> - dynamically discover a broker or a cluster of nodes on a network
> 
> - try to connect to a number of hosts in order to get an initial connection
Correct, there seems to be no built-in mechanism for this, probably because it's hard to 
come up with a one-size-fits-all solution for service discovery.

> - be aware of the available cluster nodes via the known_hosts field (as
> described in the docs) so that when that node dies, the client can
> automatically reconnect to a live member
Speaking about known_hosts. There are several issues that I ran into in this area that you 
might want to know.

1. Rabbit populates known_hosts with hostnames as *it* knows them. What I mean by this is 
that if rabbit at host1 knows that its second cluster node runs on 10.1.1.1 and 10.1.1.1 is 
listed in host1:/etc/hosts as "10.1.1.1 foo", it will populate known_hosts with 
"rabbit at host1,rabbit at foo". Note that in this case foo needs to be resolvable by your 
clients as well, otherwise it's useless.

2. known_hosts appears useless if your clients reside in different network segments. What 
I mean by this is consider some clients inside firewall connecting to rabbit as 10.1.1.1 
and clients outside of firewall (from Internet) connecting to rabbit as 216.216.216.216. 
In this case, names appearing in known_hosts needs to be resolvable differently based on 
where client is coming from (there are issues with resolving non-FQDN "foo" outside of 
firewall too). With NAT and VIPs this becomes very difficult to manage for a generic case.

All in all, I personally found the best approach is not to rely on known_hosts at all, and 
tell each client (individually or as a group) IP addresses how they can connect to rabbit. 
I also found connection.redirect response to be useless in this scenario, so I always set 
insist to true when opening a connection. For load balancing, I use tcp level things like 
haproxy instead of AMQP-level techniques. My clients each implement reconnect logic 
individually.

Please note that known_hosts issues I described above are not specific to RabbitMQ. This 
is just the way AMQP (0-8 at least) is - it provides means for cluster node discovery 
after initial bootstrap only if all your clients are in the same network address space and 
have access to the same name resolution services. AMQP experts - I would love to hear your 
opinion on this one.



I am hoping we get more people on this list running rabbit clusters :)


Regards,
Dmitriy Samovskiy




From tonyg at lshift.net  Thu Sep 18 17:59:57 2008
From: tonyg at lshift.net (Tony Garnock-Jones)
Date: Thu, 18 Sep 2008 17:59:57 +0100
Subject: [rabbitmq-discuss] Stomp frame not terminated with null
	character
In-Reply-To: <4cc167ca0809111804s121af456s8b2fa1207e34509c@mail.gmail.com>
References: <4cc167ca0809111804s121af456s8b2fa1207e34509c@mail.gmail.com>
Message-ID: <48D2890D.3060305@lshift.net>

Hi Jonatan,

Jonatan Kallus wrote:
> Problem is that the frames sent back from rabbitmq does not seem to be
> terminated with a null character. The 'CONNECTED' frame ends with an
> empty line and the 'MESSAGE' frame just ends.

That's strange. How have you determined this? The code in 
stomp_frame.erl always generates a NUL byte for transmission, and other 
STOMP clients seem to have no trouble.

> Is this an issue with my configuration or me losing the null character
> in some way between the server and the client?

My guess is the latter, but I have no suggestions as to how it might be 
taking place!

> As a side note, the examples in the stomp protocol definition shows a
> space between <key>: and <value>, whereas the stomp gateway
> interpreted 'login: guest' as a log in try with the username ' guest',
> thus failing.

Good point. This was pointed out recently by someone else, too. It's a 
bug in my STOMP framing implementation, I think (although the protocol 
spec is perhaps a bit ambiguous).

Regards,
   Tony




From tonyg at lshift.net  Thu Sep 18 18:27:01 2008
From: tonyg at lshift.net (Tony Garnock-Jones)
Date: Thu, 18 Sep 2008 18:27:01 +0100
Subject: [rabbitmq-discuss] python stomp examples
In-Reply-To: <221955B5-D006-442C-8631-DEBCA28A56C7@gmail.com>
References: <221955B5-D006-442C-8631-DEBCA28A56C7@gmail.com>
Message-ID: <48D28F65.4010402@lshift.net>

Hi Jason,

Jason Briggs wrote:
> 2.  the stomp protocol is a bit ambiguous about the use of spacing 
> between header key and value.  For example:
> 
>      header: value
>      header:value
> 
> Both forms are used in the stomp protocol examples.  My version of the 
> client used a space -- it appears RabbitMQ doesn't like it.  I've 
> removed the space, and along with the prior fix it appears to work 
> properly now (the latest version is on my site).

Thanks for pointing this out! I think, on balance, it's a bug in my 
framing code. I'm fixing it now.

Regards,
   Tony




From jonatan at heysan.com  Thu Sep 18 18:36:58 2008
From: jonatan at heysan.com (Jonatan Kallus)
Date: Thu, 18 Sep 2008 10:36:58 -0700
Subject: [rabbitmq-discuss] Stomp frame not terminated with null
	character
In-Reply-To: <48D2890D.3060305@lshift.net>
References: <4cc167ca0809111804s121af456s8b2fa1207e34509c@mail.gmail.com>
	<48D2890D.3060305@lshift.net>
Message-ID: <4cc167ca0809181036r725803c0w7d2b27dd96a97e5a@mail.gmail.com>

Thanks for your answer!

Jonatan Kallus wrote:
>
>> Problem is that the frames sent back from rabbitmq does not seem to be
>> terminated with a null character. The 'CONNECTED' frame ends with an
>> empty line and the 'MESSAGE' frame just ends.
>>
>
> That's strange. How have you determined this? The code in stomp_frame.erl
> always generates a NUL byte for transmission, and other STOMP clients seem
> to have no trouble.
>

The read loop in the php stomp client keeps reading until it finds a null
character, and it does not stop until a time out is reached. I tried to
tweak this in a few different ways without any positive results. There might
be something I am missing in the way php handles socket connections and/or
null characters in strings. Either way, the php stomp client doesn't work
with the stomp gateway 'out of the box' but it seems like people are using
it successfully with ActiveMQ or JMS.

I am only going to use the php/stomp connection to send messages into the
queue, so I hardcoded recognition of CONNECTED and RECEIPT for now, that is
propably the only two I will need. (Failing on anything else.)

Below is a copy of a conversation I had on the mailinglist for php stomp. It
suggests that the problem might be that the client is looking for an
ActiveMQ specific ending sequence of 'NULL-NEWLINE', but I tried to correct
that and I am pretty sure that is not the cause:

Michael Caplan wrote:
As an aside, on re-reading the protocol, I'm wondering if our scan for
end of frame is incorrect (or specific to ActiveMQ's implementation).  A
frame is terminated by a \x00, and not \x00 + \n according to the spec:

"...the null indicates the end of the frame."

Mike

Jonatan Kallus wrote:
> Yes, the space between 'login:' and '<username>' was interpreted as
> part of the username.
>

Michael Caplan wrote:
Huh.  That's a tricky one.  The protocol does not specify a space
between the header key:value combinations, but the protocol examples do
use a space.  I'm hesitant to call this a protocol implementation bug on
the client.  I think you should push back on the MQ developers on this
one to.

Best,

Mike
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20080918/ee78e1f8/attachment.htm 

From tonyg at lshift.net  Thu Sep 18 18:43:32 2008
From: tonyg at lshift.net (Tony Garnock-Jones)
Date: Thu, 18 Sep 2008 18:43:32 +0100
Subject: [rabbitmq-discuss] STOMP frame bug fixed (was Re: python stomp
	examples)
In-Reply-To: <48D28F65.4010402@lshift.net>
References: <221955B5-D006-442C-8631-DEBCA28A56C7@gmail.com>
	<48D28F65.4010402@lshift.net>
Message-ID: <48D29344.60606@lshift.net>

Hi all -- changeset 
http://hg.rabbitmq.com/rabbitmq-stomp/rev/34bb23dbd86c fixes the 
problem. Now clients that insert space between the "key:" and "value" 
parts of a STOMP frame header should work, too.

Regards,
   Tony


Tony Garnock-Jones wrote:
> Hi Jason,
> 
> Jason Briggs wrote:
>> 2.  the stomp protocol is a bit ambiguous about the use of spacing 
>> between header key and value.  For example:
>>
>>      header: value
>>      header:value
>>
>> Both forms are used in the stomp protocol examples.  My version of the 
>> client used a space -- it appears RabbitMQ doesn't like it.  I've 
>> removed the space, and along with the prior fix it appears to work 
>> properly now (the latest version is on my site).
> 
> Thanks for pointing this out! I think, on balance, it's a bug in my 
> framing code. I'm fixing it now.
> 
> Regards,
>    Tony
> 
> 
> _______________________________________________
> rabbitmq-discuss mailing list
> rabbitmq-discuss at lists.rabbitmq.com
> http://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss



From tonyg at lshift.net  Thu Sep 18 19:12:22 2008
From: tonyg at lshift.net (Tony Garnock-Jones)
Date: Thu, 18 Sep 2008 19:12:22 +0100
Subject: [rabbitmq-discuss] Stomp frame not terminated with null
	character
In-Reply-To: <4cc167ca0809181036r725803c0w7d2b27dd96a97e5a@mail.gmail.com>
References: <4cc167ca0809111804s121af456s8b2fa1207e34509c@mail.gmail.com>	
	<48D2890D.3060305@lshift.net>
	<4cc167ca0809181036r725803c0w7d2b27dd96a97e5a@mail.gmail.com>
Message-ID: <48D29A06.6040501@lshift.net>

Hi Jonatan,

Jonatan Kallus wrote:
> php stomp client doesn't work with the stomp gateway 'out of the box' 
> but it seems like people are using it successfully with ActiveMQ or JMS.

That's really strange. Could it be something to do with RabbitMQ's use 
of content-length? AFAIK RabbitMQ is slightly odd in that it always 
sends a content-length header. The NUL byte in that situation is kind of 
belt-and-braces.

If you have a link to the php STOMP client's code, I can take a look to 
see if I can spot the problem.

Tony




From jonatan at heysan.com  Thu Sep 18 19:28:41 2008
From: jonatan at heysan.com (Jonatan Kallus)
Date: Thu, 18 Sep 2008 11:28:41 -0700
Subject: [rabbitmq-discuss] Stomp frame not terminated with null
	character
In-Reply-To: <48D29A06.6040501@lshift.net>
References: <4cc167ca0809111804s121af456s8b2fa1207e34509c@mail.gmail.com>
	<48D2890D.3060305@lshift.net>
	<4cc167ca0809181036r725803c0w7d2b27dd96a97e5a@mail.gmail.com>
	<48D29A06.6040501@lshift.net>
Message-ID: <4cc167ca0809181128u4df74df0vccdbadae6af2869f@mail.gmail.com>

Here is the code:
http://stompcli.googlecode.com/files/stompcli-php5-1.0-20080916.tar.gz

Look at lines 516 to 524 in Stomp.php

On Thu, Sep 18, 2008 at 11:12 AM, Tony Garnock-Jones <tonyg at lshift.net>wrote:

> Hi Jonatan,
>
> Jonatan Kallus wrote:
>
>> php stomp client doesn't work with the stomp gateway 'out of the box' but
>> it seems like people are using it successfully with ActiveMQ or JMS.
>>
>
> That's really strange. Could it be something to do with RabbitMQ's use of
> content-length? AFAIK RabbitMQ is slightly odd in that it always sends a
> content-length header. The NUL byte in that situation is kind of
> belt-and-braces.
>
> If you have a link to the php STOMP client's code, I can take a look to see
> if I can spot the problem.
>
> Tony
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20080918/f708d50a/attachment.htm 

From tonyg at lshift.net  Thu Sep 18 19:28:53 2008
From: tonyg at lshift.net (Tony Garnock-Jones)
Date: Thu, 18 Sep 2008 19:28:53 +0100
Subject: [rabbitmq-discuss] Stomp frame not terminated with null
	character
In-Reply-To: <4cc167ca0809181036r725803c0w7d2b27dd96a97e5a@mail.gmail.com>
References: <4cc167ca0809111804s121af456s8b2fa1207e34509c@mail.gmail.com>	
	<48D2890D.3060305@lshift.net>
	<4cc167ca0809181036r725803c0w7d2b27dd96a97e5a@mail.gmail.com>
Message-ID: <48D29DE5.9080804@lshift.net>

Hi again,

Jonatan Kallus wrote:
>     As an aside, on re-reading the protocol, I'm wondering if our scan for
>     end of frame is incorrect (or specific to ActiveMQ's implementation).  A
>     frame is terminated by a \x00, and not \x00 + \n according to the spec:
> 
>     "...the null indicates the end of the frame."

This could well be it. Looking at readFrame from Stomp.php:

   do {
       $read = fgets($this->_socket, $rb);
       if ($read === false) {
           $this->_reconnect();
           return $this->readFrame();
       }
       $data .= $read;
       $len = strlen($data);
   } while (($len < 2 || ! ($data[$len - 2] == "\x00" && $data[$len - 1] 
== "\n")));

Did you try changing that last line to something like

($len < 1 || $data[$len - 1] != "\x00");

?

Tony




From jonatan at heysan.com  Thu Sep 18 19:32:09 2008
From: jonatan at heysan.com (Jonatan Kallus)
Date: Thu, 18 Sep 2008 11:32:09 -0700
Subject: [rabbitmq-discuss] Stomp frame not terminated with null
	character
In-Reply-To: <48D29DE5.9080804@lshift.net>
References: <4cc167ca0809111804s121af456s8b2fa1207e34509c@mail.gmail.com>
	<48D2890D.3060305@lshift.net>
	<4cc167ca0809181036r725803c0w7d2b27dd96a97e5a@mail.gmail.com>
	<48D29DE5.9080804@lshift.net>
Message-ID: <4cc167ca0809181132n56cd397bl9ed28500408b15bc@mail.gmail.com>

I tested that, didn't work.

On Thu, Sep 18, 2008 at 11:28 AM, Tony Garnock-Jones <tonyg at lshift.net>wrote:

> Hi again,
>
> Jonatan Kallus wrote:
>
>>    As an aside, on re-reading the protocol, I'm wondering if our scan for
>>    end of frame is incorrect (or specific to ActiveMQ's implementation).
>>  A
>>    frame is terminated by a \x00, and not \x00 + \n according to the spec:
>>
>>    "...the null indicates the end of the frame."
>>
>
> This could well be it. Looking at readFrame from Stomp.php:
>
>  do {
>      $read = fgets($this->_socket, $rb);
>      if ($read === false) {
>          $this->_reconnect();
>          return $this->readFrame();
>      }
>      $data .= $read;
>      $len = strlen($data);
>  } while (($len < 2 || ! ($data[$len - 2] == "\x00" && $data[$len - 1] ==
> "\n")));
>
> Did you try changing that last line to something like
>
> ($len < 1 || $data[$len - 1] != "\x00");
>
> ?
>
> Tony
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20080918/f456ac95/attachment.htm 

From tonyg at lshift.net  Thu Sep 18 19:53:56 2008
From: tonyg at lshift.net (Tony Garnock-Jones)
Date: Thu, 18 Sep 2008 19:53:56 +0100
Subject: [rabbitmq-discuss] Stomp frame not terminated with null
	character
In-Reply-To: <4cc167ca0809181132n56cd397bl9ed28500408b15bc@mail.gmail.com>
References: <4cc167ca0809111804s121af456s8b2fa1207e34509c@mail.gmail.com>	
	<48D2890D.3060305@lshift.net>	
	<4cc167ca0809181036r725803c0w7d2b27dd96a97e5a@mail.gmail.com>	
	<48D29DE5.9080804@lshift.net>
	<4cc167ca0809181132n56cd397bl9ed28500408b15bc@mail.gmail.com>
Message-ID: <48D2A3C4.1040605@lshift.net>

Aha!

Jonatan Kallus wrote:
>          $read = fgets($this->_socket, $rb);

fgets() reads lines. Maybe try a plain old read? You'll need to buffer 
things between calls to readFrame, I guess.

Tony




From matthias at lshift.net  Thu Sep 18 20:08:30 2008
From: matthias at lshift.net (Matthias Radestock)
Date: Thu, 18 Sep 2008 20:08:30 +0100
Subject: [rabbitmq-discuss] Question about initial cluster
 connect	&	client-side cluster awareness
In-Reply-To: <48D286F1.7010400@cohesiveft.com>
References: <48D27D58.8020707@wizards.de> <48D286F1.7010400@cohesiveft.com>
Message-ID: <48D2A72E.8060606@lshift.net>

Dmitriy,

Dmitriy Samovskiy wrote:
> All in all, I personally found the best approach is not to rely on known_hosts at all, and 
> tell each client (individually or as a group) IP addresses how they can connect to rabbit. 
> I also found connection.redirect response to be useless in this scenario, so I always set 
> insist to true when opening a connection. For load balancing, I use tcp level things like 
> haproxy instead of AMQP-level techniques. My clients each implement reconnect logic 
> individually.

Makes sense.

> Please note that known_hosts issues I described above are not specific to RabbitMQ. This 
> is just the way AMQP (0-8 at least) is - it provides means for cluster node discovery 
> after initial bootstrap only if all your clients are in the same network address space and 
> have access to the same name resolution services. AMQP experts - I would love to hear your 
> opinion on this one.

The clustering support that is part of the AMQP 0-8/9 protocol is really 
rudimentary and underspecified. And the draft 0.91 spec removes it 
completely. RabbitMQ will continue to cluster, and, as you suggest 
above, the existing techniques and techniques to make that transparent 
to the client should work well.

Regards,

Matthias.



From jonatan at heysan.com  Thu Sep 18 20:32:46 2008
From: jonatan at heysan.com (Jonatan Kallus)
Date: Thu, 18 Sep 2008 12:32:46 -0700
Subject: [rabbitmq-discuss] Stomp frame not terminated with null
	character
In-Reply-To: <48D2A3C4.1040605@lshift.net>
References: <4cc167ca0809111804s121af456s8b2fa1207e34509c@mail.gmail.com>
	<48D2890D.3060305@lshift.net>
	<4cc167ca0809181036r725803c0w7d2b27dd96a97e5a@mail.gmail.com>
	<48D29DE5.9080804@lshift.net>
	<4cc167ca0809181132n56cd397bl9ed28500408b15bc@mail.gmail.com>
	<48D2A3C4.1040605@lshift.net>
Message-ID: <4cc167ca0809181232x47388866mdc990487e2825339@mail.gmail.com>

On Thu, Sep 18, 2008 at 11:53 AM, Tony Garnock-Jones <tonyg at lshift.net>wrote:

> Aha!
>
> Jonatan Kallus wrote:
>
>>         $read = fgets($this->_socket, $rb);
>>
>
> fgets() reads lines. Maybe try a plain old read? You'll need to buffer
> things between calls to readFrame, I guess.
>

The difference between fgets and fread in this case is how it decides how
big chunks to read at a time. fgets does not drop the characters that makes
it stop reading, afaik. Newlines and alike is returned as well. Also, the
nulls from other MQs seem to work with fgets. Thanks for your answers
though! I will try to make it work once again later. For now I'll just use
my own implementation that only connects and sends, and fails on any
unexpected answers. That's all I'll need.

>
> Tony
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20080918/3283fc4c/attachment.htm 

From tonyg at lshift.net  Thu Sep 18 20:37:40 2008
From: tonyg at lshift.net (Tony Garnock-Jones)
Date: Thu, 18 Sep 2008 20:37:40 +0100
Subject: [rabbitmq-discuss] Stomp frame not terminated with null
	character
In-Reply-To: <4cc167ca0809181232x47388866mdc990487e2825339@mail.gmail.com>
References: <4cc167ca0809111804s121af456s8b2fa1207e34509c@mail.gmail.com>	
	<48D2890D.3060305@lshift.net>	
	<4cc167ca0809181036r725803c0w7d2b27dd96a97e5a@mail.gmail.com>	
	<48D29DE5.9080804@lshift.net>	
	<4cc167ca0809181132n56cd397bl9ed28500408b15bc@mail.gmail.com>	
	<48D2A3C4.1040605@lshift.net>
	<4cc167ca0809181232x47388866mdc990487e2825339@mail.gmail.com>
Message-ID: <48D2AE04.8090307@lshift.net>

Hi Jonatan,

What I meant is that fgets (at least according to its documentation) 
waits for a newline that will never arrive. Using fread instead will fix 
the problem, but will require you to buffer any unused bytes for use by 
the next invocation of readFrame.

Regards,
   Tony



Jonatan Kallus wrote:
> 
> 
> On Thu, Sep 18, 2008 at 11:53 AM, Tony Garnock-Jones <tonyg at lshift.net 
> <mailto:tonyg at lshift.net>> wrote:
> 
>     Aha!
> 
> 
>     Jonatan Kallus wrote:
> 
>                 $read = fgets($this->_socket, $rb);
> 
> 
>     fgets() reads lines. Maybe try a plain old read? You'll need to
>     buffer things between calls to readFrame, I guess.
> 
> 
> The difference between fgets and fread in this case is how it decides 
> how big chunks to read at a time. fgets does not drop the characters 
> that makes it stop reading, afaik. Newlines and alike is returned as 
> well. Also, the nulls from other MQs seem to work with fgets. Thanks for 
> your answers though! I will try to make it work once again later. For 
> now I'll just use my own implementation that only connects and sends, 
> and fails on any unexpected answers. That's all I'll need.
> 
> 
>     Tony
> 
> 



From jonatan at heysan.com  Thu Sep 18 20:46:56 2008
From: jonatan at heysan.com (Jonatan Kallus)
Date: Thu, 18 Sep 2008 12:46:56 -0700
Subject: [rabbitmq-discuss] Stomp frame not terminated with null
	character
In-Reply-To: <48D2AE04.8090307@lshift.net>
References: <4cc167ca0809111804s121af456s8b2fa1207e34509c@mail.gmail.com>
	<48D2890D.3060305@lshift.net>
	<4cc167ca0809181036r725803c0w7d2b27dd96a97e5a@mail.gmail.com>
	<48D29DE5.9080804@lshift.net>
	<4cc167ca0809181132n56cd397bl9ed28500408b15bc@mail.gmail.com>
	<48D2A3C4.1040605@lshift.net>
	<4cc167ca0809181232x47388866mdc990487e2825339@mail.gmail.com>
	<48D2AE04.8090307@lshift.net>
Message-ID: <4cc167ca0809181246s2dcf58d6s181eac2dd8a31ae5@mail.gmail.com>

Oh, I see, that should solve the problem! I'll quote you and post to the php
stomp list.

On Thu, Sep 18, 2008 at 12:37 PM, Tony Garnock-Jones <tonyg at lshift.net>wrote:

> Hi Jonatan,
>
> What I meant is that fgets (at least according to its documentation) waits
> for a newline that will never arrive. Using fread instead will fix the
> problem, but will require you to buffer any unused bytes for use by the next
> invocation of readFrame.
>
> Regards,
>  Tony
>
>
>
> Jonatan Kallus wrote:
>
>
>>
>> On Thu, Sep 18, 2008 at 11:53 AM, Tony Garnock-Jones <tonyg at lshift.net<mailto:
>> tonyg at lshift.net>> wrote:
>>
>>    Aha!
>>
>>
>>    Jonatan Kallus wrote:
>>
>>                $read = fgets($this->_socket, $rb);
>>
>>
>>    fgets() reads lines. Maybe try a plain old read? You'll need to
>>    buffer things between calls to readFrame, I guess.
>>
>>
>> The difference between fgets and fread in this case is how it decides how
>> big chunks to read at a time. fgets does not drop the characters that makes
>> it stop reading, afaik. Newlines and alike is returned as well. Also, the
>> nulls from other MQs seem to work with fgets. Thanks for your answers
>> though! I will try to make it work once again later. For now I'll just use
>> my own implementation that only connects and sends, and fails on any
>> unexpected answers. That's all I'll need.
>>
>>
>>    Tony
>>
>>
>>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20080918/51171cdf/attachment.htm 

From deldotdr at gmail.com  Thu Sep 18 22:52:27 2008
From: deldotdr at gmail.com (Dorian Raymer)
Date: Thu, 18 Sep 2008 14:52:27 -0700
Subject: [rabbitmq-discuss] txAMQP Help
Message-ID: <ea3c455d0809181452s1ad7a21endeb1027af648c9b7@mail.gmail.com>

Hi,
I was very excited by the recent thread announcing txAMQP! I heart Twisted!
I started playing with the
txamqp_example.py<http://www.nabble.com/attachment/19436045/0/txamqp_example.py>posted
by Esteve, but I'm having trouble getting going.

I'm a rabbitmq newb (having a lot of fun getting started :) and I have
experience with Twisted.

I'm running rabbitmq 1.4.0 with the default database.
When running txamqp_example.py, I used these parameters:
hostname = "localhost",
port = 5672,
vhost = "/",
username = "guest",
password = "guest",
specFile (I tried both amqp.0-8.xml, and 0-9.xml)


The Problem (there is no error message to show...):

I am fairly certain a connection to the server is made; I get a client
object from the ClientFactory, but nothing happens after
client.start(....) is called in the gotClient callback.
Looking at the code, I expected to see things printed when messages are
received.

I know the server is fine because I can run other clients successfully.

Is there any obvious mistake/gotcha that can be quickly pointed
out?...especially something particular to this code.
I tried setting the exchange, queue, and routing_key strings to be the same
as what I've been trying with my other clients; I'm still a little fuzzy on
these, but I thought the actual names didn't matter as long as they are
consistent between the producers and consumers using them.

I'm trying to familiarize myself with the usage patterns I've seen across
the different client libraries (mostly the java client and the py-amqplib).
Any other simple examples using txAMQP would be helpful!
I really want to get this working but I'm lost in uncertainty (I've never
wished for an error message so much...this week ;)

Thanks in advance for an help!
-Dorian
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20080918/2ac51ece/attachment.htm 

From hbayhantopcu at gmail.com  Thu Sep 18 23:57:59 2008
From: hbayhantopcu at gmail.com (Haldun Bayhantopcu)
Date: Fri, 19 Sep 2008 00:57:59 +0200
Subject: [rabbitmq-discuss] Erlang client error
Message-ID: <62293F2E-7621-4B05-9CB2-2D2334CB25A5@gmail.com>

Hi all,

I am trying to use erlang client library (with no prior experience).
It seems to connect to broker, however when I try to declare an
exchange, I get an error message which I totally don't understand.

My try on erlang console:

Erlang (BEAM) emulator version 5.6.3 [source] [smp:2] [async-threads: 
0] [kernel-poll:false]

Eshell V5.6.3  (abort with ^G)
1> Conn = lib_amqp:start_connection("localhost").
{<0.33.0>,network}
2> Channel = lib_amqp:start_channel(Conn).
<0.40.0>
3> lib_amqp:declare_exchange(Channel, <<"test">>).
Connection: Handling exit from <0.40.0> --> {function_clause,
                                               
[{amqp_channel,handle_info,
                                                [{'EXIT',<0.41.0>,
                                                  {badarg,
                                                   [{rabbit_framing,
                                                      
encode_method_fields,1},
                                                     
{rabbit_binary_generator,
                                                      
build_simple_method_frame,
                                                     2},
                                                    {rabbit_writer,
                                                      
internal_send_command_async,
                                                     3},
                                                    {rabbit_writer,
                                                     handle_message,2},
                                                     
{rabbit_writer,mainloop,
                                                     1}]}},
                                                 {channel_state, 
1,<0.33.0>,
[... many many more lines ...]

Thanks in advance,
Haldun.





From rabbitmq-discuss_efine at usa.net  Fri Sep 19 01:10:59 2008
From: rabbitmq-discuss_efine at usa.net (Edwin Fine)
Date: Thu, 18 Sep 2008 20:10:59 -0400
Subject: [rabbitmq-discuss] Erlang client error
In-Reply-To: <62293F2E-7621-4B05-9CB2-2D2334CB25A5@gmail.com>
References: <62293F2E-7621-4B05-9CB2-2D2334CB25A5@gmail.com>
Message-ID: <6c2563b20809181710g4dbfd527o2f218dd1c49ff662@mail.gmail.com>

I'm reposting information I sent a while ago to this list. I'm thinking it
should be in the rmq FAQ. Alexis, you out there?

The best place (IMHO) to look at how to program Erlang clients for RabbitMQ
is at the test code that comes with the client. It does pretty much
everything basic and I found it fairly easy to understand.Take a look at
test_util.erl (that's what I did to figure out how things work). The Erlang
client is downloadable from the RabbitMQ web site.

Also, you can search the RabbitMQ mailing list archives for answers to many
questions here:

http://www.nabble.com/RabbitMQ-f25704.html

Hope this helps.

On Thu, Sep 18, 2008 at 6:57 PM, Haldun Bayhantopcu
<hbayhantopcu at gmail.com>wrote:

> Hi all,
>
> I am trying to use erlang client library (with no prior experience).
> It seems to connect to broker, however when I try to declare an
> exchange, I get an error message which I totally don't understand.
>
> My try on erlang console:
>
> Erlang (BEAM) emulator version 5.6.3 [source] [smp:2] [async-threads:
> 0] [kernel-poll:false]
>
> Eshell V5.6.3  (abort with ^G)
> 1> Conn = lib_amqp:start_connection("localhost").
> {<0.33.0>,network}
> 2> Channel = lib_amqp:start_channel(Conn).
> <0.40.0>
> 3> lib_amqp:declare_exchange(Channel, <<"test">>).
> Connection: Handling exit from <0.40.0> --> {function_clause,
>
> [{amqp_channel,handle_info,
>                                                [{'EXIT',<0.41.0>,
>                                                  {badarg,
>                                                   [{rabbit_framing,
>
> encode_method_fields,1},
>
> {rabbit_binary_generator,
>
> build_simple_method_frame,
>                                                     2},
>                                                    {rabbit_writer,
>
> internal_send_command_async,
>                                                     3},
>                                                    {rabbit_writer,
>                                                     handle_message,2},
>
> {rabbit_writer,mainloop,
>                                                     1}]}},
>                                                 {channel_state,
> 1,<0.33.0>,
> [... many many more lines ...]
>
> Thanks in advance,
> Haldun.
>
>
>
> _______________________________________________
> rabbitmq-discuss mailing list
> rabbitmq-discuss at lists.rabbitmq.com
> http://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20080918/9eb77030/attachment.htm 

From matthias at lshift.net  Fri Sep 19 08:11:27 2008
From: matthias at lshift.net (Matthias Radestock)
Date: Fri, 19 Sep 2008 08:11:27 +0100
Subject: [rabbitmq-discuss] Clustering question
In-Reply-To: <48D01870.20401@cohesiveft.com>
References: <48D01870.20401@cohesiveft.com>
Message-ID: <48D3509F.3000001@lshift.net>

Dmitriy,

Dmitriy Samovskiy wrote:
  > I am running a RabbitMQ cluster - rabbit at host1 and rabbit at host2. 
After a loss of network
> connectivity between host1 and host2, each node fails to note its counterpart's presence 
> even after connectivity is restored.

Network partitioning may leave mnesia in a state where it needs help to 
join up the cluster. See 
http://www.erlang.org/doc/apps/mnesia/Mnesia_chap7.html#6.7

Were there any mnesia-related errors in the logs?


Matthias.



From esteve at sindominio.net  Fri Sep 19 09:38:27 2008
From: esteve at sindominio.net (Esteve Fernandez)
Date: Fri, 19 Sep 2008 10:38:27 +0200
Subject: [rabbitmq-discuss] txAMQP Help
In-Reply-To: <ea3c455d0809181452s1ad7a21endeb1027af648c9b7@mail.gmail.com>
References: <ea3c455d0809181452s1ad7a21endeb1027af648c9b7@mail.gmail.com>
Message-ID: <200809191038.27943.esteve@sindominio.net>

Hi Dorian, thanks for trying txAMQP!

El Jueves 18 Septiembre 2008 23:52:27 Dorian Raymer escribi?:
> Hi,
> I was very excited by the recent thread announcing txAMQP! I heart Twisted!
> I started playing with the
> txamqp_example.py<http://www.nabble.com/attachment/19436045/0/txamqp_exampl
>e.py>posted by Esteve, but I'm having trouble getting going.
>
> I'm a rabbitmq newb (having a lot of fun getting started :) and I have
> experience with Twisted.
>
> I'm running rabbitmq 1.4.0 with the default database.
> When running txamqp_example.py, I used these parameters:
> hostname = "localhost",
> port = 5672,
> vhost = "/",
> username = "guest",
> password = "guest",
> specFile (I tried both amqp.0-8.xml, and 0-9.xml)

Did you use the spec files that were shipped with txAMQP or the official 
ones[1]?

Note that there are interoperability issues between the Qpid Python libraries 
and RabbitMQ. From http://www.rabbitmq.com/interoperability.html:

"Note that the 0-8 spec file that comes with the test suite is different from 
the official spec."

> The Problem (there is no error message to show...):

What's in the rabbit.log file? When I wrote that example, I noticed that 
RabbitMQ couldn't decode the basic.consume frame:

connection <0.202.0> (running), channel 1 - error:
{amqp,frame_error,
      "cannot decode 
<<0,0,12,116,101,115,116,45,113,117,101,117,101,45,49,0,0,0,0,0,0>>",
      'basic.consume'}

however, using the official spec fixed the issue.

Cheers.

1 - http://jira.amqp.org/confluence/display/AMQP/Download



From 0x6e6562 at gmail.com  Fri Sep 19 10:02:06 2008
From: 0x6e6562 at gmail.com (Ben Hood)
Date: Fri, 19 Sep 2008 10:02:06 +0100
Subject: [rabbitmq-discuss] Erlang client error
In-Reply-To: <62293F2E-7621-4B05-9CB2-2D2334CB25A5@gmail.com>
References: <62293F2E-7621-4B05-9CB2-2D2334CB25A5@gmail.com>
Message-ID: <269388e30809190202g6ea3a8e2y8260d0fe632ee635@mail.gmail.com>

Hey Haldun,

On Thu, Sep 18, 2008 at 11:57 PM, Haldun Bayhantopcu
<hbayhantopcu at gmail.com> wrote:
> 3> lib_amqp:declare_exchange(Channel, <<"test">>).
> Connection: Handling exit from <0.40.0> --> {function_clause,
>
> [{amqp_channel,handle_info,
>                                                [{'EXIT',<0.41.0>,
>                                                  {badarg,
>                                                   [{rabbit_framing,
>

Can you describe your setup a little more - what version of the client
and the server are you using?

Ben



From 0x6e6562 at gmail.com  Fri Sep 19 12:53:14 2008
From: 0x6e6562 at gmail.com (Ben Hood)
Date: Fri, 19 Sep 2008 12:53:14 +0100
Subject: [rabbitmq-discuss] Access control documentation
In-Reply-To: <269388e30809170019n7093a21ft8d983bf809614ca1@mail.gmail.com>
References: <1bf8be120809160043o297d1b76gf072641b142416c7@mail.gmail.com>
	<269388e30809160110v1a64b3d0we8780c4ad485ac89@mail.gmail.com>
	<1bf8be120809162232s37b82cecs64e20269667dad6f@mail.gmail.com>
	<269388e30809170019n7093a21ft8d983bf809614ca1@mail.gmail.com>
Message-ID: <269388e30809190453y269af1derf9bbc7dff786b1e6@mail.gmail.com>

On Wed, Sep 17, 2008 at 8:19 AM, Ben Hood <0x6e6562 at gmail.com> wrote:
>> Am not bagging RabbitMQ here, as what it sounds like, it's just that
>> the other implementers didn't quite get it.. But it just seems like a
>> big loss to lose realms from the spec.

This thread has sparked off an internal disucussion about what is the
best thing to do with realms and tickets given that

1. They were going to be deleted from the spec;
2. We already had a lot of functionality that could have used
othogonally to the protocol.

Whilst we did already have a lot of code that implemented ACLs in a
way that second guessed the intentions of the original spec, this code
wasn't necessarily totally correct.

Furthermore, the intentions of realms and their subsequent
implementation was also not necessarily conceptually sound.

Hence the decision to remove realms completely seems like the correct
way to go in the short term, because, as much as anything, it
simplifies the server codebase.

However, this does not necessarily mean the book on security
administration in Rabbit is closed, just this particular chapter.

If anybody in the community feels that there is a significant value
add in providing more refined security mechanisms (e.g. using ACLs,
capabilities or something else), then let the discussion begin.

Due to my priorities, I'm not going to lead this discussion, or write
any code for it in the short term, but feel free to use this list as a
forum.

Ben



From hbayhantopcu at gmail.com  Fri Sep 19 14:14:03 2008
From: hbayhantopcu at gmail.com (Haldun Bayhantopcu)
Date: Fri, 19 Sep 2008 15:14:03 +0200
Subject: [rabbitmq-discuss] Erlang client error
In-Reply-To: <269388e30809190202g6ea3a8e2y8260d0fe632ee635@mail.gmail.com>
References: <62293F2E-7621-4B05-9CB2-2D2334CB25A5@gmail.com>
	<269388e30809190202g6ea3a8e2y8260d0fe632ee635@mail.gmail.com>
Message-ID: <92ADFA1A-5AD2-4EF7-8C89-758565BAD8B5@gmail.com>

Erlang 5.6.3 running on Mac OS X 10.5.4
Rabbitmq_server 1.4.0
rabbitmq-erlang-client: just checked out from mercurial repository.

On Sep 19, 2008, at 11:02 AM, Ben Hood wrote:

> Hey Haldun,
>
> On Thu, Sep 18, 2008 at 11:57 PM, Haldun Bayhantopcu
> <hbayhantopcu at gmail.com> wrote:
>> 3> lib_amqp:declare_exchange(Channel, <<"test">>).
>> Connection: Handling exit from <0.40.0> --> {function_clause,
>>
>> [{amqp_channel,handle_info,
>>                                               [{'EXIT',<0.41.0>,
>>                                                 {badarg,
>>                                                  [{rabbit_framing,
>>
>
> Can you describe your setup a little more - what version of the client
> and the server are you using?
>
> Ben




From 0x6e6562 at gmail.com  Fri Sep 19 13:22:37 2008
From: 0x6e6562 at gmail.com (Ben Hood)
Date: Fri, 19 Sep 2008 13:22:37 +0100
Subject: [rabbitmq-discuss] Erlang client and supervision trees
Message-ID: <269388e30809190522s7b2109e8y7f4a513bc86c6579@mail.gmail.com>

Anders,

(Hope you don't mind that I'm cc'ing the Rabbit list)

I've given your question about how to integrate a supervision tree
into the Erlang client some consideration.

If you want to supervise your AMQP consumers in a tree, you could pass
a reference to the existing connection, an existing channel or a new
channel into the start function of the child specification.

However, this may not help you when a consumer dies. Sure, depending
on the strategy, you could get the supervisor to start a new worker,
but AFAIK there is no callback in which you could perform any
housekeeping (e.g. unsubscribing a dead consumer).

So you may want to use a monitor to keep track of this.

Be aware that the client does not monitor any consumers or perform any
cleanup - the client is simply a mouthpiece to the server, it does not
maintain your application for you.

If you are interested in OTP best practices on this topic, it may be
an idea to start a thread on the erlang questions list to get a more
general perspective.

HTH,

Ben



From 0x6e6562 at gmail.com  Fri Sep 19 15:50:11 2008
From: 0x6e6562 at gmail.com (Ben Hood)
Date: Fri, 19 Sep 2008 15:50:11 +0100
Subject: [rabbitmq-discuss] Erlang client error
In-Reply-To: <92ADFA1A-5AD2-4EF7-8C89-758565BAD8B5@gmail.com>
References: <62293F2E-7621-4B05-9CB2-2D2334CB25A5@gmail.com>
	<269388e30809190202g6ea3a8e2y8260d0fe632ee635@mail.gmail.com>
	<92ADFA1A-5AD2-4EF7-8C89-758565BAD8B5@gmail.com>
Message-ID: <269388e30809190750k4e4a3562yf5df9db07a2440f5@mail.gmail.com>

Haldun,

On Fri, Sep 19, 2008 at 2:14 PM, Haldun Bayhantopcu
<hbayhantopcu at gmail.com> wrote:
> Erlang 5.6.3 running on Mac OS X 10.5.4
> Rabbitmq_server 1.4.0
> rabbitmq-erlang-client: just checked out from mercurial repository.

The problem you are seeing is that the tip version of the Erlang
client in hg depends on the tip of the current default branch of the
server :-(

This is because until now, the Erlang client has been largely
experimental, but now to the growth in interest, we are promoting it
to a properly packaged, versioned and supported client.

However, we still have some housekeeping to do before this will be
formally released, but this shouldn't take too long.

Until then, you are going to have to either check out the latest
version of the server default branch, or alternatively, in the client,
step back in time a month or so.

HTH,

Ben



From dmitriy.samovskiy at cohesiveft.com  Fri Sep 19 16:59:50 2008
From: dmitriy.samovskiy at cohesiveft.com (Dmitriy Samovskiy)
Date: Fri, 19 Sep 2008 10:59:50 -0500
Subject: [rabbitmq-discuss] Clustering question
In-Reply-To: <48D3509F.3000001@lshift.net>
References: <48D01870.20401@cohesiveft.com> <48D3509F.3000001@lshift.net>
Message-ID: <48D3CC76.3040904@cohesiveft.com>

Hi Matthias,

Matthias Radestock wrote:
> Dmitriy Samovskiy wrote:
>  > I am running a RabbitMQ cluster - rabbit at host1 and rabbit at host2. 
> After a loss of network
>> connectivity between host1 and host2, each node fails to note its 
>> counterpart's presence even after connectivity is restored.
> 
> Network partitioning may leave mnesia in a state where it needs help to 
> join up the cluster. See 
> http://www.erlang.org/doc/apps/mnesia/Mnesia_chap7.html#6.7
Thanks a lot for the pointer.


> Were there any mnesia-related errors in the logs?
Yes, I see ** ERROR ** mnesia_event got {inconsistent_database, 
running_partitioned_network in rabbit.log. My bad for writing to the list without looking 
in the logs...


I will revisit this problem next week, and report back how it goes.


- Dmitriy



From aconbere at gmail.com  Fri Sep 19 19:34:51 2008
From: aconbere at gmail.com (anders conbere)
Date: Fri, 19 Sep 2008 11:34:51 -0700
Subject: [rabbitmq-discuss] The relationship of Channels to Consumers
Message-ID: <8ca3fbe80809191134y4290d47ej1da8d96293e843e0@mail.gmail.com>

When building consumers dynamically it's possible to either create a
new channel for them or to reuse an old one, or to use a pool of them.
I'm wondering if anyone knows any good practices for dealing with that
relationship. Is the building channel call expensive? Are channels
capable of handling multiple streams and thus a good fit for use
across many consumers.

As I understand it channels are processes on the server side that
store the state of the connection and help in some way with
communicating requests and responses. But beyond that I'm just not
clear about what to do with them.

~ Anders



From hbayhantopcu at gmail.com  Fri Sep 19 21:13:20 2008
From: hbayhantopcu at gmail.com (Haldun Bayhantopcu)
Date: Fri, 19 Sep 2008 22:13:20 +0200
Subject: [rabbitmq-discuss] Erlang client error
In-Reply-To: <269388e30809190750k4e4a3562yf5df9db07a2440f5@mail.gmail.com>
References: <62293F2E-7621-4B05-9CB2-2D2334CB25A5@gmail.com>
	<269388e30809190202g6ea3a8e2y8260d0fe632ee635@mail.gmail.com>
	<92ADFA1A-5AD2-4EF7-8C89-758565BAD8B5@gmail.com>
	<269388e30809190750k4e4a3562yf5df9db07a2440f5@mail.gmail.com>
Message-ID: <B208C834-106A-4DEB-9B32-D449B89ECF89@gmail.com>

Ben,

I just checked out rabbitmq-server and trying to build with
following commands, and I got again an error:

$ hg clone http://hg.rabbitmq.com/rabbitmq-server/
$ cd rabbitmq-server
$ make
make: *** No rule to make target `codegen/amqp_codegen.py', needed by  
`src/rabbit_framing.erl'.  Stop.

Any advice?
Thanks.

Haldun.

On Sep 19, 2008, at 4:50 PM, Ben Hood wrote:

> Haldun,
>
> On Fri, Sep 19, 2008 at 2:14 PM, Haldun Bayhantopcu
> <hbayhantopcu at gmail.com> wrote:
>> Erlang 5.6.3 running on Mac OS X 10.5.4
>> Rabbitmq_server 1.4.0
>> rabbitmq-erlang-client: just checked out from mercurial repository.
>
> The problem you are seeing is that the tip version of the Erlang
> client in hg depends on the tip of the current default branch of the
> server :-(
>
> This is because until now, the Erlang client has been largely
> experimental, but now to the growth in interest, we are promoting it
> to a properly packaged, versioned and supported client.
>
> However, we still have some housekeeping to do before this will be
> formally released, but this shouldn't take too long.
>
> Until then, you are going to have to either check out the latest
> version of the server default branch, or alternatively, in the client,
> step back in time a month or so.
>
> HTH,
>
> Ben




From holger at wizards.de  Fri Sep 19 20:24:54 2008
From: holger at wizards.de (=?ISO-8859-1?Q?Holger_Hoffst=E4tte?=)
Date: Fri, 19 Sep 2008 21:24:54 +0200
Subject: [rabbitmq-discuss] Erlang client error
In-Reply-To: <B208C834-106A-4DEB-9B32-D449B89ECF89@gmail.com>
References: <62293F2E-7621-4B05-9CB2-2D2334CB25A5@gmail.com>	<269388e30809190202g6ea3a8e2y8260d0fe632ee635@mail.gmail.com>	<92ADFA1A-5AD2-4EF7-8C89-758565BAD8B5@gmail.com>	<269388e30809190750k4e4a3562yf5df9db07a2440f5@mail.gmail.com>
	<B208C834-106A-4DEB-9B32-D449B89ECF89@gmail.com>
Message-ID: <48D3FC86.9000704@wizards.de>

Haldun Bayhantopcu wrote:
> I just checked out rabbitmq-server and trying to build with
> following commands, and I got again an error:
> 
> $ hg clone http://hg.rabbitmq.com/rabbitmq-server/
> $ cd rabbitmq-server
> $ make
> make: *** No rule to make target `codegen/amqp_codegen.py', needed by  
> `src/rabbit_framing.erl'.  Stop.
> 
> Any advice?

You also need to checkout the -codegen project to the same directory as
the -server project. It is required & referenced during the build.

Holger



From hbayhantopcu at gmail.com  Fri Sep 19 21:45:13 2008
From: hbayhantopcu at gmail.com (Haldun Bayhantopcu)
Date: Fri, 19 Sep 2008 22:45:13 +0200
Subject: [rabbitmq-discuss] Erlang client error
In-Reply-To: <48D3FC86.9000704@wizards.de>
References: <62293F2E-7621-4B05-9CB2-2D2334CB25A5@gmail.com>	<269388e30809190202g6ea3a8e2y8260d0fe632ee635@mail.gmail.com>	<92ADFA1A-5AD2-4EF7-8C89-758565BAD8B5@gmail.com>	<269388e30809190750k4e4a3562yf5df9db07a2440f5@mail.gmail.com>
	<B208C834-106A-4DEB-9B32-D449B89ECF89@gmail.com>
	<48D3FC86.9000704@wizards.de>
Message-ID: <8E7231F7-8B35-4B26-B8E5-23CA99CFFA17@gmail.com>

Ok, now it compiled and installed. However the I'm getting
the same error from erlang client.

Haldun.

On Sep 19, 2008, at 9:24 PM, Holger Hoffst?tte wrote:

> Haldun Bayhantopcu wrote:
>> I just checked out rabbitmq-server and trying to build with
>> following commands, and I got again an error:
>>
>> $ hg clone http://hg.rabbitmq.com/rabbitmq-server/
>> $ cd rabbitmq-server
>> $ make
>> make: *** No rule to make target `codegen/amqp_codegen.py', needed by
>> `src/rabbit_framing.erl'.  Stop.
>>
>> Any advice?
>
> You also need to checkout the -codegen project to the same directory  
> as
> the -server project. It is required & referenced during the build.
>
> Holger
>
> _______________________________________________
> rabbitmq-discuss mailing list
> rabbitmq-discuss at lists.rabbitmq.com
> http://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss




From 0x6e6562 at gmail.com  Fri Sep 19 20:58:22 2008
From: 0x6e6562 at gmail.com (Ben Hood)
Date: Fri, 19 Sep 2008 20:58:22 +0100
Subject: [rabbitmq-discuss] Erlang client error
In-Reply-To: <8E7231F7-8B35-4B26-B8E5-23CA99CFFA17@gmail.com>
References: <62293F2E-7621-4B05-9CB2-2D2334CB25A5@gmail.com>
	<269388e30809190202g6ea3a8e2y8260d0fe632ee635@mail.gmail.com>
	<92ADFA1A-5AD2-4EF7-8C89-758565BAD8B5@gmail.com>
	<269388e30809190750k4e4a3562yf5df9db07a2440f5@mail.gmail.com>
	<B208C834-106A-4DEB-9B32-D449B89ECF89@gmail.com>
	<48D3FC86.9000704@wizards.de>
	<8E7231F7-8B35-4B26-B8E5-23CA99CFFA17@gmail.com>
Message-ID: <269388e30809191258n17d68a5epfe06165abe869f17@mail.gmail.com>

Haldun,

On Fri, Sep 19, 2008 at 9:45 PM, Haldun Bayhantopcu
<hbayhantopcu at gmail.com> wrote:
> Ok, now it compiled and installed. However the I'm getting
> the same error from erlang client.

Have you done a clean build of the client after having built the tip
of the default branch of the server source tree?

Ben



From hbayhantopcu at gmail.com  Fri Sep 19 22:10:07 2008
From: hbayhantopcu at gmail.com (Haldun Bayhantopcu)
Date: Fri, 19 Sep 2008 23:10:07 +0200
Subject: [rabbitmq-discuss] Erlang client error
In-Reply-To: <269388e30809191258n17d68a5epfe06165abe869f17@mail.gmail.com>
References: <62293F2E-7621-4B05-9CB2-2D2334CB25A5@gmail.com>
	<269388e30809190202g6ea3a8e2y8260d0fe632ee635@mail.gmail.com>
	<92ADFA1A-5AD2-4EF7-8C89-758565BAD8B5@gmail.com>
	<269388e30809190750k4e4a3562yf5df9db07a2440f5@mail.gmail.com>
	<B208C834-106A-4DEB-9B32-D449B89ECF89@gmail.com>
	<48D3FC86.9000704@wizards.de>
	<8E7231F7-8B35-4B26-B8E5-23CA99CFFA17@gmail.com>
	<269388e30809191258n17d68a5epfe06165abe869f17@mail.gmail.com>
Message-ID: <DB27C311-F285-4052-9464-6DD91352307F@gmail.com>

Hi Ben,

A clean build of everything solved the problem.

Thanks,
Haldun.

On Sep 19, 2008, at 9:58 PM, Ben Hood wrote:

> Haldun,
>
> On Fri, Sep 19, 2008 at 9:45 PM, Haldun Bayhantopcu
> <hbayhantopcu at gmail.com> wrote:
>> Ok, now it compiled and installed. However the I'm getting
>> the same error from erlang client.
>
> Have you done a clean build of the client after having built the tip
> of the default branch of the server source tree?
>
> Ben




From 0x6e6562 at gmail.com  Sat Sep 20 00:40:06 2008
From: 0x6e6562 at gmail.com (Ben Hood)
Date: Sat, 20 Sep 2008 00:40:06 +0100
Subject: [rabbitmq-discuss] The relationship of Channels to Consumers
In-Reply-To: <8ca3fbe80809191134y4290d47ej1da8d96293e843e0@mail.gmail.com>
References: <8ca3fbe80809191134y4290d47ej1da8d96293e843e0@mail.gmail.com>
Message-ID: <269388e30809191640k7f1336a3l98dfc85f89e864ce@mail.gmail.com>

Anders,

On Fri, Sep 19, 2008 at 7:34 PM, anders conbere <aconbere at gmail.com> wrote:
> When building consumers dynamically it's possible to either create a
> new channel for them or to reuse an old one, or to use a pool of them.
> I'm wondering if anyone knows any good practices for dealing with that
> relationship. Is the building channel call expensive?

Not particularly, should scale quite well. Obviously there is a finite
cost, but this is a constant factor is probably negligible.

> Are channels
> capable of handling multiple streams and thus a good fit for use
> across many consumers.

If your consumers are read-only (see comments below), this will work.

You might want to consider the application semantics of connecting
multiple consumers to a single channel. By sharing a channel, you
automatically introduce an implicit binding between each consumer,
because any of them cause the channel to close (either by closing the
channel explicitly or in the case of an invalid command, the broker
may forcefully close the entire channel). You may want these
semantics, or you may not, it depends on your application.

I wouldn't bring it down to a decision based on cost though - as
indicated before, this is most probably going to be an insignificant
consideration.

>
> As I understand it channels are processes on the server side that
> store the state of the connection and help in some way with
> communicating requests and responses. But beyond that I'm just not
> clear about what to do with them.

The wisdom I'm trying to impart on what a channel is and how to use it
from a client perspective follows the logic that I'm describing in the
draft of an upcoming article (available soon, when I get my act
together):

[...]
Although this is not stated explicitly in the protocol, a channel is
the smallest unit of parallelism in AMQP. You should bind an AMQP
channel to a client thread, so a channel is managed as a thread-local
object.

In the AMQP protocol, channels were designed for multiplexing the
sending of multiple unrelated messages from within a single physical
transport, for example from within a single TCP connection. This
mechanism forms the basis of parallel execution of operations that use
a single AMQP client instance.
[...]

However, you are asking about read-only access, so thread safety from
a channel perspective should not be an issue.

Moreover, you are using Erlang, where thread safety is by and large an
non-issue anyway.

HTH,

Ben



From 0x6e6562 at gmail.com  Sat Sep 20 00:46:40 2008
From: 0x6e6562 at gmail.com (Ben Hood)
Date: Sat, 20 Sep 2008 00:46:40 +0100
Subject: [rabbitmq-discuss] Clustering question
In-Reply-To: <48D3CC76.3040904@cohesiveft.com>
References: <48D01870.20401@cohesiveft.com> <48D3509F.3000001@lshift.net>
	<48D3CC76.3040904@cohesiveft.com>
Message-ID: <269388e30809191646x3c298082x7438c61e1bc3fcc6@mail.gmail.com>

Dmitriy,

On Fri, Sep 19, 2008 at 4:59 PM, Dmitriy Samovskiy
<dmitriy.samovskiy at cohesiveft.com> wrote:
>> Were there any mnesia-related errors in the logs?
> Yes, I see ** ERROR ** mnesia_event got {inconsistent_database,
> running_partitioned_network in rabbit.log. My bad for writing to the list without looking
> in the logs...

Just FYI - don't know if you saw this discussion on Erlang questions:
http://www.nabble.com/Network-partition-scenario-td19442875.html

Ben



From dialtone at gmail.com  Sat Sep 20 09:56:01 2008
From: dialtone at gmail.com (Valentino Volonghi)
Date: Sat, 20 Sep 2008 01:56:01 -0700
Subject: [rabbitmq-discuss] [Minimum Air Induction] Introducing Shovel:
	An AMQP Relay
In-Reply-To: <269388e30809200013m2564f264n97c6ec6834edef21@mail.gmail.com>
References: <10652705.176451221778705492.JavaMail.root@web4>
	<269388e30809191702k1182eac8k656d0c3bcde92cb2@mail.gmail.com>
	<E066ABBA-2320-43BB-869A-BD31ACDDCF8E@gmail.com>
	<269388e30809200013m2564f264n97c6ec6834edef21@mail.gmail.com>
Message-ID: <90169A17-9B0C-46EC-9396-F47DBC1B1115@gmail.com>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

Hi all,
small intro: I'm trying to use Shovel (LINK HERE) to create a push- 
based system
that can move loglines from a remote location to a centralized  
storage, being a
remote location means that messages have to cross the internet.


On Sep 20, 2008, at 12:13 AM, Ben Hood wrote:

> Valentino,
>
> On Sat, Sep 20, 2008 at 1:57 AM, Valentino Volonghi <dialtone at gmail.com 
> > wrote:
>> Well... I'm currently rewriting the lib_shovel.erl file using a  
>> cleaner
>> version of it.
>
> See comment in previous email.

Yes, I am tracking tip, I didn't notice the big changes in lib_amqp.erl
so I'll refactor my code to use them.

>> SOURCE ---> LOCAL RABBITMQ (FORWARD) -----> CENTRAL RABBITMQ
>>
>> And in CENTRAL RABBITMQ there would be all the listeners.
>
> Sounds like a good idea.

I hope so :). The main problem is the absolute necessity to not lose
any single one of the messages. Nothing can be lost.

>> The other thing I need is absolute reliability, if a message is not
>> transmitted don't remove it from
>> the queue and ack it when it is delivered. And if a connection is  
>> dropped
>> instead of crashing it
>> should retry to connect and not deliver until it's connected back.
>
> Sounds reasonable. Currently Shovel does not have any reliability.
> Maybe you can elaborate on the concrete scenarios you are trying to
> cover with this.

Sure, basically the source of loglines would be a mochiweb server that  
for
relevant requests would send messages to a known exchange.

Here is already the first 'problem', if the known exchange is down the  
line
would be lost forever, this is simple enough though and rabbitmq would
run embedded in mochiweb together with shovel. Every queue durable and
every message too. In this case if mochiweb fails I won't have to  
worry, if
shovel disconnects it won't send lines to anyone and wouldn't even  
remove
them from the queue so nothing is lost here, if rabbitmq dies I hope  
it brings
everything down with itself, traffic is rebalanced on the remaining  
servers and
nothing is lost.

Right after this component there's another rabbitmq server, that we  
can call
local rabbitmq, which is local to the mochiweb server, in the same  
subnet.
This server would collect everything that various mochiweb+rabbitmq 
+shovel
servers send, persist it and forward it to a central location. Again,  
everything is
durable so there should be no risk of losing messages.

In the central location there would be a final rabbitmq server that  
will wait for
data. Attached to it there would be several consumers that fetch data  
and
store it in various databases in small transactions (let's say one  
transaction
every 50-100 log lines). Even here everything should be durable so there
should be no problem.

So, how should shovel behave:

Well, it should be pretty sure that every message was delivered to the  
final
location, so I think its way of working would be:

  1. receive message from embedded consumer
  2. publish message to remote host
  3. wait for ack
  4. ack the rabbitmq container
  5. the rabbitmq container at this point can remove the message

Then of course this procedure is repeated in each machine until we  
reach the
central location.

Now... I'm not sure if there's an ack confirmation message so that the  
consumer if
100% sure that the confirmation was received, I suppose there isn't so  
this means
that the system will maybe have duplicates at the end and I'll have to  
take care of
this somehow (any suggestions?).

Another small problem is the current state of Shovel where it  
basically crashes when a
connection is dropped, a change that I would like to make (or I would  
like to see) is that
it should be able to reconnect to the remote host with an exponential  
backoff so that it
starts retransmitting as soon as possible.

Does this usecase sound reasonable?

I've read a bit of the archives and I see there are some problems with  
memory growth
and rabbitmq simply crashing... I hope this doesn't become a problem  
for us, but...
let's say that the web servers generate messages of about 1K each  
(could be much
less, but this is for the example's sake), now the local rabbitmq  
instance is down for
some reason, basically mochiweb will remain alive as long as it has  
memory which
means about 4GB/1MB/sec (let's say that the server generates 1000  
requests per
second) that is about 66 minutes. If the problem instead is in the  
central rabbitmq
basically each local rabbitmq is subject to the traffic of every web  
server, if we have
8 webservers we obtain 4000/8MB/sec or about 8 minutes.

So it basically means that we have 8 minutes to react to such a  
failure. Does this
also sound reasonable? and if so... What possible fixes can I look for?
Ultimately... does this sound like something that rabbitmq can be good  
at?

failures of machines can be anything from hardware failure to anything  
else.

>> I took part of the code I'm using now to replace lib_shovel.erl  
>> from a guy
>> on IRC #erlang that
>> shared it, I had my version of it which was pretty similar but his  
>> looked
>> more cleaned up so
>> I'm using that now.
>
> Who was that?

Ah, can't remember.

> BTW a couple of points:
>
> 1. Bear in mind the refactoring that is being discussed on the list to
> get the core client into a 1.0 state;

Yep, will do.

> 2. I think this discussion should go over the mailing list, because
> this currently has the widest reach, so other people are made aware of
> what is going on and can potentially offer help to you -  so if don't
> mind I will turn this is into a list topic;

This email is CCed/reply-to to the ML.

> 3. It would be really cool if your changes were in a github fork, so
> that they are publicly visible (obviously posting the patches to the
> list would be sharing it as well). An example of this is Peter who is
> maintaining a fork of the as3-amqp client, and I regularly fold his
> changes back into the upstream tree.


I'll start this tree too soon.

- --
Valentino Volonghi aka Dialtone
Now running MacOS X 10.5
Home Page: http://www.twisted.it
http://www.adroll.com

-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.4.9 (Darwin)

iEYEARECAAYFAkjUuqIACgkQ9Llz28widGVg6QCfSSXKo9NYiZLKeAe513wnFgEQ
BdIAoJTMWVlX0McVcTNlz0m5fDeRPe1x
=uDIk
-----END PGP SIGNATURE-----



From 0x6e6562 at gmail.com  Sat Sep 20 15:27:37 2008
From: 0x6e6562 at gmail.com (Ben Hood)
Date: Sat, 20 Sep 2008 15:27:37 +0100
Subject: [rabbitmq-discuss] [Minimum Air Induction] Introducing Shovel:
	An AMQP Relay
In-Reply-To: <90169A17-9B0C-46EC-9396-F47DBC1B1115@gmail.com>
References: <10652705.176451221778705492.JavaMail.root@web4>
	<269388e30809191702k1182eac8k656d0c3bcde92cb2@mail.gmail.com>
	<E066ABBA-2320-43BB-869A-BD31ACDDCF8E@gmail.com>
	<269388e30809200013m2564f264n97c6ec6834edef21@mail.gmail.com>
	<90169A17-9B0C-46EC-9396-F47DBC1B1115@gmail.com>
Message-ID: <269388e30809200727p2eddbd02o66f3448b7b087857@mail.gmail.com>

Valentino,

On Sat, Sep 20, 2008 at 9:56 AM, Valentino Volonghi <dialtone at gmail.com> wrote:
> Yes, I am tracking tip, I didn't notice the big changes in lib_amqp.erl
> so I'll refactor my code to use them.

lib_amqp was evolved as a high level convenience API to sit on top of
the fine grained low level API. Whilst the low level API is stable
from a design and implementation perspective (meaning it seems to be
the correct approach and is quite simple and expressive), the higher
level lib_amqp *may* have to evolve further to cover more common use
cases. The reason why I say may, is because it would change in the
course of the community using it and seeing how it suffices their
needs. So if there are any issues or ideas with lib_amqp, now is an
ideal time to start a (separate) discussion thread about this, so it
will flow into 1.0.

> I hope so :). The main problem is the absolute necessity to not lose
> any single one of the messages. Nothing can be lost.

Sounds familiar. If you use transactional persistent messaging, this
will be guaranteed. Sounds like an expensive setup for log statements
though :-)

> Here is already the first 'problem', if the known exchange is down the line
> would be lost forever, this is simple enough though and rabbitmq would
> run embedded in mochiweb together with shovel. Every queue durable and
> every message too. In this case if mochiweb fails I won't have to worry, if
> shovel disconnects it won't send lines to anyone and wouldn't even remove
> them from the queue so nothing is lost here, if rabbitmq dies I hope it
> brings
> everything down with itself, traffic is rebalanced on the remaining servers
> and
> nothing is lost.

Phew! That was a sentence.....what do you mean by Rabbit bringing
everything down with itself?

And if you're using an embedded RabbitMQ instance, how is the Shovel
application supposed to failover to other Rabbit nodes?

I think this scenario requires a bit more elaboration.

> Right after this component there's another rabbitmq server, that we can call
> local rabbitmq, which is local to the mochiweb server, in the same subnet.
> This server would collect everything that various mochiweb+rabbitmq+shovel
> servers send, persist it and forward it to a central location. Again,
> everything is
> durable so there should be no risk of losing messages.

Why have this middleman? Why not just have the embedded Rabbit
instances forward straight to the remote brokers?

> In the central location there would be a final rabbitmq server that will
> wait for
> data. Attached to it there would be several consumers that fetch data and
> store it in various databases in small transactions (let's say one
> transaction
> every 50-100 log lines).

Have you considered doing the coalescing in Shovel (i.e. on the
sending side rather than on the receiving side)?

Maybe you also want to compress stuff if you're sending it over a WAN.

>
> So, how should shovel behave:
>
> Well, it should be pretty sure that every message was delivered to the final
> location, so I think its way of working would be:
>
>  1. receive message from embedded consumer
>  2. publish message to remote host
>  3. wait for ack
>  4. ack the rabbitmq container
>  5. the rabbitmq container at this point can remove the message

What happens when Shovel fails between step 3 and 4? Or there is a
network failure just after the remote broker sends the ack and just
before it would have been received by Shovel? This sounds like the
Byzantine General's problem. Maybe there is something you can do in
the application to achieve the idempotency your application requires.

> Now... I'm not sure if there's an ack confirmation message so that the
> consumer if
> 100% sure that the confirmation was received, I suppose there isn't so this
> means
> that the system will maybe have duplicates at the end and I'll have to take
> care of
> this somehow (any suggestions?).

Not quite sure what you mean here. Can you elaborate?

> Another small problem is the current state of Shovel where it basically
> crashes when a
> connection is dropped, a change that I would like to make (or I would like
> to see) is that
> it should be able to reconnect to the remote host with an exponential
> backoff so that it
> starts retransmitting as soon as possible.

Sure, the OTP supervisor could potentially handle this.

> I've read a bit of the archives and I see there are some problems with
> memory growth
> and rabbitmq simply crashing... I hope this doesn't become a problem for us,
> but...
> let's say that the web servers generate messages of about 1K each (could be
> much
> less, but this is for the example's sake), now the local rabbitmq instance
> is down for
> some reason, basically mochiweb will remain alive as long as it has memory
> which
> means about 4GB/1MB/sec (let's say that the server generates 1000 requests
> per
> second) that is about 66 minutes. If the problem instead is in the central
> rabbitmq
> basically each local rabbitmq is subject to the traffic of every web server,
> if we have
> 8 webservers we obtain 4000/8MB/sec or about 8 minutes.
>
> So it basically means that we have 8 minutes to react to such a failure.
> Does this
> also sound reasonable? and if so... What possible fixes can I look for?
> Ultimately... does this sound like something that rabbitmq can be good at?

ATM, queues are memory bound, so as indicated in a previous thread,
you would have to calibrate this with your own application and
production sceanario. Just test it and find out where the limit is.

BTW, we do intend to implement the disk overflow mechanism discussed
with Edwin. Just don't know when it'll get done.

>>> I took part of the code I'm using now to replace lib_shovel.erl from a
>>> guy
>>> on IRC #erlang that
>>> shared it, I had my version of it which was pretty similar but his looked
>>> more cleaned up so
>>> I'm using that now.
>>
>> Who was that?
>
> Ah, can't remember.

No probs, I just am not on IRC so much lately because whilst it is a
quick way to answer questions, it does take up a lot of time.

Ben



From dialtone at gmail.com  Sat Sep 20 17:45:37 2008
From: dialtone at gmail.com (Valentino Volonghi)
Date: Sat, 20 Sep 2008 09:45:37 -0700
Subject: [rabbitmq-discuss] [Minimum Air Induction] Introducing Shovel:
	An AMQP Relay
In-Reply-To: <269388e30809200727p2eddbd02o66f3448b7b087857@mail.gmail.com>
References: <10652705.176451221778705492.JavaMail.root@web4>
	<269388e30809191702k1182eac8k656d0c3bcde92cb2@mail.gmail.com>
	<E066ABBA-2320-43BB-869A-BD31ACDDCF8E@gmail.com>
	<269388e30809200013m2564f264n97c6ec6834edef21@mail.gmail.com>
	<90169A17-9B0C-46EC-9396-F47DBC1B1115@gmail.com>
	<269388e30809200727p2eddbd02o66f3448b7b087857@mail.gmail.com>
Message-ID: <1AF03629-BA1E-4878-86BC-0E78DDA0BC01@gmail.com>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1


On Sep 20, 2008, at 7:27 AM, Ben Hood wrote:

>> I hope so :). The main problem is the absolute necessity to not lose
>> any single one of the messages. Nothing can be lost.
>
> Sounds familiar. If you use transactional persistent messaging, this
> will be guaranteed. Sounds like an expensive setup for log statements
> though :-)

A transaction per message is indeed to expensive, I've tried this and  
it's indeed
too slow. One thing that I wasn't able to understand is what does a  
transaction
give me in rabbitmq? I mean, I'm interested in single messages and not  
in dealing
with a bunch of them at a time (unless I aggregate them on shovel as  
you suggest
below) so for single messages transactions seemed the wrong tool for me.

>> Here is already the first 'problem', if the known exchange is down  
>> the line
>> would be lost forever, this is simple enough though and rabbitmq  
>> would
>> run embedded in mochiweb together with shovel. Every queue durable  
>> and
>> every message too. In this case if mochiweb fails I won't have to  
>> worry, if
>> shovel disconnects it won't send lines to anyone and wouldn't even  
>> remove
>> them from the queue so nothing is lost here, if rabbitmq dies I  
>> hope it
>> brings
>> everything down with itself, traffic is rebalanced on the remaining  
>> servers
>> and
>> nothing is lost.
>
> Phew! That was a sentence.....what do you mean by Rabbit bringing
> everything down with itself?

In the event of rabbitmq crashing I would like the whole thing to  
crash so that
I'm sure that there won't be lines generated without being also  
handled. This
is the embedded rabbitmq of course.

> And if you're using an embedded RabbitMQ instance, how is the Shovel
> application supposed to failover to other Rabbit nodes?

What do you mean? I suppose shovel would have a list of backup  
rabbitmq nodes
and would use them in the event the main one dies.

>> Right after this component there's another rabbitmq server, that we  
>> can call
>> local rabbitmq, which is local to the mochiweb server, in the same  
>> subnet.
>> This server would collect everything that various mochiweb+rabbitmq 
>> +shovel
>> servers send, persist it and forward it to a central location. Again,
>> everything is
>> durable so there should be no risk of losing messages.
>
> Why have this middleman? Why not just have the embedded Rabbit
> instances forward straight to the remote brokers?

I thought for performance reasons. Since the first transmission is in  
the same subnet
it's fast and would free the webserver nodes from any more trouble. Of  
course there's
nothing wrong if I just remove this middle man and directly send stuff  
to the remote
brokers.

> Have you considered doing the coalescing in Shovel (i.e. on the
> sending side rather than on the receiving side)?

Yes, I was worried about losing some messages in the process, I suppose
it can work in this way too with transactions though this time.

> Maybe you also want to compress stuff if you're sending it over a WAN.

Yes, one thing that I was thinking is to just gzip the body of the  
message
myself before sending it, but I haven't looked into rabbitmq to see if  
it already
supports this feature.

>>
>> So, how should shovel behave:
>>
>> Well, it should be pretty sure that every message was delivered to  
>> the final
>> location, so I think its way of working would be:
>>
>> 1. receive message from embedded consumer
>> 2. publish message to remote host
>> 3. wait for ack
>> 4. ack the rabbitmq container
>> 5. the rabbitmq container at this point can remove the message
>
> What happens when Shovel fails between step 3 and 4? Or there is a
> network failure just after the remote broker sends the ack and just
> before it would have been received by Shovel? This sounds like the
> Byzantine General's problem. Maybe there is something you can do in
> the application to achieve the idempotency your application requires.

Well what would happen is that a message would not be marked as sent
so it will become a duplicate once sent again.

>> Now... I'm not sure if there's an ack confirmation message so that  
>> the
>> consumer if
>> 100% sure that the confirmation was received, I suppose there isn't  
>> so this
>> means
>> that the system will maybe have duplicates at the end and I'll have  
>> to take
>> care of
>> this somehow (any suggestions?).
>
> Not quite sure what you mean here. Can you elaborate?

It's exactly what you said above. I was already thinking about a way  
to confirm
the ack transmission and thus how to deal with duplicate messages that  
are
created when the ack is lost.

>> Another small problem is the current state of Shovel where it  
>> basically
>> crashes when a
>> connection is dropped, a change that I would like to make (or I  
>> would like
>> to see) is that
>> it should be able to reconnect to the remote host with an exponential
>> backoff so that it
>> starts retransmitting as soon as possible.
>
> Sure, the OTP supervisor could potentially handle this.

Great, I'll have to study them more.

>> So it basically means that we have 8 minutes to react to such a  
>> failure.
>> Does this
>> also sound reasonable? and if so... What possible fixes can I look  
>> for?
>> Ultimately... does this sound like something that rabbitmq can be  
>> good at?
>
> ATM, queues are memory bound, so as indicated in a previous thread,
> you would have to calibrate this with your own application and
> production sceanario. Just test it and find out where the limit is.
>
> BTW, we do intend to implement the disk overflow mechanism discussed
> with Edwin. Just don't know when it'll get done.

I suppose a solution to this would be to avoid part of this problem is  
to
remove the middleman rabbitmq. There is one question I have about AMQP
though: a durable queue and exchange don't persist messages by  
themselves
right? What happens if a persistent messages enters a durable exchange  
without
queues?

I suppose my tests weren't too accurate then now... is a persistent  
message much
slower than a non persistent one? Because I obtained wonderful numbers  
from
messages not explicitly marked as being persistent, like 8000 messages  
per second,
with the bottleneck being in the saturated network, on the write side  
of the connection
and about 3-4K messages per second on the read side with the  
bottleneck being the
python client most probably. So would these numbers confirm themselves  
pretty much
or are they simply completely wrong? At least I need about 2500-3000  
requests per
second because, given the constraint with memory bound queues, the  
component should
be as fast as the webserver otherwise the messages start to pile up.

- --
Valentino Volonghi aka Dialtone
Now running MacOS X 10.5
Home Page: http://www.twisted.it
http://www.adroll.com

-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.4.9 (Darwin)

iEYEARECAAYFAkjVKLEACgkQ9Llz28widGX3CgCfcKyLzoClrtxbpeclJsVxPj72
XJgAn0vFb8nIHLNiTNNBnQJf/bpGtK9J
=74jQ
-----END PGP SIGNATURE-----



From aconbere at gmail.com  Sat Sep 20 18:15:09 2008
From: aconbere at gmail.com (anders conbere)
Date: Sat, 20 Sep 2008 10:15:09 -0700
Subject: [rabbitmq-discuss] Consumer Tags - use case?
Message-ID: <8ca3fbe80809201015w613bf621nbdde820afa47132b@mail.gmail.com>

What is the use case for assigning ConsumerTags? It doesn't seem like
attaching them yourself doesn't really buy you any functionality.

~ Anders



From 0x6e6562 at gmail.com  Sat Sep 20 19:17:52 2008
From: 0x6e6562 at gmail.com (Ben Hood)
Date: Sat, 20 Sep 2008 19:17:52 +0100
Subject: [rabbitmq-discuss] [Minimum Air Induction] Introducing Shovel:
	An AMQP Relay
In-Reply-To: <1AF03629-BA1E-4878-86BC-0E78DDA0BC01@gmail.com>
References: <10652705.176451221778705492.JavaMail.root@web4>
	<269388e30809191702k1182eac8k656d0c3bcde92cb2@mail.gmail.com>
	<E066ABBA-2320-43BB-869A-BD31ACDDCF8E@gmail.com>
	<269388e30809200013m2564f264n97c6ec6834edef21@mail.gmail.com>
	<90169A17-9B0C-46EC-9396-F47DBC1B1115@gmail.com>
	<269388e30809200727p2eddbd02o66f3448b7b087857@mail.gmail.com>
	<1AF03629-BA1E-4878-86BC-0E78DDA0BC01@gmail.com>
Message-ID: <269388e30809201117i2006097cn9603f2a060d2e9a7@mail.gmail.com>

Valentino,

On Sat, Sep 20, 2008 at 5:45 PM, Valentino Volonghi <dialtone at gmail.com> wrote:
> A transaction per message is indeed to expensive, I've tried this and it's
> indeed
> too slow.

What difference does it make when you do multiple publishes within the same TX?

>One thing that I wasn't able to understand is what does a
> transaction
> give me in rabbitmq?

It provides an atomic barrier for sending messages - when you get the
commit.ok back from the broker, you know that the messages you have
sent have been routed to the queues that the routing key matches on.

> In the event of rabbitmq crashing I would like the whole thing to crash so
> that
> I'm sure that there won't be lines generated without being also handled.
> This
> is the embedded rabbitmq of course.

IIRC you can have the OTP application do this for you, provided
Mochiweb is packaged as an OTP application. Rabbit and Shovel are both
OTP apps themselves.

>> And if you're using an embedded RabbitMQ instance, how is the Shovel
>> application supposed to failover to other Rabbit nodes?
>
> What do you mean? I suppose shovel would have a list of backup rabbitmq
> nodes
> and would use them in the event the main one dies.

AFIAK we haven't looked into a clustered scenario using the direct
driver for the Erlang client - I suppose that it is quite possible
though.

>> Maybe you also want to compress stuff if you're sending it over a WAN.
>
> Yes, one thing that I was thinking is to just gzip the body of the message
> myself before sending it, but I haven't looked into rabbitmq to see if it
> already
> supports this feature.

Not really. Rabbit treats the payload as an opaque object.

> I suppose a solution to this would be to avoid part of this problem is to
> remove the middleman rabbitmq. There is one question I have about AMQP
> though: a durable queue and exchange don't persist messages by themselves
> right? What happens if a persistent messages enters a durable exchange
> without
> queues?

Rabbit will nuke it. Logging the message to disk is done by the queue
process, so if nothing gets routed, nothing gets persisted.

> I suppose my tests weren't too accurate then now... is a persistent message
> much
> slower than a non persistent one?

Yep. Don't know what the exact factor is though.

> Because I obtained wonderful numbers from
> messages not explicitly marked as being persistent, like 8000 messages per
> second,
> with the bottleneck being in the saturated network, on the write side of the
> connection
> and about 3-4K messages per second on the read side with the bottleneck
> being the
> python client most probably. So would these numbers confirm themselves
> pretty much
> or are they simply completely wrong?

It really depends how you set things up, but those numbers do look OK.

I think that you need to work out what ingress requirements you have
(this will be determined by the capacity of the http server) and what
egress you need (so as to avoid stuff queuing up too much).

Remember that ATM Rabbit does not implement QoS, so your egress will
be bound by the slowest consumer.

> At least I need about 2500-3000
> requests per
> second because, given the constraint with memory bound queues, the component
> should
> be as fast as the webserver otherwise the messages start to pile up.

Sounds sensible. At some stage we will get around to landing QoS and
queue overflowing.

Ben



From 0x6e6562 at gmail.com  Sat Sep 20 19:26:21 2008
From: 0x6e6562 at gmail.com (Ben Hood)
Date: Sat, 20 Sep 2008 19:26:21 +0100
Subject: [rabbitmq-discuss] Consumer Tags - use case?
In-Reply-To: <8ca3fbe80809201015w613bf621nbdde820afa47132b@mail.gmail.com>
References: <8ca3fbe80809201015w613bf621nbdde820afa47132b@mail.gmail.com>
Message-ID: <269388e30809201126v5b15c4admb8fe2fe0f003f3d8@mail.gmail.com>

Anders,

On Sat, Sep 20, 2008 at 6:15 PM, anders conbere <aconbere at gmail.com> wrote:
> What is the use case for assigning ConsumerTags? It doesn't seem like
> attaching them yourself doesn't really buy you any functionality.

This is what the current spec says about setting the tag manually:

"[A consumer tag] specifies the identifier for the consumer. The
consumer tag is local to a connection, so two clients can use
the same consumer tags. If this field is empty the server will
generate a unique tag."

I haven't come across a use case for this myself, but it does allow
you to use a well known name if you can be sure not to re-use it in
the same connection. I guess you could just send off the consume
command and just ignore the ack if you were sure that the subscription
was definitely going to suceed. Saves you a line of code - which may
appeal to the effici-o-nados out there :-)

Any other takers?

HTH,

Ben



From matthias at lshift.net  Sat Sep 20 19:39:31 2008
From: matthias at lshift.net (Matthias Radestock)
Date: Sat, 20 Sep 2008 19:39:31 +0100
Subject: [rabbitmq-discuss] Consumer Tags - use case?
In-Reply-To: <269388e30809201126v5b15c4admb8fe2fe0f003f3d8@mail.gmail.com>
References: <8ca3fbe80809201015w613bf621nbdde820afa47132b@mail.gmail.com>
	<269388e30809201126v5b15c4admb8fe2fe0f003f3d8@mail.gmail.com>
Message-ID: <48D54363.3010703@lshift.net>

Ben,

Ben Hood wrote:
> On Sat, Sep 20, 2008 at 6:15 PM, anders conbere <aconbere at gmail.com> wrote:
>> What is the use case for assigning ConsumerTags? It doesn't seem like
>> attaching them yourself doesn't really buy you any functionality.
> 
> I haven't come across a use case for this myself, but it does allow
> you to use a well known name if you can be sure not to re-use it in
> the same connection. I guess you could just send off the consume
> command and just ignore the ack if you were sure that the subscription
> was definitely going to suceed. Saves you a line of code - which may
> appeal to the effici-o-nados out there :-)
> 
> Any other takers?

You could encode some immutable per-consumer data in the tag, thus 
offloading state from the client to the server. That's just a hack 
though, and I am sure it wasn't the motivation for making the consumer 
tag client-selectable. Is there perhaps some JMSism that requires this?


Matthias.



From dialtone at gmail.com  Sat Sep 20 20:18:18 2008
From: dialtone at gmail.com (Valentino Volonghi)
Date: Sat, 20 Sep 2008 12:18:18 -0700
Subject: [rabbitmq-discuss] [Minimum Air Induction] Introducing Shovel:
	An AMQP Relay
In-Reply-To: <269388e30809201117i2006097cn9603f2a060d2e9a7@mail.gmail.com>
References: <10652705.176451221778705492.JavaMail.root@web4>
	<269388e30809191702k1182eac8k656d0c3bcde92cb2@mail.gmail.com>
	<E066ABBA-2320-43BB-869A-BD31ACDDCF8E@gmail.com>
	<269388e30809200013m2564f264n97c6ec6834edef21@mail.gmail.com>
	<90169A17-9B0C-46EC-9396-F47DBC1B1115@gmail.com>
	<269388e30809200727p2eddbd02o66f3448b7b087857@mail.gmail.com>
	<1AF03629-BA1E-4878-86BC-0E78DDA0BC01@gmail.com>
	<269388e30809201117i2006097cn9603f2a060d2e9a7@mail.gmail.com>
Message-ID: <77909B90-1231-4603-B0B8-DED5F9A63F72@gmail.com>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1


On Sep 20, 2008, at 11:17 AM, Ben Hood wrote:

> What difference does it make when you do multiple publishes within  
> the same TX?

Well, a transaction each 100-500 messages is basically as fast as no  
transaction at
all with the difference that the connection is used in bursts rather  
than continuously.
But when I tried a transaction per message the end result was about  
30-40 messages
per second which is just too slow but tells me that I can have  
basically up to 30-40
transactions per second and still keep a very high throughput (that's  
about 100 messages
per transaction).

>> One thing that I wasn't able to understand is what does a
>> transaction
>> give me in rabbitmq?
>
> It provides an atomic barrier for sending messages - when you get the
> commit.ok back from the broker, you know that the messages you have
> sent have been routed to the queues that the routing key matches on.

Ok so I would rewrite the interaction in the following way:

1. mochiweb generates messages and publishes them without transaction
2. shovel reads up to 500 messages and starts a transaction with the  
remote
     node sending all of them and committing the transaction.
3. after the transaction is commit it acks the server for multiple  
messages.

There is still the duplicates problem but this is a minor issue right  
now IMHO,
at least it's solvable. (It wouldn't hurt to have 2PC :P).

>> In the event of rabbitmq crashing I would like the whole thing to  
>> crash so
>> that
>> I'm sure that there won't be lines generated without being also  
>> handled.
>> This
>> is the embedded rabbitmq of course.
>
> IIRC you can have the OTP application do this for you, provided
> Mochiweb is packaged as an OTP application. Rabbit and Shovel are both
> OTP apps themselves.

Yes also mochiweb is packaged as an OTP application so I suppose this  
won't be
a problem at all.

>>> Maybe you also want to compress stuff if you're sending it over a  
>>> WAN.
>>
>> Yes, one thing that I was thinking is to just gzip the body of the  
>> message
>> myself before sending it, but I haven't looked into rabbitmq to see  
>> if it
>> already
>> supports this feature.
>
> Not really. Rabbit treats the payload as an opaque object.

Ok, so gzipping the content of each message is also part of the
plan and can be done, shouldn't be slow either although slower.

> Rabbit will nuke it. Logging the message to disk is done by the queue
> process, so if nothing gets routed, nothing gets persisted.

Ok, so I need durable queues and will wait for the overflow on disk  
functionality.

>> I suppose my tests weren't too accurate then now... is a persistent  
>> message
>> much
>> slower than a non persistent one?
>
> Yep. Don't know what the exact factor is though.

Ouch... I'll try later today or tomorrow to see what this value  
actually is without
shovel in the middle... I also wonder which header I should use to  
make a message
persistent, I'll look into this I guess.

>> Because I obtained wonderful numbers from
>> messages not explicitly marked as being persistent, like 8000  
>> messages per
>> second,
>> with the bottleneck being in the saturated network, on the write  
>> side of the
>> connection
>> and about 3-4K messages per second on the read side with the  
>> bottleneck
>> being the
>> python client most probably. So would these numbers confirm  
>> themselves
>> pretty much
>> or are they simply completely wrong?
>
> It really depends how you set things up, but those numbers do look OK.

They look OK in the sense that even persistent messages can reach  
those rates?
If so then I'm already more than happy, in the test each message was  
about 1KB
that should be a bit bigger than the actual ones but not too much.

> I think that you need to work out what ingress requirements you have
> (this will be determined by the capacity of the http server) and what
> egress you need (so as to avoid stuff queuing up too much).
>
> Remember that ATM Rabbit does not implement QoS, so your egress will
> be bound by the slowest consumer.

What if I have multiple consumers on a queue? Does speed scales almost  
linearly?
My ingress is, on the extreme, about 1000-1500 requests per second on  
each mochiweb
server. Let's say that in the absolute best case we can have 8-9  
webservers that reach
800-1000 req/sec and all talk to something remotely. (Now... before  
even reaching that
point we would need a connection between the remote data center and  
the main one
that is wide enough for all that information, but this issue aside).  
So basically I would
expect the embedded RabbitMQ to be able to take about 1500-2000  
persistent
messages and then, network notwithstanding, transmit those with some  
transactions
(3-4 or maybe some more per second) to the central location that will  
have multiple
consumers. I can see having one central RabbitMQ per webserver (or  
each 2 webservers
if it can handle the load) and each central rabbitMQ would have some  
consumers
that basically write stuff in a database (which would be the  
bottleneck here).

>> At least I need about 2500-3000
>> requests per
>> second because, given the constraint with memory bound queues, the  
>> component
>> should
>> be as fast as the webserver otherwise the messages start to pile up.
>
> Sounds sensible. At some stage we will get around to landing QoS and
> queue overflowing.


You are really helpful, I thank you a lot!

- --
Valentino Volonghi aka Dialtone
Now running MacOS X 10.5
Home Page: http://www.twisted.it
http://www.adroll.com

-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.4.9 (Darwin)

iEYEARECAAYFAkjVTHoACgkQ9Llz28widGXaGwCgxM23RdoClHWTjijW0qW0igYD
V68AoIffM1kltK7OKr/gfnyUUigCMvqP
=y5TK
-----END PGP SIGNATURE-----



From matthias at lshift.net  Sat Sep 20 20:45:57 2008
From: matthias at lshift.net (Matthias Radestock)
Date: Sat, 20 Sep 2008 20:45:57 +0100
Subject: [rabbitmq-discuss] [Minimum Air Induction] Introducing Shovel:
 An AMQP Relay
In-Reply-To: <77909B90-1231-4603-B0B8-DED5F9A63F72@gmail.com>
References: <10652705.176451221778705492.JavaMail.root@web4>	<269388e30809191702k1182eac8k656d0c3bcde92cb2@mail.gmail.com>	<E066ABBA-2320-43BB-869A-BD31ACDDCF8E@gmail.com>	<269388e30809200013m2564f264n97c6ec6834edef21@mail.gmail.com>	<90169A17-9B0C-46EC-9396-F47DBC1B1115@gmail.com>	<269388e30809200727p2eddbd02o66f3448b7b087857@mail.gmail.com>	<1AF03629-BA1E-4878-86BC-0E78DDA0BC01@gmail.com>	<269388e30809201117i2006097cn9603f2a060d2e9a7@mail.gmail.com>
	<77909B90-1231-4603-B0B8-DED5F9A63F72@gmail.com>
Message-ID: <48D552F5.1000505@lshift.net>

Valentino,

Valentino Volonghi wrote:
> Well, a transaction each 100-500 messages is basically as fast as no  
> transaction at
> all with the difference that the connection is used in bursts rather  
> than continuously.

Why would the connection be used in bursts?

> 2. shovel reads up to 500 messages and starts a transaction with the  
> remote
>      node sending all of them and committing the transaction.

Why would you read 500 messages and *then* start a transaction? Just 
start the tx first, pass the messages through, and send a tx.commit 
every ~500.


Matthias.



From dialtone at gmail.com  Sat Sep 20 21:41:29 2008
From: dialtone at gmail.com (Valentino Volonghi)
Date: Sat, 20 Sep 2008 13:41:29 -0700
Subject: [rabbitmq-discuss] [Minimum Air Induction] Introducing Shovel:
	An AMQP Relay
In-Reply-To: <48D552F5.1000505@lshift.net>
References: <10652705.176451221778705492.JavaMail.root@web4>	<269388e30809191702k1182eac8k656d0c3bcde92cb2@mail.gmail.com>	<E066ABBA-2320-43BB-869A-BD31ACDDCF8E@gmail.com>	<269388e30809200013m2564f264n97c6ec6834edef21@mail.gmail.com>	<90169A17-9B0C-46EC-9396-F47DBC1B1115@gmail.com>	<269388e30809200727p2eddbd02o66f3448b7b087857@mail.gmail.com>	<1AF03629-BA1E-4878-86BC-0E78DDA0BC01@gmail.com>	<269388e30809201117i2006097cn9603f2a060d2e9a7@mail.gmail.com>
	<77909B90-1231-4603-B0B8-DED5F9A63F72@gmail.com>
	<48D552F5.1000505@lshift.net>
Message-ID: <7956F7FD-1EFB-4986-84F4-17819C7BA076@gmail.com>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1


On Sep 20, 2008, at 12:45 PM, Matthias Radestock wrote:

> Valentino Volonghi wrote:
>> Well, a transaction each 100-500 messages is basically as fast as  
>> no  transaction at
>> all with the difference that the connection is used in bursts  
>> rather  than continuously.
>
> Why would the connection be used in bursts?

This is what I saw on a test. I suppose that's because until the  
transaction is
committed shovel doesn't see messages coming and if the time between 2  
commits
is long enough to transmit the messages to the remote server then  
there we go and
the bandwidth usage drops until the next commit is done. In this case  
though you are
probably right and the internet wouldn't be fast enough so the usage  
shouldn't burst.

>> 2. shovel reads up to 500 messages and starts a transaction with  
>> the  remote
>>     node sending all of them and committing the transaction.
>
> Why would you read 500 messages and *then* start a transaction? Just  
> start the tx first, pass the messages through, and send a tx.commit  
> every ~500.


Yes, the 'and' is a logic AND in that sentence, both those things are  
done at the
same time, while the transaction is open shovel reads and forwards.

- --
Valentino Volonghi aka Dialtone
Now running MacOS X 10.5
Home Page: http://www.twisted.it
http://www.adroll.com

-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.4.9 (Darwin)

iEYEARECAAYFAkjVX/kACgkQ9Llz28widGXrgQCfT8/2tV4z/tMgnWW8fgGesVOl
LAcAnR2O0YpjKbUO1yJ1+vpumtPS3pqO
=gL7m
-----END PGP SIGNATURE-----



From matthias at lshift.net  Sun Sep 21 05:07:46 2008
From: matthias at lshift.net (Matthias Radestock)
Date: Sun, 21 Sep 2008 05:07:46 +0100
Subject: [rabbitmq-discuss] [Minimum Air Induction] Introducing Shovel:
 An	AMQP Relay
In-Reply-To: <7956F7FD-1EFB-4986-84F4-17819C7BA076@gmail.com>
References: <10652705.176451221778705492.JavaMail.root@web4>	<269388e30809191702k1182eac8k656d0c3bcde92cb2@mail.gmail.com>	<E066ABBA-2320-43BB-869A-BD31ACDDCF8E@gmail.com>	<269388e30809200013m2564f264n97c6ec6834edef21@mail.gmail.com>	<90169A17-9B0C-46EC-9396-F47DBC1B1115@gmail.com>	<269388e30809200727p2eddbd02o66f3448b7b087857@mail.gmail.com>	<1AF03629-BA1E-4878-86BC-0E78DDA0BC01@gmail.com>	<269388e30809201117i2006097cn9603f2a060d2e9a7@mail.gmail.com>	<77909B90-1231-4603-B0B8-DED5F9A63F72@gmail.com>	<48D552F5.1000505@lshift.net>
	<7956F7FD-1EFB-4986-84F4-17819C7BA076@gmail.com>
Message-ID: <48D5C892.2080409@lshift.net>

Valentino,

Valentino Volonghi wrote:
> On Sep 20, 2008, at 12:45 PM, Matthias Radestock wrote:
>> Why would the connection be used in bursts?
> 
> This is what I saw on a test. I suppose that's because until the 
> transaction is committed shovel doesn't see messages coming

Makes sense. I didn't realise you were talking about the connection to 
the consumer.

You can probably get away with much shorter tx sizes than 500, in 
exchange for a comparatively small performance penalty of, say, 10%, and 
thus make the transmissions less bursty.


Matthias.



From 0x6e6562 at gmail.com  Sun Sep 21 17:17:16 2008
From: 0x6e6562 at gmail.com (Ben Hood)
Date: Sun, 21 Sep 2008 17:17:16 +0100
Subject: [rabbitmq-discuss] [Minimum Air Induction] Introducing Shovel:
	An AMQP Relay
In-Reply-To: <77909B90-1231-4603-B0B8-DED5F9A63F72@gmail.com>
References: <10652705.176451221778705492.JavaMail.root@web4>
	<269388e30809191702k1182eac8k656d0c3bcde92cb2@mail.gmail.com>
	<E066ABBA-2320-43BB-869A-BD31ACDDCF8E@gmail.com>
	<269388e30809200013m2564f264n97c6ec6834edef21@mail.gmail.com>
	<90169A17-9B0C-46EC-9396-F47DBC1B1115@gmail.com>
	<269388e30809200727p2eddbd02o66f3448b7b087857@mail.gmail.com>
	<1AF03629-BA1E-4878-86BC-0E78DDA0BC01@gmail.com>
	<269388e30809201117i2006097cn9603f2a060d2e9a7@mail.gmail.com>
	<77909B90-1231-4603-B0B8-DED5F9A63F72@gmail.com>
Message-ID: <269388e30809210917x16425b18uddf4daf5b7086c5@mail.gmail.com>

Valentino,

On Sat, Sep 20, 2008 at 8:18 PM, Valentino Volonghi <dialtone at gmail.com> wrote:
> There is still the duplicates problem but this is a minor issue right now
> IMHO,
> at least it's solvable. (It wouldn't hurt to have 2PC :P).

Sure, but I think these days people are going for 1.5PC instead of 2PC
- it's just a cost-benefit comparison.

>> Rabbit will nuke it. Logging the message to disk is done by the queue
>> process, so if nothing gets routed, nothing gets persisted.
>
> Ok, so I need durable queues and will wait for the overflow on disk
> functionality.

Yes. AMQP is consumer driven, not producer driven.

>> Yep. Don't know what the exact factor is though.
>
> Ouch... I'll try later today or tomorrow to see what this value actually is
> without
> shovel in the middle... I also wonder which header I should use to make a
> message
> persistent, I'll look into this I guess.

I shouldn't imagine that this will cost you an order of magnitude -
the persister is write-optimized after all, though it does have to
synchronously write to disk.

> They look OK in the sense that even persistent messages can reach those
> rates?

I guess the IO bandwidth of your filesystem would be an important
factor in this equation.

>> I think that you need to work out what ingress requirements you have
>> (this will be determined by the capacity of the http server) and what
>> egress you need (so as to avoid stuff queuing up too much).
>>
>> Remember that ATM Rabbit does not implement QoS, so your egress will
>> be bound by the slowest consumer.
>
> What if I have multiple consumers on a queue? Does speed scales almost
> linearly?

No, because the current queue delivery mechanism takes a
robin-robin-ish approach, so the overall throughput is rate limited by
the slowest consumer subscribed to a queue.

This should be addressed when we implement QoS, which would take a
credit based approach that is determined by consumer acks.

If you are interested in the details of what is planned, there is a
design for it here: https://dev.rabbitmq.com/wiki/BasicQosDesign

As indicated before, there is no ETA on this feature.

Ben



From matthias at lshift.net  Sun Sep 21 19:26:00 2008
From: matthias at lshift.net (Matthias Radestock)
Date: Sun, 21 Sep 2008 19:26:00 +0100
Subject: [rabbitmq-discuss] [Minimum Air Induction] Introducing Shovel:
 An AMQP Relay
In-Reply-To: <269388e30809210917x16425b18uddf4daf5b7086c5@mail.gmail.com>
References: <10652705.176451221778705492.JavaMail.root@web4>	<269388e30809191702k1182eac8k656d0c3bcde92cb2@mail.gmail.com>	<E066ABBA-2320-43BB-869A-BD31ACDDCF8E@gmail.com>	<269388e30809200013m2564f264n97c6ec6834edef21@mail.gmail.com>	<90169A17-9B0C-46EC-9396-F47DBC1B1115@gmail.com>	<269388e30809200727p2eddbd02o66f3448b7b087857@mail.gmail.com>	<1AF03629-BA1E-4878-86BC-0E78DDA0BC01@gmail.com>	<269388e30809201117i2006097cn9603f2a060d2e9a7@mail.gmail.com>	<77909B90-1231-4603-B0B8-DED5F9A63F72@gmail.com>
	<269388e30809210917x16425b18uddf4daf5b7086c5@mail.gmail.com>
Message-ID: <48D691B8.3010805@lshift.net>

Ben,

Ben Hood wrote:
> No, because the current queue delivery mechanism takes a
> robin-robin-ish approach, so the overall throughput is rate limited by
> the slowest consumer subscribed to a queue.

Not true. When messages due for delivery to a particular consumer back 
up at the TCP/IP level the broker will skip that consumer in its 
round-robin delivery.

> This should be addressed when we implement QoS, which would take a
> credit based approach that is determined by consumer acks.

What QoS gives you over the above is much finer control based on exact 
counts & sizes of AMQP deliveries/acks.


Matthias.



From dialtone at gmail.com  Sun Sep 21 19:53:21 2008
From: dialtone at gmail.com (Valentino Volonghi)
Date: Sun, 21 Sep 2008 11:53:21 -0700
Subject: [rabbitmq-discuss] [Minimum Air Induction] Introducing Shovel:
	An AMQP Relay
In-Reply-To: <269388e30809210917x16425b18uddf4daf5b7086c5@mail.gmail.com>
References: <10652705.176451221778705492.JavaMail.root@web4>
	<269388e30809191702k1182eac8k656d0c3bcde92cb2@mail.gmail.com>
	<E066ABBA-2320-43BB-869A-BD31ACDDCF8E@gmail.com>
	<269388e30809200013m2564f264n97c6ec6834edef21@mail.gmail.com>
	<90169A17-9B0C-46EC-9396-F47DBC1B1115@gmail.com>
	<269388e30809200727p2eddbd02o66f3448b7b087857@mail.gmail.com>
	<1AF03629-BA1E-4878-86BC-0E78DDA0BC01@gmail.com>
	<269388e30809201117i2006097cn9603f2a060d2e9a7@mail.gmail.com>
	<77909B90-1231-4603-B0B8-DED5F9A63F72@gmail.com>
	<269388e30809210917x16425b18uddf4daf5b7086c5@mail.gmail.com>
Message-ID: <003D2C07-99D2-4399-8ADE-F431D445DC8D@gmail.com>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

On Sep 21, 2008, at 9:17 AM, Ben Hood wrote:

> Sure, but I think these days people are going for 1.5PC instead of 2PC
> - it's just a cost-benefit comparison.

Will need to dig into that, seems interesting.

> I shouldn't imagine that this will cost you an order of magnitude -
> the persister is write-optimized after all, though it does have to
> synchronously write to disk.

I made my measurements and the results are not bad given the test  
platform.

Producer running alone:
Transaction size    -   1K msgs rate
====================================
500                     1538.1 msg/sec
1000                    1919.1 msg/sec
1500                    2145.8 msg/sec
2000                    2390.2 msg/sec
2500                    2459.5 msg/sec
5000                    2740.6 msg/sec
10000                   3014.7 msg/sec
20000                   3075.2 msg/sec

Producer running alone with delivery_mode=0 and 20000 transaction size:
3419.17693154 msg/sec

Producer running alone with delivery_mode=0 and 500 transaction size:
3372.17693154 msg/sec

Consumer running alone:
2734.8 msg/sec

Considering that I'm using an old and slow macbook pro on 10.5.5 I  
think those
numbers are basically what I wanted to see. Transactions without  
persistent
messages are a lot cheaper of course.

Running alone means that the producer/consumer was running only with  
rabbitmq
and nothing else on the other side, the reason for this is to reduce  
the bottleneck
caused by having 2 python processes running (producer and consumer).

So basically this is enough proof for me that this is fast enough for  
what I need.
(attached are the 2 test programs I used).

One thing I noticed is the following errors:

The following on rabbitmq:

=INFO REPORT==== 21-Sep-2008::11:14:37 ===
Rolling persister log to "/Users/dialtone/dev/mnesia/ 
rabbit_persister.LOG.previous"

=ERROR REPORT==== 21-Sep-2008::11:14:42 ===
connection <0.297.0> (running), channel 1 - error:
{commit_failed,
     [{exit,
          {timeout,
              {gen_server,call,[<0.131.0>,{commit,{{26,<0.303.0>}, 
1003}}]}}}]}

=ERROR REPORT==== 21-Sep-2008::11:14:42 ===
Non-AMQP exit reason '{commit_failed,
                           [{exit,
                                {timeout,
                                    {gen_server,call,
                                        [<0.131.0>,
                                         {commit,{{26,<0.303.0>}, 
1003}}]}}}]}'

And this on the client side:

Traceback (most recent call last):
   File "my_send.py", line 34, in <module>
     main()
   File "my_send.py", line 23, in main
     ch.tx_commit()
   File "/Users/dialtone/dev/py-amqplib/amqplib/client_0_8.py", line  
3336, in tx_commit
     (90, 21),    # Channel.tx_commit_ok
   File "/Users/dialtone/dev/py-amqplib/amqplib/client_0_8.py", line  
183, in wait
     frame_type, payload = self._next_frame()
   File "/Users/dialtone/dev/py-amqplib/amqplib/client_0_8.py", line  
123, in _next_frame
     return self.connection._wait_channel(self.channel_id)
   File "/Users/dialtone/dev/py-amqplib/amqplib/client_0_8.py", line  
430, in _wait_channel
     self.wait()
   File "/Users/dialtone/dev/py-amqplib/amqplib/client_0_8.py", line  
203, in wait
     return self._dispatch(method_sig, args, content)
   File "/Users/dialtone/dev/py-amqplib/amqplib/client_0_8.py", line  
115, in _dispatch
     return amqp_method(self, args)
   File "/Users/dialtone/dev/py-amqplib/amqplib/client_0_8.py", line  
563, in _close
     raise AMQPConnectionException(reply_code, reply_text, (class_id,  
method_id))
amqplib.client_0_8.AMQPConnectionException: (541, u'INTERNAL_ERROR',  
(0, 0), '')


Sometimes (happened twice) transactions failed with this error output  
and another weird
thing is that message order is changed during rolling. The test  
programs always sent 20001
messages but sometimes I would receive only 19802 before the 'quit'  
message (usually
the last one) and then after restarting the receiver another 199  
messages (that sum
to 20001 so it's fine anyway).

For my usecase message order has absolutely no importance but I guess  
for something
else like real time data it is.

>> They look OK in the sense that even persistent messages can reach  
>> those
>> rates?
>
> I guess the IO bandwidth of your filesystem would be an important
> factor in this equation.

Yeah, absolutely.

Hope this measurements where useful for you :)

Here are the 2 scripts, can be used like this:

python my_send.py MESSAGES_NUMBER TRANSACTION_SIZE
python my_receive_direct.py QUEUE_NAME


# my_send.py
#!/usr/bin/env python
import sys
import time

import amqplib.client_0_8 as amqp

MAX = int(sys.argv[1])

def main():
     msg_body = '0'*1000 # 1k

     conn = amqp.Connection("localhost", userid="guest",  
password="guest")
     ch = conn.channel()
     ch.access_request('/data', active=True, write=True)
     ch.exchange_declare('X', type='direct', auto_delete=True)

     msg = amqp.Message(msg_body)

     t = time.time()
     ch.tx_select()
     interval = (int(sys.argv[2]) or MAX-1)
     for i in xrange(MAX):
         if i % interval == 0:
             ch.tx_commit()
             ch.tx_select()
         ch.basic_publish(msg, 'X')
     ch.basic_publish(amqp.Message('quit'), 'X')
     ch.tx_commit()
     ch.close()
     conn.close()

     print MAX/(time.time()-t), "KB/sec (or msg/sec)"

if __name__ == '__main__':
     main()
# end my_send.py

# my_receive_direct.py
#!/usr/bin/env python
import time
import sys
import amqplib.client_0_8 as amqp

counter = 0

def callback(msg):
     global counter
     counter += 1
     msg.channel.basic_ack(msg.delivery_tag)
     if msg.body == 'quit':
         msg.channel.basic_cancel(msg.consumer_tag)
     if counter % 100 == 0:
         sys.stdout.write(".")
         sys.stdout.flush()
     if counter % 1000 == 0:
         sys.stdout.write(str(counter))
         sys.stdout.flush()

def main():
     realm = '/data'
     exchange = 'X'
     queue = sys.argv[1]
     conn = amqp.Connection("localhost", userid="guest",  
password="guest")

     ch = conn.channel()
     ch.access_request(realm, active=True, passive=True, read=True)
     ch.exchange_declare(exchange, type='direct', durable=True,  
auto_delete=False)
     qname, _, _ = ch.queue_declare(queue, durable=True,  
auto_delete=False)
     ch.queue_bind(queue, exchange)
     ch.basic_consume(queue, callback=callback)

     try:
         t = time.time()
         while ch.callbacks:
             ch.wait()
     except:
         import traceback
         print traceback.format_exc()
     finally:
         #ch.queue_delete(qname)
         ch.close()
         conn.close()

     print
     print "Total Messages:", counter
     print counter / (time.time() - t), "KB/sec (or msg/sec)"


if __name__ == '__main__':
     main()
# end my_receive_direct.py

- --
Valentino Volonghi aka Dialtone
Now running MacOS X 10.5
Home Page: http://www.twisted.it
http://www.adroll.com

-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.4.9 (Darwin)

iEYEARECAAYFAkjWmCEACgkQ9Llz28widGX2yQCcCQtB5/eZIUf16cLVarCtxsmo
sIEAoMerWqfI6ljsuXW0lfXtY716CtTd
=7wug
-----END PGP SIGNATURE-----



From 0x6e6562 at gmail.com  Sun Sep 21 19:58:19 2008
From: 0x6e6562 at gmail.com (Ben Hood)
Date: Sun, 21 Sep 2008 19:58:19 +0100
Subject: [rabbitmq-discuss] [Minimum Air Induction] Introducing Shovel:
	An AMQP Relay
In-Reply-To: <48D691B8.3010805@lshift.net>
References: <10652705.176451221778705492.JavaMail.root@web4>
	<E066ABBA-2320-43BB-869A-BD31ACDDCF8E@gmail.com>
	<269388e30809200013m2564f264n97c6ec6834edef21@mail.gmail.com>
	<90169A17-9B0C-46EC-9396-F47DBC1B1115@gmail.com>
	<269388e30809200727p2eddbd02o66f3448b7b087857@mail.gmail.com>
	<1AF03629-BA1E-4878-86BC-0E78DDA0BC01@gmail.com>
	<269388e30809201117i2006097cn9603f2a060d2e9a7@mail.gmail.com>
	<77909B90-1231-4603-B0B8-DED5F9A63F72@gmail.com>
	<269388e30809210917x16425b18uddf4daf5b7086c5@mail.gmail.com>
	<48D691B8.3010805@lshift.net>
Message-ID: <269388e30809211158re2dc58fv925d8c2e5aff406b@mail.gmail.com>

Matthias,

On Sun, Sep 21, 2008 at 7:26 PM, Matthias Radestock <matthias at lshift.net> wrote:
>> No, because the current queue delivery mechanism takes a
>> robin-robin-ish approach, so the overall throughput is rate limited by
>> the slowest consumer subscribed to a queue.
>
> Not true. When messages due for delivery to a particular consumer back up at
> the TCP/IP level the broker will skip that consumer in its round-robin
> delivery.

Sure, but only when you hit the limit on a per-queue basis. So, yes,
you could load balance by saturating the whole thing :-)

Ben



From eran.sandler at gmail.com  Mon Sep 22 15:00:49 2008
From: eran.sandler at gmail.com (Eran Sandler)
Date: Mon, 22 Sep 2008 17:00:49 +0300
Subject: [rabbitmq-discuss] Error code 541
In-Reply-To: <48C91DE6.9090708@gmail.com>
References: <48C7C08C.90101@gmail.com> <48C7C257.4070604@lshift.net>	
	<48C7C645.3080405@gmail.com>	
	<269388e30809110347o7ba89312y5fec995035cddaab@mail.gmail.com>	
	<48C90F03.5060102@gmail.com>	
	<269388e30809110547j70ef638aic43afaec0c52f1b@mail.gmail.com>	
	<48C915C0.8060909@gmail.com>
	<269388e30809110607t6b4907b2l649e9cee1fb514c4@mail.gmail.com>
	<48C91DE6.9090708@gmail.com>
Message-ID: <48D7A511.4080909@gmail.com>

I'm happy to say that I may have found the problem to this issue.


If I run rabbitmq from the command line and NOT through erlsrv (in 
Windows erlsrv will run as a Windows service) the process is alive and 
well and not having any issues.


If I run it through erlsrv, it dies after less than 24 hours with the 
annoying error code 541.


Since Windows is a bit more annoying with running background processes 
(its not enough to add an "&" character :-) ) I wrote a small Windows 
service that acts as a delegate and executes rabbitmq's batch file 
(rabbitmq-server.bat).


If the real rabbitmq process dies from whatever reason, the Windows 
service will stop as if it died as well. That allows me to mimic the 
behavior one would see if running rabbitmq as a background process or as 
a task during boot on Linux.

So far its running for about 48 hours without a problem.


If you want, I can share the little Windows Service (I called it 
RabbitMQ Executer) with the list.

For ease of use and implementation time I wrote it in C# (in .NET), so 
it requires the .NET runtime, but it can easily be written in native C 
since all it does is open a thread and executes the RabbitMQ process.


Eran


Eran Sandler wrote:

> Here are the tests.
>
>
> There is the one project for producing stuff that looks like the 
> messages I'm sending and a very simple consumer.
>
>
> This is VERY crude (I did this very quickly) stuff and I might be 
> wrong in my programming paradigm that I use with RabbitMQ so please 
> let me know of everything I should change.
>
>
> That's basically what I do.
>
>
> Be sure to define the username, password and virtual. This sample 
> assumes there is a queue named ActionsQueue and it was already created 
> (creating it with the CreateQueue sample that comes with the .NET 
> library and making it durable will make it exactly how I've defined it).
>
>
> I don't use the automatic consumer that waits for data because I need 
> some flexibility in that area, that's why I have the sleep part.
>
>
> Hope that will help,
>
> Eran
>
>
> Ben Hood wrote:
>
>> Eran,
>>
>> On Thu, Sep 11, 2008 at 1:57 PM, Eran Sandler <eran.sandler at gmail.com> wrote:
>>   
>>> I don't use an exchange. I saw that its possible to use this without an
>>> exchange (but perhaps I'm screwing myself with regards to clustering, I
>>> haven't taken a closer look as to how to work well with clustering).
>>>     
>>
>> No, that's fine. What you are doing is using what is known as the
>> default exchange. This means that message is routed to a queue with
>> the same name as the routing key.
>>
>>   
>>> I think BasicConsume should work just fine. I saw that it can handle the Ack
>>> automatically. The reason I thought using BasicGet was to keep my options
>>> open as to refuse a message for a point in time where my consuming code will
>>> run on a couple of machines that might get upgraded sequentially. This might
>>> lead to scenario in which I have added a new message type I want to handle
>>> and I don't have the new code on all consumers.
>>>     
>>
>> You can ack manually if you want to. Set the no_ack flag to true and
>> then make a application specific decision of whether to ack or not in
>> the onDeliver callback.
>>
>>   
>>> Regarding the sample, I will write something quick based on my original code
>>> and send it so it will make your life (and mine) a lot nicer (and quicker)
>>>     
>>
>> Cool, hopefully one of us will get some time to look at it.
>>
>> Ben
>>   
>

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20080922/b330ec16/attachment.htm 

From 0x6e6562 at gmail.com  Mon Sep 22 20:05:30 2008
From: 0x6e6562 at gmail.com (Ben Hood)
Date: Mon, 22 Sep 2008 20:05:30 +0100
Subject: [rabbitmq-discuss] Error code 541
In-Reply-To: <48D7A511.4080909@gmail.com>
References: <48C7C08C.90101@gmail.com> <48C7C257.4070604@lshift.net>
	<48C7C645.3080405@gmail.com>
	<269388e30809110347o7ba89312y5fec995035cddaab@mail.gmail.com>
	<48C90F03.5060102@gmail.com>
	<269388e30809110547j70ef638aic43afaec0c52f1b@mail.gmail.com>
	<48C915C0.8060909@gmail.com>
	<269388e30809110607t6b4907b2l649e9cee1fb514c4@mail.gmail.com>
	<48C91DE6.9090708@gmail.com> <48D7A511.4080909@gmail.com>
Message-ID: <269388e30809221205uc847969q436f3ed84a9d3ec2@mail.gmail.com>

Eran,

On Mon, Sep 22, 2008 at 3:00 PM, Eran Sandler <eran.sandler at gmail.com> wrote:
> I'm happy to say that I may have found the problem to this issue.

:-)

Hubert began to look into your code, but got swamped with other stuff
just before he went on holiday, so it's great that you've managed to
solve it yourself.

> If you want, I can share the little Windows Service (I called it RabbitMQ
> Executer) with the list.
>
> For ease of use and implementation time I wrote it in C# (in .NET), so it
> requires the .NET runtime, but it can easily be written in native C since
> all it does is open a thread and executes the RabbitMQ process.

Cool - this would be an excellent idea.

FWIW I find that using github is an excellent way to quickly share
stuff - it's very flexible and of course versioned, so it makes
child's play out of collaborating with others.

But if you prefer just to append the source to a mail to the list, you
can do this as well.

HTH,

Ben



From 0x6e6562 at gmail.com  Mon Sep 22 20:54:18 2008
From: 0x6e6562 at gmail.com (Ben Hood)
Date: Mon, 22 Sep 2008 20:54:18 +0100
Subject: [rabbitmq-discuss] [Minimum Air Induction] Introducing Shovel:
	An AMQP Relay
In-Reply-To: <269388e30809211158re2dc58fv925d8c2e5aff406b@mail.gmail.com>
References: <10652705.176451221778705492.JavaMail.root@web4>
	<269388e30809200013m2564f264n97c6ec6834edef21@mail.gmail.com>
	<90169A17-9B0C-46EC-9396-F47DBC1B1115@gmail.com>
	<269388e30809200727p2eddbd02o66f3448b7b087857@mail.gmail.com>
	<1AF03629-BA1E-4878-86BC-0E78DDA0BC01@gmail.com>
	<269388e30809201117i2006097cn9603f2a060d2e9a7@mail.gmail.com>
	<77909B90-1231-4603-B0B8-DED5F9A63F72@gmail.com>
	<269388e30809210917x16425b18uddf4daf5b7086c5@mail.gmail.com>
	<48D691B8.3010805@lshift.net>
	<269388e30809211158re2dc58fv925d8c2e5aff406b@mail.gmail.com>
Message-ID: <269388e30809221254j41a4ffa4j3172859587fca261@mail.gmail.com>

Valentino,

On Sun, Sep 21, 2008 at 7:58 PM, Ben Hood <0x6e6562 at gmail.com> wrote:
> On Sun, Sep 21, 2008 at 7:26 PM, Matthias Radestock <matthias at lshift.net> wrote:
>>> No, because the current queue delivery mechanism takes a
>>> robin-robin-ish approach, so the overall throughput is rate limited by
>>> the slowest consumer subscribed to a queue.
>>
>> Not true. When messages due for delivery to a particular consumer back up at
>> the TCP/IP level the broker will skip that consumer in its round-robin
>> delivery.
>
> Sure, but only when you hit the limit on a per-queue basis. So, yes,
> you could load balance by saturating the whole thing :-)

After speaking with Matthias today it transpired that he had looked at
a different angle of your question than I did.

Specifically, if you add more consumers to a queue, you will increase
your processing capacity and also be able to scale by doing so.

This will work fine if the consumers are relatively homogeneous wrt
the processing time per job. Under normal circumstances, identical
code should execute in around about the same amount of time on an
identically spec'ed machine, if the respective scheduler allows each
worker to execute in an unthrottled fashion. However when the
processing time becomes heterogeneous across consumers, what you see
is that the overall rate of consumption will be bound by the slowest
consumer, even if processing resources are actually available to the
other workers.

In this situation, the workers are not fully utilizing the available CPU cycles.

The source of this heterogeneity could be resource contention on
specific objects with the execution scope of the worker or something
like the fact that tasks may themselves be heterogeneous in the amount
of resources that are required to complete them.

So the point that Matthias made about the current load balancing is
entirely correct, if a consumer doesn't drain their TCP receive
buffer, they will be skipped.

But this is a coincidental load balancing strategy and only really
works when you have back pressure over the network (which
co-incidentally *may* not kick in if you are using the Erlang clint in
direct mode).

The solution to providing more fine grained control over the flow of
messages across multiple consumers in the QoS feature that I outlined
before. But there is no ETA on this.

HTH,

Ben



From tsuraan at gmail.com  Mon Sep 22 21:43:17 2008
From: tsuraan at gmail.com (tsuraan)
Date: Mon, 22 Sep 2008 15:43:17 -0500
Subject: [rabbitmq-discuss] Publish won't work without transaction?
Message-ID: <84fb38e30809221343l171b2fddkbf1d6184de554d92@mail.gmail.com>

Using python's ampqlib, I'm doing the following:

import amqplib.client_0_8 as A

def main():
  conn = A.Connection('localhost', userid='tsuraan', password='tsuraan')
  chan = conn.channel()

  for i in range(1000):
    print i
    m = A.Message(str(i), delivery_mode=2)
    print chan.basic_publish(m, 'myexchange', 'myroute',
mandatory=True, immediate=True)


When I run that code, it never gives an error, but it also never
publishes a message.  The queues and exchanges are declared durable,
non auto-deleting.  If I put chan.tx_select() and chan.tx_commit()
around the basic_publish call, all the messages are delivered
correctly (i.e. they are in the queue associated with that exchange),
but the time to run the program goes from <1s to 72s.

Can I publish messages without using a transaction?



From 0x6e6562 at gmail.com  Mon Sep 22 22:01:23 2008
From: 0x6e6562 at gmail.com (Ben Hood)
Date: Mon, 22 Sep 2008 22:01:23 +0100
Subject: [rabbitmq-discuss] Publish won't work without transaction?
In-Reply-To: <84fb38e30809221343l171b2fddkbf1d6184de554d92@mail.gmail.com>
References: <84fb38e30809221343l171b2fddkbf1d6184de554d92@mail.gmail.com>
Message-ID: <269388e30809221401x5c808f4dt6da8c2e06c34b35d@mail.gmail.com>

Tsuraan,

On Mon, Sep 22, 2008 at 9:43 PM, tsuraan <tsuraan at gmail.com> wrote:
>    print chan.basic_publish(m, 'myexchange', 'myroute',
> mandatory=True, immediate=True)

If you turn the immediate flag off you should be able to publish this
without a TX.

HTH,

Ben



From 0x6e6562 at gmail.com  Mon Sep 22 22:11:28 2008
From: 0x6e6562 at gmail.com (Ben Hood)
Date: Mon, 22 Sep 2008 22:11:28 +0100
Subject: [rabbitmq-discuss] [Minimum Air Induction] Introducing Shovel:
	An AMQP Relay
In-Reply-To: <14316072.3161222082030572.JavaMail.root@web6>
References: <14316072.3161222082030572.JavaMail.root@web6>
Message-ID: <269388e30809221411r63508956r7d4908f476a62443@mail.gmail.com>

Haldun,

On Mon, Sep 22, 2008 at 12:13 PM, Squarespace Services
<services at squarespace.com> wrote:
> Haldun <hbayhantopcu at gmail.com> (Unregistered) commented on Introducing Shovel: An AMQP Relay:
>
> Hi,
>
> I am trying to run shovel application, however it seems not to be running after these commands:
>
> $ erl -rabbit tcp_listeners '[{"127.0.0.1", 5672}]' -boot start_sasl -s rabbit -s shovel
> 1> application:which_applications().
> [{rabbit,"RabbitMQ","%%VERSION%%"},
> {mnesia,"MNESIA CXC 138 12","4.4.3"},
> {os_mon,"CPO CXC 138 46","2.1.6"},
> {sasl,"SASL CXC 138 11","2.1.5.3"},
> {stdlib,"ERTS CXC 138 10","1.15.3"},
> {kernel,"ERTS CXC 138 10","2.12.3"}]
>
> When I manually try to run shovel with
>
> 2> application:start(shovel).
>
> erlang just hangs.
>
> Thanks in advance.
>
> (System: Mac OS X 10.5.4, Erlang 5.6.3, RabbitMQ server, Rabbit erlang client, and shovel: checked out from repo)
>
>
>
> <http://hopper.squarespace.com/blog/2008/6/22/introducing-shovel-an-amqp-relay.html>
>
> --
> Powered by Squarespace (http://www.squarespace.com/)
>

I think you might need to put the Shovel binaries on the load path of
the interpreter:

-pa PATH_TO_SHOVEL_EBIN

should do the trick.

IIRC this is documented in the article as well.

BTW, I am cc'ing the Rabbit list on this one as there are some people
out there using Shovel.

HTH,

Ben



From tsuraan at gmail.com  Mon Sep 22 22:19:53 2008
From: tsuraan at gmail.com (tsuraan)
Date: Mon, 22 Sep 2008 16:19:53 -0500
Subject: [rabbitmq-discuss] Publish won't work without transaction?
In-Reply-To: <269388e30809221401x5c808f4dt6da8c2e06c34b35d@mail.gmail.com>
References: <84fb38e30809221343l171b2fddkbf1d6184de554d92@mail.gmail.com>
	<269388e30809221401x5c808f4dt6da8c2e06c34b35d@mail.gmail.com>
Message-ID: <84fb38e30809221419v456f39cfwcc3ed9c7dce59d09@mail.gmail.com>

> If you turn the immediate flag off you should be able to publish this
> without a TX.
>
> HTH,
>
> Ben

Ok, that somewhat works.  So now I must be flooding it with too much
data, so it's dropping most of the messages (of the 1,000 I send,
about 400 get enqueued).  I guess that's the difference between using
a reliable transaction and just flooding the server with messages
then?

Is there a way that I can tell whether the message I sent was dropped
by the server?  Getting rid of immediate did enqueue ~40% of the
messages that I sent, in under a second, but I'd really like all my
messages to be enqueued.  Is there a way to do that that won't take
over a minute?

I guess my basic question is, what's the fastest way to send a message
such that I will either know it's delivered to a queue or get an error
saying it wasn't.



From deldotdr at gmail.com  Mon Sep 22 22:39:18 2008
From: deldotdr at gmail.com (Dorian Raymer)
Date: Mon, 22 Sep 2008 14:39:18 -0700
Subject: [rabbitmq-discuss] txAMQP Help
In-Reply-To: <200809191038.27943.esteve@sindominio.net>
References: <ea3c455d0809181452s1ad7a21endeb1027af648c9b7@mail.gmail.com>
	<200809191038.27943.esteve@sindominio.net>
Message-ID: <ea3c455d0809221439k1a62d11bp46febe194e8e0e2@mail.gmail.com>

Hi Esteve,

On Fri, Sep 19, 2008 at 1:38 AM, Esteve Fernandez <esteve at sindominio.net>wrote:

> Hi Dorian, thanks for trying txAMQP!
>
> El Jueves 18 Septiembre 2008 23:52:27 Dorian Raymer escribi?:
> > Hi,
> > I was very excited by the recent thread announcing txAMQP! I heart
> Twisted!
> > I started playing with the
> > txamqp_example.py<
> http://www.nabble.com/attachment/19436045/0/txamqp_exampl
> >e.py>posted by Esteve, but I'm having trouble getting going.
> >
> > I'm a rabbitmq newb (having a lot of fun getting started :) and I have
> > experience with Twisted.
> >
> > I'm running rabbitmq 1.4.0 with the default database.
> > When running txamqp_example.py, I used these parameters:
> > hostname = "localhost",
> > port = 5672,
> > vhost = "/",
> > username = "guest",
> > password = "guest",
> > specFile (I tried both amqp.0-8.xml, and 0-9.xml)
>
> Did you use the spec files that were shipped with txAMQP or the official
> ones[1]?
>

This made a big difference. Using the official 0-8.xml spec works! The 0-9
and 0-10 specs did not, however.

Thanks for the help!
 -Dorian


>
> Note that there are interoperability issues between the Qpid Python
> libraries
> and RabbitMQ. From http://www.rabbitmq.com/interoperability.html:
>
> "Note that the 0-8 spec file that comes with the test suite is different
> from
> the official spec."
>
> > The Problem (there is no error message to show...):
>
> What's in the rabbit.log file? When I wrote that example, I noticed that
> RabbitMQ couldn't decode the basic.consume frame:
>
> connection <0.202.0> (running), channel 1 - error:
> {amqp,frame_error,
>      "cannot decode
> <<0,0,12,116,101,115,116,45,113,117,101,117,101,45,49,0,0,0,0,0,0>>",
>      'basic.consume'}
>
> however, using the official spec fixed the issue.
>
> Cheers.
>
> 1 - http://jira.amqp.org/confluence/display/AMQP/Download
>
> _______________________________________________
> rabbitmq-discuss mailing list
> rabbitmq-discuss at lists.rabbitmq.com
> http://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20080922/dec0ba0d/attachment.htm 

From 0x6e6562 at gmail.com  Mon Sep 22 23:21:18 2008
From: 0x6e6562 at gmail.com (Ben Hood)
Date: Mon, 22 Sep 2008 23:21:18 +0100
Subject: [rabbitmq-discuss] Publish won't work without transaction?
In-Reply-To: <84fb38e30809221419v456f39cfwcc3ed9c7dce59d09@mail.gmail.com>
References: <84fb38e30809221343l171b2fddkbf1d6184de554d92@mail.gmail.com>
	<269388e30809221401x5c808f4dt6da8c2e06c34b35d@mail.gmail.com>
	<84fb38e30809221419v456f39cfwcc3ed9c7dce59d09@mail.gmail.com>
Message-ID: <269388e30809221521p6aca6e30q9cd2cb9511f22aeb@mail.gmail.com>

Tsuraan,

On Mon, Sep 22, 2008 at 10:19 PM, tsuraan <tsuraan at gmail.com> wrote:
> Ok, that somewhat works.  So now I must be flooding it with too much
> data, so it's dropping most of the messages (of the 1,000 I send,
> about 400 get enqueued).  I guess that's the difference between using
> a reliable transaction and just flooding the server with messages
> then?

So how do you know whether they're enqueued or not?

> Is there a way that I can tell whether the message I sent was dropped
> by the server?

You can run rabbit_amqqueue:stat_all() in the shell.

> Getting rid of immediate did enqueue ~40% of the
> messages that I sent, in under a second, but I'd really like all my
> messages to be enqueued.  Is there a way to do that that won't take
> over a minute?

That shouldn't take a minute even with a TX per message and logging to disk.

I think something may not be quite right with your setup.

>
> I guess my basic question is, what's the fastest way to send a message
> such that I will either know it's delivered to a queue or get an error
> saying it wasn't.

Either with a transaction or by setting up a return handler (and
setting the mandatory flag).

BTW, when I run this code:

#!/usr/bin/python2.5

import sys
from time import time
import amqplib.client_0_8 as A

q = "q-%d" % int(time())

conn = A.Connection("127.0.0.1", "guest", "guest")
chan = conn.channel()

chan.queue_declare(queue=q, auto_delete=True, durable=False)

for i in range(1000):
   print i
   m = A.Message(str(i), delivery_mode=1)
   print chan.basic_publish(m, "", q, mandatory=True, immediate=False)

and then in the shell

rabbit at xlr8)3> rabbit_amqqueue:stat_all().
[{ok,{resource,<<"/">>,queue,<<"q-1222121318">>},1000,0}]

which would indicate that 1000 messages got enqueued.

And maybe this is a stupid question, but why are you enqueuing stuff?
Don't you want it to be delivered?

HTH,

Ben



From 0x6e6562 at gmail.com  Mon Sep 22 23:25:35 2008
From: 0x6e6562 at gmail.com (Ben Hood)
Date: Mon, 22 Sep 2008 23:25:35 +0100
Subject: [rabbitmq-discuss] txAMQP Help
In-Reply-To: <ea3c455d0809221439k1a62d11bp46febe194e8e0e2@mail.gmail.com>
References: <ea3c455d0809181452s1ad7a21endeb1027af648c9b7@mail.gmail.com>
	<200809191038.27943.esteve@sindominio.net>
	<ea3c455d0809221439k1a62d11bp46febe194e8e0e2@mail.gmail.com>
Message-ID: <269388e30809221525h3bccb328lc418fe50626f757c@mail.gmail.com>

Dorian,

On Mon, Sep 22, 2008 at 10:39 PM, Dorian Raymer <deldotdr at gmail.com> wrote:
> This made a big difference. Using the official 0-8.xml spec works! The 0-9
> and 0-10 specs did not, however.

This may be because Rabbit implements 0-8 of the spec but not 0-9 and 0-10.

Ben



From tsuraan at gmail.com  Tue Sep 23 00:13:24 2008
From: tsuraan at gmail.com (tsuraan)
Date: Mon, 22 Sep 2008 18:13:24 -0500
Subject: [rabbitmq-discuss] Publish won't work without transaction?
In-Reply-To: <269388e30809221521p6aca6e30q9cd2cb9511f22aeb@mail.gmail.com>
References: <84fb38e30809221343l171b2fddkbf1d6184de554d92@mail.gmail.com>
	<269388e30809221401x5c808f4dt6da8c2e06c34b35d@mail.gmail.com>
	<84fb38e30809221419v456f39cfwcc3ed9c7dce59d09@mail.gmail.com>
	<269388e30809221521p6aca6e30q9cd2cb9511f22aeb@mail.gmail.com>
Message-ID: <84fb38e30809221613r35fac041v4e214efc20d37274@mail.gmail.com>

> So how do you know whether they're enqueued or not?

When the program's done running, I do a passive queue_declare, and the
message count has increased by ~400 each time the program has run.
It's actually more like 300 the first time and 500 the second time,
but it seems like overall, I get about 400 per run.

>> Is there a way that I can tell whether the message I sent was dropped
>> by the server?
>
> You can run rabbit_amqqueue:stat_all() in the shell.

Ok, so there isn't a return code from basic_publish that will tell me
it was dropped?

> That shouldn't take a minute even with a TX per message and logging to disk.
>
> I think something may not be quite right with your setup.

I'd be willing to believe that.  When running with one transaction per
message, my system is almost idle.  python's taking 2-3% of the cpu,
beam.smp is taking less than that, and my IO is a few KB/s.  Do you
have any advice for figuring out what's going on?  My system is a
core2 duo with a pair of raptor10k drives in RAID1 on a 3ware 9650; I
shouldn't be too starved for cpu, io, or memory with this setup, so
any advice for where to start would be much appreciated.

> Either with a transaction or by setting up a return handler (and
> setting the mandatory flag).
>
> BTW, when I run this code:
>
> #!/usr/bin/python2.5
>
> import sys
> from time import time
> import amqplib.client_0_8 as A
>
> q = "q-%d" % int(time())
>
> conn = A.Connection("127.0.0.1", "guest", "guest")
> chan = conn.channel()
>
> chan.queue_declare(queue=q, auto_delete=True, durable=False)
>
> for i in range(1000):
>    print i
>    m = A.Message(str(i), delivery_mode=1)
>    print chan.basic_publish(m, "", q, mandatory=True, immediate=False)
>
> and then in the shell
>
> rabbit at xlr8)3> rabbit_amqqueue:stat_all().
> [{ok,{resource,<<"/">>,queue,<<"q-1222121318">>},1000,0}]
>
> which would indicate that 1000 messages got enqueued.

Is the difference then that my queues are persistent?  I'm using a
topic exchange with just one persistent, non-autodelete queue.  Does
that change things?

> And maybe this is a stupid question, but why are you enqueuing stuff?
> Don't you want it to be delivered?

Isn't enqueuing a necessary step before delivery?  The system I'm
working on processes a lot of files, and as files are processed new
files or database rows are created that have to be processed
downstream.  Sometimes the programs doing the processing get hung up
on invalid data, or get flooded with more data than they can process
in a timely manner, so the workloads get really badly backed up.  I've
seen programs that have millions of tasks in their job queues more
than a few times.

We currently have a "message queue" system that is just files written
to the hard drive; different directories are the job queues for
different actors, and the files in them are just identifiers for
database or file-based workloads.  I want to replace that with real
message queue system for all sorts of reasons, so I'm just
experimenting with RabbitMQ to see if it does what I need, and to see
how good the performance and stability are.



From rabbitmq-discuss_efine at usa.net  Tue Sep 23 00:54:02 2008
From: rabbitmq-discuss_efine at usa.net (Edwin Fine)
Date: Mon, 22 Sep 2008 19:54:02 -0400
Subject: [rabbitmq-discuss] Publish won't work without transaction?
In-Reply-To: <84fb38e30809221613r35fac041v4e214efc20d37274@mail.gmail.com>
References: <84fb38e30809221343l171b2fddkbf1d6184de554d92@mail.gmail.com>
	<269388e30809221401x5c808f4dt6da8c2e06c34b35d@mail.gmail.com>
	<84fb38e30809221419v456f39cfwcc3ed9c7dce59d09@mail.gmail.com>
	<269388e30809221521p6aca6e30q9cd2cb9511f22aeb@mail.gmail.com>
	<84fb38e30809221613r35fac041v4e214efc20d37274@mail.gmail.com>
Message-ID: <6c2563b20809221654v12e70b02ud0c13e4d31d2c7da@mail.gmail.com>

Tsuraan,

I am using durable, non-auto-deleting queues and exchanges with persistent
messages. I'm using the Erlang client in network mode, and not using AMQP
transactions. Every message that I basic.publish makes it to the queue, even
if there is no consumer on the other side draining the queue. No messages
are dropped. I have similar hardware to yours except my disks aren't as fast
:)

Here are my exchange parameters:
:
ExchangeDeclare = #'exchange.declare'{ticket = Ticket, exchange = Exchange,
type = <<"direct">>,
        passive = false, durable = true, auto_delete = false, internal =
false,
        nowait = false, arguments = []}

Here are the queue declare parameters:

    QueueDeclare = #'queue.declare'{
        ticket = Ticket,
        queue = Q,
        passive = false,        % This is a real creation request, not a
status check
        durable = true,         % Messages must be persistent and survive
server restart
        exclusive = false,
        auto_delete = false,    % Don't auto-delete the queue when released
by channel
        nowait = false,         % Wait for a queue.declare_ok response from
the server
        arguments = []},

And the queue bind:

#'queue.bind'{ticket = Ticket, queue = Q1, exchange = X,
                              routing_key = Q1, nowait = false, arguments =
[]}

Here is the basic.publish setup:

#publish{
        routing_key = RoutingKey,
        queue = Q,
        exchange = X,
        bind_key = _BindKey,
        payload = Payload,
        mandatory = false,  % If true, server sends Return if msg
unroutable, else silently drops msg
        immediate = false   % If true, server sends Return if msg cannot be
delivered immediately, else queues msg
    }

On a different topic, if you are expecting to queue millions of persistent
messages to replace a filesystem-based queuing mechanism, you need to be
aware that at present, RabbitMQ keeps all undelivered messages in memory. If
they are persistent, then they are also saved on disk, but my understanding
is that every message is also kept in memory. There is therefore a memory
constraint and you can't just happily enqueue messages without draining the
queues until the disk is full, without risking memory exhaustion and
resultant Erlang node crash. I understand there are plans to implement an
"overflow to disk" mechanism, but the ETA is unknown to me. Ben can say more
about this.

Hope this helps.

On Mon, Sep 22, 2008 at 7:13 PM, tsuraan <tsuraan at gmail.com> wrote:

> > So how do you know whether they're enqueued or not?
>
> When the program's done running, I do a passive queue_declare, and the
> message count has increased by ~400 each time the program has run.
> It's actually more like 300 the first time and 500 the second time,
> but it seems like overall, I get about 400 per run.
>
> >> Is there a way that I can tell whether the message I sent was dropped
> >> by the server?
> >
> > You can run rabbit_amqqueue:stat_all() in the shell.
>
> Ok, so there isn't a return code from basic_publish that will tell me
> it was dropped?
>
> > That shouldn't take a minute even with a TX per message and logging to
> disk.
> >
> > I think something may not be quite right with your setup.
>
> I'd be willing to believe that.  When running with one transaction per
> message, my system is almost idle.  python's taking 2-3% of the cpu,
> beam.smp is taking less than that, and my IO is a few KB/s.  Do you
> have any advice for figuring out what's going on?  My system is a
> core2 duo with a pair of raptor10k drives in RAID1 on a 3ware 9650; I
> shouldn't be too starved for cpu, io, or memory with this setup, so
> any advice for where to start would be much appreciated.
>
> > Either with a transaction or by setting up a return handler (and
> > setting the mandatory flag).
> >
> > BTW, when I run this code:
> >
> > #!/usr/bin/python2.5
> >
> > import sys
> > from time import time
> > import amqplib.client_0_8 as A
> >
> > q = "q-%d" % int(time())
> >
> > conn = A.Connection("127.0.0.1", "guest", "guest")
> > chan = conn.channel()
> >
> > chan.queue_declare(queue=q, auto_delete=True, durable=False)
> >
> > for i in range(1000):
> >    print i
> >    m = A.Message(str(i), delivery_mode=1)
> >    print chan.basic_publish(m, "", q, mandatory=True, immediate=False)
> >
> > and then in the shell
> >
> > rabbit at xlr8)3> rabbit_amqqueue:stat_all().
> > [{ok,{resource,<<"/">>,queue,<<"q-1222121318">>},1000,0}]
> >
> > which would indicate that 1000 messages got enqueued.
>
> Is the difference then that my queues are persistent?  I'm using a
> topic exchange with just one persistent, non-autodelete queue.  Does
> that change things?
>
> > And maybe this is a stupid question, but why are you enqueuing stuff?
> > Don't you want it to be delivered?
>
> Isn't enqueuing a necessary step before delivery?  The system I'm
> working on processes a lot of files, and as files are processed new
> files or database rows are created that have to be processed
> downstream.  Sometimes the programs doing the processing get hung up
> on invalid data, or get flooded with more data than they can process
> in a timely manner, so the workloads get really badly backed up.  I've
> seen programs that have millions of tasks in their job queues more
> than a few times.
>
> We currently have a "message queue" system that is just files written
> to the hard drive; different directories are the job queues for
> different actors, and the files in them are just identifiers for
> database or file-based workloads.  I want to replace that with real
> message queue system for all sorts of reasons, so I'm just
> experimenting with RabbitMQ to see if it does what I need, and to see
> how good the performance and stability are.
>
> _______________________________________________
> rabbitmq-discuss mailing list
> rabbitmq-discuss at lists.rabbitmq.com
> http://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20080922/a3523210/attachment.htm 

From dialtone at gmail.com  Tue Sep 23 03:24:59 2008
From: dialtone at gmail.com (Valentino Volonghi)
Date: Mon, 22 Sep 2008 19:24:59 -0700
Subject: [rabbitmq-discuss] erlang client API: transactions
Message-ID: <D80A5FE3-1B0F-442C-9027-A232954EE774@gmail.com>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

so I'm trying to add support for transactions to my simple forwarding  
application, I started by
implementing the 'commit every 500 messages' in the following way:

handle_info(#'tx.select_ok'{}, State) ->
     {noreply, State};

handle_info(#'tx.commit_ok'{}, State) ->
     {noreply, State};

handle_info({#'basic.deliver'{routing_key = RoutingKey,
                               delivery_tag = DeliveryTag},
              #content{payload_fragments_rev = [Payload]}},
             State = #shovel_state{local = LocalBroker,
                                   remote = RemoteBroker,
                                   exchange = Exchange,
                                   sent = Sent,
                                   ack = Acks}) ->
     deliver(State, RoutingKey, DeliveryTag, Payload, LocalBroker,  
RemoteBroker, Exchange, Sent, Acks).

deliver(State, RoutingKey, DeliveryTag, Payload, _LocalBroker,  
RemoteBroker, Exchange, 0, []) ->
     amqp:tx_select(RemoteBroker),
     amqp:send_message(RemoteBroker, RoutingKey, Payload, Exchange),
     NewState = State#shovel_state{sent=1, ack=[DeliveryTag]},
     {noreply, NewState};

deliver(State, RoutingKey, DeliveryTag, Payload, LocalBroker,  
RemoteBroker, Exchange, 499, Acks) ->
     amqp:send_message(RemoteBroker, RoutingKey, Payload, Exchange),
     amqp:tx_commit(RemoteBroker),
     lists:foreach(fun(X) -> amqp:ack(LocalBroker, X) end,  
[DeliveryTag|Acks]),
     NewState = State#shovel_state{sent=0, ack=[]},
     {noreply, NewState};

deliver(State, RoutingKey, DeliveryTag, Payload, _LocalBroker,  
RemoteBroker, Exchange, Sent, Acks) ->
     amqp:tx_select(RemoteBroker),
     amqp:send_message(RemoteBroker, RoutingKey, Payload, Exchange),
     NewState = State#shovel_state{sent=Sent+1, ack=[DeliveryTag|Acks]},
     {noreply, NewState}.

and I implemented ack and tx_commit/tx_select like this:

ack({_Connection, Channel, _Ticket}, DeliveryTag) ->
     BasicAck = #'basic.ack'{delivery_tag = DeliveryTag, multiple =  
false},
     ok = amqp_channel:cast(Channel, BasicAck).

tx_select({_Connection, Channel, _Ticket}) ->
     ok = amqp_channel:cast(Channel, #'tx.select'{}).

tx_commit({_Connection, Channel, _Ticket}) ->
     ok = amqp_channel:cast(Channel, #'tx.commit'{}).

Unfortunately when I try to run this code, during the forwarding I get  
the following exception:

=ERROR REPORT==== 22-Sep-2008::19:23:11 ===
** Generic server <0.150.0> terminating
** Last message in was {method,{'tx.select_ok'},none}
** When Server state == {channel_state,1,<0.146.0>,<0.148.0>,<0.151.0>,
                             #Fun<amqp_network_driver.do.2>,
                             #Fun<amqp_network_driver.do.3>,
                             #Fun<amqp_network_driver.close_channel.1>,
                             {[],[]},
                             {[],[]},
                             {dict,0,16,16,8,80,48,
                                 {[],[],[],[],[],[],[],[],[],[],[],[], 
[],[],[],
                                  []},
                                 {{[],[],[],[],[],[],[],[],[],[],[],[], 
[],[],
                                   [],[]}}},
                             false,undefined,
                             {dict,0,16,16,8,80,48,
                                 {[],[],[],[],[],[],[],[],[],[],[],[], 
[],[],[],
                                  []},
                                 {{[],[],[],[],[],[],[],[],[],[],[],[], 
[],[],
                                   [],[]}}}}
** Reason for termination ==
** {{badmatch,{empty,{[],[]}}},
     [{amqp_channel,rpc_bottom_half,2},
      {gen_server,handle_msg,5},
      {proc_lib,init_p,5}]}

Which clearly means that I badly matched somewhere... my best guess is  
the tx_select/tx_commit
functions but then how should I fix them? (sorry for this newb  
question).

- --
Valentino Volonghi aka Dialtone
Now running MacOS X 10.5
Home Page: http://www.twisted.it
http://www.adroll.com

-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.4.9 (Darwin)

iEYEARECAAYFAkjYU3sACgkQ9Llz28widGUvqACZAaF5i6y0RCeq6S515PPERjsy
09kAoLHg1ohSFpGpDd2SGCe6I2s6Vqw6
=lGsw
-----END PGP SIGNATURE-----



From rabbitmq-discuss_efine at usa.net  Tue Sep 23 05:49:25 2008
From: rabbitmq-discuss_efine at usa.net (Edwin Fine)
Date: Tue, 23 Sep 2008 00:49:25 -0400
Subject: [rabbitmq-discuss] erlang client API: transactions
In-Reply-To: <D80A5FE3-1B0F-442C-9027-A232954EE774@gmail.com>
References: <D80A5FE3-1B0F-442C-9027-A232954EE774@gmail.com>
Message-ID: <6c2563b20809222149x3fd13247q38f759ceb7b0762b@mail.gmail.com>

I believe this is coming from the Erlang client, in
amqp_channel:rpc_bottom_half/2. I can't tell you why your program is doing
this, only where the error message originates. It seems to be happening in
response to receiving a tx.select_ok, AFAICS.

If you look at the code for rpc_bottom_half (reproduced at the end of this
email for convenience), the line

{{value, {From,_}}, NewRequestQueue} = queue:out(RequestQueue)

will create the error message you are seeing if RequestQueue is empty. This
can clearly be seen in the shell:

1> EmptyQ = queue:new().
{[],[]}
2> {{value, {From,_}}, NewRequestQueue} = queue:out(EmptyQ).
** exception error: no match of right hand side value *{empty,{[],[]}}*

I don't know if this is a bug or one of those "can't happen" things that
just didn't give a nice error message. I suspect the latter, because the
code just cannot continue without the value of "From" to send a reply to.
Why should the function have been called with a reply if the reply queue is
empty? Something's wrong somewhere.

In addition, maybe I am too tired to see straight, but this looks really
suspect:

    catch case queue:head(NewRequestQueue) of
        empty ->
            ok;
        {NewFrom,Method} ->
            Do2(Writer,Method)
    end,

This is because queue:head/1 exits when it is empty and does not return
'empty', so the catch will return an EXIT:

1> catch queue:head(queue:new()).
{'EXIT',{empty,[{queue,head,[{[],[]}]},
                {erl_eval,do_apply,5},
                {erl_eval,expr,5},
                {shell,exprs,6},
                {shell,eval_exprs,6},
                {shell,eval_loop,3}]}}

I think this should be

    catch case queue:head(NewRequestQueue) of
        {'EXIT', {empty,_}} ->
            ok;
        {NewFrom,Method} ->
            Do2(Writer,Method)
    end,

Maybe an empty queue is one of those things that should never happen, but
like I said, I am really tired...


*Code reproduced from amqp_channel.erl*

rpc_bottom_half(Reply, State = #channel_state{writer_pid = Writer,
                                              rpc_requests = RequestQueue,
                                              do2 = Do2}) ->
    *{{value, {From,_}}, NewRequestQueue} = queue:out(RequestQueue),*
    gen_server:reply(From, Reply),
    catch case queue:head(NewRequestQueue) of
        empty ->
            ok;
        {NewFrom,Method} ->
            Do2(Writer,Method)
    end,
    NewState = State#channel_state{rpc_requests = NewRequestQueue},
    {noreply, NewState}.


On Mon, Sep 22, 2008 at 10:24 PM, Valentino Volonghi <dialtone at gmail.com>wrote:

> -----BEGIN PGP SIGNED MESSAGE-----
> Hash: SHA1
>
> so I'm trying to add support for transactions to my simple forwarding
> application, I started by
> implementing the 'commit every 500 messages' in the following way:
>
> handle_info(#'tx.select_ok'{}, State) ->
>     {noreply, State};
>
> handle_info(#'tx.commit_ok'{}, State) ->
>     {noreply, State};
>
> handle_info({#'basic.deliver'{routing_key = RoutingKey,
>                               delivery_tag = DeliveryTag},
>              #content{payload_fragments_rev = [Payload]}},
>             State = #shovel_state{local = LocalBroker,
>                                   remote = RemoteBroker,
>                                   exchange = Exchange,
>                                   sent = Sent,
>                                   ack = Acks}) ->
>     deliver(State, RoutingKey, DeliveryTag, Payload, LocalBroker,
> RemoteBroker, Exchange, Sent, Acks).
>
> deliver(State, RoutingKey, DeliveryTag, Payload, _LocalBroker,
> RemoteBroker, Exchange, 0, []) ->
>     amqp:tx_select(RemoteBroker),
>     amqp:send_message(RemoteBroker, RoutingKey, Payload, Exchange),
>     NewState = State#shovel_state{sent=1, ack=[DeliveryTag]},
>     {noreply, NewState};
>
> deliver(State, RoutingKey, DeliveryTag, Payload, LocalBroker,
> RemoteBroker, Exchange, 499, Acks) ->
>     amqp:send_message(RemoteBroker, RoutingKey, Payload, Exchange),
>     amqp:tx_commit(RemoteBroker),
>     lists:foreach(fun(X) -> amqp:ack(LocalBroker, X) end,
> [DeliveryTag|Acks]),
>     NewState = State#shovel_state{sent=0, ack=[]},
>     {noreply, NewState};
>
> deliver(State, RoutingKey, DeliveryTag, Payload, _LocalBroker,
> RemoteBroker, Exchange, Sent, Acks) ->
>     amqp:tx_select(RemoteBroker),
>     amqp:send_message(RemoteBroker, RoutingKey, Payload, Exchange),
>     NewState = State#shovel_state{sent=Sent+1, ack=[DeliveryTag|Acks]},
>     {noreply, NewState}.
>
> and I implemented ack and tx_commit/tx_select like this:
>
> ack({_Connection, Channel, _Ticket}, DeliveryTag) ->
>     BasicAck = #'basic.ack'{delivery_tag = DeliveryTag, multiple =
> false},
>     ok = amqp_channel:cast(Channel, BasicAck).
>
> tx_select({_Connection, Channel, _Ticket}) ->
>     ok = amqp_channel:cast(Channel, #'tx.select'{}).
>
> tx_commit({_Connection, Channel, _Ticket}) ->
>     ok = amqp_channel:cast(Channel, #'tx.commit'{}).
>
> Unfortunately when I try to run this code, during the forwarding I get
> the following exception:
>
> =ERROR REPORT==== 22-Sep-2008::19:23:11 ===
> ** Generic server <0.150.0> terminating
> ** Last message in was {method,{'tx.select_ok'},none}
> ** When Server state == {channel_state,1,<0.146.0>,<0.148.0>,<0.151.0>,
>                             #Fun<amqp_network_driver.do.2>,
>                             #Fun<amqp_network_driver.do.3>,
>                             #Fun<amqp_network_driver.close_channel.1>,
>                             {[],[]},
>                             {[],[]},
>                             {dict,0,16,16,8,80,48,
>                                 {[],[],[],[],[],[],[],[],[],[],[],[],
> [],[],[],
>                                  []},
>                                 {{[],[],[],[],[],[],[],[],[],[],[],[],
> [],[],
>                                   [],[]}}},
>                             false,undefined,
>                             {dict,0,16,16,8,80,48,
>                                 {[],[],[],[],[],[],[],[],[],[],[],[],
> [],[],[],
>                                  []},
>                                 {{[],[],[],[],[],[],[],[],[],[],[],[],
> [],[],
>                                   [],[]}}}}
> ** Reason for termination ==
> ** {{badmatch,{empty,{[],[]}}},
>     [{amqp_channel,rpc_bottom_half,2},
>      {gen_server,handle_msg,5},
>      {proc_lib,init_p,5}]}
>
> Which clearly means that I badly matched somewhere... my best guess is
> the tx_select/tx_commit
> functions but then how should I fix them? (sorry for this newb
> question).
>
> - --
> Valentino Volonghi aka Dialtone
> Now running MacOS X 10.5
> Home Page: http://www.twisted.it
> http://www.adroll.com
>
> -----BEGIN PGP SIGNATURE-----
> Version: GnuPG v1.4.9 (Darwin)
>
> iEYEARECAAYFAkjYU3sACgkQ9Llz28widGUvqACZAaF5i6y0RCeq6S515PPERjsy
> 09kAoLHg1ohSFpGpDd2SGCe6I2s6Vqw6
> =lGsw
> -----END PGP SIGNATURE-----
>
> _______________________________________________
> rabbitmq-discuss mailing list
> rabbitmq-discuss at lists.rabbitmq.com
> http://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20080923/a38ac88e/attachment.htm 

From alexis.richardson at cohesiveft.com  Tue Sep 23 08:06:37 2008
From: alexis.richardson at cohesiveft.com (Alexis Richardson)
Date: Tue, 23 Sep 2008 08:06:37 +0100
Subject: [rabbitmq-discuss] presentation: erlang at Yahoo
Message-ID: <167204d20809230006x3c3955cbyd5e783008a080972@mail.gmail.com>

Hi folks,

The following video and slides may be of interest to the list.  Nick
Gerakines from the Yahoo del.icio.us 2.0 team talks about using
erlang.

http://www.bayfp.org/blog/2008/09/22/slides-and-video-from-september/

Fans of Scala can also catch a video of Dave Pollak talking about Lift.

alexis



From 0x6e6562 at gmail.com  Tue Sep 23 12:49:15 2008
From: 0x6e6562 at gmail.com (Ben Hood)
Date: Tue, 23 Sep 2008 12:49:15 +0100
Subject: [rabbitmq-discuss] erlang client API: transactions
In-Reply-To: <6c2563b20809222149x3fd13247q38f759ceb7b0762b@mail.gmail.com>
References: <D80A5FE3-1B0F-442C-9027-A232954EE774@gmail.com>
	<6c2563b20809222149x3fd13247q38f759ceb7b0762b@mail.gmail.com>
Message-ID: <269388e30809230449o434b1dfejfa36f6bce91cd948@mail.gmail.com>

Edwin,

On Tue, Sep 23, 2008 at 5:49 AM, Edwin Fine
<rabbitmq-discuss_efine at usa.net> wrote:
> I believe this is coming from the Erlang client, in
> amqp_channel:rpc_bottom_half/2. I can't tell you why your program is doing
> this, only where the error message originates. It seems to be happening in
> response to receiving a tx.select_ok, AFAICS.
>
> If you look at the code for rpc_bottom_half (reproduced at the end of this
> email for convenience), the line
>
> {{value, {From,_}}, NewRequestQueue} = queue:out(RequestQueue)
>
> will create the error message you are seeing if RequestQueue is empty. This
> can clearly be seen in the shell:
>
> 1> EmptyQ = queue:new().
> {[],[]}
> 2> {{value, {From,_}}, NewRequestQueue} = queue:out(EmptyQ).
> ** exception error: no match of right hand side value {empty,{[],[]}}
>
> I don't know if this is a bug or one of those "can't happen" things that
> just didn't give a nice error message. I suspect the latter, because the
> code just cannot continue without the value of "From" to send a reply to.
> Why should the function have been called with a reply if the reply queue is
> empty? Something's wrong somewhere.
>
> In addition, maybe I am too tired to see straight, but this looks really
> suspect:
>
>     catch case queue:head(NewRequestQueue) of
>         empty ->
>             ok;
>         {NewFrom,Method} ->
>             Do2(Writer,Method)
>     end,
>
> This is because queue:head/1 exits when it is empty and does not return
> 'empty', so the catch will return an EXIT:
>
> 1> catch queue:head(queue:new()).
> {'EXIT',{empty,[{queue,head,[{[],[]}]},
>                 {erl_eval,do_apply,5},
>                 {erl_eval,expr,5},
>                 {shell,exprs,6},
>                 {shell,eval_exprs,6},
>                 {shell,eval_loop,3}]}}
>
> I think this should be
>
>     catch case queue:head(NewRequestQueue) of
>         {'EXIT', {empty,_}} ->
>             ok;
>         {NewFrom,Method} ->
>             Do2(Writer,Method)
>     end,
>

Thanks for pointing this one out - it was a branch of the code that
had never been visited by any tests before :-(

I've applied this patch to the client - see
http://hg.rabbitmq.com/rabbitmq-erlang-client/rev/ef7db7bfc51a

Currently it is only on that branch - this will be merged back into
the mainline when the peer QA is done.

Note that this is not the solution for the TX issue - that will be
addressed separately.

Ben



From 0x6e6562 at gmail.com  Tue Sep 23 13:00:53 2008
From: 0x6e6562 at gmail.com (Ben Hood)
Date: Tue, 23 Sep 2008 13:00:53 +0100
Subject: [rabbitmq-discuss] erlang client API: transactions
In-Reply-To: <D80A5FE3-1B0F-442C-9027-A232954EE774@gmail.com>
References: <D80A5FE3-1B0F-442C-9027-A232954EE774@gmail.com>
Message-ID: <269388e30809230500t18e670b1tbcf65be9a292eecc@mail.gmail.com>

Valentino,

On Tue, Sep 23, 2008 at 3:24 AM, Valentino Volonghi <dialtone at gmail.com> wrote:
> and I implemented ack and tx_commit/tx_select like this:
>
> ack({_Connection, Channel, _Ticket}, DeliveryTag) ->
>     BasicAck = #'basic.ack'{delivery_tag = DeliveryTag, multiple =
> false},
>     ok = amqp_channel:cast(Channel, BasicAck).

This duplicates the ack/2 function in lib_amqp.

>
> tx_select({_Connection, Channel, _Ticket}) ->
>     ok = amqp_channel:cast(Channel, #'tx.select'{}).
>
> tx_commit({_Connection, Channel, _Ticket}) ->
>     ok = amqp_channel:cast(Channel, #'tx.commit'{}).

tx.select/tx.commit are synchronous commands, so you have to use
amqp_channel:call/2 instead of amqp_channel:cast/2

This should really go into lib_amqp - I'll add this as an improvement.

Also, tickets/realms are deprecated and have been removed from the
mainline client code.


>
> Unfortunately when I try to run this code, during the forwarding I get
> the following exception:
>
> =ERROR REPORT==== 22-Sep-2008::19:23:11 ===
> ** Generic server <0.150.0> terminating
> ** Last message in was {method,{'tx.select_ok'},none}
> ** When Server state == {channel_state,1,<0.146.0>,<0.148.0>,<0.151.0>,
>                             #Fun<amqp_network_driver.do.2>,
>                             #Fun<amqp_network_driver.do.3>,
>                             #Fun<amqp_network_driver.close_channel.1>,
>                             {[],[]},
>                             {[],[]},
>                             {dict,0,16,16,8,80,48,
>                                 {[],[],[],[],[],[],[],[],[],[],[],[],
> [],[],[],
>                                  []},
>                                 {{[],[],[],[],[],[],[],[],[],[],[],[],
> [],[],
>                                   [],[]}}},
>                             false,undefined,
>                             {dict,0,16,16,8,80,48,
>                                 {[],[],[],[],[],[],[],[],[],[],[],[],
> [],[],[],
>                                  []},
>                                 {{[],[],[],[],[],[],[],[],[],[],[],[],
> [],[],
>                                   [],[]}}}}
> ** Reason for termination ==
> ** {{badmatch,{empty,{[],[]}}},
>     [{amqp_channel,rpc_bottom_half,2},
>      {gen_server,handle_msg,5},
>      {proc_lib,init_p,5}]}
>
> Which clearly means that I badly matched somewhere... my best guess is
> the tx_select/tx_commit
> functions but then how should I fix them? (sorry for this newb
> question).

Please see the fix for this in my repsonse to Edwin's mail.

HTH,

Ben



From 0x6e6562 at gmail.com  Tue Sep 23 13:20:34 2008
From: 0x6e6562 at gmail.com (Ben Hood)
Date: Tue, 23 Sep 2008 13:20:34 +0100
Subject: [rabbitmq-discuss] Publish won't work without transaction?
In-Reply-To: <84fb38e30809221613r35fac041v4e214efc20d37274@mail.gmail.com>
References: <84fb38e30809221343l171b2fddkbf1d6184de554d92@mail.gmail.com>
	<269388e30809221401x5c808f4dt6da8c2e06c34b35d@mail.gmail.com>
	<84fb38e30809221419v456f39cfwcc3ed9c7dce59d09@mail.gmail.com>
	<269388e30809221521p6aca6e30q9cd2cb9511f22aeb@mail.gmail.com>
	<84fb38e30809221613r35fac041v4e214efc20d37274@mail.gmail.com>
Message-ID: <269388e30809230520n6eea651apea10d40abeac0c1@mail.gmail.com>

Tsuraan,

On Tue, Sep 23, 2008 at 12:13 AM, tsuraan <tsuraan at gmail.com> wrote:
>> So how do you know whether they're enqueued or not?
>
> When the program's done running, I do a passive queue_declare,

Is there a reason why you are passively declaring the queue?

> and the
> message count has increased by ~400 each time the program has run.
> It's actually more like 300 the first time and 500 the second time,
> but it seems like overall, I get about 400 per run.

I still don't see how you are working this out - are you using
rabbit_amqqueue:stat_all() or are you maintaining a count with your
consumers?

> Ok, so there isn't a return code from basic_publish that will tell me
> it was dropped?

basic.publish is an asynchronous command.

If you register a return handler and set the mandatory flag, you will
get a return if the message can't be delivered.

>> That shouldn't take a minute even with a TX per message and logging to disk.
>>
>> I think something may not be quite right with your setup.
>
> I'd be willing to believe that.  When running with one transaction per
> message, my system is almost idle.  python's taking 2-3% of the cpu,
> beam.smp is taking less than that, and my IO is a few KB/s.  Do you
> have any advice for figuring out what's going on?  My system is a
> core2 duo with a pair of raptor10k drives in RAID1 on a 3ware 9650; I
> shouldn't be too starved for cpu, io, or memory with this setup, so
> any advice for where to start would be much appreciated.

Hmmm.....that's better than most pizzaboxes I have to deal with :-)

I don't thing your kit is the issue.

> Is the difference then that my queues are persistent?  I'm using a
> topic exchange with just one persistent, non-autodelete queue.  Does
> that change things?

No, a persistent queue is one that survives a server restart. Whether
or nott a message survives a restart depends on the flag that is sent
with the message header.

Persisting a message obviously has an overhead, but it should be a
reasonably constant factor.

>
>> And maybe this is a stupid question, but why are you enqueuing stuff?
>> Don't you want it to be delivered?
>
> Isn't enqueuing a necessary step before delivery?

The main goal of a messaging system is to deliver messages rather than
queue them up. So Rabbit will only queue if it can't deliver.

In this light, you should be able to see the effect of the immediate
flag - if a message cannot be delivered immediately, bin it.

So you need to have something reading off the queues to avoid the
message being turfed. Or don't set the immediate flag.

In any case, it's not a good idea to enforce queueing - you will build
up an unecessary backlog.

> The system I'm
> working on processes a lot of files, and as files are processed new
> files or database rows are created that have to be processed
> downstream.  Sometimes the programs doing the processing get hung up
> on invalid data, or get flooded with more data than they can process
> in a timely manner, so the workloads get really badly backed up.  I've
> seen programs that have millions of tasks in their job queues more
> than a few times.

If this is the case, you probably don't want to set the immediate
flag, unless you catch it using the return handler - but this is
clunky in itself anyway.

As indicated in a previous thread that Edwin started, there is a
finite limit as to how much Rabbit can queue things up.

You should calibrate your system and don't overfeed the bunny accordingly.

There is a roadmap item to address this - but no ETA.

> We currently have a "message queue" system that is just files written
> to the hard drive; different directories are the job queues for
> different actors, and the files in them are just identifiers for
> database or file-based workloads.  I want to replace that with real
> message queue system for all sorts of reasons, so I'm just
> experimenting with RabbitMQ to see if it does what I need, and to see
> how good the performance and stability are.

Doesn't sound like an unreasonable use case. I can think of different
approaches, but Rabbit may provide you with a simple solution.

HTH,

Ben



From dialtone at gmail.com  Tue Sep 23 15:57:03 2008
From: dialtone at gmail.com (Valentino Volonghi)
Date: Tue, 23 Sep 2008 07:57:03 -0700
Subject: [rabbitmq-discuss] erlang client API: transactions
In-Reply-To: <269388e30809230500t18e670b1tbcf65be9a292eecc@mail.gmail.com>
References: <D80A5FE3-1B0F-442C-9027-A232954EE774@gmail.com>
	<269388e30809230500t18e670b1tbcf65be9a292eecc@mail.gmail.com>
Message-ID: <F0E9D671-C342-4E7F-BAD6-7A2A8F04766C@gmail.com>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1


On Sep 23, 2008, at 5:00 AM, Ben Hood wrote:

> This duplicates the ack/2 function in lib_amqp.

Yes, that's where I copied it from in fact :).

>>
>> tx_select({_Connection, Channel, _Ticket}) ->
>>    ok = amqp_channel:cast(Channel, #'tx.select'{}).
>>
>> tx_commit({_Connection, Channel, _Ticket}) ->
>>    ok = amqp_channel:cast(Channel, #'tx.commit'{}).
>
> tx.select/tx.commit are synchronous commands, so you have to use
> amqp_channel:call/2 instead of amqp_channel:cast/2
>
> This should really go into lib_amqp - I'll add this as an improvement.

Ok, I see good.

> Also, tickets/realms are deprecated and have been removed from the
> mainline client code.

Oh, that's why they are not in lib_amqp then. I guess now I'll add  
some stuff
to the client code API like a different username/password than guest/ 
guest
and some other small stuff (like amqp_util:basic_properties/0 that  
allows
to set different values for the 3 basic ones). and I'll send a patch  
here.

thanks!

> Please see the fix for this in my repsonse to Edwin's mail.


Nice, thanks for the fast response.

- --
Valentino Volonghi aka Dialtone
Now running MacOS X 10.5
Home Page: http://www.twisted.it
http://www.adroll.com

-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.4.9 (Darwin)

iEUEARECAAYFAkjZA8AACgkQ9Llz28widGWD4QCVFBKUA3dFfwnMFrIwE6Ag70dq
ZgCgl5Lg/86ZIyBkSE3k3F6x3oSoJuc=
=++9G
-----END PGP SIGNATURE-----



From dialtone at gmail.com  Tue Sep 23 20:15:19 2008
From: dialtone at gmail.com (Valentino Volonghi)
Date: Tue, 23 Sep 2008 12:15:19 -0700
Subject: [rabbitmq-discuss] erlang client API: transactions
In-Reply-To: <F0E9D671-C342-4E7F-BAD6-7A2A8F04766C@gmail.com>
References: <D80A5FE3-1B0F-442C-9027-A232954EE774@gmail.com>
	<269388e30809230500t18e670b1tbcf65be9a292eecc@mail.gmail.com>
	<F0E9D671-C342-4E7F-BAD6-7A2A8F04766C@gmail.com>
Message-ID: <136168B9-5739-42D7-9E81-124550828023@gmail.com>

On Sep 23, 2008, at 7:57 AM, Valentino Volonghi wrote:

> Oh, that's why they are not in lib_amqp then. I guess now I'll add  
> some stuff
> to the client code API like a different username/password than guest/ 
> guest
> and some other small stuff (like amqp_util:basic_properties/0 that  
> allows
> to set different values for the 3 basic ones). and I'll send a patch  
> here.


So attached is the bundle from mercurial that I would apply to  
rabbitmq-erlang-client,
now... I haven't written unittests on my changes so you might reject  
it :), I'm still learning
erlang and unittests are the next thing I need to look into.

And here: http://github.com/dialtone/shovel/tree/master
are a few changes that I would introduce to shovel to use lib_amqp
and to be more easily configurable without changing shovel.app.

-------------- next part --------------
A non-text attachment was scrubbed...
Name: lib_amqp-enhance.hg
Type: application/octet-stream
Size: 1354 bytes
Desc: not available
Url : http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20080923/aa2376bd/attachment.obj 
-------------- next part --------------



--
Valentino Volonghi aka Dialtone
Now running MacOS X 10.5
Home Page: http://www.twisted.it
http://www.adroll.com

-------------- next part --------------
A non-text attachment was scrubbed...
Name: PGP.sig
Type: application/pgp-signature
Size: 194 bytes
Desc: This is a digitally signed message part
Url : http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20080923/aa2376bd/attachment.pgp 

From tsuraan at gmail.com  Tue Sep 23 20:28:14 2008
From: tsuraan at gmail.com (tsuraan)
Date: Tue, 23 Sep 2008 14:28:14 -0500
Subject: [rabbitmq-discuss] Publish won't work without transaction?
In-Reply-To: <269388e30809230520n6eea651apea10d40abeac0c1@mail.gmail.com>
References: <84fb38e30809221343l171b2fddkbf1d6184de554d92@mail.gmail.com>
	<269388e30809221401x5c808f4dt6da8c2e06c34b35d@mail.gmail.com>
	<84fb38e30809221419v456f39cfwcc3ed9c7dce59d09@mail.gmail.com>
	<269388e30809221521p6aca6e30q9cd2cb9511f22aeb@mail.gmail.com>
	<84fb38e30809221613r35fac041v4e214efc20d37274@mail.gmail.com>
	<269388e30809230520n6eea651apea10d40abeac0c1@mail.gmail.com>
Message-ID: <84fb38e30809231228y3d0d6c0an4ba7ef158a0c0f63@mail.gmail.com>

> Is there a reason why you are passively declaring the queue?
>
...
> I still don't see how you are working this out - are you using
> rabbit_amqqueue:stat_all() or are you maintaining a count with your
> consumers?

The response from the passive declaration gives how many messages are
in the queue.  That's how I'm checking the number of messages that
exist.  There isn't a consumer yet; I've just been trying to make
message insertion work, or at least understand how it's supposed to
work.  Maybe I'm not making sense here - see below.

>> Ok, so there isn't a return code from basic_publish that will tell me
>> it was dropped?
>
> basic.publish is an asynchronous command.
>
> If you register a return handler and set the mandatory flag, you will
> get a return if the message can't be delivered.

Ok, I'll have to look into this.

> The main goal of a messaging system is to deliver messages rather than
> queue them up. So Rabbit will only queue if it can't deliver.
>
> In this light, you should be able to see the effect of the immediate
> flag - if a message cannot be delivered immediately, bin it.
>
> So you need to have something reading off the queues to avoid the
> message being turfed. Or don't set the immediate flag.

Ok, I'm definitely having terminology issues, and I can't find the
definitions in the AMQP-0.8 spec.  A producer publishes a message to
an exchange.  An exchange routes a message into a queue (or many
queues).  A consumer gets a message from a queue, and once it has
acknowledged that message, then the message is delivered.  Is that
right?  My understanding was totally non-sensical, which probably made
this discussion a bit more confusing for everybody involved than it
had to be...

If all consumers are using basic_get instead of basic_consume, will
immediate delivery always fail?  In other words, if a queue has no
"consumer" on it, will all messages marked for immediate delivery be
dropped?

> In any case, it's not a good idea to enforce queueing - you will build
> up an unecessary backlog.

Yeah, the backlog is exactly what I need to manage though, because my
backlog management isn't the best.  That's essentially the problem I
was hoping that RabbitMQ would solve; apparently it doesn't do that
yet, but it's still much better designed than my way, and I'm guessing
it's probably higher performance.  I have a bit of Erlang experience;
how difficult do you think it would be to implement a custom queue
that allows for ludicrous backlogs, once the upcoming RabbitMQ version
with pluggable queues is done?

> If this is the case, you probably don't want to set the immediate
> flag, unless you catch it using the return handler - but this is
> clunky in itself anyway.
>
> As indicated in a previous thread that Edwin started, there is a
> finite limit as to how much Rabbit can queue things up.
>
> You should calibrate your system and don't overfeed the bunny accordingly.

I can probably hack my way around this, but the tasks my system gets
aren't requested; it just gets tasks as they are generated.  Often, a
system will get a lot of work during the day, and then just process it
all night.  Sometimes, a system will just get too much data, and never
be able to process it all.  Then, the customer calls tech support, but
no data is lost.  The pluggable queues would probably be the right
answer for this, I guess.

> There is a roadmap item to address this - but no ETA.

Is that item the pluggable queues, or an actual implementation of
queues that can grow indefinitely?

> Doesn't sound like an unreasonable use case.

I don't think it sounds unreasonable either, but I've been reading
about file system gotchas lately, and one common fs issue (I sure wish
I could still find my source for this) is that creating and deleting
files forces a metadata sync.  This tends to thrash the drives
excessively, which is a problem we've been having lately.  I'm going
to try implementing our system using rabbit, and have another one
using the fs-based queues, and see if hard drive througput increases.
Even if that doesn't fix that performance issue, I really like the
exchange and queue design of AMQP; it would really let us clean up a
lot of stuff in our system.



From rabbitmq-discuss_efine at usa.net  Tue Sep 23 22:36:36 2008
From: rabbitmq-discuss_efine at usa.net (Edwin Fine)
Date: Tue, 23 Sep 2008 17:36:36 -0400
Subject: [rabbitmq-discuss] erlang client API: transactions
In-Reply-To: <269388e30809230449o434b1dfejfa36f6bce91cd948@mail.gmail.com>
References: <D80A5FE3-1B0F-442C-9027-A232954EE774@gmail.com>
	<6c2563b20809222149x3fd13247q38f759ceb7b0762b@mail.gmail.com>
	<269388e30809230449o434b1dfejfa36f6bce91cd948@mail.gmail.com>
Message-ID: <6c2563b20809231436q5d7845c6p38886d4b9b67303d@mail.gmail.com>

Thanks, Ben. I'll apply the patch.

Incidentally this is the only part of the entire Erlang Rabbit code base
that uses queue:head/1 :)

I'm glad that I was not hallucinating; I was so tired when I looked at that
code the screen was getting blurred...

Ironically, I looked suspiciously at the use of cast in the code, but then I
thought, why not be able to cast? I thought wrong.

Edwin

On Tue, Sep 23, 2008 at 7:49 AM, Ben Hood <0x6e6562 at gmail.com> wrote:

> Edwin,
>
> On Tue, Sep 23, 2008 at 5:49 AM, Edwin Fine
> <rabbitmq-discuss_efine at usa.net> wrote:
> > I believe this is coming from the Erlang client, in
> > amqp_channel:rpc_bottom_half/2. I can't tell you why your program is
> doing
> > this, only where the error message originates. It seems to be happening
> in
> > response to receiving a tx.select_ok, AFAICS.
> >
> > If you look at the code for rpc_bottom_half (reproduced at the end of
> this
> > email for convenience), the line
> >
> > {{value, {From,_}}, NewRequestQueue} = queue:out(RequestQueue)
> >
> > will create the error message you are seeing if RequestQueue is empty.
> This
> > can clearly be seen in the shell:
> >
> > 1> EmptyQ = queue:new().
> > {[],[]}
> > 2> {{value, {From,_}}, NewRequestQueue} = queue:out(EmptyQ).
> > ** exception error: no match of right hand side value {empty,{[],[]}}
> >
> > I don't know if this is a bug or one of those "can't happen" things that
> > just didn't give a nice error message. I suspect the latter, because the
> > code just cannot continue without the value of "From" to send a reply to.
> > Why should the function have been called with a reply if the reply queue
> is
> > empty? Something's wrong somewhere.
> >
> > In addition, maybe I am too tired to see straight, but this looks really
> > suspect:
> >
> >     catch case queue:head(NewRequestQueue) of
> >         empty ->
> >             ok;
> >         {NewFrom,Method} ->
> >             Do2(Writer,Method)
> >     end,
> >
> > This is because queue:head/1 exits when it is empty and does not return
> > 'empty', so the catch will return an EXIT:
> >
> > 1> catch queue:head(queue:new()).
> > {'EXIT',{empty,[{queue,head,[{[],[]}]},
> >                 {erl_eval,do_apply,5},
> >                 {erl_eval,expr,5},
> >                 {shell,exprs,6},
> >                 {shell,eval_exprs,6},
> >                 {shell,eval_loop,3}]}}
> >
> > I think this should be
> >
> >     catch case queue:head(NewRequestQueue) of
> >         {'EXIT', {empty,_}} ->
> >             ok;
> >         {NewFrom,Method} ->
> >             Do2(Writer,Method)
> >     end,
> >
>
> Thanks for pointing this one out - it was a branch of the code that
> had never been visited by any tests before :-(
>
> I've applied this patch to the client - see
> http://hg.rabbitmq.com/rabbitmq-erlang-client/rev/ef7db7bfc51a
>
> Currently it is only on that branch - this will be merged back into
> the mainline when the peer QA is done.
>
> Note that this is not the solution for the TX issue - that will be
> addressed separately.
>
> Ben
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20080923/8561836e/attachment.htm 

From dialtone at gmail.com  Tue Sep 23 22:37:37 2008
From: dialtone at gmail.com (Valentino Volonghi)
Date: Tue, 23 Sep 2008 14:37:37 -0700
Subject: [rabbitmq-discuss] erlang client API: transactions
In-Reply-To: <136168B9-5739-42D7-9E81-124550828023@gmail.com>
References: <D80A5FE3-1B0F-442C-9027-A232954EE774@gmail.com>
	<269388e30809230500t18e670b1tbcf65be9a292eecc@mail.gmail.com>
	<F0E9D671-C342-4E7F-BAD6-7A2A8F04766C@gmail.com>
	<136168B9-5739-42D7-9E81-124550828023@gmail.com>
Message-ID: <A4A81D95-E06E-47C0-B296-85738DB91388@gmail.com>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1


On Sep 23, 2008, at 12:15 PM, Valentino Volonghi wrote:

> And here: http://github.com/dialtone/shovel/tree/master


Using all these changes and improvements I managed to write a  
prototype of what I'll need.
There are still a few problems though, the first is the fact that  
tx.commit is synchronous I think.

When I try to load the server with a big number of requests (like 50k  
with 200 concurrency) I
see that the tx.commit goes to timeout in shovel and on the other side  
I see that the persister
is timing out, I suspect it means that it's simply taking a lot of  
time and erlang thinks that it's
a timeout.

Now... I don't have a clear idea of what's the best solution for this  
problem actually. The good thing
though is that when after the crash I restarted the webserver with  
rabbitmq and shovel embedded
I started receiving lines again on the other side, which means that  
basically this way of doing things
is definitely a step in the right direction.

I suspect part of the reason for this timeout is the use of the same  
machine for running the test and
receiving log lines from the test web server (using nice avoid the  
timeout problem). Maybe this
problem should be dealt with at the supervisor level and it should  
simply stop and restart shovel
after a couple of seconds. Does this sound reasonable?

Another good news is that I see about 2700 req/sec handled if I run ab  
directly on the webserver (
so it could even be higher).

I have another question though: how do transactions work? Are the  
messages in a single transaction
sent together or they are just sent separately? Because if it's the  
latter then gzip cannot really do
much if the size of the packet is less than 1500 bytes, it'll be a bit  
faster but still just a single packet.
Am I wrong?

- - Shovel:

=CRASH REPORT==== 23-Sep-2008::20:49:12 ===
   crasher:
     pid: <0.167.0>
     registered_name: shovel
     exception exit: {timeout,
                         {gen_server,call,[<0.172.0>,{call, 
{'tx.commit'}}]}}
       in function  gen_server:terminate/6
     initial call: gen:init_it(gen_server,<0.166.0>,<0.166.0>,
                               {local,shovel},
                               shovel,"192.168.1.133",[])
     ancestors: [shovel_supervisor,<0.165.0>]

- - Remote RabbitMQ:

=ERROR REPORT==== 23-Sep-2008::13:49:32 ===
** Generic server <0.127.0> terminating
** Last message in was {commit,{{11,<0.288.0>},7028}}
** When Server state == {q,{amqqueue,
                                 
{resource,<<"/">>,queue,<<"impressions">>},
                                true,false,[],
                                [{binding_spec,
                                      
{resource,<<"/">>,exchange,<<"flow">>},
                                     <<"*.impressions">>,[]}],
                                <0.127.0>},
                            none,none,true,28056,
                            {[],[]},
                            {[{<0.233.0>,
                               {consumer,
                                   <<"amq.ctag- 
QdWeELvdBEl2V21Hwz1gMg==">>,
                                   true}}],
                             []}}
** Reason for termination ==
** {timeout,
        {gen_server,call,
            [rabbit_persister,
             {commit_transaction,
                 {{{11,<0.288.0>},7028},
                  {resource,<<"/">>,queue,<<"impressions">>}}}]}}

=INFO REPORT==== 23-Sep-2008::13:49:32 ===
closing TCP connection <0.282.0> from 192.168.1.16:44937

=CRASH REPORT==== 23-Sep-2008::13:49:32 ===
   crasher:
     pid: <0.127.0>
     registered_name: []
     exception exit: {timeout,
                         {gen_server,call,
                             [rabbit_persister,
                              {commit_transaction,
                                  {{{11,<0.288.0>},7028},
                                   {resource,<<"/">>,queue,
                                       <<"impressions">>}}}]}}
       in function  gen_server:terminate/6
     initial call: gen:init_it(gen_server,<0.123.0>,<0.123.0>,
                               rabbit_amqqueue_process,
                               {amqqueue,
                                    
{resource,<<"/">>,queue,<<"impressions">>},
                                   true,false,[],
                                   [{binding_spec,
                                         
{resource,<<"/">>,exchange,<<"flow">>},
                                        <<"*.impressions">>,[]}],
                                   <0.127.0>},
                               [])


- --
Valentino Volonghi aka Dialtone
Now running MacOS X 10.5
Home Page: http://www.twisted.it
http://www.adroll.com

-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.4.9 (Darwin)

iEYEARECAAYFAkjZYaIACgkQ9Llz28widGXBpQCgledTB+l04gCFifZ2CxlswgdQ
HnkAn0ILSCDkd4W8Hix3TRQRbvhgoxM2
=IzHa
-----END PGP SIGNATURE-----



From rabbitmq-discuss_efine at usa.net  Tue Sep 23 22:56:40 2008
From: rabbitmq-discuss_efine at usa.net (Edwin Fine)
Date: Tue, 23 Sep 2008 17:56:40 -0400
Subject: [rabbitmq-discuss] erlang client API: transactions
In-Reply-To: <mailman.24.1222206808.15990.rabbitmq-discuss@lists.rabbitmq.com>
References: <mailman.24.1222206808.15990.rabbitmq-discuss@lists.rabbitmq.com>
Message-ID: <6c2563b20809231456s5b6242a0m1a1a38a42be3978c@mail.gmail.com>

IIRC, the persister is writing to an mnesia database. When you start Rabbit,
it defines where the mnesia database is. If you put the database on its own
disk or even better on its own controller and disk, it may increase
throughput dramatically. Also, is the web server, and maybe even shovel,
logging lots of status messages to disk? If it is, the combined I/O could
strain your I/O subsystem and create timeouts. If this is the case, perhaps
you could reduce the logging level.

My feeling is to try to remove the cause of the timeouts rather than work
around them. vmstat is your friend.

I forget - what web server are you using? Is it Yaws?

Edwin
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20080923/8f2504f0/attachment.htm 

From dialtone at gmail.com  Tue Sep 23 23:29:20 2008
From: dialtone at gmail.com (Valentino Volonghi)
Date: Tue, 23 Sep 2008 15:29:20 -0700
Subject: [rabbitmq-discuss] erlang client API: transactions
In-Reply-To: <6c2563b20809231456s5b6242a0m1a1a38a42be3978c@mail.gmail.com>
References: <mailman.24.1222206808.15990.rabbitmq-discuss@lists.rabbitmq.com>
	<6c2563b20809231456s5b6242a0m1a1a38a42be3978c@mail.gmail.com>
Message-ID: <1D0A05DC-8C37-4757-850A-8B6C3C8389EF@gmail.com>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1


On Sep 23, 2008, at 2:56 PM, Edwin Fine wrote:

>
> IIRC, the persister is writing to an mnesia database. When you start  
> Rabbit, it defines where the mnesia database is. If you put the  
> database on its own disk or even better on its own controller and  
> disk, it may increase throughput dramatically. Also, is the web  
> server, and maybe even shovel, logging lots of status messages to  
> disk? If it is, the combined I/O could strain your I/O subsystem and  
> create timeouts. If this is the case, perhaps you could reduce the  
> logging level.

I'm not sure that rabbit is writing to mnesia for logs.

table_definitions() ->
     [{user, [{disc_copies, [node()]},
              {attributes, record_info(fields, user)}]},
      {user_vhost, [{type, bag},
                    {disc_copies, [node()]},
                    {attributes, record_info(fields, user_vhost)},
                    {index, [virtual_host]}]},
      {vhost, [{disc_copies, [node()]},
               {attributes, record_info(fields, vhost)}]},
      {rabbit_config, [{disc_copies, [node()]}]},
      {listener, [{type, bag},
                  {attributes, record_info(fields, listener)}]},
      {binding, [{attributes, record_info(fields, binding)}]},
      {durable_exchanges, [{disc_copies, [node()]},
                           {record_name, exchange},
                           {attributes, record_info(fields,  
exchange)}]},
      {exchange, [{attributes, record_info(fields, exchange)}]},
      {durable_queues, [{disc_copies, [node()]},
                        {record_name, amqqueue},
                        {attributes, record_info(fields, amqqueue)}]},
      {amqqueue, [{attributes, record_info(fields, amqqueue)},
                  {index, [pid]}]}].

This is rabbit_mnesia.erl and I don't see a table that contains the  
messages. It seems it's
mostly used to keep durable stuff and configuration parameters for  
rabbitmq.

It's the log file itself not mnesia. My own computer runs OSX and it  
was running both ab and rabbitmq
so the disk was probably really trashed (And it's already slow enough).

How do I reduce the logging level? I don't see a lot of logging in  
rabbitmq or my webserver except after
startup so I suppose they might be logging somewhere else and in that  
case I wouldn't mind reducing it,
unless it's the persister log, in which case more is better.

> My feeling is to try to remove the cause of the timeouts rather than  
> work around them. vmstat is your friend.

Well... I'm not really working around them. It's just what I saw and I  
also saw that even in that case no line
was lost, the system then should be robust enough to restore itself  
under this circumstances, the timeout
might even come from network latency actually, so even if my disk is  
the fastest in the world I still need to
care for this other issue.

> I forget - what web server are you using? Is it Yaws?


mochiweb

- --
Valentino Volonghi aka Dialtone
Now running MacOS X 10.5
Home Page: http://www.twisted.it
http://www.adroll.com

-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.4.9 (Darwin)

iEYEARECAAYFAkjZbcAACgkQ9Llz28widGUvWACeOw9AgwSk44+9DVzrJ1/lEKHL
+uoAoJqHSLX0bNJ47C7zr9J1Td4IL8gX
=ME+d
-----END PGP SIGNATURE-----



From 0x6e6562 at gmail.com  Wed Sep 24 00:00:07 2008
From: 0x6e6562 at gmail.com (Ben Hood)
Date: Wed, 24 Sep 2008 00:00:07 +0100
Subject: [rabbitmq-discuss] erlang client API: transactions
In-Reply-To: <136168B9-5739-42D7-9E81-124550828023@gmail.com>
References: <D80A5FE3-1B0F-442C-9027-A232954EE774@gmail.com>
	<269388e30809230500t18e670b1tbcf65be9a292eecc@mail.gmail.com>
	<F0E9D671-C342-4E7F-BAD6-7A2A8F04766C@gmail.com>
	<136168B9-5739-42D7-9E81-124550828023@gmail.com>
Message-ID: <269388e30809231600h5b9a173bgcc2b6f9c00ec1979@mail.gmail.com>

Valentino,

On Tue, Sep 23, 2008 at 8:15 PM, Valentino Volonghi <dialtone at gmail.com> wrote:
> On Sep 23, 2008, at 7:57 AM, Valentino Volonghi wrote:
>
>> Oh, that's why they are not in lib_amqp then. I guess now I'll add some
>> stuff
>> to the client code API like a different username/password than guest/guest
>> and some other small stuff (like amqp_util:basic_properties/0 that allows
>> to set different values for the 3 basic ones). and I'll send a patch here.
>
>
> So attached is the bundle from mercurial that I would apply to
> rabbitmq-erlang-client,

Is this a binary file?

> And here: http://github.com/dialtone/shovel/tree/master
> are a few changes that I would introduce to shovel to use lib_amqp
> and to be more easily configurable without changing shovel.app.

OK, I'll have a look to incorporating this into the mainline, but
because of time constraints, this won't happen straight away. But this
is the whole point of github anyway :-)

Ben



From 0x6e6562 at gmail.com  Wed Sep 24 00:03:24 2008
From: 0x6e6562 at gmail.com (Ben Hood)
Date: Wed, 24 Sep 2008 00:03:24 +0100
Subject: [rabbitmq-discuss] erlang client API: transactions
In-Reply-To: <1D0A05DC-8C37-4757-850A-8B6C3C8389EF@gmail.com>
References: <mailman.24.1222206808.15990.rabbitmq-discuss@lists.rabbitmq.com>
	<6c2563b20809231456s5b6242a0m1a1a38a42be3978c@mail.gmail.com>
	<1D0A05DC-8C37-4757-850A-8B6C3C8389EF@gmail.com>
Message-ID: <269388e30809231603t1c3f5a08s164c6b96674f7c54@mail.gmail.com>

Valentino,

On Tue, Sep 23, 2008 at 11:29 PM, Valentino Volonghi <dialtone at gmail.com> wrote:
> I'm not sure that rabbit is writing to mnesia for logs.

It doesn't - the rabbit_persister module handles logging.

Ben



From dialtone at gmail.com  Wed Sep 24 00:40:37 2008
From: dialtone at gmail.com (Valentino Volonghi)
Date: Tue, 23 Sep 2008 16:40:37 -0700
Subject: [rabbitmq-discuss] erlang client API: transactions
In-Reply-To: <269388e30809231600h5b9a173bgcc2b6f9c00ec1979@mail.gmail.com>
References: <D80A5FE3-1B0F-442C-9027-A232954EE774@gmail.com>
	<269388e30809230500t18e670b1tbcf65be9a292eecc@mail.gmail.com>
	<F0E9D671-C342-4E7F-BAD6-7A2A8F04766C@gmail.com>
	<136168B9-5739-42D7-9E81-124550828023@gmail.com>
	<269388e30809231600h5b9a173bgcc2b6f9c00ec1979@mail.gmail.com>
Message-ID: <786EFC97-B6B3-4380-8B56-5FC2C726A3C3@gmail.com>


On Sep 23, 2008, at 4:00 PM, Ben Hood wrote:

> Is this a binary file?

Yes, it's a bundle, you can apply it using unbundle. Anyway I've  
attached also the diff.

> OK, I'll have a look to incorporating this into the mainline, but
> because of time constraints, this won't happen straight away. But this
> is the whole point of github anyway :-)


Nice :)

-------------- next part --------------
A non-text attachment was scrubbed...
Name: enhance.diff
Type: application/octet-stream
Size: 4716 bytes
Desc: not available
Url : http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20080923/c9bc81f6/attachment.obj 
-------------- next part --------------


--
Valentino Volonghi aka Dialtone
Now running MacOS X 10.5
Home Page: http://www.twisted.it
http://www.adroll.com

-------------- next part --------------
A non-text attachment was scrubbed...
Name: PGP.sig
Type: application/pgp-signature
Size: 194 bytes
Desc: This is a digitally signed message part
Url : http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20080923/c9bc81f6/attachment.pgp 

From 0x6e6562 at gmail.com  Wed Sep 24 01:18:01 2008
From: 0x6e6562 at gmail.com (Ben Hood)
Date: Wed, 24 Sep 2008 01:18:01 +0100
Subject: [rabbitmq-discuss] Publish won't work without transaction?
In-Reply-To: <84fb38e30809231228y3d0d6c0an4ba7ef158a0c0f63@mail.gmail.com>
References: <84fb38e30809221343l171b2fddkbf1d6184de554d92@mail.gmail.com>
	<269388e30809221401x5c808f4dt6da8c2e06c34b35d@mail.gmail.com>
	<84fb38e30809221419v456f39cfwcc3ed9c7dce59d09@mail.gmail.com>
	<269388e30809221521p6aca6e30q9cd2cb9511f22aeb@mail.gmail.com>
	<84fb38e30809221613r35fac041v4e214efc20d37274@mail.gmail.com>
	<269388e30809230520n6eea651apea10d40abeac0c1@mail.gmail.com>
	<84fb38e30809231228y3d0d6c0an4ba7ef158a0c0f63@mail.gmail.com>
Message-ID: <269388e30809231718x3bf0ed2cp852b0e3fee120f93@mail.gmail.com>

Tsuraan.

On Tue, Sep 23, 2008 at 8:28 PM, tsuraan <tsuraan at gmail.com> wrote:
> The response from the passive declaration gives how many messages are
> in the queue.  That's how I'm checking the number of messages that
> exist.  There isn't a consumer yet; I've just been trying to make
> message insertion work, or at least understand how it's supposed to
> work.  Maybe I'm not making sense here - see below.

This is the definition of the message-count field from the spec:

"This field reports the number of messages pending on the queue,
excluding the message being delivered.
Note that this figure is indicative, not reliable, and can change
arbitrarily as messages are added to the
queue and removed by other clients."

As much as anything it depends on the point of time that you poll the queue.

BTW, you will most likely get better results with a consumer as
opposed to polling the queue.

> Ok, I'm definitely having terminology issues, and I can't find the
> definitions in the AMQP-0.8 spec.  A producer publishes a message to
> an exchange.  An exchange routes a message into a queue (or many
> queues).  A consumer gets a message from a queue, and once it has
> acknowledged that message, then the message is delivered.  Is that
> right?

Almost. The queue process will try to deliver the message to a waiting
consumer before it decides to buffer it in a message queue.

This is why it is cooler to have consumers rather than polling the queue.

>
> If all consumers are using basic_get instead of basic_consume, will
> immediate delivery always fail?  In other words, if a queue has no
> "consumer" on it, will all messages marked for immediate delivery be
> dropped?

Pretty much, although I don't know what the exact semantics are from
the protocol perspective.

For all intents and purposes though, a get will dequeue a buffered
message and report the resulting length of the queue at the time that
that one particular message was read.

> Yeah, the backlog is exactly what I need to manage though, because my
> backlog management isn't the best.  That's essentially the problem I
> was hoping that RabbitMQ would solve; apparently it doesn't do that
> yet, but it's still much better designed than my way, and I'm guessing
> it's probably higher performance.  I have a bit of Erlang experience;
> how difficult do you think it would be to implement a custom queue
> that allows for ludicrous backlogs, once the upcoming RabbitMQ version
> with pluggable queues is done?

Well it does deal with backlogs and it won't accept responsibility for
a message it can't deliver (if you ask it behave in this way).

I just said that it is currently memory bound and doesn't overflow to disk yet.

But what do you do when you disk or SAN fills up?

Every resource is finite.

> I can probably hack my way around this, but the tasks my system gets
> aren't requested; it just gets tasks as they are generated.  Often, a
> system will get a lot of work during the day, and then just process it
> all night.

Why not process it during the day as well?

> Sometimes, a system will just get too much data, and never
> be able to process it all.  Then, the customer calls tech support, but
> no data is lost.  The pluggable queues would probably be the right
> answer for this, I guess.

Pluggable queues will allow you implement custom queue behaviour
without having to hack on the server.

>
>> There is a roadmap item to address this - but no ETA.
>
> Is that item the pluggable queues, or an actual implementation of
> queues that can grow indefinitely?

Both :-)

We want pluggable queues for a variety of use cases, and one
particular one is to be able to cleanly implement disk overflow
without hacking too much on the core of Rabbit. We try to reduce the
server codebase to a minimum.

If somebody shouts loud enough, we might shift it up the list of
things to do, but remember, this is open source software. Either wait,
ask very nicely, fix it yourself or pay somebody to implement it for
you :-)

HTH,

Ben



From rabbitmq-discuss_efine at usa.net  Wed Sep 24 02:26:22 2008
From: rabbitmq-discuss_efine at usa.net (Edwin Fine)
Date: Tue, 23 Sep 2008 21:26:22 -0400
Subject: [rabbitmq-discuss] erlang client API: transactions
In-Reply-To: <269388e30809231603t1c3f5a08s164c6b96674f7c54@mail.gmail.com>
References: <mailman.24.1222206808.15990.rabbitmq-discuss@lists.rabbitmq.com>
	<6c2563b20809231456s5b6242a0m1a1a38a42be3978c@mail.gmail.com>
	<1D0A05DC-8C37-4757-850A-8B6C3C8389EF@gmail.com>
	<269388e30809231603t1c3f5a08s164c6b96674f7c54@mail.gmail.com>
Message-ID: <6c2563b20809231826k10c93cka2b1064267d77263@mail.gmail.com>

True - I stand corrected.

For the purposes of this argument it doesn't really matter, because the
persister log is still in the mnesia directory - the point is that the
directory should be moved to a separate disk to partition the I/O. If mnesia
tables have a great deal of I/O as well, then the persister log itself
should be moved somewhere else. The point is also that I/O (and memory, and
CPU) should be measured if performance is a concern.

Unfortunately the word "log" has become overloaded. It can mean a log as in
a journal, which is what I believe the persister log is, or as a message
log, which is what I was referring to. I have seen excessive
*message*logging bring systems to their knees. In many cases, people
were unaware
that the message logging was even happening. A web server might be logging
every single access to a message log, or something else might be running
with debug logging turned on. I was just trying to point out that this could
be an issue. I know Rabbit has very little message logging by default,
except for (at one time) that annoying realm log message.

On Tue, Sep 23, 2008 at 7:03 PM, Ben Hood <0x6e6562 at gmail.com> wrote:

> Valentino,
>
> On Tue, Sep 23, 2008 at 11:29 PM, Valentino Volonghi <dialtone at gmail.com>
> wrote:
> > I'm not sure that rabbit is writing to mnesia for logs.
>
> It doesn't - the rabbit_persister module handles logging.
>
> Ben
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20080923/780322c6/attachment.htm 

From tsuraan at gmail.com  Wed Sep 24 04:03:46 2008
From: tsuraan at gmail.com (tsuraan)
Date: Tue, 23 Sep 2008 22:03:46 -0500
Subject: [rabbitmq-discuss] Publish won't work without transaction?
In-Reply-To: <269388e30809231718x3bf0ed2cp852b0e3fee120f93@mail.gmail.com>
References: <84fb38e30809221343l171b2fddkbf1d6184de554d92@mail.gmail.com>
	<269388e30809221401x5c808f4dt6da8c2e06c34b35d@mail.gmail.com>
	<84fb38e30809221419v456f39cfwcc3ed9c7dce59d09@mail.gmail.com>
	<269388e30809221521p6aca6e30q9cd2cb9511f22aeb@mail.gmail.com>
	<84fb38e30809221613r35fac041v4e214efc20d37274@mail.gmail.com>
	<269388e30809230520n6eea651apea10d40abeac0c1@mail.gmail.com>
	<84fb38e30809231228y3d0d6c0an4ba7ef158a0c0f63@mail.gmail.com>
	<269388e30809231718x3bf0ed2cp852b0e3fee120f93@mail.gmail.com>
Message-ID: <84fb38e30809232003s7df1107doc3bd6f6377f40e53@mail.gmail.com>

> BTW, you will most likely get better results with a consumer as
> opposed to polling the queue.

Yeah, it sort of seemed like that's the desired way to use the system.
 I assume setting no_ack in basic_consume will let me acknowledge the
consumed message and create new ones in a transaction.  Where are
things like the no_ack option on py-amqplib's basic_consume
documented?

> Almost. The queue process will try to deliver the message to a waiting
> consumer before it decides to buffer it in a message queue.
>
> This is why it is cooler to have consumers rather than polling the queue.

Ok, that makes sense.

> Well it does deal with backlogs and it won't accept responsibility for
> a message it can't deliver (if you ask it behave in this way).
>
> I just said that it is currently memory bound and doesn't overflow to disk
> yet.
>
> But what do you do when you disk or SAN fills up?
>
> Every resource is finite.

That is true, but with a 32-bit process, memory is a ton more
constrained than drive space, especially on the machines we use :-)

> Why not process it during the day as well?

Well, it does process all day as well, but some machines need all
night to work on their backlogs.  Some machines are very busy...

> Pluggable queues will allow you implement custom queue behaviour
> without having to hack on the server.
>
> ...
>
> We want pluggable queues for a variety of use cases, and one
> particular one is to be able to cleanly implement disk overflow
> without hacking too much on the core of Rabbit. We try to reduce the
> server codebase to a minimum.
>
> If somebody shouts loud enough, we might shift it up the list of
> things to do, but remember, this is open source software. Either wait,
> ask very nicely, fix it yourself or pay somebody to implement it for
> you :-)

Yup, those are the options :-)  Is there a plan for pluggable queues,
or is it just a dive in and write it sort of thing?  It looks like all
the behaviour of a queue is in rabbit_amqqueue_process right now, and
the persistence of queues is in rabbit_persister.  Would just
replacing the queue (message_buffer) in rabbit_amqqueue_process with a
file-backed object work for what I'm doing?  Persistence is still
handled by rabbit_persister for when things die, but a file-backed
queue wouldn't have to use so much system memory.  Is there a problem
with doing it that way?



From matthias at lshift.net  Wed Sep 24 05:29:45 2008
From: matthias at lshift.net (Matthias Radestock)
Date: Wed, 24 Sep 2008 05:29:45 +0100
Subject: [rabbitmq-discuss] Publish won't work without transaction?
In-Reply-To: <269388e30809231718x3bf0ed2cp852b0e3fee120f93@mail.gmail.com>
References: <84fb38e30809221343l171b2fddkbf1d6184de554d92@mail.gmail.com>	<269388e30809221401x5c808f4dt6da8c2e06c34b35d@mail.gmail.com>	<84fb38e30809221419v456f39cfwcc3ed9c7dce59d09@mail.gmail.com>	<269388e30809221521p6aca6e30q9cd2cb9511f22aeb@mail.gmail.com>	<84fb38e30809221613r35fac041v4e214efc20d37274@mail.gmail.com>	<269388e30809230520n6eea651apea10d40abeac0c1@mail.gmail.com>	<84fb38e30809231228y3d0d6c0an4ba7ef158a0c0f63@mail.gmail.com>
	<269388e30809231718x3bf0ed2cp852b0e3fee120f93@mail.gmail.com>
Message-ID: <48D9C239.3010601@lshift.net>

Ben Hood wrote:
> We want pluggable queues for a variety of use cases, and one
> particular one is to be able to cleanly implement disk overflow
> without hacking too much on the core of Rabbit. We try to reduce the
> server codebase to a minimum.

Our queue implementation constitutes a substantial part of the current 
code base, which is not surprising really, given that we are 
implementing the Advanced Message *Queueing* Protocol.

There is quite a lot of functionality a fully-functioning AMQP queue 
needs to implement, and a lot of fiddly details to get right.

So while pluggable queues will allow one to implement different queue 
behaviours without having to hack on the server code base, they by no 
means make that task easy.

And for most of the "pluggable queues will fix this" items we have 
discussed so far, pluggable queues are actually only a small part of the 
answer. That's because in most cases we are talking about tweaks to some 
aspects of queue behaviour, with the rest remaining the same. How would 
one accomplish this with pluggability alone? Write all the current 
behaviour from scratch? Not good. Copy&paste the current implementation 
(after it's been changed to conform to the plugin interface), and then 
modify it? That's bad too.

The proper way to do this would be to refactor the queue implementation 
such that it becomes more modular *internally*. The end result would be 
a set of building blocks allowing one to construct a queue plugin. 
That's a lot of work though.


Matthias.



From rabbitmq at tmm1.net  Wed Sep 24 05:53:09 2008
From: rabbitmq at tmm1.net (Aman Gupta)
Date: Tue, 23 Sep 2008 21:53:09 -0700
Subject: [rabbitmq-discuss] async thread pool
Message-ID: <e1c05edd0809232153n194ca170o98fe55bb4cc41858@mail.gmail.com>

scripts/rabbitmq-server contains:

  ERL_ARGS="+K true +A30 -kernel inet_default_listen_options
[{sndbuf,16384},{recbuf,4096}]"

The erl manpage (http://linux.die.net/man/1/erl) says:

  +A size:
  Sets the number of threads in async thread pool, valid range is
0-1024. Default is 0.

The default is 0, why does rabbit use 30?

  Aman



From matthias at lshift.net  Wed Sep 24 05:54:10 2008
From: matthias at lshift.net (Matthias Radestock)
Date: Wed, 24 Sep 2008 05:54:10 +0100
Subject: [rabbitmq-discuss] Publish won't work without transaction?
In-Reply-To: <84fb38e30809232003s7df1107doc3bd6f6377f40e53@mail.gmail.com>
References: <84fb38e30809221343l171b2fddkbf1d6184de554d92@mail.gmail.com>	<269388e30809221401x5c808f4dt6da8c2e06c34b35d@mail.gmail.com>	<84fb38e30809221419v456f39cfwcc3ed9c7dce59d09@mail.gmail.com>	<269388e30809221521p6aca6e30q9cd2cb9511f22aeb@mail.gmail.com>	<84fb38e30809221613r35fac041v4e214efc20d37274@mail.gmail.com>	<269388e30809230520n6eea651apea10d40abeac0c1@mail.gmail.com>	<84fb38e30809231228y3d0d6c0an4ba7ef158a0c0f63@mail.gmail.com>	<269388e30809231718x3bf0ed2cp852b0e3fee120f93@mail.gmail.com>
	<84fb38e30809232003s7df1107doc3bd6f6377f40e53@mail.gmail.com>
Message-ID: <48D9C7F2.1030804@lshift.net>

Tsuraan,

tsuraan wrote:
> Would just replacing the queue (message_buffer) in
> rabbit_amqqueue_process with a file-backed object work for what I'm
> doing?

That depends on what state the messages in your backlog are in. The 
message_buffer only contains committed (when tx is used) messages that 
are not currently awaiting acknowledgement.

Messages that are part of a tx which hasn't committed yet, and messages 
which have been sent to a consumer but not yet acknowledged, are kept in 
tx/cr records in the process dictionary.

> Persistence is still handled by rabbit_persister for when things die,

You'll need to think about how to "garbage collect" the files of your 
file-backed queue store in the event of server crash, perhaps by hooking 
a function into the RabbitMQ startup sequence that deletes them


Matthias.



From 0x6e6562 at gmail.com  Wed Sep 24 07:48:52 2008
From: 0x6e6562 at gmail.com (Ben Hood)
Date: Wed, 24 Sep 2008 07:48:52 +0100
Subject: [rabbitmq-discuss] erlang client API: transactions
In-Reply-To: <6c2563b20809231826k10c93cka2b1064267d77263@mail.gmail.com>
References: <mailman.24.1222206808.15990.rabbitmq-discuss@lists.rabbitmq.com>
	<6c2563b20809231456s5b6242a0m1a1a38a42be3978c@mail.gmail.com>
	<1D0A05DC-8C37-4757-850A-8B6C3C8389EF@gmail.com>
	<269388e30809231603t1c3f5a08s164c6b96674f7c54@mail.gmail.com>
	<6c2563b20809231826k10c93cka2b1064267d77263@mail.gmail.com>
Message-ID: <269388e30809232348r447270a1s84286c0f38296042@mail.gmail.com>

Edwin,

On Wed, Sep 24, 2008 at 2:26 AM, Edwin Fine
<rabbitmq-discuss_efine at usa.net> wrote:
> Unfortunately the word "log" has become overloaded. It can mean a log as in
> a journal, which is what I believe the persister log is, or as a message
> log, which is what I was referring to.

The persister log is a journal of all of the published messages that
have the persistent flag set.

> I have seen excessive message logging
> bring systems to their knees. In many cases, people were unaware that the
> message logging was even happening. A web server might be logging every
> single access to a message log, or something else might be running with
> debug logging turned on. I was just trying to point out that this could be
> an issue. I know Rabbit has very little message logging by default, except
> for (at one time) that annoying realm log message.

For people not wanting to wait for the next release to get rid of the
realm messages, they can check out the default branch of the server in
hg.

HTH,

Ben



From 0x6e6562 at gmail.com  Wed Sep 24 08:06:19 2008
From: 0x6e6562 at gmail.com (Ben Hood)
Date: Wed, 24 Sep 2008 08:06:19 +0100
Subject: [rabbitmq-discuss] Publish won't work without transaction?
In-Reply-To: <84fb38e30809232003s7df1107doc3bd6f6377f40e53@mail.gmail.com>
References: <84fb38e30809221343l171b2fddkbf1d6184de554d92@mail.gmail.com>
	<269388e30809221401x5c808f4dt6da8c2e06c34b35d@mail.gmail.com>
	<84fb38e30809221419v456f39cfwcc3ed9c7dce59d09@mail.gmail.com>
	<269388e30809221521p6aca6e30q9cd2cb9511f22aeb@mail.gmail.com>
	<84fb38e30809221613r35fac041v4e214efc20d37274@mail.gmail.com>
	<269388e30809230520n6eea651apea10d40abeac0c1@mail.gmail.com>
	<84fb38e30809231228y3d0d6c0an4ba7ef158a0c0f63@mail.gmail.com>
	<269388e30809231718x3bf0ed2cp852b0e3fee120f93@mail.gmail.com>
	<84fb38e30809232003s7df1107doc3bd6f6377f40e53@mail.gmail.com>
Message-ID: <269388e30809240006g3807f6fl9f7839fb41d32fa5@mail.gmail.com>

Tsuraan,

On Wed, Sep 24, 2008 at 4:03 AM, tsuraan <tsuraan at gmail.com> wrote:
> Where are
> things like the no_ack option on py-amqplib's basic_consume
> documented?

I think Barry could answer this one. In the meantime, just try to add
the no_ack flag as an argument to the consume function.


> Yup, those are the options :-)  Is there a plan for pluggable queues,
> or is it just a dive in and write it sort of thing?  It looks like all
> the behaviour of a queue is in rabbit_amqqueue_process right now, and
> the persistence of queues is in rabbit_persister.  Would just
> replacing the queue (message_buffer) in rabbit_amqqueue_process with a
> file-backed object work for what I'm doing?  Persistence is still
> handled by rabbit_persister for when things die, but a file-backed
> queue wouldn't have to use so much system memory.  Is there a problem
> with doing it that way?

Not especially. You could just patch rabbit_amqqueue_process without
bothering about pluggability. The latter is just about having more
flexibility and better factoring.

One crude way to do this is to set a hard limit on queue depth and
then after that just overflow to disk rather than putting new messages
into the memory queue. Keep the persister the same, because it logs to
disk anyway. Sounds simple, but it may get a bit fiddly when you try
to things properly. Which is why we're not just jumping in and hacking
the functionality to diffuse this whole discussion - it takes effort
to get things write and think of all of the knock-on effects of what
you are doing.

Having said this, pluggable queues are no silver bullet either - you
still need to implement them somehow :-)

There were some other options discussed on this previous thread:
http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/2008-September/001849.html

Ben



From Andrius.Norkaitis at oryo.lt  Wed Sep 24 10:25:44 2008
From: Andrius.Norkaitis at oryo.lt (Andrius Norkaitis)
Date: Wed, 24 Sep 2008 12:25:44 +0300
Subject: [rabbitmq-discuss] wct + pubsub
Message-ID: <!&!AAAAAAAAAAAYAAAAAAAAAKmCSsECxmlLkxuEpydKKTLCgAAAEAAAAKXefgk1cOpGppTwyFvdlTwBAAAAAA==@oryo.lt>

Hello,

 

I'm .NET developer and want to implement pubsub in WAN using RabbitMQ.
Publishers would publish orders and they must be delivered to all
Subscribers which are online and matches  some criterions (etc. city, order
type). I wonder is RabbitMQ suitable for this? Can RabbitMQ do routing for
me or should I implement pubsub myself? Can this be done with WCF?

Any examples or other reference where can I start would be appreciated.

 

Thanks for help in advance.

 

Best regards,

Andrius

 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20080924/65ade4c7/attachment.htm 

From alexis.richardson at cohesiveft.com  Wed Sep 24 10:38:10 2008
From: alexis.richardson at cohesiveft.com (Alexis Richardson)
Date: Wed, 24 Sep 2008 10:38:10 +0100
Subject: [rabbitmq-discuss] wct + pubsub
In-Reply-To: <!&!AAAAAAAAAAAYAAAAAAAAAKmCSsECxmlLkxuEpydKKTLCgAAAEAAAAKXefgk1cOpGppTwyFvdlTwBAAAAAA==@oryo.lt>
References: <!&!AAAAAAAAAAAYAAAAAAAAAKmCSsECxmlLkxuEpydKKTLCgAAAEAAAAKXefgk1cOpGppTwyFvdlTwBAAAAAA==@oryo.lt>
Message-ID: <167204d20809240238x10de6e69k6f2bb7f401f9c9a@mail.gmail.com>

Andrius


On Wed, Sep 24, 2008 at 10:25 AM, Andrius Norkaitis
<Andrius.Norkaitis at oryo.lt> wrote:
> Hello,
>
> I'm .NET developer and want to implement pubsub in WAN using RabbitMQ.
> Publishers would publish orders and they must be delivered to all
> Subscribers which are online and matches  some criterions (etc. city, order
> type). I wonder is RabbitMQ suitable for this? Can RabbitMQ do routing for
> me or should I implement pubsub myself?

RabbitMQ can do this.  See the User Guide on the dotnet downoad page,
specifically section 3.3 for this case.


> Can this be done with WCF?

Yes - the same web page provides a WCF guide as well ;-)



> Any examples or other reference where can I start would be appreciated.

Please try the above PDFs and let us know if you get stuck!

alexis





>
> Thanks for help in advance.
>
>
>
> Best regards,
>
> Andrius
>
>
>
> _______________________________________________
> rabbitmq-discuss mailing list
> rabbitmq-discuss at lists.rabbitmq.com
> http://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss
>
>



From Andrius.Norkaitis at oryo.lt  Wed Sep 24 11:22:59 2008
From: Andrius.Norkaitis at oryo.lt (Andrius Norkaitis)
Date: Wed, 24 Sep 2008 13:22:59 +0300
Subject: [rabbitmq-discuss] wct + pubsub
Message-ID: <!&!AAAAAAAAAAAYAAAAAAAAAKmCSsECxmlLkxuEpydKKTLCgAAAEAAAAEBJmioGMrhGre3/WoUXPwsBAAAAAA==@oryo.lt>

Thanks. I'll take close look at .NET Client documentation and try it.
I have looked at WCF examples already, but I still don't get how to achieve
pubsub using WCF.
I can use Duplex Services as example and create my own pubsub implementation
but in this case I would need to manage the list of subscribers with their
callback channels (and with multiple auto created queues of each subscriber
as I guess). 
How to do pubsub with WCF using RabbitMQ exchanges and routing? Maybe it can
be achieved only using plain .NET client implementation and not WCF?

Andrius


-----Original Message-----
From: alexis.richardson at gmail.com [mailto:alexis.richardson at gmail.com] On
Behalf Of Alexis Richardson
Sent: 2008.09.24 12:38
To: Andrius Norkaitis
Cc: rabbitmq-discuss at lists.rabbitmq.com
Subject: Re: [rabbitmq-discuss] wct + pubsub

Andrius


On Wed, Sep 24, 2008 at 10:25 AM, Andrius Norkaitis
<Andrius.Norkaitis at oryo.lt> wrote:
> Hello,
>
> I'm .NET developer and want to implement pubsub in WAN using RabbitMQ.
> Publishers would publish orders and they must be delivered to all
> Subscribers which are online and matches  some criterions (etc. city,
order
> type). I wonder is RabbitMQ suitable for this? Can RabbitMQ do routing for
> me or should I implement pubsub myself?

RabbitMQ can do this.  See the User Guide on the dotnet downoad page,
specifically section 3.3 for this case.


> Can this be done with WCF?

Yes - the same web page provides a WCF guide as well ;-)



> Any examples or other reference where can I start would be appreciated.

Please try the above PDFs and let us know if you get stuck!

alexis





>
> Thanks for help in advance.
>
>
>
> Best regards,
>
> Andrius
>
>
>
> _______________________________________________
> rabbitmq-discuss mailing list
> rabbitmq-discuss at lists.rabbitmq.com
> http://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss
>
>




From alexis.richardson at cohesiveft.com  Wed Sep 24 11:27:48 2008
From: alexis.richardson at cohesiveft.com (Alexis Richardson)
Date: Wed, 24 Sep 2008 11:27:48 +0100
Subject: [rabbitmq-discuss] wct + pubsub
In-Reply-To: <!&!AAAAAAAAAAAYAAAAAAAAAKmCSsECxmlLkxuEpydKKTLCgAAAEAAAAEBJmioGMrhGre3/WoUXPwsBAAAAAA==@oryo.lt>
References: <!&!AAAAAAAAAAAYAAAAAAAAAKmCSsECxmlLkxuEpydKKTLCgAAAEAAAAEBJmioGMrhGre3/WoUXPwsBAAAAAA==@oryo.lt>
Message-ID: <167204d20809240327ma3e05a0v36d66095c9cde589@mail.gmail.com>

Andrius

On Wed, Sep 24, 2008 at 11:22 AM, Andrius Norkaitis
<Andrius.Norkaitis at oryo.lt> wrote:
> Thanks. I'll take close look at .NET Client documentation and try it.
> I have looked at WCF examples already, but I still don't get how to achieve
> pubsub using WCF.
> I can use Duplex Services as example and create my own pubsub implementation
> but in this case I would need to manage the list of subscribers with their
> callback channels (and with multiple auto created queues of each subscriber
> as I guess).
> How to do pubsub with WCF using RabbitMQ exchanges and routing? Maybe it can
> be achieved only using plain .NET client implementation and not WCF?

You need to use a RabbitMQ topic exchange.  It does not matter whether
you use the C# .NET client, or the full WCF integration, because both
perform the same *underlying* AMQP action of publishing to an
exchange.  It is the topic exchange and routing key that gives you the
pubsub behaviour you want.  See the user guide for more info.

alexis





> Andrius
>
>
> -----Original Message-----
> From: alexis.richardson at gmail.com [mailto:alexis.richardson at gmail.com] On
> Behalf Of Alexis Richardson
> Sent: 2008.09.24 12:38
> To: Andrius Norkaitis
> Cc: rabbitmq-discuss at lists.rabbitmq.com
> Subject: Re: [rabbitmq-discuss] wct + pubsub
>
> Andrius
>
>
> On Wed, Sep 24, 2008 at 10:25 AM, Andrius Norkaitis
> <Andrius.Norkaitis at oryo.lt> wrote:
>> Hello,
>>
>> I'm .NET developer and want to implement pubsub in WAN using RabbitMQ.
>> Publishers would publish orders and they must be delivered to all
>> Subscribers which are online and matches  some criterions (etc. city,
> order
>> type). I wonder is RabbitMQ suitable for this? Can RabbitMQ do routing for
>> me or should I implement pubsub myself?
>
> RabbitMQ can do this.  See the User Guide on the dotnet downoad page,
> specifically section 3.3 for this case.
>
>
>> Can this be done with WCF?
>
> Yes - the same web page provides a WCF guide as well ;-)
>
>
>
>> Any examples or other reference where can I start would be appreciated.
>
> Please try the above PDFs and let us know if you get stuck!
>
> alexis
>
>
>
>
>
>>
>> Thanks for help in advance.
>>
>>
>>
>> Best regards,
>>
>> Andrius
>>
>>
>>
>> _______________________________________________
>> rabbitmq-discuss mailing list
>> rabbitmq-discuss at lists.rabbitmq.com
>> http://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss
>>
>>
>
>
> _______________________________________________
> rabbitmq-discuss mailing list
> rabbitmq-discuss at lists.rabbitmq.com
> http://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss
>



From hbayhantopcu at gmail.com  Wed Sep 24 12:04:17 2008
From: hbayhantopcu at gmail.com (Haldun Bayhantopcu)
Date: Wed, 24 Sep 2008 13:04:17 +0200
Subject: [rabbitmq-discuss] Shovel does not start
Message-ID: <8a6348b50809240404g1f0562b2r569fcb71b946fb26@mail.gmail.com>

Hi,

I am trying to run shovel application, however it seems not to be
running after these commands:

$ erl -rabbit tcp_listeners '[{"127.0.0.1", 5672}]' -boot start_sasl
-s rabbit -s shovel
1> application:which_applications().
[{rabbit,"RabbitMQ","%%VERSION%%"},
{mnesia,"MNESIA CXC 138 12","4.4.3"},
{os_mon,"CPO CXC 138 46","2.1.6"},
{sasl,"SASL CXC 138 11","2.1.5.3"},
{stdlib,"ERTS CXC 138 10","1.15.3"},
{kernel,"ERTS CXC 138 10","2.12.3"}]

When I manually try to run shovel with

2> application:start(shovel).

erlang just hangs.

Thanks in advance.
Haldun.

(System: Mac OS X 10.5.4, Erlang 5.6.3, RabbitMQ server, Rabbit erlang
client, and shovel: checked out from repo)



From 0x6e6562 at gmail.com  Wed Sep 24 12:12:37 2008
From: 0x6e6562 at gmail.com (Ben Hood)
Date: Wed, 24 Sep 2008 12:12:37 +0100
Subject: [rabbitmq-discuss] async thread pool
In-Reply-To: <e1c05edd0809232153n194ca170o98fe55bb4cc41858@mail.gmail.com>
References: <e1c05edd0809232153n194ca170o98fe55bb4cc41858@mail.gmail.com>
Message-ID: <269388e30809240412q460e892t6aed583d982b2990@mail.gmail.com>

Aman,

On Wed, Sep 24, 2008 at 5:53 AM, Aman Gupta <rabbitmq at tmm1.net> wrote:
>  +A size:
>  Sets the number of threads in async thread pool, valid range is
> 0-1024. Default is 0.
>
> The default is 0, why does rabbit use 30?

Having more than 0 lets you do IO in parallel (socket IO, mnesia,
journalling, logging). But why 30? I think it's just a just a number
that you can calibrate for your own system.

HTH,

Ben



From 0x6e6562 at gmail.com  Wed Sep 24 12:19:10 2008
From: 0x6e6562 at gmail.com (Ben Hood)
Date: Wed, 24 Sep 2008 12:19:10 +0100
Subject: [rabbitmq-discuss] Shovel does not start
In-Reply-To: <8a6348b50809240404g1f0562b2r569fcb71b946fb26@mail.gmail.com>
References: <8a6348b50809240404g1f0562b2r569fcb71b946fb26@mail.gmail.com>
Message-ID: <269388e30809240419s75e4c778s3c974087de99f74d@mail.gmail.com>

Haldun,

On Wed, Sep 24, 2008 at 12:04 PM, Haldun Bayhantopcu
<hbayhantopcu at gmail.com> wrote:
> Hi,
>
> I am trying to run shovel application, however it seems not to be
> running after these commands:
>
> $ erl -rabbit tcp_listeners '[{"127.0.0.1", 5672}]' -boot start_sasl
> -s rabbit -s shovel
> 1> application:which_applications().
> [{rabbit,"RabbitMQ","%%VERSION%%"},
> {mnesia,"MNESIA CXC 138 12","4.4.3"},
> {os_mon,"CPO CXC 138 46","2.1.6"},
> {sasl,"SASL CXC 138 11","2.1.5.3"},
> {stdlib,"ERTS CXC 138 10","1.15.3"},
> {kernel,"ERTS CXC 138 10","2.12.3"}]
>
> When I manually try to run shovel with
>
> 2> application:start(shovel).
>
> erlang just hangs.
>

If I'm not mistaken, this question was answered 2 days ago:

http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/2008-September/001954.html

HTH,

Ben



From bp at barryp.org  Wed Sep 24 16:39:08 2008
From: bp at barryp.org (Barry Pederson)
Date: Wed, 24 Sep 2008 10:39:08 -0500
Subject: [rabbitmq-discuss] Publish won't work without transaction?
In-Reply-To: <269388e30809240006g3807f6fl9f7839fb41d32fa5@mail.gmail.com>
References: <84fb38e30809221343l171b2fddkbf1d6184de554d92@mail.gmail.com>	<269388e30809221401x5c808f4dt6da8c2e06c34b35d@mail.gmail.com>	<84fb38e30809221419v456f39cfwcc3ed9c7dce59d09@mail.gmail.com>	<269388e30809221521p6aca6e30q9cd2cb9511f22aeb@mail.gmail.com>	<84fb38e30809221613r35fac041v4e214efc20d37274@mail.gmail.com>	<269388e30809230520n6eea651apea10d40abeac0c1@mail.gmail.com>	<84fb38e30809231228y3d0d6c0an4ba7ef158a0c0f63@mail.gmail.com>	<269388e30809231718x3bf0ed2cp852b0e3fee120f93@mail.gmail.com>	<84fb38e30809232003s7df1107doc3bd6f6377f40e53@mail.gmail.com>
	<269388e30809240006g3807f6fl9f7839fb41d32fa5@mail.gmail.com>
Message-ID: <48DA5F1C.60407@barryp.org>

Ben Hood wrote:
> Tsuraan,
> 
> On Wed, Sep 24, 2008 at 4:03 AM, tsuraan <tsuraan at gmail.com> wrote:
>> Where are
>> things like the no_ack option on py-amqplib's basic_consume
>> documented?
> 
> I think Barry could answer this one. In the meantime, just try to add
> the no_ack flag as an argument to the consume function.

The docs within py-amqplib are lifted directly from the 0.8 XML spec 
file, and unfortunately the section under basic.consume says nothing at 
all about that flag.

However there are other entries in the spec file tagged <domain> that do 
have some relevant info that doesn't make it into the Python docstrings, 
one of them is:

-----
<domain name="no ack" type="bit">
   no acknowledgement needed
   <doc>
     If this field is set the server does not expect acknowledgments
     for messages.  That is, when a message is delivered to the client
     the server automatically and silently acknowledges it on behalf
     of the client.  This functionality increases performance but at
     the cost of reliability.  Messages can get lost if a client dies
     before it can deliver them to the application.
   </doc>
</domain>
-----

The server-implementers would have a better handle on the semantics of 
that flag relating to basic.consume, py-amqplib just passes it along as 
part of the wire-protocol and doesn't do anything with it itself.

	Barry



From 0x6e6562 at gmail.com  Wed Sep 24 17:13:21 2008
From: 0x6e6562 at gmail.com (Ben Hood)
Date: Wed, 24 Sep 2008 17:13:21 +0100
Subject: [rabbitmq-discuss] Publish won't work without transaction?
In-Reply-To: <48DA5F1C.60407@barryp.org>
References: <84fb38e30809221343l171b2fddkbf1d6184de554d92@mail.gmail.com>
	<84fb38e30809221419v456f39cfwcc3ed9c7dce59d09@mail.gmail.com>
	<269388e30809221521p6aca6e30q9cd2cb9511f22aeb@mail.gmail.com>
	<84fb38e30809221613r35fac041v4e214efc20d37274@mail.gmail.com>
	<269388e30809230520n6eea651apea10d40abeac0c1@mail.gmail.com>
	<84fb38e30809231228y3d0d6c0an4ba7ef158a0c0f63@mail.gmail.com>
	<269388e30809231718x3bf0ed2cp852b0e3fee120f93@mail.gmail.com>
	<84fb38e30809232003s7df1107doc3bd6f6377f40e53@mail.gmail.com>
	<269388e30809240006g3807f6fl9f7839fb41d32fa5@mail.gmail.com>
	<48DA5F1C.60407@barryp.org>
Message-ID: <269388e30809240913k72bee29aw2fca6409d302f6ee@mail.gmail.com>

Barry,

On Wed, Sep 24, 2008 at 4:39 PM, Barry Pederson <bp at barryp.org> wrote:
> The server-implementers would have a better handle on the semantics of that
> flag relating to basic.consume, py-amqplib just passes it along as part of

Of course we know what the flag means, otherwise how we could
implement the server :-)

I was just trying to pass on the opportunity to you to answer
questions about your own library rather than have me bore the list
again.

Tsuraan, at the end of the day, the clients, no matter what design
feature has gone into them, are but mere mouthpieces to the server,
whose semantics are defined in the protocol specification. So if you
ever wonder about the meaning of a flag or option, the first place to
look is the rendered protocol documentation.

HTH,

Ben



From rabbitmq at tmm1.net  Wed Sep 24 20:04:26 2008
From: rabbitmq at tmm1.net (Aman Gupta)
Date: Wed, 24 Sep 2008 12:04:26 -0700
Subject: [rabbitmq-discuss] async thread pool
In-Reply-To: <269388e30809240412q460e892t6aed583d982b2990@mail.gmail.com>
References: <e1c05edd0809232153n194ca170o98fe55bb4cc41858@mail.gmail.com>
	<269388e30809240412q460e892t6aed583d982b2990@mail.gmail.com>
Message-ID: <e1c05edd0809241204y107de3a1ue51d817a07e31bb8@mail.gmail.com>

Over the past few days, we ran into issues during peak hours where
messages delivery was lagging severely (sometimes for up to two
minutes). During this time, the beam process is using 100% cpu. An
strace of the beam process and its async threads showed erlang was
spending most of its time in the futex system call, and doing network
i/o only very occasionally.

We changed the rabbitmq-server script to use -A0 instead and so far it
is working much better. strace shows the process spends most of its
time in epoll_wait and we are no longer having latency issues.

I'm curious as to what the reasoning behind the 30 threads was.. the
number seems a bit arbitrary, and possibly excessive as a default
setting.

  Aman

On Wed, Sep 24, 2008 at 4:12 AM, Ben Hood <0x6e6562 at gmail.com> wrote:
> Aman,
>
> On Wed, Sep 24, 2008 at 5:53 AM, Aman Gupta <rabbitmq at tmm1.net> wrote:
>>  +A size:
>>  Sets the number of threads in async thread pool, valid range is
>> 0-1024. Default is 0.
>>
>> The default is 0, why does rabbit use 30?
>
> Having more than 0 lets you do IO in parallel (socket IO, mnesia,
> journalling, logging). But why 30? I think it's just a just a number
> that you can calibrate for your own system.
>
> HTH,
>
> Ben
>



From Andrius.Norkaitis at oryo.lt  Thu Sep 25 19:00:26 2008
From: Andrius.Norkaitis at oryo.lt (Andrius Norkaitis)
Date: Thu, 25 Sep 2008 21:00:26 +0300
Subject: [rabbitmq-discuss] wct + pubsub
In-Reply-To: <167204d20809240327ma3e05a0v36d66095c9cde589@mail.gmail.com>
References: <!&!AAAAAAAAAAAYAAAAAAAAAKmCSsECxmlLkxuEpydKKTLCgAAAEAAAAEBJmioGMrhGre3/WoUXPwsBAAAAAA==@oryo.lt>
	<167204d20809240327ma3e05a0v36d66095c9cde589@mail.gmail.com>
Message-ID: <!&!AAAAAAAAAAAYAAAAAAAAAKmCSsECxmlLkxuEpydKKTLCgAAAEAAAAO9D0uele3VHhAyW3r4QhgwBAAAAAA==@oryo.lt>

Hello,

I read all documentation and played with sendstring and logtail examples and
it's all much clearer now. I still don't find a way how to do pubsub with
WCF service model.

In sendstring example there are this line of code: 

ch.ExchangeDeclare(ticket, exchange, exchangeType);

which specifies exchangeType (I specify topic type in my case).
In RabbitMQ.ServiceModel implementation there is no such code so direct
exchange is used (see RabbitMQInputChannel.cs and RabbitMQOutputChannel.cs)?

Any suggestion how to achieve logtail and sendtring with topic exchange
functionality using WCF service model?

Thanks,
Andrius



-----Original Message-----
From: alexis.richardson at gmail.com [mailto:alexis.richardson at gmail.com] On
Behalf Of Alexis Richardson
Sent: 2008.09.24 13:28
To: Andrius Norkaitis
Cc: rabbitmq-discuss at lists.rabbitmq.com
Subject: Re: [rabbitmq-discuss] wct + pubsub

Andrius

On Wed, Sep 24, 2008 at 11:22 AM, Andrius Norkaitis
<Andrius.Norkaitis at oryo.lt> wrote:
> Thanks. I'll take close look at .NET Client documentation and try it.
> I have looked at WCF examples already, but I still don't get how to
achieve
> pubsub using WCF.
> I can use Duplex Services as example and create my own pubsub
implementation
> but in this case I would need to manage the list of subscribers with their
> callback channels (and with multiple auto created queues of each
subscriber
> as I guess).
> How to do pubsub with WCF using RabbitMQ exchanges and routing? Maybe it
can
> be achieved only using plain .NET client implementation and not WCF?

You need to use a RabbitMQ topic exchange.  It does not matter whether
you use the C# .NET client, or the full WCF integration, because both
perform the same *underlying* AMQP action of publishing to an
exchange.  It is the topic exchange and routing key that gives you the
pubsub behaviour you want.  See the user guide for more info.

alexis





> Andrius
>
>
> -----Original Message-----
> From: alexis.richardson at gmail.com [mailto:alexis.richardson at gmail.com] On
> Behalf Of Alexis Richardson
> Sent: 2008.09.24 12:38
> To: Andrius Norkaitis
> Cc: rabbitmq-discuss at lists.rabbitmq.com
> Subject: Re: [rabbitmq-discuss] wct + pubsub
>
> Andrius
>
>
> On Wed, Sep 24, 2008 at 10:25 AM, Andrius Norkaitis
> <Andrius.Norkaitis at oryo.lt> wrote:
>> Hello,
>>
>> I'm .NET developer and want to implement pubsub in WAN using RabbitMQ.
>> Publishers would publish orders and they must be delivered to all
>> Subscribers which are online and matches  some criterions (etc. city,
> order
>> type). I wonder is RabbitMQ suitable for this? Can RabbitMQ do routing
for
>> me or should I implement pubsub myself?
>
> RabbitMQ can do this.  See the User Guide on the dotnet downoad page,
> specifically section 3.3 for this case.
>
>
>> Can this be done with WCF?
>
> Yes - the same web page provides a WCF guide as well ;-)
>
>
>
>> Any examples or other reference where can I start would be appreciated.
>
> Please try the above PDFs and let us know if you get stuck!
>
> alexis
>
>
>
>
>
>>
>> Thanks for help in advance.
>>
>>
>>
>> Best regards,
>>
>> Andrius
>>
>>
>>
>> _______________________________________________
>> rabbitmq-discuss mailing list
>> rabbitmq-discuss at lists.rabbitmq.com
>> http://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss
>>
>>
>
>
> _______________________________________________
> rabbitmq-discuss mailing list
> rabbitmq-discuss at lists.rabbitmq.com
> http://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss
>




From dialtone at gmail.com  Fri Sep 26 01:47:40 2008
From: dialtone at gmail.com (Valentino Volonghi)
Date: Thu, 25 Sep 2008 17:47:40 -0700
Subject: [rabbitmq-discuss] RabbitMQ problem
Message-ID: <F6DB6521-2340-46E1-88A6-4928C0440C35@gmail.com>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

Hi, I think I've found another bug in RabbitMQ.

Basically:
* create durable exchange and durable queue
* start a transaction
* send a couple of messages
* with the transaction still open delete the queue that was matching
* commit the transaction
* send some other messages

- -> rabbitmq will fail (but this is not the problem) with the following  
error:

=ERROR REPORT==== 25-Sep-2008::17:32:28 ===
connection <0.155.0> (running), channel 1 - error:
{commit_failed,
     [{exit,
          {noproc,{gen_server,call,[<0.169.0>,{commit,{{2,<0.161.0>}, 
36}}]}}}]}

=ERROR REPORT==== 25-Sep-2008::17:32:28 ===
Non-AMQP exit reason '{commit_failed,
                           [{exit,
                                {noproc,
                                    {gen_server,call,
                                        [<0.169.0>,
                                         {commit,{{2,<0.161.0>}, 
36}}]}}}]}'



====> Here's the error then: rabbitmq simply stops delivering messages  
and I think
it actually loses all the messages that it receives after the failing  
commit.

I don't have a usecase for this in my software (at least not yet) but
I think this thing can happen with auto_delete queues.

I tried adding code that in case of a failed commit runs the rollback  
but apparently I don't
even receive the failed commit message.

- --
Valentino Volonghi aka Dialtone
Now running MacOS X 10.5
Home Page: http://www.twisted.it
http://www.adroll.com

-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.4.9 (Darwin)

iEYEARECAAYFAkjcMS0ACgkQ9Llz28widGWdJQCg4enyRR/KevS78Tku4a9NFIDM
4/YAniyLjIX4MZuDkCsWYiwQtEDnINTN
=QODa
-----END PGP SIGNATURE-----



From matthias at lshift.net  Fri Sep 26 05:48:11 2008
From: matthias at lshift.net (Matthias Radestock)
Date: Fri, 26 Sep 2008 05:48:11 +0100
Subject: [rabbitmq-discuss] RabbitMQ problem
In-Reply-To: <F6DB6521-2340-46E1-88A6-4928C0440C35@gmail.com>
References: <F6DB6521-2340-46E1-88A6-4928C0440C35@gmail.com>
Message-ID: <48DC698B.5000501@lshift.net>

Valentino,

Valentino Volonghi wrote:
> -----BEGIN PGP SIGNED MESSAGE-----
> Hash: SHA1
> 
> Hi, I think I've found another bug in RabbitMQ.
> 
> Basically:
> * create durable exchange and durable queue
> * start a transaction
> * send a couple of messages
> * with the transaction still open delete the queue that was matching
> * commit the transaction
> * send some other messages
> 
> - -> rabbitmq will fail (but this is not the problem) with the following  
> error:
> 
> =ERROR REPORT==== 25-Sep-2008::17:32:28 ===
> connection <0.155.0> (running), channel 1 - error:
> {commit_failed,
>      [{exit,
>           {noproc,{gen_server,call,[<0.169.0>,{commit,{{2,<0.161.0>}, 
> 36}}]}}}]}
> 
> =ERROR REPORT==== 25-Sep-2008::17:32:28 ===
> Non-AMQP exit reason '{commit_failed,
>                            [{exit,
>                                 {noproc,
>                                     {gen_server,call,
>                                         [<0.169.0>,
>                                          {commit,{{2,<0.161.0>}, 
> 36}}]}}}]}'
> 

This behaviour is intentional. IMO it would be wrong for the tx commit 
to succeed when a participating queue has been deleted. The AMQP spec 
doesn't specify what should happen in this case though, so we simply 
throw an exception which in turn will cause the connection to be closed 
with an INTERNAL_ERROR.

> ====> Here's the error then: rabbitmq simply stops delivering messages  
> and I think
> it actually loses all the messages that it receives after the failing  
> commit.

That would be because the connection has been closed.

> I tried adding code that in case of a failed commit runs the rollback  

Since the connection will have been closed there is no point in doing that.

> but apparently I don't even receive the failed commit message.

That is strange. What client are you using?


Matthias.



From dialtone at gmail.com  Fri Sep 26 07:31:36 2008
From: dialtone at gmail.com (Valentino Volonghi)
Date: Thu, 25 Sep 2008 23:31:36 -0700
Subject: [rabbitmq-discuss] RabbitMQ problem
In-Reply-To: <48DC698B.5000501@lshift.net>
References: <F6DB6521-2340-46E1-88A6-4928C0440C35@gmail.com>
	<48DC698B.5000501@lshift.net>
Message-ID: <C85BA382-FDAA-4A5D-B440-D293CDFE02C1@gmail.com>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1


On Sep 25, 2008, at 9:48 PM, Matthias Radestock wrote:

> This behaviour is intentional. IMO it would be wrong for the tx  
> commit to succeed when a participating queue has been deleted. The  
> AMQP spec doesn't specify what should happen in this case though, so  
> we simply throw an exception which in turn will cause the connection  
> to be closed with an INTERNAL_ERROR.

Yes, I imagined this, I don't expect it to succeed when a queue is  
removed,
although this might change some things. What if I connect with an  
auto_delete queue
non durable and in the middle of a transaction I disconnect it? Of  
course one way would
be to simply leave the queue there, but at some point the mnesia db  
would be full.

>> ====> Here's the error then: rabbitmq simply stops delivering  
>> messages  and I think
>> it actually loses all the messages that it receives after the  
>> failing  commit.
>
> That would be because the connection has been closed.

Why? This is completely unexpected to me... Also I don't think this is  
true because
I don't see the connection dropped error on the client side that I  
usually see
when I stop rabbitmq server.

>> I tried adding code that in case of a failed commit runs the rollback
>
> Since the connection will have been closed there is no point in  
> doing that.

Sure, it's just that dropping the connection because a transaction  
failed
makes the commit_failed message completely useless. Just use the
connection dropped error to mean the same thing, I'm not sure this is  
the
right behavior (from a logic point of view). If a database dropped the  
connection
every time a transaction failed they would spend more time off rather  
than doing
anything. That's why I think it's an error, after all transactions are  
isolated and
a rollback is there exactly to be able to go back to the beginning  
without any
consequences.

>> but apparently I don't even receive the failed commit message.
>
> That is strange. What client are you using?


erlang client and rabbitmq server.

- --
Valentino Volonghi aka Dialtone
Now running MacOS X 10.5
Home Page: http://www.twisted.it
http://www.adroll.com

-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.4.9 (Darwin)

iEYEARECAAYFAkjcgcgACgkQ9Llz28widGVwwwCgkufON388f8Jj7jQc2tWe1RRy
bJcAn1xy7ZUbNFaG4g6UAQ0PFN+/bZR5
=Ltcr
-----END PGP SIGNATURE-----



From matthias at lshift.net  Fri Sep 26 09:35:36 2008
From: matthias at lshift.net (Matthias Radestock)
Date: Fri, 26 Sep 2008 09:35:36 +0100
Subject: [rabbitmq-discuss] RabbitMQ problem
In-Reply-To: <C85BA382-FDAA-4A5D-B440-D293CDFE02C1@gmail.com>
References: <F6DB6521-2340-46E1-88A6-4928C0440C35@gmail.com>	<48DC698B.5000501@lshift.net>
	<C85BA382-FDAA-4A5D-B440-D293CDFE02C1@gmail.com>
Message-ID: <48DC9ED8.9060205@lshift.net>

Valentino,

Valentino Volonghi wrote:
>> That would be because the connection has been closed.
> 
> Why? This is completely unexpected to me... Also I don't think this
> is true because I don't see the connection dropped error on the
> client side that I usually see when I stop rabbitmq server.

There are only two ways to report an error to the client in AMQP - the 
server needs to send either a channel.close or connection.close method. 
The client is then expected to respond with a close-ok and at that point 
(or after a timeout) the channel/connection is closed.

Because we do not know the exact reasons for why the commit failed we 
assume the worst, an INTERNAL_ERROR, which, like all severe errors, is a 
connection error, i.e. it will force the connection to close.

> Sure, it's just that dropping the connection because a transaction failed
> makes the commit_failed message completely useless. Just use the
> connection dropped error to mean the same thing, I'm not sure this is the
> right behavior (from a logic point of view).

The server doesn't just drop the connection. It follows the connection 
closure protocol, and as part of that the client is told about the 
closure reasons.

> If a database dropped the connection every time a transaction failed
> they would spend more time off rather than doing anything. That's why
> I think it's an error, after all transactions are isolated and a
> rollback is there exactly to be able to go back to the beginning 
> without any consequences.

I see your point, alas there is nothing in the AMQP protocol, such as a 
tx.commit-fail method, that would allow us to inform the client of the 
tx failure without closing the channel or connection.

This has come up in discussions in the Working Group, so I would expect 
an improvement in this area at some point.

>>> but apparently I don't even receive the failed commit message.
>>
>> That is strange. What client are you using?
> 
> 
> erlang client and rabbitmq server.

In the Java and C# clients the channel and connection closure reasons 
are propagated to the initiators of all pending request-response 
interactions. I am not sure whether that is happening in the Erlang 
client. We will look into it.


Matthias.



From alexis.richardson at cohesiveft.com  Fri Sep 26 11:58:57 2008
From: alexis.richardson at cohesiveft.com (Alexis Richardson)
Date: Fri, 26 Sep 2008 11:58:57 +0100
Subject: [rabbitmq-discuss] wct + pubsub
In-Reply-To: <!&!AAAAAAAAAAAYAAAAAAAAAKmCSsECxmlLkxuEpydKKTLCgAAAEAAAAO9D0uele3VHhAyW3r4QhgwBAAAAAA==@oryo.lt>
References: <!&!AAAAAAAAAAAYAAAAAAAAAKmCSsECxmlLkxuEpydKKTLCgAAAEAAAAEBJmioGMrhGre3/WoUXPwsBAAAAAA==@oryo.lt>
	<167204d20809240327ma3e05a0v36d66095c9cde589@mail.gmail.com>
	<!&!AAAAAAAAAAAYAAAAAAAAAKmCSsECxmlLkxuEpydKKTLCgAAAEAAAAO9D0uele3VHhAyW3r4QhgwBAAAAAA==@oryo.lt>
Message-ID: <167204d20809260358r1abd12dfh7dbe643545070f6d@mail.gmail.com>

Andrius,

On Thu, Sep 25, 2008 at 7:00 PM, Andrius Norkaitis
<Andrius.Norkaitis at oryo.lt> wrote:
> Hello,
>
> I read all documentation and played with sendstring and logtail examples and
> it's all much clearer now. I still don't find a way how to do pubsub with
> WCF service model.

OK.  Two things:

1) Are you able to do pubsub without using WCF, i.e. using C# on its own?
2) What kind of pubsub do you want to do?



> In sendstring example there are this line of code:
>
> ch.ExchangeDeclare(ticket, exchange, exchangeType);
>
> which specifies exchangeType (I specify topic type in my case).
> In RabbitMQ.ServiceModel implementation there is no such code so direct
> exchange is used (see RabbitMQInputChannel.cs and RabbitMQOutputChannel.cs)?

This code will use whatever exchange is at the endpoint which you need
to have declared beforehand.


> Any suggestion how to achieve logtail and sendtring with topic exchange
> functionality using WCF service model?

If you could send us some sample code of what you want to achieve then
it will be easier for us to help you efficiently.  Would that be
possible please?

alexis






> Thanks,
> Andrius
>
>
>
> -----Original Message-----
> From: alexis.richardson at gmail.com [mailto:alexis.richardson at gmail.com] On
> Behalf Of Alexis Richardson
> Sent: 2008.09.24 13:28
> To: Andrius Norkaitis
> Cc: rabbitmq-discuss at lists.rabbitmq.com
> Subject: Re: [rabbitmq-discuss] wct + pubsub
>
> Andrius
>
> On Wed, Sep 24, 2008 at 11:22 AM, Andrius Norkaitis
> <Andrius.Norkaitis at oryo.lt> wrote:
>> Thanks. I'll take close look at .NET Client documentation and try it.
>> I have looked at WCF examples already, but I still don't get how to
> achieve
>> pubsub using WCF.
>> I can use Duplex Services as example and create my own pubsub
> implementation
>> but in this case I would need to manage the list of subscribers with their
>> callback channels (and with multiple auto created queues of each
> subscriber
>> as I guess).
>> How to do pubsub with WCF using RabbitMQ exchanges and routing? Maybe it
> can
>> be achieved only using plain .NET client implementation and not WCF?
>
> You need to use a RabbitMQ topic exchange.  It does not matter whether
> you use the C# .NET client, or the full WCF integration, because both
> perform the same *underlying* AMQP action of publishing to an
> exchange.  It is the topic exchange and routing key that gives you the
> pubsub behaviour you want.  See the user guide for more info.
>
> alexis
>
>
>
>
>
>> Andrius
>>
>>
>> -----Original Message-----
>> From: alexis.richardson at gmail.com [mailto:alexis.richardson at gmail.com] On
>> Behalf Of Alexis Richardson
>> Sent: 2008.09.24 12:38
>> To: Andrius Norkaitis
>> Cc: rabbitmq-discuss at lists.rabbitmq.com
>> Subject: Re: [rabbitmq-discuss] wct + pubsub
>>
>> Andrius
>>
>>
>> On Wed, Sep 24, 2008 at 10:25 AM, Andrius Norkaitis
>> <Andrius.Norkaitis at oryo.lt> wrote:
>>> Hello,
>>>
>>> I'm .NET developer and want to implement pubsub in WAN using RabbitMQ.
>>> Publishers would publish orders and they must be delivered to all
>>> Subscribers which are online and matches  some criterions (etc. city,
>> order
>>> type). I wonder is RabbitMQ suitable for this? Can RabbitMQ do routing
> for
>>> me or should I implement pubsub myself?
>>
>> RabbitMQ can do this.  See the User Guide on the dotnet downoad page,
>> specifically section 3.3 for this case.
>>
>>
>>> Can this be done with WCF?
>>
>> Yes - the same web page provides a WCF guide as well ;-)
>>
>>
>>
>>> Any examples or other reference where can I start would be appreciated.
>>
>> Please try the above PDFs and let us know if you get stuck!
>>
>> alexis
>>
>>
>>
>>
>>
>>>
>>> Thanks for help in advance.
>>>
>>>
>>>
>>> Best regards,
>>>
>>> Andrius
>>>
>>>
>>>
>>> _______________________________________________
>>> rabbitmq-discuss mailing list
>>> rabbitmq-discuss at lists.rabbitmq.com
>>> http://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss
>>>
>>>
>>
>>
>> _______________________________________________
>> rabbitmq-discuss mailing list
>> rabbitmq-discuss at lists.rabbitmq.com
>> http://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss
>>
>
>
> _______________________________________________
> rabbitmq-discuss mailing list
> rabbitmq-discuss at lists.rabbitmq.com
> http://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss
>



From dmitriy.samovskiy at cohesiveft.com  Fri Sep 26 16:23:01 2008
From: dmitriy.samovskiy at cohesiveft.com (Dmitriy Samovskiy)
Date: Fri, 26 Sep 2008 10:23:01 -0500
Subject: [rabbitmq-discuss] Clustering question
In-Reply-To: <269388e30809191646x3c298082x7438c61e1bc3fcc6@mail.gmail.com>
References: <48D01870.20401@cohesiveft.com> <48D3509F.3000001@lshift.net>	
	<48D3CC76.3040904@cohesiveft.com>
	<269388e30809191646x3c298082x7438c61e1bc3fcc6@mail.gmail.com>
Message-ID: <48DCFE55.4020605@cohesiveft.com>



Ben Hood wrote:
> Dmitriy,
> 
> On Fri, Sep 19, 2008 at 4:59 PM, Dmitriy Samovskiy
> wrote:
>>> Were there any mnesia-related errors in the logs?
>> Yes, I see ** ERROR ** mnesia_event got {inconsistent_database,
>> running_partitioned_network in rabbit.log. My bad for writing to the list without looking
>> in the logs...
> 
I spent some time this week trying to understand this issue better. Please note however 
that I am not an Erlang expert, and it's quite possible I got it all wrong.


RabbitMQ Cluster consisting of 2 nodes running on 2 hosts will enter 
"{inconsistent_database, running_partitioned_network}" state any time when network 
connectivity between the hosts is lost for sufficiently long period of time *and* then 
restored *while* rabbit nodes remain up and running (connectivity loss must be long enough 
for rabbit to notice this). After this happens, mnesia tables will no longer be 
replicated. Which for us effectively means cluster is no longer a cluster - each rabbit 
node now acts as a standalone broker.

Note I may be wrong in saying "must be long enough for rabbit to notice" - haven't tested 
it well enough. In theory, it looks to me like cluster should not be impacted if 
connectivity loss was short.

I suspect based on what I read (but have not verified it) that if your cluster consists of 
N nodes where N > 2, a partitioned network between any two all cause entire cluster to 
break down. I may be wrong here, possibly when some nodes are disk replicas and some nodes 
are ram replicas.


There is no common solution to this problem other than restart (entire node, or at least 
mnesia). Some people on erlang-questions reported running an external app to watch out for 
this state outside of distributed erlang, and then make a decision which nodes to restart 
or what else to do.


http://www.erlang.org/pipermail/erlang-questions/2008-March/033291.html
http://www.erlang.org/pipermail/erlang-questions/2004-February/011587.html
http://groups.google.com/group/erlang-questions/search?hl=en&group=erlang-questions&q=mnesia+%22partitioned+network%22



All in all, to answer my original question, there is nothing one can do by remsh'ing into 
a running rabbit node to restore the cluster except mnesia:stop() and mnesia:start() on 
specific nodes, and even then it might not work.


Looking forward to AMQP-level federation and HA...


- Dmitriy



From bogon.choi at gmail.com  Fri Sep 26 18:32:16 2008
From: bogon.choi at gmail.com (Bogon Choi)
Date: Fri, 26 Sep 2008 10:32:16 -0700 (PDT)
Subject: [rabbitmq-discuss]  Huge latency in Linux, compared with Leopard
Message-ID: <19692099.post@talk.nabble.com>


I tested very basic end-to-end latency of RabbitMQ 1.4.0 on Mac OS X Leopard
and RHET Linux.

A publisher prints out a timestamp right before it publishes a message, and
a subscriber receives the messages and prints out a timestamp. Every 3
second one process published a 1KB message. This is the very basic and easy
latency test I am always doing before I deploy systems.

But, the result was surprisingly comic.

Mac OS X Leopard: 4 milliseconds average latency from a publisher to a
subscriber
RHET5 Linux: 40.55 milliseconds average latency from a publisher to a
subscriber

I am using Erlang R12B-4, and compiled it from "./configure" and "make".
There was an error like a "JInterface" and "ODBC" stuffs at configuring from
Linux. I just ignored it.
All publisher, server, and subscriber were running at the same machine. So,
we can ignore the network delay on this test.

I tried also from Ubuntu 8.1 and its latency was also 40.55 milliseconds.
What is wrong with between Linux and Erlang?
-- 
View this message in context: http://www.nabble.com/Huge-latency-in-Linux%2C-compared-with-Leopard-tp19692099p19692099.html
Sent from the RabbitMQ mailing list archive at Nabble.com.




From bogon.choi at gmail.com  Fri Sep 26 18:35:52 2008
From: bogon.choi at gmail.com (Bogon Choi)
Date: Fri, 26 Sep 2008 10:35:52 -0700 (PDT)
Subject: [rabbitmq-discuss]  Huge latency in Linux, compared with Leopard
Message-ID: <19693144.post@talk.nabble.com>


I tested very basic end-to-end latency of RabbitMQ 1.4.0 on Mac OS X Leopard
and RHET Linux.

A publisher prints out a timestamp right before it publishes a message, and
a subscriber receives the messages and prints out a timestamp. Every 3
second one process published a 1KB message. This is the very basic and easy
latency test I am always doing before I deploy systems.

But, the result was surprisingly comic.

Mac OS X Leopard: 4 milliseconds average latency from a publisher to a
subscriber
RHET5 Linux: 40.55 milliseconds average latency from a publisher to a
subscriber

I am using Erlang R12B-4, and compiled it from "./configure" and "make".
There was an error like a "JInterface" and "ODBC" stuffs at configuring from
Linux. I just ignored it.
All publisher, server, and subscriber were running at the same machine. So,
we can ignore the network delay on this test.

I tried also from Ubuntu 8.1 and its latency was also 40.55 milliseconds.
What is wrong with between Linux and Erlang?
-- 
View this message in context: http://www.nabble.com/Huge-latency-in-Linux%2C-compared-with-Leopard-tp19693144p19693144.html
Sent from the RabbitMQ mailing list archive at Nabble.com.




From sustrik at imatix.com  Fri Sep 26 18:42:57 2008
From: sustrik at imatix.com (Martin Sustrik)
Date: Fri, 26 Sep 2008 19:42:57 +0200
Subject: [rabbitmq-discuss] Huge latency in Linux, compared with Leopard
In-Reply-To: <19692099.post@talk.nabble.com>
References: <19692099.post@talk.nabble.com>
Message-ID: <48DD1F21.1000104@imatix.com>

I would say you are actually measuring how long printing of timestamp 
takes rather than latency of RabbitMQ itself :)

Try to acquire timestamp first, then send the message then print the 
timestamp.

Martin

Bogon Choi wrote:
> I tested very basic end-to-end latency of RabbitMQ 1.4.0 on Mac OS X Leopard
> and RHET Linux.
> 
> A publisher prints out a timestamp right before it publishes a message, and
> a subscriber receives the messages and prints out a timestamp. Every 3
> second one process published a 1KB message. This is the very basic and easy
> latency test I am always doing before I deploy systems.
> 
> But, the result was surprisingly comic.
> 
> Mac OS X Leopard: 4 milliseconds average latency from a publisher to a
> subscriber
> RHET5 Linux: 40.55 milliseconds average latency from a publisher to a
> subscriber
> 
> I am using Erlang R12B-4, and compiled it from "./configure" and "make".
> There was an error like a "JInterface" and "ODBC" stuffs at configuring from
> Linux. I just ignored it.
> All publisher, server, and subscriber were running at the same machine. So,
> we can ignore the network delay on this test.
> 
> I tried also from Ubuntu 8.1 and its latency was also 40.55 milliseconds.
> What is wrong with between Linux and Erlang?




From bogon.choi at gmail.com  Fri Sep 26 19:37:28 2008
From: bogon.choi at gmail.com (Bogon Choi)
Date: Fri, 26 Sep 2008 11:37:28 -0700 (PDT)
Subject: [rabbitmq-discuss] Huge latency in Linux, compared with Leopard
In-Reply-To: <48DD1F21.1000104@imatix.com>
References: <48DD1F21.1000104@imatix.com>
Message-ID: <19694142.post@talk.nabble.com>


That was my mistake, though. The result is same.
I am figuring out why two systems have huge latency gap. Thanks.



Martin Sustrik wrote:
> 
> I would say you are actually measuring how long printing of timestamp 
> takes rather than latency of RabbitMQ itself :)
> 
> Try to acquire timestamp first, then send the message then print the 
> timestamp.
> 
> Martin
> 
> Bogon Choi wrote:
>> I tested very basic end-to-end latency of RabbitMQ 1.4.0 on Mac OS X
>> Leopard
>> and RHET Linux.
>> 
>> A publisher prints out a timestamp right before it publishes a message,
>> and
>> a subscriber receives the messages and prints out a timestamp. Every 3
>> second one process published a 1KB message. This is the very basic and
>> easy
>> latency test I am always doing before I deploy systems.
>> 
>> But, the result was surprisingly comic.
>> 
>> Mac OS X Leopard: 4 milliseconds average latency from a publisher to a
>> subscriber
>> RHET5 Linux: 40.55 milliseconds average latency from a publisher to a
>> subscriber
>> 
>> I am using Erlang R12B-4, and compiled it from "./configure" and "make".
>> There was an error like a "JInterface" and "ODBC" stuffs at configuring
>> from
>> Linux. I just ignored it.
>> All publisher, server, and subscriber were running at the same machine.
>> So,
>> we can ignore the network delay on this test.
>> 
>> I tried also from Ubuntu 8.1 and its latency was also 40.55 milliseconds.
>> What is wrong with between Linux and Erlang?
> 
> 
> _______________________________________________
> rabbitmq-discuss mailing list
> rabbitmq-discuss at lists.rabbitmq.com
> http://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss
> 
> 

-- 
View this message in context: http://www.nabble.com/Re%3A-Huge-latency-in-Linux%2C-compared-with-Leopard-tp19693265p19694142.html
Sent from the RabbitMQ mailing list archive at Nabble.com.




From anthony-rabbitmq at hogan.id.au  Sat Sep 27 05:49:41 2008
From: anthony-rabbitmq at hogan.id.au (Anthony)
Date: Sat, 27 Sep 2008 14:49:41 +1000
Subject: [rabbitmq-discuss] Huge latency in Linux, compared with Leopard
In-Reply-To: <19694142.post@talk.nabble.com>
References: <48DD1F21.1000104@imatix.com> <19694142.post@talk.nabble.com>
Message-ID: <1bf8be120809262149g2dc337cdt8f40d6046437a6bc@mail.gmail.com>

Different platforms having different kernels and therefore different
schedulers etc.

Redhat's plugging a product at the moment which contains some realtime
changes to the Linux kernel and a customised version of QPid all together
called Redhat MRG. Apparently you can get portions of this for CentOS 5
(RHEL 5 GPL clone)..

Without wholesale changing to another AMQP platform (this is the RabbitMQ
mailing list after all), perhaps you need to look at kernel options open to
you? Remember, that Apple control the hardware and the software, and
therefore have a lot better idea of what they have to do with respect to
tuning their kernels. Linux must deal with a greater hardware variety and
therefore "out of the box" may not be optimal for everyone.

Incidentally, are you running the install of Linux on the same machine as
Mac OS X?
Ie. Native boot, such as Bootcamp and not a virtualisation solution of some
sort
Different hardware (various memory controllers, IO controllers, bridges
yadda yadda) will return different results.

(Disclaimer: Before using anything like bootcamp, you should have a backup
strategy in place - any kind of repartitioning of an existing datastore has
a risk associated)
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20080927/dc0f858b/attachment.htm 

From bogon.choi at gmail.com  Sat Sep 27 06:05:17 2008
From: bogon.choi at gmail.com (Bogon Choi)
Date: Fri, 26 Sep 2008 22:05:17 -0700 (PDT)
Subject: [rabbitmq-discuss] Huge latency in Linux, compared with Leopard
In-Reply-To: <1bf8be120809262149g2dc337cdt8f40d6046437a6bc@mail.gmail.com>
References: <48DD1F21.1000104@imatix.com> <19694142.post@talk.nabble.com>
	<1bf8be120809262149g2dc337cdt8f40d6046437a6bc@mail.gmail.com>
Message-ID: <19699764.post@talk.nabble.com>


Thanks for your reply.
I tested the two scenarios on physically independent machines, one from my
iMAC and the other from other guy's DELL.
Let me ask you a quick question. If I have to tune the Linux's kernel, which
part should I check out first?
Can you give me some idea? Or, some link I can reference? I think I have to
check out the tcp stack of Linux first, e.g. checking out tcp buffer size or
mtu size, etc. Actually, I don't know the kernel tuning area. 


Anthony-108 wrote:
> 
> Different platforms having different kernels and therefore different
> schedulers etc.
> 
> Redhat's plugging a product at the moment which contains some realtime
> changes to the Linux kernel and a customised version of QPid all together
> called Redhat MRG. Apparently you can get portions of this for CentOS 5
> (RHEL 5 GPL clone)..
> 
> Without wholesale changing to another AMQP platform (this is the RabbitMQ
> mailing list after all), perhaps you need to look at kernel options open
> to
> you? Remember, that Apple control the hardware and the software, and
> therefore have a lot better idea of what they have to do with respect to
> tuning their kernels. Linux must deal with a greater hardware variety and
> therefore "out of the box" may not be optimal for everyone.
> 
> Incidentally, are you running the install of Linux on the same machine as
> Mac OS X?
> Ie. Native boot, such as Bootcamp and not a virtualisation solution of
> some
> sort
> Different hardware (various memory controllers, IO controllers, bridges
> yadda yadda) will return different results.
> 
> (Disclaimer: Before using anything like bootcamp, you should have a backup
> strategy in place - any kind of repartitioning of an existing datastore
> has
> a risk associated)
> 
> _______________________________________________
> rabbitmq-discuss mailing list
> rabbitmq-discuss at lists.rabbitmq.com
> http://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss
> 
> 

-- 
View this message in context: http://www.nabble.com/Re%3A-Huge-latency-in-Linux%2C-compared-with-Leopard-tp19693265p19699764.html
Sent from the RabbitMQ mailing list archive at Nabble.com.




From rabbitmq-discuss_efine at usa.net  Sat Sep 27 06:30:18 2008
From: rabbitmq-discuss_efine at usa.net (Edwin Fine)
Date: Sat, 27 Sep 2008 01:30:18 -0400
Subject: [rabbitmq-discuss] Huge latency in Linux, compared with Leopard
In-Reply-To: <19694142.post@talk.nabble.com>
References: <48DD1F21.1000104@imatix.com> <19694142.post@talk.nabble.com>
Message-ID: <6c2563b20809262230m804f14cvc37e63fa529aad4a@mail.gmail.com>

Will you post your erl command line for the Erlang node running the Rabbit
Erlang client, on MacOS and Linux? I am curious to see the options you are
using.
If you were able to post the code too, that would be interesting.

On Fri, Sep 26, 2008 at 2:37 PM, Bogon Choi <bogon.choi at gmail.com> wrote:

>
> That was my mistake, though. The result is same.
> I am figuring out why two systems have huge latency gap. Thanks.
>
>
>
> Martin Sustrik wrote:
> >
> > I would say you are actually measuring how long printing of timestamp
> > takes rather than latency of RabbitMQ itself :)
> >
> > Try to acquire timestamp first, then send the message then print the
> > timestamp.
> >
> > Martin
> >
> > Bogon Choi wrote:
> >> I tested very basic end-to-end latency of RabbitMQ 1.4.0 on Mac OS X
> >> Leopard
> >> and RHET Linux.
> >>
> >> A publisher prints out a timestamp right before it publishes a message,
> >> and
> >> a subscriber receives the messages and prints out a timestamp. Every 3
> >> second one process published a 1KB message. This is the very basic and
> >> easy
> >> latency test I am always doing before I deploy systems.
> >>
> >> But, the result was surprisingly comic.
> >>
> >> Mac OS X Leopard: 4 milliseconds average latency from a publisher to a
> >> subscriber
> >> RHET5 Linux: 40.55 milliseconds average latency from a publisher to a
> >> subscriber
> >>
> >> I am using Erlang R12B-4, and compiled it from "./configure" and "make".
> >> There was an error like a "JInterface" and "ODBC" stuffs at configuring
> >> from
> >> Linux. I just ignored it.
> >> All publisher, server, and subscriber were running at the same machine.
> >> So,
> >> we can ignore the network delay on this test.
> >>
> >> I tried also from Ubuntu 8.1 and its latency was also 40.55
> milliseconds.
> >> What is wrong with between Linux and Erlang?
> >
> >
> > _______________________________________________
> > rabbitmq-discuss mailing list
> > rabbitmq-discuss at lists.rabbitmq.com
> > http://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss
> >
> >
>
> --
> View this message in context:
> http://www.nabble.com/Re%3A-Huge-latency-in-Linux%2C-compared-with-Leopard-tp19693265p19694142.html
> Sent from the RabbitMQ mailing list archive at Nabble.com.
>
>
> _______________________________________________
> rabbitmq-discuss mailing list
> rabbitmq-discuss at lists.rabbitmq.com
> http://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20080927/7ab08a6c/attachment.htm 

From bogon.choi at gmail.com  Sat Sep 27 06:47:02 2008
From: bogon.choi at gmail.com (Bogon Choi)
Date: Fri, 26 Sep 2008 22:47:02 -0700 (PDT)
Subject: [rabbitmq-discuss] Huge latency in Linux, compared with Leopard
In-Reply-To: <6c2563b20809262230m804f14cvc37e63fa529aad4a@mail.gmail.com>
References: <48DD1F21.1000104@imatix.com> <19694142.post@talk.nabble.com>
	<6c2563b20809262230m804f14cvc37e63fa529aad4a@mail.gmail.com>
Message-ID: <19699943.post@talk.nabble.com>


I am using RabbitMQ Java library to talk with RabbitMQ Server. So, on the
client side, I don't have any erlang options.
On the server side, I use default options already provided by RabbitMQ.

ERL_ARGS="+K true +A30 -kernel inet_default_listen_options
[{sndbuf,16384},{recbuf,4096}]"

Both machines are using above options when RabbitMQ Server runs. I didn't
change anything.



Edwin Fine-3 wrote:
> 
> Will you post your erl command line for the Erlang node running the Rabbit
> Erlang client, on MacOS and Linux? I am curious to see the options you are
> using.
> If you were able to post the code too, that would be interesting.
> 
> On Fri, Sep 26, 2008 at 2:37 PM, Bogon Choi <bogon.choi at gmail.com> wrote:
> 
>>
>> That was my mistake, though. The result is same.
>> I am figuring out why two systems have huge latency gap. Thanks.
>>
>>
>>
>> Martin Sustrik wrote:
>> >
>> > I would say you are actually measuring how long printing of timestamp
>> > takes rather than latency of RabbitMQ itself :)
>> >
>> > Try to acquire timestamp first, then send the message then print the
>> > timestamp.
>> >
>> > Martin
>> >
>> > Bogon Choi wrote:
>> >> I tested very basic end-to-end latency of RabbitMQ 1.4.0 on Mac OS X
>> >> Leopard
>> >> and RHET Linux.
>> >>
>> >> A publisher prints out a timestamp right before it publishes a
>> message,
>> >> and
>> >> a subscriber receives the messages and prints out a timestamp. Every 3
>> >> second one process published a 1KB message. This is the very basic and
>> >> easy
>> >> latency test I am always doing before I deploy systems.
>> >>
>> >> But, the result was surprisingly comic.
>> >>
>> >> Mac OS X Leopard: 4 milliseconds average latency from a publisher to a
>> >> subscriber
>> >> RHET5 Linux: 40.55 milliseconds average latency from a publisher to a
>> >> subscriber
>> >>
>> >> I am using Erlang R12B-4, and compiled it from "./configure" and
>> "make".
>> >> There was an error like a "JInterface" and "ODBC" stuffs at
>> configuring
>> >> from
>> >> Linux. I just ignored it.
>> >> All publisher, server, and subscriber were running at the same
>> machine.
>> >> So,
>> >> we can ignore the network delay on this test.
>> >>
>> >> I tried also from Ubuntu 8.1 and its latency was also 40.55
>> milliseconds.
>> >> What is wrong with between Linux and Erlang?
>> >
>> >
>> > _______________________________________________
>> > rabbitmq-discuss mailing list
>> > rabbitmq-discuss at lists.rabbitmq.com
>> > http://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss
>> >
>> >
>>
>> --
>> View this message in context:
>> http://www.nabble.com/Re%3A-Huge-latency-in-Linux%2C-compared-with-Leopard-tp19693265p19694142.html
>> Sent from the RabbitMQ mailing list archive at Nabble.com.
>>
>>
>> _______________________________________________
>> rabbitmq-discuss mailing list
>> rabbitmq-discuss at lists.rabbitmq.com
>> http://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss
>>
>>
> 
> _______________________________________________
> rabbitmq-discuss mailing list
> rabbitmq-discuss at lists.rabbitmq.com
> http://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss
> 
> 

-- 
View this message in context: http://www.nabble.com/Re%3A-Huge-latency-in-Linux%2C-compared-with-Leopard-tp19693265p19699943.html
Sent from the RabbitMQ mailing list archive at Nabble.com.




From rabbitmq.com at miketeo.net  Sat Sep 27 07:55:44 2008
From: rabbitmq.com at miketeo.net (Michael Teo)
Date: Sat, 27 Sep 2008 14:55:44 +0800
Subject: [rabbitmq-discuss] User Access Control
Message-ID: <48DDD8F0.20902@miketeo.net>


Hi, I have just started using Stomp with RabbitMQ, and would like to
clarify if I can limit user access to queues or exchanges.

My scenario as follows:

Stomp Publisher: publish updates to /channels/#
Stomp Consumer A: subscribes and receives updates from /channels/A
Stomp Consumer B: subscribes and receives updates from /channels/B

Is there any settings/configurations which I can use to prevent Consumer
A from subscribing to /channels/B or even /channels/# ?

I have read up Administration Guide and understood that there are realms
 and permission flags like passive, active, write, read or all, but I
can't seem to relate the concepts of realms with queues in the RabbitMQ.

Hope someone in the RabbitMQ is able to help me with this.
Thanks in advance.
Michael




From matthias at lshift.net  Sat Sep 27 10:22:27 2008
From: matthias at lshift.net (Matthias Radestock)
Date: Sat, 27 Sep 2008 10:22:27 +0100
Subject: [rabbitmq-discuss] Huge latency in Linux, compared with Leopard
In-Reply-To: <19699943.post@talk.nabble.com>
References: <48DD1F21.1000104@imatix.com>
	<19694142.post@talk.nabble.com>	<6c2563b20809262230m804f14cvc37e63fa529aad4a@mail.gmail.com>
	<19699943.post@talk.nabble.com>
Message-ID: <48DDFB53.9030404@lshift.net>

Bogon Choi wrote:
> I am using RabbitMQ Java library to talk with RabbitMQ Server.

I have just run a test on a one of our Debian Linux machines here - 
kernel 2.6.24-1-686, "Intel(R) Xeon(TM) CPU 2.80GHz stepping 09". The 
test uses the MulticastMain example that ships with the Java client to 
send a 1k message every second and measure the latency:

sh runjava.sh com.rabbitmq.examples.MulticastMain -a -r 1 -s 1024 -i 5

Once the system has settled down I get minimum latencies of around 900 
microseconds, and average latencies of about 1050 microseconds.


Do you see the same results on your system when running the same test?


There is the occasional blip that produces max latencies of around 40ms. 
I always thought that was most likely due to the fact that the system is 
doing other things - it's my desktop machine - but given that the figure 
is the same that you are reporting perhaps that is not the case.

Tracking down the cause is very time-consuming though - it could be 
anything - our test code, the JVM, Java's network stack, the kernel, 
Erlang's network stack, the Erlang VM, the RabbitMQ server code ...

If anybody has some spare time at their hands and fancies a go a 
figuring out why we see these strange results, please post your findings 
here - we'd very much appreciate some help in this.


Matthias.



From 0x6e6562 at gmail.com  Sat Sep 27 14:26:18 2008
From: 0x6e6562 at gmail.com (Ben Hood)
Date: Sat, 27 Sep 2008 14:26:18 +0100
Subject: [rabbitmq-discuss] User Access Control
In-Reply-To: <48DDD8F0.20902@miketeo.net>
References: <48DDD8F0.20902@miketeo.net>
Message-ID: <269388e30809270626mb265be4h24d0043256a650e6@mail.gmail.com>

Michael,

On Sat, Sep 27, 2008 at 7:55 AM, Michael Teo <rabbitmq.com at miketeo.net> wrote:
>
> Hi, I have just started using Stomp with RabbitMQ, and would like to
> clarify if I can limit user access to queues or exchanges.
>
> My scenario as follows:
>
> Stomp Publisher: publish updates to /channels/#
> Stomp Consumer A: subscribes and receives updates from /channels/A
> Stomp Consumer B: subscribes and receives updates from /channels/B
>
> Is there any settings/configurations which I can use to prevent Consumer
> A from subscribing to /channels/B or even /channels/# ?
>
> I have read up Administration Guide and understood that there are realms
>  and permission flags like passive, active, write, read or all, but I
> can't seem to relate the concepts of realms with queues in the RabbitMQ.

There was a thread about this on the list recently:

http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/2008-September/001896.html

HTH,

Ben



From rabbitmq.com at miketeo.net  Sat Sep 27 14:58:36 2008
From: rabbitmq.com at miketeo.net (Michael Teo)
Date: Sat, 27 Sep 2008 21:58:36 +0800
Subject: [rabbitmq-discuss] User Access Control
In-Reply-To: <269388e30809270626mb265be4h24d0043256a650e6@mail.gmail.com>
References: <48DDD8F0.20902@miketeo.net>
	<269388e30809270626mb265be4h24d0043256a650e6@mail.gmail.com>
Message-ID: <48DE3C0C.6090906@miketeo.net>


Hi, Ben.
Thanks for the link to the post. I didn't realize that realms were going
to be deprecated soon.

Am I correct to say that when the realms have been dropped, RabbitMQ
server implementation will not have any measures to limit the clients to
be able to subscribe/publish to certain queues or exchanges ?

Michael


Ben Hood wrote:
> Michael,
> 
> On Sat, Sep 27, 2008 at 7:55 AM, Michael Teo <rabbitmq.com at miketeo.net> wrote:
>> Hi, I have just started using Stomp with RabbitMQ, and would like to
>> clarify if I can limit user access to queues or exchanges.
>>
>> My scenario as follows:
>>
>> Stomp Publisher: publish updates to /channels/#
>> Stomp Consumer A: subscribes and receives updates from /channels/A
>> Stomp Consumer B: subscribes and receives updates from /channels/B
>>
>> Is there any settings/configurations which I can use to prevent Consumer
>> A from subscribing to /channels/B or even /channels/# ?
>>
>> I have read up Administration Guide and understood that there are realms
>>  and permission flags like passive, active, write, read or all, but I
>> can't seem to relate the concepts of realms with queues in the RabbitMQ.
> 
> There was a thread about this on the list recently:
> 
> http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/2008-September/001896.html
> 
> HTH,
> 
> Ben
> 




From 0x6e6562 at gmail.com  Sat Sep 27 16:21:51 2008
From: 0x6e6562 at gmail.com (Ben Hood)
Date: Sat, 27 Sep 2008 16:21:51 +0100
Subject: [rabbitmq-discuss] User Access Control
In-Reply-To: <48DE3C0C.6090906@miketeo.net>
References: <48DDD8F0.20902@miketeo.net>
	<269388e30809270626mb265be4h24d0043256a650e6@mail.gmail.com>
	<48DE3C0C.6090906@miketeo.net>
Message-ID: <269388e30809270821r6972ca9fu1285ce24d90c1b00@mail.gmail.com>

Michael,

On Sat, Sep 27, 2008 at 2:58 PM, Michael Teo <rabbitmq.com at miketeo.net> wrote:
> Am I correct to say that when the realms have been dropped, RabbitMQ
> server implementation will not have any measures to limit the clients to
> be able to subscribe/publish to certain queues or exchanges ?

Not exactly. You can still use vhosts to implement ACLs. They are just
more coarse grained than realms are.

So on a protocol level there is no read/write differentiation - just a
simple access or deny on the vhost.

If you read the last post on that thread, I did discuss the
possibility of doing more fine grained ACLs in a fashion orthogonal to
the protocol.

HTH,

Ben



From holger at wizards.de  Sat Sep 27 19:35:43 2008
From: holger at wizards.de (=?ISO-8859-1?Q?Holger_Hoffst=E4tte?=)
Date: Sat, 27 Sep 2008 20:35:43 +0200
Subject: [rabbitmq-discuss] Huge latency in Linux, compared with Leopard
In-Reply-To: <48DDFB53.9030404@lshift.net>
References: <48DD1F21.1000104@imatix.com>	<19694142.post@talk.nabble.com>	<6c2563b20809262230m804f14cvc37e63fa529aad4a@mail.gmail.com>	<19699943.post@talk.nabble.com>
	<48DDFB53.9030404@lshift.net>
Message-ID: <48DE7CFF.6080804@wizards.de>


This is just too interesting to resist :)

Matthias Radestock wrote:
> Bogon Choi wrote:
>> I am using RabbitMQ Java library to talk with RabbitMQ Server.
> 
> I have just run a test on a one of our Debian Linux machines here - 
> kernel 2.6.24-1-686, "Intel(R) Xeon(TM) CPU 2.80GHz stepping 09". The 
> test uses the MulticastMain example that ships with the Java client to 
> send a 1k message every second and measure the latency:
> 
> sh runjava.sh com.rabbitmq.examples.MulticastMain -a -r 1 -s 1024 -i 5
> 
> Once the system has settled down I get minimum latencies of around 900 
> microseconds, and average latencies of about 1050 microseconds.
> 
> Do you see the same results on your system when running the same test?

Basically yes, though with a couple of tricks I have been able to get
minimum & average latency <300us, see below (best value was 266us!)

> There is the occasional blip that produces max latencies of around 40ms. 
> I always thought that was most likely due to the fact that the system is 
> doing other things - it's my desktop machine - but given that the figure 
> is the same that you are reporting perhaps that is not the case.

I thought so too but got the same 40ms blips on both a single-CPU machine
with other (mostly idle) processes, and my completely idle dual-core
laptop. Both are running 2.6.26.5, rabbit 1.4 and erlang 12.2.4.

Some findings:

- kernel settings matter, but not as much as one would think. My server
runs at 250 HZ & voluntary preemption, whereas the laptop runs with full
preemption at 300 HZ - however both exhibit very similar symptoms, and I
strongly suspect you'd see the same at 1000 HZ or with the RT kernel
(still need to try that one). Keep in mind that different distributions
have patched kernels to varying degrees (especially RedHat) and that the
relatively new CFQ CPU scheduler (new in 2.6.23 IIRC) had a lot of
performance oddities since its introduction. My understanding from
following the kernel list most of these should be fixed in the current
2.6.26 kernel, however the variance between the average (~1ms) and max.
latency (40ms) is IMHO just way too big for an occasional mis-schedule so
something else must be wrong. Besides we all get the same 40ms penalty so
that is a good sign that it's not the kernel scheduler per se.

- eliminate any JVM latency/threading oddities. Adjusting some VM flags
can make sure you don't get surprised by HotSpot dynamically recompiling
itself, the GC stoppping the world etc. You can actually see the native
method compiler kick in and the latencies decrease if you watch closely.
So to avoid any interference by the JVM I used JDK 6 and:

  -XX:CompileThreshold=10 -XX:+UseParNewGC -XX:+UseConcMarkSweepGC

This will (in order) compile methods to native code after 10 invocations,
use a second thread for collecting the young generation, and not
block-the-world when doing any major collections. You will see that the
latencies go down quite a bit after a few messages. It won't fix any
problems with Rabbit or the Erlang VM, but it reduces latency jitter on
the client side.

- I noticed that increasing the rate (-r) to 10 gave me more spikes, and
-r 100 ran with 40ms max latency all the time. This got *much* better
without -a (auto-ack) so something with the ack handling seemed to trigger
the behaviour.

- the fixed penalty for small packets reminded me of good old Mr. Nagle
who is not your friend when it comes to latency..and behold! Setting
TCP_NODELAY in both the Java client's SocketFrameHandler and the Rabbit
startup script (as documented in inet: {nodelay, Boolean}) did the trick,
even *with* auto-ack!

With this setup even my single-CPU box has only a handful of latency blips
 at -r 100 over a longer period of time, with a much smaller variance than
before (a very rare max. ~12k us) which might as well be my
cron/fetchmail/tomcat waking up. On the dual-core laptop the latencies are
all ~350/750/900 with the very occasional 1500us max. blip.

I have no idea how exactly the auto-ack works, but I suspect there is just
some bad interaction with auto-ack, beam's own internal process
scheduling, the tcp writer and possibly some inet options like e.g.
{delay_send, Boolean}.

Not sure if this helps but maybe it will give you some ideas for further
testing.

regards
Holger

(I really need to build me an -rt kernel.. :)



From matthias at lshift.net  Sat Sep 27 20:26:29 2008
From: matthias at lshift.net (Matthias Radestock)
Date: Sat, 27 Sep 2008 20:26:29 +0100
Subject: [rabbitmq-discuss] Huge latency in Linux, compared with Leopard
In-Reply-To: <48DE7CFF.6080804@wizards.de>
References: <48DD1F21.1000104@imatix.com>	<19694142.post@talk.nabble.com>	<6c2563b20809262230m804f14cvc37e63fa529aad4a@mail.gmail.com>	<19699943.post@talk.nabble.com>	<48DDFB53.9030404@lshift.net>
	<48DE7CFF.6080804@wizards.de>
Message-ID: <48DE88E5.1080207@lshift.net>

Holger,

Holger Hoffst?tte wrote:

> - the fixed penalty for small packets reminded me of good old Mr. Nagle
> who is not your friend when it comes to latency..and behold! Setting
> TCP_NODELAY in both the Java client's SocketFrameHandler and the Rabbit
> startup script (as documented in inet: {nodelay, Boolean}) did the trick,
> even *with* auto-ack!

Adding the line

     -kernel inet_default_listen_options '[{nodelay, true}]' \

to the options in the rabbitmq-server script does improve the results 
significantly.

When running the tests

   sh runjava.sh com.rabbitmq.examples.MulticastMain -r 100 -s 1024 -a

rather than getting min/avg/max latencies of 1500/25000/45000 
microseconds I now get 750/1000/1200 for 2 out of 3 results, though the 
third result is still off the scale.

Turning to the Java client and adding the line

           _socket.setTcpNoDelay(true);

to the SocketFrameHandler constructor reduced the figures to 450/500/750 
!! There's the occasional 1200 microsecond max, but that's nothing like 
the variation we saw before and is perfectly acceptable.

Thanks Holger for this excellent piece of investigative work.

So should we make TCP_NODELAY the default?


Matthias.



From bogon.choi at gmail.com  Sat Sep 27 20:44:51 2008
From: bogon.choi at gmail.com (Bogon Choi)
Date: Sat, 27 Sep 2008 12:44:51 -0700 (PDT)
Subject: [rabbitmq-discuss] Huge latency in Linux, compared with Leopard
In-Reply-To: <48DE7CFF.6080804@wizards.de>
References: <48DD1F21.1000104@imatix.com> <19694142.post@talk.nabble.com>
	<6c2563b20809262230m804f14cvc37e63fa529aad4a@mail.gmail.com>
	<19699943.post@talk.nabble.com> <48DDFB53.9030404@lshift.net>
	<48DE7CFF.6080804@wizards.de>
Message-ID: <19705862.post@talk.nabble.com>


I've found a very interesting result.

This latency problem is caused by creating a connection and closing it.

If you reuse a connection for next messages, the latency is almost same as
MulticastMain shows, which is hundreds us. But, if you reconnect each time
when you send a publish message, the result shows 40ms only for Linux.

Yes, I still don't know why Linux & Erlang is 10 times slower than Leopard &
Erlang's 4ms when we re-establish a connection before publishing a message.
As above two smart guys suggested, we need to dig into the kernel level. I
don't know all combinations of kernel parameter which affects to this
result. I need to struggle.



Holger Hoffst?tte-2 wrote:
> 
> 
> This is just too interesting to resist :)
> 
> Matthias Radestock wrote:
>> Bogon Choi wrote:
>>> I am using RabbitMQ Java library to talk with RabbitMQ Server.
>> 
>> I have just run a test on a one of our Debian Linux machines here - 
>> kernel 2.6.24-1-686, "Intel(R) Xeon(TM) CPU 2.80GHz stepping 09". The 
>> test uses the MulticastMain example that ships with the Java client to 
>> send a 1k message every second and measure the latency:
>> 
>> sh runjava.sh com.rabbitmq.examples.MulticastMain -a -r 1 -s 1024 -i 5
>> 
>> Once the system has settled down I get minimum latencies of around 900 
>> microseconds, and average latencies of about 1050 microseconds.
>> 
>> Do you see the same results on your system when running the same test?
> 
> Basically yes, though with a couple of tricks I have been able to get
> minimum & average latency <300us, see below (best value was 266us!)
> 
>> There is the occasional blip that produces max latencies of around 40ms. 
>> I always thought that was most likely due to the fact that the system is 
>> doing other things - it's my desktop machine - but given that the figure 
>> is the same that you are reporting perhaps that is not the case.
> 
> I thought so too but got the same 40ms blips on both a single-CPU machine
> with other (mostly idle) processes, and my completely idle dual-core
> laptop. Both are running 2.6.26.5, rabbit 1.4 and erlang 12.2.4.
> 
> Some findings:
> 
> - kernel settings matter, but not as much as one would think. My server
> runs at 250 HZ & voluntary preemption, whereas the laptop runs with full
> preemption at 300 HZ - however both exhibit very similar symptoms, and I
> strongly suspect you'd see the same at 1000 HZ or with the RT kernel
> (still need to try that one). Keep in mind that different distributions
> have patched kernels to varying degrees (especially RedHat) and that the
> relatively new CFQ CPU scheduler (new in 2.6.23 IIRC) had a lot of
> performance oddities since its introduction. My understanding from
> following the kernel list most of these should be fixed in the current
> 2.6.26 kernel, however the variance between the average (~1ms) and max.
> latency (40ms) is IMHO just way too big for an occasional mis-schedule so
> something else must be wrong. Besides we all get the same 40ms penalty so
> that is a good sign that it's not the kernel scheduler per se.
> 
> - eliminate any JVM latency/threading oddities. Adjusting some VM flags
> can make sure you don't get surprised by HotSpot dynamically recompiling
> itself, the GC stoppping the world etc. You can actually see the native
> method compiler kick in and the latencies decrease if you watch closely.
> So to avoid any interference by the JVM I used JDK 6 and:
> 
>   -XX:CompileThreshold=10 -XX:+UseParNewGC -XX:+UseConcMarkSweepGC
> 
> This will (in order) compile methods to native code after 10 invocations,
> use a second thread for collecting the young generation, and not
> block-the-world when doing any major collections. You will see that the
> latencies go down quite a bit after a few messages. It won't fix any
> problems with Rabbit or the Erlang VM, but it reduces latency jitter on
> the client side.
> 
> - I noticed that increasing the rate (-r) to 10 gave me more spikes, and
> -r 100 ran with 40ms max latency all the time. This got *much* better
> without -a (auto-ack) so something with the ack handling seemed to trigger
> the behaviour.
> 
> - the fixed penalty for small packets reminded me of good old Mr. Nagle
> who is not your friend when it comes to latency..and behold! Setting
> TCP_NODELAY in both the Java client's SocketFrameHandler and the Rabbit
> startup script (as documented in inet: {nodelay, Boolean}) did the trick,
> even *with* auto-ack!
> 
> With this setup even my single-CPU box has only a handful of latency blips
>  at -r 100 over a longer period of time, with a much smaller variance than
> before (a very rare max. ~12k us) which might as well be my
> cron/fetchmail/tomcat waking up. On the dual-core laptop the latencies are
> all ~350/750/900 with the very occasional 1500us max. blip.
> 
> I have no idea how exactly the auto-ack works, but I suspect there is just
> some bad interaction with auto-ack, beam's own internal process
> scheduling, the tcp writer and possibly some inet options like e.g.
> {delay_send, Boolean}.
> 
> Not sure if this helps but maybe it will give you some ideas for further
> testing.
> 
> regards
> Holger
> 
> (I really need to build me an -rt kernel.. :)
> 
> _______________________________________________
> rabbitmq-discuss mailing list
> rabbitmq-discuss at lists.rabbitmq.com
> http://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss
> 
> 

-- 
View this message in context: http://www.nabble.com/Re%3A-Huge-latency-in-Linux%2C-compared-with-Leopard-tp19693265p19705862.html
Sent from the RabbitMQ mailing list archive at Nabble.com.




From bogon.choi at gmail.com  Sat Sep 27 20:48:25 2008
From: bogon.choi at gmail.com (Bogon Choi)
Date: Sat, 27 Sep 2008 12:48:25 -0700 (PDT)
Subject: [rabbitmq-discuss] Huge latency in Linux, compared with Leopard
In-Reply-To: <48DE88E5.1080207@lshift.net>
References: <48DD1F21.1000104@imatix.com> <19694142.post@talk.nabble.com>
	<6c2563b20809262230m804f14cvc37e63fa529aad4a@mail.gmail.com>
	<19699943.post@talk.nabble.com> <48DDFB53.9030404@lshift.net>
	<48DE7CFF.6080804@wizards.de> <48DE88E5.1080207@lshift.net>
Message-ID: <19705896.post@talk.nabble.com>


Wow, two guys are great!



Matthias Radestock-2 wrote:
> 
> Holger,
> 
> Holger Hoffst?tte wrote:
> 
>> - the fixed penalty for small packets reminded me of good old Mr. Nagle
>> who is not your friend when it comes to latency..and behold! Setting
>> TCP_NODELAY in both the Java client's SocketFrameHandler and the Rabbit
>> startup script (as documented in inet: {nodelay, Boolean}) did the trick,
>> even *with* auto-ack!
> 
> Adding the line
> 
>      -kernel inet_default_listen_options '[{nodelay, true}]' \
> 
> to the options in the rabbitmq-server script does improve the results 
> significantly.
> 
> When running the tests
> 
>    sh runjava.sh com.rabbitmq.examples.MulticastMain -r 100 -s 1024 -a
> 
> rather than getting min/avg/max latencies of 1500/25000/45000 
> microseconds I now get 750/1000/1200 for 2 out of 3 results, though the 
> third result is still off the scale.
> 
> Turning to the Java client and adding the line
> 
>            _socket.setTcpNoDelay(true);
> 
> to the SocketFrameHandler constructor reduced the figures to 450/500/750 
> !! There's the occasional 1200 microsecond max, but that's nothing like 
> the variation we saw before and is perfectly acceptable.
> 
> Thanks Holger for this excellent piece of investigative work.
> 
> So should we make TCP_NODELAY the default?
> 
> 
> Matthias.
> 
> _______________________________________________
> rabbitmq-discuss mailing list
> rabbitmq-discuss at lists.rabbitmq.com
> http://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss
> 
> 

-- 
View this message in context: http://www.nabble.com/Re%3A-Huge-latency-in-Linux%2C-compared-with-Leopard-tp19693265p19705896.html
Sent from the RabbitMQ mailing list archive at Nabble.com.




From holger at wizards.de  Sat Sep 27 21:24:57 2008
From: holger at wizards.de (=?ISO-8859-1?Q?Holger_Hoffst=E4tte?=)
Date: Sat, 27 Sep 2008 22:24:57 +0200
Subject: [rabbitmq-discuss] Huge latency in Linux, compared with Leopard
In-Reply-To: <48DE88E5.1080207@lshift.net>
References: <48DD1F21.1000104@imatix.com>	<19694142.post@talk.nabble.com>	<6c2563b20809262230m804f14cvc37e63fa529aad4a@mail.gmail.com>	<19699943.post@talk.nabble.com>	<48DDFB53.9030404@lshift.net>
	<48DE7CFF.6080804@wizards.de> <48DE88E5.1080207@lshift.net>
Message-ID: <48DE9699.209@wizards.de>

Matthias Radestock wrote:
> Adding the line
> 
>     -kernel inet_default_listen_options '[{nodelay, true}]' \
> 
> to the options in the rabbitmq-server script does improve the results
> significantly.

Yay! Glad it helped.

> So should we make TCP_NODELAY the default?

That's difficult to decide, though IMHO it is probably the right thing to
do for most common scenarios today. Ironically after I had found the
problem I remembered that I had read something related on the Linux kernel
list, where someone from RedHat was complaining about 40ms latency. :)

Find the juicy details here:
http://marc.info/?l=linux-netdev&m=122091100407930&w=2

Other treads of interest may be:
http://www.nabble.com/slow-tcp-acks-on-loopback-device-td464386.html
http://www.nabble.com/What-happened-to-CONFIG_TCP_NAGLE_OFF--td7588964.html

I also found that the Windows stack automatically turns Nagle off for
loopback connections, and I assume other BSD-based OS (OS X) do as well.
This would explain the platform-specific observations.

Nagle makes sense in order to maximize bandwidth and prevent wasting
packets for small payloads (~couple bytes, as for telnet) that can be
packed together into one MTU. This may or may not make sense for Rabbit
but is dependent on the network link and the payloads. So turning it off
may be the right thing for localhost/LAN messaging where the cost of a
single packet is low, but not at all for large(r) payloads and high
bandwidth or slower tranports. I doubt that there are any people left who
want to run over modem or carrier pidgeon..

I am really looking forward to SCTP (as the lkml thread mentions) since so
many of the underlying assumptions behind TCP have changed these days that
no matter what the stacks try to do, it's always kind of wrong. Now it
only needs to become stable..

Holger



From bogon.choi at gmail.com  Sat Sep 27 21:38:42 2008
From: bogon.choi at gmail.com (Bogon Choi)
Date: Sat, 27 Sep 2008 13:38:42 -0700 (PDT)
Subject: [rabbitmq-discuss] Huge latency in Linux, compared with Leopard
In-Reply-To: <48DE9699.209@wizards.de>
References: <48DD1F21.1000104@imatix.com> <19694142.post@talk.nabble.com>
	<6c2563b20809262230m804f14cvc37e63fa529aad4a@mail.gmail.com>
	<19699943.post@talk.nabble.com> <48DDFB53.9030404@lshift.net>
	<48DE7CFF.6080804@wizards.de> <48DE88E5.1080207@lshift.net>
	<48DE9699.209@wizards.de>
Message-ID: <19706240.post@talk.nabble.com>


I've learned a lot! I appreciate it.



Holger Hoffst?tte-2 wrote:
> 
> Matthias Radestock wrote:
>> Adding the line
>> 
>>     -kernel inet_default_listen_options '[{nodelay, true}]' \
>> 
>> to the options in the rabbitmq-server script does improve the results
>> significantly.
> 
> Yay! Glad it helped.
> 
>> So should we make TCP_NODELAY the default?
> 
> That's difficult to decide, though IMHO it is probably the right thing to
> do for most common scenarios today. Ironically after I had found the
> problem I remembered that I had read something related on the Linux kernel
> list, where someone from RedHat was complaining about 40ms latency. :)
> 
> Find the juicy details here:
> http://marc.info/?l=linux-netdev&m=122091100407930&w=2
> 
> Other treads of interest may be:
> http://www.nabble.com/slow-tcp-acks-on-loopback-device-td464386.html
> http://www.nabble.com/What-happened-to-CONFIG_TCP_NAGLE_OFF--td7588964.html
> 
> I also found that the Windows stack automatically turns Nagle off for
> loopback connections, and I assume other BSD-based OS (OS X) do as well.
> This would explain the platform-specific observations.
> 
> Nagle makes sense in order to maximize bandwidth and prevent wasting
> packets for small payloads (~couple bytes, as for telnet) that can be
> packed together into one MTU. This may or may not make sense for Rabbit
> but is dependent on the network link and the payloads. So turning it off
> may be the right thing for localhost/LAN messaging where the cost of a
> single packet is low, but not at all for large(r) payloads and high
> bandwidth or slower tranports. I doubt that there are any people left who
> want to run over modem or carrier pidgeon..
> 
> I am really looking forward to SCTP (as the lkml thread mentions) since so
> many of the underlying assumptions behind TCP have changed these days that
> no matter what the stacks try to do, it's always kind of wrong. Now it
> only needs to become stable..
> 
> Holger
> 
> _______________________________________________
> rabbitmq-discuss mailing list
> rabbitmq-discuss at lists.rabbitmq.com
> http://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss
> 
> 

-- 
View this message in context: http://www.nabble.com/Re%3A-Huge-latency-in-Linux%2C-compared-with-Leopard-tp19693265p19706240.html
Sent from the RabbitMQ mailing list archive at Nabble.com.




From 0x6e6562 at gmail.com  Sat Sep 27 22:21:53 2008
From: 0x6e6562 at gmail.com (Ben Hood)
Date: Sat, 27 Sep 2008 22:21:53 +0100
Subject: [rabbitmq-discuss] Huge latency in Linux, compared with Leopard
In-Reply-To: <48DE9699.209@wizards.de>
References: <48DD1F21.1000104@imatix.com> <19694142.post@talk.nabble.com>
	<6c2563b20809262230m804f14cvc37e63fa529aad4a@mail.gmail.com>
	<19699943.post@talk.nabble.com> <48DDFB53.9030404@lshift.net>
	<48DE7CFF.6080804@wizards.de> <48DE88E5.1080207@lshift.net>
	<48DE9699.209@wizards.de>
Message-ID: <269388e30809271421i4749f5e0k508fc5b82ecf6aca@mail.gmail.com>

Holger,

On Sat, Sep 27, 2008 at 9:24 PM, Holger Hoffst?tte <holger at wizards.de> wrote:
> Matthias Radestock wrote:
>> Adding the line
>>
>>     -kernel inet_default_listen_options '[{nodelay, true}]' \
>>
>> to the options in the rabbitmq-server script does improve the results
>> significantly.

You're the man!

> Nagle makes sense in order to maximize bandwidth and prevent wasting
> packets for small payloads (~couple bytes, as for telnet) that can be
> packed together into one MTU. This may or may not make sense for Rabbit
> but is dependent on the network link and the payloads. So turning it off
> may be the right thing for localhost/LAN messaging where the cost of a
> single packet is low, but not at all for large(r) payloads and high
> bandwidth or slower tranports. I doubt that there are any people left who
> want to run over modem or carrier pidgeon..

Of which there are a few:
http://www.blug.linux.no/rfc1149/vegard_bilder/index.html

Ben



From rabbitmq-discuss_efine at usa.net  Sat Sep 27 22:42:52 2008
From: rabbitmq-discuss_efine at usa.net (Edwin Fine)
Date: Sat, 27 Sep 2008 17:42:52 -0400
Subject: [rabbitmq-discuss] Huge latency in Linux, compared with Leopard
In-Reply-To: <269388e30809271421i4749f5e0k508fc5b82ecf6aca@mail.gmail.com>
References: <48DD1F21.1000104@imatix.com> <19694142.post@talk.nabble.com>
	<6c2563b20809262230m804f14cvc37e63fa529aad4a@mail.gmail.com>
	<19699943.post@talk.nabble.com> <48DDFB53.9030404@lshift.net>
	<48DE7CFF.6080804@wizards.de> <48DE88E5.1080207@lshift.net>
	<48DE9699.209@wizards.de>
	<269388e30809271421i4749f5e0k508fc5b82ecf6aca@mail.gmail.com>
Message-ID: <6c2563b20809271442i5322480w7db6b5830983428c@mail.gmail.com>

>
> > bandwidth or slower tranports. I doubt that there are any people left who
> > want to run over modem or carrier pidgeon..
>
> Of which there are a few:
> http://www.blug.linux.no/rfc1149/vegard_bilder/index.html
>

Ben, that's one of the funniest things I've read in ages! I wonder how many
vendors I can intimidate by asking if they support RFC1149 transmission?
Say, does RabbitMQ support it?

I especially liked the photo of the audit trail, although it looked more
like a dropped packet. Thanks! I'm going to start working on an Erlang
RFC1149 implementation (CPIP)... now where's that damn birdseed...


>
> Ben
>
> _______________________________________________
> rabbitmq-discuss mailing list
> rabbitmq-discuss at lists.rabbitmq.com
> http://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20080927/a2511d4d/attachment.htm 

From 0x6e6562 at gmail.com  Sat Sep 27 23:23:18 2008
From: 0x6e6562 at gmail.com (Ben Hood)
Date: Sat, 27 Sep 2008 23:23:18 +0100
Subject: [rabbitmq-discuss] Too many processes
Message-ID: <269388e30809271523s609cdba7s3f75446083c6085e@mail.gmail.com>

Hello list,

Recently, a user reported to me personally a problem of having more
Rabbit than Sainsbury's (see point 104 in
http://linuxmafia.com/pub/humour/uk-us-translations).

The issue was that the system default maximum number of Erlang
processes was execeeded (see error log below).

By default, this is set to 32767, which, when you start many channels
in Rabbit, will eventually be exceeded.

The solution is to set the maximum with the +P flag to the Erlang runtime.

I've turned this into a FAQ here:
https://dev.rabbitmq.com/wiki/FrequentlyAskedQuestions#section_10

HTH,

Ben

---------- Forwarded message ----------
From: Roger Rabbit <dev_null at rabbitmq.com>
Date: Fri, Sep 26, 2008 at 1:10 AM
Subject: errors
To: Ben Hood <0x6e6562 at gmail.com>


Started seeing a few errors since we switched to using one channel per consumer:

=ERROR REPORT==== 25-Sep-2008::18:31:43 ===
Too many processes

=ERROR REPORT==== 25-Sep-2008::18:31:44 ===
Error in process <0.6075.24> on node 'rabbit at XXX' with exit
value: {system_limit,[{erlang,spawn_link,[erlang,apply,[#Fun<buffe
ring_proxy.0.93458386>,[]]]},{erlang,spawn_link,1},{rabbit_framing_channel,'-start_link/2-fun-0-',2}]}

=ERROR REPORT==== 25-Sep-2008::18:31:45 ===
connection <0.6414.22> (running), channel 1129 - error:
{system_limit,[{erlang,spawn_link,
                      [erlang,apply,[#Fun<buffering_proxy.0.93458386>,[]]]},
              {erlang,spawn_link,1},
              {rabbit_framing_channel,'-start_link/2-fun-0-',2}]}

=WARNING REPORT==== 25-Sep-2008::18:31:46 ===
Non-AMQP exit reason '{system_limit,
                         [{erlang,spawn_link,
                              [erlang,apply,
                               [#Fun<buffering_proxy.0.93458386>,[]]]},
                          {erlang,spawn_link,1},
                          {rabbit_framing_channel,'-start_link/2-fun-0-',2}]}'



From 0x6e6562 at gmail.com  Sat Sep 27 23:28:50 2008
From: 0x6e6562 at gmail.com (Ben Hood)
Date: Sat, 27 Sep 2008 23:28:50 +0100
Subject: [rabbitmq-discuss] Huge latency in Linux, compared with Leopard
In-Reply-To: <6c2563b20809271442i5322480w7db6b5830983428c@mail.gmail.com>
References: <48DD1F21.1000104@imatix.com> <19694142.post@talk.nabble.com>
	<6c2563b20809262230m804f14cvc37e63fa529aad4a@mail.gmail.com>
	<19699943.post@talk.nabble.com> <48DDFB53.9030404@lshift.net>
	<48DE7CFF.6080804@wizards.de> <48DE88E5.1080207@lshift.net>
	<48DE9699.209@wizards.de>
	<269388e30809271421i4749f5e0k508fc5b82ecf6aca@mail.gmail.com>
	<6c2563b20809271442i5322480w7db6b5830983428c@mail.gmail.com>
Message-ID: <269388e30809271528y3c1f67bfj1272c7582eb202c4@mail.gmail.com>

Edwin,

On Sat, Sep 27, 2008 at 10:42 PM, Edwin Fine
<rabbitmq-discuss_efine at usa.net> wrote:
> Ben, that's one of the funniest things I've read in ages!

Glad you liked it. My favorite is number 32: network congestion :-)

> I wonder how many
> vendors I can intimidate by asking if they support RFC1149 transmission?
> Say, does RabbitMQ support it?

Well, one of the design goals of AMQP was to layer the transport in a
way so that the execution model was independent of it - so you can
send AMQP over TCP, UDP, SCTP and, of course, RFC1149.

Ben



From rabbitmq-discuss_efine at usa.net  Sat Sep 27 23:34:25 2008
From: rabbitmq-discuss_efine at usa.net (Edwin Fine)
Date: Sat, 27 Sep 2008 18:34:25 -0400
Subject: [rabbitmq-discuss] Too many processes
In-Reply-To: <269388e30809271523s609cdba7s3f75446083c6085e@mail.gmail.com>
References: <269388e30809271523s609cdba7s3f75446083c6085e@mail.gmail.com>
Message-ID: <6c2563b20809271534v705153b1v6d60f6461a1c72cb@mail.gmail.com>

Ben,

Not sure if this is of concern to you, but I get this from my browser:

dev.rabbitmq.com uses an invalid security certificate.
The certificate is only valid for *.lshift.net.
(Error code: ssl_error_bad_cert_domain)

Ed

On Sat, Sep 27, 2008 at 6:23 PM, Ben Hood <0x6e6562 at gmail.com> wrote:

> Hello list,
>
> Recently, a user reported to me personally a problem of having more
> Rabbit than Sainsbury's (see point 104 in
> http://linuxmafia.com/pub/humour/uk-us-translations).
>
> The issue was that the system default maximum number of Erlang
> processes was execeeded (see error log below).
>
> By default, this is set to 32767, which, when you start many channels
> in Rabbit, will eventually be exceeded.
>
> The solution is to set the maximum with the +P flag to the Erlang runtime.
>
> I've turned this into a FAQ here:
> https://dev.rabbitmq.com/wiki/FrequentlyAskedQuestions#section_10
>
> HTH,
>
> Ben
>
> ---------- Forwarded message ----------
> From: Roger Rabbit <dev_null at rabbitmq.com>
> Date: Fri, Sep 26, 2008 at 1:10 AM
> Subject: errors
> To: Ben Hood <0x6e6562 at gmail.com>
>
>
> Started seeing a few errors since we switched to using one channel per
> consumer:
>
> =ERROR REPORT==== 25-Sep-2008::18:31:43 ===
> Too many processes
>
> =ERROR REPORT==== 25-Sep-2008::18:31:44 ===
> Error in process <0.6075.24> on node 'rabbit at XXX' with exit
> value: {system_limit,[{erlang,spawn_link,[erlang,apply,[#Fun<buffe
>
> ring_proxy.0.93458386>,[]]]},{erlang,spawn_link,1},{rabbit_framing_channel,'-start_link/2-fun-0-',2}]}
>
> =ERROR REPORT==== 25-Sep-2008::18:31:45 ===
> connection <0.6414.22> (running), channel 1129 - error:
> {system_limit,[{erlang,spawn_link,
>                      [erlang,apply,[#Fun<buffering_proxy.0.93458386>,[]]]},
>              {erlang,spawn_link,1},
>              {rabbit_framing_channel,'-start_link/2-fun-0-',2}]}
>
> =WARNING REPORT==== 25-Sep-2008::18:31:46 ===
> Non-AMQP exit reason '{system_limit,
>                         [{erlang,spawn_link,
>                              [erlang,apply,
>                               [#Fun<buffering_proxy.0.93458386>,[]]]},
>                          {erlang,spawn_link,1},
>
>  {rabbit_framing_channel,'-start_link/2-fun-0-',2}]}'
>
> _______________________________________________
> rabbitmq-discuss mailing list
> rabbitmq-discuss at lists.rabbitmq.com
> http://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20080927/5281164a/attachment.htm 

From holger at wizards.de  Sun Sep 28 00:00:01 2008
From: holger at wizards.de (=?ISO-8859-1?Q?Holger_Hoffst=E4tte?=)
Date: Sun, 28 Sep 2008 01:00:01 +0200
Subject: [rabbitmq-discuss] Huge latency in Linux, compared with Leopard
In-Reply-To: <48DE9699.209@wizards.de>
References: <48DD1F21.1000104@imatix.com>	<19694142.post@talk.nabble.com>	<6c2563b20809262230m804f14cvc37e63fa529aad4a@mail.gmail.com>	<19699943.post@talk.nabble.com>	<48DDFB53.9030404@lshift.net>
	<48DE7CFF.6080804@wizards.de> <48DE88E5.1080207@lshift.net>
	<48DE9699.209@wizards.de>
Message-ID: <48DEBAF1.7020608@wizards.de>


Just one more addendum -

for anybody who wants to understand the underlying issue and differences
between BSD-based TCP stacks and Linux I recommend the following article:

http://articles.techrepublic.com.com/5100-10878_11-1050878.html

It explains the details in plain English so you don't really have to be a
kernel guru or read the whole lkml thread.

KTHXBYE,
Holger




From 0x6e6562 at gmail.com  Sun Sep 28 00:06:47 2008
From: 0x6e6562 at gmail.com (Ben Hood)
Date: Sun, 28 Sep 2008 00:06:47 +0100
Subject: [rabbitmq-discuss] Too many processes
In-Reply-To: <6c2563b20809271534v705153b1v6d60f6461a1c72cb@mail.gmail.com>
References: <269388e30809271523s609cdba7s3f75446083c6085e@mail.gmail.com>
	<6c2563b20809271534v705153b1v6d60f6461a1c72cb@mail.gmail.com>
Message-ID: <269388e30809271606u55213bf8r8a082080ea64609f@mail.gmail.com>

Edwin,

On Sat, Sep 27, 2008 at 11:34 PM, Edwin Fine
<rabbitmq-discuss_efine at usa.net> wrote:
> Not sure if this is of concern to you, but I get this from my browser:
>
> dev.rabbitmq.com uses an invalid security certificate.
> The certificate is only valid for *.lshift.net.
> (Error code: ssl_error_bad_cert_domain)

This is a valid point and is something we're aware of, but haven't
been able to fix yet.

Will happen sometime soon, I hope.

Ben



From cctrieloff at redhat.com  Sun Sep 28 02:19:59 2008
From: cctrieloff at redhat.com (Carl Trieloff)
Date: Sat, 27 Sep 2008 21:19:59 -0400
Subject: [rabbitmq-discuss] Huge latency in Linux, compared with Leopard
In-Reply-To: <48DE7CFF.6080804@wizards.de>
References: <48DD1F21.1000104@imatix.com>	<19694142.post@talk.nabble.com>	<6c2563b20809262230m804f14cvc37e63fa529aad4a@mail.gmail.com>	<19699943.post@talk.nabble.com>	<48DDFB53.9030404@lshift.net>
	<48DE7CFF.6080804@wizards.de>
Message-ID: <48DEDBBF.7080804@redhat.com>


> - kernel settings matter, but not as much as one would think. My server
> runs at 250 HZ & voluntary preemption, whereas the laptop runs with full
> preemption at 300 HZ - however both exhibit very similar symptoms, and I
> strongly suspect you'd see the same at 1000 HZ or with the RT kernel
> (still need to try that one). Keep in mind that different distributions
> have patched kernels to varying degrees (especially RedHat) and that the
> relatively new CFQ CPU scheduler (new in 2.6.23 IIRC) had a lot of
> performance oddities since its introduction. My understanding from
> following the kernel list most of these should be fixed in the current
> 2.6.26 kernel, however the variance between the average (~1ms) and max.
> latency (40ms) is IMHO just way too big for an occasional mis-schedule so
> something else must be wrong. Besides we all get the same 40ms penalty so
> that is a good sign that it's not the kernel scheduler per se.

I'll add one note, the Red Hat MRG RT kernel gives you a max scheduler 
latency of ~20us. The
Linux TCP stack can run with max latency sub 1ms with both 2.6.18 RHEL5 
and MRG RT
2.6.24. most of your issues are most likely nagle.

Carl.



From bogon.choi at gmail.com  Sun Sep 28 03:46:10 2008
From: bogon.choi at gmail.com (Bogon Choi)
Date: Sat, 27 Sep 2008 19:46:10 -0700 (PDT)
Subject: [rabbitmq-discuss] Huge latency in Linux, compared with Leopard
In-Reply-To: <269388e30809271421i4749f5e0k508fc5b82ecf6aca@mail.gmail.com>
References: <48DD1F21.1000104@imatix.com> <19694142.post@talk.nabble.com>
	<6c2563b20809262230m804f14cvc37e63fa529aad4a@mail.gmail.com>
	<19699943.post@talk.nabble.com> <48DDFB53.9030404@lshift.net>
	<48DE7CFF.6080804@wizards.de> <48DE88E5.1080207@lshift.net>
	<48DE9699.209@wizards.de>
	<269388e30809271421i4749f5e0k508fc5b82ecf6aca@mail.gmail.com>
Message-ID: <19708384.post@talk.nabble.com>


Awesome!



Ben Hood wrote:
> 
> Holger,
> 
> On Sat, Sep 27, 2008 at 9:24 PM, Holger Hoffst?tte <holger at wizards.de>
> wrote:
>> Matthias Radestock wrote:
>>> Adding the line
>>>
>>>     -kernel inet_default_listen_options '[{nodelay, true}]' \
>>>
>>> to the options in the rabbitmq-server script does improve the results
>>> significantly.
> 
> You're the man!
> 
>> Nagle makes sense in order to maximize bandwidth and prevent wasting
>> packets for small payloads (~couple bytes, as for telnet) that can be
>> packed together into one MTU. This may or may not make sense for Rabbit
>> but is dependent on the network link and the payloads. So turning it off
>> may be the right thing for localhost/LAN messaging where the cost of a
>> single packet is low, but not at all for large(r) payloads and high
>> bandwidth or slower tranports. I doubt that there are any people left who
>> want to run over modem or carrier pidgeon..
> 
> Of which there are a few:
> http://www.blug.linux.no/rfc1149/vegard_bilder/index.html
> 
> Ben
> 
> _______________________________________________
> rabbitmq-discuss mailing list
> rabbitmq-discuss at lists.rabbitmq.com
> http://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss
> 
> 

-- 
View this message in context: http://www.nabble.com/Re%3A-Huge-latency-in-Linux%2C-compared-with-Leopard-tp19693265p19708384.html
Sent from the RabbitMQ mailing list archive at Nabble.com.




From matthias at lshift.net  Sun Sep 28 10:57:44 2008
From: matthias at lshift.net (Matthias Radestock)
Date: Sun, 28 Sep 2008 10:57:44 +0100
Subject: [rabbitmq-discuss] Huge latency in Linux, compared with Leopard
In-Reply-To: <48DE9699.209@wizards.de>
References: <48DD1F21.1000104@imatix.com>	<19694142.post@talk.nabble.com>	<6c2563b20809262230m804f14cvc37e63fa529aad4a@mail.gmail.com>	<19699943.post@talk.nabble.com>	<48DDFB53.9030404@lshift.net>	<48DE7CFF.6080804@wizards.de>
	<48DE88E5.1080207@lshift.net> <48DE9699.209@wizards.de>
Message-ID: <48DF5518.4060406@lshift.net>

Holger Hoffst?tte wrote:
> Matthias Radestock wrote:
>> Adding the line
>>
>>     -kernel inet_default_listen_options '[{nodelay, true}]' \
>>
>> to the options in the rabbitmq-server script does improve the results
>> significantly.
> 
> Yay! Glad it helped.

Actually, the above isn't quite right, at least for the Unix 
rabbitmq-server script, since that already sets some options in 
ERL_ARGS. So what one needs to do is extend that option list, i.e. 
change the line

ERL_ARGS="+K true +A30 -kernel inet_default_listen_options 
[{sndbuf,16384},{recbuf,4096}]"

to

ERL_ARGS="+K true +A30 -kernel inet_default_listen_options 
[{nodelay,true},{sndbuf,16384},{recbuf,4096}]"

  >> So should we make TCP_NODELAY the default?
> 
> That's difficult to decide, though IMHO it is probably the right thing to
> do for most common scenarios today.

Ok. I have filed some bugs to get this done in the next release.


Matthias.



From 0x6e6562 at gmail.com  Sun Sep 28 15:24:07 2008
From: 0x6e6562 at gmail.com (Ben Hood)
Date: Sun, 28 Sep 2008 15:24:07 +0100
Subject: [rabbitmq-discuss] Huge latency in Linux, compared with Leopard
In-Reply-To: <48DF5518.4060406@lshift.net>
References: <48DD1F21.1000104@imatix.com> <19694142.post@talk.nabble.com>
	<6c2563b20809262230m804f14cvc37e63fa529aad4a@mail.gmail.com>
	<19699943.post@talk.nabble.com> <48DDFB53.9030404@lshift.net>
	<48DE7CFF.6080804@wizards.de> <48DE88E5.1080207@lshift.net>
	<48DE9699.209@wizards.de> <48DF5518.4060406@lshift.net>
Message-ID: <269388e30809280724w4eb8c9fg5e1ec7f0f1e4c3e3@mail.gmail.com>

Holger,

On Sun, Sep 28, 2008 at 10:57 AM, Matthias Radestock
<matthias at lshift.net> wrote:
> Ok. I have filed some bugs to get this done in the next release.

The changes have been merged into the default branches of the server
and java client, so this will be in the new release when that is made.

Ben



From anthony-rabbitmq at hogan.id.au  Mon Sep 29 08:26:07 2008
From: anthony-rabbitmq at hogan.id.au (Anthony)
Date: Mon, 29 Sep 2008 17:26:07 +1000
Subject: [rabbitmq-discuss] Fwd:  Access control documentation
In-Reply-To: <1bf8be120809290021u30347359xaf462a3ce1957751@mail.gmail.com>
References: <1bf8be120809160043o297d1b76gf072641b142416c7@mail.gmail.com>
	<269388e30809160110v1a64b3d0we8780c4ad485ac89@mail.gmail.com>
	<1bf8be120809162232s37b82cecs64e20269667dad6f@mail.gmail.com>
	<269388e30809170019n7093a21ft8d983bf809614ca1@mail.gmail.com>
	<269388e30809190453y269af1derf9bbc7dff786b1e6@mail.gmail.com>
	<1bf8be120809290021u30347359xaf462a3ce1957751@mail.gmail.com>
Message-ID: <1bf8be120809290026p1de7881anbd5b2d3e33290de0@mail.gmail.com>

(Whoops.. sent this from the wrong address initially)

Hi all..

After Ben suggested that some discussion was perhaps warranted on this
task, I went away and spoke to my colleagues about our experiences and
such. I wrote up the following and ran it past them.. Yes, I approach
this very much from the perspective of someone who doesn't code
regularly, but is often the one installing/configuring/maintaining
stuff based upon supplied requirements. This isn't intended to belt
anyone over the head or kick up a stink, but to demonstrate there are
some real world needs for finer grained ACLs. Hopefully this inspires some
thought/commentary on what an ACL system might include.


AMQP, and specifically the implementation through RabbitMQ, provides a
flexible, fast, reliable link between multiple front and backend
systems reducing the complexity and number of connections the front
end software needs to make. This is a good thing, and already the
developers with whom I work have noticed significant speed
improvements in the tests they've done.

Moving forward, however, it would seem that without some sort of finer
grained security, the system places far too much reliance on the front
end being in a secure environment and places more onus on the back end
to check every request. Not every client is going to be sitting on a
server under one's complete control, feeding into a "2.0" app with
which a user then interacts. In some cases for example a remote site
may have an Rabbit server as a concentrator, clustered in, and clients
at this remote site may be either connecting to this remote site's
server, or potentially to a central fallback server. Of course, if a
remote site has a server clustered in, then that site would need a
copy of the Erlang cookie which would grant access to "The channel"
between the sites, but it would be a little easier to secure a server
machine than each client machine.

An "all or nothing" approach here places a LOT more onus on making
sure each site is "safe" and also means that should something go
wrong, integrity of data going over the common channel could be
compromised.

Take, for example, financial market information streams - information
multicasts from a service provider

* Not every subscribing front-end client will need or be authorised to
receive every stream put out - but often there will be overlap between
these streams in terms of client need
* Rarely in this one-to-many or fixed group-to-many, will the "many"
need any rights above "read" on these informational streams, and
indeed should not have any chance of altering or injecting false data
into these streams
* It is extremely unlikely that a simple information subscriber should
have privileges to publish their own arbitrary streams

Let's look at the other side of a financial market - action requests
to a service provider

* Not everyone will have something to buy or sell
* Not everyone will be authorised to use every market (they might have
privileges to buy and sell Widget Futures, but not standard Widget
manufacturer stocks)
* Not everyone will be authorised to provide services to the bus

Now, arguably, signing messages with private keys for verification
with known public keys by each end could prove
authenticity/authorisation - but this seems to reduce overhead in the
AMQP layer and multiply it many times - for every message - at the
front and back end layers. Arguably speaking if a person is identified
by an access credential at their point of entry to the AMQP bus, and
we know what they're allowed to do at this point, then it should be
enforced at this point (not to say that for high value transactions,
some additional checking shouldn't be done but that an "open pipe" to
multiple sites for them to have to spend time checking keys is perhaps
something best avoided).

Coming from using apache httpd, when I think of virtual hosts, I know
that resources can be mapped in from other places - indeed shared
between vhosts (like common CGI script folders for example). The AMQP
model of a vhost allows for no "common elements" between virtual hosts
unless the source of those common elements or some intermediate
service re-feeds those streams into the individual vhosts (needing a
connection for the service and client vhosts).. and then you start to
get away from "multicast" and get into a vhost per individual group of
needs.. Vhosts seem exclusively focussed on sharing infrastructure
between businesses for wholly separate purposes - especially given
this lack of ability to publish data to multiple vhosts and that one
must open multiple connections to access multiple vhosts concurrently
(increasing connecting application complexity).



From Andrius.Norkaitis at oryo.lt  Mon Sep 29 16:35:04 2008
From: Andrius.Norkaitis at oryo.lt (Andrius Norkaitis)
Date: Mon, 29 Sep 2008 18:35:04 +0300
Subject: [rabbitmq-discuss] wct + pubsub
In-Reply-To: <167204d20809260358r1abd12dfh7dbe643545070f6d@mail.gmail.com>
References: <!&!AAAAAAAAAAAYAAAAAAAAAKmCSsECxmlLkxuEpydKKTLCgAAAEAAAAEBJmioGMrhGre3/WoUXPwsBAAAAAA==@oryo.lt>	
	<167204d20809240327ma3e05a0v36d66095c9cde589@mail.gmail.com>	
	<!&!AAAAAAAAAAAYAAAAAAAAAKmCSsECxmlLkxuEpydKKTLCgAAAEAAAAO9D0uele3VHhAyW3r4QhgwBAAAAAA==@oryo.lt>
	<167204d20809260358r1abd12dfh7dbe643545070f6d@mail.gmail.com>
Message-ID: <!&!AAAAAAAAAAAYAAAAAAAAAKmCSsECxmlLkxuEpydKKTLCgAAAEAAAAM3iQQAn2SFEptb2QrTqw84BAAAAAA==@oryo.lt>


>1) Are you able to do pubsub without using WCF, i.e. using C# on its own?
I think yes. I tested it in command prompt using sendstring and logtail
examples:

1. Started 3 instances of CMD
2. In 1 and 2 instates of cmd typed:
logtail dev.rabbitmq.com:5672 sub topic /eTaksi/Hello
3. In instance 3 typed:
sendstring dev.rabbitmq.com:5672 sub topic / eTaksi/Hello "testas7"

Both instances of logtail program got the messeage.

2) What kind of pubsub do you want to do?

Like I said I need many-to-many pubsub:
>>> Publishers would publish orders and they must be delivered to all 
>>> Subscribers which are online and matches  some criterions (etc. 
>>> city,
>> order
>>> type).

Of course I can start using plain rabbitmq c# client, but WCF could add such
benefits as serialization, simpler service model etc.

>> In sendstring example there are this line of code:
>>
>> ch.ExchangeDeclare(ticket, exchange, exchangeType);
>>
>> which specifies exchangeType (I specify topic type in my case).
>> In RabbitMQ.ServiceModel implementation there is no such code so direct
>> exchange is used (see RabbitMQInputChannel.cs and
RabbitMQOutputChannel.cs)?

>This code will use whatever exchange is at the endpoint which you need
>to have declared beforehand.

OK. I use the same exchange as I declared in logtail example. Even I left
these instances running to see if massages are coming.

>If you could send us some sample code of what you want to achieve then
>it will be easier for us to help you efficiently.  Would that be
>possible please?

I updated sample of "ConfigDemo" (changed service method to "OneWay" - we
just need to publish and if not specified, replay channel with direct
exchange is created and endpoint address).
I uploaded it to http://rapidshare.de/files/40577065/ConfigDemo.zip.html

1. Start two instances of server.
2. Start client.

If you're still running logtail, then you would see the SOP messages in all
instances, but only one "Hello Bob" message is displayed in Server window.
Sometimes in the first instance, sometimes in another...

Andrius




From 0x6e6562 at gmail.com  Mon Sep 29 18:24:05 2008
From: 0x6e6562 at gmail.com (Ben Hood)
Date: Mon, 29 Sep 2008 18:24:05 +0100
Subject: [rabbitmq-discuss] Fwd: Access control documentation
In-Reply-To: <1bf8be120809290026p1de7881anbd5b2d3e33290de0@mail.gmail.com>
References: <1bf8be120809160043o297d1b76gf072641b142416c7@mail.gmail.com>
	<269388e30809160110v1a64b3d0we8780c4ad485ac89@mail.gmail.com>
	<1bf8be120809162232s37b82cecs64e20269667dad6f@mail.gmail.com>
	<269388e30809170019n7093a21ft8d983bf809614ca1@mail.gmail.com>
	<269388e30809190453y269af1derf9bbc7dff786b1e6@mail.gmail.com>
	<1bf8be120809290021u30347359xaf462a3ce1957751@mail.gmail.com>
	<1bf8be120809290026p1de7881anbd5b2d3e33290de0@mail.gmail.com>
Message-ID: <269388e30809291024h3fae17c3u3e37df002a548f89@mail.gmail.com>

Anthony,

On Mon, Sep 29, 2008 at 8:26 AM, Anthony <anthony-rabbitmq at hogan.id.au> wrote:

> After Ben suggested that some discussion was perhaps warranted on this
> task, I went away and spoke to my colleagues about our experiences and
> such. I wrote up the following and ran it past them.. Yes, I approach
> this very much from the perspective of someone who doesn't code
> regularly, but is often the one installing/configuring/maintaining
> stuff based upon supplied requirements. This isn't intended to belt
> anyone over the head or kick up a stink, but to demonstrate there are
> some real world needs for finer grained ACLs. Hopefully this inspires some
> thought/commentary on what an ACL system might include.

I think there is a lot of merit in the use cases you have described in
this mail.

Please understand that realms were not discarded because people didn't
want fine grained ACLs per se, just that they not particularly well
specified and hence very difficult to implement properly.

Certainly we would *like* to have some more fine grained AC that what
we currenly have. Something capability based would probably be nicer
than plain jane ACLs, but this would be subject to requirements and
design. In plain English, this could potentially go into the roadmap
at some stage.

If you would like to improve the chances of doing this, you could
start a community based initiative which would entail documenting use
cases and identifying potential solutions, eventually cutting some
code.

Otherwise you're going to have to be very persuasive to get this
bumped up the list of priorities :-)

Does anybody else have any views on access control?

HTH,

Ben



From rabbitmq-discuss_efine at usa.net  Mon Sep 29 20:37:30 2008
From: rabbitmq-discuss_efine at usa.net (Edwin Fine)
Date: Mon, 29 Sep 2008 15:37:30 -0400
Subject: [rabbitmq-discuss] Fwd: Access control documentation
In-Reply-To: <269388e30809291024h3fae17c3u3e37df002a548f89@mail.gmail.com>
References: <1bf8be120809160043o297d1b76gf072641b142416c7@mail.gmail.com>
	<269388e30809160110v1a64b3d0we8780c4ad485ac89@mail.gmail.com>
	<1bf8be120809162232s37b82cecs64e20269667dad6f@mail.gmail.com>
	<269388e30809170019n7093a21ft8d983bf809614ca1@mail.gmail.com>
	<269388e30809190453y269af1derf9bbc7dff786b1e6@mail.gmail.com>
	<1bf8be120809290021u30347359xaf462a3ce1957751@mail.gmail.com>
	<1bf8be120809290026p1de7881anbd5b2d3e33290de0@mail.gmail.com>
	<269388e30809291024h3fae17c3u3e37df002a548f89@mail.gmail.com>
Message-ID: <6c2563b20809291237t2aedc2a0t70dd428c296c7ac0@mail.gmail.com>

Ben,

I wondered how WMQ does it, and the answer is interesting. I'm not saying
WMQ is the be-all and end-all of everything, only that it's a widely used
and mature commercial product and it can't hurt to at least look at how it
does it.

I copied this from
http://publib.boulder.ibm.com/infocenter/wmqv6/v6r0/index.jsp?topic=/com.ibm.mq.amqzag.doc/fa12780_.htm

and OAM is described at

http://publib.boulder.ibm.com/infocenter/wmqv6/v6r0/index.jsp?topic=/com.ibm.mq.amqzag.doc/fa12780_.htm
----------------------
How access control is implemented by WebSphere MQ

 WebSphere(R) MQ uses the security services provided by the underlying
operating system. An access control interface called the Authorization
Service Interface is part of WebSphere MQ. WebSphere MQ supplies an
implementation of an access control manager (conforming to the Authorization
Service Interface) known as the *Object Authority Manager (OAM)*. This is
automatically installed and enabled for each queue manager you create,
unless you specify otherwise (as described in Preventing security access
checks<http://publib.boulder.ibm.com/infocenter/wmqv6/v6r0/topic/com.ibm.mq.amqzag.doc/fa13260_.htm>).
The OAM can be replaced by any user or vendor written component that
conforms to the Authorization Service Interface.

The OAM exploits the security features of the underlying operating system,
using operating system user and group IDs. Users can access WebSphere MQ
objects only if they have the correct authority. Using the OAM to control
access to objects<http://publib.boulder.ibm.com/infocenter/wmqv6/v6r0/topic/com.ibm.mq.amqzag.doc/fa13160_.htm>describes
how to grant and revoke this authority.

The OAM maintains an access control list (ACL) for each resource that it
controls. Authorization data is stored on a local queue called
SYSTEM.AUTH.DATA.QUEUE. Access to this queue is restricted to users in the
mqm group, and additionally on Windows(R), to users in the Administrators
group, and users logged in with the SYSTEM ID. User access to the queue
cannot be changed.

WebSphere MQ supplies commands to create, and maintain access control lists.
For more information on these commands, see Using the OAM to control access
to objects<http://publib.boulder.ibm.com/infocenter/wmqv6/v6r0/topic/com.ibm.mq.amqzag.doc/fa13160_.htm>
.

WebSphere MQ passes the OAM a request containing a principal, a resource
name, and an access type. The OAM grants or rejects access based on the ACL
that it maintains. WebSphere MQ follows the decision of the OAM; if the OAM
cannot make a decision, WebSphere MQ does not allow access.

----------------------

Regards,

Ed


On Mon, Sep 29, 2008 at 1:24 PM, Ben Hood <0x6e6562 at gmail.com> wrote:

> Anthony,
>
> On Mon, Sep 29, 2008 at 8:26 AM, Anthony <anthony-rabbitmq at hogan.id.au>
> wrote:
>
> > After Ben suggested that some discussion was perhaps warranted on this
> > task, I went away and spoke to my colleagues about our experiences and
> > such. I wrote up the following and ran it past them.. Yes, I approach
> > this very much from the perspective of someone who doesn't code
> > regularly, but is often the one installing/configuring/maintaining
> > stuff based upon supplied requirements. This isn't intended to belt
> > anyone over the head or kick up a stink, but to demonstrate there are
> > some real world needs for finer grained ACLs. Hopefully this inspires
> some
> > thought/commentary on what an ACL system might include.
>
> I think there is a lot of merit in the use cases you have described in
> this mail.
>
> Please understand that realms were not discarded because people didn't
> want fine grained ACLs per se, just that they not particularly well
> specified and hence very difficult to implement properly.
>
> Certainly we would *like* to have some more fine grained AC that what
> we currenly have. Something capability based would probably be nicer
> than plain jane ACLs, but this would be subject to requirements and
> design. In plain English, this could potentially go into the roadmap
> at some stage.
>
> If you would like to improve the chances of doing this, you could
> start a community based initiative which would entail documenting use
> cases and identifying potential solutions, eventually cutting some
> code.
>
> Otherwise you're going to have to be very persuasive to get this
> bumped up the list of priorities :-)
>
> Does anybody else have any views on access control?
>
> HTH,
>
> Ben
>
> _______________________________________________
> rabbitmq-discuss mailing list
> rabbitmq-discuss at lists.rabbitmq.com
> http://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20080929/e5b93111/attachment.htm 

From jonatan at heysan.com  Mon Sep 29 22:34:38 2008
From: jonatan at heysan.com (Jonatan Kallus)
Date: Mon, 29 Sep 2008 14:34:38 -0700
Subject: [rabbitmq-discuss] Redelivery of unacknowledged messages
Message-ID: <4cc167ca0809291434td4d7674tf493b460fa67b74c@mail.gmail.com>

I get the feeling that this should be a rather basic question, but I have
searched the mailing list and the AMQP specification without finding
answers.

For how long does the server wait for acknowledgment from a subscriber (when
acknowledgment is required)?

When are unacknowledged messages redelivered?

In my set up, using the java api for a single consumer and the stomp gateway
and a php stomp client for sending messages to the queue, messages do not
seem to get redelivered until the consumer is restarted.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20080929/98cb4d20/attachment.htm 

From 0x6e6562 at gmail.com  Tue Sep 30 01:59:33 2008
From: 0x6e6562 at gmail.com (Ben Hood)
Date: Tue, 30 Sep 2008 01:59:33 +0100
Subject: [rabbitmq-discuss] Redelivery of unacknowledged messages
In-Reply-To: <4cc167ca0809291434td4d7674tf493b460fa67b74c@mail.gmail.com>
References: <4cc167ca0809291434td4d7674tf493b460fa67b74c@mail.gmail.com>
Message-ID: <269388e30809291759u620ec14fyf63cc6643b7f69ff@mail.gmail.com>

Jonatan,

On Mon, Sep 29, 2008 at 10:34 PM, Jonatan Kallus <jonatan at heysan.com> wrote:
> I get the feeling that this should be a rather basic question, but I have
> searched the mailing list and the AMQP specification without finding
> answers.

I did answer this last week, but it was off list and I'm still waiting
for confirmation to turn it into a list topic.

> For how long does the server wait for acknowledgment from a subscriber (when
> acknowledgment is required)?
>
> When are unacknowledged messages redelivered?

After the channel in which the initial receive has been closed and a
new channel has been setup.

> In my set up, using the java api for a single consumer and the stomp gateway
> and a php stomp client for sending messages to the queue, messages do not
> seem to get redelivered until the consumer is restarted.

This example code may illustrate the mechanism:

package com.acme;

import com.rabbitmq.client.Channel;
import com.rabbitmq.client.Connection;
import com.rabbitmq.client.ConnectionFactory;
import com.rabbitmq.client.GetResponse;
import com.rabbitmq.client.MessageProperties;

public class AckExample {

   // Using JDK assertions: add -ea flag to the interpreter
   public static void main(String[] args) throws Exception {
       final Connection con = new
ConnectionFactory().newConnection("0.0.0.0", 5672);
       Channel channel = con.createChannel();
       String q = "foo" + System.currentTimeMillis();
       byte[] msg = ("bar" + System.currentTimeMillis()).getBytes();
       channel.queueDeclare(1, q);
       // Send 1 message
       channel.basicPublish(1, "", q, MessageProperties.BASIC, msg);
       // Synchronous receive with acknowledgements turned on
       GetResponse response1 = channel.basicGet(1, q, false);
       assert null != response1.getBody();
       assert false == response1.getEnvelope().isRedeliver();
       // Deliberately forget to ack the message and nuke the channel
       channel.close(200, "hasta la vista, baby");
       // Start a new channel
       channel = con.createChannel();
       // Get the same message
       GetResponse response2 = channel.basicGet(1, q, false);
       assert null != response2.getBody();
       assert true == response2.getEnvelope().isRedeliver();
       channel.close(200, "hasta la vista, baby");
       con.close();
       assert response1.getEnvelope().getDeliveryTag() ==
response2.getEnvelope().getDeliveryTag();
   }
}

This uses the fact that an un-acked message will get redelivered on a
different channel if the original get command set the to no-ack flag
to false and no ack was received on this channel. Crude, but it works.

HTH,

Ben



From matthias at lshift.net  Tue Sep 30 08:01:36 2008
From: matthias at lshift.net (Matthias Radestock)
Date: Tue, 30 Sep 2008 08:01:36 +0100
Subject: [rabbitmq-discuss] Redelivery of unacknowledged messages
In-Reply-To: <269388e30809291759u620ec14fyf63cc6643b7f69ff@mail.gmail.com>
References: <4cc167ca0809291434td4d7674tf493b460fa67b74c@mail.gmail.com>
	<269388e30809291759u620ec14fyf63cc6643b7f69ff@mail.gmail.com>
Message-ID: <48E1CED0.8020607@lshift.net>

Ben Hood wrote:
>> When are unacknowledged messages redelivered?
> 
> After the channel in which the initial receive has been closed and a
> new channel has been setup.

To be precise, unacknowledged messages become eligible for redelivery 
when the channel (or connection) on which they have been delivered is 
closed.

If a queue has more than one consumer, the message will be delivered to 
one of the remaining consumers. Otherwise it will be enqueued and can 
thus be consumed by a consumer which comes along later.


Matthias.



From alexis.richardson at cohesiveft.com  Tue Sep 30 14:14:56 2008
From: alexis.richardson at cohesiveft.com (Alexis Richardson)
Date: Tue, 30 Sep 2008 14:14:56 +0100
Subject: [rabbitmq-discuss] wct + pubsub
In-Reply-To: <!&!AAAAAAAAAAAYAAAAAAAAAKmCSsECxmlLkxuEpydKKTLCgAAAEAAAAM3iQQAn2SFEptb2QrTqw84BAAAAAA==@oryo.lt>
References: <!&!AAAAAAAAAAAYAAAAAAAAAKmCSsECxmlLkxuEpydKKTLCgAAAEAAAAEBJmioGMrhGre3/WoUXPwsBAAAAAA==@oryo.lt>
	<167204d20809240327ma3e05a0v36d66095c9cde589@mail.gmail.com>
	<!&!AAAAAAAAAAAYAAAAAAAAAKmCSsECxmlLkxuEpydKKTLCgAAAEAAAAO9D0uele3VHhAyW3r4QhgwBAAAAAA==@oryo.lt>
	<167204d20809260358r1abd12dfh7dbe643545070f6d@mail.gmail.com>
	<!&!AAAAAAAAAAAYAAAAAAAAAKmCSsECxmlLkxuEpydKKTLCgAAAEAAAAM3iQQAn2SFEptb2QrTqw84BAAAAAA==@oryo.lt>
Message-ID: <167204d20809300614p3dd63a33kb1b6e1ee4813022d@mail.gmail.com>

Andrius,


On Mon, Sep 29, 2008 at 4:35 PM, Andrius Norkaitis
<Andrius.Norkaitis at oryo.lt> wrote:
>
>>1) Are you able to do pubsub without using WCF, i.e. using C# on its own?
> I think yes. I tested it in command prompt using sendstring and logtail
> examples:
>
> 1. Started 3 instances of CMD
> 2. In 1 and 2 instates of cmd typed:
> logtail dev.rabbitmq.com:5672 sub topic /eTaksi/Hello
> 3. In instance 3 typed:
> sendstring dev.rabbitmq.com:5672 sub topic / eTaksi/Hello "testas7"
>
> Both instances of logtail program got the messeage.
..
>
> OK. I use the same exchange as I declared in logtail example. Even I left
> these instances running to see if massages are coming.
>
>>If you could send us some sample code of what you want to achieve then
>>it will be easier for us to help you efficiently.  Would that be
>>possible please?
>
> I updated sample of "ConfigDemo" (changed service method to "OneWay" - we
> just need to publish and if not specified, replay channel with direct
> exchange is created and endpoint address).
> I uploaded it to http://rapidshare.de/files/40577065/ConfigDemo.zip.html

Cool - downloaded.


> 1. Start two instances of server.
> 2. Start client.
>
> If you're still running logtail, then you would see the SOP messages in all
> instances, but only one "Hello Bob" message is displayed in Server window.
> Sometimes in the first instance, sometimes in another...

Are both instances of the server running off the same (shared) queue?
That could explain the behaviour you are seeing.

If you want to get one copy of the message per subscribed client, you
need one queue per subscriber, and then to bind each queue to the
relevant exchange with the relevant key (direct case) or keys (topic
case).

Without diving deeper into the code it looks to me like this is how
logtail is working (so "Both instances of logtail program got the
message."), but the second example is running off a shared queue (or
you have found a bug).

Can you check if I am right please.  If I am wrong we shall need
someone to dig deeper at this end, which we can do, but probably not
today or tomorrow.

alexis



From alexis.richardson at cohesiveft.com  Tue Sep 30 14:39:05 2008
From: alexis.richardson at cohesiveft.com (Alexis Richardson)
Date: Tue, 30 Sep 2008 14:39:05 +0100
Subject: [rabbitmq-discuss] a talk at google
Message-ID: <167204d20809300639j5734efddtc5c9990a31fe275a@mail.gmail.com>

Hi

We did a talk at Google on RabbitMQ.  Thanks to Ade Oshineye for
setting this up and to Liz Ericson.

The talk is in three parts:

* Business case for AMQP and intro to RabbitMQ (me)
* Why we chose Erlang/OTP for the server (Matthias)
* Overview of web messaging comparing protocols, plus current research
work on future directions for messaging and applications such as
microbloggging (Tony)

Link - http://google-ukdev.blogspot.com/2008/09/rabbitmq-tech-talk-at-google-london.html

There will be a video posted at some point - though I understand the
recording may not be perfect..

alexis



