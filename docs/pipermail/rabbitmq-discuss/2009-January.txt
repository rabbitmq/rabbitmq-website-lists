From 0x6e6562 at gmail.com  Fri Jan  2 14:29:52 2009
From: 0x6e6562 at gmail.com (Ben Hood)
Date: Fri, 2 Jan 2009 14:29:52 +0000
Subject: [rabbitmq-discuss] macports rabbitmq-server
In-Reply-To: <167204d20901011539j5cae065fj4392efee6b056b17@mail.gmail.com>
References: <797CBEE7-36E8-472C-A992-6861826DF9A3@macports.org>
	<167204d20901011539j5cae065fj4392efee6b056b17@mail.gmail.com>
Message-ID: <269388e30901020629r3e1341afn9e2ebcb239d07663@mail.gmail.com>

Hi Brett,

On Thu, Jan 1, 2009 at 11:39 PM, Alexis Richardson
<alexis.richardson at gmail.com> wrote:
> Tony is on vacation and may not get this for a few days.  So I am
> cc'ing Ben who may know the answer to your question.
>
> alexis
>
> On Thu, Jan 1, 2009 at 11:19 PM, Brett Eisenberg <brett at macports.org> wrote:
>> Hi Tony,
>>
>> Any chance you're going to update the MacPort for rabbitmq?

There is a chance but I don't know how soon this will happen.

The main reason behind the reluctance to do this is because of the
extra effort each OS-specific package brings on the core Rabbit team
(i.e. doing it, testing it and maintaining it over time) - we would
*prefer* to allocate resources to developing new functionality in the
server.

Hence I did ask a while back if there is anybody in the community who
would like to take on the honour of packaging Rabbit for their
favorite OS and package manager -
http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/2008-November/002251.html

For example, Phillip Neumann maintains a BSD port of Rabbit
(http://www.freebsd.org/cgi/ports.cgi?query=rabbitmq&stype=all) on his
own initiative.

And Aman Gupta maintains a package for Arch Linux:
http://aur.archlinux.org/packages.php?ID=19090

So hopefully somebody in the OSX community might feel like taking this on.

HTH,

Ben



From alexis.richardson at cohesiveft.com  Fri Jan  2 19:36:40 2009
From: alexis.richardson at cohesiveft.com (Alexis Richardson)
Date: Fri, 2 Jan 2009 19:36:40 +0000
Subject: [rabbitmq-discuss] [amqp-dev] OT Leap Seconds and RFID?
In-Reply-To: <200901010946.55824.bpaddock@softwaresafety.net>
References: <200901010946.55824.bpaddock@softwaresafety.net>
Message-ID: <167204d20901021136u14436c9cwb8c4040ea2b762d@mail.gmail.com>

Bob

On Thu, Jan 1, 2009 at 2:46 PM, Bob Paddock <bpaddock at softwaresafety.net> wrote:
>
> I had two questions I thought someone might have an answer to here.

Hi there and happy 2009.  I hope your mp3 player was not a Zune.

> Directly, does anyone know of where AMQP is being used for Middleware in RFID
> applications?

Re RFID, I am cross-posting this to the RabbitMQ list.  I do not
personally know of anyone using AMQP for RFID.  Some AMQP proponents
are in the business of managing sensor networks and they may jump in
and comment.  Of course the incumbent MOM standard in this niche is
arguably MQTT from IBM -- http://mqtt.org/

> Off-topically (?), my curiosity is getting the better of me.  I was wondering
> how Leap Seconds are dealt with in the layers above AMQP?
>
> Last night there was a Leap Second, so a compliant clock,
> http://tf.nist.gov/general/pdf/1976.pdf page 27 , would tick from 23:59:59
> to 23:59:60, then to 00:00:00.
>
> AMQP uses 64 bit POSIX time_t format, that does not deal with Leap Seconds.
> It would have two 23:59:59 events in a row.  What would happen to a stock
> trade for the same shares executed at both events by different entities?
> I'm making the naive assumption the first trade in the que wins?

I can half answer your question about timing, at least the example
about stock trades.  This would be handled by application semantics
and not by AMQP.

* Different trading applications would have their own strategies for
filling orders with the same time stamp, for example if it is possible
to split the trade between two parties, then each may get a half fill
if that is permissible.  Or, the fill may be 'all or none' and
determined at random between the two competing orders.  Obviously AMQP
cannot take a view on such matters, and consequently does not.

* In the case where application behaviour depends on event ordering,
AMQP does not order events by time, only by logical order.  So your
question would become: when are two events ordered within AMQP and how
should an application deal with this?  The answer then depends on
factors such as whether you have more than one queue, since two events
on two queues, in the absence of global total order, are of course
logically concurrent.

* There are notions of time when AMQP talks about a timeout, but these
are relative and not absolute.  Two clocks, one counting the leap
second, and one not counting it, can still agree on how long an
interval is, provided it is expressible in whole seconds.

Hope this helps :-)


> Something to be considered in the future might be an option of libtai to
> mitigate the double :59 problem:
>
> libtai supports two time scales: (1) TAI64, covering a few hundred billion
> years with 1-second precision; (2) TAI64NA, covering the same period with
> 1-attosecond precision. Both scales are defined in terms of TAI, the current
> international real time standard.  Does support leap seconds, at least
> when the table is updated.  http://cr.yp.to/libtai.html

How is this handled in other protocols for example TCP, SCTP, HTTP and XMPP?

alexis richardson,
RabbitMQ



>
> --
>                http://www.wearablesmartsensors.com/
>  http://www.softwaresafety.net/ http://www.designer-iii.com/
>                 http://www.unusualresearch.com/
> _______________________________________________
> amqp-dev mailing list
> amqp-dev at lists.amqp.org
> http://lists.amqp.org/mailman/listinfo/amqp-dev
>



From njbartlett at gmail.com  Fri Jan  2 21:11:23 2009
From: njbartlett at gmail.com (Bartlett Neil)
Date: Fri, 2 Jan 2009 21:11:23 +0000
Subject: [rabbitmq-discuss] Download location for non-beta client library
Message-ID: <B34D93F3-1A09-4F38-B7AE-F3C393834A18@gmail.com>

Hi,

I just tried to download the RabbitMQ client library for Java, and  
noticed that the version on offer (1.5.0) is declared as a beta. For  
my purposes at the moment I need a nominally "stable" release, which I  
presume would be the previous 1.4 release. However 1.4 doesn't seem to  
be available for download anywhere on the site.

For various reasons it would be useful to have an archive of previous  
releases. E.g. if a library has only been tested with an old version  
of Rabbit it may be necessary to use that old version rather than the  
latest.

Regards
Neil



From michael.greene at gmail.com  Fri Jan  2 21:19:42 2009
From: michael.greene at gmail.com (Michael Greene)
Date: Fri, 2 Jan 2009 15:19:42 -0600
Subject: [rabbitmq-discuss] Download location for non-beta client library
In-Reply-To: <B34D93F3-1A09-4F38-B7AE-F3C393834A18@gmail.com>
References: <B34D93F3-1A09-4F38-B7AE-F3C393834A18@gmail.com>
Message-ID: <f4d6a21a0901021319g49670347p95611fa5b38e4282@mail.gmail.com>

Hi Neil,

> I just tried to download the RabbitMQ client library for Java, and
> noticed that the version on offer (1.5.0) is declared as a beta.

The "beta" is more of a project status than a designation of 1.5.0 not
being final.

All prior releases have been designated as "beta" as well:
http://www.rabbitmq.com/news.html
http://web.archive.org/web/20080116151846/http://www.rabbitmq.com/download.html

1.5.0 is as safe and stable as any previous release.

> For various reasons it would be useful to have an archive of previous
> releases.

I agree.  There are various releases archived at
http://www.rabbitmq.com/releases/ including the one you are looking
for, but it might be helpful if this URI had a link in the
documentation.

Regards,
Michael



From alexis.richardson at cohesiveft.com  Fri Jan  2 21:33:54 2009
From: alexis.richardson at cohesiveft.com (Alexis Richardson)
Date: Fri, 2 Jan 2009 21:33:54 +0000
Subject: [rabbitmq-discuss] Fwd:  question on the faq
In-Reply-To: <167204d20901021330k58638ff2sd15fd7da3812da1@mail.gmail.com>
References: <637BFF3A-19BB-4D94-AB94-7240C411205D@coote.org>
	<167204d20901021330k58638ff2sd15fd7da3812da1@mail.gmail.com>
Message-ID: <167204d20901021333o7c475971lf4c531d3069d4f6a@mail.gmail.com>

Tim,

On Wed, Dec 31, 2008 at 12:17 PM, Tim Coote <tim+rabbitmq.com at coote.org> wrote:
> Hullo

Hi, and thanks for joining the list.


> A neophyte's question:
>
> The  faq includes 'is rabbitmq transactional?'
>
> The answer is 'yes' and then says that it has atomicity and durability
> guarantees. What about Isolation and consistency?

There are senses in which AMQP, and RabbitMQ, behaviour can be
described as ACID, following the wikipedia definition:
http://en.wikipedia.org/wiki/ACID

In AMQP 0-8, 0-9 and 0-9-1, we can talk about individual messages and
commands, and the TX class which groups them.  In AMQP 0-10 we can
talk about conversational ACIDity which allows us to define DTX (XA)
and the famed 'idempotent delivery' aka 'once and only once', because,
in effect, sequence numbers are first class.

Certainly, individual message delivery in RabbitMQ is ACID in that:

* What the FAQ says is good
* Trivially, individual operations are isolated
* RabbitMQ does not map a consistent state to an observable inconsistent state

I think the last point is key to answering your question :-)

Of course this says nothing about the TX class which groups operations
atomically, and respects durability in the intuitively correct way.
In this case isolation and consistency are significantly more
burdensome to guarantee.  As far as I am aware, but one of the
engineering team may wish to correct this:

* RabbitMQ guarantees weakly consistent states, i.e. once TX commits,
the state is consistent.
* For individual messages whose delivery is observable, it is not
possible to observe an inconsistent state after delivery
* Provided that the mandatory and immediate flags are not used,
isolation is guaranteed

This means that:

* for AMQP, if you use TX and avoid mandatory and immediate, you are 'good'
* also, for RabbitMQ, intermingling TX with mandatory and immediate
will lead to sensible behaviour, but I would prefer it if the
engineering team described what that means in practice.

A full treatment of consistency should be in AMQP 1.0.

The engineering team may wish to comment on the above - please take
with a dash of salt...



> (although the latter
> may be partly embedded in the apps that use rabbitmq,

Yes, as with DBMS, it may be cheaper to manage this at the app layer
in some cases.


> I think that
> consistency implies guarantees about serialisation/deserialisation).

Really?


> Is the answer buried in the semantics of a TX AMQP message type?

Yes - see above :-)


> I'd expect good engineering practice like ACID transactions and
> failfast guidelines in Erlang/OTP programming as I think that these
> are pretty much essential for any large scale system that's intended
> to be robust.  (Unlike many commercial programs ;-)

Yes, I think we follow good practice.  But do please note that
Erlang/OTP and AMQP are different beasts, and RabbitMQ tries to make
good use of the engineering in the former, to deliver minimally
confusing behaviour implementing the latter ;-)

Let us all know if this helps, and please ask more questions.

alexis




> Tim
>
>
>
>
> _______________________________________________
> rabbitmq-discuss mailing list
> rabbitmq-discuss at lists.rabbitmq.com
> http://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss
>



From alexis.richardson at cohesiveft.com  Fri Jan  2 21:35:50 2009
From: alexis.richardson at cohesiveft.com (Alexis Richardson)
Date: Fri, 2 Jan 2009 21:35:50 +0000
Subject: [rabbitmq-discuss] Download location for non-beta client library
In-Reply-To: <f4d6a21a0901021319g49670347p95611fa5b38e4282@mail.gmail.com>
References: <B34D93F3-1A09-4F38-B7AE-F3C393834A18@gmail.com>
	<f4d6a21a0901021319g49670347p95611fa5b38e4282@mail.gmail.com>
Message-ID: <167204d20901021335y1583c253xcdddec66efe685f8@mail.gmail.com>

Thanks Michael.

List,

Now that RabbitMQ is maturing as a codebase and has multiple versions,
when would you feel comfortable moving a release out of beta status?

alexis


On Fri, Jan 2, 2009 at 9:19 PM, Michael Greene <michael.greene at gmail.com> wrote:
> Hi Neil,
>
>> I just tried to download the RabbitMQ client library for Java, and
>> noticed that the version on offer (1.5.0) is declared as a beta.
>
> The "beta" is more of a project status than a designation of 1.5.0 not
> being final.
>
> All prior releases have been designated as "beta" as well:
> http://www.rabbitmq.com/news.html
> http://web.archive.org/web/20080116151846/http://www.rabbitmq.com/download.html
>
> 1.5.0 is as safe and stable as any previous release.
>
>> For various reasons it would be useful to have an archive of previous
>> releases.
>
> I agree.  There are various releases archived at
> http://www.rabbitmq.com/releases/ including the one you are looking
> for, but it might be helpful if this URI had a link in the
> documentation.
>
> Regards,
> Michael
>
> _______________________________________________
> rabbitmq-discuss mailing list
> rabbitmq-discuss at lists.rabbitmq.com
> http://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss
>



From 0x6e6562 at gmail.com  Fri Jan  2 23:43:59 2009
From: 0x6e6562 at gmail.com (Ben Hood)
Date: Fri, 2 Jan 2009 23:43:59 +0000
Subject: [rabbitmq-discuss] Download location for non-beta client library
In-Reply-To: <f4d6a21a0901021319g49670347p95611fa5b38e4282@mail.gmail.com>
References: <B34D93F3-1A09-4F38-B7AE-F3C393834A18@gmail.com>
	<f4d6a21a0901021319g49670347p95611fa5b38e4282@mail.gmail.com>
Message-ID: <269388e30901021543t41efa897j65263e66288a19d6@mail.gmail.com>

Neil, Michael,

On Fri, Jan 2, 2009 at 9:19 PM, Michael Greene <michael.greene at gmail.com> wrote:
> 1.5.0 is as safe and stable as any previous release.

For stability and correctness' sake, I would recommend 1.5 over 1.4 -
1.5 contains many fixes for bugs that became apparent after 1.4 was
released. This is not to say that 1.4 was excessively buggy, it's just
that 1.5 caters for more edge cases than 1.4.

>> For various reasons it would be useful to have an archive of previous
>> releases.
>
> I agree.  There are various releases archived at
> http://www.rabbitmq.com/releases/ including the one you are looking
> for, but it might be helpful if this URI had a link in the
> documentation.

The hg cgi gives you a tarball of the tree based on the release tags,
so I you want a 1.4 tarball, you can get it here:
http://hg.rabbitmq.com/rabbitmq-server/rev/b0b80123a480

HTH,

Ben



From tonyg at lshift.net  Sat Jan  3 00:45:52 2009
From: tonyg at lshift.net (Tony Garnock-Jones)
Date: Sat, 03 Jan 2009 13:45:52 +1300
Subject: [rabbitmq-discuss] Download location for non-beta client library
In-Reply-To: <B34D93F3-1A09-4F38-B7AE-F3C393834A18@gmail.com>
References: <B34D93F3-1A09-4F38-B7AE-F3C393834A18@gmail.com>
Message-ID: <495EB540.6060506@lshift.net>

Hi Neil,

Bartlett Neil wrote:
> For various reasons it would be useful to have an archive of previous  
> releases. E.g. if a library has only been tested with an old version  
> of Rabbit it may be necessary to use that old version rather than the  
> latest.

We do still have the old versions on the site, just not linked - for 
example:

http://www.rabbitmq.com/releases/rabbitmq-server/v1.4.0/

We can't (at the moment!) promise to keep these old archives around 
forever (though personally I'd like to hold onto them); as an 
alternative, Ben's suggestion of checking out code on a release tag from 
hg may serve?

Regards,
   Tony



From njbartlett at gmail.com  Sat Jan  3 12:25:32 2009
From: njbartlett at gmail.com (Neil Bartlett)
Date: Sat, 3 Jan 2009 12:25:32 +0000
Subject: [rabbitmq-discuss] Download location for non-beta client library
In-Reply-To: <269388e30901021543t41efa897j65263e66288a19d6@mail.gmail.com>
References: <B34D93F3-1A09-4F38-B7AE-F3C393834A18@gmail.com>
	<f4d6a21a0901021319g49670347p95611fa5b38e4282@mail.gmail.com>
	<269388e30901021543t41efa897j65263e66288a19d6@mail.gmail.com>
Message-ID: <235A9B86-2394-4DD1-8423-77340305783D@gmail.com>


On 2 Jan 2009, at 23:43, Ben Hood wrote:

> For stability and correctness' sake, I would recommend 1.5 over 1.4 -
> 1.5 contains many fixes for bugs that became apparent after 1.4 was
> released. This is not to say that 1.4 was excessively buggy, it's just
> that 1.5 caters for more edge cases than 1.4.

Thanks for the info Ben. In that case I will try to use 1.5.

I think my misunderstanding is based on my expectation that a bug-fix  
release on top of 1.4 would be called something like 1.4.1, whereas  
1.5.beta would likely contain new features that may still be  
experimental. It may be worth making the above information a bit more  
explicit on the downloads page.

Also as Alexis mentioned, start thinking about dropping the beta tag.  
The "perpetual beta" is so 2008, even Google has mostly dropped the  
practice by now.

> The hg cgi gives you a tarball of the tree based on the release tags,
> so I you want a 1.4 tarball, you can get it here:
> http://hg.rabbitmq.com/rabbitmq-server/rev/b0b80123a480

Hmm that's fair enough but it requires some knowledge of using Hg to  
get the long revision number. A page with some links would be a little  
more helpful.

Thanks,
Neil



From matthias at lshift.net  Sat Jan  3 16:56:54 2009
From: matthias at lshift.net (Matthias Radestock)
Date: Sat, 03 Jan 2009 16:56:54 +0000
Subject: [rabbitmq-discuss] Download location for non-beta client library
In-Reply-To: <235A9B86-2394-4DD1-8423-77340305783D@gmail.com>
References: <B34D93F3-1A09-4F38-B7AE-F3C393834A18@gmail.com>	<f4d6a21a0901021319g49670347p95611fa5b38e4282@mail.gmail.com>	<269388e30901021543t41efa897j65263e66288a19d6@mail.gmail.com>
	<235A9B86-2394-4DD1-8423-77340305783D@gmail.com>
Message-ID: <495F98D6.5020406@lshift.net>

Neil,

Neil Bartlett wrote:
> I think my misunderstanding is based on my expectation that a bug-fix  
> release on top of 1.4 would be called something like 1.4.1, whereas  
> 1.5.beta would likely contain new features that may still be  
> experimental.

You are actually correct on both points above. It just so happens that 
to date we have not made a bug-fix-only release. 1.5.0, like its 
predecessors, has beta because of the new (or significantly modified) 
features it introduces that we feel may require some time to mature.

> Also as Alexis mentioned, start thinking about dropping the beta tag.  
> The "perpetual beta" is so 2008, even Google has mostly dropped the  
> practice by now.

We are thinking about replacing the current release numbering scheme 
with something different altogether.


Matthias.



From matthias at lshift.net  Sat Jan  3 17:54:05 2009
From: matthias at lshift.net (Matthias Radestock)
Date: Sat, 03 Jan 2009 17:54:05 +0000
Subject: [rabbitmq-discuss] [erlang-questions] cheap low-power boards
In-Reply-To: <269388e30812300344m4d970ea5xb4d426a49386662a@mail.gmail.com>
References: <33CFEAE2-CDB6-41BA-9AB6-ED48E38EDFA6@gmail.com>	<269388e30812290342v1cc8aa01y8e9c16624a5d64a3@mail.gmail.com>	<4958BD11.3020809@diskware.net>	<269388e30812290459l48d38a41p8e3a6b69a3e66d47@mail.gmail.com>	<4958D05A.2020209@diskware.net>	<269388e30812290730i1d8c1db6xb9dbb9dce49e92ef@mail.gmail.com>	<4958F3FA.4000403@diskware.net>	<269388e30812290838t4a988a8bx17c896e599a75c0@mail.gmail.com>	<4959F8C7.5000304@diskware.net>
	<269388e30812300344m4d970ea5xb4d426a49386662a@mail.gmail.com>
Message-ID: <495FA63D.1020309@lshift.net>

Martin, Ben,

Ben Hood wrote:
>> I cannot proceed starting the performance testing client:
>>
>>        ./runperftest.sh 192.168.1.129
> 
> Sorry, I don't know how that script works (although it is in the java
> client package).

The script is tiny. All it does is invoke MulticastMain against a host 
specified as the first parameter, with a number of different parameters 
- which ones is what "running with ..." tells you. Each test is run for 
10 seconds and prints out the measured throughput.

> I don't know what " running with '  ' " means

See above. It just means that MulticastMain is run with the default options.

>> It would be great to get some reference results for comparison purposes
>> > as I am unable to interpret the attached results.
>> >
>> > Hope it helps the RabbitMQ project a bit.
> 
> Yes, you have started a useful discussion. I'm sure that some people
> in the Rabbit community can use your results to compare it with their
> current setups.

Comparing results of runperftest is only valid in a very limited sense.

There are inherent limitations in the test setup - the reported results 
do *not* represent the maximum throughput RabbiMQ is capable of 
delivering. You can't really read much at all into the figures, except 
that if you run the tests in the same setup against two different 
version of RabbitMQ and you see a significant (>10%) difference in the 
result then probably something has changed between the two versions :)

...which is exactly what runperftest was designed for: as a regression 
test that alerts us to changes in the performance profile.


There is a long outstanding task to create a test that really does 
measure the maximum throughput.


Regards,

Matthias.



From gsim at redhat.com  Mon Jan  5 11:35:08 2009
From: gsim at redhat.com (Gordon Sim)
Date: Mon, 05 Jan 2009 11:35:08 +0000
Subject: [rabbitmq-discuss] Fwd:  question on the faq
In-Reply-To: <167204d20901021333o7c475971lf4c531d3069d4f6a@mail.gmail.com>
References: <637BFF3A-19BB-4D94-AB94-7240C411205D@coote.org>	<167204d20901021330k58638ff2sd15fd7da3812da1@mail.gmail.com>
	<167204d20901021333o7c475971lf4c531d3069d4f6a@mail.gmail.com>
Message-ID: <4961F06C.1030003@redhat.com>

Alexis Richardson wrote:
> On Wed, Dec 31, 2008 at 12:17 PM, Tim Coote <tim+rabbitmq.com at coote.org> wrote:
>> A neophyte's question:
>>
>> The  faq includes 'is rabbitmq transactional?'
>>
>> The answer is 'yes' and then says that it has atomicity and durability
>> guarantees. What about Isolation and consistency?
> 
> There are senses in which AMQP, and RabbitMQ, behaviour can be
> described as ACID, following the wikipedia definition:
> http://en.wikipedia.org/wiki/ACID

In recent discussions on improving the text for the tx 'class' in the 
0-9-1 spec there appeared to be some disagreement around the atomicity 
guarantee.

In particular, I understood from comments by members of the RabbitMQ 
team that though effects of all contained (publish and ack) operations 
are visible if the the commit is successful, RabbitMQ does not guarantee 
that none of them would be visible in the event of a failure.



From tim+rabbitmq.com at coote.org  Mon Jan  5 12:36:45 2009
From: tim+rabbitmq.com at coote.org (Tim Coote)
Date: Mon, 5 Jan 2009 12:36:45 +0000
Subject: [rabbitmq-discuss] Fwd:  question on the faq
Message-ID: <CBB16A07-BAB9-4C20-80E2-6D25ADD51AA5@coote.org>

I'm not sure that I like the wikipedia article as much as I like the  
work of Jim Gray and Andreas Reuter mentioned in its references.   
Their book has many examples of the practical value of ACID on real  
software development. I've got others.  Mostly the value comes from  
not having application programmers try to fix errors that they  
misunderstand, leading to increased cost and decreased quality and  
performance.

your description implies to me that RabbitMQ message delivery cannot  
be Atomic, even at the single message level, let alone defining units  
of work that span messages.

Shame.  Promising that it's even been discussed tho'. I'll see if I  
can find the spec that you refer to.

Tim

On 5 Jan 2009, at 11:35, Gordon Sim wrote:

>
> Alexis Richardson wrote:
>> On Wed, Dec 31, 2008 at 12:17 PM, Tim Coote <tim+rabbitmq.com at coote.org 
>> > wrote:
>>> A neophyte's question:
>>>
>>> The  faq includes 'is rabbitmq transactional?'
>>>
>>> The answer is 'yes' and then says that it has atomicity and  
>>> durability
>>> guarantees. What about Isolation and consistency?
>> There are senses in which AMQP, and RabbitMQ, behaviour can be
>> described as ACID, following the wikipedia definition:
>> http://en.wikipedia.org/wiki/ACID
>
> In recent discussions on improving the text for the tx 'class' in  
> the 0-9-1 spec there appeared to be some disagreement around the  
> atomicity guarantee.
>
> In particular, I understood from comments by members of the RabbitMQ  
> team that though effects of all contained (publish and ack)  
> operations are visible if the the commit is successful, RabbitMQ  
> does not guarantee that none of them would be visible in the event  
> of a failure.
>

Tim Coote





From alexis.richardson at cohesiveft.com  Mon Jan  5 12:55:14 2009
From: alexis.richardson at cohesiveft.com (Alexis Richardson)
Date: Mon, 5 Jan 2009 12:55:14 +0000
Subject: [rabbitmq-discuss] Fwd: question on the faq
In-Reply-To: <CBB16A07-BAB9-4C20-80E2-6D25ADD51AA5@coote.org>
References: <CBB16A07-BAB9-4C20-80E2-6D25ADD51AA5@coote.org>
Message-ID: <167204d20901050455g6a8415c8t6a69f1b3ba8107e0@mail.gmail.com>

Tim,

On Mon, Jan 5, 2009 at 12:36 PM, Tim Coote <tim+rabbitmq.com at coote.org> wrote:
>  Mostly the value comes from
> not having application programmers try to fix errors that they
> misunderstand, leading to increased cost and decreased quality and
> performance.

I agree this is a key benefit of ACID in a system with side effects.
But it is also important to be clear about what sorts of consistency
(etc) are promised.



> your description implies to me that RabbitMQ message delivery cannot
> be Atomic, even at the single message level,

I don't understand how you can draw this conclusion from what I said
(note that the comment below is from Gordon).

My statement included the assertion that at the single message level
RabbitMQ delivery *is* atomic.  Without single message atomicity it
would be very hard to reason about consistency *at all*.



> let alone defining units
> of work that span messages.

RabbitMQ provides a correct implementation of the TX class which
enables work to be grouped.  It is the TX class to which Gordon refers
in his email below.  The problem is that the definition of TX is open
to *some* interpretation in edge cases, and is implemented slightly
differently by the various brokers.  When we discussed the differences
in the working group we agreed that it would be more useful to clarify
how each 'correct' interpretation actually works for pre 1.0 specs,
pending AMQP 1.0.

We would welcome a discussion of the subtleties of TX on this list.
If you can find holes in our implementation we would be delighted to
make it better!


> Shame.  Promising that it's even been discussed tho'.

TX was defined in the period 2004-2006 before AMQP became a public
spec, when it was in incubation at JPMorgan Chase with the assistance
of several groups of software professionals.  But it's not yet
perfect.

The complexity of TX arises due to the fact that messaging is about
routing and delivery as much as it is about enforcing various forms of
seriality in the presence of change.  For example consider the case
where N messages are sent in a TX transaction, over multiple queues,
and during this operation one queue disappears (eg due to failure).  A
proper treatment of this requires a proper treatment of multiple
failure cases, and a clear definition of ordering.


> I'll see if I
> can find the spec that you refer to.

Please do take a look and let us know what you think.

Cheers

alexis



>
> Tim
>
> On 5 Jan 2009, at 11:35, Gordon Sim wrote:
>
>>
>> Alexis Richardson wrote:
>>> On Wed, Dec 31, 2008 at 12:17 PM, Tim Coote <tim+rabbitmq.com at coote.org
>>> > wrote:
>>>> A neophyte's question:
>>>>
>>>> The  faq includes 'is rabbitmq transactional?'
>>>>
>>>> The answer is 'yes' and then says that it has atomicity and
>>>> durability
>>>> guarantees. What about Isolation and consistency?
>>> There are senses in which AMQP, and RabbitMQ, behaviour can be
>>> described as ACID, following the wikipedia definition:
>>> http://en.wikipedia.org/wiki/ACID
>>
>> In recent discussions on improving the text for the tx 'class' in
>> the 0-9-1 spec there appeared to be some disagreement around the
>> atomicity guarantee.
>>
>> In particular, I understood from comments by members of the RabbitMQ
>> team that though effects of all contained (publish and ack)
>> operations are visible if the the commit is successful, RabbitMQ
>> does not guarantee that none of them would be visible in the event
>> of a failure.
>>
>
> Tim Coote
>
>
>
> _______________________________________________
> rabbitmq-discuss mailing list
> rabbitmq-discuss at lists.rabbitmq.com
> http://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss
>



From gsim at redhat.com  Mon Jan  5 13:57:29 2009
From: gsim at redhat.com (Gordon Sim)
Date: Mon, 05 Jan 2009 13:57:29 +0000
Subject: [rabbitmq-discuss] Fwd: question on the faq
In-Reply-To: <167204d20901050455g6a8415c8t6a69f1b3ba8107e0@mail.gmail.com>
References: <CBB16A07-BAB9-4C20-80E2-6D25ADD51AA5@coote.org>
	<167204d20901050455g6a8415c8t6a69f1b3ba8107e0@mail.gmail.com>
Message-ID: <496211C9.9040504@redhat.com>

Alexis Richardson wrote:
> RabbitMQ provides a correct implementation of the TX class which
> enables work to be grouped.  It is the TX class to which Gordon refers
> in his email below.  The problem is that the definition of TX is open
> to *some* interpretation in edge cases, and is implemented slightly
> differently by the various brokers.  When we discussed the differences
> in the working group we agreed that it would be more useful to clarify
> how each 'correct' interpretation actually works for pre 1.0 specs,
> pending AMQP 1.0.

I referred to comments made about the atomicity guarantee in the 
RabbitMQ during discussions on clarifying the text of the TX class.

My view has always been that the TX class implied atomicity (and the 
original author confirmed that was his intention), but the text of the 
0-9 (and earlier) spec(s) did not make that explicit.

Members of the RabbitMQ team were not keen on making it explicit when 
the 0-9-1 corrections were published. As I understood their comments, 
this was because RabbitMQ had not assumed 'all or nothing' semantics. 
(And I accept that given the original wording, that is a perfectly valid 
interpretation of the text).

> The complexity of TX arises due to the fact that messaging is about
> routing and delivery as much as it is about enforcing various forms of
> seriality in the presence of change.  For example consider the case
> where N messages are sent in a TX transaction, over multiple queues,
> and during this operation one queue disappears (eg due to failure).  A
> proper treatment of this requires a proper treatment of multiple
> failure cases, and a clear definition of ordering.

I agree that the behaviour of transactional operations (and indeed 
several non-transactional use cases) when queues are concurrently 
deleted or bindings are concurrently changed is important to define.

A general atomicity guarantee is more basic than that though and would 
in my view be valuable even if it only applied where queues involved in 
that transaction were not deleted during the life of the transaction.

(Note the only way a queue should disappear due to failure is if the 
broker restarts and the queue was not durable, in which case any open 
transactions would be aborted).





From cctrieloff at redhat.com  Mon Jan  5 14:02:10 2009
From: cctrieloff at redhat.com (Carl Trieloff)
Date: Mon, 05 Jan 2009 09:02:10 -0500
Subject: [rabbitmq-discuss] Fwd: question on the faq
In-Reply-To: <496211C9.9040504@redhat.com>
References: <CBB16A07-BAB9-4C20-80E2-6D25ADD51AA5@coote.org>	<167204d20901050455g6a8415c8t6a69f1b3ba8107e0@mail.gmail.com>
	<496211C9.9040504@redhat.com>
Message-ID: <496212E2.2060005@redhat.com>

Gordon Sim wrote:
> Alexis Richardson wrote:
>   
>> RabbitMQ provides a correct implementation of the TX class which
>> enables work to be grouped.  It is the TX class to which Gordon refers
>> in his email below.  The problem is that the definition of TX is open
>> to *some* interpretation in edge cases, and is implemented slightly
>> differently by the various brokers.  When we discussed the differences
>> in the working group we agreed that it would be more useful to clarify
>> how each 'correct' interpretation actually works for pre 1.0 specs,
>> pending AMQP 1.0.
>>     
>
> I referred to comments made about the atomicity guarantee in the 
> RabbitMQ during discussions on clarifying the text of the TX class.
>
> My view has always been that the TX class implied atomicity (and the 
> original author confirmed that was his intention), but the text of the 
> 0-9 (and earlier) spec(s) did not make that explicit.
>
>   

It would be good to note that the word 'transaction' implies ACID - 
/Atomicity, Consistency, Isolation, Durability

Needing to specify ACID with the word transaction is redundant in my view.

http://en.wikipedia.org/wiki/Transaction_processing

I would go as far as to say, a transaction that is not Atomic is NOT a 
transaction, but rather just some or other variation
of an acknowledgment pattern and should not be called a transaction.

Carl.


/
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20090105/82afa816/attachment.htm 

From matthias at lshift.net  Mon Jan  5 14:55:56 2009
From: matthias at lshift.net (Matthias Radestock)
Date: Mon, 05 Jan 2009 14:55:56 +0000
Subject: [rabbitmq-discuss] Fwd: question on the faq
In-Reply-To: <496211C9.9040504@redhat.com>
References: <CBB16A07-BAB9-4C20-80E2-6D25ADD51AA5@coote.org>	<167204d20901050455g6a8415c8t6a69f1b3ba8107e0@mail.gmail.com>
	<496211C9.9040504@redhat.com>
Message-ID: <49621F7C.8090502@lshift.net>

Gordon Sim wrote:
> A general atomicity guarantee is more basic than that though and would 
> in my view be valuable even if it only applied where queues involved in 
> that transaction were not deleted during the life of the transaction.

> (Note the only way a queue should disappear due to failure is if the 
> broker restarts and the queue was not durable, in which case any open 
> transactions would be aborted).

Not quite. Firstly, if queues are active entities, which they are in 
RabbitMQ, then they can, in principle, die due to some failure. 
Secondly, in a clustered RabbitMQ broker each queue resides on a 
specific node. In such a set up a transaction may take place on a 
connection+channel against one particular node but involve queues 
residing on other nodes. Those queue can disappear due to node failure 
or network connectivity disruption without the transacted 
connection+channel being dropped (since the node which holds the 
connection is still alive and well).


Matthias.



From tim+rabbitmq.com at coote.org  Mon Jan  5 15:11:09 2009
From: tim+rabbitmq.com at coote.org (Tim Coote)
Date: Mon, 5 Jan 2009 15:11:09 +0000
Subject: [rabbitmq-discuss] Fwd: question on the faq
In-Reply-To: <167204d20901050455g6a8415c8t6a69f1b3ba8107e0@mail.gmail.com>
References: <CBB16A07-BAB9-4C20-80E2-6D25ADD51AA5@coote.org>
	<167204d20901050455g6a8415c8t6a69f1b3ba8107e0@mail.gmail.com>
Message-ID: <7222C973-08E5-494E-8FDD-1F35808F4C56@coote.org>

Hullo
Remember, I'm new to messaging technology. I'm coming at this area  
from a more general perspective. Starting with Gray and Reuter's  
definition of a Transaction (an ACID unit of work). My guess is that  
the term's used in a different way in the messaging community, so I'm  
likely to make mistakes.  My background is mostly about understanding  
how to control technology and its use, so I focus on understanding the  
limits first.

Atomic means either everything happens or nothing happens as far as  
the system using a transactional interface is concerned. At minimum,  
I'd expect that if my app sends a message to n recipients, they either  
all get it or none of them do and my app is reliably informed what the  
outcome was. I interpreted Gordon's comment to mean that there were  
side effects that could be abused by programmers to mean that the  
message had got through.  My concern would be that some programmer  
would use a side effect and come to the wrong conclusion.  I probably  
need to read the specs before I make more of a fool of myself.  I'll  
try to read them before I make any comment after this.

 From your bottom example, I'd say that if one of the queues  
disappeared before the tx had been committed, then it should fail and  
rollback. It sounds like a 'theoretically' simple example in  
distributed systems :-)  There seems to be a bigger problem in  
assuring consistent arrival of messages at a destination in a unicast  
case, let alone a multicast model.

I know some of the guys in JPMC at that time.  They knew what they  
were doing.  Of course, they could have been different people from the  
ones that were working on what became RabbitMQ, although one did tell  
me that he was sponsoring some open source messaging work.

Tim


On 5 Jan 2009, at 12:55, Alexis Richardson wrote:

>
> Tim,
>
> On Mon, Jan 5, 2009 at 12:36 PM, Tim Coote <tim 
> +rabbitmq.com at coote.org> wrote:
>> Mostly the value comes from
>> not having application programmers try to fix errors that they
>> misunderstand, leading to increased cost and decreased quality and
>> performance.
>
> I agree this is a key benefit of ACID in a system with side effects.
> But it is also important to be clear about what sorts of consistency
> (etc) are promised.
>
>
>
>> your description implies to me that RabbitMQ message delivery cannot
>> be Atomic, even at the single message level,
>
> I don't understand how you can draw this conclusion from what I said
> (note that the comment below is from Gordon).
>
> My statement included the assertion that at the single message level
> RabbitMQ delivery *is* atomic.  Without single message atomicity it
> would be very hard to reason about consistency *at all*.
>
>
>
>> let alone defining units
>> of work that span messages.
>
> RabbitMQ provides a correct implementation of the TX class which
> enables work to be grouped.  It is the TX class to which Gordon refers
> in his email below.  The problem is that the definition of TX is open
> to *some* interpretation in edge cases, and is implemented slightly
> differently by the various brokers.  When we discussed the differences
> in the working group we agreed that it would be more useful to clarify
> how each 'correct' interpretation actually works for pre 1.0 specs,
> pending AMQP 1.0.
>
> We would welcome a discussion of the subtleties of TX on this list.
> If you can find holes in our implementation we would be delighted to
> make it better!
>
>
>> Shame.  Promising that it's even been discussed tho'.
>
> TX was defined in the period 2004-2006 before AMQP became a public
> spec, when it was in incubation at JPMorgan Chase with the assistance
> of several groups of software professionals.  But it's not yet
> perfect.
>
> The complexity of TX arises due to the fact that messaging is about
> routing and delivery as much as it is about enforcing various forms of
> seriality in the presence of change.  For example consider the case
> where N messages are sent in a TX transaction, over multiple queues,
> and during this operation one queue disappears (eg due to failure).  A
> proper treatment of this requires a proper treatment of multiple
> failure cases, and a clear definition of ordering.
>
>
>> I'll see if I
>> can find the spec that you refer to.
>
> Please do take a look and let us know what you think.
>
> Cheers
>
> alexis
>
>
>
>>
>> Tim
>>
>> On 5 Jan 2009, at 11:35, Gordon Sim wrote:
>>
>>>
>>> Alexis Richardson wrote:
>>>> On Wed, Dec 31, 2008 at 12:17 PM, Tim Coote <tim+rabbitmq.com at coote.org
>>>>> wrote:
>>>>> A neophyte's question:
>>>>>
>>>>> The  faq includes 'is rabbitmq transactional?'
>>>>>
>>>>> The answer is 'yes' and then says that it has atomicity and
>>>>> durability
>>>>> guarantees. What about Isolation and consistency?
>>>> There are senses in which AMQP, and RabbitMQ, behaviour can be
>>>> described as ACID, following the wikipedia definition:
>>>> http://en.wikipedia.org/wiki/ACID
>>>
>>> In recent discussions on improving the text for the tx 'class' in
>>> the 0-9-1 spec there appeared to be some disagreement around the
>>> atomicity guarantee.
>>>
>>> In particular, I understood from comments by members of the RabbitMQ
>>> team that though effects of all contained (publish and ack)
>>> operations are visible if the the commit is successful, RabbitMQ
>>> does not guarantee that none of them would be visible in the event
>>> of a failure.
>>>
>>
>> Tim Coote
>>
>>
>>
>> _______________________________________________
>> rabbitmq-discuss mailing list
>> rabbitmq-discuss at lists.rabbitmq.com
>> http://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss
>>
>

Tim Coote
tim at coote.org
vincit veritas






From cctrieloff at redhat.com  Mon Jan  5 15:24:40 2009
From: cctrieloff at redhat.com (Carl Trieloff)
Date: Mon, 05 Jan 2009 10:24:40 -0500
Subject: [rabbitmq-discuss] Fwd: question on the faq
In-Reply-To: <49621F7C.8090502@lshift.net>
References: <CBB16A07-BAB9-4C20-80E2-6D25ADD51AA5@coote.org>	<167204d20901050455g6a8415c8t6a69f1b3ba8107e0@mail.gmail.com>	<496211C9.9040504@redhat.com>
	<49621F7C.8090502@lshift.net>
Message-ID: <49622638.2040208@redhat.com>

Matthias Radestock wrote:
> Gordon Sim wrote:
>   
>> A general atomicity guarantee is more basic than that though and would 
>> in my view be valuable even if it only applied where queues involved in 
>> that transaction were not deleted during the life of the transaction.
>>     
>
>   
>> (Note the only way a queue should disappear due to failure is if the 
>> broker restarts and the queue was not durable, in which case any open 
>> transactions would be aborted).
>>     
>
> Not quite. Firstly, if queues are active entities, which they are in 
> RabbitMQ, then they can, in principle, die due to some failure. 
> Secondly, in a clustered RabbitMQ broker each queue resides on a 
> specific node. In such a set up a transaction may take place on a 
> connection+channel against one particular node but involve queues 
> residing on other nodes. Those queue can disappear due to node failure 
> or network connectivity disruption without the transacted 
> connection+channel being dropped (since the node which holds the 
> connection is still alive and well).

Sound like a bug. 

If something is transactional then it should be ACID, so if a node fails 
and is restarted it
should be recover-ed from the transaction log. Once a client has 
successfully committed
the txn, the broker weather single instance or cluster should be in a 
consistent state
or be able to be recover-ed to the consistent state to trans-send the 
failure.

Carl.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20090105/9cc3348f/attachment.htm 

From gsim at redhat.com  Mon Jan  5 15:37:48 2009
From: gsim at redhat.com (Gordon Sim)
Date: Mon, 05 Jan 2009 15:37:48 +0000
Subject: [rabbitmq-discuss] Fwd: question on the faq
In-Reply-To: <49621F7C.8090502@lshift.net>
References: <CBB16A07-BAB9-4C20-80E2-6D25ADD51AA5@coote.org>	<167204d20901050455g6a8415c8t6a69f1b3ba8107e0@mail.gmail.com>
	<496211C9.9040504@redhat.com> <49621F7C.8090502@lshift.net>
Message-ID: <4962294C.9000307@redhat.com>

Matthias Radestock wrote:
> Gordon Sim wrote:
>> A general atomicity guarantee is more basic than that though and would 
>> in my view be valuable even if it only applied where queues involved 
>> in that transaction were not deleted during the life of the transaction.
> 
>> (Note the only way a queue should disappear due to failure is if the 
>> broker restarts and the queue was not durable, in which case any open 
>> transactions would be aborted).
> 
> Not quite. Firstly, if queues are active entities, which they are in 
> RabbitMQ, then they can, in principle, die due to some failure. 

I would view that as a bug.

> Secondly, in a clustered RabbitMQ broker each queue resides on a 
> specific node. In such a set up a transaction may take place on a 
> connection+channel against one particular node but involve queues 
> residing on other nodes. Those queue can disappear due to node failure 
> or network connectivity disruption without the transacted 
> connection+channel being dropped (since the node which holds the 
> connection is still alive and well).

Would RabbitMQ abort any open transaction involving the queue in that case?




From alexis.richardson at cohesiveft.com  Mon Jan  5 15:35:02 2009
From: alexis.richardson at cohesiveft.com (Alexis Richardson)
Date: Mon, 5 Jan 2009 15:35:02 +0000
Subject: [rabbitmq-discuss] Fwd: question on the faq
In-Reply-To: <496212E2.2060005@redhat.com>
References: <CBB16A07-BAB9-4C20-80E2-6D25ADD51AA5@coote.org>
	<167204d20901050455g6a8415c8t6a69f1b3ba8107e0@mail.gmail.com>
	<496211C9.9040504@redhat.com> <496212E2.2060005@redhat.com>
Message-ID: <167204d20901050735r29c9a9ebie5f3f0527601b942@mail.gmail.com>

Carl,

On Mon, Jan 5, 2009 at 2:02 PM, Carl Trieloff <cctrieloff at redhat.com> wrote:
>
> My view has always been that the TX class implied atomicity (and the
> original author confirmed that was his intention), but the text of the
> 0-9 (and earlier) spec(s) did not make that explicit.
..
> Needing to specify ACID with the word transaction is redundant in my view.
..
> I would go as far as to say, a transaction that is not Atomic is NOT a
> transaction, but rather just some or other variation
> of an acknowledgment pattern and should not be called a transaction.

In fairness, Tim's question was about *CI*...

During the 0-9-1 discussions the group came to the realisation that
either (a) TX qua 0-8/9 was more naturally seen as a generalised
acknowledgeable group of work, or (b) that the semantics of TX needed
to be amended.  Such semantic amendments were of course out of scope
for 0-9-1, *and* with 1.0 'in view' for 2009, *and* absent a full
account of failure in 0-8/9, the former view (a) prevailed.  So 0-9-1
has its own view of what a TX transaction is.

We would welcome further spec clarifications that fix TX, remove
ambiguities, and decrease the potential gap between 0-8/9 type
implementations.  We would also implement, in RabbitMQ, improvements
to TX that the AMQP community collectively demands at the spec level.

More generally, it is dangerous to assume that a messaging system not
subject to full XA type constraints is like a database in every way.
In 0-8/9 AMQP, TX can only guarantee atomicity in the presence of
failures if every broker operation is a transaction in the same sense
as in a database.  So for example in 0-8/9, individual message
delivery is *transactional* and *atomic*, but queue failure is not
guaranteed to be so because the queue lifecycle is simply *undefined*
in 0-8/9.

If queue lifecyle were defined and its operations were atomic, then
that would make it is easier for TX to cover all atomicity cases.

Even more generally, some examples of non-atomic "transactions" do exist:

http://www.theserverside.com/news/thread.tss?thread_id=40280#208051

Cheers,

alexis



From matthias at lshift.net  Mon Jan  5 15:42:39 2009
From: matthias at lshift.net (Matthias Radestock)
Date: Mon, 05 Jan 2009 15:42:39 +0000
Subject: [rabbitmq-discuss] Fwd: question on the faq
In-Reply-To: <49622638.2040208@redhat.com>
References: <CBB16A07-BAB9-4C20-80E2-6D25ADD51AA5@coote.org>	<167204d20901050455g6a8415c8t6a69f1b3ba8107e0@mail.gmail.com>	<496211C9.9040504@redhat.com>	<49621F7C.8090502@lshift.net>
	<49622638.2040208@redhat.com>
Message-ID: <49622A6F.7060209@lshift.net>

Carl Trieloff wrote:
>> Not quite. Firstly, if queues are active entities, which they are in 
>> RabbitMQ, then they can, in principle, die due to some failure. 
>> Secondly, in a clustered RabbitMQ broker each queue resides on a 
>> specific node. In such a set up a transaction may take place on a 
>> connection+channel against one particular node but involve queues 
>> residing on other nodes. Those queue can disappear due to node failure 
>> or network connectivity disruption without the transacted 
>> connection+channel being dropped (since the node which holds the 
>> connection is still alive and well).
> 
> Sound like a bug. 

Huh? None of the the above actually preclude an implementation of ACID 
transactions; I am simply explaining why it's not quite as simple as 
people might think.

> If something is transactional then it should be ACID

Only if the spec says that it should be, which it doesn't.

> so if a node fails and is restarted it
> should be recover-ed from the transaction log. Once a client has 
> successfully committed
> the txn, the broker weather single instance or cluster should be in a 
> consistent state
> or be able to be recover-ed to the consistent state to trans-send the 
> failure.

All the above is true of RabbitMQ. But we do not guarantee atomicity in 
the event of tx *failure*.


Matthias.



From matthias at lshift.net  Mon Jan  5 15:47:59 2009
From: matthias at lshift.net (Matthias Radestock)
Date: Mon, 05 Jan 2009 15:47:59 +0000
Subject: [rabbitmq-discuss] Fwd: question on the faq
In-Reply-To: <4962294C.9000307@redhat.com>
References: <CBB16A07-BAB9-4C20-80E2-6D25ADD51AA5@coote.org>	<167204d20901050455g6a8415c8t6a69f1b3ba8107e0@mail.gmail.com>	<496211C9.9040504@redhat.com>
	<49621F7C.8090502@lshift.net> <4962294C.9000307@redhat.com>
Message-ID: <49622BAF.10702@lshift.net>

Gordon Sim wrote:
> Matthias Radestock wrote:
>> if queues are active entities, which they are in 
>> RabbitMQ, then they can, in principle, die due to some failure. 
> 
> I would view that as a bug.

Any failure of a queue process is indeed a bug, but the interesting 
question is how the system deals with such failures. In RabbitMQ they 
will cause any tx involving that queue to abort.

>> Secondly, in a clustered RabbitMQ broker each queue resides on a 
>> specific node. In such a set up a transaction may take place on a 
>> connection+channel against one particular node but involve queues 
>> residing on other nodes. Those queue can disappear due to node failure 
>> or network connectivity disruption without the transacted 
>> connection+channel being dropped (since the node which holds the 
>> connection is still alive and well).
> 
> Would RabbitMQ abort any open transaction involving the queue in that case?

Yes, but aborts in RabbitMQ aren't atomic, i.e. any actions on other 
queues that are part of the same transactions may still get committed.


Matthias



From tim+rabbitmq.com at coote.org  Mon Jan  5 16:14:36 2009
From: tim+rabbitmq.com at coote.org (Tim Coote)
Date: Mon, 5 Jan 2009 16:14:36 +0000
Subject: [rabbitmq-discuss] Fwd: question on the faq
In-Reply-To: <4962294C.9000307@redhat.com>
References: <CBB16A07-BAB9-4C20-80E2-6D25ADD51AA5@coote.org>	<167204d20901050455g6a8415c8t6a69f1b3ba8107e0@mail.gmail.com>
	<496211C9.9040504@redhat.com> <49621F7C.8090502@lshift.net>
	<4962294C.9000307@redhat.com>
Message-ID: <FDD6BBFD-1053-4113-8EF5-55560873CDB5@coote.org>

I've now read a bit of the specs :-)
amqp defines tx classes (which are not transactional in the sense of  
XOpen's XA specification) and dtx, which are.  I don't understand, at  
the moment, what tx really means in the context of a message passing  
system, but I suspect that it's something to do with some sort of  
'transactional' model with a message server (or whatever I call the  
agent that my application interacts with that is its interface to the  
messaging system): I can send messages to the message server with  
transactional semantics, but there's no downstream semantics. I'm not  
very clear on how this is a useful piece of functionality as I cannot  
see what guarantees I get for it.

iirc, MQSeries had similar semantics about 'guaranteed delivery',  
which are not much use, either, as you still have to put in place  
checks for message receipt by the end point.

Could the two types of 'transaction'  causing some confusion?

Tim

On 5 Jan 2009, at 15:37, Gordon Sim wrote:

>
> Matthias Radestock wrote:
>> Gordon Sim wrote:
>>> A general atomicity guarantee is more basic than that though and  
>>> would in my view be valuable even if it only applied where queues  
>>> involved in that transaction were not deleted during the life of  
>>> the transaction.
>>> (Note the only way a queue should disappear due to failure is if  
>>> the broker restarts and the queue was not durable, in which case  
>>> any open transactions would be aborted).
>> Not quite. Firstly, if queues are active entities, which they are  
>> in RabbitMQ, then they can, in principle, die due to some failure.
>
> I would view that as a bug.
>
>> Secondly, in a clustered RabbitMQ broker each queue resides on a  
>> specific node. In such a set up a transaction may take place on a  
>> connection+channel against one particular node but involve queues  
>> residing on other nodes. Those queue can disappear due to node  
>> failure or network connectivity disruption without the transacted  
>> connection+channel being dropped (since the node which holds the  
>> connection is still alive and well).
>
> Would RabbitMQ abort any open transaction involving the queue in  
> that case?
>
>

Tim Coote
tim at coote.org
vincit veritas






From cctrieloff at redhat.com  Mon Jan  5 16:12:05 2009
From: cctrieloff at redhat.com (Carl Trieloff)
Date: Mon, 05 Jan 2009 11:12:05 -0500
Subject: [rabbitmq-discuss] Fwd: question on the faq
In-Reply-To: <49622A6F.7060209@lshift.net>
References: <CBB16A07-BAB9-4C20-80E2-6D25ADD51AA5@coote.org>	<167204d20901050455g6a8415c8t6a69f1b3ba8107e0@mail.gmail.com>	<496211C9.9040504@redhat.com>	<49621F7C.8090502@lshift.net>
	<49622638.2040208@redhat.com> <49622A6F.7060209@lshift.net>
Message-ID: <49623155.10300@redhat.com>

Matthias Radestock wrote:
> Carl Trieloff wrote:
>>> Not quite. Firstly, if queues are active entities, which they are in 
>>> RabbitMQ, then they can, in principle, die due to some failure. 
>>> Secondly, in a clustered RabbitMQ broker each queue resides on a 
>>> specific node. In such a set up a transaction may take place on a 
>>> connection+channel against one particular node but involve queues 
>>> residing on other nodes. Those queue can disappear due to node 
>>> failure or network connectivity disruption without the transacted 
>>> connection+channel being dropped (since the node which holds the 
>>> connection is still alive and well).
>>
>> Sound like a bug. 
>
> Huh? None of the the above actually preclude an implementation of ACID 
> transactions; I am simply explaining why it's not quite as simple as 
> people might think.
>
>> If something is transactional then it should be ACID
>
> Only if the spec says that it should be, which it doesn't. 

that is ridiculous. I don't know of any transaction impl that is not 
ACID, if it is not ACID what is the point? Differentiating between 1PC 
(local) and 2PC is meaningful, but both are ACID, that is the point on a 
transaction. If the txn is not ACID, why not just acknowledge the 
message, there is to difference in the failure cases between a non ACID 
txn and an ack  then.

Carl.



From cctrieloff at redhat.com  Mon Jan  5 16:17:47 2009
From: cctrieloff at redhat.com (Carl Trieloff)
Date: Mon, 05 Jan 2009 11:17:47 -0500
Subject: [rabbitmq-discuss] Fwd: question on the faq
In-Reply-To: <167204d20901050735r29c9a9ebie5f3f0527601b942@mail.gmail.com>
References: <CBB16A07-BAB9-4C20-80E2-6D25ADD51AA5@coote.org>	
	<167204d20901050455g6a8415c8t6a69f1b3ba8107e0@mail.gmail.com>	
	<496211C9.9040504@redhat.com> <496212E2.2060005@redhat.com>
	<167204d20901050735r29c9a9ebie5f3f0527601b942@mail.gmail.com>
Message-ID: <496232AB.4040502@redhat.com>


>
> If queue lifecyle were defined and its operations were atomic, then
> that would make it is easier for TX to cover all atomicity cases.

There is no reason not to make TX messages Atomic (ACID), what is the 
down side, and the spec
does not specify 'DDL' being transactional, so a queue that is created 
during a TXN flow would outlive
a TX abort as it is not a transnational resource.

Carl.



From cctrieloff at redhat.com  Mon Jan  5 16:18:55 2009
From: cctrieloff at redhat.com (Carl Trieloff)
Date: Mon, 05 Jan 2009 11:18:55 -0500
Subject: [rabbitmq-discuss] Fwd: question on the faq
In-Reply-To: <49622BAF.10702@lshift.net>
References: <CBB16A07-BAB9-4C20-80E2-6D25ADD51AA5@coote.org>	<167204d20901050455g6a8415c8t6a69f1b3ba8107e0@mail.gmail.com>	<496211C9.9040504@redhat.com>	<49621F7C.8090502@lshift.net>
	<4962294C.9000307@redhat.com> <49622BAF.10702@lshift.net>
Message-ID: <496232EF.6010307@redhat.com>


> Yes, but aborts in RabbitMQ aren't atomic, i.e. any actions on other 
> queues that are part of the same transactions may still get committed.
>
>   

what is the point then?
Carl.



From alexis.richardson at cohesiveft.com  Mon Jan  5 16:30:06 2009
From: alexis.richardson at cohesiveft.com (Alexis Richardson)
Date: Mon, 5 Jan 2009 16:30:06 +0000
Subject: [rabbitmq-discuss] Fwd: question on the faq
In-Reply-To: <7222C973-08E5-494E-8FDD-1F35808F4C56@coote.org>
References: <CBB16A07-BAB9-4C20-80E2-6D25ADD51AA5@coote.org>
	<167204d20901050455g6a8415c8t6a69f1b3ba8107e0@mail.gmail.com>
	<7222C973-08E5-494E-8FDD-1F35808F4C56@coote.org>
Message-ID: <167204d20901050830p3797640oa4d72266da028a82@mail.gmail.com>

Tim,

On Mon, Jan 5, 2009 at 3:11 PM, Tim Coote <tim+rabbitmq.com at coote.org> wrote:
> Hullo

Hi :-)


> Remember, I'm new to messaging technology. I'm coming at this area from a
> more general perspective.

Understood and I would not wish to dissuade anyone from asking about
this stuff.  It is an essential part of the community process around
AMQP.  Ask away and comment freely!

If you follow the google cloud computing group, you will see a similar
discussion, this time about eventual consistency.  My point being -
here be dragons - people should discuss it and discuss it until it is
clear and all good implementations work.



> Starting with Gray and Reuter's definition of a
> Transaction (an ACID unit of work). My guess is that the term's used in a
> different way in the messaging community, so I'm likely to make mistakes.
>  My background is mostly about understanding how to control technology and
> its use, so I focus on understanding the limits first.

For sure; and your point about making it easier for end users (eg app
dev) to avoid mistakes, with minimal code, was spot on.

In fact one can take two different views of transactions in the sense
of AMQP TX:

1. Operations are operations on *resources* - so more like databases
(Jim Gray et al.).

This would be fine if it made sense for messaging but arguably it does
not fit messaging in every case.  It makes some sense in the MQ-style
idempotent delivery case; and when HA is well defined in combination
with that; and in some DTX cases.  It would also make sense if all
operations on resources in AMQP (when that makes sense) were
explicitly formalised as such and grouping laws were similarly
defined.

2. Operations are about control of a *stream*.

We like this view as being consistent with AMQP in its full
generality.  Also, as Carl implied, there is a case for seeing TX as
an "acknowledgement pattern" if you take the interpretation Matthias
and I described for 0-8/9 TX.




> Atomic means either everything happens or nothing happens as far as the
> system using a transactional interface is concerned.

At the risk of being Clintonian, it depends what you mean by
'happens'.  Routing to a queue is acceptable streaming behaviour.  So
if the queue fails after being routed to, then it is not unreasonable
to treat something as having 'happened'.



> At minimum, I'd expect
> that if my app sends a message to n recipients, they either all get it or
> none of them do and my app is reliably informed what the outcome was.

We should discuss this some more.  In my own view some of such cases
are better handled using idemptotent delivery; or even DTX.


> I
> interpreted Gordon's comment to mean that there were side effects that could
> be abused by programmers to mean that the message had got through.

I don't think so - but I may be wrong.  I think Gordon's point shows
how TX in 0-8/9 leaves room for debate in some cases.  We would LOVE
to reach a more precise definition acceptable to the 0-8/9 user base,
pending 1.0.


> My
> concern would be that some programmer would use a side effect and come to
> the wrong conclusion.  I probably need to read the specs before I make more
> of a fool of myself.  I'll try to read them before I make any comment after
> this.

Please DO let us know what you think of 0-9-1.  How can we improve it?


> I know some of the guys in JPMC at that time.  They knew what they were
> doing.

Yes they did.  Maximum respect.


> Of course, they could have been different people from the ones that
> were working on what became RabbitMQ, although one did tell me that he was
> sponsoring some open source messaging work.

Yes - RabbitMQ implementation began after 0-8 was made public.  Since
then we have had discussions with past and new implementors through
the magic of the AMQP WG.

alexis



>
> Tim
>
>
> On 5 Jan 2009, at 12:55, Alexis Richardson wrote:
>
>>
>> Tim,
>>
>> On Mon, Jan 5, 2009 at 12:36 PM, Tim Coote <tim+rabbitmq.com at coote.org>
>> wrote:
>>>
>>> Mostly the value comes from
>>> not having application programmers try to fix errors that they
>>> misunderstand, leading to increased cost and decreased quality and
>>> performance.
>>
>> I agree this is a key benefit of ACID in a system with side effects.
>> But it is also important to be clear about what sorts of consistency
>> (etc) are promised.
>>
>>
>>
>>> your description implies to me that RabbitMQ message delivery cannot
>>> be Atomic, even at the single message level,
>>
>> I don't understand how you can draw this conclusion from what I said
>> (note that the comment below is from Gordon).
>>
>> My statement included the assertion that at the single message level
>> RabbitMQ delivery *is* atomic.  Without single message atomicity it
>> would be very hard to reason about consistency *at all*.
>>
>>
>>
>>> let alone defining units
>>> of work that span messages.
>>
>> RabbitMQ provides a correct implementation of the TX class which
>> enables work to be grouped.  It is the TX class to which Gordon refers
>> in his email below.  The problem is that the definition of TX is open
>> to *some* interpretation in edge cases, and is implemented slightly
>> differently by the various brokers.  When we discussed the differences
>> in the working group we agreed that it would be more useful to clarify
>> how each 'correct' interpretation actually works for pre 1.0 specs,
>> pending AMQP 1.0.
>>
>> We would welcome a discussion of the subtleties of TX on this list.
>> If you can find holes in our implementation we would be delighted to
>> make it better!
>>
>>
>>> Shame.  Promising that it's even been discussed tho'.
>>
>> TX was defined in the period 2004-2006 before AMQP became a public
>> spec, when it was in incubation at JPMorgan Chase with the assistance
>> of several groups of software professionals.  But it's not yet
>> perfect.
>>
>> The complexity of TX arises due to the fact that messaging is about
>> routing and delivery as much as it is about enforcing various forms of
>> seriality in the presence of change.  For example consider the case
>> where N messages are sent in a TX transaction, over multiple queues,
>> and during this operation one queue disappears (eg due to failure).  A
>> proper treatment of this requires a proper treatment of multiple
>> failure cases, and a clear definition of ordering.
>>
>>
>>> I'll see if I
>>> can find the spec that you refer to.
>>
>> Please do take a look and let us know what you think.
>>
>> Cheers
>>
>> alexis
>>
>>
>>
>>>
>>> Tim
>>>
>>> On 5 Jan 2009, at 11:35, Gordon Sim wrote:
>>>
>>>>
>>>> Alexis Richardson wrote:
>>>>>
>>>>> On Wed, Dec 31, 2008 at 12:17 PM, Tim Coote <tim+rabbitmq.com at coote.org
>>>>>>
>>>>>> wrote:
>>>>>> A neophyte's question:
>>>>>>
>>>>>> The  faq includes 'is rabbitmq transactional?'
>>>>>>
>>>>>> The answer is 'yes' and then says that it has atomicity and
>>>>>> durability
>>>>>> guarantees. What about Isolation and consistency?
>>>>>
>>>>> There are senses in which AMQP, and RabbitMQ, behaviour can be
>>>>> described as ACID, following the wikipedia definition:
>>>>> http://en.wikipedia.org/wiki/ACID
>>>>
>>>> In recent discussions on improving the text for the tx 'class' in
>>>> the 0-9-1 spec there appeared to be some disagreement around the
>>>> atomicity guarantee.
>>>>
>>>> In particular, I understood from comments by members of the RabbitMQ
>>>> team that though effects of all contained (publish and ack)
>>>> operations are visible if the the commit is successful, RabbitMQ
>>>> does not guarantee that none of them would be visible in the event
>>>> of a failure.
>>>>
>>>
>>> Tim Coote
>>>
>>>
>>>
>>> _______________________________________________
>>> rabbitmq-discuss mailing list
>>> rabbitmq-discuss at lists.rabbitmq.com
>>> http://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss
>>>
>>
>
> Tim Coote
> tim at coote.org
> vincit veritas
>
>
>
>



From alexis.richardson at cohesiveft.com  Mon Jan  5 16:48:18 2009
From: alexis.richardson at cohesiveft.com (Alexis Richardson)
Date: Mon, 5 Jan 2009 16:48:18 +0000
Subject: [rabbitmq-discuss] Fwd: question on the faq
In-Reply-To: <FDD6BBFD-1053-4113-8EF5-55560873CDB5@coote.org>
References: <CBB16A07-BAB9-4C20-80E2-6D25ADD51AA5@coote.org>
	<167204d20901050455g6a8415c8t6a69f1b3ba8107e0@mail.gmail.com>
	<496211C9.9040504@redhat.com> <49621F7C.8090502@lshift.net>
	<4962294C.9000307@redhat.com>
	<FDD6BBFD-1053-4113-8EF5-55560873CDB5@coote.org>
Message-ID: <167204d20901050848r453ab93at76b053904782be24@mail.gmail.com>

Tim,

On Mon, Jan 5, 2009 at 4:14 PM, Tim Coote <tim+rabbitmq.com at coote.org> wrote:
> I've now read a bit of the specs :-)

Yay!

Which one(s) did you read?


> amqp defines tx classes (which are not transactional in the sense of XOpen's
> XA specification) and dtx, which are.

0-10 has a DTX definition.


> I don't understand, at the moment,
> what tx really means in the context of a message passing system,

TX provides the ability to group messages in a message flow or
'stream', for managing eg visibility.



>  but I
> suspect that it's something to do with some sort of 'transactional' model
> with a message server (or whatever I call the agent that my application
> interacts with that is its interface to the messaging system): I can send
> messages to the message server with transactional semantics, but there's no
> downstream semantics. I'm not very clear on how this is a useful piece of
> functionality as I cannot see what guarantees I get for it.

It gives you a way to acknowledge an action or set of actions.



> iirc, MQSeries had similar semantics about 'guaranteed delivery', which are
> not much use, either, as you still have to put in place checks for message
> receipt by the end point.

Yes and such behaviour is not TX or DTX ;-)



> Could the two types of 'transaction'  causing some confusion?

Verily...

alexis




> Tim
>
> On 5 Jan 2009, at 15:37, Gordon Sim wrote:
>
>>
>> Matthias Radestock wrote:
>>>
>>> Gordon Sim wrote:
>>>>
>>>> A general atomicity guarantee is more basic than that though and would
>>>> in my view be valuable even if it only applied where queues involved in that
>>>> transaction were not deleted during the life of the transaction.
>>>> (Note the only way a queue should disappear due to failure is if the
>>>> broker restarts and the queue was not durable, in which case any open
>>>> transactions would be aborted).
>>>
>>> Not quite. Firstly, if queues are active entities, which they are in
>>> RabbitMQ, then they can, in principle, die due to some failure.
>>
>> I would view that as a bug.
>>
>>> Secondly, in a clustered RabbitMQ broker each queue resides on a specific
>>> node. In such a set up a transaction may take place on a connection+channel
>>> against one particular node but involve queues residing on other nodes.
>>> Those queue can disappear due to node failure or network connectivity
>>> disruption without the transacted connection+channel being dropped (since
>>> the node which holds the connection is still alive and well).
>>
>> Would RabbitMQ abort any open transaction involving the queue in that
>> case?
>>
>>
>
> Tim Coote
> tim at coote.org
> vincit veritas
>
>
>
>



From alexis.richardson at cohesiveft.com  Mon Jan  5 16:53:55 2009
From: alexis.richardson at cohesiveft.com (Alexis Richardson)
Date: Mon, 5 Jan 2009 16:53:55 +0000
Subject: [rabbitmq-discuss] Fwd: question on the faq
In-Reply-To: <49623155.10300@redhat.com>
References: <CBB16A07-BAB9-4C20-80E2-6D25ADD51AA5@coote.org>
	<167204d20901050455g6a8415c8t6a69f1b3ba8107e0@mail.gmail.com>
	<496211C9.9040504@redhat.com> <49621F7C.8090502@lshift.net>
	<49622638.2040208@redhat.com> <49622A6F.7060209@lshift.net>
	<49623155.10300@redhat.com>
Message-ID: <167204d20901050853xec74baeg485e15c74fb1a183@mail.gmail.com>

Carl,

On Mon, Jan 5, 2009 at 4:12 PM, Carl Trieloff <cctrieloff at redhat.com> wrote:
>
>> Only if the spec says that it should be, which it doesn't.
>
> that is ridiculous.

The spec could always be improved - please suggest language to prevent
interpretations that you consider to be ridiculous.



> I don't know of any transaction impl that is not
> ACID,

Well there is not one 'ACID' and there is not one 'transaction'
definition or impl, which is why there are so many long and beardy
books about the subject.

I would argue that eventual conistency (Dynamo, SimpleDB) is not ACID
for some classes of observation - roughly speaking, where you are
willing to let processes observe the system from different points.

I would also argue that compensating transactions weaken ACIDity
significantly which is why WS-* has both WS-AtomicTransaction and the
'business transaction' stuff - see my link from an earlier email,
referencing Sanjiva's comment on TSS.

alexis


> if it is not ACID what is the point? Differentiating between 1PC
> (local) and 2PC is meaningful, but both are ACID, that is the point on a
> transaction. If the txn is not ACID, why not just acknowledge the
> message, there is to difference in the failure cases between a non ACID
> txn and an ack  then.
>
> Carl.
>
> _______________________________________________
> rabbitmq-discuss mailing list
> rabbitmq-discuss at lists.rabbitmq.com
> http://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss
>



From alexis.richardson at cohesiveft.com  Mon Jan  5 16:55:54 2009
From: alexis.richardson at cohesiveft.com (Alexis Richardson)
Date: Mon, 5 Jan 2009 16:55:54 +0000
Subject: [rabbitmq-discuss] Fwd: question on the faq
In-Reply-To: <496232AB.4040502@redhat.com>
References: <CBB16A07-BAB9-4C20-80E2-6D25ADD51AA5@coote.org>
	<167204d20901050455g6a8415c8t6a69f1b3ba8107e0@mail.gmail.com>
	<496211C9.9040504@redhat.com> <496212E2.2060005@redhat.com>
	<167204d20901050735r29c9a9ebie5f3f0527601b942@mail.gmail.com>
	<496232AB.4040502@redhat.com>
Message-ID: <167204d20901050855l770443aay745999567913035f@mail.gmail.com>

Carl,

On Mon, Jan 5, 2009 at 4:17 PM, Carl Trieloff <cctrieloff at redhat.com> wrote:
>
>>
>> If queue lifecyle were defined and its operations were atomic, then
>> that would make it is easier for TX to cover all atomicity cases.
>
>... so a queue that is created
> during a TXN flow would outlive
> a TX abort as it is not a transnational resource.

Given that you are saying that a queue is not a transactional resource
here, I am not sure how we can be in apparent dispute.

However, as I said, please tell us how to improve the TX language.

alexis



From cctrieloff at redhat.com  Mon Jan  5 16:57:25 2009
From: cctrieloff at redhat.com (Carl Trieloff)
Date: Mon, 05 Jan 2009 11:57:25 -0500
Subject: [rabbitmq-discuss] Fwd: question on the faq
In-Reply-To: <FDD6BBFD-1053-4113-8EF5-55560873CDB5@coote.org>
References: <CBB16A07-BAB9-4C20-80E2-6D25ADD51AA5@coote.org>	<167204d20901050455g6a8415c8t6a69f1b3ba8107e0@mail.gmail.com>	<496211C9.9040504@redhat.com>
	<49621F7C.8090502@lshift.net>	<4962294C.9000307@redhat.com>
	<FDD6BBFD-1053-4113-8EF5-55560873CDB5@coote.org>
Message-ID: <49623BF5.8010206@redhat.com>

Tim Coote wrote:
> I've now read a bit of the specs :-)
> amqp defines tx classes (which are not transactional in the sense of  
> XOpen's XA specification) and dtx, which are.  I don't understand, at  
> the moment, what tx really means in the context of a message passing  
> system, but I suspect that it's something to do with some sort of  
> 'transactional' model with a message server (or whatever I call the  
> agent that my application interacts with that is its interface to the  
> messaging system): I can send messages to the message server with  
> transactional semantics, but there's no downstream semantics. I'm not  
> very clear on how this is a useful piece of functionality as I cannot  
> see what guarantees I get for it.
>
> iirc, MQSeries had similar semantics about 'guaranteed delivery',  
> which are not much use, either, as you still have to put in place  
> checks for message receipt by the end point.

you comment on 'guaranteed delivery'  is spot on. tx in msg system 
allows you
to ACID commit or rollback  1-N msg onto 1-N queues. or consume 1-N messages
from 1-N queues and either commit or rollback the full set in the TXN in 
a ACID
fashion.

AMQP
TX == 1PC for local transactions, not coordinated by a TM
DTX == 2PC and can be coordinated by a TM (optionally XA) if desired.

Carl.



From gsim at redhat.com  Mon Jan  5 17:20:49 2009
From: gsim at redhat.com (Gordon Sim)
Date: Mon, 05 Jan 2009 17:20:49 +0000
Subject: [rabbitmq-discuss] Fwd: question on the faq
In-Reply-To: <167204d20901050735r29c9a9ebie5f3f0527601b942@mail.gmail.com>
References: <CBB16A07-BAB9-4C20-80E2-6D25ADD51AA5@coote.org>	
	<167204d20901050455g6a8415c8t6a69f1b3ba8107e0@mail.gmail.com>	
	<496211C9.9040504@redhat.com> <496212E2.2060005@redhat.com>
	<167204d20901050735r29c9a9ebie5f3f0527601b942@mail.gmail.com>
Message-ID: <49624171.20908@redhat.com>

Alexis Richardson wrote:
> During the 0-9-1 discussions the group came to the realisation that
> either (a) TX qua 0-8/9 was more naturally seen as a generalised
> acknowledgeable group of work, 

I very much disagree that the 'group' came to any such realisation.

> or (b) that the semantics of TX needed
> to be amended.  Such semantic amendments were of course out of scope
> for 0-9-1, *and* with 1.0 'in view' for 2009, *and* absent a full
> account of failure in 0-8/9, the former view (a) prevailed.  So 0-9-1
> has its own view of what a TX transaction is.

Again, my view is somewhat different. I think the text describing the tx 
semantics in 0-9 was generally viewed as inadequate (and in my 
particular view also confusing).

Addressing all corner cases (e.g. interactions with immediate and 
mandatory flags) was felt to be out of the scope of the 0-9-1 corrections.

A clarification to the text was proposed that happened to make the 
atomicity guarantee explicit. This wasn't meant to be a change, merely a 
clarification.  However, since the RabbitMQ teams interpretation of the 
specification (and again I'll be clear that it was a legitimate 
intepretation given only the text in the spec) would have been 
invalidated by such a change, it was again felt to be out of scope.

There was never any agreement that a tx transaction was *not* atomic, 
only a failure to agree that it was which resulted in the text being 
left unchanged in that regard.

> More generally, it is dangerous to assume that a messaging system not
> subject to full XA type constraints is like a database in every way.
> In 0-8/9 AMQP, TX can only guarantee atomicity in the presence of
> failures if every broker operation is a transaction in the same sense
> as in a database.  So for example in 0-8/9, individual message
> delivery is *transactional* and *atomic*, but queue failure is not
> guaranteed to be so because the queue lifecycle is simply *undefined*
> in 0-8/9.

I don't agree the queue lifecycle is undefined in 0-9 (though perhaps I 
misunderstand what you mean there): it starts with the first 
queue-declare and ends with a queue-delete. Auto-deleted queues 
certainly complicate that slightly, but not so far as to make the 
lifecycle undefined.

While I agree that clarifying the expected behaviour when a queue 
involved in a transaction is deleted before the transaction commits 
would be valuable (i.e. are the relevant ops simply ignored, or does the 
deleted queue force the transaction to be aborted), I don't agree that 
the tx class could not quite simply include a statement on the atomicity 
without that however.



From matthias at lshift.net  Mon Jan  5 17:16:42 2009
From: matthias at lshift.net (Matthias Radestock)
Date: Mon, 05 Jan 2009 17:16:42 +0000
Subject: [rabbitmq-discuss] Fwd: question on the faq
In-Reply-To: <167204d20901050830p3797640oa4d72266da028a82@mail.gmail.com>
References: <CBB16A07-BAB9-4C20-80E2-6D25ADD51AA5@coote.org>	<167204d20901050455g6a8415c8t6a69f1b3ba8107e0@mail.gmail.com>	<7222C973-08E5-494E-8FDD-1F35808F4C56@coote.org>
	<167204d20901050830p3797640oa4d72266da028a82@mail.gmail.com>
Message-ID: <4962407A.2040708@lshift.net>

Alexis Richardson wrote:
> In fact one can take two different views of transactions in the sense
> of AMQP TX:
> 
> 1. Operations are operations on *resources* - so more like databases
> (Jim Gray et al.).
> 
> 2. Operations are about control of a *stream*.

I reckon this distinction is at the heart of some of the confusion on 
this issue.

RabbitMQ is firmly in the second camp. And it *is* ACID under that 
interpretation but not the first (my earlier posts explain in what way 
it isn't).

And because ...

> Routing to a queue is acceptable streaming behaviour.  So
> if the queue fails after being routed to, then it is not unreasonable
> to treat something as having 'happened'.

... arguably, to be fully consistent with the second interpretation a 
tx.commit (and rollback) should *succeed* even if some of the queues to 
which messages/acks were delivered disappears. RabbitMQ's tx.commit 
currently returns an error for this, which is something we may want to 
change.


Matthias.



From gsim at redhat.com  Mon Jan  5 17:29:18 2009
From: gsim at redhat.com (Gordon Sim)
Date: Mon, 05 Jan 2009 17:29:18 +0000
Subject: [rabbitmq-discuss] Fwd: question on the faq
In-Reply-To: <49622BAF.10702@lshift.net>
References: <CBB16A07-BAB9-4C20-80E2-6D25ADD51AA5@coote.org>	<167204d20901050455g6a8415c8t6a69f1b3ba8107e0@mail.gmail.com>	<496211C9.9040504@redhat.com>
	<49621F7C.8090502@lshift.net> <4962294C.9000307@redhat.com>
	<49622BAF.10702@lshift.net>
Message-ID: <4962436E.6080900@redhat.com>

Matthias Radestock wrote:
> Gordon Sim wrote:
>> Matthias Radestock wrote:
>>> if queues are active entities, which they are in RabbitMQ, then they 
>>> can, in principle, die due to some failure. 
>>
>> I would view that as a bug.
> 
> Any failure of a queue process is indeed a bug, but the interesting 
> question is how the system deals with such failures. In RabbitMQ they 
> will cause any tx involving that queue to abort.

That is the ideal approach in my view.

>>> Secondly, in a clustered RabbitMQ broker each queue resides on a 
>>> specific node. In such a set up a transaction may take place on a 
>>> connection+channel against one particular node but involve queues 
>>> residing on other nodes. Those queue can disappear due to node 
>>> failure or network connectivity disruption without the transacted 
>>> connection+channel being dropped (since the node which holds the 
>>> connection is still alive and well).
>>
>> Would RabbitMQ abort any open transaction involving the queue in that 
>> case?
> 
> Yes, but aborts in RabbitMQ aren't atomic, i.e. any actions on other 
> queues that are part of the same transactions may still get committed.

Understood, and that was the point on which I entered the conversation 
i.e. there is no 'all or nothing' guarantee.



From gsim at redhat.com  Mon Jan  5 17:37:01 2009
From: gsim at redhat.com (Gordon Sim)
Date: Mon, 05 Jan 2009 17:37:01 +0000
Subject: [rabbitmq-discuss] Fwd: question on the faq
In-Reply-To: <FDD6BBFD-1053-4113-8EF5-55560873CDB5@coote.org>
References: <CBB16A07-BAB9-4C20-80E2-6D25ADD51AA5@coote.org>	<167204d20901050455g6a8415c8t6a69f1b3ba8107e0@mail.gmail.com>
	<496211C9.9040504@redhat.com> <49621F7C.8090502@lshift.net>
	<4962294C.9000307@redhat.com>
	<FDD6BBFD-1053-4113-8EF5-55560873CDB5@coote.org>
Message-ID: <4962453D.1010605@redhat.com>

Tim Coote wrote:
> I've now read a bit of the specs :-)
> amqp defines tx classes (which are not transactional in the sense of 
> XOpen's XA specification) and dtx, which are.  I don't understand, at 
> the moment, what tx really means in the context of a message passing 
> system, but I suspect that it's something to do with some sort of 
> 'transactional' model with a message server (or whatever I call the 
> agent that my application interacts with that is its interface to the 
> messaging system): I can send messages to the message server with 
> transactional semantics, but there's no downstream semantics. I'm not 
> very clear on how this is a useful piece of functionality as I cannot 
> see what guarantees I get for it.

As an example, imagine a task queue to which jobs are submitted. A 
'worker' takes a message from this queue, performs some processing and 
then publishes a response to a specified reply queue.

If this happens under an atomic transaction, then either the response is 
enqueued *and* the task it corresponds to is dequeued or the task 
remains on the queue to be reprocessed and the response is discarded.

That is my view of what the tx class is for and one example of why it 
can be useful.

All dtx adds to the picture is allowing that transaction to also include 
operations on other resources. E.g. in the example above it might be 
that the job involves some updates to the database and these can be made 
atomic w.r.t the enqueue of the response and the dequeue of the job itself.




From 0x6e6562 at gmail.com  Mon Jan  5 17:57:26 2009
From: 0x6e6562 at gmail.com (Ben Hood)
Date: Mon, 5 Jan 2009 17:57:26 +0000
Subject: [rabbitmq-discuss] Fwd: question on the faq
In-Reply-To: <FDD6BBFD-1053-4113-8EF5-55560873CDB5@coote.org>
References: <CBB16A07-BAB9-4C20-80E2-6D25ADD51AA5@coote.org>
	<167204d20901050455g6a8415c8t6a69f1b3ba8107e0@mail.gmail.com>
	<496211C9.9040504@redhat.com> <49621F7C.8090502@lshift.net>
	<4962294C.9000307@redhat.com>
	<FDD6BBFD-1053-4113-8EF5-55560873CDB5@coote.org>
Message-ID: <269388e30901050957r6d35c333v3c761f474932fc83@mail.gmail.com>

Tim,

On Mon, Jan 5, 2009 at 4:14 PM, Tim Coote <tim+rabbitmq.com at coote.org> wrote:
> messaging system): I can send messages to the message server with
> transactional semantics, but there's no downstream semantics. I'm not
> very clear on how this is a useful piece of functionality as I cannot
> see what guarantees I get for it.

In addition to Gordon's example, imagine a scenario where you are
streaming a large XML document and publishing the fragments as
individual messages to a downstream system. You may have some
requirement to be able to recall all of the messages that you have
already forwarded, if for example, you are midway through the
processing and you encounter an invalid item.

HTH,

Ben



From cctrieloff at redhat.com  Mon Jan  5 17:58:59 2009
From: cctrieloff at redhat.com (Carl Trieloff)
Date: Mon, 05 Jan 2009 12:58:59 -0500
Subject: [rabbitmq-discuss] Fwd: question on the faq
In-Reply-To: <167204d20901050855l770443aay745999567913035f@mail.gmail.com>
References: <CBB16A07-BAB9-4C20-80E2-6D25ADD51AA5@coote.org>	
	<167204d20901050455g6a8415c8t6a69f1b3ba8107e0@mail.gmail.com>	
	<496211C9.9040504@redhat.com> <496212E2.2060005@redhat.com>	
	<167204d20901050735r29c9a9ebie5f3f0527601b942@mail.gmail.com>	
	<496232AB.4040502@redhat.com>
	<167204d20901050855l770443aay745999567913035f@mail.gmail.com>
Message-ID: <49624A63.7060002@redhat.com>

Alexis Richardson wrote:
> Carl,
>
> On Mon, Jan 5, 2009 at 4:17 PM, Carl Trieloff <cctrieloff at redhat.com> wrote:
>   
>>> If queue lifecyle were defined and its operations were atomic, then
>>> that would make it is easier for TX to cover all atomicity cases.
>>>       
>> ... so a queue that is created
>> during a TXN flow would outlive
>> a TX abort as it is not a transnational resource.
>>     
>
> Given that you are saying that a queue is not a transactional resource
> here, 

let me be specific, AMQP today does not provide a way to enlist a 
queue's creation or deletion into
a txn context. This in no way affects the ability to provide ACID 
transactional gaurentees on messages.

It does however imply some implementation details that need to be taken 
care of.
Carl.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20090105/e77109ac/attachment.htm 

From gsim at redhat.com  Mon Jan  5 20:51:09 2009
From: gsim at redhat.com (Gordon Sim)
Date: Mon, 05 Jan 2009 20:51:09 +0000
Subject: [rabbitmq-discuss] Fwd: question on the faq
In-Reply-To: <4962407A.2040708@lshift.net>
References: <CBB16A07-BAB9-4C20-80E2-6D25ADD51AA5@coote.org>	<167204d20901050455g6a8415c8t6a69f1b3ba8107e0@mail.gmail.com>	<7222C973-08E5-494E-8FDD-1F35808F4C56@coote.org>	<167204d20901050830p3797640oa4d72266da028a82@mail.gmail.com>
	<4962407A.2040708@lshift.net>
Message-ID: <496272BD.9080009@redhat.com>

Matthias Radestock wrote:
> Alexis Richardson wrote:
>> In fact one can take two different views of transactions in the sense
>> of AMQP TX:
>>
>> 1. Operations are operations on *resources* - so more like databases
>> (Jim Gray et al.).
>>
>> 2. Operations are about control of a *stream*.
> 
> I reckon this distinction is at the heart of some of the confusion on 
> this issue.
> 
> RabbitMQ is firmly in the second camp. And it *is* ACID under that 
> interpretation 

I'm not sure I follow you. If, as I understood your earlier comment to 
imply, the various transactional operations cannot be atomically 
aborted, it would seem to me that it is not ACID under either 
interpretation.

E.g. if a transaction where I publish a message and acknowledge another 
is aborted, is it possible that the published message is delivered to a 
subscriber of some matching queue and the acknowledged message is left 
on the queue and is subsequently redelivered to another subscriber? If 
so it is not atomic.

Personally I'm not convinced the stream/resource distinction alters the 
issue which for me relates to the success of operations. A successful 
publish operation causes a message to become available for delivery to 
subscribers on all matching queues; a successful ack operation prevents 
the referenced message from being redelivered. Atomicity means that 
either all the are 'successful', or none of them have any effect.

> And because ...
> 
>> Routing to a queue is acceptable streaming behaviour.  So
>> if the queue fails after being routed to, then it is not unreasonable
>> to treat something as having 'happened'.

A bug (or indeed some hardware failure) may prevent a message from being 
accepted by the queue. Thats a different case from the queue not 
existing. In the current AMQP routing model publishing a message for 
which no binding matches is not an error, but the failure or a bound 
queue to accept a message routed to it is in my view an error and should 
be signaled as such.

> ... arguably, to be fully consistent with the second interpretation a 
> tx.commit (and rollback) should *succeed* even if some of the queues to 
> which messages/acks were delivered disappears. RabbitMQ's tx.commit 
> currently returns an error for this, which is something we may want to 
> change.

If the queue is explicitly deleted by the application, I think thats 
fair enough. If it 'disappears' due to some failure condition I think 
that should cause an error which would in turn abort the transaction.



From matthias at lshift.net  Mon Jan  5 21:38:11 2009
From: matthias at lshift.net (Matthias Radestock)
Date: Mon, 05 Jan 2009 21:38:11 +0000
Subject: [rabbitmq-discuss] Fwd: question on the faq
In-Reply-To: <496272BD.9080009@redhat.com>
References: <CBB16A07-BAB9-4C20-80E2-6D25ADD51AA5@coote.org>	<167204d20901050455g6a8415c8t6a69f1b3ba8107e0@mail.gmail.com>	<7222C973-08E5-494E-8FDD-1F35808F4C56@coote.org>	<167204d20901050830p3797640oa4d72266da028a82@mail.gmail.com>
	<4962407A.2040708@lshift.net> <496272BD.9080009@redhat.com>
Message-ID: <49627DC3.3070508@lshift.net>

Gordon,
Gordon,

Gordon Sim wrote:
> I'm not sure I follow you. If, as I understood your earlier comment to 
> imply, the various transactional operations cannot be atomically 
> aborted, it would seem to me that it is not ACID under either 
> interpretation.
> 
> E.g. if a transaction where I publish a message and acknowledge another 
> is aborted, is it possible that the published message is delivered to a 
> subscriber of some matching queue and the acknowledged message is left 
> on the queue and is subsequently redelivered to another subscriber? If 
> so it is not atomic.

The above cannot happen when the abort was caused by a fault or 
tx.rollback. It can only happen in the event of node or communication 
failure in a clustered set up when performing a tx.commit, though 
arguably the error in that case is signalling a breakdown of the tx 
mechanics ("all bets are off") rather than a controlled tx abort.

> Personally I'm not convinced the stream/resource distinction alters the 
> issue which for me relates to the success of operations. A successful 
> publish operation causes a message to become available for delivery to 
> subscribers on all matching queues; a successful ack operation prevents 
> the referenced message from being redelivered. Atomicity means that 
> either all the are 'successful', or none of them have any effect.

The spec has nothing to say regarding the semantics of "successful 
publish", except in regard to a few obvious cases (e.g. non-existence of 
the exchange) and in the context of the mandatory/immediate flags, which 
don't actually cause the publish to fail (a basic.return is not a failure).

>> And because ...
>>
>>> Routing to a queue is acceptable streaming behaviour.  So
>>> if the queue fails after being routed to, then it is not unreasonable
>>> to treat something as having 'happened'.
> 
> A bug (or indeed some hardware failure) may prevent a message from being 
> accepted by the queue. Thats a different case from the queue not 
> existing. In the current AMQP routing model publishing a message for 
> which no binding matches is not an error, but the failure or a bound 
> queue to accept a message routed to it is in my view an error and should 
> be signaled as such.

AMQP does not define the latter case as an error. We can debate whether 
it should, but in RabbitMQ we decided that the disappearance of a queue 
- for whatever reason, including as a result of some fault during the 
handling a basic.publish - does not result in a failure of ordinary 
publishes, though for mandatory/immediate publishes a basic.return will 
be issued if none of the bound queues accept the message.

>> ... arguably, to be fully consistent with the second interpretation a 
>> tx.commit (and rollback) should *succeed* even if some of the queues 
>> to which messages/acks were delivered disappears. RabbitMQ's tx.commit 
>> currently returns an error for this, which is something we may want to 
>> change.
> 
> If the queue is explicitly deleted by the application, I think thats 
> fair enough. If it 'disappears' due to some failure condition I think 
> that should cause an error which would in turn abort the transaction.

That's certainly a valid point of view. However, there is also a case 
for saying that queues are of no concern to publishers, only consumers, 
since publishers never address them directly. One problem with the spec 
is that there currently is no way for *consumers* to be notified of the 
death/deletion of a queue, which imho would be far more useful.


Matthias.



From gsim at redhat.com  Mon Jan  5 22:18:18 2009
From: gsim at redhat.com (Gordon Sim)
Date: Mon, 05 Jan 2009 22:18:18 +0000
Subject: [rabbitmq-discuss] Fwd: question on the faq
In-Reply-To: <49627DC3.3070508@lshift.net>
References: <CBB16A07-BAB9-4C20-80E2-6D25ADD51AA5@coote.org>	<167204d20901050455g6a8415c8t6a69f1b3ba8107e0@mail.gmail.com>	<7222C973-08E5-494E-8FDD-1F35808F4C56@coote.org>	<167204d20901050830p3797640oa4d72266da028a82@mail.gmail.com>
	<4962407A.2040708@lshift.net> <496272BD.9080009@redhat.com>
	<49627DC3.3070508@lshift.net>
Message-ID: <4962872A.7050807@redhat.com>

Matthias Radestock wrote:
> Gordon,
> Gordon,
> 
> Gordon Sim wrote:
>> I'm not sure I follow you. If, as I understood your earlier comment to 
>> imply, the various transactional operations cannot be atomically 
>> aborted, it would seem to me that it is not ACID under either 
>> interpretation.
>>
>> E.g. if a transaction where I publish a message and acknowledge 
>> another is aborted, is it possible that the published message is 
>> delivered to a subscriber of some matching queue and the acknowledged 
>> message is left on the queue and is subsequently redelivered to 
>> another subscriber? If so it is not atomic.
> 
> The above cannot happen when the abort was caused by a fault or 
> tx.rollback. It can only happen in the event of node or communication 
> failure in a clustered set up when performing a tx.commit, though 
> arguably the error in that case is signalling a breakdown of the tx 
> mechanics ("all bets are off") rather than a controlled tx abort.


> 
>> Personally I'm not convinced the stream/resource distinction alters 
>> the issue which for me relates to the success of operations. A 
>> successful publish operation causes a message to become available for 
>> delivery to subscribers on all matching queues; a successful ack 
>> operation prevents the referenced message from being redelivered. 
>> Atomicity means that either all the are 'successful', or none of them 
>> have any effect.
> 
> The spec has nothing to say regarding the semantics of "successful 
> publish", except in regard to a few obvious cases (e.g. non-existence of 
> the exchange) and in the context of the mandatory/immediate flags, which 
> don't actually cause the publish to fail (a basic.return is not a failure).

I'm not sure I agree. The semantics of an exchange are clearly defined 
as routing a message to any queue with a matching binding. Failure to do 
so is in my view fairly obviously 'unsuccessful'. Not finding a matching 
binding is a separate case of course and is not an error.

>>> And because ...
>>>
>>>> Routing to a queue is acceptable streaming behaviour.  So
>>>> if the queue fails after being routed to, then it is not unreasonable
>>>> to treat something as having 'happened'.
>>
>> A bug (or indeed some hardware failure) may prevent a message from 
>> being accepted by the queue. Thats a different case from the queue not 
>> existing. In the current AMQP routing model publishing a message for 
>> which no binding matches is not an error, but the failure or a bound 
>> queue to accept a message routed to it is in my view an error and 
>> should be signaled as such.
> 
> AMQP does not define the latter case as an error. We can debate whether 
> it should, but in RabbitMQ we decided that the disappearance of a queue 
> - for whatever reason, including as a result of some fault during the 
> handling a basic.publish - does not result in a failure of ordinary 
> publishes, though for mandatory/immediate publishes a basic.return will 
> be issued if none of the bound queues accept the message.

I don't believe it is valid for a queue to disappear due to some 
internal fault. That to me is a bug and outside the scope of the 
specification.

>>> ... arguably, to be fully consistent with the second interpretation a 
>>> tx.commit (and rollback) should *succeed* even if some of the queues 
>>> to which messages/acks were delivered disappears. RabbitMQ's 
>>> tx.commit currently returns an error for this, which is something we 
>>> may want to change.
>>
>> If the queue is explicitly deleted by the application, I think thats 
>> fair enough. If it 'disappears' due to some failure condition I think 
>> that should cause an error which would in turn abort the transaction.
> 
> That's certainly a valid point of view. However, there is also a case 
> for saying that queues are of no concern to publishers, only consumers, 
> since publishers never address them directly. 

True, but a system as a whole needs to be able to rely on the semantics 
of an exchange and the lifecycle of the queue. I think what confuses me 
is the notion of a queue vanishing due to some unspecified error, and I 
would feel very uncomfortable having the broker simply continue without 
signaling that potentially catastrophic violation of the specified 
semantics of a broker.





From matthias at lshift.net  Mon Jan  5 22:36:53 2009
From: matthias at lshift.net (Matthias Radestock)
Date: Mon, 05 Jan 2009 22:36:53 +0000
Subject: [rabbitmq-discuss] Fwd: question on the faq
In-Reply-To: <4962872A.7050807@redhat.com>
References: <CBB16A07-BAB9-4C20-80E2-6D25ADD51AA5@coote.org>	<167204d20901050455g6a8415c8t6a69f1b3ba8107e0@mail.gmail.com>	<7222C973-08E5-494E-8FDD-1F35808F4C56@coote.org>	<167204d20901050830p3797640oa4d72266da028a82@mail.gmail.com>	<4962407A.2040708@lshift.net>
	<496272BD.9080009@redhat.com>	<49627DC3.3070508@lshift.net>
	<4962872A.7050807@redhat.com>
Message-ID: <49628B85.8030706@lshift.net>

Gordon,

Gordon Sim wrote:
> I don't believe it is valid for a queue to disappear due to some 
> internal fault. That to me is a bug and outside the scope of the 
> specification.

It's certainly a bug. The question is how to deal with it. I would 
expect to see some errors recorded in the logs (which RabbitMQ does), 
some admin to be informed, etc, etc, which indeed are all things outside 
the protocol spec. When it comes to raising protocol errors though, if 
the spec doesn't specify the precise conditions under which such errors 
are signalled then it's up to implementation choice.

>> there is also a case 
>> for saying that queues are of no concern to publishers, only 
>> consumers, since publishers never address them directly. 
> 
> True, but a system as a whole needs to be able to rely on the semantics 
> of an exchange and the lifecycle of the queue. I think what confuses me 
> is the notion of a queue vanishing due to some unspecified error, and I 
> would feel very uncomfortable having the broker simply continue without 
> signaling that potentially catastrophic violation of the specified 
> semantics of a broker.

Perhaps, but who should this condition be signalled to? I'd argue the 
*consumers* should be told about it. After all, the queue may vanish 
long after anyone has published a message to it. Conversely, if nobody 
ever tries to consume messages from the queue then the fact that it once 
existed and then vanished is of little interest to anybody.

I suppose one way to handle this inside the current spec would be to 
signal a channel error on all channels with subscribers to a queue that 
is dying an unexpected death. What do you reckon?


Matthias.



From sustrik at imatix.com  Mon Jan  5 23:45:42 2009
From: sustrik at imatix.com (Martin Sustrik)
Date: Tue, 06 Jan 2009 00:45:42 +0100
Subject: [rabbitmq-discuss] Fwd: question on the faq
In-Reply-To: <49628B85.8030706@lshift.net>
References: <CBB16A07-BAB9-4C20-80E2-6D25ADD51AA5@coote.org>	<167204d20901050455g6a8415c8t6a69f1b3ba8107e0@mail.gmail.com>	<7222C973-08E5-494E-8FDD-1F35808F4C56@coote.org>	<167204d20901050830p3797640oa4d72266da028a82@mail.gmail.com>	<4962407A.2040708@lshift.net>	<496272BD.9080009@redhat.com>	<49627DC3.3070508@lshift.net>	<4962872A.7050807@redhat.com>
	<49628B85.8030706@lshift.net>
Message-ID: <49629BA6.7040608@imatix.com>


>> True, but a system as a whole needs to be able to rely on the semantics 
>> of an exchange and the lifecycle of the queue. I think what confuses me 
>> is the notion of a queue vanishing due to some unspecified error, and I 
>> would feel very uncomfortable having the broker simply continue without 
>> signaling that potentially catastrophic violation of the specified 
>> semantics of a broker.

Sorry if I haven't followed the thread closely enough, but do I 
understand correctly that what you are discussing is atomicity guarantee 
in the case where there is a bug in the broker implementation?

I would say you have no guarantees whatsoever if there is a bug in the code.

Martin



From gsim at redhat.com  Tue Jan  6 10:02:17 2009
From: gsim at redhat.com (Gordon Sim)
Date: Tue, 06 Jan 2009 10:02:17 +0000
Subject: [rabbitmq-discuss] Fwd: question on the faq
In-Reply-To: <49627DC3.3070508@lshift.net>
References: <CBB16A07-BAB9-4C20-80E2-6D25ADD51AA5@coote.org>	<167204d20901050455g6a8415c8t6a69f1b3ba8107e0@mail.gmail.com>	<7222C973-08E5-494E-8FDD-1F35808F4C56@coote.org>	<167204d20901050830p3797640oa4d72266da028a82@mail.gmail.com>
	<4962407A.2040708@lshift.net> <496272BD.9080009@redhat.com>
	<49627DC3.3070508@lshift.net>
Message-ID: <49632C29.10309@redhat.com>

Matthias Radestock wrote:
> Gordon Sim wrote:
>> I'm not sure I follow you. If, as I understood your earlier comment to 
>> imply, the various transactional operations cannot be atomically 
>> aborted, it would seem to me that it is not ACID under either 
>> interpretation.
>>
>> E.g. if a transaction where I publish a message and acknowledge 
>> another is aborted, is it possible that the published message is 
>> delivered to a subscriber of some matching queue and the acknowledged 
>> message is left on the queue and is subsequently redelivered to 
>> another subscriber? If so it is not atomic.
> 
> The above cannot happen when the abort was caused by a fault or 
> tx.rollback. It can only happen in the event of node or communication 
> failure in a clustered set up when performing a tx.commit, though 
> arguably the error in that case is signalling a breakdown of the tx 
> mechanics ("all bets are off") rather than a controlled tx abort.

In the case of a single node, if that node is killed in the middle of 
processing a tx-commit and then restarted, are there any atomicity 
guarantees? Could some of the operations be completed with others being 
lost?



From gsim at redhat.com  Tue Jan  6 10:02:25 2009
From: gsim at redhat.com (Gordon Sim)
Date: Tue, 06 Jan 2009 10:02:25 +0000
Subject: [rabbitmq-discuss] Fwd: question on the faq
In-Reply-To: <49629BA6.7040608@imatix.com>
References: <CBB16A07-BAB9-4C20-80E2-6D25ADD51AA5@coote.org>	<167204d20901050455g6a8415c8t6a69f1b3ba8107e0@mail.gmail.com>	<7222C973-08E5-494E-8FDD-1F35808F4C56@coote.org>	<167204d20901050830p3797640oa4d72266da028a82@mail.gmail.com>	<4962407A.2040708@lshift.net>	<496272BD.9080009@redhat.com>	<49627DC3.3070508@lshift.net>	<4962872A.7050807@redhat.com>
	<49628B85.8030706@lshift.net> <49629BA6.7040608@imatix.com>
Message-ID: <49632C31.7010401@redhat.com>

Martin Sustrik wrote:
> 
>>> True, but a system as a whole needs to be able to rely on the 
>>> semantics of an exchange and the lifecycle of the queue. I think what 
>>> confuses me is the notion of a queue vanishing due to some 
>>> unspecified error, and I would feel very uncomfortable having the 
>>> broker simply continue without signaling that potentially 
>>> catastrophic violation of the specified semantics of a broker.
> 
> Sorry if I haven't followed the thread closely enough, but do I 
> understand correctly that what you are discussing is atomicity guarantee 
> in the case where there is a bug in the broker implementation?

No, not really. We have gone off on something of a tangent here, 
discussing the notion of a queue disappearing from a broker due to some 
bug, without it being deleted due to explicit request (or cancellation 
of last subscriber in the case of an auto-deleted queue).

> I would say you have no guarantees whatsoever if there is a bug in the 
> code.

I agree.



From matthias at lshift.net  Tue Jan  6 10:17:31 2009
From: matthias at lshift.net (Matthias Radestock)
Date: Tue, 06 Jan 2009 10:17:31 +0000
Subject: [rabbitmq-discuss] Fwd: question on the faq
In-Reply-To: <49632C29.10309@redhat.com>
References: <CBB16A07-BAB9-4C20-80E2-6D25ADD51AA5@coote.org>	<167204d20901050455g6a8415c8t6a69f1b3ba8107e0@mail.gmail.com>	<7222C973-08E5-494E-8FDD-1F35808F4C56@coote.org>	<167204d20901050830p3797640oa4d72266da028a82@mail.gmail.com>	<4962407A.2040708@lshift.net>
	<496272BD.9080009@redhat.com>	<49627DC3.3070508@lshift.net>
	<49632C29.10309@redhat.com>
Message-ID: <49632FBB.6070605@lshift.net>

Gordon Sim wrote:
> In the case of a single node, if that node is killed in the middle of 
> processing a tx-commit and then restarted, are there any atomicity 
> guarantees? Could some of the operations be completed with others being 
> lost?

The latter.

Matthias.



From gsim at redhat.com  Tue Jan  6 10:39:00 2009
From: gsim at redhat.com (Gordon Sim)
Date: Tue, 06 Jan 2009 10:39:00 +0000
Subject: [rabbitmq-discuss] Fwd: question on the faq
In-Reply-To: <49628B85.8030706@lshift.net>
References: <CBB16A07-BAB9-4C20-80E2-6D25ADD51AA5@coote.org>	<167204d20901050455g6a8415c8t6a69f1b3ba8107e0@mail.gmail.com>	<7222C973-08E5-494E-8FDD-1F35808F4C56@coote.org>	<167204d20901050830p3797640oa4d72266da028a82@mail.gmail.com>	<4962407A.2040708@lshift.net>
	<496272BD.9080009@redhat.com>	<49627DC3.3070508@lshift.net>
	<4962872A.7050807@redhat.com> <49628B85.8030706@lshift.net>
Message-ID: <496334C4.905@redhat.com>

Matthias Radestock wrote:
> Gordon,
> 
> Gordon Sim wrote:
>> I don't believe it is valid for a queue to disappear due to some 
>> internal fault. That to me is a bug and outside the scope of the 
>> specification.
> 
> It's certainly a bug. The question is how to deal with it. I would 
> expect to see some errors recorded in the logs (which RabbitMQ does), 
> some admin to be informed, etc, etc, which indeed are all things outside 
> the protocol spec. When it comes to raising protocol errors though, if 
> the spec doesn't specify the precise conditions under which such errors 
> are signalled then it's up to implementation choice.

I think internal-error is a good choice for notifying a client of an 
error caused by a bug.

>>> there is also a case for saying that queues are of no concern to 
>>> publishers, only consumers, since publishers never address them 
>>> directly. 
>>
>> True, but a system as a whole needs to be able to rely on the 
>> semantics of an exchange and the lifecycle of the queue. I think what 
>> confuses me is the notion of a queue vanishing due to some unspecified 
>> error, and I would feel very uncomfortable having the broker simply 
>> continue without signaling that potentially catastrophic violation of 
>> the specified semantics of a broker.
> 
> Perhaps, but who should this condition be signalled to? I'd argue the 
> *consumers* should be told about it. After all, the queue may vanish 
> long after anyone has published a message to it. Conversely, if nobody 
> ever tries to consume messages from the queue then the fact that it once 
> existed and then vanished is of little interest to anybody.

Notifying consumers is all well and good. However there may not be any 
consumers at the point the message is published. An important role of 
the queue is to accept responsibility for the message from the 
publishing client until that can be transfered onto the receiving client.

The whole concept of the queue vanishing is a bit alien to me and seems 
to make reasoning about reliability more difficult. However, I've 
strayed from my original motivation from joining the thread which was 
simply curiousity about the atomicity guarantees in RabbitMQ. Thanks for 
all the clarifications and insights!




From gsim at redhat.com  Tue Jan  6 10:41:31 2009
From: gsim at redhat.com (Gordon Sim)
Date: Tue, 06 Jan 2009 10:41:31 +0000
Subject: [rabbitmq-discuss] Fwd: question on the faq
In-Reply-To: <49632FBB.6070605@lshift.net>
References: <CBB16A07-BAB9-4C20-80E2-6D25ADD51AA5@coote.org>	<167204d20901050455g6a8415c8t6a69f1b3ba8107e0@mail.gmail.com>	<7222C973-08E5-494E-8FDD-1F35808F4C56@coote.org>	<167204d20901050830p3797640oa4d72266da028a82@mail.gmail.com>	<4962407A.2040708@lshift.net>
	<496272BD.9080009@redhat.com>	<49627DC3.3070508@lshift.net>
	<49632C29.10309@redhat.com> <49632FBB.6070605@lshift.net>
Message-ID: <4963355B.9060603@redhat.com>

Matthias Radestock wrote:
> Gordon Sim wrote:
>> In the case of a single node, if that node is killed in the middle of 
>> processing a tx-commit and then restarted, are there any atomicity 
>> guarantees? Could some of the operations be completed with others 
>> being lost?
> 
> The latter.

So to my mind that's not atomic whether your prefer viewing the 
operations as acting on resources or streams.



From tim+rabbitmq.com at coote.org  Tue Jan  6 10:42:26 2009
From: tim+rabbitmq.com at coote.org (Tim Coote)
Date: Tue, 6 Jan 2009 10:42:26 +0000
Subject: [rabbitmq-discuss] Fwd: question on the faq
In-Reply-To: <49623BF5.8010206@redhat.com>
References: <CBB16A07-BAB9-4C20-80E2-6D25ADD51AA5@coote.org>	<167204d20901050455g6a8415c8t6a69f1b3ba8107e0@mail.gmail.com>	<496211C9.9040504@redhat.com>
	<49621F7C.8090502@lshift.net>	<4962294C.9000307@redhat.com>
	<FDD6BBFD-1053-4113-8EF5-55560873CDB5@coote.org>
	<49623BF5.8010206@redhat.com>
Message-ID: <F2592FEF-F14D-49B6-B5ED-C2F748E4BC0C@coote.org>

I'm getting the sense that as far as AMQP is concerned, the word  
Transaction is not helpful as it sort of implies similar semantics to  
the work on ACID semantics for programming models (TP monitors, DBMS,  
SQL, X/Open's XA, etc), which are concerned with the properties of the  
control of the operation (which seems to be what AMQP is mostly  
concerned about) AND the guarantees on the contents of the operation,  
which seems to me to be considered out of scope for AMQP - that's why  
XA talks about Resource Managers: it's concerned about the integrity  
and correct state transitions of resources that are managed.  I can  
see a strong revenue stream in explaining to clients that their  
proposed application architecture is broken because they've assumed  
that Transaction in AMQP is comparable to their understanding from  
using TP monitors, or even just API guarantees.

I can see value in what I think AMQP is trying to achieve (based on a  
cursory skimming of the 10 spec and this discussion), but it needs to  
be clear to the app architects that they will need to layer on top of  
the protocol a whole extra chunk of app to do the reconciliation of  
state between the systems, which can largely be avoided with  
(traditional) transactional systems.

Using what I'd call the normal semantics of a transaction, I'd define  
a unit of work that booked all of my components of my holiday in one  
block and I'd know whether everything were ok or not. It also makes it  
very obvious that I need to think about the legal contracts that I'm  
'committing' to so that I can form suitable compensating transactions.  
Using the AQMP definition, all I know is that the booking requests  
were delivered, and possibly not even that they'd all been delivered.

tx and dtx classes have value (I still need to get to the bottom of  
what). However, their naming - especially if dtx is defined in terms  
of XA spec, but doesn't cover the content of messages, is going to  
create an adoption barrier to the technology.  Have a scan of XA and  
DTP and see if you agree.  (Section 2.2 et seq - I won't reproduce it  
here: it's short, but doesn't format well when I drop it into an email).

Anyway, that's my three ha'porth.

Tim

On 5 Jan 2009, at 16:57, Carl Trieloff wrote:

>
> Tim Coote wrote:
>> I've now read a bit of the specs :-)
>> amqp defines tx classes (which are not transactional in the sense  
>> of  XOpen's XA specification) and dtx, which are.  I don't  
>> understand, at  the moment, what tx really means in the context of  
>> a message passing  system, but I suspect that it's something to do  
>> with some sort of  'transactional' model with a message server (or  
>> whatever I call the  agent that my application interacts with that  
>> is its interface to the  messaging system): I can send messages to  
>> the message server with  transactional semantics, but there's no  
>> downstream semantics. I'm not  very clear on how this is a useful  
>> piece of functionality as I cannot  see what guarantees I get for it.
>>
>> iirc, MQSeries had similar semantics about 'guaranteed delivery',   
>> which are not much use, either, as you still have to put in place   
>> checks for message receipt by the end point.
>
> you comment on 'guaranteed delivery'  is spot on. tx in msg system  
> allows you
> to ACID commit or rollback  1-N msg onto 1-N queues. or consume 1-N  
> messages
> from 1-N queues and either commit or rollback the full set in the  
> TXN in a ACID
> fashion.
>
> AMQP
> TX == 1PC for local transactions, not coordinated by a TM
> DTX == 2PC and can be coordinated by a TM (optionally XA) if desired.
>
> Carl.
>

Tim Coote
tim at coote.org
vincit veritas






From matthias at lshift.net  Tue Jan  6 10:49:05 2009
From: matthias at lshift.net (Matthias Radestock)
Date: Tue, 06 Jan 2009 10:49:05 +0000
Subject: [rabbitmq-discuss] Fwd: question on the faq
In-Reply-To: <496334C4.905@redhat.com>
References: <CBB16A07-BAB9-4C20-80E2-6D25ADD51AA5@coote.org>	<167204d20901050455g6a8415c8t6a69f1b3ba8107e0@mail.gmail.com>	<7222C973-08E5-494E-8FDD-1F35808F4C56@coote.org>	<167204d20901050830p3797640oa4d72266da028a82@mail.gmail.com>	<4962407A.2040708@lshift.net>
	<496272BD.9080009@redhat.com>	<49627DC3.3070508@lshift.net>
	<4962872A.7050807@redhat.com> <49628B85.8030706@lshift.net>
	<496334C4.905@redhat.com>
Message-ID: <49633721.8000908@lshift.net>

Gordon Sim wrote:
> Matthias Radestock wrote:
>> Perhaps, but who should this condition be signalled to? I'd argue the 
>> *consumers* should be told about it. After all, the queue may vanish 
>> long after anyone has published a message to it. Conversely, if nobody 
>> ever tries to consume messages from the queue then the fact that it 
>> once existed and then vanished is of little interest to anybody.
> 
> Notifying consumers is all well and good. However there may not be any 
> consumers at the point the message is published. An important role of 
> the queue is to accept responsibility for the message from the 
> publishing client until that can be transfered onto the receiving client.

In the non-tx case, how does a publisher know when the server has 
accepted responsibility?

> The whole concept of the queue vanishing is a bit alien to me and seems 
> to make reasoning about reliability more difficult.

RabbitMQ tries to isolate failures, in order to make the system more 
reliable overall. What's the alternative? Bring down the entire server 
every time something unexpected happens?


Matthias.



From matthias at lshift.net  Tue Jan  6 11:38:31 2009
From: matthias at lshift.net (Matthias Radestock)
Date: Tue, 06 Jan 2009 11:38:31 +0000
Subject: [rabbitmq-discuss] Fwd: question on the faq
In-Reply-To: <4963355B.9060603@redhat.com>
References: <CBB16A07-BAB9-4C20-80E2-6D25ADD51AA5@coote.org>	<167204d20901050455g6a8415c8t6a69f1b3ba8107e0@mail.gmail.com>	<7222C973-08E5-494E-8FDD-1F35808F4C56@coote.org>	<167204d20901050830p3797640oa4d72266da028a82@mail.gmail.com>	<4962407A.2040708@lshift.net>	<496272BD.9080009@redhat.com>	<49627DC3.3070508@lshift.net>	<49632C29.10309@redhat.com>
	<49632FBB.6070605@lshift.net> <4963355B.9060603@redhat.com>
Message-ID: <496342B7.8070108@lshift.net>

Gordon Sim wrote:
> Matthias Radestock wrote:
>> Gordon Sim wrote:
>>> In the case of a single node, if that node is killed in the middle of 
>>> processing a tx-commit and then restarted, are there any atomicity 
>>> guarantees? Could some of the operations be completed with others 
>>> being lost?
>>
>> The latter.
> 
> So to my mind that's not atomic whether your prefer viewing the 
> operations as acting on resources or streams.

Right. RabbitMQ was designed to never die, so the above really isn't an 
issue ;) More seriously, the above can only manifest itself as a problem 
if the tx involves durable queues with persisted messages.

TBH, on the whole tx front we are reluctant to invest much effort at 
this point since a) to date not all that many users have asked for it, 
b) the spec is far from clear, c) some major redesigns on our 
medium-term radar will require us to revisit this area.

Still, I'll have a look to see whether there's an easy fix for the above.

Finally, it's worth reiterating that RabbitMQ *does* guarantee atomicity 
in the cases required by the 0-9-1 spec, namely "where all publish or 
ack requests affect a single queue."


Matthias.



From alexis.richardson at cohesiveft.com  Tue Jan  6 11:51:00 2009
From: alexis.richardson at cohesiveft.com (Alexis Richardson)
Date: Tue, 6 Jan 2009 11:51:00 +0000
Subject: [rabbitmq-discuss] Fwd: question on the faq
In-Reply-To: <F2592FEF-F14D-49B6-B5ED-C2F748E4BC0C@coote.org>
References: <CBB16A07-BAB9-4C20-80E2-6D25ADD51AA5@coote.org>
	<167204d20901050455g6a8415c8t6a69f1b3ba8107e0@mail.gmail.com>
	<496211C9.9040504@redhat.com> <49621F7C.8090502@lshift.net>
	<4962294C.9000307@redhat.com>
	<FDD6BBFD-1053-4113-8EF5-55560873CDB5@coote.org>
	<49623BF5.8010206@redhat.com>
	<F2592FEF-F14D-49B6-B5ED-C2F748E4BC0C@coote.org>
Message-ID: <167204d20901060351y6f74e419kef15728f66785639@mail.gmail.com>

Tim, many thanks.

Also, Gordon and Carl, thanks for your thoughts which really helped by
forcing us to clarify stuff.

I am going to re-paste Matthias' last comment which is relevant:
"Finally, it's worth reiterating that RabbitMQ *does* guarantee
atomicity in the cases required by the 0-9-1 spec, namely "where all
publish or ack requests affect a single queue.""


On Tue, Jan 6, 2009 at 10:42 AM, Tim Coote <tim+rabbitmq.com at coote.org> wrote:
> I'm getting the sense that as far as AMQP is concerned, the word
> Transaction is not helpful

I must admit that I tend to share this view.  However, it is also
clear from people's comments, notably Gordon and Carl, that other
views are defensible.  In other words - this is all good fuel for
making a better 1.0 spec.  In AMQP 1.0 we anticipate a much more
rigorous definition of transactionality and 'resource' including DTX
and idempotency.  Implementations supporting that will also have finer
grained means for coping with TX anomalies such as corner 'failure
cases'.




> as it sort of implies similar semantics to
> the work on ACID semantics for programming models (TP monitors, DBMS,
> SQL, X/Open's XA, etc), which are concerned with the properties of the
> control of the operation (which seems to be what AMQP is mostly
> concerned about) AND the guarantees on the contents of the operation,
> which seems to me to be considered out of scope for AMQP - that's why
> XA talks about Resource Managers: it's concerned about the integrity
> and correct state transitions of resources that are managed.

And AMQP needs to play nicely with JMS which has its own
resource-centric behaviours.

TX for example can be related to the concept of a JMS local
transaction (unless I have misunderstood this).  Moving data from one
queue to another, on one broker, is not dissimilar to the TX use that
Gordon described.



> I can
> see a strong revenue stream in explaining to clients that their
> proposed application architecture is broken because they've assumed
> that Transaction in AMQP is comparable to their understanding from
> using TP monitors, or even just API guarantees.

OK ;-)



> I can see value in what I think AMQP is trying to achieve (based on a
> cursory skimming of the 10 spec and this discussion), but it needs to
> be clear to the app architects that they will need to layer on top of
> the protocol a whole extra chunk of app to do the reconciliation of
> state between the systems, which can largely be avoided with
> (traditional) transactional systems.

Of course the MAIN aim of AMQP is to simplify integration (and lower
cost) by simplifying cross-platform messaging.  So it has to be
cognitively obvious as well as semantically so.  Thanks for making us
talk through this in the TX case.

Please could you elaborate on the 'reconciliation of state' requirement?



> Using what I'd call the normal semantics of a transaction, I'd define
> a unit of work that booked all of my components of my holiday in one
> block and I'd know whether everything were ok or not. It also makes it
> very obvious that I need to think about the legal contracts that I'm
> 'committing' to so that I can form suitable compensating transactions.
> Using the AQMP definition, all I know is that the booking requests
> were delivered, and possibly not even that they'd all been delivered.

Right and here one stumbles across the difference between TX, DTX and
idempotent delivery.  But - correct me if I am wrong - wouldn't
Gordon's use case help with this?




> tx and dtx classes have value (I still need to get to the bottom of
> what). However, their naming - especially if dtx is defined in terms
> of XA spec, but doesn't cover the content of messages, is going to
> create an adoption barrier to the technology.  Have a scan of XA and
> DTP and see if you agree.  (Section 2.2 et seq - I won't reproduce it
> here: it's short, but doesn't format well when I drop it into an email).

Possibly so..  Do you use XA a lot then?


> Anyway, that's my three ha'porth.

Thanks!

alexis



> Tim
>
> On 5 Jan 2009, at 16:57, Carl Trieloff wrote:
>
>>
>> Tim Coote wrote:
>>> I've now read a bit of the specs :-)
>>> amqp defines tx classes (which are not transactional in the sense
>>> of  XOpen's XA specification) and dtx, which are.  I don't
>>> understand, at  the moment, what tx really means in the context of
>>> a message passing  system, but I suspect that it's something to do
>>> with some sort of  'transactional' model with a message server (or
>>> whatever I call the  agent that my application interacts with that
>>> is its interface to the  messaging system): I can send messages to
>>> the message server with  transactional semantics, but there's no
>>> downstream semantics. I'm not  very clear on how this is a useful
>>> piece of functionality as I cannot  see what guarantees I get for it.
>>>
>>> iirc, MQSeries had similar semantics about 'guaranteed delivery',
>>> which are not much use, either, as you still have to put in place
>>> checks for message receipt by the end point.
>>
>> you comment on 'guaranteed delivery'  is spot on. tx in msg system
>> allows you
>> to ACID commit or rollback  1-N msg onto 1-N queues. or consume 1-N
>> messages
>> from 1-N queues and either commit or rollback the full set in the
>> TXN in a ACID
>> fashion.
>>
>> AMQP
>> TX == 1PC for local transactions, not coordinated by a TM
>> DTX == 2PC and can be coordinated by a TM (optionally XA) if desired.
>>
>> Carl.
>>
>
> Tim Coote
> tim at coote.org
> vincit veritas
>
>
>
>
> _______________________________________________
> rabbitmq-discuss mailing list
> rabbitmq-discuss at lists.rabbitmq.com
> http://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss
>



From gsim at redhat.com  Tue Jan  6 12:28:50 2009
From: gsim at redhat.com (Gordon Sim)
Date: Tue, 06 Jan 2009 12:28:50 +0000
Subject: [rabbitmq-discuss] Fwd: question on the faq
In-Reply-To: <167204d20901060351y6f74e419kef15728f66785639@mail.gmail.com>
References: <CBB16A07-BAB9-4C20-80E2-6D25ADD51AA5@coote.org>	<167204d20901050455g6a8415c8t6a69f1b3ba8107e0@mail.gmail.com>	<496211C9.9040504@redhat.com>
	<49621F7C.8090502@lshift.net>	<4962294C.9000307@redhat.com>	<FDD6BBFD-1053-4113-8EF5-55560873CDB5@coote.org>	<49623BF5.8010206@redhat.com>	<F2592FEF-F14D-49B6-B5ED-C2F748E4BC0C@coote.org>
	<167204d20901060351y6f74e419kef15728f66785639@mail.gmail.com>
Message-ID: <49634E82.1070200@redhat.com>

Alexis Richardson wrote:
> On Tue, Jan 6, 2009 at 10:42 AM, Tim Coote <tim+rabbitmq.com at coote.org> wrote:
>> I'm getting the sense that as far as AMQP is concerned, the word
>> Transaction is not helpful
> 
> I must admit that I tend to share this view.  However, it is also
> clear from people's comments, notably Gordon and Carl, that other
> views are defensible.  

My view is that transaction in AMQP means the same as it does in other 
messaging systems e.g. JMS. Specifically in my view full atomicity is at 
the very heart of its purpose.

That the original text failed to convey this unambiguously is 
unfortunate. It is this lack of clarity in the specification that I 
believe is unhelpful, not the use of the word 'transaction', as the 
intended semantics are very much transactional in the traditional sense 
of that word and other implementations do provide that guarantee.




From alexis.richardson at cohesiveft.com  Tue Jan  6 12:26:42 2009
From: alexis.richardson at cohesiveft.com (Alexis Richardson)
Date: Tue, 6 Jan 2009 12:26:42 +0000
Subject: [rabbitmq-discuss] Fwd: question on the faq
In-Reply-To: <49634E82.1070200@redhat.com>
References: <CBB16A07-BAB9-4C20-80E2-6D25ADD51AA5@coote.org>
	<167204d20901050455g6a8415c8t6a69f1b3ba8107e0@mail.gmail.com>
	<496211C9.9040504@redhat.com> <49621F7C.8090502@lshift.net>
	<4962294C.9000307@redhat.com>
	<FDD6BBFD-1053-4113-8EF5-55560873CDB5@coote.org>
	<49623BF5.8010206@redhat.com>
	<F2592FEF-F14D-49B6-B5ED-C2F748E4BC0C@coote.org>
	<167204d20901060351y6f74e419kef15728f66785639@mail.gmail.com>
	<49634E82.1070200@redhat.com>
Message-ID: <167204d20901060426m112f8ff7q5b224876b2761453@mail.gmail.com>

Gordon,

On Tue, Jan 6, 2009 at 12:28 PM, Gordon Sim <gsim at redhat.com> wrote:
> Alexis Richardson wrote:
>
> My view is that transaction in AMQP means the same as it does in other
> messaging systems e.g. JMS. Specifically in my view full atomicity is at the
> very heart of its purpose.

I do believe that to be the intent -- if we can make this unambiguous
then I shall certainly change my opinion on the potential for people
to draw alternative conclusions from the intent.

Moreover, I would love to see something both unambiguous and
well-behaved here.  Suggestions welcome - from all and sundry!


> That the original text failed to convey this unambiguously is unfortunate.

+1

> It is this lack of clarity in the specification that I believe is unhelpful,
> not the use of the word 'transaction', as the intended semantics are very
> much transactional in the traditional sense of that word and other
> implementations do provide that guarantee.

Yes - I agree in the sense that it would be great if the written
semantics unambiguously aligned with the intent.

a



From gsim at redhat.com  Tue Jan  6 12:41:53 2009
From: gsim at redhat.com (Gordon Sim)
Date: Tue, 06 Jan 2009 12:41:53 +0000
Subject: [rabbitmq-discuss] Fwd: question on the faq
In-Reply-To: <49633721.8000908@lshift.net>
References: <CBB16A07-BAB9-4C20-80E2-6D25ADD51AA5@coote.org>	<167204d20901050455g6a8415c8t6a69f1b3ba8107e0@mail.gmail.com>	<7222C973-08E5-494E-8FDD-1F35808F4C56@coote.org>	<167204d20901050830p3797640oa4d72266da028a82@mail.gmail.com>	<4962407A.2040708@lshift.net>
	<496272BD.9080009@redhat.com>	<49627DC3.3070508@lshift.net>
	<4962872A.7050807@redhat.com> <49628B85.8030706@lshift.net>
	<496334C4.905@redhat.com> <49633721.8000908@lshift.net>
Message-ID: <49635191.7080400@redhat.com>

Matthias Radestock wrote:
> Gordon Sim wrote:
>> Matthias Radestock wrote:
>>> Perhaps, but who should this condition be signalled to? I'd argue the 
>>> *consumers* should be told about it. After all, the queue may vanish 
>>> long after anyone has published a message to it. Conversely, if 
>>> nobody ever tries to consume messages from the queue then the fact 
>>> that it once existed and then vanished is of little interest to anybody.
>>
>> Notifying consumers is all well and good. However there may not be any 
>> consumers at the point the message is published. An important role of 
>> the queue is to accept responsibility for the message from the 
>> publishing client until that can be transfered onto the receiving client.
> 
> In the non-tx case, how does a publisher know when the server has 
> accepted responsibility?

In 0-9 it cannot due to the lack of any acknowledged publication (a 
significant failing of that version of the specification).

>> The whole concept of the queue vanishing is a bit alien to me and 
>> seems to make reasoning about reliability more difficult.
> 
> RabbitMQ tries to isolate failures, in order to make the system more 
> reliable overall. What's the alternative? Bring down the entire server 
> every time something unexpected happens?

No; but certainly making the application aware of the problem is important.

If a transaction containing a publish operation commits successfully and 
results in a persistent message being enqueued on a durable queue, I 
view that as a contract with the publisher that the message will be 
retained for delivery to potential subscribers as long as the device on 
which durable data is stored functions correctly. That for me is 
essentially the durability guarantee.

If there is any doubt about that at the point of committing the 
transaction then the transaction should in my view be aborted.



From tim+rabbitmq.com at coote.org  Tue Jan  6 12:37:48 2009
From: tim+rabbitmq.com at coote.org (Tim Coote)
Date: Tue, 6 Jan 2009 12:37:48 +0000
Subject: [rabbitmq-discuss] Fwd: question on the faq
In-Reply-To: <167204d20901060351y6f74e419kef15728f66785639@mail.gmail.com>
References: <CBB16A07-BAB9-4C20-80E2-6D25ADD51AA5@coote.org>
	<167204d20901050455g6a8415c8t6a69f1b3ba8107e0@mail.gmail.com>
	<496211C9.9040504@redhat.com> <49621F7C.8090502@lshift.net>
	<4962294C.9000307@redhat.com>
	<FDD6BBFD-1053-4113-8EF5-55560873CDB5@coote.org>
	<49623BF5.8010206@redhat.com>
	<F2592FEF-F14D-49B6-B5ED-C2F748E4BC0C@coote.org>
	<167204d20901060351y6f74e419kef15728f66785639@mail.gmail.com>
Message-ID: <3643ABA8-A714-4E71-B44A-6C5B59EB498F@coote.org>


On 6 Jan 2009, at 11:51, Alexis Richardson wrote:

>
> Tim, many thanks.
>
> Also, Gordon and Carl, thanks for your thoughts which really helped by
> forcing us to clarify stuff.
Good.
>
>
> I am going to re-paste Matthias' last comment which is relevant:
> "Finally, it's worth reiterating that RabbitMQ *does* guarantee
> atomicity in the cases required by the 0-9-1 spec, namely "where all
> publish or ack requests affect a single queue.""
I'm sure that RabbitMQ implements the spec. I come more from the angle  
of getting the spec right. I want my customers to be able to avoid any  
product lock-in.
>
>
>
> On Tue, Jan 6, 2009 at 10:42 AM, Tim Coote <tim 
> +rabbitmq.com at coote.org> wrote:
>> I'm getting the sense that as far as AMQP is concerned, the word
>> Transaction is not helpful
>
> I must admit that I tend to share this view.  However, it is also
> clear from people's comments, notably Gordon and Carl, that other
> views are defensible.  In other words - this is all good fuel for
> making a better 1.0 spec.  In AMQP 1.0 we anticipate a much more
> rigorous definition of transactionality and 'resource' including DTX
> and idempotency.  Implementations supporting that will also have finer
> grained means for coping with TX anomalies such as corner 'failure
> cases'.
I'd recommend using a different term, eg 'transactional control', or  
(from my pov) inventing an entirely new word/phrase so that customers  
are aware that they need to look into what the phrase means.

[snip]
>
> And AMQP needs to play nicely with JMS which has its own
> resource-centric behaviours.
>
> TX for example can be related to the concept of a JMS local
> transaction (unless I have misunderstood this).  Moving data from one
> queue to another, on one broker, is not dissimilar to the TX use that
> Gordon described.
unsure. it's quite possible that the AMQP terminology started in the  
JMS world. iirc, the j2ee OTS service is the relevant transactional  
service. I don't know how the language and computational models  
percolated into JMS.
>
[snip]
> Of course the MAIN aim of AMQP is to simplify integration (and lower
> cost) by simplifying cross-platform messaging.  So it has to be
> cognitively obvious as well as semantically so.  Thanks for making us
> talk through this in the TX case.

It seems to make a good job of this, from what I can see.
>
>
> Please could you elaborate on the 'reconciliation of state'  
> requirement?
Whenever there is distributed persistence, there's a risk of the  
different views of the world getting out of sync. So you need some  
periodic checks that the views are consistent. If you have ACID  
semantics on the information, this happens infrequently and can be at  
quite a high level (eg testing that the history of the past or future  
plans have consistent totals for, say, number of bookings, or volume  
of material to be exchanged.)  If I have no ACID transactions, I ought  
to validate the result of each update/request for resources from each  
service explicitly. As I've got no distinct time boundaries around  
when the (application level) transaction completed, I need to build  
that functionality, too. This balloons the application design, build,  
and maintenance costs.
>
>
>> Using what I'd call the normal semantics of a transaction, I'd define
>> a unit of work that booked all of my components of my holiday in one
>> block and I'd know whether everything were ok or not. It also makes  
>> it
>> very obvious that I need to think about the legal contracts that I'm
>> 'committing' to so that I can form suitable compensating  
>> transactions.
>> Using the AQMP definition, all I know is that the booking requests
>> were delivered, and possibly not even that they'd all been delivered.
>
> Right and here one stumbles across the difference between TX, DTX and
> idempotent delivery.  But - correct me if I am wrong - wouldn't
> Gordon's use case help with this?
I'm not sure. I didn't get the gory details. But I don't think that it  
addresses the issue as I think it's concerned with the control  
mechanisms, not the content.  The point about my example is that I  
have guarantees on the ACID characteristics of the components of the  
holiday: not just that the booking forms were delivered to the  
companies concerned, but that they were accepted and correctly  
processed. By extension, I suppose that this could form the basis of a  
legal contract, but I'm no lawyer.

btw, an idempotent operation to me means that I can apply it one or  
many times and I get the same result (eg x=3, vs x+=1). Is this  
another 'broadened' definition :-)
>
>>
> Possibly so..  Do you use XA a lot then?
Yes. But as a reference specification/basis for application  
architectures/enterprise standards. Or as a pointer on how things  
should have been done on a post mortem ;-)  I do less of this type of  
work these days, but was heavily involved last century. :-)
>




From gsim at redhat.com  Tue Jan  6 12:47:24 2009
From: gsim at redhat.com (Gordon Sim)
Date: Tue, 06 Jan 2009 12:47:24 +0000
Subject: [rabbitmq-discuss] Fwd: question on the faq
In-Reply-To: <167204d20901060426m112f8ff7q5b224876b2761453@mail.gmail.com>
References: <CBB16A07-BAB9-4C20-80E2-6D25ADD51AA5@coote.org>	
	<167204d20901050455g6a8415c8t6a69f1b3ba8107e0@mail.gmail.com>	
	<496211C9.9040504@redhat.com> <49621F7C.8090502@lshift.net>	
	<4962294C.9000307@redhat.com>	
	<FDD6BBFD-1053-4113-8EF5-55560873CDB5@coote.org>	
	<49623BF5.8010206@redhat.com>	
	<F2592FEF-F14D-49B6-B5ED-C2F748E4BC0C@coote.org>	
	<167204d20901060351y6f74e419kef15728f66785639@mail.gmail.com>	
	<49634E82.1070200@redhat.com>
	<167204d20901060426m112f8ff7q5b224876b2761453@mail.gmail.com>
Message-ID: <496352DC.9090903@redhat.com>

Alexis Richardson wrote:
> On Tue, Jan 6, 2009 at 12:28 PM, Gordon Sim <gsim at redhat.com> wrote:
>> Alexis Richardson wrote:
>>
>> My view is that transaction in AMQP means the same as it does in other
>> messaging systems e.g. JMS. Specifically in my view full atomicity is at the
>> very heart of its purpose.
> 
> I do believe that to be the intent -- if we can make this unambiguous
> then I shall certainly change my opinion on the potential for people
> to draw alternative conclusions from the intent.

As I mentioned this was attempted as part of the 0-9-1 corrections, but 
the proposal was abandoned due to objections from RabbitMQ 
representatives regarding the explicit atomicity guarantee.



From matthias at lshift.net  Tue Jan  6 12:48:38 2009
From: matthias at lshift.net (Matthias Radestock)
Date: Tue, 06 Jan 2009 12:48:38 +0000
Subject: [rabbitmq-discuss] Fwd: question on the faq
In-Reply-To: <49635191.7080400@redhat.com>
References: <CBB16A07-BAB9-4C20-80E2-6D25ADD51AA5@coote.org>	<167204d20901050455g6a8415c8t6a69f1b3ba8107e0@mail.gmail.com>	<7222C973-08E5-494E-8FDD-1F35808F4C56@coote.org>	<167204d20901050830p3797640oa4d72266da028a82@mail.gmail.com>	<4962407A.2040708@lshift.net>	<496272BD.9080009@redhat.com>	<49627DC3.3070508@lshift.net>	<4962872A.7050807@redhat.com>
	<49628B85.8030706@lshift.net>	<496334C4.905@redhat.com>
	<49633721.8000908@lshift.net> <49635191.7080400@redhat.com>
Message-ID: <49635326.4060905@lshift.net>

Gordon,

Gordon Sim wrote:
> If a transaction containing a publish operation commits successfully and 
> results in a persistent message being enqueued on a durable queue, I 
> view that as a contract with the publisher that the message will be 
> retained for delivery to potential subscribers as long as the device on 
> which durable data is stored functions correctly. That for me is 
> essentially the durability guarantee.

RabbitMQ provides that guarantee.


Matthias.



From gsim at redhat.com  Tue Jan  6 13:10:13 2009
From: gsim at redhat.com (Gordon Sim)
Date: Tue, 06 Jan 2009 13:10:13 +0000
Subject: [rabbitmq-discuss] Fwd: question on the faq
In-Reply-To: <3643ABA8-A714-4E71-B44A-6C5B59EB498F@coote.org>
References: <CBB16A07-BAB9-4C20-80E2-6D25ADD51AA5@coote.org>	<167204d20901050455g6a8415c8t6a69f1b3ba8107e0@mail.gmail.com>	<496211C9.9040504@redhat.com>
	<49621F7C.8090502@lshift.net>	<4962294C.9000307@redhat.com>	<FDD6BBFD-1053-4113-8EF5-55560873CDB5@coote.org>	<49623BF5.8010206@redhat.com>	<F2592FEF-F14D-49B6-B5ED-C2F748E4BC0C@coote.org>	<167204d20901060351y6f74e419kef15728f66785639@mail.gmail.com>
	<3643ABA8-A714-4E71-B44A-6C5B59EB498F@coote.org>
Message-ID: <49635835.7000607@redhat.com>

Tim Coote wrote:
> On 6 Jan 2009, at 11:51, Alexis Richardson wrote:
>> On Tue, Jan 6, 2009 at 10:42 AM, Tim Coote <tim 
>>> Using what I'd call the normal semantics of a transaction, I'd define
>>> a unit of work that booked all of my components of my holiday in one
>>> block and I'd know whether everything were ok or not. It also makes  
>>> it
>>> very obvious that I need to think about the legal contracts that I'm
>>> 'committing' to so that I can form suitable compensating  
>>> transactions.
>>> Using the AQMP definition, all I know is that the booking requests
>>> were delivered, and possibly not even that they'd all been delivered.
>> Right and here one stumbles across the difference between TX, DTX and
>> idempotent delivery.  But - correct me if I am wrong - wouldn't
>> Gordon's use case help with this?
> I'm not sure. I didn't get the gory details. But I don't think that it  
> addresses the issue as I think it's concerned with the control  
> mechanisms, not the content.  

With an atomic transaction, if I consume a message (m1) from one queue 
(lets call it qA) and publish it (perhaps in modified form, denoted m2) 
to another queue (lets call that qB) then either m1 remains on qA and m2 
is *not* on qB or m1 has been removed from qA and m2 *is* on qB.

Or in the example Ben gave either all n messages of a transactionally 
published batch are on the queue or none of them are.

Hope that clarifies it a bit.



From gsim at redhat.com  Tue Jan  6 13:12:04 2009
From: gsim at redhat.com (Gordon Sim)
Date: Tue, 06 Jan 2009 13:12:04 +0000
Subject: [rabbitmq-discuss] Fwd: question on the faq
In-Reply-To: <49635326.4060905@lshift.net>
References: <CBB16A07-BAB9-4C20-80E2-6D25ADD51AA5@coote.org>	<167204d20901050455g6a8415c8t6a69f1b3ba8107e0@mail.gmail.com>	<7222C973-08E5-494E-8FDD-1F35808F4C56@coote.org>	<167204d20901050830p3797640oa4d72266da028a82@mail.gmail.com>	<4962407A.2040708@lshift.net>	<496272BD.9080009@redhat.com>	<49627DC3.3070508@lshift.net>	<4962872A.7050807@redhat.com>
	<49628B85.8030706@lshift.net>	<496334C4.905@redhat.com>
	<49633721.8000908@lshift.net> <49635191.7080400@redhat.com>
	<49635326.4060905@lshift.net>
Message-ID: <496358A4.7000000@redhat.com>

Matthias Radestock wrote:
> Gordon Sim wrote:
>> If a transaction containing a publish operation commits successfully 
>> and results in a persistent message being enqueued on a durable queue, 
>> I view that as a contract with the publisher that the message will be 
>> retained for delivery to potential subscribers as long as the device 
>> on which durable data is stored functions correctly. That for me is 
>> essentially the durability guarantee.
> 
> RabbitMQ provides that guarantee.

Great; I suspect I misinterpreted the terminology around disappearing 
queues.



From tim+rabbitmq.com at coote.org  Tue Jan  6 13:17:18 2009
From: tim+rabbitmq.com at coote.org (Tim Coote)
Date: Tue, 6 Jan 2009 13:17:18 +0000
Subject: [rabbitmq-discuss] Fwd: question on the faq
In-Reply-To: <49635835.7000607@redhat.com>
References: <CBB16A07-BAB9-4C20-80E2-6D25ADD51AA5@coote.org>	<167204d20901050455g6a8415c8t6a69f1b3ba8107e0@mail.gmail.com>	<496211C9.9040504@redhat.com>
	<49621F7C.8090502@lshift.net>	<4962294C.9000307@redhat.com>	<FDD6BBFD-1053-4113-8EF5-55560873CDB5@coote.org>	<49623BF5.8010206@redhat.com>	<F2592FEF-F14D-49B6-B5ED-C2F748E4BC0C@coote.org>	<167204d20901060351y6f74e419kef15728f66785639@mail.gmail.com>
	<3643ABA8-A714-4E71-B44A-6C5B59EB498F@coote.org>
	<49635835.7000607@redhat.com>
Message-ID: <19EC623D-22C0-4F72-8B1E-4BA587246FAB@coote.org>

Yes. thanks. The LUW is the message processing between message  
systems, but has no semantics concerning the completeness of the  
overall processing of the information (beyond the scope of the two  
queues mentioned).  That is useful.

I've just found some stuff at IBM, Oracle, BEA and Sun and been  
reviewing some of the jms documentation, so I'm getting a better  
picture on how that was intended to be used. I can see where my  
confusion's coming from. From what I read, I think that the simple  
type of transaction is what you describe and the distributed type was  
intended to cover the use of the content of the messages in some  
consistent way.   Although, I must say that the intentions are deeply  
buried in the example code. I can almost guarantee that most real apps  
will be inconsistent in their use of the 'transactions' :-)

On 6 Jan 2009, at 13:10, Gordon Sim wrote:

>
> With an atomic transaction, if I consume a message (m1) from one  
> queue (lets call it qA) and publish it (perhaps in modified form,  
> denoted m2) to another queue (lets call that qB) then either m1  
> remains on qA and m2 is *not* on qB or m1 has been removed from qA  
> and m2 *is* on qB.
>
> Or in the example Ben gave either all n messages of a  
> transactionally published batch are on the queue or none of them are.
>
> Hope that clarifies it a bit.
>

Tim Coote
tim at coote.org
vincit veritas






From cctrieloff at redhat.com  Tue Jan  6 13:36:53 2009
From: cctrieloff at redhat.com (Carl Trieloff)
Date: Tue, 06 Jan 2009 08:36:53 -0500
Subject: [rabbitmq-discuss] Fwd: question on the faq
In-Reply-To: <F2592FEF-F14D-49B6-B5ED-C2F748E4BC0C@coote.org>
References: <CBB16A07-BAB9-4C20-80E2-6D25ADD51AA5@coote.org>	<167204d20901050455g6a8415c8t6a69f1b3ba8107e0@mail.gmail.com>	<496211C9.9040504@redhat.com>
	<49621F7C.8090502@lshift.net>	<4962294C.9000307@redhat.com>
	<FDD6BBFD-1053-4113-8EF5-55560873CDB5@coote.org>
	<49623BF5.8010206@redhat.com>
	<F2592FEF-F14D-49B6-B5ED-C2F748E4BC0C@coote.org>
Message-ID: <49635E75.5010904@redhat.com>


Tim,

few comments in-line.

Tim Coote wrote:
> I'm getting the sense that as far as AMQP is concerned, the word 
> Transaction is not helpful as it sort of implies similar semantics to 
> the work on ACID semantics for programming models (TP monitors, DBMS, 
> SQL, X/Open's XA, etc), which are concerned with the properties of the 
> control of the operation (which seems to be what AMQP is mostly 
> concerned about) AND the guarantees on the contents of the operation, 
> which seems to me to be considered out of scope for AMQP - that's why 
> XA talks about Resource Managers: it's concerned about the integrity 
> and correct state transitions of resources that are managed.  I can 
> see a strong revenue stream in explaining to clients that their 
> proposed application architecture is broken because they've assumed 
> that Transaction in AMQP is comparable to their understanding from 
> using TP monitors, or even just API guarantees.

Just a note, we at the Qpid project interpret txn's to be atomic and 
support full XA and TM integration. So it works like any other messaging 
software that supports txn's

>
> I can see value in what I think AMQP is trying to achieve (based on a 
> cursory skimming of the 10 spec and this discussion), but it needs to 
> be clear to the app architects that they will need to layer on top of 
> the protocol a whole extra chunk of app to do the reconciliation of 
> state between the systems, which can largely be avoided with 
> (traditional) transactional systems.
>


TX and DTX ARE to cover the 'normal semantics of a transaction'  The DTX 
work in AMQP was done by the guys that worked on Arjuna, Bluestone, 
Encina and a few other TMs. TX in 0-10 and 1.0 is just the 1PC case 
where you want transactional semantics with a single resource the 
broker, as where DTX is needed when you want more than one transactional 
resource. In AMQP 1.0 you will see that en-listing of txn has been moved 
to the session, and the coordinator part of DTX has been named such so 
avoid the TX/DTX confusion.

> Using what I'd call the normal semantics of a transaction, I'd define 
> a unit of work that booked all of my components of my holiday in one 
> block and I'd know whether everything were ok or not.

Ack, this is what TX and DTX are for

> It also makes it very obvious that I need to think about the legal 
> contracts that I'm 'committing' to so that I can form suitable 
> compensating transactions. 

correct

> Using the AQMP definition, all I know is that the booking requests 
> were delivered, and possibly not even that they'd all been delivered.

AMQP transaction means that all the messages in the txn where correctly 
enqueded/dequeded on the broker or aborted atomically. i.e all my 
messages in the txn where consumed are put back in an abort atomically 
and all my published messaged are enqueued. Also that no published 
messages are made available to the consumer until the txn has been 
committed.

>
> tx and dtx classes have value (I still need to get to the bottom of what).

This is my key point -- if you chose to decide that the AMQP transaction 
is not atomic, I have no clue what it is used for and I no way in a 
transaction in my mind.

> However, their naming - especially if dtx is defined in terms of XA 
> spec, but doesn't cover the content of messages, is going to create an 
> adoption barrier to the technology.  Have a scan of XA and DTP and see 
> if you agree.  (Section 2.2 et seq - I won't reproduce it here: it's 
> short, but doesn't format well when I drop it into an email).

The content of the message is transactional as it is contained in the 
message.

Carl.




From Alister.Morton at tradition.com  Tue Jan  6 13:51:12 2009
From: Alister.Morton at tradition.com (Alister Morton)
Date: Tue, 6 Jan 2009 13:51:12 +0000
Subject: [rabbitmq-discuss] Fwd: question on the faq
In-Reply-To: <49633721.8000908@lshift.net>
References: <CBB16A07-BAB9-4C20-80E2-6D25ADD51AA5@coote.org>
	<167204d20901050455g6a8415c8t6a69f1b3ba8107e0@mail.gmail.com>
	<7222C973-08E5-494E-8FDD-1F35808F4C56@coote.org>
	<167204d20901050830p3797640oa4d72266da028a82@mail.gmail.com>
	<4962407A.2040708@lshift.net>	<496272BD.9080009@redhat.com>
	<49627DC3.3070508@lshift.net>	<4962872A.7050807@redhat.com>
	<49628B85.8030706@lshift.net>	<496334C4.905@redhat.com>
	<49633721.8000908@lshift.net>
Message-ID: <5A46D132C446C04B9EFE8AD14E7891065C4890668E@SVR-2K3-BH-EMC.tradition.int>

> RabbitMQ tries to isolate failures, in order to make the
> system more reliable overall. What's the alternative? Bring
> down the entire server every time something unexpected happens?

Believe me, I've seen some very experienced developers put this forward as a perfectly valid, and in some cases, only acceptable, possibility. Which worries me somewhat.

The information herein may have been obtained from various sources. Any opinion expressed may be that of the sender only, is subject to change without notice and should be independently evaluated. Nothing herein constitutes investment advice or an offer, or solicitation of an offer, to buy or sell any financial product. Any data consist of purely indicative prices and should not be relied upon to revalue any commercial positions held by any recipient. Tradition makes no warranty that the data represent or indicate prices at which transactions may be or have been made by any Tradition Group company. To the maximum extent of the law, Tradition accepts no responsibility for, and cannot and does not warrant the integrity, accuracy, quality, completeness, merchantability or suitability for a particular purpose or requirement of the information or data, even if arising out of the negligence of Tradition or otherwise. Tradition accepts no liability for any direct, indirect or other consequential loss arising out of any use of the information contained in this document or any omission from it. This communication is directed at Eligible Counterparties and Professional Clients as defined by the FSA. It is not for distribution to nor should it be relied upon by Private Clients. It is not intended for distribution to, or use by any person or entity in any jurisdiction or country where such distribution or use would be contrary to any applicable law or regulation. Please note that, for business or compliance reasons, we may monitor and read emails sent or received using our servers or equipment. Tradition (UK) Ltd (937647; FSA 139200), Tradition Financial Services Ltd (1046064; FSA 147543), TFS Derivatives Ltd (4051930; FSA 197244), Tradition London Clearing Ltd (3633863; FSA 190632) and TFS-ICAP Ltd (4025995; FSA 206018) registered in England at Beaufort House, 15 St Botolph Street, London EC3A 7QX; authorised and regulated by the Financial Services Authority. VAT No: GB 365 4639 27 except TFS-ICAP GB 766 0854 05.



From tim+rabbitmq.com at coote.org  Tue Jan  6 14:44:47 2009
From: tim+rabbitmq.com at coote.org (Tim Coote)
Date: Tue, 6 Jan 2009 14:44:47 +0000
Subject: [rabbitmq-discuss] Fwd: question on the faq
In-Reply-To: <49635E75.5010904@redhat.com>
References: <CBB16A07-BAB9-4C20-80E2-6D25ADD51AA5@coote.org>	<167204d20901050455g6a8415c8t6a69f1b3ba8107e0@mail.gmail.com>	<496211C9.9040504@redhat.com>
	<49621F7C.8090502@lshift.net>	<4962294C.9000307@redhat.com>
	<FDD6BBFD-1053-4113-8EF5-55560873CDB5@coote.org>
	<49623BF5.8010206@redhat.com>
	<F2592FEF-F14D-49B6-B5ED-C2F748E4BC0C@coote.org>
	<49635E75.5010904@redhat.com>
Message-ID: <12BC400B-6820-4D2E-BE4B-335AC41F5189@coote.org>

Thanks, Carl. Where can I find 1.0 - I could only find 10 when I  
looked at the amqp site.

Now I'm very confused. In my mind, to book my holiday example, I need:
1/ Begin transaction
2/ prepare definition of what to book (cab to airport, insurance,  
flight, hotel, etc)
3/ send booking requests
4/ receive and record booking confirmations
5/ Commit

with corresponding compensating transactions if any of the elements  
fails.

As far as I can see, 3 and 4 are dependent on the semantics of the  
message and how they are processed downstream, not just the queue that  
I'm sending them to/receiving them from. As a system specifier, I'd  
want to treat a booking failure for whatever reason (message didn't  
get thro' or no resource available) in the same way. I want all 5  
steps with ACID semantics (although I may swap 1 and 2 around). Have I  
got hold of the wrong end of the stick?

2pc vs 1pc is really just an implementation issue, it's much better if  
I can treat them as the same thing, at least initially, and fwiw, 2pc  
doesn't actually guarantee ACID semantics, although the hole is  
usually ignored and handled as a system failure.

On 6 Jan 2009, at 13:36, Carl Trieloff wrote:

>
>
> Just a note, we at the Qpid project interpret txn's to be atomic and  
> support full XA and TM integration. So it works like any other  
> messaging software that supports txn's
Maybe I just need to be aware that the word Transaction means  
something different for messaging systems to elsewhere. If so, I bet  
working with Oracle (as a company) is a bunch of fun, as they mostly  
don't appreciate that a transaction doesn't imply a dbms :-)
>
>
> TX and DTX ARE to cover the 'normal semantics of a transaction'  The  
> DTX work in AMQP was done by the guys that worked on Arjuna,  
> Bluestone, Encina and a few other TMs. TX in 0-10 and 1.0 is just  
> the 1PC case where you want transactional semantics with a single  
> resource the broker, as where DTX is needed when you want more than  
> one transactional resource. In AMQP 1.0 you will see that en-listing  
> of txn has been moved to the session, and the coordinator part of  
> DTX has been named such so avoid the TX/DTX confusion.
so the tx class is only to do with interactions with the messaging  
system itself (cf recorded delivery for the postal service), vs a  
simple order processing model (send order, schedule delivery, confirm  
order).
>
>
>> Using what I'd call the normal semantics of a transaction, I'd  
>> define a unit of work that booked all of my components of my  
>> holiday in one block and I'd know whether everything were ok or not.
>
> Ack, this is what TX and DTX are for
>
>> It also makes it very obvious that I need to think about the legal  
>> contracts that I'm 'committing' to so that I can form suitable  
>> compensating transactions.
>
> correct
>
>> Using the AQMP definition, all I know is that the booking requests  
>> were delivered, and possibly not even that they'd all been delivered.
>
> AMQP transaction means that all the messages in the txn where  
> correctly enqueded/dequeded on the broker or aborted atomically. i.e  
> all my messages in the txn where consumed are put back in an abort  
> atomically and all my published messaged are enqueued. Also that no  
> published messages are made available to the consumer until the txn  
> has been committed.
Surely the luw would normally include correct consumption and  
processing of the messages, otherwise all that my app knows about the  
state of the world is that the messages went. I was coming to the  
conclusion that that was the AMQP guarantee (essentially proof of  
sending or proof of delivery), but your example implies to me that it  
could also include correct understanding of, and action on the messages.
>
>
>>
>> tx and dtx classes have value (I still need to get to the bottom of  
>> what).
>
> This is my key point -- if you chose to decide that the AMQP  
> transaction is not atomic, I have no clue what it is used for and I  
> no way in a transaction in my mind.
>
>> However, their naming - especially if dtx is defined in terms of XA  
>> spec, but doesn't cover the content of messages, is going to create  
>> an adoption barrier to the technology.  Have a scan of XA and DTP  
>> and see if you agree.  (Section 2.2 et seq - I won't reproduce it  
>> here: it's short, but doesn't format well when I drop it into an  
>> email).
>
> The content of the message is transactional as it is contained in  
> the message.
if and only if the luw is the sending/receipt of the message, which is  
ok, but I don't think it's what you're saying.
Tim



From cctrieloff at redhat.com  Tue Jan  6 15:14:04 2009
From: cctrieloff at redhat.com (Carl Trieloff)
Date: Tue, 06 Jan 2009 10:14:04 -0500
Subject: [rabbitmq-discuss] Fwd: question on the faq
In-Reply-To: <12BC400B-6820-4D2E-BE4B-335AC41F5189@coote.org>
References: <CBB16A07-BAB9-4C20-80E2-6D25ADD51AA5@coote.org>	<167204d20901050455g6a8415c8t6a69f1b3ba8107e0@mail.gmail.com>	<496211C9.9040504@redhat.com>
	<49621F7C.8090502@lshift.net>	<4962294C.9000307@redhat.com>
	<FDD6BBFD-1053-4113-8EF5-55560873CDB5@coote.org>
	<49623BF5.8010206@redhat.com>
	<F2592FEF-F14D-49B6-B5ED-C2F748E4BC0C@coote.org>
	<49635E75.5010904@redhat.com>
	<12BC400B-6820-4D2E-BE4B-335AC41F5189@coote.org>
Message-ID: <4963753C.8020401@redhat.com>

Tim Coote wrote:
> Thanks, Carl. Where can I find 1.0 - I could only find 10 when I 
> looked at the amqp site.
>
> Now I'm very confused. In my mind, to book my holiday example, I need:
> 1/ Begin transaction
> 2/ prepare definition of what to book (cab to airport, insurance, 
> flight, hotel, etc)
> 3/ send booking requests
> 4/ receive and record booking confirmations
> 5/ Commit
>
> with corresponding compensating transactions if any of the elements 
> fails. 

Tim

I'll try take a bit of time later today or tonight in-front of the tv 
and code/ sudo code the client
for the above example for you with explanation.

Carl.



From 0x6e6562 at gmail.com  Tue Jan  6 16:05:29 2009
From: 0x6e6562 at gmail.com (Ben Hood)
Date: Tue, 6 Jan 2009 16:05:29 +0000
Subject: [rabbitmq-discuss] Fwd: question on the faq
In-Reply-To: <12BC400B-6820-4D2E-BE4B-335AC41F5189@coote.org>
References: <CBB16A07-BAB9-4C20-80E2-6D25ADD51AA5@coote.org>
	<167204d20901050455g6a8415c8t6a69f1b3ba8107e0@mail.gmail.com>
	<496211C9.9040504@redhat.com> <49621F7C.8090502@lshift.net>
	<4962294C.9000307@redhat.com>
	<FDD6BBFD-1053-4113-8EF5-55560873CDB5@coote.org>
	<49623BF5.8010206@redhat.com>
	<F2592FEF-F14D-49B6-B5ED-C2F748E4BC0C@coote.org>
	<49635E75.5010904@redhat.com>
	<12BC400B-6820-4D2E-BE4B-335AC41F5189@coote.org>
Message-ID: <269388e30901060805u7c25e678kc753460e430ac28d@mail.gmail.com>

Tim,

On Tue, Jan 6, 2009 at 2:44 PM, Tim Coote <tim+rabbitmq.com at coote.org> wrote:
> Now I'm very confused. In my mind, to book my holiday example, I need:
> 1/ Begin transaction
> 2/ prepare definition of what to book (cab to airport, insurance,
> flight, hotel, etc)
> 3/ send booking requests
> 4/ receive and record booking confirmations
> 5/ Commit

I'm probably missing the point, but how can the entity that produces
the booking confirmations process any requests that haven't been
committed yet?

Ben



From tim+rabbitmq.com at coote.org  Tue Jan  6 17:22:12 2009
From: tim+rabbitmq.com at coote.org (Tim Coote)
Date: Tue, 6 Jan 2009 17:22:12 +0000
Subject: [rabbitmq-discuss] Fwd: question on the faq
In-Reply-To: <269388e30901060805u7c25e678kc753460e430ac28d@mail.gmail.com>
References: <CBB16A07-BAB9-4C20-80E2-6D25ADD51AA5@coote.org>
	<167204d20901050455g6a8415c8t6a69f1b3ba8107e0@mail.gmail.com>
	<496211C9.9040504@redhat.com> <49621F7C.8090502@lshift.net>
	<4962294C.9000307@redhat.com>
	<FDD6BBFD-1053-4113-8EF5-55560873CDB5@coote.org>
	<49623BF5.8010206@redhat.com>
	<F2592FEF-F14D-49B6-B5ED-C2F748E4BC0C@coote.org>
	<49635E75.5010904@redhat.com>
	<12BC400B-6820-4D2E-BE4B-335AC41F5189@coote.org>
	<269388e30901060805u7c25e678kc753460e430ac28d@mail.gmail.com>
Message-ID: <60649E61-0C1A-481D-B815-798A1F556197@coote.org>

These steps are all from the pov of my application.  I'm assuming that  
there must be messages in both directions. If this were paper based,  
step 4 would include opening the mail and reconciling booking  
confirmations against booking orders sent out in step 2, + separate  
steps to handle timeouts, etc, which I'd expect to be in the context  
of the 'transaction'.  I could write this as a series of async  
processes, but my experience of that type of design when given to  
programmers is that I get much more complexity than I need.

Does that make sense?

Tim

On 6 Jan 2009, at 16:05, Ben Hood wrote:

>
> Tim,
>
> On Tue, Jan 6, 2009 at 2:44 PM, Tim Coote <tim 
> +rabbitmq.com at coote.org> wrote:
>> Now I'm very confused. In my mind, to book my holiday example, I  
>> need:
>> 1/ Begin transaction
>> 2/ prepare definition of what to book (cab to airport, insurance,
>> flight, hotel, etc)
>> 3/ send booking requests
>> 4/ receive and record booking confirmations
>> 5/ Commit
>
> I'm probably missing the point, but how can the entity that produces
> the booking confirmations process any requests that haven't been
> committed yet?
>
> Ben
>







From gfodor at gmail.com  Tue Jan  6 17:58:21 2009
From: gfodor at gmail.com (gfodor)
Date: Tue, 6 Jan 2009 09:58:21 -0800 (PST)
Subject: [rabbitmq-discuss]  RabbitMQ timing out under small load
Message-ID: <21315520.post@talk.nabble.com>


We had an incident yesterday while restarting some servers where RabbitMQ
began basically being dysfunctional -- we were getting connection timeouts
in our log everywhere, and were not even able to perform a rabbitmqctl
list_queues without it timing out 70-80% of the time.

Here's our setup. We have two RabbitMQ nodes running on EC2 running Ubuntu
hardy. They have four queues, all of them durable, each with <1kb message
sizes. Yesterday we were doing a deployment so naturally these queues filled
up with backlog as the servers responsible for processing them were
temporarily turned off. We ran into a snag in the deployment, so this
downtime was extended, which resulted in the queues backlogging more than
we've had to do in the past.

At the time of the incident, both nodes were displaying the same behavior,
though anecdotally it appeared that one node was slightly more responsive
than the other. list_queues was timing out and our consumers (once brought
back up) were throwing connection timeout errors left and right. We also
noticed that the consumer threads that did not timeout would in fact have to
wait 2-3 seconds on a synchronous call to get before receiving the next
message from the queue. We were pushing approximately 30-60 items per second
onto the 4 queues in total. At the time of the failures, the persister log
was around 25mb, and I was able to see using list_queues that the queue
sizes in total was approximately 50MB. RAM wise, rabbit was using
approximately 30-40MB on each machine and there were intermittent CPU spikes
but generally the CPU was largely idle. (Note that we initialize these
queues in a manner that we are sure they are distributed over the nodes
evenly, half the queues are 'owned' by node 1 and the other by node 2, so
the RAM usage makes sense.) Using iostat, the disk did not seem to be under
much load, and now that things are nominal it looks like the disk load is
the same as when things were broken (about 30 blk/s writes.) 

One thing to notice obviously is this isn't a very high workload, so we are
pretty perplexed why things basically died after our queue backed up for an
hour. We managed to fix the problem by basically purging the two larger
queues (after several attempts), and things basically snapped out of it.
Fortunately for us the data on these queues didn't really need to be
retained, and we were able to salvage the data on the other two queues in
this case which is the real data we need durable. 

The rabbit.log didn't reveal anything useful, it just simply showed the
regular persister log rotating messages missed in with timeout errors such
as the following:

=WARNING REPORT==== 6-Jan-2009::02:20:42 ===
Non-AMQP exit reason '{timeout,
                          {gen_server,
                              call,
                             
[<8656.465.0>,{basic_get,<0.14214.1>,false}]}}'

We're obviously deeply concerned by this incident, particularly since
RabbitMQ was nowhere near exhausting memory or I/O capacity and simply
seemed to be having internal contention issues or garbage collection issues
or something going on preventing it from being able to handle our light
workload once our consumers came back online. Any help you can give is
greatly appreciated!

-- 
View this message in context: http://www.nabble.com/RabbitMQ-timing-out-under-small-load-tp21315520p21315520.html
Sent from the RabbitMQ mailing list archive at Nabble.com.




From kirk at kirkwylie.com  Tue Jan  6 18:05:19 2009
From: kirk at kirkwylie.com (Kirk Wylie)
Date: Tue, 6 Jan 2009 18:05:19 +0000
Subject: [rabbitmq-discuss] Migrating Java test suite from junit3.8 to
	junit4?
Message-ID: <8f10a9e00901061005g6e4d837cw3a3e7f2abfa9e123@mail.gmail.com>

I'm starting to do some development using and enhancing some features
in the RabbitMQ Java Client Library, and I'm attempting to determine
to what level we need to prioritize continuing support for 1.4 (and
earlier) JVMs.

Taking my lead from Alex Miller
(http://tech.puredanger.com/2008/07/15/jdk-version-poll-results/),
I've created an online poll to gauge the types of JVMs that people are
currently using so that we can determine our optimum platform support
plans for Java clients.

If you are currently, or planning to, use the RabbitMQ Java client,
please help me out by filling out this quick (less than 5 minute)
poll:
http://www.misterpoll.com/polls/376470

I'll post results when people start filling it in!

Thanks a lot in advance,

Kirk Wylie



From alexis.richardson at cohesiveft.com  Tue Jan  6 18:08:28 2009
From: alexis.richardson at cohesiveft.com (Alexis Richardson)
Date: Tue, 6 Jan 2009 18:08:28 +0000
Subject: [rabbitmq-discuss] RabbitMQ timing out under small load
In-Reply-To: <21315520.post@talk.nabble.com>
References: <21315520.post@talk.nabble.com>
Message-ID: <167204d20901061008i33b8c752o6736aae29bff2b5b@mail.gmail.com>

Can you tell us a bit more about the EC2 set up please - is there
anything unusual about how you built and connect to your AMIs?

alexis


On Tue, Jan 6, 2009 at 5:58 PM, gfodor <gfodor at gmail.com> wrote:
>
> We had an incident yesterday while restarting some servers where RabbitMQ
> began basically being dysfunctional -- we were getting connection timeouts
> in our log everywhere, and were not even able to perform a rabbitmqctl
> list_queues without it timing out 70-80% of the time.
>
> Here's our setup. We have two RabbitMQ nodes running on EC2 running Ubuntu
> hardy. They have four queues, all of them durable, each with <1kb message
> sizes. Yesterday we were doing a deployment so naturally these queues filled
> up with backlog as the servers responsible for processing them were
> temporarily turned off. We ran into a snag in the deployment, so this
> downtime was extended, which resulted in the queues backlogging more than
> we've had to do in the past.
>
> At the time of the incident, both nodes were displaying the same behavior,
> though anecdotally it appeared that one node was slightly more responsive
> than the other. list_queues was timing out and our consumers (once brought
> back up) were throwing connection timeout errors left and right. We also
> noticed that the consumer threads that did not timeout would in fact have to
> wait 2-3 seconds on a synchronous call to get before receiving the next
> message from the queue. We were pushing approximately 30-60 items per second
> onto the 4 queues in total. At the time of the failures, the persister log
> was around 25mb, and I was able to see using list_queues that the queue
> sizes in total was approximately 50MB. RAM wise, rabbit was using
> approximately 30-40MB on each machine and there were intermittent CPU spikes
> but generally the CPU was largely idle. (Note that we initialize these
> queues in a manner that we are sure they are distributed over the nodes
> evenly, half the queues are 'owned' by node 1 and the other by node 2, so
> the RAM usage makes sense.) Using iostat, the disk did not seem to be under
> much load, and now that things are nominal it looks like the disk load is
> the same as when things were broken (about 30 blk/s writes.)
>
> One thing to notice obviously is this isn't a very high workload, so we are
> pretty perplexed why things basically died after our queue backed up for an
> hour. We managed to fix the problem by basically purging the two larger
> queues (after several attempts), and things basically snapped out of it.
> Fortunately for us the data on these queues didn't really need to be
> retained, and we were able to salvage the data on the other two queues in
> this case which is the real data we need durable.
>
> The rabbit.log didn't reveal anything useful, it just simply showed the
> regular persister log rotating messages missed in with timeout errors such
> as the following:
>
> =WARNING REPORT==== 6-Jan-2009::02:20:42 ===
> Non-AMQP exit reason '{timeout,
>                          {gen_server,
>                              call,
>
> [<8656.465.0>,{basic_get,<0.14214.1>,false}]}}'
>
> We're obviously deeply concerned by this incident, particularly since
> RabbitMQ was nowhere near exhausting memory or I/O capacity and simply
> seemed to be having internal contention issues or garbage collection issues
> or something going on preventing it from being able to handle our light
> workload once our consumers came back online. Any help you can give is
> greatly appreciated!
>
> --
> View this message in context: http://www.nabble.com/RabbitMQ-timing-out-under-small-load-tp21315520p21315520.html
> Sent from the RabbitMQ mailing list archive at Nabble.com.
>
>
> _______________________________________________
> rabbitmq-discuss mailing list
> rabbitmq-discuss at lists.rabbitmq.com
> http://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss
>



From gfodor at gmail.com  Tue Jan  6 18:16:25 2009
From: gfodor at gmail.com (gfodor)
Date: Tue, 6 Jan 2009 10:16:25 -0800 (PST)
Subject: [rabbitmq-discuss] RabbitMQ timing out under small load
In-Reply-To: <167204d20901061008i33b8c752o6736aae29bff2b5b@mail.gmail.com>
References: <21315520.post@talk.nabble.com>
	<167204d20901061008i33b8c752o6736aae29bff2b5b@mail.gmail.com>
Message-ID: <21315877.post@talk.nabble.com>


Not really, we're using the standard Ubuntu AMIs out of the box, and actually
just set up the rabbitmq brokers by hand on the machines.

We're using the 32-bit hardy image from here:

http://alestic.com/

There is one other issue we had been running into. Basically we're on JVM5
and we were running into the issue outlined here:

http://www.nabble.com/TCP-timeouts-td17102781.html#a17102781

so we upped our heartbeat value to 30 seconds, which I realize is high, but
the problem went away. I wasn't sure (doubtful) this could affect things,
but in the interest of full disclosure there it is :)


Alexis Richardson-2 wrote:
> 
> Can you tell us a bit more about the EC2 set up please - is there
> anything unusual about how you built and connect to your AMIs?
> 
> alexis
> 
> 
> On Tue, Jan 6, 2009 at 5:58 PM, gfodor <gfodor at gmail.com> wrote:
>>
>> We had an incident yesterday while restarting some servers where RabbitMQ
>> began basically being dysfunctional -- we were getting connection
>> timeouts
>> in our log everywhere, and were not even able to perform a rabbitmqctl
>> list_queues without it timing out 70-80% of the time.
>>
>> Here's our setup. We have two RabbitMQ nodes running on EC2 running
>> Ubuntu
>> hardy. They have four queues, all of them durable, each with <1kb message
>> sizes. Yesterday we were doing a deployment so naturally these queues
>> filled
>> up with backlog as the servers responsible for processing them were
>> temporarily turned off. We ran into a snag in the deployment, so this
>> downtime was extended, which resulted in the queues backlogging more than
>> we've had to do in the past.
>>
>> At the time of the incident, both nodes were displaying the same
>> behavior,
>> though anecdotally it appeared that one node was slightly more responsive
>> than the other. list_queues was timing out and our consumers (once
>> brought
>> back up) were throwing connection timeout errors left and right. We also
>> noticed that the consumer threads that did not timeout would in fact have
>> to
>> wait 2-3 seconds on a synchronous call to get before receiving the next
>> message from the queue. We were pushing approximately 30-60 items per
>> second
>> onto the 4 queues in total. At the time of the failures, the persister
>> log
>> was around 25mb, and I was able to see using list_queues that the queue
>> sizes in total was approximately 50MB. RAM wise, rabbit was using
>> approximately 30-40MB on each machine and there were intermittent CPU
>> spikes
>> but generally the CPU was largely idle. (Note that we initialize these
>> queues in a manner that we are sure they are distributed over the nodes
>> evenly, half the queues are 'owned' by node 1 and the other by node 2, so
>> the RAM usage makes sense.) Using iostat, the disk did not seem to be
>> under
>> much load, and now that things are nominal it looks like the disk load is
>> the same as when things were broken (about 30 blk/s writes.)
>>
>> One thing to notice obviously is this isn't a very high workload, so we
>> are
>> pretty perplexed why things basically died after our queue backed up for
>> an
>> hour. We managed to fix the problem by basically purging the two larger
>> queues (after several attempts), and things basically snapped out of it.
>> Fortunately for us the data on these queues didn't really need to be
>> retained, and we were able to salvage the data on the other two queues in
>> this case which is the real data we need durable.
>>
>> The rabbit.log didn't reveal anything useful, it just simply showed the
>> regular persister log rotating messages missed in with timeout errors
>> such
>> as the following:
>>
>> =WARNING REPORT==== 6-Jan-2009::02:20:42 ===
>> Non-AMQP exit reason '{timeout,
>>                          {gen_server,
>>                              call,
>>
>> [<8656.465.0>,{basic_get,<0.14214.1>,false}]}}'
>>
>> We're obviously deeply concerned by this incident, particularly since
>> RabbitMQ was nowhere near exhausting memory or I/O capacity and simply
>> seemed to be having internal contention issues or garbage collection
>> issues
>> or something going on preventing it from being able to handle our light
>> workload once our consumers came back online. Any help you can give is
>> greatly appreciated!
>>
>> --
>> View this message in context:
>> http://www.nabble.com/RabbitMQ-timing-out-under-small-load-tp21315520p21315520.html
>> Sent from the RabbitMQ mailing list archive at Nabble.com.
>>
>>
>> _______________________________________________
>> rabbitmq-discuss mailing list
>> rabbitmq-discuss at lists.rabbitmq.com
>> http://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss
>>
> 
> _______________________________________________
> rabbitmq-discuss mailing list
> rabbitmq-discuss at lists.rabbitmq.com
> http://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss
> 
> 

-- 
View this message in context: http://www.nabble.com/RabbitMQ-timing-out-under-small-load-tp21315520p21315877.html
Sent from the RabbitMQ mailing list archive at Nabble.com.




From alexis.richardson at cohesiveft.com  Tue Jan  6 18:35:18 2009
From: alexis.richardson at cohesiveft.com (Alexis Richardson)
Date: Tue, 6 Jan 2009 18:35:18 +0000
Subject: [rabbitmq-discuss] RabbitMQ timing out under small load
In-Reply-To: <21315877.post@talk.nabble.com>
References: <21315520.post@talk.nabble.com>
	<167204d20901061008i33b8c752o6736aae29bff2b5b@mail.gmail.com>
	<21315877.post@talk.nabble.com>
Message-ID: <167204d20901061035i365d8c00k710d523b342fd725@mail.gmail.com>

Thanks!

I suspect a funky mix of EC2, TCP, latency, and JVM5 is to blame,
manifested as non-determinacy in your Rabbit cluster.

One of the guys on this list is an EC2 expert and I hope he will
comment before we dig deeper into the Rabbit side...


On Tue, Jan 6, 2009 at 6:16 PM, gfodor <gfodor at gmail.com> wrote:
>
> Not really, we're using the standard Ubuntu AMIs out of the box, and actually
> just set up the rabbitmq brokers by hand on the machines.
>
> We're using the 32-bit hardy image from here:
>
> http://alestic.com/
>
> There is one other issue we had been running into. Basically we're on JVM5
> and we were running into the issue outlined here:
>
> http://www.nabble.com/TCP-timeouts-td17102781.html#a17102781
>
> so we upped our heartbeat value to 30 seconds, which I realize is high, but
> the problem went away. I wasn't sure (doubtful) this could affect things,
> but in the interest of full disclosure there it is :)
>
>
> Alexis Richardson-2 wrote:
>>
>> Can you tell us a bit more about the EC2 set up please - is there
>> anything unusual about how you built and connect to your AMIs?
>>
>> alexis
>>
>>
>> On Tue, Jan 6, 2009 at 5:58 PM, gfodor <gfodor at gmail.com> wrote:
>>>
>>> We had an incident yesterday while restarting some servers where RabbitMQ
>>> began basically being dysfunctional -- we were getting connection
>>> timeouts
>>> in our log everywhere, and were not even able to perform a rabbitmqctl
>>> list_queues without it timing out 70-80% of the time.
>>>
>>> Here's our setup. We have two RabbitMQ nodes running on EC2 running
>>> Ubuntu
>>> hardy. They have four queues, all of them durable, each with <1kb message
>>> sizes. Yesterday we were doing a deployment so naturally these queues
>>> filled
>>> up with backlog as the servers responsible for processing them were
>>> temporarily turned off. We ran into a snag in the deployment, so this
>>> downtime was extended, which resulted in the queues backlogging more than
>>> we've had to do in the past.
>>>
>>> At the time of the incident, both nodes were displaying the same
>>> behavior,
>>> though anecdotally it appeared that one node was slightly more responsive
>>> than the other. list_queues was timing out and our consumers (once
>>> brought
>>> back up) were throwing connection timeout errors left and right. We also
>>> noticed that the consumer threads that did not timeout would in fact have
>>> to
>>> wait 2-3 seconds on a synchronous call to get before receiving the next
>>> message from the queue. We were pushing approximately 30-60 items per
>>> second
>>> onto the 4 queues in total. At the time of the failures, the persister
>>> log
>>> was around 25mb, and I was able to see using list_queues that the queue
>>> sizes in total was approximately 50MB. RAM wise, rabbit was using
>>> approximately 30-40MB on each machine and there were intermittent CPU
>>> spikes
>>> but generally the CPU was largely idle. (Note that we initialize these
>>> queues in a manner that we are sure they are distributed over the nodes
>>> evenly, half the queues are 'owned' by node 1 and the other by node 2, so
>>> the RAM usage makes sense.) Using iostat, the disk did not seem to be
>>> under
>>> much load, and now that things are nominal it looks like the disk load is
>>> the same as when things were broken (about 30 blk/s writes.)
>>>
>>> One thing to notice obviously is this isn't a very high workload, so we
>>> are
>>> pretty perplexed why things basically died after our queue backed up for
>>> an
>>> hour. We managed to fix the problem by basically purging the two larger
>>> queues (after several attempts), and things basically snapped out of it.
>>> Fortunately for us the data on these queues didn't really need to be
>>> retained, and we were able to salvage the data on the other two queues in
>>> this case which is the real data we need durable.
>>>
>>> The rabbit.log didn't reveal anything useful, it just simply showed the
>>> regular persister log rotating messages missed in with timeout errors
>>> such
>>> as the following:
>>>
>>> =WARNING REPORT==== 6-Jan-2009::02:20:42 ===
>>> Non-AMQP exit reason '{timeout,
>>>                          {gen_server,
>>>                              call,
>>>
>>> [<8656.465.0>,{basic_get,<0.14214.1>,false}]}}'
>>>
>>> We're obviously deeply concerned by this incident, particularly since
>>> RabbitMQ was nowhere near exhausting memory or I/O capacity and simply
>>> seemed to be having internal contention issues or garbage collection
>>> issues
>>> or something going on preventing it from being able to handle our light
>>> workload once our consumers came back online. Any help you can give is
>>> greatly appreciated!
>>>
>>> --
>>> View this message in context:
>>> http://www.nabble.com/RabbitMQ-timing-out-under-small-load-tp21315520p21315520.html
>>> Sent from the RabbitMQ mailing list archive at Nabble.com.
>>>
>>>
>>> _______________________________________________
>>> rabbitmq-discuss mailing list
>>> rabbitmq-discuss at lists.rabbitmq.com
>>> http://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss
>>>
>>
>> _______________________________________________
>> rabbitmq-discuss mailing list
>> rabbitmq-discuss at lists.rabbitmq.com
>> http://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss
>>
>>
>
> --
> View this message in context: http://www.nabble.com/RabbitMQ-timing-out-under-small-load-tp21315520p21315877.html
> Sent from the RabbitMQ mailing list archive at Nabble.com.
>
>
> _______________________________________________
> rabbitmq-discuss mailing list
> rabbitmq-discuss at lists.rabbitmq.com
> http://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss
>



From 0x6e6562 at gmail.com  Tue Jan  6 18:33:31 2009
From: 0x6e6562 at gmail.com (Ben Hood)
Date: Tue, 6 Jan 2009 18:33:31 +0000
Subject: [rabbitmq-discuss] Fwd: question on the faq
In-Reply-To: <60649E61-0C1A-481D-B815-798A1F556197@coote.org>
References: <CBB16A07-BAB9-4C20-80E2-6D25ADD51AA5@coote.org>
	<49621F7C.8090502@lshift.net> <4962294C.9000307@redhat.com>
	<FDD6BBFD-1053-4113-8EF5-55560873CDB5@coote.org>
	<49623BF5.8010206@redhat.com>
	<F2592FEF-F14D-49B6-B5ED-C2F748E4BC0C@coote.org>
	<49635E75.5010904@redhat.com>
	<12BC400B-6820-4D2E-BE4B-335AC41F5189@coote.org>
	<269388e30901060805u7c25e678kc753460e430ac28d@mail.gmail.com>
	<60649E61-0C1A-481D-B815-798A1F556197@coote.org>
Message-ID: <269388e30901061033l7fb428b2y51cb5dd499b1a2cc@mail.gmail.com>

Tim,

On Tue, Jan 6, 2009 at 5:22 PM, Tim Coote <tim+rabbitmq.com at coote.org> wrote:
> These steps are all from the pov of my application.  I'm assuming that there
> must be messages in both directions. If this were paper based, step 4 would
> include opening the mail and reconciling booking confirmations against
> booking orders sent out in step 2, + separate steps to handle timeouts, etc,
> which I'd expect to be in the context of the 'transaction'.  I could write
> this as a series of async processes, but my experience of that type of
> design when given to programmers is that I get much more complexity than I
> need.
>
> Does that make sense?

The bit that is confusing me is the intention of the transaction
(which I guess is the crux of this whole thread :-)

So going back to you paper based analogy, what is the logical unit of work?

Is it

a) send out n requests and if any error occurs, 0 requests get sent
because they are grouped in a transaction;
b) send out n requests and wait for every result to come back and then
if there is an error with any response, roll the whole thing back

?

The reason why I ask is because I can't see how (b) can work unless
you propagate the transactional context to all of the consumers of the
requests. But as I said before, I'm probably missing the point.

Ben



From tim+rabbitmq.com at coote.org  Tue Jan  6 19:32:08 2009
From: tim+rabbitmq.com at coote.org (Tim Coote)
Date: Tue, 6 Jan 2009 19:32:08 +0000
Subject: [rabbitmq-discuss] Fwd: question on the faq
In-Reply-To: <269388e30901061033l7fb428b2y51cb5dd499b1a2cc@mail.gmail.com>
References: <CBB16A07-BAB9-4C20-80E2-6D25ADD51AA5@coote.org>
	<49621F7C.8090502@lshift.net> <4962294C.9000307@redhat.com>
	<FDD6BBFD-1053-4113-8EF5-55560873CDB5@coote.org>
	<49623BF5.8010206@redhat.com>
	<F2592FEF-F14D-49B6-B5ED-C2F748E4BC0C@coote.org>
	<49635E75.5010904@redhat.com>
	<12BC400B-6820-4D2E-BE4B-335AC41F5189@coote.org>
	<269388e30901060805u7c25e678kc753460e430ac28d@mail.gmail.com>
	<60649E61-0C1A-481D-B815-798A1F556197@coote.org>
	<269388e30901061033l7fb428b2y51cb5dd499b1a2cc@mail.gmail.com>
Message-ID: <26FC724D-7FC1-485B-9E7E-BA64661E78D3@coote.org>

b) is the correct answer. That's what a transaction means - you cannot  
dip in and out of the transaction.

However, it is possible to have a compensating transaction, as part of  
the rollback - eg the downstream systems may not support enough state  
transitions, so a booking would imply a contract, which would have a  
cost to get out of.  This is the common approach for any systems that  
drive the physical world (eg producing printed material or driving a  
robot.)  Even in this type of scenario, the transactional model makes  
it easier to get the analysis complete and correct, although it's  
better to get the downstream systems to support suitable states.  eg,  
in the real world, I can make a provisional booking, which times out  
if I don't commit to a firm booking within a known (possibly variable)  
timeline.

I find that without this approach, the overall requirements/analysis  
and design is frequently incomplete, revealing inconsistencies between  
the assumptions of the upstream and downstream systems and costly  
remediation.

Tim


On 6 Jan 2009, at 18:33, Ben Hood wrote:

>
> Tim,
>
> On Tue, Jan 6, 2009 at 5:22 PM, Tim Coote <tim 
> +rabbitmq.com at coote.org> wrote:
>> These steps are all from the pov of my application.  I'm assuming  
>> that there
>> must be messages in both directions. If this were paper based, step  
>> 4 would
>> include opening the mail and reconciling booking confirmations  
>> against
>> booking orders sent out in step 2, + separate steps to handle  
>> timeouts, etc,
>> which I'd expect to be in the context of the 'transaction'.  I  
>> could write
>> this as a series of async processes, but my experience of that type  
>> of
>> design when given to programmers is that I get much more complexity  
>> than I
>> need.
>>
>> Does that make sense?
>
> The bit that is confusing me is the intention of the transaction
> (which I guess is the crux of this whole thread :-)
>
> So going back to you paper based analogy, what is the logical unit  
> of work?
>
> Is it
>
> a) send out n requests and if any error occurs, 0 requests get sent
> because they are grouped in a transaction;
> b) send out n requests and wait for every result to come back and then
> if there is an error with any response, roll the whole thing back
>
> ?
>
> The reason why I ask is because I can't see how (b) can work unless
> you propagate the transactional context to all of the consumers of the
> requests. But as I said before, I'm probably missing the point.
>
> Ben
>

Tim Coote
tim at coote.org
vincit veritas






From dmitriy.samovskiy at cohesiveft.com  Tue Jan  6 19:35:24 2009
From: dmitriy.samovskiy at cohesiveft.com (Dmitriy Samovskiy)
Date: Tue, 06 Jan 2009 13:35:24 -0600
Subject: [rabbitmq-discuss] RabbitMQ timing out under small load
In-Reply-To: <21315520.post@talk.nabble.com>
References: <21315520.post@talk.nabble.com>
Message-ID: <4963B27C.2060407@cohesiveft.com>

Hi there,

Please note that I personally haven't observed symptoms that you describe, so I can't 
speak from practical experience, only theoretical.


gfodor wrote:
> We had an incident yesterday while restarting some servers where RabbitMQ
> began basically being dysfunctional -- we were getting connection timeouts
> in our log everywhere, and were not even able to perform a rabbitmqctl
> list_queues without it timing out 70-80% of the time.
Was there anything to suggest overall network latency or connection timeouts or connection 
issues to other services running on the hosts where rabbitmq was running? In other words, 
is it possible that the issues were related to the host and/or OS?

Also, to confirm, you are running 2 rabbitmq brokers on 2 different EC2 instances (1 
broker per instance) and the problem happened on both instances, both brokers at the same 
time and brokers are not in a rabbitmq cluster, right?


> 
> Here's our setup. We have two RabbitMQ nodes running on EC2 running Ubuntu
> hardy. They have four queues, all of them durable, each with <1kb message
> sizes. Yesterday we were doing a deployment so naturally these queues filled
> up with backlog as the servers responsible for processing them were
> temporarily turned off. We ran into a snag in the deployment, so this
> downtime was extended, which resulted in the queues backlogging more than
> we've had to do in the past.
> 
> At the time of the incident, both nodes were displaying the same behavior,
> though anecdotally it appeared that one node was slightly more responsive
> than the other. list_queues was timing out and our consumers (once brought
> back up) were throwing connection timeout errors left and right. We also

Can you replay your deployment scenario (maybe not in production, of course) and check if 
you get the same problem? Alternatively, if I were to recreate an edge case of your 
scenario, I assume I'll need N producers sending messages with size=1K to the same queue 
(say amq.direct exchange, routing_key=foo) at aggregate rate 60 messages per second for 1 
hour without consuming, and the expected result is that broker will enter the bad state? 
What value corresponds to N in your situation?

Which version of rabbitmq were you running and on which erlang?

Did you have a chance to capture any system runtime info (netstat, tcpdump, etc) while 
this was happening?


> One thing to notice obviously is this isn't a very high workload, so we are
> pretty perplexed why things basically died after our queue backed up for an
> hour. We managed to fix the problem by basically purging the two larger
> queues (after several attempts), and things basically snapped out of it.
So you drained the queues by attaching a consumer to them? Did you restart brokers?

Also wondering if anybody on the list observed something similar, not necessarily in EC2.

- Dmitriy






From njbartlett at gmail.com  Tue Jan  6 19:47:14 2009
From: njbartlett at gmail.com (Neil Bartlett)
Date: Tue, 6 Jan 2009 19:47:14 +0000
Subject: [rabbitmq-discuss] Rabbit/OSGi Integration Code
Message-ID: <E45368C2-6F7E-498E-9B4B-2C0CC495AADE@gmail.com>

Hello list,

I have put together some exploratory code around the combination of  
RabbitMQ and OSGi. I feel that this could be a very powerful  
combination for building ESB-like functionality, and it may also open  
up some possibilities for Spring integration. The code is in a GitHub  
repository, please see the included README which details what I have  
done so far. Remember this is far from production-ready code, it is  
purely for experimentation.

Here is the URL: http://github.com/njbartlett/rabbitosgi

Incidentally, if anybody on the list is interested in discussing this  
and/or learning more about OSGi, I will be at the Eclipse Banking Day  
in London on 12 February. Attendance is free:
http://wiki.eclipse.org/EclipseBankingDayLondon

Regards,
Neil



From gfodor at gmail.com  Tue Jan  6 20:21:56 2009
From: gfodor at gmail.com (gfodor)
Date: Tue, 6 Jan 2009 12:21:56 -0800 (PST)
Subject: [rabbitmq-discuss] RabbitMQ timing out under small load
In-Reply-To: <4963B27C.2060407@cohesiveft.com>
References: <21315520.post@talk.nabble.com> <4963B27C.2060407@cohesiveft.com>
Message-ID: <21318246.post@talk.nabble.com>


Hey Dmitriy,

> Was there anything to suggest overall network latency or connection
> timeouts or connection 
> issues to other services running on the hosts where rabbitmq was running?
> In other words, 
> is it possible that the issues were related to the host and/or OS?

No, I was ssh'ed in and there was no odd latency on my connection.
Additionally, the rabbitmqctl list_queues command was timing out, so I'm
pretty sure it wasn't some external network latency. Beyond that, as soon as
I purged the larger queues the problem fixed itself so it definitely seemed
coupled with the backlogged queues. To purge the queues I basically just
deleted them and re-created them using the java client API.

> Also, to confirm, you are running 2 rabbitmq brokers on 2 different EC2
> instances (1 
> broker per instance) and the problem happened on both instances, both
> brokers at the same 
> time and brokers are not in a rabbitmq cluster, right?

Yes, they are on two instances but they are in fact clustered. Now that you
mention it, I remember that one of the nodes seemed to have no connections
to it while the other had a handful -- I also noticed that one node was more
responsive than the other. I'm wondering if perhaps it was a node-localized
issue but the effects were propagated due to the clustering?

> Can you replay your deployment scenario (maybe not in production, of
> course) and check if 
> you get the same problem? Alternatively, if I were to recreate an edge
> case of your 
> scenario, I assume I'll need N producers sending messages with size=1K to
> the same queue 
> (say amq.direct exchange, routing_key=foo) at aggregate rate 60 messages
> per second for 1 
> hour without consuming, and the expected result is that broker will enter
> the bad state? 
> What value corresponds to N in your situation?

The number at the time of the failure were that we had approximately 100k
items in aggregate in the queues and the total amount of data on disk was
50MB across both nodes, so the average message size was probably between 512
bytes and 1024 bytes. There were 5 producers running at the time -- once the
problems started occuring we noticed that the producers were still getting
messages through (the client library we wrote does a retry with a buffer of
pending messages) but they were trickling in at a much lower rate than
normal. (5-10 tps instead of 40-60.) 

Which version of rabbitmq were you running and on which erlang?

1.5.0/R11B

> Did you have a chance to capture any system runtime info (netstat,
> tcpdump, etc) while 
> this was happening?

Unfortunately not, I'm not a sysadmin wiz so I'm not positive how to grab
this type of TCP info.

Thanks again!
-- 
View this message in context: http://www.nabble.com/RabbitMQ-timing-out-under-small-load-tp21315520p21318246.html
Sent from the RabbitMQ mailing list archive at Nabble.com.




From dmitriy.samovskiy at cohesiveft.com  Tue Jan  6 21:54:28 2009
From: dmitriy.samovskiy at cohesiveft.com (Dmitriy Samovskiy)
Date: Tue, 06 Jan 2009 15:54:28 -0600
Subject: [rabbitmq-discuss] RabbitMQ timing out under small load
In-Reply-To: <21318246.post@talk.nabble.com>
References: <21315520.post@talk.nabble.com> <4963B27C.2060407@cohesiveft.com>
	<21318246.post@talk.nabble.com>
Message-ID: <4963D314.4070002@cohesiveft.com>



gfodor wrote:
> Yes, they are on two instances but they are in fact clustered. Now that you
> mention it, I remember that one of the nodes seemed to have no connections
> to it while the other had a handful -- I also noticed that one node was more
> responsive than the other. I'm wondering if perhaps it was a node-localized
> issue but the effects were propagated due to the clustering?
Possibly, and maybe even likely. I am not sufficiently familiar with erlang distributed 
mode and rabbit internals to say what kind of failure could lead to results that you 
described though.

Are you sure there is nothing of interest in rabbit logs, apart from timeouts, on both 
instances? Maybe something in system logs?

Any info in client logs maybe that could explain why all of them connected to a single 
broker (I assume normally you spread connections somewhat equally between the 2 brokers)?







From 0x6e6562 at gmail.com  Wed Jan  7 11:34:31 2009
From: 0x6e6562 at gmail.com (Ben Hood)
Date: Wed, 7 Jan 2009 11:34:31 +0000
Subject: [rabbitmq-discuss] Fwd: question on the faq
In-Reply-To: <26FC724D-7FC1-485B-9E7E-BA64661E78D3@coote.org>
References: <CBB16A07-BAB9-4C20-80E2-6D25ADD51AA5@coote.org>
	<FDD6BBFD-1053-4113-8EF5-55560873CDB5@coote.org>
	<49623BF5.8010206@redhat.com>
	<F2592FEF-F14D-49B6-B5ED-C2F748E4BC0C@coote.org>
	<49635E75.5010904@redhat.com>
	<12BC400B-6820-4D2E-BE4B-335AC41F5189@coote.org>
	<269388e30901060805u7c25e678kc753460e430ac28d@mail.gmail.com>
	<60649E61-0C1A-481D-B815-798A1F556197@coote.org>
	<269388e30901061033l7fb428b2y51cb5dd499b1a2cc@mail.gmail.com>
	<26FC724D-7FC1-485B-9E7E-BA64661E78D3@coote.org>
Message-ID: <269388e30901070334l6f19e4e4k3792b9e97dee013d@mail.gmail.com>

Tim,

On Tue, Jan 6, 2009 at 7:32 PM, Tim Coote <tim+rabbitmq.com at coote.org> wrote:
> b) is the correct answer. That's what a transaction means - you cannot dip
> in and out of the transaction.
>
> However, it is possible to have a compensating transaction, as part of the
> rollback - eg the downstream systems may not support enough state
> transitions, so a booking would imply a contract, which would have a cost to
> get out of.  This is the common approach for any systems that drive the
> physical world (eg producing printed material or driving a robot.)  Even in
> this type of scenario, the transactional model makes it easier to get the
> analysis complete and correct, although it's better to get the downstream
> systems to support suitable states.  eg, in the real world, I can make a
> provisional booking, which times out if I don't commit to a firm booking
> within a known (possibly variable) timeline.

So you intend to keep an exclusive lock on the entities that you
requesting from the downstream system for the duration of the unit of
work?

> I find that without this approach, the overall requirements/analysis and
> design is frequently incomplete, revealing inconsistencies between the
> assumptions of the upstream and downstream systems and costly remediation.

If those are you requirements then my initial feeling is that a
messaging system like Rabbit would be a poor fit for your use case.

This is because to make the requests visible to the downstream system
before the transaction commits, all of those systems would have to
participate in the same transaction. To do this, you would have to
extend the transactional context to each participant, which is not
possible (in Rabbit) without any application level code to propagate
the distributed consensus.

Hence my recommendation is to either take the example that Carl wrote
yesterday or use middleware that is less asynchronous.

BTW Carl - would it be possible to have a look at the code that you
wrote for Tim? It may clarify my lack of understanding.

Ben



From tim+rabbitmq.com at coote.org  Wed Jan  7 12:31:23 2009
From: tim+rabbitmq.com at coote.org (Tim Coote)
Date: Wed, 7 Jan 2009 12:31:23 +0000
Subject: [rabbitmq-discuss] Fwd: question on the faq
In-Reply-To: <269388e30901070334l6f19e4e4k3792b9e97dee013d@mail.gmail.com>
References: <CBB16A07-BAB9-4C20-80E2-6D25ADD51AA5@coote.org>
	<FDD6BBFD-1053-4113-8EF5-55560873CDB5@coote.org>
	<49623BF5.8010206@redhat.com>
	<F2592FEF-F14D-49B6-B5ED-C2F748E4BC0C@coote.org>
	<49635E75.5010904@redhat.com>
	<12BC400B-6820-4D2E-BE4B-335AC41F5189@coote.org>
	<269388e30901060805u7c25e678kc753460e430ac28d@mail.gmail.com>
	<60649E61-0C1A-481D-B815-798A1F556197@coote.org>
	<269388e30901061033l7fb428b2y51cb5dd499b1a2cc@mail.gmail.com>
	<26FC724D-7FC1-485B-9E7E-BA64661E78D3@coote.org>
	<269388e30901070334l6f19e4e4k3792b9e97dee013d@mail.gmail.com>
Message-ID: <38141231-B6E1-44AE-A4CA-FC1346BF2DA0@coote.org>

Hi Ben
On 7 Jan 2009, at 11:34, Ben Hood wrote:

>
> So you intend to keep an exclusive lock on the entities that you
> requesting from the downstream system for the duration of the unit of
> work?
Not sure what you mean here? why do I need any exclusive lock? This  
sounds like a scale issue, in general, which will drive the  
interaction process that's feasible. All I want is that what my app  
understands is the state of the world (including entities that are  
invented to plan the future or model uncertainty. Without this  
guarantee, I don't see how the app works reliably anyway.

If the resource that my app's looking to 'get a lock on' gets  
consumed, the transaction aborts. What's the problem?
>
> If those are you requirements then my initial feeling is that a
> messaging system like Rabbit would be a poor fit for your use case.
>
> This is because to make the requests visible to the downstream system
> before the transaction commits, all of those systems would have to
> participate in the same transaction. To do this, you would have to
> extend the transactional context to each participant, which is not
> possible (in Rabbit) without any application level code to propagate
> the distributed consensus.
I agree with your analysis of my example, if the option is available  
to avoid a messaging based application idiom. However, my original  
post was only to understand/request clarity on the ways that the term  
Transaction is used in the FAQ.  I think that its use is confusing to  
some people coming to the technology domain for the first time,  
especially if they've got a background in transactional systems.   
That's my pov, I'm happy if the community agrees - even more so if it  
acts and I'm right - and I won't lose any sleep if it doesn't. I think  
that the DTX class is closer to what I'd expected the term to mean.
>
>
> Hence my recommendation is to either take the example that Carl wrote
> yesterday or use middleware that is less asynchronous.
For the type of problem that I outline, I think that the best approach  
is to wrap the messaging plumbing as a transactional interface. My  
reasoning is that I want cheap coders to write my apps and I don't  
want them experimenting with asynchronous models in my business  
applications :-)  If I cannot get application level transactional  
semantics from a Service, I'd argue that the Service should be in  
constant review if it's in my SOA, as a prime intent of SOA is to  
reduce the ownership costs of applications.
>
>
> BTW Carl - would it be possible to have a look at the code that you
> wrote for Tim? It may clarify my lack of understanding.
>
> Ben
>

Tim Coote
tim at coote.org
vincit veritas






From alexis.richardson at cohesiveft.com  Wed Jan  7 12:38:41 2009
From: alexis.richardson at cohesiveft.com (Alexis Richardson)
Date: Wed, 7 Jan 2009 12:38:41 +0000
Subject: [rabbitmq-discuss] Fwd: question on the faq
In-Reply-To: <38141231-B6E1-44AE-A4CA-FC1346BF2DA0@coote.org>
References: <CBB16A07-BAB9-4C20-80E2-6D25ADD51AA5@coote.org>
	<F2592FEF-F14D-49B6-B5ED-C2F748E4BC0C@coote.org>
	<49635E75.5010904@redhat.com>
	<12BC400B-6820-4D2E-BE4B-335AC41F5189@coote.org>
	<269388e30901060805u7c25e678kc753460e430ac28d@mail.gmail.com>
	<60649E61-0C1A-481D-B815-798A1F556197@coote.org>
	<269388e30901061033l7fb428b2y51cb5dd499b1a2cc@mail.gmail.com>
	<26FC724D-7FC1-485B-9E7E-BA64661E78D3@coote.org>
	<269388e30901070334l6f19e4e4k3792b9e97dee013d@mail.gmail.com>
	<38141231-B6E1-44AE-A4CA-FC1346BF2DA0@coote.org>
Message-ID: <167204d20901070438q42a70f60vfb118904cd6019f9@mail.gmail.com>

Tim,

On Wed, Jan 7, 2009 at 12:31 PM, Tim Coote <tim+rabbitmq.com at coote.org> wrote:
> For the type of problem that I outline, I think that the best approach
> is to wrap the messaging plumbing as a transactional interface. My
> reasoning is that I want cheap coders to write my apps and I don't
> want them experimenting with asynchronous models in my business
> applications :-)  If I cannot get application level transactional
> semantics from a Service, I'd argue that the Service should be in
> constant review if it's in my SOA, as a prime intent of SOA is to
> reduce the ownership costs of applications.

I think this is why 'ESBs' have been successful - they wrap the async
plumbing (needed for scalable integration) behind a sync facade that
joe developer sees as 'request response'.  Then the transaction model
- whether more local TX style or full-on DTX style - can be set as a
configuration choice.  (If you do your ESB right...)

In my own view, distributed transactions are to be avoided whenever
possible.  But providing simple tools to enable that in practice, can
be a challenge.

alexis



From kirk at kirkwylie.com  Wed Jan  7 14:04:15 2009
From: kirk at kirkwylie.com (Kirk Wylie)
Date: Wed, 7 Jan 2009 14:04:15 +0000
Subject: [rabbitmq-discuss] Use of Java 1.4 with the RabbitMQ Java Client
	library
Message-ID: <8f10a9e00901070604m358a72c1l156982a2206b447a@mail.gmail.com>

(Apologies for the repost; I realized that my subject line yesterday
was a bit cryptic and not everybody that I need to might have seen it)

I'm starting to do some development using and enhancing some features
in the RabbitMQ Java Client Library, and I'm attempting to determine
to what level we need to prioritize continuing support for 1.4 (and
earlier) JVMs.

Taking my lead from Alex Miller
(http://tech.puredanger.com/2008/07/15/jdk-version-poll-results/),
I've created an online poll to gauge the types of JVMs that people are
currently using so that we can determine our optimum platform support
plans for Java clients.

If you are currently, or planning to, use the RabbitMQ Java client,
please help me out by filling out this quick (3 questions, less than 5
minute) poll:
http://www.misterpoll.com/polls/376470

I'll post results when people start filling it in!

Thanks a lot in advance,

Kirk Wylie



From holger at wizards.de  Wed Jan  7 14:15:15 2009
From: holger at wizards.de (=?ISO-8859-1?Q?Holger_Hoffst=E4tte?=)
Date: Wed, 07 Jan 2009 15:15:15 +0100
Subject: [rabbitmq-discuss] Use of Java 1.4 with the RabbitMQ Java
 Client library
In-Reply-To: <8f10a9e00901070604m358a72c1l156982a2206b447a@mail.gmail.com>
References: <8f10a9e00901070604m358a72c1l156982a2206b447a@mail.gmail.com>
Message-ID: <4964B8F3.6090208@wizards.de>

Kirk Wylie wrote:
> I'm starting to do some development using and enhancing some features
> in the RabbitMQ Java Client Library [..]

I've had many ideas flying around in my head (some crazy, some rather
mundane) but haven't really found the time to implement any yet. Can you
share what you're planning?

Holger



From kirk at kirkwylie.com  Wed Jan  7 14:30:37 2009
From: kirk at kirkwylie.com (Kirk Wylie)
Date: Wed, 7 Jan 2009 14:30:37 +0000
Subject: [rabbitmq-discuss] Use of Java 1.4 with the RabbitMQ Java
	Client library
In-Reply-To: <4964B8F3.6090208@wizards.de>
References: <8f10a9e00901070604m358a72c1l156982a2206b447a@mail.gmail.com>
	<4964B8F3.6090208@wizards.de>
Message-ID: <8f10a9e00901070630p1e924bf5v8ec4c4a9ccf8f555@mail.gmail.com>

On Wed, Jan 7, 2009 at 2:15 PM, Holger Hoffst?tte <holger at wizards.de> wrote:
> I've had many ideas flying around in my head (some crazy, some rather
> mundane) but haven't really found the time to implement any yet. Can you
> share what you're planning?

One of the first things I wanted to do was to improve the current test
suite to add quite a few more "pure" unit tests (right now it's almost
all functional and integration tests), and start adding in clover
coverage analysis. That's where the previous email title started up,
because one of the first things that I looked at was moving some or
all of the test framework from JUnit 3.8.1 to JUnit 4 (which of course
I can't do effectively if 1.4 is still a major requirement in the
future).

Then the first crazy/mundane thing that I was going to attempt was a
connection pooling system. Because that'll be quite complex, I want to
tackle the test side first so that I'm confident that I'm not breaking
things in subtle ways.

What ideas did you have?

Kirk



From tim+rabbitmq.com at coote.org  Wed Jan  7 15:07:54 2009
From: tim+rabbitmq.com at coote.org (Tim Coote)
Date: Wed, 7 Jan 2009 15:07:54 +0000
Subject: [rabbitmq-discuss] spec scope question
Message-ID: <7C172ED8-8A83-44BB-A0DE-C212E2DF421D@coote.org>

Does the scope of AMQP cover the management of the environment. Here's  
a typical usecase:

Context: my standards use an enterprise pubsub bus, based on AMQP so  
that producers and consumers can be decoupled in my app dev process. I  
have 50k servers with 1k application types in my estate. I cannot  
trust my inventory and configuration for my business applications and  
I have poor quality information on dependencies/composition between/of  
applications

- I want to retire application X
- How do I know what are the consumers of Application X's  published  
data so that I can re-source the data for the dependent systems, if  
there are any.

I know that this is a real problem for the operations groups and  
applications owners in large enterprises.  It doesn't get better with  
time ;-)

If the spec doesn't define how I'd find all consumers of data of a  
given type, then I'm going to have to build that functionality as part  
of my deployment. (actually, probably later, when I realise how much  
money I'm wasting on data centres)

I couldn't find anything relevant in 10.

Tim





From sustrik at imatix.com  Wed Jan  7 15:29:26 2009
From: sustrik at imatix.com (Martin Sustrik)
Date: Wed, 07 Jan 2009 16:29:26 +0100
Subject: [rabbitmq-discuss] spec scope question
In-Reply-To: <7C172ED8-8A83-44BB-A0DE-C212E2DF421D@coote.org>
References: <7C172ED8-8A83-44BB-A0DE-C212E2DF421D@coote.org>
Message-ID: <4964CA56.7040704@imatix.com>

Tim,

There's no way to do such thing.

When AMQP was designed one of the principles was "zero config" i.e. that 
it should be possible to run AMQP broker with no configuration and that 
applications should start running immediately.

This means that applications have to define the data flows themselves 
(using exchange/queue/bind semantics).

My feeling is that this design decision was rather unfortunate - exactly 
for the reason you've mentioned: The definition of global data flow is 
scattered across all the application code in the enterprise and thus 
virtually impossible to collect, inspect, reason about, modify etc.

Btw, I would suggest asking questions related to AMQP as a specification 
on amqp-dev mailing list. You'll get larger audience that way :)

Martin

Tim Coote wrote:
> Does the scope of AMQP cover the management of the environment. Here's  
> a typical usecase:
> 
> Context: my standards use an enterprise pubsub bus, based on AMQP so  
> that producers and consumers can be decoupled in my app dev process. I  
> have 50k servers with 1k application types in my estate. I cannot  
> trust my inventory and configuration for my business applications and  
> I have poor quality information on dependencies/composition between/of  
> applications
> 
> - I want to retire application X
> - How do I know what are the consumers of Application X's  published  
> data so that I can re-source the data for the dependent systems, if  
> there are any.
> 
> I know that this is a real problem for the operations groups and  
> applications owners in large enterprises.  It doesn't get better with  
> time ;-)
> 
> If the spec doesn't define how I'd find all consumers of data of a  
> given type, then I'm going to have to build that functionality as part  
> of my deployment. (actually, probably later, when I realise how much  
> money I'm wasting on data centres)
> 
> I couldn't find anything relevant in 10.
> 
> Tim
> 
> 
> 
> _______________________________________________
> rabbitmq-discuss mailing list
> rabbitmq-discuss at lists.rabbitmq.com
> http://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss




From holger at wizards.de  Wed Jan  7 15:33:33 2009
From: holger at wizards.de (=?ISO-8859-1?Q?Holger_Hoffst=E4tte?=)
Date: Wed, 07 Jan 2009 16:33:33 +0100
Subject: [rabbitmq-discuss] Use of Java 1.4 with the RabbitMQ Java
 Client library
In-Reply-To: <8f10a9e00901070630p1e924bf5v8ec4c4a9ccf8f555@mail.gmail.com>
References: <8f10a9e00901070604m358a72c1l156982a2206b447a@mail.gmail.com>	<4964B8F3.6090208@wizards.de>
	<8f10a9e00901070630p1e924bf5v8ec4c4a9ccf8f555@mail.gmail.com>
Message-ID: <4964CB4D.60605@wizards.de>

Kirk Wylie wrote:
> On Wed, Jan 7, 2009 at 2:15 PM, Holger Hoffst?tte <holger at wizards.de> wrote:
>> I've had many ideas flying around in my head (some crazy, some rather
>> mundane) but haven't really found the time to implement any yet. Can you
>> share what you're planning?
> 
> One of the first things I wanted to do was to improve the current test
> suite to add quite a few more "pure" unit tests (right now it's almost

good - though not sure how much they are ultimately worth it, as much of
the functionality is in the autogenerated protocol. Other than that I
found the code to be very readable and understandable, especially
considering how much time could be spent on it.

> Then the first crazy/mundane thing that I was going to attempt was a
> connection pooling system. Because that'll be quite complex, I want to
> tackle the test side first so that I'm confident that I'm not breaking
> things in subtle ways.

Oh dear. :) Got so many connections? I thought they were supposed to be
kept open.

> What ideas did you have?

Crazy German Alert!

- define common org.amqp interfaces (ala JMS) so that client app code
doesn't rely on the client lib implementation. Would require some work
with the WG but as the spec, entities and semantics keep changing it would
be a moving target so I haven't really bothered yet. Not sure if anybody
would even care as soon as the JMS mapping has been wrangled into the spec.

- n:m mapping of channels to socket connections, based on either some
up-front fixed ratio/priority scheme or dynamically adjusted traffic per
channel (maybe grouping slow/mostly-idle periodic polling/ticker channels
together). This would allow to connect to multiple broker instances in
parallel.

- maybe moving to NIO since it might nicely map to AMQP channels. A Netty
AMQP packet codec should be easy, and a consumer could register a payload
decoder on top of a channel for easy payload disassembly - Thrift,
Protobufs, XML (arrgh).

- more concurreny all the way, decoupling fragment assembly/concurrent
consumer delivery and the reader thread, backed by an injectable Executor
(looking at you, WorkManager). Incidentally that's how Netty works too.
Also the channel map is pretty oversynchronized and used from multiple
paths..not so good for multiple connections.

- the above would also accidentally slip in a JTA transaction thread boundary.

- no blocking queues and only concurrent dequeues where they cannot be
avoided. only blocking on condition objects, and always with timeouts.

- find a way towards as-zero-copy-as-possible fragment assembly. Each time
I see dozens of litte byte[]s being copied around 17 times for a single
message because of the !"?$ stream APIs my inner geek dies a little.

- JMX beanz for stats

- write a Spring-Integration transport because it happens to be based on
channel abstractions and will likely map nicely.

like I said, crazy.. and probably totally useless.

More JUnit tests, increased coverage or a proper maven build are probably
more helpful :-)

Holger




From holger at wizards.de  Wed Jan  7 15:44:05 2009
From: holger at wizards.de (=?ISO-8859-1?Q?Holger_Hoffst=E4tte?=)
Date: Wed, 07 Jan 2009 16:44:05 +0100
Subject: [rabbitmq-discuss] Use of Java 1.4 with the RabbitMQ Java
 Client library
In-Reply-To: <4964CB4D.60605@wizards.de>
References: <8f10a9e00901070604m358a72c1l156982a2206b447a@mail.gmail.com>	<4964B8F3.6090208@wizards.de>
	<8f10a9e00901070630p1e924bf5v8ec4c4a9ccf8f555@mail.gmail.com>
	<4964CB4D.60605@wizards.de>
Message-ID: <4964CDC5.3010607@wizards.de>

Holger Hoffst?tte wrote:
> More JUnit tests, increased coverage or a proper maven build are probably
> more helpful :-)

Case in point: com.rabbitmq.utility.SingleShotLinearTimer does not seem to
be used anymore (AFAICS) and could be purged. So yes, some branch/path
coverage will probably uncover even more.

Holger




From kirk at kirkwylie.com  Wed Jan  7 16:27:00 2009
From: kirk at kirkwylie.com (Kirk Wylie)
Date: Wed, 7 Jan 2009 16:27:00 +0000
Subject: [rabbitmq-discuss] Use of Java 1.4 with the RabbitMQ Java
	Client library
In-Reply-To: <4964CDC5.3010607@wizards.de>
References: <8f10a9e00901070604m358a72c1l156982a2206b447a@mail.gmail.com>
	<4964B8F3.6090208@wizards.de>
	<8f10a9e00901070630p1e924bf5v8ec4c4a9ccf8f555@mail.gmail.com>
	<4964CB4D.60605@wizards.de> <4964CDC5.3010607@wizards.de>
Message-ID: <8f10a9e00901070827o1fb0cc62g615b3f15b71ed157@mail.gmail.com>

On Wed, Jan 7, 2009 at 3:44 PM, Holger Hoffst?tte <holger at wizards.de> wrote:
> Holger Hoffst?tte wrote:
>> More JUnit tests, increased coverage or a proper maven build are probably
>> more helpful :-)
>
> Case in point: com.rabbitmq.utility.SingleShotLinearTimer does not seem to
> be used anymore (AFAICS) and could be purged. So yes, some branch/path
> coverage will probably uncover even more.

As I mentioned, part of this is to build up a coverage (read: Clover)
database which can then be used to optimize the test suite and prune
code, and where we can track coverage over time.

Kirk Wylie



From kirk at kirkwylie.com  Wed Jan  7 16:46:08 2009
From: kirk at kirkwylie.com (Kirk Wylie)
Date: Wed, 7 Jan 2009 16:46:08 +0000
Subject: [rabbitmq-discuss] Use of Java 1.4 with the RabbitMQ Java
	Client library
In-Reply-To: <4964CB4D.60605@wizards.de>
References: <8f10a9e00901070604m358a72c1l156982a2206b447a@mail.gmail.com>
	<4964B8F3.6090208@wizards.de>
	<8f10a9e00901070630p1e924bf5v8ec4c4a9ccf8f555@mail.gmail.com>
	<4964CB4D.60605@wizards.de>
Message-ID: <8f10a9e00901070846i5741d8act1630a96e56c457dd@mail.gmail.com>

On Wed, Jan 7, 2009 at 3:33 PM, Holger Hoffst?tte <holger at wizards.de> wrote:
> Kirk Wylie wrote:
>> One of the first things I wanted to do was to improve the current test
>> suite to add quite a few more "pure" unit tests (right now it's almost
>
> good - though not sure how much they are ultimately worth it, as much of
> the functionality is in the autogenerated protocol. Other than that I
> found the code to be very readable and understandable, especially
> considering how much time could be spent on it.

Oh, yeah, the code is definitely in good shape, but it could always be
better. :-)

The primary reason I thought to add some pure "unit" tests is that in
conjunction with coverage tools (which you and I both have referenced)
you can get some pretty interesting optimization and bang-for-the-buck
test cases. It's also a lot easier to identify precisely WHERE you've
broken the code with low-level tests-in-isolation.

>> Then the first crazy/mundane thing that I was going to attempt was a
>> connection pooling system. Because that'll be quite complex, I want to
>> tackle the test side first so that I'm confident that I'm not breaking
>> things in subtle ways.
>
> Oh dear. :) Got so many connections? I thought they were supposed to be
> kept open.

They are. That's the point. :-)

The issue is one similar to JDBC-based systems. You may have an object
which is otherwise stateless that needs to just publish out a message
when certain things happen. Does that one object need its own
Connection? No. Does it need to really hold open a stateful socket? No
as well. So it's probably easiest conceptually for the block to:
- Acquire a Connection
- Publish Message
- Release the Connection
Given that you may want to have blocks like that, and you might NOT
want to actually have "acquire a connection" mean "open a TCP socket",
you have a natural case for connection pools.

Admittedly, this is less useful than in JDBC, where a connection is
also a session, but I've come across cases where it would be useful in
the past, so no reason why we couldn't give it a shot! :-)

> Crazy German Alert!
>
> - define common org.amqp interfaces (ala JMS) so that client app code
> doesn't rely on the client lib implementation. Would require some work
> with the WG but as the spec, entities and semantics keep changing it would
> be a moving target so I haven't really bothered yet. Not sure if anybody
> would even care as soon as the JMS mapping has been wrangled into the spec.

I think JMS is quite possibly the better strategy for this, as you've
indicated. But the fact that your multiple client libraries are
implementing the same protocol means that you're probably not in as
bad a situation as you would be with JMS, and that locks everybody
into the same API at the code level. Perhaps one of the things that
AMQP brings to the table is that you can choose the protocol
implementation that most closely matches your desired API rather than
choosing your API based on the protocol that it needs to implement.

Once 0-9-1 reaches full interoperability, I don't expect for example
that there will even BE multiple AMQP Java client libraries that have
equivalent enough code APIs that you could do this. Why would there
be?

> - n:m mapping of channels to socket connections, based on either some
> up-front fixed ratio/priority scheme or dynamically adjusted traffic per
> channel (maybe grouping slow/mostly-idle periodic polling/ticker channels
> together). This would allow to connect to multiple broker instances in
> parallel.

Think of this in terms of a connection pool. That's what I'm talking about.

The connection pool concept here is more subtle than one for a
database (where connection == session/channel). In fact, rather than
having a "locked out/locked in" nature, you have a load factor on each
individual connection, which may be based on # channels, or something
even more sophisticated (load in messages or bytes/second, burst rate,
etc.).

> - maybe moving to NIO since it might nicely map to AMQP channels. A Netty
> AMQP packet codec should be easy, and a consumer could register a payload
> decoder on top of a channel for easy payload disassembly - Thrift,
> Protobufs, XML (arrgh).

NIO does match well, but NIO in Java doesn't match thread-blocking
old-IO for performance yet. It's far more a server-side technology in
terms of performance these days, because you have to have a LOT of
sockets open for NIO to beat OldIO for performance by any metric.

But it would definitely be an interesting talking point for the
community, and an NIO-based client could be quite useful for people
trying to do big AMQP routing and relaying in Java (see my comment
above about letting a thousant client libraries bloom with different
code-level APIs). I think if you're working with pure asynch IO, you
might want a different client API entirely to take advantage of it.

BTW, thanks for the link to Netty. Hadn't run across it yet.

> - more concurreny all the way, decoupling fragment assembly/concurrent
> consumer delivery and the reader thread, backed by an injectable Executor
> (looking at you, WorkManager). Incidentally that's how Netty works too.
> Also the channel map is pretty oversynchronized and used from multiple
> paths..not so good for multiple connections.

> - no blocking queues and only concurrent dequeues where they cannot be
> avoided. only blocking on condition objects, and always with timeouts.

Yep, there's definitely some places where concurrent performance could
be improved. And continuing to rely on backports-concurrent might
hinder that (which is why I started this trying to figure out whether
people are even using it in 1.4).

> - find a way towards as-zero-copy-as-possible fragment assembly. Each time
> I see dozens of litte byte[]s being copied around 17 times for a single
> message because of the !"?$ stream APIs my inner geek dies a little.
>
> - JMX beanz for stats
>
> - write a Spring-Integration transport because it happens to be based on
> channel abstractions and will likely map nicely.
>
> like I said, crazy.. and probably totally useless.

I don't think any of those are crazy or probably useless. If nothing
else, it gives me some fodder to get going with!

Kirk



From alexis.richardson at cohesiveft.com  Wed Jan  7 17:09:37 2009
From: alexis.richardson at cohesiveft.com (Alexis Richardson)
Date: Wed, 7 Jan 2009 17:09:37 +0000
Subject: [rabbitmq-discuss] spec scope question
In-Reply-To: <4964CA56.7040704@imatix.com>
References: <7C172ED8-8A83-44BB-A0DE-C212E2DF421D@coote.org>
	<4964CA56.7040704@imatix.com>
Message-ID: <167204d20901070909u4cac0098n24c3e873e393d5e0@mail.gmail.com>

I think that happy solution here is one where:

* Core functions - send a message - are zero config.
* Admin users have management rights.

This requires a good ACL solution.

alexis


On Wed, Jan 7, 2009 at 3:29 PM, Martin Sustrik <sustrik at imatix.com> wrote:
> Tim,
>
> There's no way to do such thing.
>
> When AMQP was designed one of the principles was "zero config" i.e. that
> it should be possible to run AMQP broker with no configuration and that
> applications should start running immediately.
>
> This means that applications have to define the data flows themselves
> (using exchange/queue/bind semantics).
>
> My feeling is that this design decision was rather unfortunate - exactly
> for the reason you've mentioned: The definition of global data flow is
> scattered across all the application code in the enterprise and thus
> virtually impossible to collect, inspect, reason about, modify etc.
>
> Btw, I would suggest asking questions related to AMQP as a specification
> on amqp-dev mailing list. You'll get larger audience that way :)
>
> Martin
>
> Tim Coote wrote:
>> Does the scope of AMQP cover the management of the environment. Here's
>> a typical usecase:
>>
>> Context: my standards use an enterprise pubsub bus, based on AMQP so
>> that producers and consumers can be decoupled in my app dev process. I
>> have 50k servers with 1k application types in my estate. I cannot
>> trust my inventory and configuration for my business applications and
>> I have poor quality information on dependencies/composition between/of
>> applications
>>
>> - I want to retire application X
>> - How do I know what are the consumers of Application X's  published
>> data so that I can re-source the data for the dependent systems, if
>> there are any.
>>
>> I know that this is a real problem for the operations groups and
>> applications owners in large enterprises.  It doesn't get better with
>> time ;-)
>>
>> If the spec doesn't define how I'd find all consumers of data of a
>> given type, then I'm going to have to build that functionality as part
>> of my deployment. (actually, probably later, when I realise how much
>> money I'm wasting on data centres)
>>
>> I couldn't find anything relevant in 10.
>>
>> Tim
>>
>>
>>
>> _______________________________________________
>> rabbitmq-discuss mailing list
>> rabbitmq-discuss at lists.rabbitmq.com
>> http://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss
>
>
> _______________________________________________
> rabbitmq-discuss mailing list
> rabbitmq-discuss at lists.rabbitmq.com
> http://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss
>



From holger at wizards.de  Wed Jan  7 17:15:55 2009
From: holger at wizards.de (=?ISO-8859-1?Q?Holger_Hoffst=E4tte?=)
Date: Wed, 07 Jan 2009 18:15:55 +0100
Subject: [rabbitmq-discuss] spec scope question
In-Reply-To: <167204d20901070909u4cac0098n24c3e873e393d5e0@mail.gmail.com>
References: <7C172ED8-8A83-44BB-A0DE-C212E2DF421D@coote.org>	<4964CA56.7040704@imatix.com>
	<167204d20901070909u4cac0098n24c3e873e393d5e0@mail.gmail.com>
Message-ID: <4964E34B.3000401@wizards.de>

Alexis Richardson wrote:
> I think that happy solution here is one where:
> 
> * Core functions - send a message - are zero config.
> * Admin users have management rights.
> 
> This requires a good ACL solution.

oh noes!

Quick, gotta watch http://vimeo.com/2723800 :-)

SCNR,
Holger
(btw the talk is quite funny beyond the ACL angle)



From gfodor at gmail.com  Wed Jan  7 21:07:27 2009
From: gfodor at gmail.com (gfodor)
Date: Wed, 7 Jan 2009 13:07:27 -0800 (PST)
Subject: [rabbitmq-discuss] RabbitMQ timing out under small load
In-Reply-To: <4963D314.4070002@cohesiveft.com>
References: <21315520.post@talk.nabble.com> <4963B27C.2060407@cohesiveft.com>
	<21318246.post@talk.nabble.com> <4963D314.4070002@cohesiveft.com>
Message-ID: <21340316.post@talk.nabble.com>


gfodor wrote:
> Possibly, and maybe even likely. I am not sufficiently familiar with
> erlang distributed 
> mode and rabbit internals to say what kind of failure could lead to
> results that you 
> described though.
> 
> Are you sure there is nothing of interest in rabbit logs, apart from
> timeouts, on both 
> instances? Maybe something in system logs?
> 
> Any info in client logs maybe that could explain why all of them connected
> to a single 
> broker (I assume normally you spread connections somewhat equally between
> the 2 brokers)?

I took another look at the logs and really there is nothing interesting
other than a series of timeout errors as pasted in my original post. Any
other ideas? 



-- 
View this message in context: http://www.nabble.com/RabbitMQ-timing-out-under-small-load-tp21315520p21340316.html
Sent from the RabbitMQ mailing list archive at Nabble.com.




From cremes.devlist at mac.com  Wed Jan  7 21:32:13 2009
From: cremes.devlist at mac.com (Chuck Remes)
Date: Wed, 07 Jan 2009 15:32:13 -0600
Subject: [rabbitmq-discuss] irc topic needs an update
Message-ID: <E9AF437C-F524-4676-A7D6-FCEF2100D55C@mac.com>

Most of the traffic on irc the last 2 weeks has been from people  
asking, "When is the topic going to get updated to reflect the 1.5.0  
release?"

We don't have permission to change the topic so this is  a heads-up to  
the powers-that-be that they should update it.

:)

cr




From 0x6e6562 at gmail.com  Wed Jan  7 21:52:27 2009
From: 0x6e6562 at gmail.com (Ben Hood)
Date: Wed, 7 Jan 2009 21:52:27 +0000
Subject: [rabbitmq-discuss] RabbitMQ timing out under small load
In-Reply-To: <21340316.post@talk.nabble.com>
References: <21315520.post@talk.nabble.com> <4963B27C.2060407@cohesiveft.com>
	<21318246.post@talk.nabble.com> <4963D314.4070002@cohesiveft.com>
	<21340316.post@talk.nabble.com>
Message-ID: <269388e30901071352o67fbfb4an8fa4f1707b2bf28@mail.gmail.com>

Gfodor,

On Wed, Jan 7, 2009 at 9:07 PM, gfodor <gfodor at gmail.com> wrote:
>
> gfodor wrote:
>> Possibly, and maybe even likely. I am not sufficiently familiar with
>> erlang distributed
>> mode and rabbit internals to say what kind of failure could lead to
>> results that you
>> described though.
>>
>> Are you sure there is nothing of interest in rabbit logs, apart from
>> timeouts, on both
>> instances? Maybe something in system logs?
>>
>> Any info in client logs maybe that could explain why all of them connected
>> to a single
>> broker (I assume normally you spread connections somewhat equally between
>> the 2 brokers)?
>
> I took another look at the logs and really there is nothing interesting
> other than a series of timeout errors as pasted in my original post. Any
> other ideas?

Are you able to reproduce this behavior at all or did it just happen once?

Also, what version of Erlang are you running?

Ben



From gfodor at gmail.com  Wed Jan  7 22:10:19 2009
From: gfodor at gmail.com (gfodor)
Date: Wed, 7 Jan 2009 14:10:19 -0800 (PST)
Subject: [rabbitmq-discuss] RabbitMQ timing out under small load
In-Reply-To: <269388e30901071352o67fbfb4an8fa4f1707b2bf28@mail.gmail.com>
References: <21315520.post@talk.nabble.com> <4963B27C.2060407@cohesiveft.com>
	<21318246.post@talk.nabble.com> <4963D314.4070002@cohesiveft.com>
	<21340316.post@talk.nabble.com>
	<269388e30901071352o67fbfb4an8fa4f1707b2bf28@mail.gmail.com>
Message-ID: <21341276.post@talk.nabble.com>


We haven't run any offline experiments to reproduce this, obviously we don't
want to see it again in production :) (We've upped the amount of consumers
in order to ensure the queue backlog stays low.)

Erlang version:
1.5.0/R11B 

-- 
View this message in context: http://www.nabble.com/RabbitMQ-timing-out-under-small-load-tp21315520p21341276.html
Sent from the RabbitMQ mailing list archive at Nabble.com.




From cremes.devlist at mac.com  Wed Jan  7 22:12:12 2009
From: cremes.devlist at mac.com (Chuck Remes)
Date: Wed, 07 Jan 2009 16:12:12 -0600
Subject: [rabbitmq-discuss] irc topic needs an update
In-Reply-To: <167204d20901071410t46ffcd8y4a9064cfb53d843@mail.gmail.com>
References: <E9AF437C-F524-4676-A7D6-FCEF2100D55C@mac.com>
	<167204d20901071410t46ffcd8y4a9064cfb53d843@mail.gmail.com>
Message-ID: <C2037030-4EDF-407C-9857-0D70941AA71F@mac.com>

No need to apologize! I just want to make sure the word about 1.5.0  
gets out to those who are interested in RabbitMQ. IRC is just another  
avenue for that purpose.

cr

On Jan 7, 2009, at 4:10 PM, Alexis Richardson wrote:

> Chuck
>
> I have emailed the two owners of the #rabbitmq channel to ask them  
> to fix this.
>
> Sorry!
>
> a
>
>
> On Wed, Jan 7, 2009 at 9:32 PM, Chuck Remes <cremes.devlist at mac.com>  
> wrote:
>> Most of the traffic on irc the last 2 weeks has been from people
>> asking, "When is the topic going to get updated to reflect the 1.5.0
>> release?"
>>
>> We don't have permission to change the topic so this is  a heads-up  
>> to
>> the powers-that-be that they should update it.
>>
>> :)
>>
>> cr
>>
>>
>> _______________________________________________
>> rabbitmq-discuss mailing list
>> rabbitmq-discuss at lists.rabbitmq.com
>> http://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss
>>




From alexis.richardson at cohesiveft.com  Wed Jan  7 22:10:37 2009
From: alexis.richardson at cohesiveft.com (Alexis Richardson)
Date: Wed, 7 Jan 2009 22:10:37 +0000
Subject: [rabbitmq-discuss] irc topic needs an update
In-Reply-To: <E9AF437C-F524-4676-A7D6-FCEF2100D55C@mac.com>
References: <E9AF437C-F524-4676-A7D6-FCEF2100D55C@mac.com>
Message-ID: <167204d20901071410t46ffcd8y4a9064cfb53d843@mail.gmail.com>

Chuck

I have emailed the two owners of the #rabbitmq channel to ask them to fix this.

Sorry!

a


On Wed, Jan 7, 2009 at 9:32 PM, Chuck Remes <cremes.devlist at mac.com> wrote:
> Most of the traffic on irc the last 2 weeks has been from people
> asking, "When is the topic going to get updated to reflect the 1.5.0
> release?"
>
> We don't have permission to change the topic so this is  a heads-up to
> the powers-that-be that they should update it.
>
> :)
>
> cr
>
>
> _______________________________________________
> rabbitmq-discuss mailing list
> rabbitmq-discuss at lists.rabbitmq.com
> http://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss
>



From 0x6e6562 at gmail.com  Wed Jan  7 22:18:34 2009
From: 0x6e6562 at gmail.com (Ben Hood)
Date: Wed, 7 Jan 2009 22:18:34 +0000
Subject: [rabbitmq-discuss] Fwd: question on the faq
In-Reply-To: <38141231-B6E1-44AE-A4CA-FC1346BF2DA0@coote.org>
References: <CBB16A07-BAB9-4C20-80E2-6D25ADD51AA5@coote.org>
	<F2592FEF-F14D-49B6-B5ED-C2F748E4BC0C@coote.org>
	<49635E75.5010904@redhat.com>
	<12BC400B-6820-4D2E-BE4B-335AC41F5189@coote.org>
	<269388e30901060805u7c25e678kc753460e430ac28d@mail.gmail.com>
	<60649E61-0C1A-481D-B815-798A1F556197@coote.org>
	<269388e30901061033l7fb428b2y51cb5dd499b1a2cc@mail.gmail.com>
	<26FC724D-7FC1-485B-9E7E-BA64661E78D3@coote.org>
	<269388e30901070334l6f19e4e4k3792b9e97dee013d@mail.gmail.com>
	<38141231-B6E1-44AE-A4CA-FC1346BF2DA0@coote.org>
Message-ID: <269388e30901071418g1f4ac480nb81face0f50b6339@mail.gmail.com>

Tim,

On Wed, Jan 7, 2009 at 12:31 PM, Tim Coote <tim+rabbitmq.com at coote.org> wrote:
> Not sure what you mean here? why do I need any exclusive lock?

Because of the implication of this statement from you:

"eg, in the real world, I can make a provisional booking, which times
out if I don't commit to a firm booking within a known (possibly
variable) timeline."

Unless I see this incorrectly, a provisional booking implies
temporally exclusive access to the resource that you have requested.
Were this not the case, a provisional booking would be of questionable
value, because it would only reflect resource availability at the
point in time that the request was processed. Beyond that, this
*booking* would be meaningless.

> This sounds like a scale issue, in general, which will drive the interaction process
> that's feasible. All I want is that what my app understands is the state of
> the world (including entities that are invented to plan the future or model
> uncertainty. Without this guarantee, I don't see how the app works reliably
> anyway.
>
> If the resource that my app's looking to 'get a lock on' gets consumed, the
> transaction aborts. What's the problem?

As indicated above, what would be the value of this lock if doesn't
actually lock anything?

If it's not really a lock, then what implication does this have for
the I in ACID?

What I fail to see here is where the logical unit of work is here if
an external process can affect the outcome of your transaction - e.g.
somebody else actually booking and paying for the plane seats you were
eyeballing whilst your code was waiting for each TX-participant to
reach a consensus.

BTW - did Carl ever post you his answer to your problem?

Ben



From 0x6e6562 at gmail.com  Wed Jan  7 22:24:37 2009
From: 0x6e6562 at gmail.com (Ben Hood)
Date: Wed, 7 Jan 2009 22:24:37 +0000
Subject: [rabbitmq-discuss] RabbitMQ timing out under small load
In-Reply-To: <21341276.post@talk.nabble.com>
References: <21315520.post@talk.nabble.com> <4963B27C.2060407@cohesiveft.com>
	<21318246.post@talk.nabble.com> <4963D314.4070002@cohesiveft.com>
	<21340316.post@talk.nabble.com>
	<269388e30901071352o67fbfb4an8fa4f1707b2bf28@mail.gmail.com>
	<21341276.post@talk.nabble.com>
Message-ID: <269388e30901071424r684f94f3pfe749d1da90a31c8@mail.gmail.com>

Greg,

On Wed, Jan 7, 2009 at 10:10 PM, gfodor <gfodor at gmail.com> wrote:
>
> We haven't run any offline experiments to reproduce this, obviously we don't
> want to see it again in production :) (We've upped the amount of consumers
> in order to ensure the queue backlog stays low.)

Are you in prod yet? If not, then why not leave the situation as it
was in order to be able to reproduce the issue?

Or do you have a staging environment? The reason why I ask is because
if it were reproducible, then you could clone an image off for us to
look at. If it is not reproducible, then we have limited information
with which to diagnose the problem.

> Erlang version:
> 1.5.0/R11B

FWIW this is an old school version of Erlang (but it is supported
because it's in Debian). We have noticed a lot of improvements in
Rabbit through newer versions of Erlang, but none that would explain
the behaviour you are seeing AFAICT.

HTH,

Ben



From dmitriy.samovskiy at cohesiveft.com  Wed Jan  7 22:26:57 2009
From: dmitriy.samovskiy at cohesiveft.com (Dmitriy Samovskiy)
Date: Wed, 07 Jan 2009 16:26:57 -0600
Subject: [rabbitmq-discuss] RabbitMQ timing out under small load
In-Reply-To: <21340316.post@talk.nabble.com>
References: <21315520.post@talk.nabble.com>
	<4963B27C.2060407@cohesiveft.com>	<21318246.post@talk.nabble.com>
	<4963D314.4070002@cohesiveft.com> <21340316.post@talk.nabble.com>
Message-ID: <49652C31.5000608@cohesiveft.com>



>> Are you sure there is nothing of interest in rabbit logs, apart from
>> timeouts, on both 
>> instances? Maybe something in system logs?
>>
>> Any info in client logs maybe that could explain why all of them connected
>> to a single 
>> broker (I assume normally you spread connections somewhat equally between
>> the 2 brokers)?
> 
> I took another look at the logs and really there is nothing interesting
> other than a series of timeout errors as pasted in my original post. Any
> other ideas? 
Do you see timeouts in rabbit.log on the instance which had many connections during the 
incident, on the instance which had almost no connections during the incident, or on both?

How many connections does each broker have right now?

Essentially, I think we can get some useful insight into the problem if we understand why 
one node during the incident had no connections and another had all of them (provided this 
is not how you guys usually run it).

Also, to confirm info from your original report: you saw the problem was resolved when you 
attached a consumer to 2 non-important queues and drained them by consuming all messages 
from them. Did you do it on the node with connections or node without connections, and on 
which nodes did those queues live?

I know I keep asking basically same things over and over again, just shooting in the dark 
here :)





From gfodor at gmail.com  Wed Jan  7 22:56:04 2009
From: gfodor at gmail.com (gfodor)
Date: Wed, 7 Jan 2009 14:56:04 -0800 (PST)
Subject: [rabbitmq-discuss] RabbitMQ timing out under small load
In-Reply-To: <49652C31.5000608@cohesiveft.com>
References: <21315520.post@talk.nabble.com> <4963B27C.2060407@cohesiveft.com>
	<21318246.post@talk.nabble.com> <4963D314.4070002@cohesiveft.com>
	<21340316.post@talk.nabble.com> <49652C31.5000608@cohesiveft.com>
Message-ID: <21342279.post@talk.nabble.com>


> Do you see timeouts in rabbit.log on the instance which had many
connections during the 
> incident, on the instance which had almost no connections during the
> incident, or on both?

There are timeouts on both machines, unfortunately.

> How many connections does each broker have right now?
There's 3 on one and about 7 on the other, they're theoretically supposed to
be even but in practice it's just spread over the two of them round robin. 

> Essentially, I think we can get some useful insight into the problem if we
> understand why 
> one node during the incident had no connections and another had all of
> them (provided this 
> is not how you guys usually run it).
I agree -- the problem is I vaguely only remember running list_connections
once or twice, the second node always was empty and the first node had 2 or
3 connections. Basically it may or may not have been a coincedence, since
both nodes may have been dropping connections but I snapshotted the thing
using list_connections at a point in time where it just so happened the
second node had none. In hindsight I wish I had done a better job of
monitoring the connections to see if the first node was behaving more sane. 

That said, I was having connectivity problems on both of them for sure, from
running consumers through list_queues. At the end of the day the thing I
would have been able to determine is basically if one node was dropping them
less frequently than others (ie, node 2 may have just simply been
terminating them upon connection, whereas the other one may only have
terminated them once the connection tried to access a queue on node 2.)

> Also, to confirm info from your original report: you saw the problem was
> resolved when you 
> attached a consumer to 2 non-important queues and drained them by
> consuming all messages 
> from them. Did you do it on the node with connections or node without
> connections, and on 
> which nodes did those queues live?
Honestly I am not sure where the queues lived, since I don't think RabbitMQ
can really tell you directly. We basically created them round robin on the
machines before bringing the system up. 

I was not able to drain them by performing get operations due to the
constant timeouts and the fact that the get operations were taking 2-3
seconds a piece. I ended up fixing it by performing a delete queue
operations and then creating the queue over again.

I should have done a bit more documentation of the incident, in retrospect
there's basically some semi-conclusive evidence that it was a single node
breaking and contraevidence that it was a cluster wide phenomenon. For
example, I seem to recall trying to drain the queues first (by basilally
just calling get a number of times), and it seemed that if I went through
the second node I was unable to get anywhere (no get operations ever
completed) but if i went through the first node I could perform get
operations, albeit at a 2-3 second pace. That makes me feel like it was a
node acting weird but it was having an effect on the entire cluster. Next
time this happens (hopefully never) I will try removing the node that
appears to be the troublesome node from the cluster and see if things
improve. 

Here's a potentially more productive question: if I am able to get to the
point where I am sure that rabbitMQ is causing the problem and not some
external TCP factors, is there any other way to see what RabbitMQ is doing
internally other than by looking at the log? 

-- 
View this message in context: http://www.nabble.com/RabbitMQ-timing-out-under-small-load-tp21315520p21342279.html
Sent from the RabbitMQ mailing list archive at Nabble.com.




From gfodor at gmail.com  Wed Jan  7 23:00:38 2009
From: gfodor at gmail.com (gfodor)
Date: Wed, 7 Jan 2009 15:00:38 -0800 (PST)
Subject: [rabbitmq-discuss] RabbitMQ timing out under small load
In-Reply-To: <21342279.post@talk.nabble.com>
References: <21315520.post@talk.nabble.com> <4963B27C.2060407@cohesiveft.com>
	<21318246.post@talk.nabble.com> <4963D314.4070002@cohesiveft.com>
	<21340316.post@talk.nabble.com> <49652C31.5000608@cohesiveft.com>
	<21342279.post@talk.nabble.com>
Message-ID: <21342362.post@talk.nabble.com>


Doing a little more log grepping revealed that the rate of timeouts on both
nodes during the incident are pretty much identical, so there wasn't a
timeout bias towards one node or the other according to the logs.

On node 1

 tail -n 100000 rabbit.log | grep -A2 -B2 timeout | grep '6-Jan-2009::02'  |
grep 'ERROR' | wc -l
15
root at rabbit1:/var/log/rabbitmq# tail -n 100000 rabbit.log | grep -A2 -B2
timeout | grep '6-Jan-2009::01'  | grep 'ERROR' | wc -l
69
root at rabbit1:/var/log/rabbitmq# tail -n 100000 rabbit.log | grep -A2 -B2
timeout | grep '6-Jan-2009::00'  | grep 'ERROR' | wc -l
21


On node 2

 tail -n 100000 rabbit.log | grep -A2 -B2 timeout | grep '6-Jan-2009::02'  |
grep 'ERROR' | wc -l
27
root at rabbit2:/var/log/rabbitmq# tail -n 100000 rabbit.log | grep -A2 -B2
timeout | grep '6-Jan-2009::01'  | grep 'ERROR' | wc -l
66
root at rabbit2:/var/log/rabbitmq# tail -n 100000 rabbit.log | grep -A2 -B2
timeout | grep '6-Jan-2009::00'  | grep 'ERROR' | wc -l
8


-- 
View this message in context: http://www.nabble.com/RabbitMQ-timing-out-under-small-load-tp21315520p21342362.html
Sent from the RabbitMQ mailing list archive at Nabble.com.




From dmitriy.samovskiy at cohesiveft.com  Wed Jan  7 23:38:27 2009
From: dmitriy.samovskiy at cohesiveft.com (Dmitriy Samovskiy)
Date: Wed, 07 Jan 2009 17:38:27 -0600
Subject: [rabbitmq-discuss] RabbitMQ timing out under small load
In-Reply-To: <21342362.post@talk.nabble.com>
References: <21315520.post@talk.nabble.com>
	<4963B27C.2060407@cohesiveft.com>	<21318246.post@talk.nabble.com>
	<4963D314.4070002@cohesiveft.com>	<21340316.post@talk.nabble.com>
	<49652C31.5000608@cohesiveft.com>	<21342279.post@talk.nabble.com>
	<21342362.post@talk.nabble.com>
Message-ID: <49653CF3.8000302@cohesiveft.com>



gfodor wrote:
>  tail -n 100000 rabbit.log | grep -A2 -B2 timeout | grep '6-Jan-2009::02'  |
> grep 'ERROR' | wc -l
> 15
> root at rabbit1:/var/log/rabbitmq# tail -n 100000 rabbit.log | grep -A2 -B2
> timeout | grep '6-Jan-2009::01'  | grep 'ERROR' | wc -l
> 69
> root at rabbit1:/var/log/rabbitmq# tail -n 100000 rabbit.log | grep -A2 -B2
> timeout | grep '6-Jan-2009::00'  | grep 'ERROR' | wc -l
> 21

FWIW, there are a couple of reports of ec2 connectivity/network issues around 2 am US 
Pacific Time on Jan 6:

http://developer.amazonwebservices.com/connect/thread.jspa?threadID=27740&tstart=45

Also not a complete loss of connectivity, but something strange going on, possibly limited 
to new connections only and certainly not impacting all of ec2.



From 0x6e6562 at gmail.com  Thu Jan  8 00:51:40 2009
From: 0x6e6562 at gmail.com (Ben Hood)
Date: Thu, 8 Jan 2009 00:51:40 +0000
Subject: [rabbitmq-discuss] RabbitMQ timing out under small load
In-Reply-To: <21342279.post@talk.nabble.com>
References: <21315520.post@talk.nabble.com> <4963B27C.2060407@cohesiveft.com>
	<21318246.post@talk.nabble.com> <4963D314.4070002@cohesiveft.com>
	<21340316.post@talk.nabble.com> <49652C31.5000608@cohesiveft.com>
	<21342279.post@talk.nabble.com>
Message-ID: <269388e30901071651y7426c0e0la29c247a7ea44024@mail.gmail.com>

Greg,

On Wed, Jan 7, 2009 at 10:56 PM, gfodor <gfodor at gmail.com> wrote:
> That said, I was having connectivity problems on both of them for sure, from
> running consumers through list_queues. At the end of the day the thing I
> would have been able to determine is basically if one node was dropping them
> less frequently than others (ie, node 2 may have just simply been
> terminating them upon connection, whereas the other one may only have
> terminated them once the connection tried to access a queue on node 2.)

What you mean exactly with connectivity problems? What I am trying to
isolate with this question is whether the Rabbit instance was
unresponsive or whether you were having general network issues.

> Honestly I am not sure where the queues lived, since I don't think RabbitMQ
> can really tell you directly.

There is no API call to tell you the node (mainly because this should
be transparent to the API consumer) but if you use the Erlang shell,
you could get the PID of the queue and from that, Erlang can tell on
which node the queue resides. I'm not going to go into the details of
this because this would involve a learning curve and I'm trying to
narrow down the possibilities, but suffice is to say that one of nice
things about Erlang/OTP is all of the features that allow you to poke
around in a running system.

> I was not able to drain them by performing get operations due to the
> constant timeouts and the fact that the get operations were taking 2-3
> seconds a piece. I ended up fixing it by performing a delete queue
> operations and then creating the queue over again.

This may be OT but have you tried purging the queue?

The timeouts that you are seeing *may* be due to network latency, but
I can't know for sure. For example, if you connect to a node in the
cluster and issue a basic.get for a queue that exists on a different
node, internally this will send a message to a remote process and wait
for the response, with a default timeout of 5 seconds.

> Here's a potentially more productive question: if I am able to get to the
> point where I am sure that rabbitMQ is causing the problem and not some
> external TCP factors, is there any other way to see what RabbitMQ is doing
> internally other than by looking at the log?

In general yes. As I mentioned before, one of features of OTP is all
of the built in monitoring tools, which if you know how to use, can
help troubleshoot a running Erlang application. But I don't want to
just say, do this, do that, poke around there, because there is a
learning curve associated with doing this and we may be able to get
the bottom of this issue for you. It would be a bit like telling a
non-Unix person to go to the shell and type in "ps -elf | grep foo".

As indicated beforehand, it would helpful if you were able to
reproduce this in some way.

Ben



From 0x6e6562 at gmail.com  Thu Jan  8 00:54:08 2009
From: 0x6e6562 at gmail.com (Ben Hood)
Date: Thu, 8 Jan 2009 00:54:08 +0000
Subject: [rabbitmq-discuss] RabbitMQ timing out under small load
In-Reply-To: <21342279.post@talk.nabble.com>
References: <21315520.post@talk.nabble.com> <4963B27C.2060407@cohesiveft.com>
	<21318246.post@talk.nabble.com> <4963D314.4070002@cohesiveft.com>
	<21340316.post@talk.nabble.com> <49652C31.5000608@cohesiveft.com>
	<21342279.post@talk.nabble.com>
Message-ID: <269388e30901071654rfeed3e2xd4f029c04d95e685@mail.gmail.com>

Greg,

On Wed, Jan 7, 2009 at 10:56 PM, gfodor <gfodor at gmail.com> wrote:
> I was not able to drain them by performing get operations due to the
> constant timeouts and the fact that the get operations were taking 2-3
> seconds a piece. I ended up fixing it by performing a delete queue
> operations and then creating the queue over again.

Another OT question: in your application, do your consumers generally
poll queues or subscribe to them?

Ben



From gfodor at gmail.com  Thu Jan  8 01:57:45 2009
From: gfodor at gmail.com (gfodor)
Date: Wed, 7 Jan 2009 17:57:45 -0800 (PST)
Subject: [rabbitmq-discuss] RabbitMQ timing out under small load
In-Reply-To: <269388e30901071654rfeed3e2xd4f029c04d95e685@mail.gmail.com>
References: <21315520.post@talk.nabble.com> <4963B27C.2060407@cohesiveft.com>
	<21318246.post@talk.nabble.com> <4963D314.4070002@cohesiveft.com>
	<21340316.post@talk.nabble.com> <49652C31.5000608@cohesiveft.com>
	<21342279.post@talk.nabble.com>
	<269388e30901071654rfeed3e2xd4f029c04d95e685@mail.gmail.com>
Message-ID: <21344452.post@talk.nabble.com>


Well, when I say connectivity problems I mean the following things:

1) On either of the nodes, running the command rabbitmqctl list_queues as
root would time out about 80% of the time. It seemed that there would be
brief periods where the command would work, and then that would be
subsequently followed by another longer period where it no longer was
responding.
2) Running a local script to perform gets from the queue would frequently
exception out with a timeout error, and retry 30 seconds later, and
continually time out. Beyond that, if I remember correctly, running a script
like this to drain the queue seemed to work better on one node than the
other (namely, it didn't time out the connection) but even though it was
making progress, it was only able to pull one item from the queue every 2-3
seconds.

For our application we opted to not use subscriptions for the consumers,
they pretty much just sit in a loop and call get, sleeping when there is no
work to be done.

Overall I'm pretty skeptical that this was a network related issue, simply
because as soon as the two large queues were deleted and re-created
everything instantly started working again. But then again I'm no erlang
expert :)

Thanks again for the help!


-- 
View this message in context: http://www.nabble.com/RabbitMQ-timing-out-under-small-load-tp21315520p21344452.html
Sent from the RabbitMQ mailing list archive at Nabble.com.




From tim+rabbitmq.com at coote.org  Thu Jan  8 12:08:31 2009
From: tim+rabbitmq.com at coote.org (Tim Coote)
Date: Thu, 8 Jan 2009 12:08:31 +0000
Subject: [rabbitmq-discuss] Fwd: question on the faq
In-Reply-To: <269388e30901071418g1f4ac480nb81face0f50b6339@mail.gmail.com>
References: <CBB16A07-BAB9-4C20-80E2-6D25ADD51AA5@coote.org>
	<F2592FEF-F14D-49B6-B5ED-C2F748E4BC0C@coote.org>
	<49635E75.5010904@redhat.com>
	<12BC400B-6820-4D2E-BE4B-335AC41F5189@coote.org>
	<269388e30901060805u7c25e678kc753460e430ac28d@mail.gmail.com>
	<60649E61-0C1A-481D-B815-798A1F556197@coote.org>
	<269388e30901061033l7fb428b2y51cb5dd499b1a2cc@mail.gmail.com>
	<26FC724D-7FC1-485B-9E7E-BA64661E78D3@coote.org>
	<269388e30901070334l6f19e4e4k3792b9e97dee013d@mail.gmail.com>
	<38141231-B6E1-44AE-A4CA-FC1346BF2DA0@coote.org>
	<269388e30901071418g1f4ac480nb81face0f50b6339@mail.gmail.com>
Message-ID: <2CC00877-4438-4B1F-8A38-AC5FD42B8088@coote.org>

Hi Ben
On 7 Jan 2009, at 22:18, Ben Hood wrote:

>
> Tim,
>
> On Wed, Jan 7, 2009 at 12:31 PM, Tim Coote <tim 
> +rabbitmq.com at coote.org> wrote:
>> Not sure what you mean here? why do I need any exclusive lock?
>
> Because of the implication of this statement from you:
>
> "eg, in the real world, I can make a provisional booking, which times
> out if I don't commit to a firm booking within a known (possibly
> variable) timeline."
>
> Unless I see this incorrectly, a provisional booking implies
> temporally exclusive access to the resource that you have requested.
> Were this not the case, a provisional booking would be of questionable
> value, because it would only reflect resource availability at the
> point in time that the request was processed. Beyond that, this
> *booking* would be meaningless.
>
As far as my apps concerned it has exclusive access to some resource  
while it's in the transaction. However, the tx can fail for any number  
of reasons before it commits.  What that means in the real world may  
vary.
>>
>> If the resource that my app's looking to 'get a lock on' gets  
>> consumed, the
>> transaction aborts. What's the problem?
>
> As indicated above, what would be the value of this lock if doesn't
> actually lock anything?
I don't think it's a lock. My app just sees the world in a consistent  
state. If I use Oracle, it doesn't lock data that's read, it just  
notes what's been looked at and keeps a copy if the data changes. if  
the app then tries to commit a tx based on that data, it will fail.   
You could implement a lock here if you want, but the type would depend  
on how much contention you're expecting.
>
>
> If it's not really a lock, then what implication does this have for
> the I in ACID?
None. The I in ACID is about interleaved updates or read  
inconsistencies. It's valid for a tx to abort if the world changes.   
don't need an exclusive lock to achieve that.
>
>
> What I fail to see here is where the logical unit of work is here if
> an external process can affect the outcome of your transaction - e.g.
> somebody else actually booking and paying for the plane seats you were
> eyeballing whilst your code was waiting for each TX-participant to
> reach a consensus.
So, how would you approach this?  Change the high level service so  
that it cannot guarantee atomic holiday bookings and leave the process  
of sorting out the mess as an exercise for the user?  Or build code in  
the holiday booking app that tries to second guess what the individual  
booking failures mean, which typically leads to a bigger mess,  
especially as the failure types change over time. In the meantime,  
there's no sensible legal framework for the holiday booking app to  
work in, so you don't know who owns any costs of component booking  
failures.
>
>
> BTW - did Carl ever post you his answer to your problem?
No.
>
>
> Ben
>

Tim Coote
tim at coote.org
vincit veritas






From dmitriy.samovskiy at cohesiveft.com  Thu Jan  8 15:23:24 2009
From: dmitriy.samovskiy at cohesiveft.com (Dmitriy Samovskiy)
Date: Thu, 08 Jan 2009 09:23:24 -0600
Subject: [rabbitmq-discuss] Fwd: question on the faq
In-Reply-To: <12BC400B-6820-4D2E-BE4B-335AC41F5189@coote.org>
References: <CBB16A07-BAB9-4C20-80E2-6D25ADD51AA5@coote.org>	<167204d20901050455g6a8415c8t6a69f1b3ba8107e0@mail.gmail.com>	<496211C9.9040504@redhat.com>	<49621F7C.8090502@lshift.net>	<4962294C.9000307@redhat.com>	<FDD6BBFD-1053-4113-8EF5-55560873CDB5@coote.org>	<49623BF5.8010206@redhat.com>	<F2592FEF-F14D-49B6-B5ED-C2F748E4BC0C@coote.org>	<49635E75.5010904@redhat.com>
	<12BC400B-6820-4D2E-BE4B-335AC41F5189@coote.org>
Message-ID: <49661A6C.5010809@cohesiveft.com>

Hi Tim,


Tim Coote wrote:

> 
> Now I'm very confused. In my mind, to book my holiday example, I need:
> 1/ Begin transaction
> 2/ prepare definition of what to book (cab to airport, insurance,  
> flight, hotel, etc)
> 3/ send booking requests
> 4/ receive and record booking confirmations
> 5/ Commit
Well, if all items you mentioned above are booked via the same processor engine, I would 
say you send 1 aggregate booking message and receive 1 aggregate confirmation message, and 
transactionality in this case is handled by consumer (processor engine) in its code, not 
in AMQP.

If all items are booked via different engines, wouldn't you want to keep track of your 
transaction on producer (booking client), also not in AMQP?
Book cab - receive confirmation
Book insurance - receive confirmation
Book flight - oops, sold out
Cancel insurance - receive cancel confirmation
Cancel cab - receive cancel confirmation
return fail

I do understand that a failure in the middle of cancellations (say between cancel 
insurance and cancel cab) would be tricky, but you can retry. Or - maybe even better - you 
can "return fail" right after "oops, sold out" and go through cancellations asynchronously 
  behind the scenes?

In your example, it kind of looks to me like you expect broker somehow to know that in 
response to your published messages (sent in a transaction) there will be some number of 
response messages (not necessarily 1-to-1 - what if airline reservation comes in several 
msgs?) coming from some sources which broker must somehow know to include in the same 
transaction. How will you communicate this requirement to the broker? Wouldn't keeping 
this logic in client (with integration to business rules, etc) be better?


Please note this thread is way out of my league though, so please feel free to ignore this 
message :)

- Dmitriy



From 0x6e6562 at gmail.com  Thu Jan  8 16:01:27 2009
From: 0x6e6562 at gmail.com (Ben Hood)
Date: Thu, 8 Jan 2009 16:01:27 +0000
Subject: [rabbitmq-discuss] RabbitMQ timing out under small load
In-Reply-To: <21344452.post@talk.nabble.com>
References: <21315520.post@talk.nabble.com> <4963B27C.2060407@cohesiveft.com>
	<21318246.post@talk.nabble.com> <4963D314.4070002@cohesiveft.com>
	<21340316.post@talk.nabble.com> <49652C31.5000608@cohesiveft.com>
	<21342279.post@talk.nabble.com>
	<269388e30901071654rfeed3e2xd4f029c04d95e685@mail.gmail.com>
	<21344452.post@talk.nabble.com>
Message-ID: <269388e30901080801w619f8e77tababa718d09cf89d@mail.gmail.com>

Greg,

On Thu, Jan 8, 2009 at 1:57 AM, gfodor <gfodor at gmail.com> wrote:

> For our application we opted to not use subscriptions for the consumers,
> they pretty much just sit in a loop and call get, sleeping when there is no
> work to be done.

Sure. If performance is not an issue then this approach is fine.

> Overall I'm pretty skeptical that this was a network related issue, simply
> because as soon as the two large queues were deleted and re-created
> everything instantly started working again. But then again I'm no erlang
> expert :)

I'm not saying that is necessarily is a network issue, it's just that
I don't have any points to speculate about at this point in time.

The main issue is that you can't reproduce these symptoms.

Short of being able to reproduce this somehow in order to debug this -
is it possible that you could send us your code so that we can maybe
infer something from that? It's a long shot, but none of the other
clues that you've given us so far have led to any plausible hypothesis
:-(

Ben



From Peter.Silva at ec.gc.ca  Thu Jan  8 16:19:34 2009
From: Peter.Silva at ec.gc.ca (Peter Silva)
Date: Thu, 08 Jan 2009 16:19:34 +0000
Subject: [rabbitmq-discuss] Fwd: question on the faq
In-Reply-To: <2CC00877-4438-4B1F-8A38-AC5FD42B8088@coote.org>
References: <CBB16A07-BAB9-4C20-80E2-6D25ADD51AA5@coote.org>	<F2592FEF-F14D-49B6-B5ED-C2F748E4BC0C@coote.org>	<49635E75.5010904@redhat.com>	<12BC400B-6820-4D2E-BE4B-335AC41F5189@coote.org>	<269388e30901060805u7c25e678kc753460e430ac28d@mail.gmail.com>	<60649E61-0C1A-481D-B815-798A1F556197@coote.org>	<269388e30901061033l7fb428b2y51cb5dd499b1a2cc@mail.gmail.com>	<26FC724D-7FC1-485B-9E7E-BA64661E78D3@coote.org>	<269388e30901070334l6f19e4e4k3792b9e97dee013d@mail.gmail.com>	<38141231-B6E1-44AE-A4CA-FC1346BF2DA0@coote.org>	<269388e30901071418g1f4ac480nb81face0f50b6339@mail.gmail.com>
	<2CC00877-4438-4B1F-8A38-AC5FD42B8088@coote.org>
Message-ID: <49662796.4010709@ec.gc.ca>


fwiw:

I suspect there is no point in looking prior to committing if the state 
isn?t saved, because you get into an endless recursion... say 10 systems 
have to be updated.   When you look, all 10 are ok, but the situation in 
any of the 10 systems could change.  When it comes time to commit, 2 out 
of the 10 systems could have run out of whatever they need to reserve, 
so you end up having to check all 10 again, prior to committing to any 
one.  If they don?t lock this time either, then recurse, recurse again 
with ever smaller intervals...  It doesn?t sound like a robust way to 
proceed.

 From the client perspective, it will look odd as well, the initial 
attempt will work, but when they say confirm it might not.  You aren?t 
giving the client something they can actually purchase.

It makes more sense is if the tentative booking is itself a transaction, 
which does something (ie. grabs the resources being reserved) If you 
want to back out later, that would have to be another transaction.  
There needs to be an application level tag that does everything a real 
reservation does, but marks it as provisional.    A completely separate 
application process could back out of provisional reservations which 
were not confirmed after some period of time. (cancelling provisional 
reservations is a separate application transaction.)

Tim Coote wrote:
> Hi Ben
> On 7 Jan 2009, at 22:18, Ben Hood wrote:
>
>   
>> Tim,
>>
>> On Wed, Jan 7, 2009 at 12:31 PM, Tim Coote <tim 
>> +rabbitmq.com at coote.org> wrote:
>>     
>>> Not sure what you mean here? why do I need any exclusive lock?
>>>       
>> Because of the implication of this statement from you:
>>
>> "eg, in the real world, I can make a provisional booking, which times
>> out if I don't commit to a firm booking within a known (possibly
>> variable) timeline."
>>
>> Unless I see this incorrectly, a provisional booking implies
>> temporally exclusive access to the resource that you have requested.
>> Were this not the case, a provisional booking would be of questionable
>> value, because it would only reflect resource availability at the
>> point in time that the request was processed. Beyond that, this
>> *booking* would be meaningless.
>>
>>     
> As far as my apps concerned it has exclusive access to some resource  
> while it's in the transaction. However, the tx can fail for any number  
> of reasons before it commits.  What that means in the real world may  
> vary.
>   
>>> If the resource that my app's looking to 'get a lock on' gets  
>>> consumed, the
>>> transaction aborts. What's the problem?
>>>       
>> As indicated above, what would be the value of this lock if doesn't
>> actually lock anything?
>>     
> I don't think it's a lock. My app just sees the world in a consistent  
> state. If I use Oracle, it doesn't lock data that's read, it just  
> notes what's been looked at and keeps a copy if the data changes. if  
> the app then tries to commit a tx based on that data, it will fail.   
> You could implement a lock here if you want, but the type would depend  
> on how much contention you're expecting.
>   
>> If it's not really a lock, then what implication does this have for
>> the I in ACID?
>>     
> None. The I in ACID is about interleaved updates or read  
> inconsistencies. It's valid for a tx to abort if the world changes.   
> don't need an exclusive lock to achieve that.
>   
>> What I fail to see here is where the logical unit of work is here if
>> an external process can affect the outcome of your transaction - e.g.
>> somebody else actually booking and paying for the plane seats you were
>> eyeballing whilst your code was waiting for each TX-participant to
>> reach a consensus.
>>     
> So, how would you approach this?  Change the high level service so  
> that it cannot guarantee atomic holiday bookings and leave the process  
> of sorting out the mess as an exercise for the user?  Or build code in  
> the holiday booking app that tries to second guess what the individual  
> booking failures mean, which typically leads to a bigger mess,  
> especially as the failure types change over time. In the meantime,  
> there's no sensible legal framework for the holiday booking app to  
> work in, so you don't know who owns any costs of component booking  
> failures.
>   
>> BTW - did Carl ever post you his answer to your problem?
>>     
> No.
>   
>> Ben
>>
>>     
>
> Tim Coote
> tim at coote.org
> vincit veritas
>
>
>
>
> _______________________________________________
> rabbitmq-discuss mailing list
> rabbitmq-discuss at lists.rabbitmq.com
> http://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss
>   

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20090108/f92560a4/attachment.htm 

From kirk at kirkwylie.com  Thu Jan  8 23:19:38 2009
From: kirk at kirkwylie.com (Kirk Wylie)
Date: Thu, 8 Jan 2009 23:19:38 +0000
Subject: [rabbitmq-discuss] Rabbit/OSGi Integration Code
In-Reply-To: <E45368C2-6F7E-498E-9B4B-2C0CC495AADE@gmail.com>
References: <E45368C2-6F7E-498E-9B4B-2C0CC495AADE@gmail.com>
Message-ID: <8f10a9e00901081519p41e088d1vf262b8d23726af92@mail.gmail.com>

Hi, Neil and List,

I had a chance to talk with Neil today and see a demo of this, and
I've written it up here:
http://kirkwylie.blogspot.com/2009/01/rabbitmqamqp-osgi-integration.html

In short, this is the type of thing that, once you see it in action,
REALLY hits you with the fundamental usefulness of it. I can't wait to
see what people can make of this, for development and for actually
runtime/production requirements!

Neil, well done! This is a tremendous piece of functionality!

Kirk Wylie

On Tue, Jan 6, 2009 at 7:47 PM, Neil Bartlett <njbartlett at gmail.com> wrote:
> Hello list,
>
> I have put together some exploratory code around the combination of
> RabbitMQ and OSGi. I feel that this could be a very powerful
> combination for building ESB-like functionality, and it may also open
> up some possibilities for Spring integration. The code is in a GitHub
> repository, please see the included README which details what I have
> done so far. Remember this is far from production-ready code, it is
> purely for experimentation.
>
> Here is the URL: http://github.com/njbartlett/rabbitosgi
>
> Incidentally, if anybody on the list is interested in discussing this
> and/or learning more about OSGi, I will be at the Eclipse Banking Day
> in London on 12 February. Attendance is free:
> http://wiki.eclipse.org/EclipseBankingDayLondon
>
> Regards,
> Neil
>
> _______________________________________________
> rabbitmq-discuss mailing list
> rabbitmq-discuss at lists.rabbitmq.com
> http://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss
>



From julien.genestoux at gmail.com  Fri Jan  9 22:39:28 2009
From: julien.genestoux at gmail.com (Julien Genestoux)
Date: Fri, 9 Jan 2009 14:39:28 -0800
Subject: [rabbitmq-discuss] Size of messages?
Message-ID: <26c0cf900901091439k367a0abgeec1b5f1e9dddd5b@mail.gmail.com>

Hi Everybody,

We're using RabbitMQ with a Stomp adptater to store the names of files that
need to be processed.

My question is the following : instead of queuing the file names (and
storing the files locally), is it
possible to queue the full files content itself? Given that the file have a
of under 200k?

Thanks for your answers!


--
Julien Genestoux
http://www.ouvre-boite.com
http://blog.notifixio.us

+1 (415) 254 7340
+33 (0)9 70 44 76 29
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20090109/6e348067/attachment.htm 

From alexis.richardson at cohesiveft.com  Fri Jan  9 23:11:05 2009
From: alexis.richardson at cohesiveft.com (Alexis Richardson)
Date: Fri, 9 Jan 2009 23:11:05 +0000
Subject: [rabbitmq-discuss] Size of messages?
In-Reply-To: <26c0cf900901091439k367a0abgeec1b5f1e9dddd5b@mail.gmail.com>
References: <26c0cf900901091439k367a0abgeec1b5f1e9dddd5b@mail.gmail.com>
Message-ID: <167204d20901091511q4a094583ob0e8118f9e2c20dc@mail.gmail.com>

Julian,

I think a couple of people have sent file content as messages.  I know
at least one person modified the the simple RabbitMQ Java client
examples to send files-as-data.

Also, Ezra mentioned that Nanite does or will do some chunked file
transfer, but that is currently supported for Ruby only.  I believe
other languages are planned.

I am not sure what size of message STOMP can cope with.

Why don't you give it a try and let us know how you get on?

alexis




On Fri, Jan 9, 2009 at 10:39 PM, Julien Genestoux
<julien.genestoux at gmail.com> wrote:
> Hi Everybody,
>
> We're using RabbitMQ with a Stomp adptater to store the names of files that
> need to be processed.
>
> My question is the following : instead of queuing the file names (and
> storing the files locally), is it
> possible to queue the full files content itself? Given that the file have a
> of under 200k?
>
> Thanks for your answers!
>
>
> --
> Julien Genestoux
> http://www.ouvre-boite.com
> http://blog.notifixio.us
>
> +1 (415) 254 7340
> +33 (0)9 70 44 76 29
>
> _______________________________________________
> rabbitmq-discuss mailing list
> rabbitmq-discuss at lists.rabbitmq.com
> http://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss
>
>



From mike at middlesoft.co.uk  Sun Jan 11 01:41:20 2009
From: mike at middlesoft.co.uk (Michael Barker)
Date: Sun, 11 Jan 2009 14:41:20 +1300
Subject: [rabbitmq-discuss] [PROBLEM] .NET Client fails with
	OperationInterruptedException
Message-ID: <80d1dfde0901101741m677494f2j1ac54abf75e01863@mail.gmail.com>

Hi,

I am currently working on an implementation of System.Messaging for
Mono using AMQP/RabbitMQ.  I have upgraded to the 1.5 version of the
.NET libraries, however when I run a simple test (against
rabbitmq-server version 1.4.0) I frequently get the following error:

Unhandled Exception:
RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP
operation was interrupted
  at RabbitMQ.Client.Impl.ConnectionBase.System.IDisposable.Dispose ()
[0x00000]
  at testrabbitmq15.MainClass.Run (System.String[] args) [0x000cf] in
/home/mike/src/test-rabbitmq15/test-rabbitmq15/Main.cs:47
  at testrabbitmq15.MainClass.Main (System.String[] args) [0x0000b] in
/home/mike/src/test-rabbitmq15/test-rabbitmq15/Main.cs:21

I have attached 2 files to this email, the first is the code that I
use with 1.4 version of the libraries and the second is the same test
with the necessary changes for the 1.5 version of the libraries.  The
first version runs fine, the second version will fail after around 1
to 10 iterations.  I am currently running on Ubuntu linux (2.6.27-10)
with mono 1.9.1 and mono svn trunk.

Is this a bug?

Regards,
Michael Barker.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: Main14.cs
Type: text/x-csharp
Size: 1362 bytes
Desc: not available
Url : http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20090111/1456ffc0/attachment.bin 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: Main15.cs
Type: text/x-csharp
Size: 1228 bytes
Desc: not available
Url : http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20090111/1456ffc0/attachment-0001.bin 

From tonyg at lshift.net  Sun Jan 11 07:42:31 2009
From: tonyg at lshift.net (Tony Garnock-Jones)
Date: Sun, 11 Jan 2009 20:42:31 +1300
Subject: [rabbitmq-discuss] Size of messages?
In-Reply-To: <26c0cf900901091439k367a0abgeec1b5f1e9dddd5b@mail.gmail.com>
References: <26c0cf900901091439k367a0abgeec1b5f1e9dddd5b@mail.gmail.com>
Message-ID: <4969A2E7.1030401@lshift.net>

> My question is the following : instead of queuing the file names (and 
> storing the files locally), is it
> possible to queue the full files content itself? Given that the file have a
> of under 200k?

That sounds like it should work without any problems. There are no 
built-in limits on the sizes of individual messages (besides the 64-bit 
body size in the AMQP protocol), and the STOMP adapter should cope just 
fine.

The only thing that might hold you up is the way the broker holds all 
queued messages in RAM in its current version. If you want to have more 
queued data than that, we recommend either getting more RAM :-) or 
helping out with alterations to make spooling-to-disk smooth and tasty.

Let us know how your experiments go!

Regards,
   Tony




From 0x6e6562 at gmail.com  Sun Jan 11 10:05:32 2009
From: 0x6e6562 at gmail.com (Ben Hood)
Date: Sun, 11 Jan 2009 10:05:32 +0000
Subject: [rabbitmq-discuss] Net::AMQP Perl Client - Status?
In-Reply-To: <50c8ffe90901091438n4dc5a278nb515d63cc209d65e@mail.gmail.com>
References: <50c8ffe90901091438n4dc5a278nb515d63cc209d65e@mail.gmail.com>
Message-ID: <269388e30901110205p4183ffb6s64a506b769d05827@mail.gmail.com>

Darien,

On Fri, Jan 9, 2009 at 10:38 PM, Darien Kindlund <darien at kindlund.com> wrote:
> Hi Eric & David,
>
> I came across your information from the rabbitmq-discuss mailing list
> (back in July 2008).  Have either of you had any luck in developing
> the Net::AMQP perl client?
>
> If not, have you had any success/failure in using the rabbitmq-stomp
> connector and simply using Net::Stomp?

Don't know how this got forwarded to me, but I don't recall anbody
actually producing a Perl client, although there have been discussions
about it. The last few clients I recall being written were for PHP and
Haxe.

STOMP in general has been known to work with multiple language
clients, although I haven't heard whether somebody has tested
Net::Stomp.

Maybe somebody in the community has.

HTH,

Ben



From alexis.richardson at cohesiveft.com  Sun Jan 11 10:10:49 2009
From: alexis.richardson at cohesiveft.com (Alexis Richardson)
Date: Sun, 11 Jan 2009 10:10:49 +0000
Subject: [rabbitmq-discuss] Net::AMQP Perl Client - Status?
In-Reply-To: <269388e30901110205p4183ffb6s64a506b769d05827@mail.gmail.com>
References: <50c8ffe90901091438n4dc5a278nb515d63cc209d65e@mail.gmail.com>
	<269388e30901110205p4183ffb6s64a506b769d05827@mail.gmail.com>
Message-ID: <167204d20901110210u67fe4d91la7f41b79339f7094@mail.gmail.com>

Folks,

Perl via STOMP should work, I think a few people have tried it.

I am cc'ing Serg and Paul who both, at one time or another, have
expressed an interest in Perl clients too.

alexis



On Sun, Jan 11, 2009 at 10:05 AM, Ben Hood <0x6e6562 at gmail.com> wrote:
> Darien,
>
> On Fri, Jan 9, 2009 at 10:38 PM, Darien Kindlund <darien at kindlund.com> wrote:
>> Hi Eric & David,
>>
>> I came across your information from the rabbitmq-discuss mailing list
>> (back in July 2008).  Have either of you had any luck in developing
>> the Net::AMQP perl client?
>>
>> If not, have you had any success/failure in using the rabbitmq-stomp
>> connector and simply using Net::Stomp?
>
> Don't know how this got forwarded to me, but I don't recall anbody
> actually producing a Perl client, although there have been discussions
> about it. The last few clients I recall being written were for PHP and
> Haxe.
>
> STOMP in general has been known to work with multiple language
> clients, although I haven't heard whether somebody has tested
> Net::Stomp.
>
> Maybe somebody in the community has.
>
> HTH,
>
> Ben
>
> _______________________________________________
> rabbitmq-discuss mailing list
> rabbitmq-discuss at lists.rabbitmq.com
> http://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss
>



From tonyg at lshift.net  Sun Jan 11 10:21:24 2009
From: tonyg at lshift.net (Tony Garnock-Jones)
Date: Sun, 11 Jan 2009 23:21:24 +1300
Subject: [rabbitmq-discuss] Net::AMQP Perl Client - Status?
In-Reply-To: <167204d20901110210u67fe4d91la7f41b79339f7094@mail.gmail.com>
References: <50c8ffe90901091438n4dc5a278nb515d63cc209d65e@mail.gmail.com>	<269388e30901110205p4183ffb6s64a506b769d05827@mail.gmail.com>
	<167204d20901110210u67fe4d91la7f41b79339f7094@mail.gmail.com>
Message-ID: <4969C824.4080105@lshift.net>

> Perl via STOMP should work, I think a few people have tried it.

The RabbitMQ STOMP adapter includes both Ruby and Perl (Net::Stomp) 
examples.

http://hg.rabbitmq.com/rabbitmq-stomp/file/tip/examples/perl/rabbitmq_stomp_recv.pl
http://hg.rabbitmq.com/rabbitmq-stomp/file/tip/examples/perl/rabbitmq_stomp_send.pl

IIRC, I developed the adapter by using manual Telnet and Net::Stomp for 
testing. I could be wrong though! Certainly the Ruby examples were 
checked in before the Perl ones.

Regards,
   Tony



From matthias at lshift.net  Sun Jan 11 15:55:11 2009
From: matthias at lshift.net (Matthias Radestock)
Date: Sun, 11 Jan 2009 15:55:11 +0000
Subject: [rabbitmq-discuss] [PROBLEM] .NET Client fails
	with	OperationInterruptedException
In-Reply-To: <80d1dfde0901101741m677494f2j1ac54abf75e01863@mail.gmail.com>
References: <80d1dfde0901101741m677494f2j1ac54abf75e01863@mail.gmail.com>
Message-ID: <496A165F.4050702@lshift.net>

Michael,

Michael Barker wrote:
> .NET libraries, however when I run a simple test (against
> rabbitmq-server version 1.4.0) I frequently get the following error:
> 
> Unhandled Exception:
> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP
> operation was interrupted
>   at RabbitMQ.Client.Impl.ConnectionBase.System.IDisposable.Dispose ()
> [0x00000]

Is there anything noteworthy in the RabbitMQ server logs?

Also, does the program take noticeably longer to run, say a few seconds, 
when the error occurs?


Matthias.



From tonyg at lshift.net  Sun Jan 11 18:41:55 2009
From: tonyg at lshift.net (Tony Garnock-Jones)
Date: Mon, 12 Jan 2009 07:41:55 +1300
Subject: [rabbitmq-discuss] Net::AMQP Perl Client - Status?
In-Reply-To: <50c8ffe90901111020i351eac88pcc0b5a6ee2868fc8@mail.gmail.com>
References: <50c8ffe90901091438n4dc5a278nb515d63cc209d65e@mail.gmail.com>	
	<269388e30901110205p4183ffb6s64a506b769d05827@mail.gmail.com>	
	<167204d20901110210u67fe4d91la7f41b79339f7094@mail.gmail.com>	
	<4969C824.4080105@lshift.net>
	<50c8ffe90901111020i351eac88pcc0b5a6ee2868fc8@mail.gmail.com>
Message-ID: <496A3D73.8060108@lshift.net>

Hi Darien,

(CCs trimmed)

Darien Kindlund wrote:
> Additionally, I was curious if the STOMP adapter provides a way for a
> Net::Stomp perl client to connect to a different vhost (other than
> '/').

Yes: supply a custom header, "virtual-host", to the CONNECT command. I'm 
not 100% certain, but I suspect you can do this by

   $stomp->connect({login=>'guest', passcode=>'guest',
                    "virtual-host"=>'/my-virtual-host'})

There are a couple of other extension headers available; I'm afraid I 
haven't gotten around to the dreaded documentation yet, so reading 
rabbit_stomp.erl is the only way to discover them. A quick grep provides:

   CONNECT virtual-host
   CONNECT realm
   SEND exchange
   SUBSCRIBE exchange
   SUBSCRIBE routing_key
   various message properties in SEND
   queue and binding attributes in various methods
     (X-, X-Q-, X-B- prefixes)

Regards,
   Tony



From tonyg at lshift.net  Sun Jan 11 22:38:39 2009
From: tonyg at lshift.net (Tony Garnock-Jones)
Date: Mon, 12 Jan 2009 11:38:39 +1300
Subject: [rabbitmq-discuss] Net::AMQP Perl Client - Status?
In-Reply-To: <50c8ffe90901111053u50e8c32l7839ed3be310641f@mail.gmail.com>
References: <50c8ffe90901091438n4dc5a278nb515d63cc209d65e@mail.gmail.com>	
	<269388e30901110205p4183ffb6s64a506b769d05827@mail.gmail.com>	
	<167204d20901110210u67fe4d91la7f41b79339f7094@mail.gmail.com>	
	<4969C824.4080105@lshift.net>	
	<50c8ffe90901111020i351eac88pcc0b5a6ee2868fc8@mail.gmail.com>	
	<496A3D73.8060108@lshift.net>
	<50c8ffe90901111053u50e8c32l7839ed3be310641f@mail.gmail.com>
Message-ID: <496A74EF.6080805@lshift.net>

Hi Darien,

Exchanges have to be declared out-of-band ahead of time (though a clean 
approach to doing the declarations via STOMP would be a great 
contribution), but Queues are declared at the point of subscription.

  1. A queue.declare is done as part of SUBSCRIBE. The boolean STOMP
     headers "passive", "durable", "exclusive" and "auto-delete" are used
     as part of the declaration. (They all default "false" except
     "auto-delete", which defaults "true".)

  2. If the "exchange" STOMP header is present, a queue.bind is done
     (using also STOMP header "routing_key").

  3. Finally, a basic.consume is done.

So, to address your second question: it has actually declared and 
started consuming from the queue! So the waiting is expected behaviour.

Regards,
   Tony

Darien Kindlund wrote:
> Hi Tony,
> 
> Great!  That answers most of my questions.... Lastly, I assume you
> still have to pre-declare all your exchanges and queues *outside* of
> Net::Stomp (through some other AMQP interface) -- correct?  I got the
> impression that if any of the exchanges or queues were torn down
> between successive executions of a Net::Stomp client, that any
> messages sent would be silently dropped.
> 
> That leads me to another question -- apparently, when subscribing to a
> non-existent queue, the Net::Stomp client does not kick back any type
> of exception.  Instead, it appears to blindly sit and wait forever,
> with no notification that the bind was unsuccessful.  I assume this is
> a known limitation, right?
> 
> Regards,
> -- Darien
> 
> On Sun, Jan 11, 2009 at 1:41 PM, Tony Garnock-Jones <tonyg at lshift.net> wrote:
>> Hi Darien,
>>
>> (CCs trimmed)
>>
>> Darien Kindlund wrote:
>>> Additionally, I was curious if the STOMP adapter provides a way for a
>>> Net::Stomp perl client to connect to a different vhost (other than
>>> '/').
>> Yes: supply a custom header, "virtual-host", to the CONNECT command. I'm not
>> 100% certain, but I suspect you can do this by
>>
>>  $stomp->connect({login=>'guest', passcode=>'guest',
>>                   "virtual-host"=>'/my-virtual-host'})
>>
>> There are a couple of other extension headers available; I'm afraid I
>> haven't gotten around to the dreaded documentation yet, so reading
>> rabbit_stomp.erl is the only way to discover them. A quick grep provides:
>>
>>  CONNECT virtual-host
>>  CONNECT realm
>>  SEND exchange
>>  SUBSCRIBE exchange
>>  SUBSCRIBE routing_key
>>  various message properties in SEND
>>  queue and binding attributes in various methods
>>    (X-, X-Q-, X-B- prefixes)
>>
>> Regards,
>>  Tony
>>



From uatesting at datalabchina.com  Mon Jan 12 03:30:55 2009
From: uatesting at datalabchina.com (SuscribeMailList)
Date: Mon, 12 Jan 2009 11:30:55 +0800
Subject: [rabbitmq-discuss] I am a novice
Message-ID: <200901121130515331848@datalabchina.com>

hi,Say hello to everyone .




SuscribeMailList
2009-01-12
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20090112/fd1f3624/attachment.htm 

From matthias at lshift.net  Mon Jan 12 09:43:24 2009
From: matthias at lshift.net (Matthias Radestock)
Date: Mon, 12 Jan 2009 09:43:24 +0000
Subject: [rabbitmq-discuss] [PROBLEM] .NET Client fails
	with	OperationInterruptedException
In-Reply-To: <80d1dfde0901112200oa3a469bhf01f3081e8dc490e@mail.gmail.com>
References: <80d1dfde0901101741m677494f2j1ac54abf75e01863@mail.gmail.com>	<496A165F.4050702@lshift.net>
	<80d1dfde0901112200oa3a469bhf01f3081e8dc490e@mail.gmail.com>
Message-ID: <496B10BC.8000701@lshift.net>

Michael,

Michael Barker wrote:
>> Is there anything noteworthy in the RabbitMQ server logs?
> 
> I have attached a portion of the log where it took 3 iterations to
> fail.  There doesn't seem to be anything unusual in there.

Right. All looks perfectly normal.

Would it be possible for you to upgrade the server to 1.5.0? That way we 
can rule out any problems that have been fixed in that release.


Matthias.
PS: please keep the list cc'ed.



From matthias at lshift.net  Mon Jan 12 13:19:49 2009
From: matthias at lshift.net (Matthias Radestock)
Date: Mon, 12 Jan 2009 13:19:49 +0000
Subject: [rabbitmq-discuss] [PROBLEM] .NET Client fails
	with	OperationInterruptedException
In-Reply-To: <496B10BC.8000701@lshift.net>
References: <80d1dfde0901101741m677494f2j1ac54abf75e01863@mail.gmail.com>	<496A165F.4050702@lshift.net>
	<80d1dfde0901112200oa3a469bhf01f3081e8dc490e@mail.gmail.com>
	<496B10BC.8000701@lshift.net>
Message-ID: <496B4375.5020605@lshift.net>

Matthias Radestock wrote:
> Would it be possible for you to upgrade the server to 1.5.0? That way we 
> can rule out any problems that have been fixed in that release.

Also, are you perhaps running your experiments on a virtualised 
platform? If so, could it be that the system time is fluctuating?


Matthias.



From dmitriy.samovskiy at cohesiveft.com  Mon Jan 12 15:41:56 2009
From: dmitriy.samovskiy at cohesiveft.com (Dmitriy Samovskiy)
Date: Mon, 12 Jan 2009 09:41:56 -0600
Subject: [rabbitmq-discuss] [PROBLEM] .NET Client
	fails	with	OperationInterruptedException
In-Reply-To: <496B4375.5020605@lshift.net>
References: <80d1dfde0901101741m677494f2j1ac54abf75e01863@mail.gmail.com>	<496A165F.4050702@lshift.net>	<80d1dfde0901112200oa3a469bhf01f3081e8dc490e@mail.gmail.com>	<496B10BC.8000701@lshift.net>
	<496B4375.5020605@lshift.net>
Message-ID: <496B64C4.7050206@cohesiveft.com>


Hi Matthias,

Matthias Radestock wrote:
> Also, are you perhaps running your experiments on a virtualised 
> platform? If so, could it be that the system time is fluctuating?
What kind of issues would you advise to keep an eye on in virtualized environments?

We have been running rabbit in VMs for quite some time. Not a whole lot of volume though. 
Time does fall behind at times (occasionally) on some VMs (not all), but rabbit brokers 
running on these VMs AFAIK never had noticeable problems with it.

Also, another question - do you think time keeping issues are more likely to impact 
clients from the network or clients from localhost or both will be impacted equally?


Thanks,
Dmitriy



From matthias at lshift.net  Mon Jan 12 15:59:03 2009
From: matthias at lshift.net (Matthias Radestock)
Date: Mon, 12 Jan 2009 15:59:03 +0000
Subject: [rabbitmq-discuss] [PROBLEM] .NET Client fails with
	OperationInterruptedException
In-Reply-To: <496B64C4.7050206@cohesiveft.com>
References: <80d1dfde0901101741m677494f2j1ac54abf75e01863@mail.gmail.com>	<496A165F.4050702@lshift.net>	<80d1dfde0901112200oa3a469bhf01f3081e8dc490e@mail.gmail.com>	<496B10BC.8000701@lshift.net>	<496B4375.5020605@lshift.net>
	<496B64C4.7050206@cohesiveft.com>
Message-ID: <496B68C7.1040403@lshift.net>

Dmitriy,

Dmitriy Samovskiy wrote:
> We have been running rabbit in VMs for quite some time. Not a whole lot 
> of volume though. Time does fall behind at times (occasionally) on some 
> VMs (not all), but rabbit brokers running on these VMs AFAIK never had 
> noticeable problems with it.

Time drift (within reason) isn't a problem, but sudden adjustments to 
the time can be.

The server, Java client and Erlang client should be largely immune to 
such adjustments, but I don't think the .net client is (though I haven't 
spend enough time looking into this to be sure).

> Also, another question - do you think time keeping issues are more 
> likely to impact clients from the network or clients from localhost or 
> both will be impacted equally?

Difficult to say. Depends on which particular timers/timeouts are being 
affected.


Matthias.



From mike at middlesoft.co.uk  Mon Jan 12 18:05:44 2009
From: mike at middlesoft.co.uk (Michael Barker)
Date: Tue, 13 Jan 2009 07:05:44 +1300
Subject: [rabbitmq-discuss] [PROBLEM] .NET Client fails with
	OperationInterruptedException
In-Reply-To: <496B4375.5020605@lshift.net>
References: <80d1dfde0901101741m677494f2j1ac54abf75e01863@mail.gmail.com>
	<496A165F.4050702@lshift.net>
	<80d1dfde0901112200oa3a469bhf01f3081e8dc490e@mail.gmail.com>
	<496B10BC.8000701@lshift.net> <496B4375.5020605@lshift.net>
Message-ID: <80d1dfde0901121005v5e73da76jcbe5913876c86228@mail.gmail.com>

>> Would it be possible for you to upgrade the server to 1.5.0? That way we
>> can rule out any problems that have been fixed in that release.

I get the exact same behaviour with rabbitmq-server 1.5, so it
probably a client issue.

> Also, are you perhaps running your experiments on a virtualised platform? If
> so, could it be that the system time is fluctuating?

No, I am running Ubuntu natively on my laptop.

Mike.



From jasonjwwilliams at gmail.com  Mon Jan 12 21:00:12 2009
From: jasonjwwilliams at gmail.com (Jason J. W. Williams)
Date: Mon, 12 Jan 2009 14:00:12 -0700
Subject: [rabbitmq-discuss] Monitoring Question
Message-ID: <3b949f090901121300o66a7d2dbmf7a59dc91ac8a8f@mail.gmail.com>

Hello,

Is it possible to monitor queue counts over AMQP in RabbitMQ? Trying
to figure out how we can create a monitoring probe to alert us when
queues go above a configured threshold.

Is there a document I can read on RabbitMQ monitoring? Thank you in advance.

-J



From jasonjwwilliams at gmail.com  Mon Jan 12 21:01:09 2009
From: jasonjwwilliams at gmail.com (Jason J. W. Williams)
Date: Mon, 12 Jan 2009 14:01:09 -0700
Subject: [rabbitmq-discuss] Clustering
Message-ID: <3b949f090901121301y3b5ec4ccx5ff68f1e44e703f6@mail.gmail.com>

It appears that on a fail-over the contents of queues are not
available on the take-over server, but the queues and exchanges
themselves are available. Is this accurate? Thank you in advance.

Best Regards,
Jason



From 0x6e6562 at gmail.com  Mon Jan 12 21:45:00 2009
From: 0x6e6562 at gmail.com (Ben Hood)
Date: Mon, 12 Jan 2009 21:45:00 +0000
Subject: [rabbitmq-discuss] Monitoring Question
In-Reply-To: <3b949f090901121300o66a7d2dbmf7a59dc91ac8a8f@mail.gmail.com>
References: <3b949f090901121300o66a7d2dbmf7a59dc91ac8a8f@mail.gmail.com>
Message-ID: <269388e30901121345xf884ebcwee049ddc7136a13e@mail.gmail.com>

Jason,

On Mon, Jan 12, 2009 at 9:00 PM, Jason J. W. Williams
<jasonjwwilliams at gmail.com> wrote:
> Is it possible to monitor queue counts over AMQP in RabbitMQ? Trying
> to figure out how we can create a monitoring probe to alert us when
> queues go above a configured threshold.

What do you mean by queue count? Number of queues or queue depth?

> Is there a document I can read on RabbitMQ monitoring? Thank you in advance.

ATM your best bet is rabbitmqctl. Have a look at the things you can
look at: http://www.rabbitmq.com/admin-guide.html#server_status

HTH,

Ben



From 0x6e6562 at gmail.com  Mon Jan 12 21:53:48 2009
From: 0x6e6562 at gmail.com (Ben Hood)
Date: Mon, 12 Jan 2009 21:53:48 +0000
Subject: [rabbitmq-discuss] Clustering
In-Reply-To: <3b949f090901121301y3b5ec4ccx5ff68f1e44e703f6@mail.gmail.com>
References: <3b949f090901121301y3b5ec4ccx5ff68f1e44e703f6@mail.gmail.com>
Message-ID: <269388e30901121353i4fe15a55y294faf39a8ee4c5f@mail.gmail.com>

Jason,

On Mon, Jan 12, 2009 at 9:01 PM, Jason J. W. Williams
<jasonjwwilliams at gmail.com> wrote:
> It appears that on a fail-over the contents of queues are not
> available on the take-over server, but the queues and exchanges
> themselves are available. Is this accurate? Thank you in advance.

Yes, this is true. Broker entities (exchanges, queues and bindings)
are maintained in a coherent fashion accross a cluster, but messages
are not. This is due to the cost of replicating messages - it would be
possible to do this, but it is quite expensive and not that many
people really need it (yet). Having said this, it is a subject of
investigation and may appear at some time in the future. Read the
manual for more details: http://www.rabbitmq.com/clustering.html

Ben



From jasonjwwilliams at gmail.com  Mon Jan 12 21:55:14 2009
From: jasonjwwilliams at gmail.com (Jason J. W. Williams)
Date: Mon, 12 Jan 2009 14:55:14 -0700
Subject: [rabbitmq-discuss] Monitoring Question
In-Reply-To: <269388e30901121345xf884ebcwee049ddc7136a13e@mail.gmail.com>
References: <3b949f090901121300o66a7d2dbmf7a59dc91ac8a8f@mail.gmail.com>
	<269388e30901121345xf884ebcwee049ddc7136a13e@mail.gmail.com>
Message-ID: <3b949f090901121355w55937258xf46e4d2eef092c91@mail.gmail.com>

Hi Ben,

Thank you for the response. Does rabbitmqctl use internal Erlang
methods/RPC or is it using AMQP to do the interrogation?

-J

On Mon, Jan 12, 2009 at 2:45 PM, Ben Hood <0x6e6562 at gmail.com> wrote:
> Jason,
>
> On Mon, Jan 12, 2009 at 9:00 PM, Jason J. W. Williams
> <jasonjwwilliams at gmail.com> wrote:
>> Is it possible to monitor queue counts over AMQP in RabbitMQ? Trying
>> to figure out how we can create a monitoring probe to alert us when
>> queues go above a configured threshold.
>
> What do you mean by queue count? Number of queues or queue depth?
>
>> Is there a document I can read on RabbitMQ monitoring? Thank you in advance.
>
> ATM your best bet is rabbitmqctl. Have a look at the things you can
> look at: http://www.rabbitmq.com/admin-guide.html#server_status
>
> HTH,
>
> Ben
>



From jasonjwwilliams at gmail.com  Mon Jan 12 21:58:46 2009
From: jasonjwwilliams at gmail.com (Jason J. W. Williams)
Date: Mon, 12 Jan 2009 14:58:46 -0700
Subject: [rabbitmq-discuss] Clustering
In-Reply-To: <269388e30901121353i4fe15a55y294faf39a8ee4c5f@mail.gmail.com>
References: <3b949f090901121301y3b5ec4ccx5ff68f1e44e703f6@mail.gmail.com>
	<269388e30901121353i4fe15a55y294faf39a8ee4c5f@mail.gmail.com>
Message-ID: <3b949f090901121358g4f5ccbbbqd9e8082fc7bfeb52@mail.gmail.com>

Hi Ben,

While replication would be helpful, an alternate stop gap would be the
ability to use the message queue log off the dead node and populate
the messages back into the cluster on command. More often than not, we
can stand a bit of a delay in the processing of the messages in the
event of the loss of a node (while we get the node back up). However,
if it looks like the node is going to be down for awhile (and
providing the message log is on some sort of network storage like NFS
or iSCSI), we may need to get the messages re-populated back into the
cluster while the dead node gets rebuilt.

Thank you again!

-J

On Mon, Jan 12, 2009 at 2:53 PM, Ben Hood <0x6e6562 at gmail.com> wrote:
> Jason,
>
> On Mon, Jan 12, 2009 at 9:01 PM, Jason J. W. Williams
> <jasonjwwilliams at gmail.com> wrote:
>> It appears that on a fail-over the contents of queues are not
>> available on the take-over server, but the queues and exchanges
>> themselves are available. Is this accurate? Thank you in advance.
>
> Yes, this is true. Broker entities (exchanges, queues and bindings)
> are maintained in a coherent fashion accross a cluster, but messages
> are not. This is due to the cost of replicating messages - it would be
> possible to do this, but it is quite expensive and not that many
> people really need it (yet). Having said this, it is a subject of
> investigation and may appear at some time in the future. Read the
> manual for more details: http://www.rabbitmq.com/clustering.html
>
> Ben
>



From jasonjwwilliams at gmail.com  Mon Jan 12 22:01:56 2009
From: jasonjwwilliams at gmail.com (Jason J. W. Williams)
Date: Mon, 12 Jan 2009 15:01:56 -0700
Subject: [rabbitmq-discuss] Users and Realms
Message-ID: <3b949f090901121401t1b5f7853h83e6c960b03345dc@mail.gmail.com>

With the removal of realms in 1.5.0, can any user with a valid login
access any queue or exchange? That is to say, is there more
granularity to access than "you got it" or not? Thank you in advance.

-J



From 0x6e6562 at gmail.com  Mon Jan 12 22:11:35 2009
From: 0x6e6562 at gmail.com (Ben Hood)
Date: Mon, 12 Jan 2009 22:11:35 +0000
Subject: [rabbitmq-discuss] Clustering
In-Reply-To: <3b949f090901121358g4f5ccbbbqd9e8082fc7bfeb52@mail.gmail.com>
References: <3b949f090901121301y3b5ec4ccx5ff68f1e44e703f6@mail.gmail.com>
	<269388e30901121353i4fe15a55y294faf39a8ee4c5f@mail.gmail.com>
	<3b949f090901121358g4f5ccbbbqd9e8082fc7bfeb52@mail.gmail.com>
Message-ID: <269388e30901121411lcadd9f0mad050fd5ad6fed1b@mail.gmail.com>

Jason,

On Mon, Jan 12, 2009 at 9:58 PM, Jason J. W. Williams
<jasonjwwilliams at gmail.com> wrote:
> While replication would be helpful, an alternate stop gap would be the
> ability to use the message queue log off the dead node and populate
> the messages back into the cluster on command. More often than not, we
> can stand a bit of a delay in the processing of the messages in the
> event of the loss of a node (while we get the node back up). However,
> if it looks like the node is going to be down for awhile (and
> providing the message log is on some sort of network storage like NFS
> or iSCSI), we may need to get the messages re-populated back into the
> cluster while the dead node gets rebuilt.

Yes, something along those lines is what we recommend to replay the
message journal.

Ben



From 0x6e6562 at gmail.com  Mon Jan 12 22:11:52 2009
From: 0x6e6562 at gmail.com (Ben Hood)
Date: Mon, 12 Jan 2009 22:11:52 +0000
Subject: [rabbitmq-discuss] Fwd:  Monitoring Question
In-Reply-To: <269388e30901121410o564dee41h2e41c979972b052d@mail.gmail.com>
References: <3b949f090901121300o66a7d2dbmf7a59dc91ac8a8f@mail.gmail.com>
	<269388e30901121345xf884ebcwee049ddc7136a13e@mail.gmail.com>
	<3b949f090901121355w55937258xf46e4d2eef092c91@mail.gmail.com>
	<269388e30901121410o564dee41h2e41c979972b052d@mail.gmail.com>
Message-ID: <269388e30901121411j2c677fa6gfdeb5d3f0771878d@mail.gmail.com>

---------- Forwarded message ----------
From: Ben Hood <0x6e6562 at gmail.com>
Date: Mon, Jan 12, 2009 at 10:10 PM
Subject: Re: [rabbitmq-discuss] Monitoring Question
To: "Jason J. W. Williams" <jasonjwwilliams at gmail.com>


Jason,

On Mon, Jan 12, 2009 at 9:55 PM, Jason J. W. Williams
<jasonjwwilliams at gmail.com> wrote:
> Thank you for the response. Does rabbitmqctl use internal Erlang
> methods/RPC or is it using AMQP to do the interrogation?

It uses Erlang remoting - it's quite simple, just take a look yourself.

Ben



From jasonjwwilliams at gmail.com  Mon Jan 12 22:14:43 2009
From: jasonjwwilliams at gmail.com (Jason J. W. Williams)
Date: Mon, 12 Jan 2009 15:14:43 -0700
Subject: [rabbitmq-discuss] Clustering
In-Reply-To: <269388e30901121411lcadd9f0mad050fd5ad6fed1b@mail.gmail.com>
References: <3b949f090901121301y3b5ec4ccx5ff68f1e44e703f6@mail.gmail.com>
	<269388e30901121353i4fe15a55y294faf39a8ee4c5f@mail.gmail.com>
	<3b949f090901121358g4f5ccbbbqd9e8082fc7bfeb52@mail.gmail.com>
	<269388e30901121411lcadd9f0mad050fd5ad6fed1b@mail.gmail.com>
Message-ID: <3b949f090901121414p455b3de2l2c2cd3fbbc707b29@mail.gmail.com>

Is that possible today, or that is just the recommended path forward
for the project?

-J

On Mon, Jan 12, 2009 at 3:11 PM, Ben Hood <0x6e6562 at gmail.com> wrote:
> Jason,
>
> On Mon, Jan 12, 2009 at 9:58 PM, Jason J. W. Williams
> <jasonjwwilliams at gmail.com> wrote:
>> While replication would be helpful, an alternate stop gap would be the
>> ability to use the message queue log off the dead node and populate
>> the messages back into the cluster on command. More often than not, we
>> can stand a bit of a delay in the processing of the messages in the
>> event of the loss of a node (while we get the node back up). However,
>> if it looks like the node is going to be down for awhile (and
>> providing the message log is on some sort of network storage like NFS
>> or iSCSI), we may need to get the messages re-populated back into the
>> cluster while the dead node gets rebuilt.
>
> Yes, something along those lines is what we recommend to replay the
> message journal.
>
> Ben
>



From 0x6e6562 at gmail.com  Mon Jan 12 22:15:38 2009
From: 0x6e6562 at gmail.com (Ben Hood)
Date: Mon, 12 Jan 2009 22:15:38 +0000
Subject: [rabbitmq-discuss] Users and Realms
In-Reply-To: <3b949f090901121401t1b5f7853h83e6c960b03345dc@mail.gmail.com>
References: <3b949f090901121401t1b5f7853h83e6c960b03345dc@mail.gmail.com>
Message-ID: <269388e30901121415m644c209fm7d0cb5f51531af27@mail.gmail.com>

Jason,

On Mon, Jan 12, 2009 at 10:01 PM, Jason J. W. Williams
<jasonjwwilliams at gmail.com> wrote:
> With the removal of realms in 1.5.0, can any user with a valid login
> access any queue or exchange? That is to say, is there more
> granularity to access than "you got it" or not? Thank you in advance.

The finest granularity is at the level of the vhost (please refer to
the documentation).

So if a user is mapped to a vhost, they can do what they like.

For a general treatment of access restriction and Rabbit, you might
like to look through the list archives, there are many threads about
ACLs, realms, tickets and general access control.

HTH,

Ben



From jasonjwwilliams at gmail.com  Mon Jan 12 22:18:15 2009
From: jasonjwwilliams at gmail.com (Jason J. W. Williams)
Date: Mon, 12 Jan 2009 15:18:15 -0700
Subject: [rabbitmq-discuss] Users and Realms
In-Reply-To: <269388e30901121415m644c209fm7d0cb5f51531af27@mail.gmail.com>
References: <3b949f090901121401t1b5f7853h83e6c960b03345dc@mail.gmail.com>
	<269388e30901121415m644c209fm7d0cb5f51531af27@mail.gmail.com>
Message-ID: <3b949f090901121418g3d63861aw5b7bf5d11fb9d02e@mail.gmail.com>

Hi Ben,

OK. Thanks. My understanding is that realms are no longer in place
going forward as of 1.5.0.

-J

On Mon, Jan 12, 2009 at 3:15 PM, Ben Hood <0x6e6562 at gmail.com> wrote:
> Jason,
>
> On Mon, Jan 12, 2009 at 10:01 PM, Jason J. W. Williams
> <jasonjwwilliams at gmail.com> wrote:
>> With the removal of realms in 1.5.0, can any user with a valid login
>> access any queue or exchange? That is to say, is there more
>> granularity to access than "you got it" or not? Thank you in advance.
>
> The finest granularity is at the level of the vhost (please refer to
> the documentation).
>
> So if a user is mapped to a vhost, they can do what they like.
>
> For a general treatment of access restriction and Rabbit, you might
> like to look through the list archives, there are many threads about
> ACLs, realms, tickets and general access control.
>
> HTH,
>
> Ben
>



From jasonjwwilliams at gmail.com  Mon Jan 12 22:18:15 2009
From: jasonjwwilliams at gmail.com (Jason J. W. Williams)
Date: Mon, 12 Jan 2009 15:18:15 -0700
Subject: [rabbitmq-discuss] Users and Realms
In-Reply-To: <269388e30901121415m644c209fm7d0cb5f51531af27@mail.gmail.com>
References: <3b949f090901121401t1b5f7853h83e6c960b03345dc@mail.gmail.com>
	<269388e30901121415m644c209fm7d0cb5f51531af27@mail.gmail.com>
Message-ID: <3b949f090901121418g3d63861aw5b7bf5d11fb9d02e@mail.gmail.com>

Hi Ben,

OK. Thanks. My understanding is that realms are no longer in place
going forward as of 1.5.0.

-J

On Mon, Jan 12, 2009 at 3:15 PM, Ben Hood <0x6e6562 at gmail.com> wrote:
> Jason,
>
> On Mon, Jan 12, 2009 at 10:01 PM, Jason J. W. Williams
> <jasonjwwilliams at gmail.com> wrote:
>> With the removal of realms in 1.5.0, can any user with a valid login
>> access any queue or exchange? That is to say, is there more
>> granularity to access than "you got it" or not? Thank you in advance.
>
> The finest granularity is at the level of the vhost (please refer to
> the documentation).
>
> So if a user is mapped to a vhost, they can do what they like.
>
> For a general treatment of access restriction and Rabbit, you might
> like to look through the list archives, there are many threads about
> ACLs, realms, tickets and general access control.
>
> HTH,
>
> Ben
>



From 0x6e6562 at gmail.com  Mon Jan 12 22:22:29 2009
From: 0x6e6562 at gmail.com (Ben Hood)
Date: Mon, 12 Jan 2009 22:22:29 +0000
Subject: [rabbitmq-discuss] Clustering
In-Reply-To: <3b949f090901121414p455b3de2l2c2cd3fbbc707b29@mail.gmail.com>
References: <3b949f090901121301y3b5ec4ccx5ff68f1e44e703f6@mail.gmail.com>
	<269388e30901121353i4fe15a55y294faf39a8ee4c5f@mail.gmail.com>
	<3b949f090901121358g4f5ccbbbqd9e8082fc7bfeb52@mail.gmail.com>
	<269388e30901121411lcadd9f0mad050fd5ad6fed1b@mail.gmail.com>
	<3b949f090901121414p455b3de2l2c2cd3fbbc707b29@mail.gmail.com>
Message-ID: <269388e30901121422j2ad6704by1b4ede599bdcf2e4@mail.gmail.com>

Jason,

On Mon, Jan 12, 2009 at 10:14 PM, Jason J. W. Williams
<jasonjwwilliams at gmail.com> wrote:
> Is that possible today, or that is just the recommended path forward
> for the project?

Yes, this is possible - i.e. you take the directory containing the
journal and you recover it by restarting the Rabbit node. There are
some cases that you would have to make sure that don't cause
conflicts, such as replaying the same journal by multiple cluster
members, but these are more detailed considerations.

Ben



From 0x6e6562 at gmail.com  Mon Jan 12 22:26:00 2009
From: 0x6e6562 at gmail.com (Ben Hood)
Date: Mon, 12 Jan 2009 22:26:00 +0000
Subject: [rabbitmq-discuss] Users and Realms
In-Reply-To: <3b949f090901121418g3d63861aw5b7bf5d11fb9d02e@mail.gmail.com>
References: <3b949f090901121401t1b5f7853h83e6c960b03345dc@mail.gmail.com>
	<269388e30901121415m644c209fm7d0cb5f51531af27@mail.gmail.com>
	<3b949f090901121418g3d63861aw5b7bf5d11fb9d02e@mail.gmail.com>
Message-ID: <269388e30901121426g77d1ba2eje0cf7327eff29c29@mail.gmail.com>

Jason,

On Mon, Jan 12, 2009 at 10:18 PM, Jason J. W. Williams
<jasonjwwilliams at gmail.com> wrote:
> OK. Thanks. My understanding is that realms are no longer in place
> going forward as of 1.5.0.

Yes, that is right - realms were a dirty trick played on RabbitMQ by
the AMQP working group. It was a schoolboy error to implement them and
now we are wiser :-)

Ben



From 0x6e6562 at gmail.com  Mon Jan 12 22:29:23 2009
From: 0x6e6562 at gmail.com (Ben Hood)
Date: Mon, 12 Jan 2009 22:29:23 +0000
Subject: [rabbitmq-discuss] Monitoring Question
In-Reply-To: <3b949f090901121417w6286d474xfa1201b8994c98c@mail.gmail.com>
References: <3b949f090901121300o66a7d2dbmf7a59dc91ac8a8f@mail.gmail.com>
	<269388e30901121345xf884ebcwee049ddc7136a13e@mail.gmail.com>
	<3b949f090901121355w55937258xf46e4d2eef092c91@mail.gmail.com>
	<269388e30901121410o564dee41h2e41c979972b052d@mail.gmail.com>
	<3b949f090901121417w6286d474xfa1201b8994c98c@mail.gmail.com>
Message-ID: <269388e30901121429w7f32456eyba2b5e88cf4010bd@mail.gmail.com>

Jason,

On Mon, Jan 12, 2009 at 10:17 PM, Jason J. W. Williams
<jasonjwwilliams at gmail.com> wrote:
> Dang. Was hoping to HC it from Python. Thank you for the info.

Pardon my ignorance, but what does HC it mean?

BTW, the company that sponsored the development of rabbitmqctl are
scripting it with python.

Ben



From jasonjwwilliams at gmail.com  Mon Jan 12 22:30:54 2009
From: jasonjwwilliams at gmail.com (Jason J. W. Williams)
Date: Mon, 12 Jan 2009 15:30:54 -0700
Subject: [rabbitmq-discuss] Clustering
In-Reply-To: <269388e30901121422j2ad6704by1b4ede599bdcf2e4@mail.gmail.com>
References: <3b949f090901121301y3b5ec4ccx5ff68f1e44e703f6@mail.gmail.com>
	<269388e30901121353i4fe15a55y294faf39a8ee4c5f@mail.gmail.com>
	<3b949f090901121358g4f5ccbbbqd9e8082fc7bfeb52@mail.gmail.com>
	<269388e30901121411lcadd9f0mad050fd5ad6fed1b@mail.gmail.com>
	<3b949f090901121414p455b3de2l2c2cd3fbbc707b29@mail.gmail.com>
	<269388e30901121422j2ad6704by1b4ede599bdcf2e4@mail.gmail.com>
Message-ID: <3b949f090901121430j61781cct9b3825f60bb93ea6@mail.gmail.com>

Hi Ben,

That's great. Thank you.

-J

On Mon, Jan 12, 2009 at 3:22 PM, Ben Hood <0x6e6562 at gmail.com> wrote:
> Jason,
>
> On Mon, Jan 12, 2009 at 10:14 PM, Jason J. W. Williams
> <jasonjwwilliams at gmail.com> wrote:
>> Is that possible today, or that is just the recommended path forward
>> for the project?
>
> Yes, this is possible - i.e. you take the directory containing the
> journal and you recover it by restarting the Rabbit node. There are
> some cases that you would have to make sure that don't cause
> conflicts, such as replaying the same journal by multiple cluster
> members, but these are more detailed considerations.
>
> Ben
>



From jasonjwwilliams at gmail.com  Mon Jan 12 22:32:32 2009
From: jasonjwwilliams at gmail.com (Jason J. W. Williams)
Date: Mon, 12 Jan 2009 15:32:32 -0700
Subject: [rabbitmq-discuss] Users and Realms
In-Reply-To: <269388e30901121426g77d1ba2eje0cf7327eff29c29@mail.gmail.com>
References: <3b949f090901121401t1b5f7853h83e6c960b03345dc@mail.gmail.com>
	<269388e30901121415m644c209fm7d0cb5f51531af27@mail.gmail.com>
	<3b949f090901121418g3d63861aw5b7bf5d11fb9d02e@mail.gmail.com>
	<269388e30901121426g77d1ba2eje0cf7327eff29c29@mail.gmail.com>
Message-ID: <3b949f090901121432n7e71d89q25a7f9243050c4dc@mail.gmail.com>

Hey Ben,

Frankly, it makes one less thing for a rookie to learn. :-) Have
realms been removed from the 0-9 or 0-10 AMQP specs?

-J

On Mon, Jan 12, 2009 at 3:26 PM, Ben Hood <0x6e6562 at gmail.com> wrote:
> Jason,
>
> On Mon, Jan 12, 2009 at 10:18 PM, Jason J. W. Williams
> <jasonjwwilliams at gmail.com> wrote:
>> OK. Thanks. My understanding is that realms are no longer in place
>> going forward as of 1.5.0.
>
> Yes, that is right - realms were a dirty trick played on RabbitMQ by
> the AMQP working group. It was a schoolboy error to implement them and
> now we are wiser :-)
>
> Ben
>



From jasonjwwilliams at gmail.com  Mon Jan 12 22:33:41 2009
From: jasonjwwilliams at gmail.com (Jason J. W. Williams)
Date: Mon, 12 Jan 2009 15:33:41 -0700
Subject: [rabbitmq-discuss] Monitoring Question
In-Reply-To: <269388e30901121429w7f32456eyba2b5e88cf4010bd@mail.gmail.com>
References: <3b949f090901121300o66a7d2dbmf7a59dc91ac8a8f@mail.gmail.com>
	<269388e30901121345xf884ebcwee049ddc7136a13e@mail.gmail.com>
	<3b949f090901121355w55937258xf46e4d2eef092c91@mail.gmail.com>
	<269388e30901121410o564dee41h2e41c979972b052d@mail.gmail.com>
	<3b949f090901121417w6286d474xfa1201b8994c98c@mail.gmail.com>
	<269388e30901121429w7f32456eyba2b5e88cf4010bd@mail.gmail.com>
Message-ID: <3b949f090901121433s2c33c848y70a5a41ba986db3e@mail.gmail.com>

Hi Ben,

Sorry...HC=healthcheck. Will probably end up scripting
rabbitmqctl...just hate output scraping. :-)

-J

On Mon, Jan 12, 2009 at 3:29 PM, Ben Hood <0x6e6562 at gmail.com> wrote:
> Jason,
>
> On Mon, Jan 12, 2009 at 10:17 PM, Jason J. W. Williams
> <jasonjwwilliams at gmail.com> wrote:
>> Dang. Was hoping to HC it from Python. Thank you for the info.
>
> Pardon my ignorance, but what does HC it mean?
>
> BTW, the company that sponsored the development of rabbitmqctl are
> scripting it with python.
>
> Ben
>



From jasonjwwilliams at gmail.com  Mon Jan 12 22:45:42 2009
From: jasonjwwilliams at gmail.com (Jason J. W. Williams)
Date: Mon, 12 Jan 2009 15:45:42 -0700
Subject: [rabbitmq-discuss] Monitoring Question
In-Reply-To: <3b949f090901121433s2c33c848y70a5a41ba986db3e@mail.gmail.com>
References: <3b949f090901121300o66a7d2dbmf7a59dc91ac8a8f@mail.gmail.com>
	<269388e30901121345xf884ebcwee049ddc7136a13e@mail.gmail.com>
	<3b949f090901121355w55937258xf46e4d2eef092c91@mail.gmail.com>
	<269388e30901121410o564dee41h2e41c979972b052d@mail.gmail.com>
	<3b949f090901121417w6286d474xfa1201b8994c98c@mail.gmail.com>
	<269388e30901121429w7f32456eyba2b5e88cf4010bd@mail.gmail.com>
	<3b949f090901121433s2c33c848y70a5a41ba986db3e@mail.gmail.com>
Message-ID: <3b949f090901121445x22c84a89w9dd6728e5b9e0578@mail.gmail.com>

On the python question, it looks like calling queue_declare() from
py-amqplib returns a tuple containing the number of messages in the
queue and number of consumers. I assume this indicates calling
queue_declare() on an already instantiated queue name would return the
message and consumer count for the queue.

-J

On Mon, Jan 12, 2009 at 3:33 PM, Jason J. W. Williams
<jasonjwwilliams at gmail.com> wrote:
> Hi Ben,
>
> Sorry...HC=healthcheck. Will probably end up scripting
> rabbitmqctl...just hate output scraping. :-)
>
> -J
>
> On Mon, Jan 12, 2009 at 3:29 PM, Ben Hood <0x6e6562 at gmail.com> wrote:
>> Jason,
>>
>> On Mon, Jan 12, 2009 at 10:17 PM, Jason J. W. Williams
>> <jasonjwwilliams at gmail.com> wrote:
>>> Dang. Was hoping to HC it from Python. Thank you for the info.
>>
>> Pardon my ignorance, but what does HC it mean?
>>
>> BTW, the company that sponsored the development of rabbitmqctl are
>> scripting it with python.
>>
>> Ben
>>
>



From 0x6e6562 at gmail.com  Mon Jan 12 22:47:17 2009
From: 0x6e6562 at gmail.com (Ben Hood)
Date: Mon, 12 Jan 2009 22:47:17 +0000
Subject: [rabbitmq-discuss] Users and Realms
In-Reply-To: <3b949f090901121432n7e71d89q25a7f9243050c4dc@mail.gmail.com>
References: <3b949f090901121401t1b5f7853h83e6c960b03345dc@mail.gmail.com>
	<269388e30901121415m644c209fm7d0cb5f51531af27@mail.gmail.com>
	<3b949f090901121418g3d63861aw5b7bf5d11fb9d02e@mail.gmail.com>
	<269388e30901121426g77d1ba2eje0cf7327eff29c29@mail.gmail.com>
	<3b949f090901121432n7e71d89q25a7f9243050c4dc@mail.gmail.com>
Message-ID: <269388e30901121447k762f945ep9b0ac7a760f89991@mail.gmail.com>

Jason,

On Mon, Jan 12, 2009 at 10:32 PM, Jason J. W. Williams
<jasonjwwilliams at gmail.com> wrote:
> Frankly, it makes one less thing for a rookie to learn. :-)

Yes, but when you become a RabbitMQ black belt you may want some
access control - at least to keep Elmer out.

> Have
> realms been removed from the 0-9 or 0-10 AMQP specs?

Yes, they have. If you want to know why, I suggest you look through
the RabbitMQ archive. Unfortuneately there does not seem to be any
active pure-AMQP forum - this job seems to be left up to the
implementors of AMQP.

HTH,

Ben



From matthias at lshift.net  Mon Jan 12 22:52:13 2009
From: matthias at lshift.net (Matthias Radestock)
Date: Mon, 12 Jan 2009 22:52:13 +0000
Subject: [rabbitmq-discuss] Monitoring Question
In-Reply-To: <3b949f090901121433s2c33c848y70a5a41ba986db3e@mail.gmail.com>
References: <3b949f090901121300o66a7d2dbmf7a59dc91ac8a8f@mail.gmail.com>	<269388e30901121345xf884ebcwee049ddc7136a13e@mail.gmail.com>	<3b949f090901121355w55937258xf46e4d2eef092c91@mail.gmail.com>	<269388e30901121410o564dee41h2e41c979972b052d@mail.gmail.com>	<3b949f090901121417w6286d474xfa1201b8994c98c@mail.gmail.com>	<269388e30901121429w7f32456eyba2b5e88cf4010bd@mail.gmail.com>
	<3b949f090901121433s2c33c848y70a5a41ba986db3e@mail.gmail.com>
Message-ID: <496BC99D.4030602@lshift.net>

Jason,

Jason J. W. Williams wrote:
> Will probably end up scripting
> rabbitmqctl...just hate output scraping. :-)

rabbitmqctl was designed to make output post-processing easy. Hence the 
"-q" flag to suppress informational messages, and the tabbed output format.

Eventually we will expose management functionality over other paths too. 
But there are so many to choose from - SNMP, JMX, AMQP and others have 
all been mentioned in discussions - that we decided to first go with the 
simplest thing that could possibly work.


Matthias.



From jasonjwwilliams at gmail.com  Mon Jan 12 22:53:05 2009
From: jasonjwwilliams at gmail.com (Jason J. W. Williams)
Date: Mon, 12 Jan 2009 15:53:05 -0700
Subject: [rabbitmq-discuss] Users and Realms
In-Reply-To: <269388e30901121447k762f945ep9b0ac7a760f89991@mail.gmail.com>
References: <3b949f090901121401t1b5f7853h83e6c960b03345dc@mail.gmail.com>
	<269388e30901121415m644c209fm7d0cb5f51531af27@mail.gmail.com>
	<3b949f090901121418g3d63861aw5b7bf5d11fb9d02e@mail.gmail.com>
	<269388e30901121426g77d1ba2eje0cf7327eff29c29@mail.gmail.com>
	<3b949f090901121432n7e71d89q25a7f9243050c4dc@mail.gmail.com>
	<269388e30901121447k762f945ep9b0ac7a760f89991@mail.gmail.com>
Message-ID: <3b949f090901121453l28de1d66o681d546fff6f4377@mail.gmail.com>

Hi Ben,

> Yes, but when you become a RabbitMQ black belt you may want some
> access control - at least to keep Elmer out.
Yeah we will for deployment. But vhost security seems pretty simple.


> Yes, they have. If you want to know why, I suggest you look through
> the RabbitMQ archive. Unfortuneately there does not seem to be any
> active pure-AMQP forum - this job seems to be left up to the
> implementors of AMQP.

Yay! Ambiguity left up to custom. ;-)

-J



From 0x6e6562 at gmail.com  Mon Jan 12 22:53:51 2009
From: 0x6e6562 at gmail.com (Ben Hood)
Date: Mon, 12 Jan 2009 22:53:51 +0000
Subject: [rabbitmq-discuss] Monitoring Question
In-Reply-To: <3b949f090901121433s2c33c848y70a5a41ba986db3e@mail.gmail.com>
References: <3b949f090901121300o66a7d2dbmf7a59dc91ac8a8f@mail.gmail.com>
	<269388e30901121345xf884ebcwee049ddc7136a13e@mail.gmail.com>
	<3b949f090901121355w55937258xf46e4d2eef092c91@mail.gmail.com>
	<269388e30901121410o564dee41h2e41c979972b052d@mail.gmail.com>
	<3b949f090901121417w6286d474xfa1201b8994c98c@mail.gmail.com>
	<269388e30901121429w7f32456eyba2b5e88cf4010bd@mail.gmail.com>
	<3b949f090901121433s2c33c848y70a5a41ba986db3e@mail.gmail.com>
Message-ID: <269388e30901121453x70359afdle5621a76be96169f@mail.gmail.com>

Jason,

On Mon, Jan 12, 2009 at 10:33 PM, Jason J. W. Williams
<jasonjwwilliams at gmail.com> wrote:
> Sorry...HC=healthcheck. Will probably end up scripting
> rabbitmqctl...just hate output scraping. :-)

Sure, but this is the Unix way (sort, uniq, cut).

If you'd rather apply higher order functions, I suggest you look at
the underlying Erlang API - this is semantically the same as a pipe,
except that you have a more structured access to the data you're
working with.

Ben



From jasonjwwilliams at gmail.com  Mon Jan 12 22:58:14 2009
From: jasonjwwilliams at gmail.com (Jason J. W. Williams)
Date: Mon, 12 Jan 2009 15:58:14 -0700
Subject: [rabbitmq-discuss] Monitoring Question
In-Reply-To: <496BC99D.4030602@lshift.net>
References: <3b949f090901121300o66a7d2dbmf7a59dc91ac8a8f@mail.gmail.com>
	<269388e30901121345xf884ebcwee049ddc7136a13e@mail.gmail.com>
	<3b949f090901121355w55937258xf46e4d2eef092c91@mail.gmail.com>
	<269388e30901121410o564dee41h2e41c979972b052d@mail.gmail.com>
	<3b949f090901121417w6286d474xfa1201b8994c98c@mail.gmail.com>
	<269388e30901121429w7f32456eyba2b5e88cf4010bd@mail.gmail.com>
	<3b949f090901121433s2c33c848y70a5a41ba986db3e@mail.gmail.com>
	<496BC99D.4030602@lshift.net>
Message-ID: <3b949f090901121458s2ac6b60nf5466f27760199c7@mail.gmail.com>

Hi Matthias,

-q will help. Coming from the MySQL school, I don't mind pulling stats
over the protocol used to access the application itself.

-J


On Mon, Jan 12, 2009 at 3:52 PM, Matthias Radestock <matthias at lshift.net> wrote:
> Jason,
>
> Jason J. W. Williams wrote:
>>
>> Will probably end up scripting
>> rabbitmqctl...just hate output scraping. :-)
>
> rabbitmqctl was designed to make output post-processing easy. Hence the "-q"
> flag to suppress informational messages, and the tabbed output format.
>
> Eventually we will expose management functionality over other paths too. But
> there are so many to choose from - SNMP, JMX, AMQP and others have all been
> mentioned in discussions - that we decided to first go with the simplest
> thing that could possibly work.
>
>
> Matthias.
>



From jasonjwwilliams at gmail.com  Mon Jan 12 22:58:52 2009
From: jasonjwwilliams at gmail.com (Jason J. W. Williams)
Date: Mon, 12 Jan 2009 15:58:52 -0700
Subject: [rabbitmq-discuss] Monitoring Question
In-Reply-To: <269388e30901121453x70359afdle5621a76be96169f@mail.gmail.com>
References: <3b949f090901121300o66a7d2dbmf7a59dc91ac8a8f@mail.gmail.com>
	<269388e30901121345xf884ebcwee049ddc7136a13e@mail.gmail.com>
	<3b949f090901121355w55937258xf46e4d2eef092c91@mail.gmail.com>
	<269388e30901121410o564dee41h2e41c979972b052d@mail.gmail.com>
	<3b949f090901121417w6286d474xfa1201b8994c98c@mail.gmail.com>
	<269388e30901121429w7f32456eyba2b5e88cf4010bd@mail.gmail.com>
	<3b949f090901121433s2c33c848y70a5a41ba986db3e@mail.gmail.com>
	<269388e30901121453x70359afdle5621a76be96169f@mail.gmail.com>
Message-ID: <3b949f090901121458j72108d1cl5f3d7eca68441733@mail.gmail.com>

I'll take a look into this. Was hoping not to have to install Erlang
on the monitoring server as would be required for rabbitmqctl.

-J

On Mon, Jan 12, 2009 at 3:53 PM, Ben Hood <0x6e6562 at gmail.com> wrote:
> Jason,
>
> On Mon, Jan 12, 2009 at 10:33 PM, Jason J. W. Williams
> <jasonjwwilliams at gmail.com> wrote:
>> Sorry...HC=healthcheck. Will probably end up scripting
>> rabbitmqctl...just hate output scraping. :-)
>
> Sure, but this is the Unix way (sort, uniq, cut).
>
> If you'd rather apply higher order functions, I suggest you look at
> the underlying Erlang API - this is semantically the same as a pipe,
> except that you have a more structured access to the data you're
> working with.
>
> Ben
>



From has.sox at gmail.com  Mon Jan 12 22:59:38 2009
From: has.sox at gmail.com (Daniel N)
Date: Tue, 13 Jan 2009 09:59:38 +1100
Subject: [rabbitmq-discuss] Public & Private Areas
Message-ID: <2fff50390901121459t311ff2f2y3bbbb3273874f0b7@mail.gmail.com>

Hi Guys,

I am a n00b so please don't hurt me :P  I pinged the irc channel yesterday
and I was directed to post here.

I have heard users and realms have been removed from rabbitmq for whatever
reason but I didn't want to specifically talk about that.  Instead what I'll
do is put what I'd like to do up so we can pick it to pieces and see why
it's good / bad.  I have a feeling I may be thinking about things in the
wrong way.

What I wanna do:

I'd like to setup my service via two virtual hosts.
1. Public.  People should be able to publish a message to my public
exchanges only.  They should not be able to create queues, listen to queues,
create exchanges.  Just publish to a predefined list of exchanges.  This is
the public area.  They should not read queues because other ppls data will
be on them, they should not be able to setup their own system on the network
and use my resources for their own purposes.

2. Private.  When someone publishes a message on the Public virtual host and
my worker gets it from the queue, I want to throw it over the fence into the
Private virtual host so that I can do the actual work of the service without
people getting in an screwing with my system.

What this will allow me to do is to allow people to connect to the messaging
network directly to send messages to my service.  They don't have to go
through a web HTTP interface, nor do I have to focus on providing a scaled
HTTP interface.  If they can connect to the messaging backbone directly I
think it would be the most efficient, and useful way to provide public
access to my service.

Now that I've got that out, am I thinking about this the wrong way?  Is
there any way to do what I'm suggesting?  Is it a valid thing to want to do?

I'm pretty fresh with messaging systems so I'm happy to take advice on how
to do this properly. :)

Looking forward to your responses (hopefully) ;-)

Cheers
Daniel
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20090113/bbc41da9/attachment.htm 

From 0x6e6562 at gmail.com  Mon Jan 12 23:08:24 2009
From: 0x6e6562 at gmail.com (Ben Hood)
Date: Mon, 12 Jan 2009 23:08:24 +0000
Subject: [rabbitmq-discuss] Monitoring Question
In-Reply-To: <3b949f090901121458j72108d1cl5f3d7eca68441733@mail.gmail.com>
References: <3b949f090901121300o66a7d2dbmf7a59dc91ac8a8f@mail.gmail.com>
	<269388e30901121345xf884ebcwee049ddc7136a13e@mail.gmail.com>
	<3b949f090901121355w55937258xf46e4d2eef092c91@mail.gmail.com>
	<269388e30901121410o564dee41h2e41c979972b052d@mail.gmail.com>
	<3b949f090901121417w6286d474xfa1201b8994c98c@mail.gmail.com>
	<269388e30901121429w7f32456eyba2b5e88cf4010bd@mail.gmail.com>
	<3b949f090901121433s2c33c848y70a5a41ba986db3e@mail.gmail.com>
	<269388e30901121453x70359afdle5621a76be96169f@mail.gmail.com>
	<3b949f090901121458j72108d1cl5f3d7eca68441733@mail.gmail.com>
Message-ID: <269388e30901121508y32084bcbvb21e77219d38839b@mail.gmail.com>

Jason,

On Mon, Jan 12, 2009 at 10:58 PM, Jason J. W. Williams
<jasonjwwilliams at gmail.com> wrote:
> I'll take a look into this. Was hoping not to have to install Erlang
> on the monitoring server as would be required for rabbitmqctl.

Be aware that this is for all intents and purposes the lowest level of
abstraction you can get - so you subject to APIs that are not
guaranteed to be set in stone.

Having said that, and on a purely personal note, getting your head
around Erlang is well invested time. This is because of all of the
monitoring functionality you get thrown in for free with OTP. And it's
all functional programming.

Ben



From jasonjwwilliams at gmail.com  Mon Jan 12 23:13:27 2009
From: jasonjwwilliams at gmail.com (Jason J. W. Williams)
Date: Mon, 12 Jan 2009 16:13:27 -0700
Subject: [rabbitmq-discuss] Monitoring Question
In-Reply-To: <269388e30901121508y32084bcbvb21e77219d38839b@mail.gmail.com>
References: <3b949f090901121300o66a7d2dbmf7a59dc91ac8a8f@mail.gmail.com>
	<269388e30901121345xf884ebcwee049ddc7136a13e@mail.gmail.com>
	<3b949f090901121355w55937258xf46e4d2eef092c91@mail.gmail.com>
	<269388e30901121410o564dee41h2e41c979972b052d@mail.gmail.com>
	<3b949f090901121417w6286d474xfa1201b8994c98c@mail.gmail.com>
	<269388e30901121429w7f32456eyba2b5e88cf4010bd@mail.gmail.com>
	<3b949f090901121433s2c33c848y70a5a41ba986db3e@mail.gmail.com>
	<269388e30901121453x70359afdle5621a76be96169f@mail.gmail.com>
	<3b949f090901121458j72108d1cl5f3d7eca68441733@mail.gmail.com>
	<269388e30901121508y32084bcbvb21e77219d38839b@mail.gmail.com>
Message-ID: <3b949f090901121513l35b2a9c5h6bda3a3832d3b406@mail.gmail.com>

Hi Ben,

Erlang was already on my list of things to learn before RabbitMQ. :-)
Still is, just need to get this project done first. We've got the rule
if you can't monitor it you can't deploy it. :-)

-J

On Mon, Jan 12, 2009 at 4:08 PM, Ben Hood <0x6e6562 at gmail.com> wrote:
> Jason,
>
> On Mon, Jan 12, 2009 at 10:58 PM, Jason J. W. Williams
> <jasonjwwilliams at gmail.com> wrote:
>> I'll take a look into this. Was hoping not to have to install Erlang
>> on the monitoring server as would be required for rabbitmqctl.
>
> Be aware that this is for all intents and purposes the lowest level of
> abstraction you can get - so you subject to APIs that are not
> guaranteed to be set in stone.
>
> Having said that, and on a purely personal note, getting your head
> around Erlang is well invested time. This is because of all of the
> monitoring functionality you get thrown in for free with OTP. And it's
> all functional programming.
>
> Ben
>



From 0x6e6562 at gmail.com  Mon Jan 12 23:14:27 2009
From: 0x6e6562 at gmail.com (Ben Hood)
Date: Mon, 12 Jan 2009 23:14:27 +0000
Subject: [rabbitmq-discuss] Public & Private Areas
In-Reply-To: <2fff50390901121459t311ff2f2y3bbbb3273874f0b7@mail.gmail.com>
References: <2fff50390901121459t311ff2f2y3bbbb3273874f0b7@mail.gmail.com>
Message-ID: <269388e30901121514n1c37c680s13e39038a6b6e9fa@mail.gmail.com>

Daniel,

On Mon, Jan 12, 2009 at 10:59 PM, Daniel N <has.sox at gmail.com> wrote:
> Now that I've got that out, am I thinking about this the wrong way?  Is
> there any way to do what I'm suggesting?  Is it a valid thing to want to do?

What you are asking about is perfectly valid and is currently not
possible in Rabbit ATM (at least not the level of granularity that you
would eventually require).

We are looking into this kind of access control and I am currently
knocking some prototypes to tackle this requirement - but alas, this
is open source software, so it might take a while until something
practical is available or dare I say released.

HTH,

Ben



From 0x6e6562 at gmail.com  Mon Jan 12 23:18:50 2009
From: 0x6e6562 at gmail.com (Ben Hood)
Date: Mon, 12 Jan 2009 23:18:50 +0000
Subject: [rabbitmq-discuss] Monitoring Question
In-Reply-To: <3b949f090901121513l35b2a9c5h6bda3a3832d3b406@mail.gmail.com>
References: <3b949f090901121300o66a7d2dbmf7a59dc91ac8a8f@mail.gmail.com>
	<3b949f090901121355w55937258xf46e4d2eef092c91@mail.gmail.com>
	<269388e30901121410o564dee41h2e41c979972b052d@mail.gmail.com>
	<3b949f090901121417w6286d474xfa1201b8994c98c@mail.gmail.com>
	<269388e30901121429w7f32456eyba2b5e88cf4010bd@mail.gmail.com>
	<3b949f090901121433s2c33c848y70a5a41ba986db3e@mail.gmail.com>
	<269388e30901121453x70359afdle5621a76be96169f@mail.gmail.com>
	<3b949f090901121458j72108d1cl5f3d7eca68441733@mail.gmail.com>
	<269388e30901121508y32084bcbvb21e77219d38839b@mail.gmail.com>
	<3b949f090901121513l35b2a9c5h6bda3a3832d3b406@mail.gmail.com>
Message-ID: <269388e30901121518u6bdc212br771cee72b0c62f80@mail.gmail.com>

Jason,

On Mon, Jan 12, 2009 at 11:13 PM, Jason J. W. Williams
<jasonjwwilliams at gmail.com> wrote:
> Erlang was already on my list of things to learn before RabbitMQ. :-)
> Still is, just need to get this project done first. We've got the rule
> if you can't monitor it you can't deploy it. :-)

Fair point.

IMHO Erlang is one of the most monitorable things that I've seen:

http://erlang.org/doc/apps/appmon/part_frame.html

...and many more: remote Erlang shells, remoting OOTB, protocols,
SNMP, etc, etc.....it is a language for continuously running
applications.

Ben



From dialtone at gmail.com  Mon Jan 12 23:22:22 2009
From: dialtone at gmail.com (Valentino Volonghi)
Date: Mon, 12 Jan 2009 15:22:22 -0800
Subject: [rabbitmq-discuss] Durable exchanges
Message-ID: <D509C88A-0437-459E-B493-428B6378B45A@gmail.com>

I'm wondering if they have any difference at all with non durable ones
in rabbitmq. The reason why I'm asking is because I want to change the
least possible in the rabbitmq-erlang-client and I see that it supports
declaring durable queues easily but not durable exchanges easily.

Considering this I've tried creating a non durable exchange with a  
durable
queue and persistent messages and to my "surprise" even after consuming
all the messages in the queue I was still able to access the queue  
with the
messages even through restarts.

This is a small part of the consumer:
     ch.exchange_declare(exchange, type='topic', auto_delete=False)
     qname, _, _ = ch.queue_declare(queue, durable=True,  
auto_delete=False)
     ch.queue_bind(queue, exchange, routing_key=sys.argv[2])
     ch.basic_consume(queue, callback=callback)

This is a small part of the producer:
         self.ch.exchange_declare(exchange, type='topic',  
auto_delete=False)
         msg = amqp.Message(body, delivery_mode=2)
         self.ch.basic_publish(msg, self.exchange, routing_key=key)

As you see I don't specify anything in the exchange_declare and by  
default
in py-amqplib is durable=False.

I tried both restarting rabbitmq with messages in the queue and then  
receiving
them. And then I tried with empty queue and then sending after  
restart, since I
don't create a queue in the producer it should fail or lose the  
message but instead
it's correctly delivered when I start the consumer.

Is this the expected behavior and I can avoid patching this part of the
rabbitmq-erlang-client?

-- 
Valentino Volonghi aka Dialtone
Now running MacOS X 10.5
Home Page: http://www.twisted.it
http://www.adroll.com

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20090112/b5f1e2cb/attachment.htm 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: PGP.sig
Type: application/pgp-signature
Size: 194 bytes
Desc: This is a digitally signed message part
Url : http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20090112/b5f1e2cb/attachment.pgp 

From jasonjwwilliams at gmail.com  Mon Jan 12 23:24:22 2009
From: jasonjwwilliams at gmail.com (Jason J. W. Williams)
Date: Mon, 12 Jan 2009 16:24:22 -0700
Subject: [rabbitmq-discuss] Monitoring Question
In-Reply-To: <269388e30901121518u6bdc212br771cee72b0c62f80@mail.gmail.com>
References: <3b949f090901121300o66a7d2dbmf7a59dc91ac8a8f@mail.gmail.com>
	<269388e30901121410o564dee41h2e41c979972b052d@mail.gmail.com>
	<3b949f090901121417w6286d474xfa1201b8994c98c@mail.gmail.com>
	<269388e30901121429w7f32456eyba2b5e88cf4010bd@mail.gmail.com>
	<3b949f090901121433s2c33c848y70a5a41ba986db3e@mail.gmail.com>
	<269388e30901121453x70359afdle5621a76be96169f@mail.gmail.com>
	<3b949f090901121458j72108d1cl5f3d7eca68441733@mail.gmail.com>
	<269388e30901121508y32084bcbvb21e77219d38839b@mail.gmail.com>
	<3b949f090901121513l35b2a9c5h6bda3a3832d3b406@mail.gmail.com>
	<269388e30901121518u6bdc212br771cee72b0c62f80@mail.gmail.com>
Message-ID: <3b949f090901121524k4bdb699fo65af6203733e5071@mail.gmail.com>

Hi Ben,

There's a lot of things that are very attractive about Erlang. Not
least of which is OTP.

-J

On Mon, Jan 12, 2009 at 4:18 PM, Ben Hood <0x6e6562 at gmail.com> wrote:
> Jason,
>
> On Mon, Jan 12, 2009 at 11:13 PM, Jason J. W. Williams
> <jasonjwwilliams at gmail.com> wrote:
>> Erlang was already on my list of things to learn before RabbitMQ. :-)
>> Still is, just need to get this project done first. We've got the rule
>> if you can't monitor it you can't deploy it. :-)
>
> Fair point.
>
> IMHO Erlang is one of the most monitorable things that I've seen:
>
> http://erlang.org/doc/apps/appmon/part_frame.html
>
> ...and many more: remote Erlang shells, remoting OOTB, protocols,
> SNMP, etc, etc.....it is a language for continuously running
> applications.
>
> Ben
>



From rabbitmq at tmm1.net  Mon Jan 12 23:34:28 2009
From: rabbitmq at tmm1.net (Aman Gupta)
Date: Mon, 12 Jan 2009 15:34:28 -0800
Subject: [rabbitmq-discuss] Monitoring Question
In-Reply-To: <3b949f090901121524k4bdb699fo65af6203733e5071@mail.gmail.com>
References: <3b949f090901121300o66a7d2dbmf7a59dc91ac8a8f@mail.gmail.com>
	<3b949f090901121417w6286d474xfa1201b8994c98c@mail.gmail.com>
	<269388e30901121429w7f32456eyba2b5e88cf4010bd@mail.gmail.com>
	<3b949f090901121433s2c33c848y70a5a41ba986db3e@mail.gmail.com>
	<269388e30901121453x70359afdle5621a76be96169f@mail.gmail.com>
	<3b949f090901121458j72108d1cl5f3d7eca68441733@mail.gmail.com>
	<269388e30901121508y32084bcbvb21e77219d38839b@mail.gmail.com>
	<3b949f090901121513l35b2a9c5h6bda3a3832d3b406@mail.gmail.com>
	<269388e30901121518u6bdc212br771cee72b0c62f80@mail.gmail.com>
	<3b949f090901121524k4bdb699fo65af6203733e5071@mail.gmail.com>
Message-ID: <e1c05edd0901121534v353370c2j4684482e7b87b053@mail.gmail.com>

You could also do this via ruby, but the protocol only gives you the #
of consumers and the # of messages on the queue:

require 'rubygems'
require 'mq'

AMQP.start(:host => 'localhost', :port => 5672) do
  EM.add_periodic_timer(30){

    MQ.queue('name').status{ |n_messages, n_consumers|
      send_email if n_messages > 100
    }

  }
end

  Aman

On Mon, Jan 12, 2009 at 3:24 PM, Jason J. W. Williams
<jasonjwwilliams at gmail.com> wrote:
> Hi Ben,
>
> There's a lot of things that are very attractive about Erlang. Not
> least of which is OTP.
>
> -J
>
> On Mon, Jan 12, 2009 at 4:18 PM, Ben Hood <0x6e6562 at gmail.com> wrote:
>> Jason,
>>
>> On Mon, Jan 12, 2009 at 11:13 PM, Jason J. W. Williams
>> <jasonjwwilliams at gmail.com> wrote:
>>> Erlang was already on my list of things to learn before RabbitMQ. :-)
>>> Still is, just need to get this project done first. We've got the rule
>>> if you can't monitor it you can't deploy it. :-)
>>
>> Fair point.
>>
>> IMHO Erlang is one of the most monitorable things that I've seen:
>>
>> http://erlang.org/doc/apps/appmon/part_frame.html
>>
>> ...and many more: remote Erlang shells, remoting OOTB, protocols,
>> SNMP, etc, etc.....it is a language for continuously running
>> applications.
>>
>> Ben
>>
>
> _______________________________________________
> rabbitmq-discuss mailing list
> rabbitmq-discuss at lists.rabbitmq.com
> http://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss
>



From 0x6e6562 at gmail.com  Mon Jan 12 23:34:44 2009
From: 0x6e6562 at gmail.com (Ben Hood)
Date: Mon, 12 Jan 2009 23:34:44 +0000
Subject: [rabbitmq-discuss] Fwd:  Public & Private Areas
In-Reply-To: <269388e30901121534r30ed79faw76890402327a01c@mail.gmail.com>
References: <2fff50390901121459t311ff2f2y3bbbb3273874f0b7@mail.gmail.com>
	<269388e30901121514n1c37c680s13e39038a6b6e9fa@mail.gmail.com>
	<2fff50390901121519j54b0f397lbea778650a30b50a@mail.gmail.com>
	<269388e30901121534r30ed79faw76890402327a01c@mail.gmail.com>
Message-ID: <269388e30901121534w39c00c5co3aaa93d345cbb562@mail.gmail.com>

---------- Forwarded message ----------
From: Ben Hood <0x6e6562 at gmail.com>
Date: Mon, Jan 12, 2009 at 11:34 PM
Subject: Re: [rabbitmq-discuss] Public & Private Areas
To: Daniel N <has.sox at gmail.com>


Daniel,

On Mon, Jan 12, 2009 at 11:19 PM, Daniel N <has.sox at gmail.com> wrote:
> Great, glad I'm not going in a weird direction.  Thats ok, I need an HTTP
> interface anyway so it can start as this.

If you want HTTP, you may be interested in something Pieter is hacking
on: http://www.openamq.org/news:happy-restms

But having said that, asking for HTTP as a transport is something
different to access control, IMHO, which was your original question.

> I'll keep my eyes out on the list for whatever solution you do come up with

OK, no worries,

Ben



From 0x6e6562 at gmail.com  Tue Jan 13 00:03:18 2009
From: 0x6e6562 at gmail.com (Ben Hood)
Date: Tue, 13 Jan 2009 00:03:18 +0000
Subject: [rabbitmq-discuss] Fwd: Public & Private Areas
In-Reply-To: <2fff50390901121554j55f659a3i2bbba0260e9837ac@mail.gmail.com>
References: <2fff50390901121459t311ff2f2y3bbbb3273874f0b7@mail.gmail.com>
	<269388e30901121514n1c37c680s13e39038a6b6e9fa@mail.gmail.com>
	<2fff50390901121519j54b0f397lbea778650a30b50a@mail.gmail.com>
	<269388e30901121534r30ed79faw76890402327a01c@mail.gmail.com>
	<269388e30901121534w39c00c5co3aaa93d345cbb562@mail.gmail.com>
	<2fff50390901121554j55f659a3i2bbba0260e9837ac@mail.gmail.com>
Message-ID: <269388e30901121603g4ef030eblbbddfb7cbe38e6e2@mail.gmail.com>

Daniel,

On Mon, Jan 12, 2009 at 11:54 PM, Daniel N <has.sox at gmail.com> wrote:
> Yeah it is.  But by exposing it via a HTTP front for public clients, I can
> keep the RabbitMQ network private, since my front end app can recieve the
> message, and push it into the exchanges behind the scenes.

I don't see why the public front end *has* to be HTTP, but that's
probably because I'm old fashioned.

IMHO if your public front end can use a raw socket, then this can open
a world of opportunities up to you - i.e. just connect directly to the
exchange.

However, if you think that HTTP is a good idea, I'm sure that there
are some people on this list that will encourage you.

Hen

Ben



From matthias at lshift.net  Tue Jan 13 00:12:55 2009
From: matthias at lshift.net (Matthias Radestock)
Date: Tue, 13 Jan 2009 00:12:55 +0000
Subject: [rabbitmq-discuss] Durable exchanges
In-Reply-To: <D509C88A-0437-459E-B493-428B6378B45A@gmail.com>
References: <D509C88A-0437-459E-B493-428B6378B45A@gmail.com>
Message-ID: <496BDC87.8080809@lshift.net>

Valentino,

Valentino Volonghi wrote:
> I'm wondering if they have any difference at all with non durable ones
> in rabbitmq.

There is a difference between durable and non-durable exchanges. The 
former survive a broker restart. The latter don't.

> The reason why I'm asking is because I want to change the least
> possible in the rabbitmq-erlang-client and I see that it supports 
> declaring durable queues easily but not durable exchanges easily.

amqp_channel:call(Channel, #'exchange.declare'{exchange = Name,
                                                durable = true}).

That's pretty easy, isn't it?

> Considering this I've tried creating a non durable exchange with a durable
> queue and persistent messages and to my "surprise" even after consuming
> all the messages in the queue I was still able to access the queue with the
> messages even through restarts.

Exchanges route published messages to bound queues. You can consume 
messages from queues without the presence of an exchange.

> This is a small part of the consumer:
>     ch.exchange_declare(exchange, type='topic', auto_delete=False)
>     qname, _, _ = ch.queue_declare(queue, durable=True, auto_delete=False)
>     ch.queue_bind(queue, exchange, routing_key=sys.argv[2])
>     ch.basic_consume(queue, callback=callback)

The above should fail at the bind step: the AMQP 0-8 spec requires that 
durable queues can only be bound to durable exchanges (NB: this changes 
in 0-9-1). And the RabbitMQ server definitely enforces that.

Could you perhaps start from a clean RabbitMQ instance, run the above 
through the tracer (http://www.rabbitmq.com/examples.html#tracer) and 
post the output (along with the complete code you ran)? That way we can 
tell whether the it's the client or the server that is at fault here.


Regards,

Matthias.



From jasonjwwilliams at gmail.com  Tue Jan 13 00:19:08 2009
From: jasonjwwilliams at gmail.com (Jason J. W. Williams)
Date: Mon, 12 Jan 2009 17:19:08 -0700
Subject: [rabbitmq-discuss] Monitoring Question
In-Reply-To: <e1c05edd0901121534v353370c2j4684482e7b87b053@mail.gmail.com>
References: <3b949f090901121300o66a7d2dbmf7a59dc91ac8a8f@mail.gmail.com>
	<269388e30901121429w7f32456eyba2b5e88cf4010bd@mail.gmail.com>
	<3b949f090901121433s2c33c848y70a5a41ba986db3e@mail.gmail.com>
	<269388e30901121453x70359afdle5621a76be96169f@mail.gmail.com>
	<3b949f090901121458j72108d1cl5f3d7eca68441733@mail.gmail.com>
	<269388e30901121508y32084bcbvb21e77219d38839b@mail.gmail.com>
	<3b949f090901121513l35b2a9c5h6bda3a3832d3b406@mail.gmail.com>
	<269388e30901121518u6bdc212br771cee72b0c62f80@mail.gmail.com>
	<3b949f090901121524k4bdb699fo65af6203733e5071@mail.gmail.com>
	<e1c05edd0901121534v353370c2j4684482e7b87b053@mail.gmail.com>
Message-ID: <3b949f090901121619s57d34199od2d7b876f98dd237@mail.gmail.com>

Hi Aman,

Yeah, you can do it with py-amqplib (earlier email). And in my case
the number of messages on the queue is all I care about. Just want to
know when the consumers can't keep up with the load.

-J

On Mon, Jan 12, 2009 at 4:34 PM, Aman Gupta <rabbitmq at tmm1.net> wrote:
> You could also do this via ruby, but the protocol only gives you the #
> of consumers and the # of messages on the queue:
>
> require 'rubygems'
> require 'mq'
>
> AMQP.start(:host => 'localhost', :port => 5672) do
>  EM.add_periodic_timer(30){
>
>    MQ.queue('name').status{ |n_messages, n_consumers|
>      send_email if n_messages > 100
>    }
>
>  }
> end
>
>  Aman
>
> On Mon, Jan 12, 2009 at 3:24 PM, Jason J. W. Williams
> <jasonjwwilliams at gmail.com> wrote:
>> Hi Ben,
>>
>> There's a lot of things that are very attractive about Erlang. Not
>> least of which is OTP.
>>
>> -J
>>
>> On Mon, Jan 12, 2009 at 4:18 PM, Ben Hood <0x6e6562 at gmail.com> wrote:
>>> Jason,
>>>
>>> On Mon, Jan 12, 2009 at 11:13 PM, Jason J. W. Williams
>>> <jasonjwwilliams at gmail.com> wrote:
>>>> Erlang was already on my list of things to learn before RabbitMQ. :-)
>>>> Still is, just need to get this project done first. We've got the rule
>>>> if you can't monitor it you can't deploy it. :-)
>>>
>>> Fair point.
>>>
>>> IMHO Erlang is one of the most monitorable things that I've seen:
>>>
>>> http://erlang.org/doc/apps/appmon/part_frame.html
>>>
>>> ...and many more: remote Erlang shells, remoting OOTB, protocols,
>>> SNMP, etc, etc.....it is a language for continuously running
>>> applications.
>>>
>>> Ben
>>>
>>
>> _______________________________________________
>> rabbitmq-discuss mailing list
>> rabbitmq-discuss at lists.rabbitmq.com
>> http://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss
>>
>
> _______________________________________________
> rabbitmq-discuss mailing list
> rabbitmq-discuss at lists.rabbitmq.com
> http://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss
>



From 0x6e6562 at gmail.com  Tue Jan 13 00:24:24 2009
From: 0x6e6562 at gmail.com (Ben Hood)
Date: Tue, 13 Jan 2009 00:24:24 +0000
Subject: [rabbitmq-discuss] Fwd: Public & Private Areas
In-Reply-To: <2fff50390901121608i4b5927c3x3c4e3b82237b5c0@mail.gmail.com>
References: <2fff50390901121459t311ff2f2y3bbbb3273874f0b7@mail.gmail.com>
	<269388e30901121514n1c37c680s13e39038a6b6e9fa@mail.gmail.com>
	<2fff50390901121519j54b0f397lbea778650a30b50a@mail.gmail.com>
	<269388e30901121534r30ed79faw76890402327a01c@mail.gmail.com>
	<269388e30901121534w39c00c5co3aaa93d345cbb562@mail.gmail.com>
	<2fff50390901121554j55f659a3i2bbba0260e9837ac@mail.gmail.com>
	<269388e30901121603g4ef030eblbbddfb7cbe38e6e2@mail.gmail.com>
	<2fff50390901121608i4b5927c3x3c4e3b82237b5c0@mail.gmail.com>
Message-ID: <269388e30901121624x3f7820a6n4e560d4a0b22a042@mail.gmail.com>

Daniel,

On Tue, Jan 13, 2009 at 12:08 AM, Daniel N <has.sox at gmail.com> wrote:
> Well, basically what I'd like to do is provide access in a public fashion.
> I'm used to HTTP so I thought of that.  I'm really interested to understand
> other good ways to do it though.

If you want/need to constrict yourself to a browser as a UI, then you
will probably have to restrict yourself to what HTTP allows you to do.

Having said that, Tony has hacked this cool adapter for JS:
http://hg.rabbitmq.com/rabbitmq-http2/

I think there is a blog for this as well - just can't find it yet.

Derek Wischusen has also done Flash with RabbitMQ over Stomp using
this adapter: http://hg.rabbitmq.com/rabbitmq-stomp/

On a different technology plane, there is this Flash based library
that uses the AS3 socket interface:
http://github.com/0x6e6562/as3-amqp/tree/master

The guys from Orbiter have knocked up a proxy that you can use JS to
speak via socket as well.

Just a few ideas, there are many more (especially if you are not
targeting a browser).

Ben



From 0x6e6562 at gmail.com  Tue Jan 13 00:29:24 2009
From: 0x6e6562 at gmail.com (Ben Hood)
Date: Tue, 13 Jan 2009 00:29:24 +0000
Subject: [rabbitmq-discuss] Monitoring Question
In-Reply-To: <3b949f090901121619s57d34199od2d7b876f98dd237@mail.gmail.com>
References: <3b949f090901121300o66a7d2dbmf7a59dc91ac8a8f@mail.gmail.com>
	<3b949f090901121433s2c33c848y70a5a41ba986db3e@mail.gmail.com>
	<269388e30901121453x70359afdle5621a76be96169f@mail.gmail.com>
	<3b949f090901121458j72108d1cl5f3d7eca68441733@mail.gmail.com>
	<269388e30901121508y32084bcbvb21e77219d38839b@mail.gmail.com>
	<3b949f090901121513l35b2a9c5h6bda3a3832d3b406@mail.gmail.com>
	<269388e30901121518u6bdc212br771cee72b0c62f80@mail.gmail.com>
	<3b949f090901121524k4bdb699fo65af6203733e5071@mail.gmail.com>
	<e1c05edd0901121534v353370c2j4684482e7b87b053@mail.gmail.com>
	<3b949f090901121619s57d34199od2d7b876f98dd237@mail.gmail.com>
Message-ID: <269388e30901121629q1eaf5672i3fae2bb4fe56dc85@mail.gmail.com>

Jason,

On Tue, Jan 13, 2009 at 12:19 AM, Jason J. W. Williams
<jasonjwwilliams at gmail.com> wrote:
> Yeah, you can do it with py-amqplib (earlier email). And in my case
> the number of messages on the queue is all I care about. Just want to
> know when the consumers can't keep up with the load.

That is, IMHO, a totally different question.

If you care about ingress flow control, you might want to read this:
http://hopper.squarespace.com/blog/2008/11/9/flow-control-in-rabbitmq.html

If you care about egress flow control, you might want to read this:
https://dev.rabbitmq.com/wiki/BasicQosDesign

Ben



From dialtone at gmail.com  Tue Jan 13 00:31:23 2009
From: dialtone at gmail.com (Valentino Volonghi)
Date: Mon, 12 Jan 2009 16:31:23 -0800
Subject: [rabbitmq-discuss] Durable exchanges
In-Reply-To: <496BDC87.8080809@lshift.net>
References: <D509C88A-0437-459E-B493-428B6378B45A@gmail.com>
	<496BDC87.8080809@lshift.net>
Message-ID: <A2A5256B-278D-4413-857C-390E7662AE13@gmail.com>

On Jan 12, 2009, at 4:12 PM, Matthias Radestock wrote:

> There is a difference between durable and non-durable exchanges. The  
> former survive a broker restart. The latter don't.

Sure, but as I showed in the post I didn't see the difference but I  
was probably
doing something wrong.

> amqp_channel:call(Channel, #'exchange.declare'{exchange = Name,
>                                               durable = true}).
>
> That's pretty easy, isn't it?

Well... Yes, it's just annoying because then I need to replicate this  
call in every
place where I need a durable exchange and it would be a lot easier if  
it was part
of the client api (I attached patches for the stuff that I needed in  
this ML, and I see
that part of the things are already there in the recent client  
revisions).

> Could you perhaps start from a clean RabbitMQ instance, run the  
> above through the tracer (http://www.rabbitmq.com/ 
> examples.html#tracer) and post the output (along with the complete  
> code you ran)? That way we can tell whether the it's the client or  
> the server that is at fault here.


I don't really have java setup here (and I don't even know how to set  
it up to be honest,
I'm happy without knowing java) so it would take a considerable effort  
to do so... it's
definitely possible that it's an error on my side so I wouldn't worry.

-- 
Valentino Volonghi aka Dialtone
Now running MacOS X 10.5
Home Page: http://www.twisted.it
http://www.adroll.com

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20090112/bea9c57f/attachment.htm 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: PGP.sig
Type: application/pgp-signature
Size: 194 bytes
Desc: This is a digitally signed message part
Url : http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20090112/bea9c57f/attachment.pgp 

From jasonjwwilliams at gmail.com  Tue Jan 13 00:32:16 2009
From: jasonjwwilliams at gmail.com (Jason J. W. Williams)
Date: Mon, 12 Jan 2009 17:32:16 -0700
Subject: [rabbitmq-discuss] Monitoring Question
In-Reply-To: <269388e30901121629q1eaf5672i3fae2bb4fe56dc85@mail.gmail.com>
References: <3b949f090901121300o66a7d2dbmf7a59dc91ac8a8f@mail.gmail.com>
	<269388e30901121453x70359afdle5621a76be96169f@mail.gmail.com>
	<3b949f090901121458j72108d1cl5f3d7eca68441733@mail.gmail.com>
	<269388e30901121508y32084bcbvb21e77219d38839b@mail.gmail.com>
	<3b949f090901121513l35b2a9c5h6bda3a3832d3b406@mail.gmail.com>
	<269388e30901121518u6bdc212br771cee72b0c62f80@mail.gmail.com>
	<3b949f090901121524k4bdb699fo65af6203733e5071@mail.gmail.com>
	<e1c05edd0901121534v353370c2j4684482e7b87b053@mail.gmail.com>
	<3b949f090901121619s57d34199od2d7b876f98dd237@mail.gmail.com>
	<269388e30901121629q1eaf5672i3fae2bb4fe56dc85@mail.gmail.com>
Message-ID: <3b949f090901121632w74c9e114l12228bedf8ffedb3@mail.gmail.com>

Hi Ben,

Right now I don't want the producers being throttled. Just want to
know when the queue is above a warning threshold for a sustained
amount of time. The application is such that normally the consumers
will be able to keep up, except for occasional and temporal "floods"
from customers which the consumers will eventually catch up with.

-J

On Mon, Jan 12, 2009 at 5:29 PM, Ben Hood <0x6e6562 at gmail.com> wrote:
> Jason,
>
> On Tue, Jan 13, 2009 at 12:19 AM, Jason J. W. Williams
> <jasonjwwilliams at gmail.com> wrote:
>> Yeah, you can do it with py-amqplib (earlier email). And in my case
>> the number of messages on the queue is all I care about. Just want to
>> know when the consumers can't keep up with the load.
>
> That is, IMHO, a totally different question.
>
> If you care about ingress flow control, you might want to read this:
> http://hopper.squarespace.com/blog/2008/11/9/flow-control-in-rabbitmq.html
>
> If you care about egress flow control, you might want to read this:
> https://dev.rabbitmq.com/wiki/BasicQosDesign
>
> Ben
>



From jasonjwwilliams at gmail.com  Tue Jan 13 00:39:56 2009
From: jasonjwwilliams at gmail.com (Jason J. W. Williams)
Date: Mon, 12 Jan 2009 17:39:56 -0700
Subject: [rabbitmq-discuss] Queue Re-declaration
Message-ID: <3b949f090901121639y51a0952ek3142c87b0dbae000@mail.gmail.com>

If a queue is declared by one client as durable and non-auto-delete,
but then a second client connects and declares the same queue (this
time non-durable and auto-delete), is the second queue declaration
NOOP'd entirely or do the different properties now take effect? Thank
you in advance.

-J



From 0x6e6562 at gmail.com  Tue Jan 13 00:46:19 2009
From: 0x6e6562 at gmail.com (Ben Hood)
Date: Tue, 13 Jan 2009 00:46:19 +0000
Subject: [rabbitmq-discuss] Durable exchanges
In-Reply-To: <A2A5256B-278D-4413-857C-390E7662AE13@gmail.com>
References: <D509C88A-0437-459E-B493-428B6378B45A@gmail.com>
	<496BDC87.8080809@lshift.net>
	<A2A5256B-278D-4413-857C-390E7662AE13@gmail.com>
Message-ID: <269388e30901121646x13d795eaue4f34359584afa46@mail.gmail.com>

Valentino,

On Tue, Jan 13, 2009 at 12:31 AM, Valentino Volonghi <dialtone at gmail.com> wrote:
> Well... Yes, it's just annoying because then I need to replicate this call
> in every
> place where I need a durable exchange and it would be a lot easier if it was
> part
> of the client api (I attached patches for the stuff that I needed in this
> ML, and I see
> that part of the things are already there in the recent client revisions).

Your patches have not been forgotten or binned. I was talking to
Matthias about them just today. I just haven't had much time to
concentrate on too much Rabbit stuff lately due to client commitments.
Also, we've been pushing a lot of substancial patches through the
client lately and I wanted to apply yours after a whole lot of
re-arranging (and shovel as well).

Ben



From dialtone at gmail.com  Tue Jan 13 01:10:58 2009
From: dialtone at gmail.com (Valentino Volonghi)
Date: Mon, 12 Jan 2009 17:10:58 -0800
Subject: [rabbitmq-discuss] Durable exchanges
In-Reply-To: <269388e30901121646x13d795eaue4f34359584afa46@mail.gmail.com>
References: <D509C88A-0437-459E-B493-428B6378B45A@gmail.com>
	<496BDC87.8080809@lshift.net>
	<A2A5256B-278D-4413-857C-390E7662AE13@gmail.com>
	<269388e30901121646x13d795eaue4f34359584afa46@mail.gmail.com>
Message-ID: <42A18361-0BB4-4D67-804A-2EBED784975B@gmail.com>


On Jan 12, 2009, at 4:46 PM, Ben Hood wrote:

> Valentino,
>
> On Tue, Jan 13, 2009 at 12:31 AM, Valentino Volonghi <dialtone at gmail.com 
> > wrote:
>> Well... Yes, it's just annoying because then I need to replicate  
>> this call
>> in every
>> place where I need a durable exchange and it would be a lot easier  
>> if it was
>> part
>> of the client api (I attached patches for the stuff that I needed  
>> in this
>> ML, and I see
>> that part of the things are already there in the recent client  
>> revisions).
>
> Your patches have not been forgotten or binned. I was talking to
> Matthias about them just today. I just haven't had much time to
> concentrate on too much Rabbit stuff lately due to client commitments.
> Also, we've been pushing a lot of substancial patches through the
> client lately and I wanted to apply yours after a whole lot of
> re-arranging (and shovel as well).


Don't worry, I'm really not complaining, from what I see in tip 3 of 6  
of the patches
I sent are basically useless because there's a way to do the same  
thing with the
recent API.

For shovel I think I changed a lot in shovel.erl and I'm not sure how  
much of it
I shared, if at all. I think I have a public repo on github with the  
changes so anyone
is free to take them if they find them worthy. I'm updating it right  
now with the last
changes I made so that it works with the rabbitmq-erlang-client out of  
the box.

Hope it Helps.

-- 
Valentino Volonghi aka Dialtone
Now running MacOS X 10.5
Home Page: http://www.twisted.it
http://www.adroll.com

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20090112/440521b3/attachment.htm 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: PGP.sig
Type: application/pgp-signature
Size: 194 bytes
Desc: This is a digitally signed message part
Url : http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20090112/440521b3/attachment.pgp 

From 0x6e6562 at gmail.com  Tue Jan 13 01:39:36 2009
From: 0x6e6562 at gmail.com (Ben Hood)
Date: Tue, 13 Jan 2009 01:39:36 +0000
Subject: [rabbitmq-discuss] Durable exchanges
In-Reply-To: <42A18361-0BB4-4D67-804A-2EBED784975B@gmail.com>
References: <D509C88A-0437-459E-B493-428B6378B45A@gmail.com>
	<496BDC87.8080809@lshift.net>
	<A2A5256B-278D-4413-857C-390E7662AE13@gmail.com>
	<269388e30901121646x13d795eaue4f34359584afa46@mail.gmail.com>
	<42A18361-0BB4-4D67-804A-2EBED784975B@gmail.com>
Message-ID: <269388e30901121739j19835700r7d853b637ce0777a@mail.gmail.com>

Valentino,

On Tue, Jan 13, 2009 at 1:10 AM, Valentino Volonghi <dialtone at gmail.com> wrote:
> Don't worry, I'm really not complaining, from what I see in tip 3 of 6 of
> the patches
> I sent are basically useless because there's a way to do the same thing with
> the
> recent API.

Yes, the basic idea of the Erlang client and lib_amqp is to reflect
current community usage as far as that's practical.

> For shovel I think I changed a lot in shovel.erl and I'm not sure how much
> of it
> I shared, if at all. I think I have a public repo on github with the changes
> so anyone
> is free to take them if they find them worthy. I'm updating it right now
> with the last
> changes I made so that it works with the rabbitmq-erlang-client out of the
> box.

If you want to fold the current Erlang client du jour I'd be very
happy, because it would save me doing it, which I was going to get
around to doing soon.

Ben



From 0x6e6562 at gmail.com  Tue Jan 13 01:52:02 2009
From: 0x6e6562 at gmail.com (Ben Hood)
Date: Tue, 13 Jan 2009 01:52:02 +0000
Subject: [rabbitmq-discuss] Monitoring Question
In-Reply-To: <3b949f090901121632w74c9e114l12228bedf8ffedb3@mail.gmail.com>
References: <3b949f090901121300o66a7d2dbmf7a59dc91ac8a8f@mail.gmail.com>
	<3b949f090901121458j72108d1cl5f3d7eca68441733@mail.gmail.com>
	<269388e30901121508y32084bcbvb21e77219d38839b@mail.gmail.com>
	<3b949f090901121513l35b2a9c5h6bda3a3832d3b406@mail.gmail.com>
	<269388e30901121518u6bdc212br771cee72b0c62f80@mail.gmail.com>
	<3b949f090901121524k4bdb699fo65af6203733e5071@mail.gmail.com>
	<e1c05edd0901121534v353370c2j4684482e7b87b053@mail.gmail.com>
	<3b949f090901121619s57d34199od2d7b876f98dd237@mail.gmail.com>
	<269388e30901121629q1eaf5672i3fae2bb4fe56dc85@mail.gmail.com>
	<3b949f090901121632w74c9e114l12228bedf8ffedb3@mail.gmail.com>
Message-ID: <269388e30901121752g4f47b6e4r4c2a878cccd3f22d@mail.gmail.com>

Jason,

On Tue, Jan 13, 2009 at 12:32 AM, Jason J. W. Williams
<jasonjwwilliams at gmail.com> wrote:
> Right now I don't want the producers being throttled. Just want to
> know when the queue is above a warning threshold for a sustained
> amount of time. The application is such that normally the consumers
> will be able to keep up, except for occasional and temporal "floods"
> from customers which the consumers will eventually catch up with.

OK, but what constitutes the threshold? Is it something of any
relevance? If it is, and is exceeded, would you not be inclined to
throttle producers lest this threshold actually indicate that the
broker cannot accept any more messages?

OTOH, you might be interested in queue paging, but I would silly to
entertain another discussion thread about this :-)

Ben



From jasonjwwilliams at gmail.com  Tue Jan 13 02:13:14 2009
From: jasonjwwilliams at gmail.com (Jason J. W. Williams)
Date: Mon, 12 Jan 2009 19:13:14 -0700
Subject: [rabbitmq-discuss] Monitoring Question
In-Reply-To: <269388e30901121807geb6881anec5706adb1434b25@mail.gmail.com>
References: <3b949f090901121300o66a7d2dbmf7a59dc91ac8a8f@mail.gmail.com>
	<269388e30901121518u6bdc212br771cee72b0c62f80@mail.gmail.com>
	<3b949f090901121524k4bdb699fo65af6203733e5071@mail.gmail.com>
	<e1c05edd0901121534v353370c2j4684482e7b87b053@mail.gmail.com>
	<3b949f090901121619s57d34199od2d7b876f98dd237@mail.gmail.com>
	<269388e30901121629q1eaf5672i3fae2bb4fe56dc85@mail.gmail.com>
	<3b949f090901121632w74c9e114l12228bedf8ffedb3@mail.gmail.com>
	<269388e30901121752g4f47b6e4r4c2a878cccd3f22d@mail.gmail.com>
	<3b949f090901121801t2591d4e2nca8f575e0c9f105e@mail.gmail.com>
	<269388e30901121807geb6881anec5706adb1434b25@mail.gmail.com>
Message-ID: <3b949f090901121813q214e3b2drb92d4a0a2340053e@mail.gmail.com>

The use case is such that floods are always temporary. The queues will
subside. Throttling/slowing the producers isn't necessary.

-J

On Mon, Jan 12, 2009 at 7:07 PM, Ben Hood <0x6e6562 at gmail.com> wrote:
> Jason,
>
> On Tue, Jan 13, 2009 at 2:01 AM, Jason J. W. Williams
> <jasonjwwilliams at gmail.com> wrote:
>> the consumers. If we see queue levels above what constitutes the 10
>> minute work-through threshold we want to know immediately, because
>> unusual something is very wrong and broken.
>
> So why wouldn't you want to throttle producers at this point? What are
> you going to do? Kill them?
>
> Ben
>
> PS I respected your request to take this off the list, but I don't see
> why you would want to do this - you may get a better response back
> from somebody on the list. Also, people are interested in these sorts
> of discussions.
>



From cremes.devlist at mac.com  Tue Jan 13 03:03:13 2009
From: cremes.devlist at mac.com (Chuck Remes)
Date: Mon, 12 Jan 2009 21:03:13 -0600
Subject: [rabbitmq-discuss] Queue Re-declaration
In-Reply-To: <3b949f090901121639y51a0952ek3142c87b0dbae000@mail.gmail.com>
References: <3b949f090901121639y51a0952ek3142c87b0dbae000@mail.gmail.com>
Message-ID: <D7806050-2372-46CA-8776-BC509D600E61@mac.com>


On Jan 12, 2009, at 6:39 PM, Jason J. W. Williams wrote:

> If a queue is declared by one client as durable and non-auto-delete,
> but then a second client connects and declares the same queue (this
> time non-durable and auto-delete), is the second queue declaration
> NOOP'd entirely or do the different properties now take effect? Thank
> you in advance.

According to the 0-8 and 0-10 specs, if the queue already exists then  
subsequent declarations with :durable and :auto-delete set ignore  
those bits.

BTW, the same is true for exchanges.

I could not find these provisions in the 0-9-1 spec which is odd.  
However, I imagine these provisions hold true for it too.

cr




From matthias at lshift.net  Tue Jan 13 08:47:22 2009
From: matthias at lshift.net (Matthias Radestock)
Date: Tue, 13 Jan 2009 08:47:22 +0000
Subject: [rabbitmq-discuss] Queue Re-declaration
In-Reply-To: <D7806050-2372-46CA-8776-BC509D600E61@mac.com>
References: <3b949f090901121639y51a0952ek3142c87b0dbae000@mail.gmail.com>
	<D7806050-2372-46CA-8776-BC509D600E61@mac.com>
Message-ID: <496C551A.2070307@lshift.net>

Chuck,

Chuck Remes wrote:
> According to the 0-8 and 0-10 specs, if the queue already exists then  
> subsequent declarations with :durable and :auto-delete set ignore  
> those bits.

Correct.

> BTW, the same is true for exchanges.

Ditto.

> I could not find these provisions in the 0-9-1 spec which is odd.  
> However, I imagine these provisions hold true for it too.

Nope. The following rule has been added regarding the "passive" flag:

"If not set and the exchange exists, the server MUST check that the 
existing exchange has the same values for type, durable, and arguments 
fields.  The server MUST respond with Declare-Ok if the requested 
exchange matches these fields, and MUST raise a channel exception if not."

There is a similar rule for queues.

This corrects a flaw in the 0-8/9 version of the spec. Declarations are 
meant to be *assertions*, e.g. an exchange.declare should be read as "I 
assert that there shall be an exchange named X that is durable, etc". So 
it would be quite wrong for a declaration to return 'ok' when the 
existing entity does not have the specified settings.


Matthias.



From matthias at lshift.net  Tue Jan 13 09:03:54 2009
From: matthias at lshift.net (Matthias Radestock)
Date: Tue, 13 Jan 2009 09:03:54 +0000
Subject: [rabbitmq-discuss] Durable exchanges
In-Reply-To: <A2A5256B-278D-4413-857C-390E7662AE13@gmail.com>
References: <D509C88A-0437-459E-B493-428B6378B45A@gmail.com>	<496BDC87.8080809@lshift.net>
	<A2A5256B-278D-4413-857C-390E7662AE13@gmail.com>
Message-ID: <496C58FA.7050000@lshift.net>

Valentino,

Valentino Volonghi wrote:
> On Jan 12, 2009, at 4:12 PM, Matthias Radestock wrote:
>> amqp_channel:call(Channel, #'exchange.declare'{exchange = Name,
>>                                               durable = true}).
>>
>> That's pretty easy, isn't it?
> 
> Well... Yes, it's just annoying because then I need to replicate this
>  call in every place where I need a durable exchange and it would be
> a lot easier if it was part of the client api

The above *is* part of the client api.

Should lib_amqp contain a separate function for every conceivable 
combination of flags and exchange types, e.g.
  declare_durabe_auto_delete_topic_exchange(...)
  ...
?

If not, where do you draw the line?

lib_amqp predates the use of defaults in the record definitions. With 
those defaults in place, creating small wrappers in lib_amqp saves no 
more than a couple of tokens. And on the downside you then have to 
remember what all those different functions are called and in which 
order they take their arguments.

> it's definitely possible that it's an error on my side so I wouldn't
> worry.

Well, it does concern me when you are seeing apparently non-sensical 
behaviour in your tests. If you do run into this again, could you 
perhaps post step-by-step instructions to reproduce the results from a 
fresh broker install?


Matthias.



From joelwreed at gmail.com  Tue Jan 13 16:51:02 2009
From: joelwreed at gmail.com (Joel Reed)
Date: Tue, 13 Jan 2009 11:51:02 -0500
Subject: [rabbitmq-discuss] Integrating sipX with ejabberd using RabbitMQ
Message-ID: <496CC676.90109@gmail.com>

Thanks to the RabbitMQ team for a great open source messaging server!

I recently completed an integration of ejabberd with sipX using 
RabbitMQ. It was easy to use and configure, and I really appreciate the 
great documentation available.

I'm hoping that someday a message tracing option can be added for 
debugging purposes. That's the only thing I missed.

I wrote about it on my blog in case you're interested in the details:

http://ropeonfire.blogspot.com/2009/01/integrating-sipx-with-ejabberd.html

jr




From dialtone at gmail.com  Tue Jan 13 17:58:35 2009
From: dialtone at gmail.com (Valentino Volonghi)
Date: Tue, 13 Jan 2009 09:58:35 -0800
Subject: [rabbitmq-discuss] Durable exchanges
In-Reply-To: <496C58FA.7050000@lshift.net>
References: <D509C88A-0437-459E-B493-428B6378B45A@gmail.com>	<496BDC87.8080809@lshift.net>
	<A2A5256B-278D-4413-857C-390E7662AE13@gmail.com>
	<496C58FA.7050000@lshift.net>
Message-ID: <6ABE9F6B-B048-48D4-93E1-6450F76BE377@gmail.com>


On Jan 13, 2009, at 1:03 AM, Matthias Radestock wrote:

> The above *is* part of the client api.
>
> Should lib_amqp contain a separate function for every conceivable  
> combination of flags and exchange types, e.g.
> declare_durabe_auto_delete_topic_exchange(...)
> ...
> ?
>
> If not, where do you draw the line?

It seems to me that what declare_queue and publish do is a step
in the right direction, maybe what I would change still is to avoid  
having
to pass a structure and instead pass a list of tuples that will be  
used to
construct the structure that will be sent.

declare_exchange(X, [{durable, true}, {auto_delete, false}]).

But yes, I see your point and I wish erlang had default arguments
without the need to overload the function several times because
essentially this is a non existent problem in python libraries.

> lib_amqp predates the use of defaults in the record definitions.  
> With those defaults in place, creating small wrappers in lib_amqp  
> saves no more than a couple of tokens. And on the downside you then  
> have to remember what all those different functions are called and  
> in which order they take their arguments.

Sure, but it also means that every time you don't use a single
default you have to write those wrappers and those wrappers
will be only in your code and won't be shared.

> Well, it does concern me when you are seeing apparently non-sensical  
> behaviour in your tests. If you do run into this again, could you  
> perhaps post step-by-step instructions to reproduce the results from  
> a fresh broker install?


Yes I will.

-- 
Valentino Volonghi aka Dialtone
Now running MacOS X 10.5
Home Page: http://www.twisted.it
http://www.adroll.com

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20090113/1a607098/attachment.htm 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: PGP.sig
Type: application/pgp-signature
Size: 194 bytes
Desc: This is a digitally signed message part
Url : http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20090113/1a607098/attachment.pgp 

From jasonjwwilliams at gmail.com  Tue Jan 13 22:53:04 2009
From: jasonjwwilliams at gmail.com (Jason J. W. Williams)
Date: Tue, 13 Jan 2009 15:53:04 -0700
Subject: [rabbitmq-discuss] Durable queues and exchanges
Message-ID: <3b949f090901131453o56f11d3ew2eaf70f5ea2fbf9c@mail.gmail.com>

Hello,

Quick question. I realize that for a message to survive a reboot, the
queue and exchange have to be marked durable, and the message itself
needs to use delivery_mode=2. That being said, does marking a queue
and exchange durable only flag them to be recreated automatically on a
reboot, or does it start some kind of logging? Put another way, does
setting a queue/exchange to durable have a performance hit on its own?
Thank you in advance.

-J



From jasonjwwilliams at gmail.com  Tue Jan 13 23:06:15 2009
From: jasonjwwilliams at gmail.com (Jason J. W. Williams)
Date: Tue, 13 Jan 2009 16:06:15 -0700
Subject: [rabbitmq-discuss] Queue Re-declaration
In-Reply-To: <496C551A.2070307@lshift.net>
References: <3b949f090901121639y51a0952ek3142c87b0dbae000@mail.gmail.com>
	<D7806050-2372-46CA-8776-BC509D600E61@mac.com>
	<496C551A.2070307@lshift.net>
Message-ID: <3b949f090901131506y2b708a0drf43edd78ba2d6291@mail.gmail.com>

So if you make a mistake and declare an-in-use queue as non-durable
and need to change it, the only way to do so is to destroy the queue
and re-create it?

-J

On Tue, Jan 13, 2009 at 1:47 AM, Matthias Radestock <matthias at lshift.net> wrote:
> Chuck,
>
> Chuck Remes wrote:
>> According to the 0-8 and 0-10 specs, if the queue already exists then
>> subsequent declarations with :durable and :auto-delete set ignore
>> those bits.
>
> Correct.
>
>> BTW, the same is true for exchanges.
>
> Ditto.
>
>> I could not find these provisions in the 0-9-1 spec which is odd.
>> However, I imagine these provisions hold true for it too.
>
> Nope. The following rule has been added regarding the "passive" flag:
>
> "If not set and the exchange exists, the server MUST check that the
> existing exchange has the same values for type, durable, and arguments
> fields.  The server MUST respond with Declare-Ok if the requested
> exchange matches these fields, and MUST raise a channel exception if not."
>
> There is a similar rule for queues.
>
> This corrects a flaw in the 0-8/9 version of the spec. Declarations are
> meant to be *assertions*, e.g. an exchange.declare should be read as "I
> assert that there shall be an exchange named X that is durable, etc". So
> it would be quite wrong for a declaration to return 'ok' when the
> existing entity does not have the specified settings.
>
>
> Matthias.
>
> _______________________________________________
> rabbitmq-discuss mailing list
> rabbitmq-discuss at lists.rabbitmq.com
> http://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss
>



From matthias at lshift.net  Tue Jan 13 23:12:48 2009
From: matthias at lshift.net (Matthias Radestock)
Date: Tue, 13 Jan 2009 23:12:48 +0000
Subject: [rabbitmq-discuss] Durable queues and exchanges
In-Reply-To: <3b949f090901131453o56f11d3ew2eaf70f5ea2fbf9c@mail.gmail.com>
References: <3b949f090901131453o56f11d3ew2eaf70f5ea2fbf9c@mail.gmail.com>
Message-ID: <496D1FF0.8030604@lshift.net>

Jason,

Jason J. W. Williams wrote:
> Put another way, does setting a queue/exchange to durable have a
> performance hit on its own?

No.

Matthias.



From jasonjwwilliams at gmail.com  Tue Jan 13 23:15:41 2009
From: jasonjwwilliams at gmail.com (Jason J. W. Williams)
Date: Tue, 13 Jan 2009 16:15:41 -0700
Subject: [rabbitmq-discuss] Durable queues and exchanges
In-Reply-To: <496D1FF0.8030604@lshift.net>
References: <3b949f090901131453o56f11d3ew2eaf70f5ea2fbf9c@mail.gmail.com>
	<496D1FF0.8030604@lshift.net>
Message-ID: <3b949f090901131515y2e5b4db7ye9b3a44f38df7912@mail.gmail.com>

Hi Matthias,

Excellent. That's what I thought, just wanted to make sure. Thank you.

-J

On Tue, Jan 13, 2009 at 4:12 PM, Matthias Radestock <matthias at lshift.net> wrote:
> Jason,
>
> Jason J. W. Williams wrote:
>>
>> Put another way, does setting a queue/exchange to durable have a
>> performance hit on its own?
>
> No.
>
> Matthias.
>



From matthias at lshift.net  Tue Jan 13 23:22:50 2009
From: matthias at lshift.net (Matthias Radestock)
Date: Tue, 13 Jan 2009 23:22:50 +0000
Subject: [rabbitmq-discuss] Queue Re-declaration
In-Reply-To: <3b949f090901131506y2b708a0drf43edd78ba2d6291@mail.gmail.com>
References: <3b949f090901121639y51a0952ek3142c87b0dbae000@mail.gmail.com>	<D7806050-2372-46CA-8776-BC509D600E61@mac.com>	<496C551A.2070307@lshift.net>
	<3b949f090901131506y2b708a0drf43edd78ba2d6291@mail.gmail.com>
Message-ID: <496D224A.5070400@lshift.net>

Jason,

Jason J. W. Williams wrote:
> So if you make a mistake and declare an-in-use queue as non-durable
> and need to change it, the only way to do so is to destroy the queue
> and re-create it?

Correct, and that is true in all versions of the AMQP spec. It is 
central to the assertion-style semantics of declaration, which avoids 
many of the pitfalls associated with access to a shared resource by 
multiple, distributed clients.


Matthias.



From jasonjwwilliams at gmail.com  Tue Jan 13 23:26:06 2009
From: jasonjwwilliams at gmail.com (Jason J. W. Williams)
Date: Tue, 13 Jan 2009 16:26:06 -0700
Subject: [rabbitmq-discuss] Queue Re-declaration
In-Reply-To: <496D224A.5070400@lshift.net>
References: <3b949f090901121639y51a0952ek3142c87b0dbae000@mail.gmail.com>
	<D7806050-2372-46CA-8776-BC509D600E61@mac.com>
	<496C551A.2070307@lshift.net>
	<3b949f090901131506y2b708a0drf43edd78ba2d6291@mail.gmail.com>
	<496D224A.5070400@lshift.net>
Message-ID: <3b949f090901131526x2eb486adx6f1dd21781648145@mail.gmail.com>

Thank you again. :-) Puts a lot of emphasis on getting the configuration right.

-J

On Tue, Jan 13, 2009 at 4:22 PM, Matthias Radestock <matthias at lshift.net> wrote:
> Jason,
>
> Jason J. W. Williams wrote:
>>
>> So if you make a mistake and declare an-in-use queue as non-durable
>> and need to change it, the only way to do so is to destroy the queue
>> and re-create it?
>
> Correct, and that is true in all versions of the AMQP spec. It is central to
> the assertion-style semantics of declaration, which avoids many of the
> pitfalls associated with access to a shared resource by multiple,
> distributed clients.
>
>
> Matthias.
>



From jasonjwwilliams at gmail.com  Wed Jan 14 02:06:04 2009
From: jasonjwwilliams at gmail.com (Jason J. W. Williams)
Date: Tue, 13 Jan 2009 19:06:04 -0700
Subject: [rabbitmq-discuss] AMQP & Python Write-Up
Message-ID: <3b949f090901131806k2d16f98dwf61e652c7434c157@mail.gmail.com>

Hi,

I've written up a quick start on the basics of AMQP and using it in
Python, that is the kind of document I wished I'd been able to find in
one place: http://blogs.digitar.com/jjww/2009/01/rabbits-and-warrens/

It's probably laced with errors, and I'd appreciate any
feedback/corrections. Please feel free to pass it on if you think it's
helpful.

-J



From julien.genestoux at gmail.com  Wed Jan 14 05:37:44 2009
From: julien.genestoux at gmail.com (Julien Genestoux)
Date: Tue, 13 Jan 2009 21:37:44 -0800
Subject: [rabbitmq-discuss] Size of messages?
In-Reply-To: <4969A2E7.1030401@lshift.net>
References: <26c0cf900901091439k367a0abgeec1b5f1e9dddd5b@mail.gmail.com>
	<4969A2E7.1030401@lshift.net>
Message-ID: <26c0cf900901132137g19141a01ma947cb62af9c6ee0@mail.gmail.com>

We've been testing "big messages" in the queues for the last 24h (yes it's
short) and so far, so good!

Thanks all for your help, I'll let you know if we have anything wrong.

Thx,

--
Julien Genestoux
http://www.ouvre-boite.com
http://blog.notifixio.us

+1 (415) 254 7340
+33 (0)9 70 44 76 29


On Sat, Jan 10, 2009 at 11:42 PM, Tony Garnock-Jones <tonyg at lshift.net>wrote:

> My question is the following : instead of queuing the file names (and
>> storing the files locally), is it
>> possible to queue the full files content itself? Given that the file have
>> a
>> of under 200k?
>>
>
> That sounds like it should work without any problems. There are no built-in
> limits on the sizes of individual messages (besides the 64-bit body size in
> the AMQP protocol), and the STOMP adapter should cope just fine.
>
> The only thing that might hold you up is the way the broker holds all
> queued messages in RAM in its current version. If you want to have more
> queued data than that, we recommend either getting more RAM :-) or helping
> out with alterations to make spooling-to-disk smooth and tasty.
>
> Let us know how your experiments go!
>
> Regards,
>  Tony
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20090113/2f4033bb/attachment.htm 

From 0x6e6562 at gmail.com  Wed Jan 14 05:56:13 2009
From: 0x6e6562 at gmail.com (Ben Hood)
Date: Wed, 14 Jan 2009 05:56:13 +0000
Subject: [rabbitmq-discuss] AMQP & Python Write-Up
In-Reply-To: <3b949f090901131806k2d16f98dwf61e652c7434c157@mail.gmail.com>
References: <3b949f090901131806k2d16f98dwf61e652c7434c157@mail.gmail.com>
Message-ID: <269388e30901132156u7b77eb87o55f82a218908609@mail.gmail.com>

Jason,

On Wed, Jan 14, 2009 at 2:06 AM, Jason J. W. Williams
<jasonjwwilliams at gmail.com> wrote:
> It's probably laced with errors, and I'd appreciate any
> feedback/corrections. Please feel free to pass it on if you think it's
> helpful.

This is a very well written article that touches on a number of topics
that people always ask about, so it's a valuable resource.

What I liked about it are details such as:

- The relative cost of different routing algorithms (i.e. topic
routing incurs is expensive because it scans linearly);
- The semantics of auto_delete and durable when creating queues - BTW
a side note: if you do create durable, non-auto-delete queues and your
consumers go away, messages will queue up - which could be good and
could be bad, depending on how you look at things;

Anyway, thanks for a great article,

Ben



From alexis.richardson at cohesiveft.com  Wed Jan 14 09:07:24 2009
From: alexis.richardson at cohesiveft.com (Alexis Richardson)
Date: Wed, 14 Jan 2009 09:07:24 +0000
Subject: [rabbitmq-discuss] AMQP & Python Write-Up
In-Reply-To: <269388e30901132156u7b77eb87o55f82a218908609@mail.gmail.com>
References: <3b949f090901131806k2d16f98dwf61e652c7434c157@mail.gmail.com>
	<269388e30901132156u7b77eb87o55f82a218908609@mail.gmail.com>
Message-ID: <167204d20901140107i1e9b84c8vdec7968dde824f14@mail.gmail.com>

Jason,

Great article.  Thanks very much for writing and publishing it.  I
want to second what Ben said and highlight a couple more things:

* Thanks for the section on how routing works.  This is very useful
information for the community.  For example you explain that a direct
exchange is sufficient for pubsub because a routing key ("audit" in
your example) can be used by more than one queue.  Sometimes people
have found it useful to draw an analogy between AMQP messaging
routing, and SMTP email routing.  Your "audit" pubsub example
demonstrates a distinction from how email is normally used, where
typically (not always..) an email will be routed to one inbox per
addressee.

* I was intrigued by your use of the word "route" to describe a
binding.  This concept is worth discussing.  For one thing, "route" is
suggestive of a more general model, in which routes can be composed
into longer routes from source to destination.  In other words: relays
and federation.  Any thoughts on this?

* You talk about persistence quite a bit, and say "enough moving parts
to make a mistake".  I think we all agree this could be made simpler
for users and developers.  Any suggestions?   They would be most
welcome :-)

Cheers

alexis




On Wed, Jan 14, 2009 at 5:56 AM, Ben Hood <0x6e6562 at gmail.com> wrote:
> Jason,
>
> On Wed, Jan 14, 2009 at 2:06 AM, Jason J. W. Williams
> <jasonjwwilliams at gmail.com> wrote:
>> It's probably laced with errors, and I'd appreciate any
>> feedback/corrections. Please feel free to pass it on if you think it's
>> helpful.
>
> This is a very well written article that touches on a number of topics
> that people always ask about, so it's a valuable resource.
>
> What I liked about it are details such as:
>
> - The relative cost of different routing algorithms (i.e. topic
> routing incurs is expensive because it scans linearly);
> - The semantics of auto_delete and durable when creating queues - BTW
> a side note: if you do create durable, non-auto-delete queues and your
> consumers go away, messages will queue up - which could be good and
> could be bad, depending on how you look at things;
>
> Anyway, thanks for a great article,
>
> Ben
>
> _______________________________________________
> rabbitmq-discuss mailing list
> rabbitmq-discuss at lists.rabbitmq.com
> http://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss
>



From gsim at redhat.com  Wed Jan 14 13:39:16 2009
From: gsim at redhat.com (Gordon Sim)
Date: Wed, 14 Jan 2009 13:39:16 +0000
Subject: [rabbitmq-discuss] AMQP & Python Write-Up
In-Reply-To: <3b949f090901131806k2d16f98dwf61e652c7434c157@mail.gmail.com>
References: <3b949f090901131806k2d16f98dwf61e652c7434c157@mail.gmail.com>
Message-ID: <496DEB04.4060707@redhat.com>

Jason J. W. Williams wrote:
> I've written up a quick start on the basics of AMQP and using it in
> Python, that is the kind of document I wished I'd been able to find in
> one place: http://blogs.digitar.com/jjww/2009/01/rabbits-and-warrens/
> 
> It's probably laced with errors, and I'd appreciate any
> feedback/corrections.

Nice article!

I am not that familiar with py-amqplib but the no_ack argument to 
basic_consume/basic_get is defined in the AMQP spec to mean that the 
server should not expect an ack and should discard the message on 
delivery. I.e. its an unreliable mode of delivery[1] rather than a 
signal to the client library to automatically acknowledge on receiving a 
message.

One simplification that I think is sometimes nice to mention is using 
the 'default exchange' to emulate publishing directly to a queue. E.g.

   chan.basic_publish(msg,routing_key="po_box")

It avoids the need to explicitly bind a queue in situations where 
fancier routing is not required.

[1] This makes sense for example if you have a private queue bound to an 
exchange as a 'subscription' to published events. If your client fails 
the queue will disappear, so acking is not adding anything.




From cctrieloff at redhat.com  Wed Jan 14 13:41:08 2009
From: cctrieloff at redhat.com (Carl Trieloff)
Date: Wed, 14 Jan 2009 08:41:08 -0500
Subject: [rabbitmq-discuss] AMQP & Python Write-Up
In-Reply-To: <3b949f090901131806k2d16f98dwf61e652c7434c157@mail.gmail.com>
References: <3b949f090901131806k2d16f98dwf61e652c7434c157@mail.gmail.com>
Message-ID: <496DEB74.7030103@redhat.com>


Jason,

Nice write up.

I see you have cut & pasted some material straight from the Red Hat MRG 
docs,
http://www.redhat.com/mrg/resources/
http://www.redhat.com/docs/en-US/Red_Hat_Enterprise_MRG/1.0/html/Messaging_Tutorial/sect-Messaging_Tutorial-Initial_Concepts-Topic_Exchange.html

Would be nice if you attributed it, the guy who wrote that was Jonathan 
Robie copied.

regards,
Carl.



Jason J. W. Williams wrote:
> Hi,
>
> I've written up a quick start on the basics of AMQP and using it in
> Python, that is the kind of document I wished I'd been able to find in
> one place: http://blogs.digitar.com/jjww/2009/01/rabbits-and-warrens/
>
> It's probably laced with errors, and I'd appreciate any
> feedback/corrections. Please feel free to pass it on if you think it's
> helpful.
>
> -J
>
> _______________________________________________
> rabbitmq-discuss mailing list
> rabbitmq-discuss at lists.rabbitmq.com
> http://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss
>   




From 0x6e6562 at gmail.com  Wed Jan 14 14:00:33 2009
From: 0x6e6562 at gmail.com (Ben Hood)
Date: Wed, 14 Jan 2009 14:00:33 +0000
Subject: [rabbitmq-discuss] AMQP & Python Write-Up
In-Reply-To: <496DEB74.7030103@redhat.com>
References: <3b949f090901131806k2d16f98dwf61e652c7434c157@mail.gmail.com>
	<496DEB74.7030103@redhat.com>
Message-ID: <269388e30901140600w65a45d73k91bae8c7a4fd36e6@mail.gmail.com>

Carl,

On Wed, Jan 14, 2009 at 1:41 PM, Carl Trieloff <cctrieloff at redhat.com> wrote:
> Would be nice if you attributed it, the guy who wrote that was Jonathan
> Robie copied.

I would say that the article explicitly acknowledges the upstream
source of the diagram:

"Our friends at RedHat have put together a great image to express how
topic exchanges work"

Unless Jason edited the article subsequent to your observation, of course.

Regards,

Ben



From alexis.richardson at cohesiveft.com  Wed Jan 14 15:10:45 2009
From: alexis.richardson at cohesiveft.com (Alexis Richardson)
Date: Wed, 14 Jan 2009 15:10:45 +0000
Subject: [rabbitmq-discuss] Integrating sipX with ejabberd using RabbitMQ
In-Reply-To: <496CC676.90109@gmail.com>
References: <496CC676.90109@gmail.com>
Message-ID: <167204d20901140710ndf31e73g2fe620c9adea407d@mail.gmail.com>

Joel,

On Tue, Jan 13, 2009 at 4:51 PM, Joel Reed <joelwreed at gmail.com> wrote:
> Thanks to the RabbitMQ team for a great open source messaging server!

Thanks!


> I recently completed an integration of ejabberd with sipX using
> RabbitMQ. It was easy to use and configure, and I really appreciate the
> great documentation available.

This is extremely cool.  You say, in your blog post, "I plan on using
it to facilitate a loosely coupled, event driven architecture for
integrating multiple open source applications".  Please tell us more,
that sounds exciting.  What sort of other applications do you plan to
integrate and for what sorts of use cases?


> I'm hoping that someday a message tracing option can be added for
> debugging purposes. That's the only thing I missed.

Do you mean 'end to end'?  Or something inside the RabbitMQ broker?


> I wrote about it on my blog in case you're interested in the details:
>
> http://ropeonfire.blogspot.com/2009/01/integrating-sipx-with-ejabberd.html

Great post - thanks for writing it up.

alexis



> jr
>
>
> _______________________________________________
> rabbitmq-discuss mailing list
> rabbitmq-discuss at lists.rabbitmq.com
> http://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss
>



From matthias at lshift.net  Wed Jan 14 15:17:55 2009
From: matthias at lshift.net (Matthias Radestock)
Date: Wed, 14 Jan 2009 15:17:55 +0000
Subject: [rabbitmq-discuss] Integrating sipX with ejabberd using RabbitMQ
In-Reply-To: <167204d20901140710ndf31e73g2fe620c9adea407d@mail.gmail.com>
References: <496CC676.90109@gmail.com>
	<167204d20901140710ndf31e73g2fe620c9adea407d@mail.gmail.com>
Message-ID: <496E0223.6070801@lshift.net>

Alexis Richardson wrote:
>> I'm hoping that someday a message tracing option can be added for
>> debugging purposes. That's the only thing I missed.
> 
> Do you mean 'end to end'?  Or something inside the RabbitMQ broker?

...or perhaps something like
   http://www.rabbitmq.com/examples.html#tracer
?

Matthias.



From hubert at lshift.net  Wed Jan 14 15:38:09 2009
From: hubert at lshift.net (Hubert Plociniczak)
Date: Wed, 14 Jan 2009 15:38:09 +0000
Subject: [rabbitmq-discuss] [PROBLEM] .NET Client fails
	with	OperationInterruptedException
In-Reply-To: <80d1dfde0901121005v5e73da76jcbe5913876c86228@mail.gmail.com>
References: <80d1dfde0901101741m677494f2j1ac54abf75e01863@mail.gmail.com>	<496A165F.4050702@lshift.net>	<80d1dfde0901112200oa3a469bhf01f3081e8dc490e@mail.gmail.com>	<496B10BC.8000701@lshift.net>
	<496B4375.5020605@lshift.net>
	<80d1dfde0901121005v5e73da76jcbe5913876c86228@mail.gmail.com>
Message-ID: <496E06E1.50706@lshift.net>

Hi,

we managed to reproduce the problem you are having. It seems to be 
time-sensitive and doesn't happen on every machine. I will look into it.

Thanks for reporting that,
hubert


Michael Barker wrote:
>>> Would it be possible for you to upgrade the server to 1.5.0? That way we
>>> can rule out any problems that have been fixed in that release.
>>>       
>
> I get the exact same behaviour with rabbitmq-server 1.5, so it
> probably a client issue.
>
>   
>> Also, are you perhaps running your experiments on a virtualised platform? If
>> so, could it be that the system time is fluctuating?
>>     
>
> No, I am running Ubuntu natively on my laptop.
>
> Mike.
>
> _______________________________________________
> rabbitmq-discuss mailing list
> rabbitmq-discuss at lists.rabbitmq.com
> http://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss
>   


-- 
  [][][] Hubert Plociniczak
    [][] LShift Ltd
  []  [] www.lshift.net




From dmitriy.samovskiy at cohesiveft.com  Wed Jan 14 15:55:17 2009
From: dmitriy.samovskiy at cohesiveft.com (Dmitriy Samovskiy)
Date: Wed, 14 Jan 2009 09:55:17 -0600
Subject: [rabbitmq-discuss] AMQP & Python Write-Up
In-Reply-To: <3b949f090901131806k2d16f98dwf61e652c7434c157@mail.gmail.com>
References: <3b949f090901131806k2d16f98dwf61e652c7434c157@mail.gmail.com>
Message-ID: <496E0AE5.6010902@cohesiveft.com>



Jason J. W. Williams wrote:
> Hi,
> 
> I've written up a quick start on the basics of AMQP and using it in
> Python, that is the kind of document I wished I'd been able to find in
> one place: http://blogs.digitar.com/jjww/2009/01/rabbits-and-warrens/

"py-amqplib - Non-threadsafe AMQP library"

Not sure this is true. Did you maybe mean it's an impl that unlike qpid client does not 
use threads?

I may be wrong - Barry certainly would know.

Also, for Ruby please feel free to add an excellent library from Aman Gupta:
http://github.com/tmm1/amqp

There is a lot of development activity on this one (including many forks on github) - 
while last time I checked qpid ruby lib, I didn't see many commits there (this might have 
changed since last time I checked).

Loved your post overall - thanks!

- Dmitriy



From joelwreed at gmail.com  Wed Jan 14 16:28:39 2009
From: joelwreed at gmail.com (Joel Reed)
Date: Wed, 14 Jan 2009 11:28:39 -0500
Subject: [rabbitmq-discuss] Integrating sipX with ejabberd using RabbitMQ
In-Reply-To: <496E0223.6070801@lshift.net>
References: <496CC676.90109@gmail.com>
	<167204d20901140710ndf31e73g2fe620c9adea407d@mail.gmail.com>
	<496E0223.6070801@lshift.net>
Message-ID: <496E12B7.6020306@gmail.com>

On 01/14/2009 10:17 AM, Matthias Radestock wrote:
> Alexis Richardson wrote:
>>> I'm hoping that someday a message tracing option can be added for
>>> debugging purposes. That's the only thing I missed.
>>
>> Do you mean 'end to end'?  Or something inside the RabbitMQ broker?
>
> ...or perhaps something like
>   http://www.rabbitmq.com/examples.html#tracer
I'll have to look into that. Thanks for the link.

What I was referring to was something like what OpenAMQ has:

   http://www.openamq.org/user:3-advanced#toc10

See the example debug log.

jr



From joelwreed at gmail.com  Wed Jan 14 16:41:02 2009
From: joelwreed at gmail.com (Joel Reed)
Date: Wed, 14 Jan 2009 11:41:02 -0500
Subject: [rabbitmq-discuss] Integrating sipX with ejabberd using RabbitMQ
In-Reply-To: <167204d20901140710ndf31e73g2fe620c9adea407d@mail.gmail.com>
References: <496CC676.90109@gmail.com>
	<167204d20901140710ndf31e73g2fe620c9adea407d@mail.gmail.com>
Message-ID: <496E159E.2030506@gmail.com>

On 01/14/2009 10:10 AM, Alexis Richardson wrote:
>
>> I recently completed an integration of ejabberd with sipX using
>> RabbitMQ. It was easy to use and configure, and I really appreciate the
>> great documentation available.
>>      
>
> This is extremely cool.  You say, in your blog post, "I plan on using
> it to facilitate a loosely coupled, event driven architecture for
> integrating multiple open source applications".  Please tell us more,
> that sounds exciting.  What sort of other applications do you plan to
> integrate and for what sorts of use cases?
>    
We are integrating Zimbra, Alfresco, ejabberd, sipX, and a yet to be 
determined CRM solution. One similar upcoming task is XMPP presence 
notifications based on Zimbra calendar events. Another class of 
integrations would be replicating CRUD actions on things like shared 
contacts across Zimbra and the CRM for example.

I think there are a lot of advantages to using asynchronous messaging 
architectures for this type of integration. You probably have already 
seen: http://www.enterpriseintegrationpatterns.com/

I'm glad my post was useful.

jr
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20090114/49e1e118/attachment.htm 

From joelwreed at gmail.com  Wed Jan 14 16:42:59 2009
From: joelwreed at gmail.com (Joel Reed)
Date: Wed, 14 Jan 2009 11:42:59 -0500
Subject: [rabbitmq-discuss] Integrating sipX with ejabberd using RabbitMQ
In-Reply-To: <167204d20901140710ndf31e73g2fe620c9adea407d@mail.gmail.com>
References: <496CC676.90109@gmail.com>
	<167204d20901140710ndf31e73g2fe620c9adea407d@mail.gmail.com>
Message-ID: <496E1613.8080901@gmail.com>

On 01/14/2009 10:10 AM, Alexis Richardson wrote:
>
>> I recently completed an integration of ejabberd with sipX using
>> RabbitMQ. It was easy to use and configure, and I really appreciate the
>> great documentation available.
>>      
>
> This is extremely cool.
>    
I should also note that this sipx/rabbitmq/ejabberd integration is 
lightning fast compared to how fast the presence notifications are made 
on a typical Asterisk/AMI based integration.

jr
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20090114/c273d3d9/attachment.htm 

From alexis.richardson at cohesiveft.com  Wed Jan 14 17:15:50 2009
From: alexis.richardson at cohesiveft.com (Alexis Richardson)
Date: Wed, 14 Jan 2009 17:15:50 +0000
Subject: [rabbitmq-discuss] Integrating sipX with ejabberd using RabbitMQ
In-Reply-To: <496E159E.2030506@gmail.com>
References: <496CC676.90109@gmail.com>
	<167204d20901140710ndf31e73g2fe620c9adea407d@mail.gmail.com>
	<496E159E.2030506@gmail.com>
Message-ID: <167204d20901140915r2a18267dk515ac0ddc9b99c54@mail.gmail.com>

Joel,

On Wed, Jan 14, 2009 at 4:41 PM, Joel Reed <joelwreed at gmail.com> wrote:
> On 01/14/2009 10:10 AM, Alexis Richardson wrote:
> What sort of other applications do you plan to
> integrate and for what sorts of use cases?
>
>
> We are integrating Zimbra, Alfresco, ejabberd, sipX, and a yet to be
> determined CRM solution. One similar upcoming task is XMPP presence
> notifications based on Zimbra calendar events. Another class of integrations
> would be replicating CRUD actions on things like shared contacts across
> Zimbra and the CRM for example.

This is a very interesting family of cases.  Do you plan to open
source code, or at least share designs for others to follow?


> I think there are a lot of advantages to using asynchronous messaging
> architectures for this type of integration. You probably have already seen:
> http://www.enterpriseintegrationpatterns.com/

Yup.  It's a classic!

alexis



From bhyde at pobox.com  Wed Jan 14 17:57:59 2009
From: bhyde at pobox.com (Ben Hyde)
Date: Wed, 14 Jan 2009 12:57:59 -0500
Subject: [rabbitmq-discuss] [TYPO] admin-guide
Message-ID: <7FC23C5A-71C6-4133-B985-7D91B67D9909@pobox.com>

opps:  rabbitmqctl list_user_vhost username
better: rabbitmqctl list_user_vhosts username
     here: http://www.rabbitmq.com/admin-guide.html#user-management



From joelwreed at gmail.com  Wed Jan 14 18:06:01 2009
From: joelwreed at gmail.com (Joel Reed)
Date: Wed, 14 Jan 2009 13:06:01 -0500
Subject: [rabbitmq-discuss] Integrating sipX with ejabberd using RabbitMQ
In-Reply-To: <167204d20901140915r2a18267dk515ac0ddc9b99c54@mail.gmail.com>
References: <496CC676.90109@gmail.com>	
	<167204d20901140710ndf31e73g2fe620c9adea407d@mail.gmail.com>	
	<496E159E.2030506@gmail.com>
	<167204d20901140915r2a18267dk515ac0ddc9b99c54@mail.gmail.com>
Message-ID: <496E2989.4030406@gmail.com>

On 01/14/2009 12:15 PM, Alexis Richardson wrote:
> What sort of other applications do you plan to
>> integrate and for what sorts of use cases?
>>
>>
>> We are integrating Zimbra, Alfresco, ejabberd, sipX, and a yet to be
>> determined CRM solution. One similar upcoming task is XMPP presence
>> notifications based on Zimbra calendar events. Another class of integrations
>> would be replicating CRUD actions on things like shared contacts across
>> Zimbra and the CRM for example.
>>      
>
> This is a very interesting family of cases.  Do you plan to open
> source code, or at least share designs for others to follow?
>    
I sure hope to be able to open source most of it. At the very least I 
plan to keep blogging about the designs and posting code snippets.

jr
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20090114/9e4bc1dc/attachment.htm 

From matthias at lshift.net  Wed Jan 14 18:18:48 2009
From: matthias at lshift.net (Matthias Radestock)
Date: Wed, 14 Jan 2009 18:18:48 +0000
Subject: [rabbitmq-discuss] [TYPO] admin-guide
In-Reply-To: <7FC23C5A-71C6-4133-B985-7D91B67D9909@pobox.com>
References: <7FC23C5A-71C6-4133-B985-7D91B67D9909@pobox.com>
Message-ID: <496E2C88.5040404@lshift.net>

Ben,

Ben Hyde wrote:
> opps:  rabbitmqctl list_user_vhost username
> better: rabbitmqctl list_user_vhosts username
>      here: http://www.rabbitmq.com/admin-guide.html#user-management

Well spotted! Fixed.


Matthias.



From jasonjwwilliams at gmail.com  Wed Jan 14 19:13:48 2009
From: jasonjwwilliams at gmail.com (Jason J. W. Williams)
Date: Wed, 14 Jan 2009 12:13:48 -0700
Subject: [rabbitmq-discuss] AMQP & Python Write-Up
In-Reply-To: <496DEFBA.3030206@redhat.com>
References: <3b949f090901131806k2d16f98dwf61e652c7434c157@mail.gmail.com>
	<496DEB74.7030103@redhat.com> <496DEFBA.3030206@redhat.com>
Message-ID: <3b949f090901141113s76bae24bw3a951718d3267a27@mail.gmail.com>

Hi Guys,

I actually didn't read that tutorial at all. The image I got from
doing a Google Image search for AMQP-related diagrams, which linked me
directly to the page its found on. I am more than happy to add more
attribution of the image (i.e. an explicit link and note) than the one
that it comes from RedHat. I do apologize for not more explicitly
attributing the image originally.

-J

On Wed, Jan 14, 2009 at 6:59 AM, Jonathan Robie
<jonathan.robie at redhat.com> wrote:
> Carl Trieloff wrote:
>>
>> Jason,
>>
>> Nice write up.
>
> I agree.
>
>> I see you have cut & pasted some material straight from the Red Hat MRG
>> docs,
>> http://www.redhat.com/mrg/resources/
>>
>> http://www.redhat.com/docs/en-US/Red_Hat_Enterprise_MRG/1.0/html/Messaging_Tutorial/sect-Messaging_Tutorial-Initial_Concepts-Topic_Exchange.html
>>
>> Would be nice if you attributed it, the guy who wrote that was Jonathan
>> Robie copied.
>
> Yes, it looks like whole blocks of text and a diagram are taken straight
> from the tutorial, without modification. So yes, I'd appreciate attribution,
> here are the title and the URL to use:
>
> AMQP Programming Tutorial for C++, Java, and Python
> http://www.redhat.com/docs/en-US/Red_Hat_Enterprise_MRG/1.0/html/Messaging_Tutorial/
>
> Jonathan
>



From darien at kindlund.com  Wed Jan 14 19:15:42 2009
From: darien at kindlund.com (Darien Kindlund)
Date: Wed, 14 Jan 2009 14:15:42 -0500
Subject: [rabbitmq-discuss] Net::AMQP Perl Client - Status?
In-Reply-To: <496A74EF.6080805@lshift.net>
References: <50c8ffe90901091438n4dc5a278nb515d63cc209d65e@mail.gmail.com>
	<269388e30901110205p4183ffb6s64a506b769d05827@mail.gmail.com>
	<167204d20901110210u67fe4d91la7f41b79339f7094@mail.gmail.com>
	<4969C824.4080105@lshift.net>
	<50c8ffe90901111020i351eac88pcc0b5a6ee2868fc8@mail.gmail.com>
	<496A3D73.8060108@lshift.net>
	<50c8ffe90901111053u50e8c32l7839ed3be310641f@mail.gmail.com>
	<496A74EF.6080805@lshift.net>
Message-ID: <50c8ffe90901141115r2e19070cjc8a9724f6c9e47b5@mail.gmail.com>

Hi Tony,

Thanks again for your help; I think I understand more of the nuances
between STOMP-RabbitMQ now.  As a sanity check, could you confirm the
following findings:

1) Since RabbitMQ implements only v0.8 (0-8) of the AMQP spec, it does
not support the 'headers' exchange type (as defined in 0-10 spec).
Correct?
If this is correct, can anyone indicate when the 'headers' exchange
type will be (expected to be) introduced into a version of RabbitMQ?
(v1.6?)

2) Both (0-8) and (0-10) AMQP specifications talk about "message
priority" (i.e., message.delivery-priority).  Can you give me an
example of how you construct different priority messages via
Net::STOMP?  Do you just specify the "priority" header with an integer
value of 0,1,2,3,4,5,6,7,8, or 9?  Or, are message priorities not even
implemented in RabbitMQ v1.5?

Thanks again,
-- Darien

On Sun, Jan 11, 2009 at 5:38 PM, Tony Garnock-Jones <tonyg at lshift.net> wrote:
> Hi Darien,
>
> Exchanges have to be declared out-of-band ahead of time (though a clean
> approach to doing the declarations via STOMP would be a great contribution),
> but Queues are declared at the point of subscription.
>
>  1. A queue.declare is done as part of SUBSCRIBE. The boolean STOMP
>    headers "passive", "durable", "exclusive" and "auto-delete" are used
>    as part of the declaration. (They all default "false" except
>    "auto-delete", which defaults "true".)
>
>  2. If the "exchange" STOMP header is present, a queue.bind is done
>    (using also STOMP header "routing_key").
>
>  3. Finally, a basic.consume is done.
>
> So, to address your second question: it has actually declared and started
> consuming from the queue! So the waiting is expected behaviour.
>
> Regards,
>  Tony
>
> Darien Kindlund wrote:
>>
>> Hi Tony,
>>
>> Great!  That answers most of my questions.... Lastly, I assume you
>> still have to pre-declare all your exchanges and queues *outside* of
>> Net::Stomp (through some other AMQP interface) -- correct?  I got the
>> impression that if any of the exchanges or queues were torn down
>> between successive executions of a Net::Stomp client, that any
>> messages sent would be silently dropped.
>>
>> That leads me to another question -- apparently, when subscribing to a
>> non-existent queue, the Net::Stomp client does not kick back any type
>> of exception.  Instead, it appears to blindly sit and wait forever,
>> with no notification that the bind was unsuccessful.  I assume this is
>> a known limitation, right?
>>
>> Regards,
>> -- Darien
>>
>> On Sun, Jan 11, 2009 at 1:41 PM, Tony Garnock-Jones <tonyg at lshift.net>
>> wrote:
>>>
>>> Hi Darien,
>>>
>>> (CCs trimmed)
>>>
>>> Darien Kindlund wrote:
>>>>
>>>> Additionally, I was curious if the STOMP adapter provides a way for a
>>>> Net::Stomp perl client to connect to a different vhost (other than
>>>> '/').
>>>
>>> Yes: supply a custom header, "virtual-host", to the CONNECT command. I'm
>>> not
>>> 100% certain, but I suspect you can do this by
>>>
>>>  $stomp->connect({login=>'guest', passcode=>'guest',
>>>                  "virtual-host"=>'/my-virtual-host'})
>>>
>>> There are a couple of other extension headers available; I'm afraid I
>>> haven't gotten around to the dreaded documentation yet, so reading
>>> rabbit_stomp.erl is the only way to discover them. A quick grep provides:
>>>
>>>  CONNECT virtual-host
>>>  CONNECT realm
>>>  SEND exchange
>>>  SUBSCRIBE exchange
>>>  SUBSCRIBE routing_key
>>>  various message properties in SEND
>>>  queue and binding attributes in various methods
>>>   (X-, X-Q-, X-B- prefixes)
>>>
>>> Regards,
>>>  Tony
>>>
>



From jasonjwwilliams at gmail.com  Wed Jan 14 19:18:35 2009
From: jasonjwwilliams at gmail.com (Jason J. W. Williams)
Date: Wed, 14 Jan 2009 12:18:35 -0700
Subject: [rabbitmq-discuss] AMQP & Python Write-Up
In-Reply-To: <496E0AE5.6010902@cohesiveft.com>
References: <3b949f090901131806k2d16f98dwf61e652c7434c157@mail.gmail.com>
	<496E0AE5.6010902@cohesiveft.com>
Message-ID: <3b949f090901141118h7a2cd057u5705bad930ed4924@mail.gmail.com>

Hi Dmitriy,

I called py-amqplib non-threadsafe because the docs say not to share
channels between threads. So I suppose it would be more accurate to
say, the library is threadsafe if you do not share channel objects
between threads.

-J

On Wed, Jan 14, 2009 at 8:55 AM, Dmitriy Samovskiy
<dmitriy.samovskiy at cohesiveft.com> wrote:
>
>
> Jason J. W. Williams wrote:
>>
>> Hi,
>>
>> I've written up a quick start on the basics of AMQP and using it in
>> Python, that is the kind of document I wished I'd been able to find in
>> one place: http://blogs.digitar.com/jjww/2009/01/rabbits-and-warrens/
>
> "py-amqplib - Non-threadsafe AMQP library"
>
> Not sure this is true. Did you maybe mean it's an impl that unlike qpid
> client does not use threads?
>
> I may be wrong - Barry certainly would know.
>
> Also, for Ruby please feel free to add an excellent library from Aman Gupta:
> http://github.com/tmm1/amqp
>
> There is a lot of development activity on this one (including many forks on
> github) - while last time I checked qpid ruby lib, I didn't see many commits
> there (this might have changed since last time I checked).
>
> Loved your post overall - thanks!
>
> - Dmitriy
>



From 0x6e6562 at gmail.com  Wed Jan 14 19:23:08 2009
From: 0x6e6562 at gmail.com (Ben Hood)
Date: Wed, 14 Jan 2009 19:23:08 +0000
Subject: [rabbitmq-discuss] Net::AMQP Perl Client - Status?
In-Reply-To: <50c8ffe90901141115r2e19070cjc8a9724f6c9e47b5@mail.gmail.com>
References: <50c8ffe90901091438n4dc5a278nb515d63cc209d65e@mail.gmail.com>
	<269388e30901110205p4183ffb6s64a506b769d05827@mail.gmail.com>
	<167204d20901110210u67fe4d91la7f41b79339f7094@mail.gmail.com>
	<4969C824.4080105@lshift.net>
	<50c8ffe90901111020i351eac88pcc0b5a6ee2868fc8@mail.gmail.com>
	<496A3D73.8060108@lshift.net>
	<50c8ffe90901111053u50e8c32l7839ed3be310641f@mail.gmail.com>
	<496A74EF.6080805@lshift.net>
	<50c8ffe90901141115r2e19070cjc8a9724f6c9e47b5@mail.gmail.com>
Message-ID: <269388e30901141123g2a244828laa55875d6f8f4c80@mail.gmail.com>

Daniel,

On Wed, Jan 14, 2009 at 7:15 PM, Darien Kindlund <darien at kindlund.com> wrote:
> 1) Since RabbitMQ implements only v0.8 (0-8) of the AMQP spec, it does
> not support the 'headers' exchange type (as defined in 0-10 spec).
> Correct?

It does not support the headers exchange as defined in 0.9.1 either
(0.9.1 is the next version of the protocol that we will support).

> If this is correct, can anyone indicate when the 'headers' exchange
> type will be (expected to be) introduced into a version of RabbitMQ?
> (v1.6?)

Unlikely for 1.6. This is because you are the first person in a very
long time that has asked for this exchange type. We will get around to
it, but there is no ETA. In general, we try to prioritize stuff that
gets asked for a lot, and then of course, when change the schedule to
include stuff for very persuasive people :-)

> 2) Both (0-8) and (0-10) AMQP specifications talk about "message
> priority" (i.e., message.delivery-priority).  Can you give me an
> example of how you construct different priority messages via
> Net::STOMP?  Do you just specify the "priority" header with an integer
> value of 0,1,2,3,4,5,6,7,8, or 9?  Or, are message priorities not even
> implemented in RabbitMQ v1.5?

No they are not - but there is a chance they may appear in the not too
distant future. Again, for the same reason - you're the first to ask
about this - but we actually have draw up some specs for this. As
always, no ETA.

HTH,

Ben



From cctrieloff at redhat.com  Wed Jan 14 19:20:27 2009
From: cctrieloff at redhat.com (Carl Trieloff)
Date: Wed, 14 Jan 2009 14:20:27 -0500
Subject: [rabbitmq-discuss] AMQP & Python Write-Up
In-Reply-To: <3b949f090901141113s76bae24bw3a951718d3267a27@mail.gmail.com>
References: <3b949f090901131806k2d16f98dwf61e652c7434c157@mail.gmail.com>	
	<496DEB74.7030103@redhat.com> <496DEFBA.3030206@redhat.com>
	<3b949f090901141113s76bae24bw3a951718d3267a27@mail.gmail.com>
Message-ID: <496E3AFB.9070605@redhat.com>

Jason J. W. Williams wrote:
> Hi Guys,
>
> I actually didn't read that tutorial at all. The image I got from
> doing a Google Image search for AMQP-related diagrams, which linked me
> directly to the page its found on. 

have a link for that, would be interested to see where else it has made 
it's way too :-)

regards
Carl.



From dmitriy.samovskiy at cohesiveft.com  Wed Jan 14 19:24:08 2009
From: dmitriy.samovskiy at cohesiveft.com (Dmitriy Samovskiy)
Date: Wed, 14 Jan 2009 13:24:08 -0600
Subject: [rabbitmq-discuss] AMQP & Python Write-Up
In-Reply-To: <3b949f090901141118h7a2cd057u5705bad930ed4924@mail.gmail.com>
References: <3b949f090901131806k2d16f98dwf61e652c7434c157@mail.gmail.com>	
	<496E0AE5.6010902@cohesiveft.com>
	<3b949f090901141118h7a2cd057u5705bad930ed4924@mail.gmail.com>
Message-ID: <496E3BD8.7010408@cohesiveft.com>

Hi Jason,

Jason J. W. Williams wrote:
> 
> I called py-amqplib non-threadsafe because the docs say not to share
> channels between threads. So I suppose it would be more accurate to
> say, the library is threadsafe if you do not share channel objects
> between threads.
Understood. You may want to check out this post on Ben's blog on the subject:
http://hopper.squarespace.com/blog/2008/10/6/multithreading-amqp-clients.html

In other words, advice not to share channels between threads applies to any AMQP client 
implementation, at least this is how I interpret it.

- Dmitriy



From jasonjwwilliams at gmail.com  Wed Jan 14 19:28:38 2009
From: jasonjwwilliams at gmail.com (Jason J. W. Williams)
Date: Wed, 14 Jan 2009 12:28:38 -0700
Subject: [rabbitmq-discuss] AMQP & Python Write-Up
In-Reply-To: <496E3AFB.9070605@redhat.com>
References: <3b949f090901131806k2d16f98dwf61e652c7434c157@mail.gmail.com>
	<496DEB74.7030103@redhat.com> <496DEFBA.3030206@redhat.com>
	<3b949f090901141113s76bae24bw3a951718d3267a27@mail.gmail.com>
	<496E3AFB.9070605@redhat.com>
Message-ID: <3b949f090901141128l4d17cb71pe4a2c833df46ea83@mail.gmail.com>

Hi Carl,

My history shows it was the top link on this search:
http://www.google.com/search?client=safari&rls=en-us&q=topic+exchange&ie=UTF-8&oe=UTF-8

-J

On Wed, Jan 14, 2009 at 12:20 PM, Carl Trieloff <cctrieloff at redhat.com> wrote:
> Jason J. W. Williams wrote:
>>
>> Hi Guys,
>>
>> I actually didn't read that tutorial at all. The image I got from
>> doing a Google Image search for AMQP-related diagrams, which linked me
>> directly to the page its found on.
>
> have a link for that, would be interested to see where else it has made it's
> way too :-)
>
> regards
> Carl.
>



From 0x6e6562 at gmail.com  Wed Jan 14 19:29:37 2009
From: 0x6e6562 at gmail.com (Ben Hood)
Date: Wed, 14 Jan 2009 19:29:37 +0000
Subject: [rabbitmq-discuss] AMQP & Python Write-Up
In-Reply-To: <3b949f090901141118h7a2cd057u5705bad930ed4924@mail.gmail.com>
References: <3b949f090901131806k2d16f98dwf61e652c7434c157@mail.gmail.com>
	<496E0AE5.6010902@cohesiveft.com>
	<3b949f090901141118h7a2cd057u5705bad930ed4924@mail.gmail.com>
Message-ID: <269388e30901141129o164c6fbdld9371498ac100977@mail.gmail.com>

Jason,

On Wed, Jan 14, 2009 at 7:18 PM, Jason J. W. Williams
<jasonjwwilliams at gmail.com> wrote:
> I called py-amqplib non-threadsafe because the docs say not to share
> channels between threads. So I suppose it would be more accurate to
> say, the library is threadsafe if you do not share channel objects
> between threads.

IIRC Barry's first incarnation was threadless and hence threadsafe.

Subsequently the library is undergoing a facelift:
http://hg.barryp.org/py-amqplib-devel

If you to read some non-normative background on threads and channels:
http://hopper.squarespace.com/blog/2008/10/6/multithreading-amqp-clients.html

HTH,

Ben



From darien at kindlund.com  Wed Jan 14 19:47:23 2009
From: darien at kindlund.com (Darien Kindlund)
Date: Wed, 14 Jan 2009 14:47:23 -0500
Subject: [rabbitmq-discuss] Message Priority & 'Headers' Exchange Type
	(was: Net::AMQP Perl Client - Status?)
Message-ID: <50c8ffe90901141147s50179d0ic09b8bec8d3e147b@mail.gmail.com>

Hi Ben & Tony,

Understood.  I would say message prioritization would be exceedingly
useful from an operational perspective.   This is something normally
that each AMQP-aware application we implement would benefit from.
Otherwise, we'd have to create different queues per priority and have
the app monitor each queue in priority-based order.  Not impossible to
implement, but not ideal.

Taking that type of implementation to the next logical step:
1) Is there any way to perform "non-blocking" SUBSCRIBEs via
Net::Stomp to RabbitMQ, in order to have a perl consumer application
monitor multiple queues in series?  Or, is the recommendation to use
something like ithreads to create a separate thread per subscription
and multiplex the messages manually within the application?  (See what
I mean, by increased complexity costs on the app?)

The 'headers' exchange type comes in handy as a customizable
specification.  Yes, we can 'transcode' requirements like (Foo: A,
Bar: B) into queues with routing keys of (foo.*.bar.*), but that gets
awkward for really long lists of headers.  With the
'message.destination' size of 'str8', that's 255 UTF-8 chars, so it
doesn't scale nicely.  Though, it's not a show stopper for initial
use.

Regards,
-- Darien

On Wed, Jan 14, 2009 at 2:23 PM, Ben Hood <0x6e6562 at gmail.com> wrote:
> Daniel,
>
> On Wed, Jan 14, 2009 at 7:15 PM, Darien Kindlund <darien at kindlund.com> wrote:
>> 1) Since RabbitMQ implements only v0.8 (0-8) of the AMQP spec, it does
>> not support the 'headers' exchange type (as defined in 0-10 spec).
>> Correct?
>
> It does not support the headers exchange as defined in 0.9.1 either
> (0.9.1 is the next version of the protocol that we will support).
>
>> If this is correct, can anyone indicate when the 'headers' exchange
>> type will be (expected to be) introduced into a version of RabbitMQ?
>> (v1.6?)
>
> Unlikely for 1.6. This is because you are the first person in a very
> long time that has asked for this exchange type. We will get around to
> it, but there is no ETA. In general, we try to prioritize stuff that
> gets asked for a lot, and then of course, when change the schedule to
> include stuff for very persuasive people :-)
>
>> 2) Both (0-8) and (0-10) AMQP specifications talk about "message
>> priority" (i.e., message.delivery-priority).  Can you give me an
>> example of how you construct different priority messages via
>> Net::STOMP?  Do you just specify the "priority" header with an integer
>> value of 0,1,2,3,4,5,6,7,8, or 9?  Or, are message priorities not even
>> implemented in RabbitMQ v1.5?
>
> No they are not - but there is a chance they may appear in the not too
> distant future. Again, for the same reason - you're the first to ask
> about this - but we actually have draw up some specs for this. As
> always, no ETA.
>
> HTH,
>
> Ben
>



From jasonjwwilliams at gmail.com  Wed Jan 14 19:47:50 2009
From: jasonjwwilliams at gmail.com (Jason J. W. Williams)
Date: Wed, 14 Jan 2009 12:47:50 -0700
Subject: [rabbitmq-discuss] AMQP & Python Write-Up
In-Reply-To: <3b949f090901141128l4d17cb71pe4a2c833df46ea83@mail.gmail.com>
References: <3b949f090901131806k2d16f98dwf61e652c7434c157@mail.gmail.com>
	<496DEB74.7030103@redhat.com> <496DEFBA.3030206@redhat.com>
	<3b949f090901141113s76bae24bw3a951718d3267a27@mail.gmail.com>
	<496E3AFB.9070605@redhat.com>
	<3b949f090901141128l4d17cb71pe4a2c833df46ea83@mail.gmail.com>
Message-ID: <3b949f090901141147l46fc3b59q13911c7a1626ced5@mail.gmail.com>

Hi Jonathan & Carl,

Explicit image attribution added and comment approved. Also, at the
bottom are links to the three documents that my knowledge in the
article was distilled from.

-J

On Wed, Jan 14, 2009 at 12:28 PM, Jason J. W. Williams
<jasonjwwilliams at gmail.com> wrote:
> Hi Carl,
>
> My history shows it was the top link on this search:
> http://www.google.com/search?client=safari&rls=en-us&q=topic+exchange&ie=UTF-8&oe=UTF-8
>
> -J
>
> On Wed, Jan 14, 2009 at 12:20 PM, Carl Trieloff <cctrieloff at redhat.com> wrote:
>> Jason J. W. Williams wrote:
>>>
>>> Hi Guys,
>>>
>>> I actually didn't read that tutorial at all. The image I got from
>>> doing a Google Image search for AMQP-related diagrams, which linked me
>>> directly to the page its found on.
>>
>> have a link for that, would be interested to see where else it has made it's
>> way too :-)
>>
>> regards
>> Carl.
>>
>



From 0x6e6562 at gmail.com  Wed Jan 14 19:59:40 2009
From: 0x6e6562 at gmail.com (Ben Hood)
Date: Wed, 14 Jan 2009 19:59:40 +0000
Subject: [rabbitmq-discuss] Message Priority & 'Headers' Exchange Type
	(was: Net::AMQP Perl Client - Status?)
In-Reply-To: <50c8ffe90901141147s50179d0ic09b8bec8d3e147b@mail.gmail.com>
References: <50c8ffe90901141147s50179d0ic09b8bec8d3e147b@mail.gmail.com>
Message-ID: <269388e30901141159q6a2e694cl38eed53126d93fdf@mail.gmail.com>

Darien,

On Wed, Jan 14, 2009 at 7:47 PM, Darien Kindlund <darien at kindlund.com> wrote:
> Understood.  I would say message prioritization would be exceedingly
> useful from an operational perspective.   This is something normally
> that each AMQP-aware application we implement would benefit from.
> Otherwise, we'd have to create different queues per priority and have
> the app monitor each queue in priority-based order.  Not impossible to
> implement, but not ideal.

Noted. As I said before, we are slowly getting around to doing this -
it's on the mid-term radar and we already have a design for it. It's
just that some other major queue related work is being asked for a lot
more loudly that priorities.

> Taking that type of implementation to the next logical step:
> 1) Is there any way to perform "non-blocking" SUBSCRIBEs via
> Net::Stomp to RabbitMQ, in order to have a perl consumer application
> monitor multiple queues in series?  Or, is the recommendation to use
> something like ithreads to create a separate thread per subscription
> and multiplex the messages manually within the application?  (See what
> I mean, by increased complexity costs on the app?)

I'll let Tony comment on the semantics of STOMP.

> The 'headers' exchange type comes in handy as a customizable
> specification.  Yes, we can 'transcode' requirements like (Foo: A,
> Bar: B) into queues with routing keys of (foo.*.bar.*), but that gets
> awkward for really long lists of headers.  With the
> 'message.destination' size of 'str8', that's 255 UTF-8 chars, so it
> doesn't scale nicely.  Though, it's not a show stopper for initial
> use.

Yep, sure is. And will get done some time :-)

Ben



From darien at kindlund.com  Wed Jan 14 20:28:39 2009
From: darien at kindlund.com (Darien Kindlund)
Date: Wed, 14 Jan 2009 15:28:39 -0500
Subject: [rabbitmq-discuss] Explicit ACKs - Timeout Algorithm? (related:
	Net::Stomp)
Message-ID: <50c8ffe90901141228j6ae2e55et8b828af520eaff1d@mail.gmail.com>

One of the other questions I had centers around RabbitMQ's method (or
maybe the rabbitmq-stomp connector) of dealing with explicit ACKs.

Using Tony's example perl code (rabbitmq_stomp_recv.pl) as a basis:
1 #!/usr/bin/perl -w
2 # subscribe to messages from the queue 'foo'
3 use Net::Stomp;
4 my $stomp = Net::Stomp->new({hostname=>'localhost', port=>'61613'});
5 $stomp->connect({login=>'guest', passcode=>'guest'});
6 $stomp->subscribe({'destination'=>'foo', 'ack'=>'client'});
7 while (1) {
8     my $frame = $stomp->receive_frame;
9     print $frame->body . "\n";
10     $stomp->ack({frame=>$frame});
11     last if $frame->body eq 'QUIT';
12 }
13 $stomp->disconnect;

Specifically, assume you have two perl clients both running this code
and are both acting as consumers to a shared queue.  If one instance
of this code crashes (for whatever reason) after line 8 but before
line 10, then RabbitMQ will do the right thing and redeliver the
(previously acquired?) message to the other instance of the perl code
that is still running.

Now, what if both perl-based consumers were slightly different.
Meaning, one consumer behaves normally (equivalent to
rabbitmq_stomp_recv.pl), but the other consumer is poorly written, and
every once in awhile enters some sort of infinite loop after line 8
but before line 10.  Essentially, this consumer has acquired (?) the
message but not explicitly acknowledged the message.  In this case,
I'm thinking the "right thing" would be for RabbitMQ to create some
sort of timeout, where after X minutes(?), if the message doesn't get
acknowledged, then RabbitMQ will alter the message to be "not
acquired" so that some other (better behaving) consumer can process
this message.

1) So far, it seems that RabbitMQ will only alter messages that have
been previously been "acquired" back to "not acquired" ONLY when the
original consumer's *channel* has been terminated (for some reason;
i.e., network error).  I have not been able to get RabbitMQ to perform
this same type of "recovery" for any consumers that mimic the behavior
of poorly written applications (i.e., the channel stays alive, but a
fault in the underlying application logic of one consumer prevents
proper message delivery to properly functioning consumers).

2) Is there any reference in the AMQP specification for dealing with
these situations?  If RabbitMQ does implement some sort of timeout (as
previously stated), what is the default time delay?

3) Is it possible that in order to achieve this type of behavior, you
have to use transactions (tx) or distributed transactions (dtx) in
RabbitMQ?

Thanks for your help,
-- Darien



From bp at barryp.org  Wed Jan 14 21:16:04 2009
From: bp at barryp.org (Barry Pederson)
Date: Wed, 14 Jan 2009 15:16:04 -0600
Subject: [rabbitmq-discuss] AMQP & Python Write-Up
In-Reply-To: <269388e30901141129o164c6fbdld9371498ac100977@mail.gmail.com>
References: <3b949f090901131806k2d16f98dwf61e652c7434c157@mail.gmail.com>	<496E0AE5.6010902@cohesiveft.com>	<3b949f090901141118h7a2cd057u5705bad930ed4924@mail.gmail.com>
	<269388e30901141129o164c6fbdld9371498ac100977@mail.gmail.com>
Message-ID: <496E5614.3020403@barryp.org>

Ben Hood wrote:
 > Jason,
 >
 > On Wed, Jan 14, 2009 at 7:18 PM, Jason J. W. Williams
 > <jasonjwwilliams at gmail.com> wrote:
 >> I called py-amqplib non-threadsafe because the docs say not to share
 >> channels between threads. So I suppose it would be more accurate to
 >> say, the library is threadsafe if you do not share channel objects
 >> between threads.
 >
 > IIRC Barry's first incarnation was threadless and hence threadsafe.
 >
 > Subsequently the library is undergoing a facelift:
 > http://hg.barryp.org/py-amqplib-devel

All the above is true.  My take would be:  py-amqplib is safe to use in 
a threaded program, as long connections (and by extension their 
channels) aren't shared between threads.

py-amqplib does not rely on threading, although the development version 
in the URL above has an optional mode that does use a thread to allow 
some additional capabilities.

I believe that running in the new optional thread-using mode, it could 
still be used in a threaded program subject to the same restrictions as 
the non-thread-using mode.

	Barry




From jasonjwwilliams at gmail.com  Wed Jan 14 22:17:21 2009
From: jasonjwwilliams at gmail.com (Jason J. W. Williams)
Date: Wed, 14 Jan 2009 15:17:21 -0700
Subject: [rabbitmq-discuss] Miscellaneous Question
Message-ID: <3b949f090901141417q5d79429ewe9732a10a68d38@mail.gmail.com>

Hello,

A few miscellaneous questions came to me last night, so I thought I'd
bundle them into one e-mail. Any insight is greatly appreciated.

* How does one monitor memory consumption by a queue?

* If messages persist to disk do they relieve memory pressure on the queue?

* How resilient is the Mnesia DB to sudden death of the process using it?

The last question has to do with me trying to start Rabbit again
yesterday and it hanging on start and then issuing an error about
reading the databases. Clearing the Mnesia files in /var/lib/rabbitmq
allowed Rabbit to start...but I assume in a production scenario this
would have eliminated any durable queues/exchanges and persistent
messages.

Just concerned that the Mnesia DB is fragile and susceptible to
corruption when Rabbit is kill -9'd.

-J



From jasonjwwilliams at gmail.com  Wed Jan 14 22:23:51 2009
From: jasonjwwilliams at gmail.com (Jason J. W. Williams)
Date: Wed, 14 Jan 2009 15:23:51 -0700
Subject: [rabbitmq-discuss] Miscellaneous Question
In-Reply-To: <3b949f090901141417q5d79429ewe9732a10a68d38@mail.gmail.com>
References: <3b949f090901141417q5d79429ewe9732a10a68d38@mail.gmail.com>
Message-ID: <3b949f090901141423i6346f93ew76c2be27c278d4e9@mail.gmail.com>

Regarding the Mnesia issue attached is the ERL crash dump and below is
the output of starting Rabbit:

RabbitMQ 1.5.0 (AMQP 8-0)
Copyright (C) 2007-2009 LShift Ltd., Cohesive Financial Technologies
LLC., and Rabbit Technologies Ltd.
Licensed under the MPL.  See http://www.rabbitmq.com/

Logging to "/var/log/rabbitmq/phantome-rabbit1.log"
SASL logging to "/var/log/rabbitmq/phantome-rabbit1-sasl.log"

starting database             ...{"init terminating in
do_boot",{{nocatch,{error,{cannot_start_application,rabbit,{{timeout_waiting_for_tables,[user,user_vhost,vhost,rabbit_config,listener,durable_routes,route,reverse_route,durable_exchanges,exchange,durable_queues,amqqueue]},{rabbit,start,[normal,[]]}}}}},[{init,start_it,1},{init,start_em,1}]}}



On Wed, Jan 14, 2009 at 3:17 PM, Jason J. W. Williams
<jasonjwwilliams at gmail.com> wrote:
> Hello,
>
> A few miscellaneous questions came to me last night, so I thought I'd
> bundle them into one e-mail. Any insight is greatly appreciated.
>
> * How does one monitor memory consumption by a queue?
>
> * If messages persist to disk do they relieve memory pressure on the queue?
>
> * How resilient is the Mnesia DB to sudden death of the process using it?
>
> The last question has to do with me trying to start Rabbit again
> yesterday and it hanging on start and then issuing an error about
> reading the databases. Clearing the Mnesia files in /var/lib/rabbitmq
> allowed Rabbit to start...but I assume in a production scenario this
> would have eliminated any durable queues/exchanges and persistent
> messages.
>
> Just concerned that the Mnesia DB is fragile and susceptible to
> corruption when Rabbit is kill -9'd.
>
> -J
>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: erl_crash.dump
Type: application/octet-stream
Size: 484805 bytes
Desc: not available
Url : http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20090114/da9706e3/attachment.obj 

From 0x6e6562 at gmail.com  Wed Jan 14 23:02:34 2009
From: 0x6e6562 at gmail.com (Ben Hood)
Date: Wed, 14 Jan 2009 23:02:34 +0000
Subject: [rabbitmq-discuss] Miscellaneous Question
In-Reply-To: <3b949f090901141417q5d79429ewe9732a10a68d38@mail.gmail.com>
References: <3b949f090901141417q5d79429ewe9732a10a68d38@mail.gmail.com>
Message-ID: <269388e30901141502t94c717bv3bc3a7a5bb1ddf54@mail.gmail.com>

Jason,

On Wed, Jan 14, 2009 at 10:17 PM, Jason J. W. Williams
<jasonjwwilliams at gmail.com> wrote:
> * How does one monitor memory consumption by a queue?

Take a look at the QueueInfoItem called memory:
http://www.rabbitmq.com/admin-guide.html#server_status

> * If messages persist to disk do they relieve memory pressure on the queue?

No. There are heaps of threads on this list about queue paging - one
day we might actually do it :-)

> * How resilient is the Mnesia DB to sudden death of the process using it?

Don't really know but we have had some reports about not being able to
recover mnesia. However, we have not been able to reproduce this
ourselves - maybe if you tar up the mnesia directory and send it to
us, it might help reproduce the issue.

Ben



From tim+rabbitmq.com at coote.org  Wed Jan 14 23:04:21 2009
From: tim+rabbitmq.com at coote.org (Tim Coote)
Date: Wed, 14 Jan 2009 23:04:21 +0000
Subject: [rabbitmq-discuss] AMQP & Python Write-Up
Message-ID: <A2C93102-2102-4618-ABA2-84D5355ABA69@coote.org>

Surely one of the great benefits of a messaging programming style is  
that you can use processes rather than threads.

Threads will surely become a bottleneck as future hardware speed  
improvements move to multicore and so cannot support shared state. So,  
we can move back to the relatively safer and lower cost ($ to build  
and maintain) process based software models.

Although Python supports a threading model, the GIL makes it  
ineffective in many cases.  I suspect that this is deliberate on  
Guido's part.


>> I called py-amqplib non-threadsafe because the docs say not to share
>> channels between threads. So I suppose it would be more accurate to
>> say, the library is threadsafe if you do not share channel objects
>> between threads.
>
> IIRC Barry's first incarnation was threadless and hence threadsafe.

Tim Coote
tim at coote.org
vincit veritas






From 0x6e6562 at gmail.com  Wed Jan 14 23:06:05 2009
From: 0x6e6562 at gmail.com (Ben Hood)
Date: Wed, 14 Jan 2009 23:06:05 +0000
Subject: [rabbitmq-discuss] Miscellaneous Question
In-Reply-To: <3b949f090901141423i6346f93ew76c2be27c278d4e9@mail.gmail.com>
References: <3b949f090901141417q5d79429ewe9732a10a68d38@mail.gmail.com>
	<3b949f090901141423i6346f93ew76c2be27c278d4e9@mail.gmail.com>
Message-ID: <269388e30901141506o21d57be0w77883c6b68687258@mail.gmail.com>

Jason,

On Wed, Jan 14, 2009 at 10:23 PM, Jason J. W. Williams
<jasonjwwilliams at gmail.com> wrote:
> starting database             ...{"init terminating in
> do_boot",{{nocatch,{error,{cannot_start_application,rabbit,{{timeout_waiting_for_tables,[user,user_vhost,vhost,rabbit_config,listener,durable_routes,route,reverse_route,durable_exchanges,exchange,durable_queues,amqqueue]},{rabbit,start,[normal,[]]}}}}},[{init,start_it,1},{init,start_em,1}]}}

If possible, could you send the mnesia directory so that I can
reproduce this myself? And also let me know what OS and OTP you are
using.

Ben



From jasonjwwilliams at gmail.com  Wed Jan 14 23:06:47 2009
From: jasonjwwilliams at gmail.com (Jason J. W. Williams)
Date: Wed, 14 Jan 2009 16:06:47 -0700
Subject: [rabbitmq-discuss] Miscellaneous Question
In-Reply-To: <269388e30901141502t94c717bv3bc3a7a5bb1ddf54@mail.gmail.com>
References: <3b949f090901141417q5d79429ewe9732a10a68d38@mail.gmail.com>
	<269388e30901141502t94c717bv3bc3a7a5bb1ddf54@mail.gmail.com>
Message-ID: <3b949f090901141506nad748b4t75cfeddf93de51d2@mail.gmail.com>

Hi Ben

Thank you for the quick response. Regarding the Mnesia issue, I think
it happens everytime I kill the RabbitMQ daemon by CTRL-C then "a" for
abort rather than using rabbitmqctl.

-J



From tonyg at lshift.net  Wed Jan 14 23:08:20 2009
From: tonyg at lshift.net (Tony Garnock-Jones)
Date: Thu, 15 Jan 2009 12:08:20 +1300
Subject: [rabbitmq-discuss] Net::AMQP Perl Client - Status?
In-Reply-To: <50c8ffe90901141115r2e19070cjc8a9724f6c9e47b5@mail.gmail.com>
References: <50c8ffe90901091438n4dc5a278nb515d63cc209d65e@mail.gmail.com>	
	<269388e30901110205p4183ffb6s64a506b769d05827@mail.gmail.com>	
	<167204d20901110210u67fe4d91la7f41b79339f7094@mail.gmail.com>	
	<4969C824.4080105@lshift.net>	
	<50c8ffe90901111020i351eac88pcc0b5a6ee2868fc8@mail.gmail.com>	
	<496A3D73.8060108@lshift.net>	
	<50c8ffe90901111053u50e8c32l7839ed3be310641f@mail.gmail.com>	
	<496A74EF.6080805@lshift.net>
	<50c8ffe90901141115r2e19070cjc8a9724f6c9e47b5@mail.gmail.com>
Message-ID: <496E7064.7060804@lshift.net>

Hi Darien,

Darien Kindlund wrote:
> 1) Since RabbitMQ implements only v0.8 (0-8) of the AMQP spec, it does
> not support the 'headers' exchange type (as defined in 0-10 spec).
> Correct?

Correct. As Ben said, there's no ETA for the feature -- but it'd be an 
interesting exercise to code up :-) (Just off the top of my head, it'd 
be a fairly conservative change to rabbit_exchange.erl, plus a bit of 
work to implement an interpreter for whatever predicate language the 
other implementations have built. I could be wrong.)

> 2) Both (0-8) and (0-10) AMQP specifications talk about "message
> priority" (i.e., message.delivery-priority).  Can you give me an
> example of how you construct different priority messages via
> Net::STOMP?  Do you just specify the "priority" header with an integer
> value of 0,1,2,3,4,5,6,7,8, or 9?  Or, are message priorities not even
> implemented in RabbitMQ v1.5?

You're right on both points. First, when you publish messages using SEND 
to the rabbit STOMP gateway, you provide a "priority" header matching 
/[0-9]/. See line 431 (and neighbouring) of rabbit_stomp.erl [1].

Second, the RabbitMQ server doesn't actually pay attention to message 
priorities at the moment -- in violation of the spec, I might add, which 
requires at least two distinguishable priority levels -- so for now, it 
will simply ignore the message priority and will route all messages 
equally. It won't (or oughtn't!) break if you *do* supply a priority, of 
course.

Regards,
   Tony

[1] 
http://hg.rabbitmq.com/rabbitmq-stomp/file/41ccb4722952/src/rabbit_stomp.erl#l431



From matthias at lshift.net  Wed Jan 14 23:11:36 2009
From: matthias at lshift.net (Matthias Radestock)
Date: Wed, 14 Jan 2009 23:11:36 +0000
Subject: [rabbitmq-discuss] Miscellaneous Question
In-Reply-To: <3b949f090901141417q5d79429ewe9732a10a68d38@mail.gmail.com>
References: <3b949f090901141417q5d79429ewe9732a10a68d38@mail.gmail.com>
Message-ID: <496E7128.4070607@lshift.net>

Jason,

Jason J. W. Williams wrote:
> * How does one monitor memory consumption by a queue?

rabbitmqctl list_queues name memory

> * If messages persist to disk do they relieve memory pressure on the queue?

No. This has been discussed at some length on the list and there are 
several

> * How resilient is the Mnesia DB to sudden death of the process using it?

It should be quite resilient. See
   http://www.erlang.org/doc/apps/mnesia/Mnesia_chap7.html
in particular sections 6.6 to 6.9 for some more details on what happens 
on startup, how various failure scenarios are dealt with etc.

> Clearing the Mnesia files in /var/lib/rabbitmq
> allowed Rabbit to start...but I assume in a production scenario this
> would have eliminated any durable queues/exchanges and persistent
> messages.

Right. Though note that persisted messages aren't stored in mnesia; it 
just so happens that we decided to store them in files in the same 
directory as mnesia.


Matthias.



From jasonjwwilliams at gmail.com  Wed Jan 14 23:12:10 2009
From: jasonjwwilliams at gmail.com (Jason J. W. Williams)
Date: Wed, 14 Jan 2009 16:12:10 -0700
Subject: [rabbitmq-discuss] AMQP & Python Write-Up
In-Reply-To: <A2C93102-2102-4618-ABA2-84D5355ABA69@coote.org>
References: <A2C93102-2102-4618-ABA2-84D5355ABA69@coote.org>
Message-ID: <3b949f090901141512n4ad3f92m2f0999282f921168@mail.gmail.com>

py-amqplib seems to work very well with the new multiprocessing module
in Python 2.6 (available as a backport for 2.5 as well). The samples
in the write-up are simplified versions of a multi-process consumer I
wrote to test RabbitMQ. A multi-process consumer app was around 30
lines of code (including whitespace).

-J

On Wed, Jan 14, 2009 at 4:04 PM, Tim Coote <tim+rabbitmq.com at coote.org> wrote:
> Surely one of the great benefits of a messaging programming style is
> that you can use processes rather than threads.
>
> Threads will surely become a bottleneck as future hardware speed
> improvements move to multicore and so cannot support shared state. So,
> we can move back to the relatively safer and lower cost ($ to build
> and maintain) process based software models.
>
> Although Python supports a threading model, the GIL makes it
> ineffective in many cases.  I suspect that this is deliberate on
> Guido's part.
>
>
>>> I called py-amqplib non-threadsafe because the docs say not to share
>>> channels between threads. So I suppose it would be more accurate to
>>> say, the library is threadsafe if you do not share channel objects
>>> between threads.
>>
>> IIRC Barry's first incarnation was threadless and hence threadsafe.
>
> Tim Coote
> tim at coote.org
> vincit veritas
>
>
>
>
> _______________________________________________
> rabbitmq-discuss mailing list
> rabbitmq-discuss at lists.rabbitmq.com
> http://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss
>



From 0x6e6562 at gmail.com  Wed Jan 14 23:12:52 2009
From: 0x6e6562 at gmail.com (Ben Hood)
Date: Wed, 14 Jan 2009 23:12:52 +0000
Subject: [rabbitmq-discuss] AMQP & Python Write-Up
In-Reply-To: <A2C93102-2102-4618-ABA2-84D5355ABA69@coote.org>
References: <A2C93102-2102-4618-ABA2-84D5355ABA69@coote.org>
Message-ID: <269388e30901141512t769b40f8ifc181798230f57e2@mail.gmail.com>

Tim,

On Wed, Jan 14, 2009 at 11:04 PM, Tim Coote <tim+rabbitmq.com at coote.org> wrote:
> Surely one of the great benefits of a messaging programming style is
> that you can use processes rather than threads.
>
> Threads will surely become a bottleneck as future hardware speed
> improvements move to multicore and so cannot support shared state. So,
> we can move back to the relatively safer and lower cost ($ to build
> and maintain) process based software models.
>
> Although Python supports a threading model, the GIL makes it
> ineffective in many cases.  I suspect that this is deliberate on
> Guido's part.

Be that as it may, the central tenant is to not interleave different
command streams in one channel.

Whether this is done by thread or process confinement (or even if you
are a kernel hacker and you know that in reality there is no such
thing as a thread or a process) is irrelevant.

The broker has no visibility into what client side objects are shared,
nor does it care.

The broker is just sitting on the other end of a wire with the mere
expectation that each individual stream of commands is stateful and
coherent.

HTH,

Ben



From jasonjwwilliams at gmail.com  Wed Jan 14 23:13:33 2009
From: jasonjwwilliams at gmail.com (Jason J. W. Williams)
Date: Wed, 14 Jan 2009 16:13:33 -0700
Subject: [rabbitmq-discuss] Miscellaneous Question
In-Reply-To: <496E7128.4070607@lshift.net>
References: <3b949f090901141417q5d79429ewe9732a10a68d38@mail.gmail.com>
	<496E7128.4070607@lshift.net>
Message-ID: <3b949f090901141513n100f7a53w18a466aa8fdd2de@mail.gmail.com>

Thanks for the info and links. I'll read up on Mnesia. Just for future
reference, if one were to carefully delete only the Mnesia DB Files
and leave the message log, would it be possible to still use the log
after the queues/exchanges/bindings were recreated?

-J

On Wed, Jan 14, 2009 at 4:11 PM, Matthias Radestock <matthias at lshift.net> wrote:
> Jason,
>
> Jason J. W. Williams wrote:
>>
>> * How does one monitor memory consumption by a queue?
>
> rabbitmqctl list_queues name memory
>
>> * If messages persist to disk do they relieve memory pressure on the
>> queue?
>
> No. This has been discussed at some length on the list and there are several
>
>> * How resilient is the Mnesia DB to sudden death of the process using it?
>
> It should be quite resilient. See
>  http://www.erlang.org/doc/apps/mnesia/Mnesia_chap7.html
> in particular sections 6.6 to 6.9 for some more details on what happens on
> startup, how various failure scenarios are dealt with etc.
>
>> Clearing the Mnesia files in /var/lib/rabbitmq
>> allowed Rabbit to start...but I assume in a production scenario this
>> would have eliminated any durable queues/exchanges and persistent
>> messages.
>
> Right. Though note that persisted messages aren't stored in mnesia; it just
> so happens that we decided to store them in files in the same directory as
> mnesia.
>
>
> Matthias.
>



From 0x6e6562 at gmail.com  Wed Jan 14 23:18:04 2009
From: 0x6e6562 at gmail.com (Ben Hood)
Date: Wed, 14 Jan 2009 23:18:04 +0000
Subject: [rabbitmq-discuss] Miscellaneous Question
In-Reply-To: <3b949f090901141510r7a11c2e0g2763e526b504afaa@mail.gmail.com>
References: <3b949f090901141417q5d79429ewe9732a10a68d38@mail.gmail.com>
	<3b949f090901141423i6346f93ew76c2be27c278d4e9@mail.gmail.com>
	<269388e30901141506o21d57be0w77883c6b68687258@mail.gmail.com>
	<3b949f090901141510r7a11c2e0g2763e526b504afaa@mail.gmail.com>
Message-ID: <269388e30901141518w7a6c24cfh8394d6fd1d12a028@mail.gmail.com>

Jason,

On Wed, Jan 14, 2009 at 11:10 PM, Jason J. W. Williams
<jasonjwwilliams at gmail.com> wrote:
> Attached is the mnesia DB. OS is OS X 10.5.6. I'd love to give you the

Ah. OSX. That was also the OS that some other people have been
reporting that mnesia doesn't recover itself. Maybe there is a link.

> Erlang version, but for the life of me I can't figure out how to get
> the Erlang version and not the Eshell version. Any help is
> appreciated. It's the one from MacPorts.

Just start an Erlang shell, the version number is printed when the shell starts.

Ben



From jasonjwwilliams at gmail.com  Wed Jan 14 23:18:53 2009
From: jasonjwwilliams at gmail.com (Jason J. W. Williams)
Date: Wed, 14 Jan 2009 16:18:53 -0700
Subject: [rabbitmq-discuss] Miscellaneous Question
In-Reply-To: <269388e30901141518w7a6c24cfh8394d6fd1d12a028@mail.gmail.com>
References: <3b949f090901141417q5d79429ewe9732a10a68d38@mail.gmail.com>
	<3b949f090901141423i6346f93ew76c2be27c278d4e9@mail.gmail.com>
	<269388e30901141506o21d57be0w77883c6b68687258@mail.gmail.com>
	<3b949f090901141510r7a11c2e0g2763e526b504afaa@mail.gmail.com>
	<269388e30901141518w7a6c24cfh8394d6fd1d12a028@mail.gmail.com>
Message-ID: <3b949f090901141518r61fcd332w7b4c05d593ddcedc@mail.gmail.com>

Hi Ben,

"Eshell V5.6.2" Not sure what Erlang 12B-? revision that maps too.

-J

On Wed, Jan 14, 2009 at 4:18 PM, Ben Hood <0x6e6562 at gmail.com> wrote:
> Jason,
>
> On Wed, Jan 14, 2009 at 11:10 PM, Jason J. W. Williams
> <jasonjwwilliams at gmail.com> wrote:
>> Attached is the mnesia DB. OS is OS X 10.5.6. I'd love to give you the
>
> Ah. OSX. That was also the OS that some other people have been
> reporting that mnesia doesn't recover itself. Maybe there is a link.
>
>> Erlang version, but for the life of me I can't figure out how to get
>> the Erlang version and not the Eshell version. Any help is
>> appreciated. It's the one from MacPorts.
>
> Just start an Erlang shell, the version number is printed when the shell starts.
>
> Ben
>



From matthias at lshift.net  Wed Jan 14 23:20:51 2009
From: matthias at lshift.net (Matthias Radestock)
Date: Wed, 14 Jan 2009 23:20:51 +0000
Subject: [rabbitmq-discuss] Miscellaneous Question
In-Reply-To: <3b949f090901141513n100f7a53w18a466aa8fdd2de@mail.gmail.com>
References: <3b949f090901141417q5d79429ewe9732a10a68d38@mail.gmail.com>	<496E7128.4070607@lshift.net>
	<3b949f090901141513n100f7a53w18a466aa8fdd2de@mail.gmail.com>
Message-ID: <496E7353.2060500@lshift.net>

Jason,

Jason J. W. Williams wrote:
> Thanks for the info and links. I'll read up on Mnesia. Just for future
> reference, if one were to carefully delete only the Mnesia DB Files
> and leave the message log, would it be possible to still use the log
> after the queues/exchanges/bindings were recreated?

That's an interesting thought. You could

1) move the persister log out of the way (rabbit_persister.LOG*)
2) delete the mnesia dir
3) start rabbit (and thus get a fresh mnesia dir and persister log)
4) recreate the durable exchanges/queues/bindings
5) stop rabbit
7) replace the new persister log with the old one
8) restart rabbit

Might work. Haven't tried it though.


Matthias.



From 0x6e6562 at gmail.com  Wed Jan 14 23:40:59 2009
From: 0x6e6562 at gmail.com (Ben Hood)
Date: Wed, 14 Jan 2009 23:40:59 +0000
Subject: [rabbitmq-discuss] Miscellaneous Question
In-Reply-To: <3b949f090901141518r61fcd332w7b4c05d593ddcedc@mail.gmail.com>
References: <3b949f090901141417q5d79429ewe9732a10a68d38@mail.gmail.com>
	<3b949f090901141423i6346f93ew76c2be27c278d4e9@mail.gmail.com>
	<269388e30901141506o21d57be0w77883c6b68687258@mail.gmail.com>
	<3b949f090901141510r7a11c2e0g2763e526b504afaa@mail.gmail.com>
	<269388e30901141518w7a6c24cfh8394d6fd1d12a028@mail.gmail.com>
	<3b949f090901141518r61fcd332w7b4c05d593ddcedc@mail.gmail.com>
Message-ID: <269388e30901141540x7df4bc36nf6b861c043ae0d78@mail.gmail.com>

Jason,

On Wed, Jan 14, 2009 at 11:18 PM, Jason J. W. Williams
<jasonjwwilliams at gmail.com> wrote:
> "Eshell V5.6.2" Not sure what Erlang 12B-? revision that maps too.

Pretty old school, but I think that is R12B-2.

In any case, can I reproduce the symptom using the tarball you
supplied with R12B-5/OSX 10.5.6.

I just can't seem to create it myself, yet.

Having said this, the only reports of this symptom that I have
received are from Mac users.

But unfortunately these people did not send me the tarball or any
other diagnostics :-(

Since you're using OSX, I'd like to rule out OTP-7471, which was fixed
in R12B-4:

OTP-7471  On Mac OS X, file:sync/1 now guarantees that all filesystem
	      buffers are written to the disk by using the fcntl() with
	      F_FULLFSYNC option. Previously, file:sync/1 called fsync(),
	      which only guaranteed that the data had been transferred to
	      the disk drive. (Thanks to Jan Lehnardt.)

Can you install R12B-5 and a fresh install of Rabbit and try to reproduce this?

I think R12B-5 might be in macports, if not, you can just compile it -
it'll take about 5 mins - here are some directions:
http://hopper.squarespace.com/blog/2008/11/15/how-i-install-rabbitmq-on-osx.html

By fresh install of Rabbit, I mean one with a clean mnesia directory.

HTH,

Ben



From 0x6e6562 at gmail.com  Wed Jan 14 23:43:00 2009
From: 0x6e6562 at gmail.com (Ben Hood)
Date: Wed, 14 Jan 2009 23:43:00 +0000
Subject: [rabbitmq-discuss] Miscellaneous Question
In-Reply-To: <269388e30901141540x7df4bc36nf6b861c043ae0d78@mail.gmail.com>
References: <3b949f090901141417q5d79429ewe9732a10a68d38@mail.gmail.com>
	<3b949f090901141423i6346f93ew76c2be27c278d4e9@mail.gmail.com>
	<269388e30901141506o21d57be0w77883c6b68687258@mail.gmail.com>
	<3b949f090901141510r7a11c2e0g2763e526b504afaa@mail.gmail.com>
	<269388e30901141518w7a6c24cfh8394d6fd1d12a028@mail.gmail.com>
	<3b949f090901141518r61fcd332w7b4c05d593ddcedc@mail.gmail.com>
	<269388e30901141540x7df4bc36nf6b861c043ae0d78@mail.gmail.com>
Message-ID: <269388e30901141543h357ece34wd9669c742efa0ed2@mail.gmail.com>

Jason,

On Wed, Jan 14, 2009 at 11:40 PM, Ben Hood <0x6e6562 at gmail.com> wrote:
> Can you install R12B-5 and a fresh install of Rabbit and try to reproduce this?
>
> I think R12B-5 might be in macports, if not, you can just compile it -
> it'll take about 5 mins - here are some directions:
> http://hopper.squarespace.com/blog/2008/11/15/how-i-install-rabbitmq-on-osx.html
>
> By fresh install of Rabbit, I mean one with a clean mnesia directory.

I forgot to add: can you also post the exact steps to reproduce this
from a fresh Rabbit install?

Ben



From tonyg at lshift.net  Wed Jan 14 23:44:36 2009
From: tonyg at lshift.net (Tony Garnock-Jones)
Date: Thu, 15 Jan 2009 12:44:36 +1300
Subject: [rabbitmq-discuss] Message Priority & 'Headers' Exchange Type
 (was: Net::AMQP Perl Client - Status?)
In-Reply-To: <50c8ffe90901141147s50179d0ic09b8bec8d3e147b@mail.gmail.com>
References: <50c8ffe90901141147s50179d0ic09b8bec8d3e147b@mail.gmail.com>
Message-ID: <496E78E4.4070907@lshift.net>

Darien Kindlund wrote:
> Understood.  I would say message prioritization would be exceedingly 
> useful from an operational perspective. [... a workaround is] Not
> impossible to implement, but not ideal.

Agreed.

> Taking that type of implementation to the next logical step:
> 1) Is there any way to perform "non-blocking" SUBSCRIBEs via
> Net::Stomp to RabbitMQ, in order to have a perl consumer application
> monitor multiple queues in series?  Or, is the recommendation to use
> something like ithreads to create a separate thread per subscription
> and multiplex the messages manually within the application?  (See what
> I mean, by increased complexity costs on the app?)

I don't think there's any restriction on the number of active SUBSCRIBEs 
you can have in a single connection. (As an aside, if you supply the 
"id" header on each SUBSCRIBE, the server will attach a "subscription" 
header on corresponding MESSAGEs, which can sometimes be useful when you 
have more than one SUBSCRIBE active at a time.)

> The 'headers' exchange type comes in handy as a customizable
> specification.  Yes, we can 'transcode' requirements like (Foo: A,
> Bar: B) into queues with routing keys of (foo.*.bar.*), but that gets
> awkward for really long lists of headers.  With the
> 'message.destination' size of 'str8', that's 255 UTF-8 chars, so it
> doesn't scale nicely.

Agreed.

Regards,
   Tony



From jasonjwwilliams at gmail.com  Wed Jan 14 23:46:23 2009
From: jasonjwwilliams at gmail.com (Jason J. W. Williams)
Date: Wed, 14 Jan 2009 16:46:23 -0700
Subject: [rabbitmq-discuss] Miscellaneous Question
In-Reply-To: <269388e30901141540x7df4bc36nf6b861c043ae0d78@mail.gmail.com>
References: <3b949f090901141417q5d79429ewe9732a10a68d38@mail.gmail.com>
	<3b949f090901141423i6346f93ew76c2be27c278d4e9@mail.gmail.com>
	<269388e30901141506o21d57be0w77883c6b68687258@mail.gmail.com>
	<3b949f090901141510r7a11c2e0g2763e526b504afaa@mail.gmail.com>
	<269388e30901141518w7a6c24cfh8394d6fd1d12a028@mail.gmail.com>
	<3b949f090901141518r61fcd332w7b4c05d593ddcedc@mail.gmail.com>
	<269388e30901141540x7df4bc36nf6b861c043ae0d78@mail.gmail.com>
Message-ID: <3b949f090901141546w70183804qcf7babec570cc148@mail.gmail.com>

Hi Ben,

Sure. Lemme give that a shot later this evening.

It seems to happen if I leave around 12-24 hours of downtime between
Rabbit server starts.

-J

On Wed, Jan 14, 2009 at 4:40 PM, Ben Hood <0x6e6562 at gmail.com> wrote:
> Jason,
>
> On Wed, Jan 14, 2009 at 11:18 PM, Jason J. W. Williams
> <jasonjwwilliams at gmail.com> wrote:
>> "Eshell V5.6.2" Not sure what Erlang 12B-? revision that maps too.
>
> Pretty old school, but I think that is R12B-2.
>
> In any case, can I reproduce the symptom using the tarball you
> supplied with R12B-5/OSX 10.5.6.
>
> I just can't seem to create it myself, yet.
>
> Having said this, the only reports of this symptom that I have
> received are from Mac users.
>
> But unfortunately these people did not send me the tarball or any
> other diagnostics :-(
>
> Since you're using OSX, I'd like to rule out OTP-7471, which was fixed
> in R12B-4:
>
> OTP-7471  On Mac OS X, file:sync/1 now guarantees that all filesystem
>              buffers are written to the disk by using the fcntl() with
>              F_FULLFSYNC option. Previously, file:sync/1 called fsync(),
>              which only guaranteed that the data had been transferred to
>              the disk drive. (Thanks to Jan Lehnardt.)
>
> Can you install R12B-5 and a fresh install of Rabbit and try to reproduce this?
>
> I think R12B-5 might be in macports, if not, you can just compile it -
> it'll take about 5 mins - here are some directions:
> http://hopper.squarespace.com/blog/2008/11/15/how-i-install-rabbitmq-on-osx.html
>
> By fresh install of Rabbit, I mean one with a clean mnesia directory.
>
> HTH,
>
> Ben
>



From jasonjwwilliams at gmail.com  Wed Jan 14 23:48:48 2009
From: jasonjwwilliams at gmail.com (Jason J. W. Williams)
Date: Wed, 14 Jan 2009 16:48:48 -0700
Subject: [rabbitmq-discuss] Miscellaneous Question
In-Reply-To: <269388e30901141543h357ece34wd9669c742efa0ed2@mail.gmail.com>
References: <3b949f090901141417q5d79429ewe9732a10a68d38@mail.gmail.com>
	<3b949f090901141423i6346f93ew76c2be27c278d4e9@mail.gmail.com>
	<269388e30901141506o21d57be0w77883c6b68687258@mail.gmail.com>
	<3b949f090901141510r7a11c2e0g2763e526b504afaa@mail.gmail.com>
	<269388e30901141518w7a6c24cfh8394d6fd1d12a028@mail.gmail.com>
	<3b949f090901141518r61fcd332w7b4c05d593ddcedc@mail.gmail.com>
	<269388e30901141540x7df4bc36nf6b861c043ae0d78@mail.gmail.com>
	<269388e30901141543h357ece34wd9669c742efa0ed2@mail.gmail.com>
Message-ID: <3b949f090901141548l764ebdakdf38e9f1e641a4@mail.gmail.com>

Sure. No problem.

-J

On Wed, Jan 14, 2009 at 4:43 PM, Ben Hood <0x6e6562 at gmail.com> wrote:
> Jason,
>
> On Wed, Jan 14, 2009 at 11:40 PM, Ben Hood <0x6e6562 at gmail.com> wrote:
>> Can you install R12B-5 and a fresh install of Rabbit and try to reproduce this?
>>
>> I think R12B-5 might be in macports, if not, you can just compile it -
>> it'll take about 5 mins - here are some directions:
>> http://hopper.squarespace.com/blog/2008/11/15/how-i-install-rabbitmq-on-osx.html
>>
>> By fresh install of Rabbit, I mean one with a clean mnesia directory.
>
> I forgot to add: can you also post the exact steps to reproduce this
> from a fresh Rabbit install?
>
> Ben
>



From matthias at lshift.net  Wed Jan 14 23:53:12 2009
From: matthias at lshift.net (Matthias Radestock)
Date: Wed, 14 Jan 2009 23:53:12 +0000
Subject: [rabbitmq-discuss] Miscellaneous Question
In-Reply-To: <3b949f090901141546w70183804qcf7babec570cc148@mail.gmail.com>
References: <3b949f090901141417q5d79429ewe9732a10a68d38@mail.gmail.com>	<3b949f090901141423i6346f93ew76c2be27c278d4e9@mail.gmail.com>	<269388e30901141506o21d57be0w77883c6b68687258@mail.gmail.com>	<3b949f090901141510r7a11c2e0g2763e526b504afaa@mail.gmail.com>	<269388e30901141518w7a6c24cfh8394d6fd1d12a028@mail.gmail.com>	<3b949f090901141518r61fcd332w7b4c05d593ddcedc@mail.gmail.com>	<269388e30901141540x7df4bc36nf6b861c043ae0d78@mail.gmail.com>
	<3b949f090901141546w70183804qcf7babec570cc148@mail.gmail.com>
Message-ID: <496E7AE8.8040707@lshift.net>

Jason,

Jason J. W. Williams wrote:
> It seems to happen if I leave around 12-24 hours of downtime between
> Rabbit server starts.

Btw, you are not by any chance changing the node/machine name between 
restarts, are you? That would definitely cause problems, including the 
symptoms you describe.


Matthias.



From jasonjwwilliams at gmail.com  Wed Jan 14 23:56:07 2009
From: jasonjwwilliams at gmail.com (Jason J. W. Williams)
Date: Wed, 14 Jan 2009 16:56:07 -0700
Subject: [rabbitmq-discuss] Miscellaneous Question
In-Reply-To: <496E7AE8.8040707@lshift.net>
References: <3b949f090901141417q5d79429ewe9732a10a68d38@mail.gmail.com>
	<3b949f090901141423i6346f93ew76c2be27c278d4e9@mail.gmail.com>
	<269388e30901141506o21d57be0w77883c6b68687258@mail.gmail.com>
	<3b949f090901141510r7a11c2e0g2763e526b504afaa@mail.gmail.com>
	<269388e30901141518w7a6c24cfh8394d6fd1d12a028@mail.gmail.com>
	<3b949f090901141518r61fcd332w7b4c05d593ddcedc@mail.gmail.com>
	<269388e30901141540x7df4bc36nf6b861c043ae0d78@mail.gmail.com>
	<3b949f090901141546w70183804qcf7babec570cc148@mail.gmail.com>
	<496E7AE8.8040707@lshift.net>
Message-ID: <3b949f090901141556l3fe9e12aj17efeaa8d84a210@mail.gmail.com>

Hi Matthias,

No I'm not. Just shutting it down rather impolitely and not running it
again until the next day.

-J

On Wed, Jan 14, 2009 at 4:53 PM, Matthias Radestock <matthias at lshift.net> wrote:
> Jason,
>
> Jason J. W. Williams wrote:
>>
>> It seems to happen if I leave around 12-24 hours of downtime between
>> Rabbit server starts.
>
> Btw, you are not by any chance changing the node/machine name between
> restarts, are you? That would definitely cause problems, including the
> symptoms you describe.
>
>
> Matthias.
>



From matthias at lshift.net  Thu Jan 15 00:13:38 2009
From: matthias at lshift.net (Matthias Radestock)
Date: Thu, 15 Jan 2009 00:13:38 +0000
Subject: [rabbitmq-discuss] Miscellaneous Question
In-Reply-To: <3b949f090901141556l3fe9e12aj17efeaa8d84a210@mail.gmail.com>
References: <3b949f090901141417q5d79429ewe9732a10a68d38@mail.gmail.com>	<3b949f090901141423i6346f93ew76c2be27c278d4e9@mail.gmail.com>	<269388e30901141506o21d57be0w77883c6b68687258@mail.gmail.com>	<3b949f090901141510r7a11c2e0g2763e526b504afaa@mail.gmail.com>	<269388e30901141518w7a6c24cfh8394d6fd1d12a028@mail.gmail.com>	<3b949f090901141518r61fcd332w7b4c05d593ddcedc@mail.gmail.com>	<269388e30901141540x7df4bc36nf6b861c043ae0d78@mail.gmail.com>	<3b949f090901141546w70183804qcf7babec570cc148@mail.gmail.com>	<496E7AE8.8040707@lshift.net>
	<3b949f090901141556l3fe9e12aj17efeaa8d84a210@mail.gmail.com>
Message-ID: <496E7FB2.5060503@lshift.net>

Jason,

Jason J. W. Williams wrote:
>> Btw, you are not by any chance changing the node/machine name between
>> restarts, are you?
>
> No I'm not.

Are you sure?

The mnesia dir you sent Ben contains evidence of two nodenames: 
phantome-rabbit1 at thunderstallion and phantome-rabbit1 at Phantome.

Looks like the former is the nodename under which the rabbit db was 
created, and the second was used on restart.


Matthias.



From jasonjwwilliams at gmail.com  Thu Jan 15 00:17:35 2009
From: jasonjwwilliams at gmail.com (Jason J. W. Williams)
Date: Wed, 14 Jan 2009 17:17:35 -0700
Subject: [rabbitmq-discuss] Miscellaneous Question
In-Reply-To: <496E7FB2.5060503@lshift.net>
References: <3b949f090901141417q5d79429ewe9732a10a68d38@mail.gmail.com>
	<269388e30901141506o21d57be0w77883c6b68687258@mail.gmail.com>
	<3b949f090901141510r7a11c2e0g2763e526b504afaa@mail.gmail.com>
	<269388e30901141518w7a6c24cfh8394d6fd1d12a028@mail.gmail.com>
	<3b949f090901141518r61fcd332w7b4c05d593ddcedc@mail.gmail.com>
	<269388e30901141540x7df4bc36nf6b861c043ae0d78@mail.gmail.com>
	<3b949f090901141546w70183804qcf7babec570cc148@mail.gmail.com>
	<496E7AE8.8040707@lshift.net>
	<3b949f090901141556l3fe9e12aj17efeaa8d84a210@mail.gmail.com>
	<496E7FB2.5060503@lshift.net>
Message-ID: <3b949f090901141617y57610869leee17a46b97c93c1@mail.gmail.com>

Dang it. I know what is happening. When I'm at the office or at home
the hard set hostname takes over (Phantome). Yesterday I was at the
data center all day, and my IP over there has a reverse DNS entry
(thunderstallion) which overrides Phantome while I'm there. That's
probably what's going on.

-J

On Wed, Jan 14, 2009 at 5:13 PM, Matthias Radestock <matthias at lshift.net> wrote:
> Jason,
>
> Jason J. W. Williams wrote:
>>>
>>> Btw, you are not by any chance changing the node/machine name between
>>> restarts, are you?
>>
>> No I'm not.
>
> Are you sure?
>
> The mnesia dir you sent Ben contains evidence of two nodenames:
> phantome-rabbit1 at thunderstallion and phantome-rabbit1 at Phantome.
>
> Looks like the former is the nodename under which the rabbit db was created,
> and the second was used on restart.
>
>
> Matthias.
>



From tonyg at lshift.net  Thu Jan 15 00:24:58 2009
From: tonyg at lshift.net (Tony Garnock-Jones)
Date: Thu, 15 Jan 2009 13:24:58 +1300
Subject: [rabbitmq-discuss] Miscellaneous Question
In-Reply-To: <496E7FB2.5060503@lshift.net>
References: <3b949f090901141417q5d79429ewe9732a10a68d38@mail.gmail.com>	<3b949f090901141423i6346f93ew76c2be27c278d4e9@mail.gmail.com>	<269388e30901141506o21d57be0w77883c6b68687258@mail.gmail.com>	<3b949f090901141510r7a11c2e0g2763e526b504afaa@mail.gmail.com>	<269388e30901141518w7a6c24cfh8394d6fd1d12a028@mail.gmail.com>	<3b949f090901141518r61fcd332w7b4c05d593ddcedc@mail.gmail.com>	<269388e30901141540x7df4bc36nf6b861c043ae0d78@mail.gmail.com>	<3b949f090901141546w70183804qcf7babec570cc148@mail.gmail.com>	<496E7AE8.8040707@lshift.net>	<3b949f090901141556l3fe9e12aj17efeaa8d84a210@mail.gmail.com>
	<496E7FB2.5060503@lshift.net>
Message-ID: <496E825A.5000708@lshift.net>

Matthias Radestock wrote:
> The mnesia dir you sent Ben contains evidence of two nodenames: 
> phantome-rabbit1 at thunderstallion and phantome-rabbit1 at Phantome.

Interesting - it looks like OS X changes the *hostname* depending on the 
assignments it gets back from *DHCP*!

I frequently open my laptop at home, open an xterm, and see 
"tonyg at truth" instead of "tonyg at walk"; walk is the name of my OS X 
laptop, truth of my linux desktop. When this happens, truth hasn't been 
running, and instead I get the IP address that is *usually* assigned to 
truth.

Tony



From bp at barryp.org  Thu Jan 15 00:28:48 2009
From: bp at barryp.org (Barry Pederson)
Date: Wed, 14 Jan 2009 18:28:48 -0600
Subject: [rabbitmq-discuss] AMQP & Python Write-Up
In-Reply-To: <496DEB04.4060707@redhat.com>
References: <3b949f090901131806k2d16f98dwf61e652c7434c157@mail.gmail.com>
	<496DEB04.4060707@redhat.com>
Message-ID: <496E8340.5000700@barryp.org>

Gordon Sim wrote:
> Jason J. W. Williams wrote:
>> I've written up a quick start on the basics of AMQP and using it in
>> Python, that is the kind of document I wished I'd been able to find in
>> one place: http://blogs.digitar.com/jjww/2009/01/rabbits-and-warrens/
>>
>> It's probably laced with errors, and I'd appreciate any
>> feedback/corrections.
> 
> Nice article!
> 
> I am not that familiar with py-amqplib but the no_ack argument to 
> basic_consume/basic_get is defined in the AMQP spec to mean that the 
> server should not expect an ack and should discard the message on 
> delivery. I.e. its an unreliable mode of delivery[1] rather than a 
> signal to the client library to automatically acknowledge on receiving a 
> message.

I just read the article too, very nice.

Gordon's right about the no_ack flag, this sentence:

   If you set the no_ack argument to true, then py-amqplib will
   automatically send the acknowledgement immediately for you.

should probably instead say something like what Gordon mentions above - 
it's the broker that acts differently based on that flag, not the client 
library.

The only other thing I noticed was this section:

----
Now, there?s two methods of getting messages out of the queue. The first 
is to call chan.basic_get() to pull the next message off the queue:

    1. msg = chan.basic_get("po_box")
    2. print msg.body()
    3. chan.basic_ack(msg.delivery_tag)
----

If there isn't a message waiting in the queue when line 1 executes, then 
msg is set to None and line 2 will die since None does not have a "body" 
attribute.  Also, body is not a function to call, it's just a string, so 
this would be more appropriate:

     msg = chan.basic_get("po_box")
     if msg is not None:
	print msg.body
         chan.basic_ack(msg.delivery_tag)

================

	Barry





From jasonjwwilliams at gmail.com  Thu Jan 15 00:44:38 2009
From: jasonjwwilliams at gmail.com (Jason J. W. Williams)
Date: Wed, 14 Jan 2009 17:44:38 -0700
Subject: [rabbitmq-discuss] Miscellaneous Question
In-Reply-To: <496E825A.5000708@lshift.net>
References: <3b949f090901141417q5d79429ewe9732a10a68d38@mail.gmail.com>
	<3b949f090901141510r7a11c2e0g2763e526b504afaa@mail.gmail.com>
	<269388e30901141518w7a6c24cfh8394d6fd1d12a028@mail.gmail.com>
	<3b949f090901141518r61fcd332w7b4c05d593ddcedc@mail.gmail.com>
	<269388e30901141540x7df4bc36nf6b861c043ae0d78@mail.gmail.com>
	<3b949f090901141546w70183804qcf7babec570cc148@mail.gmail.com>
	<496E7AE8.8040707@lshift.net>
	<3b949f090901141556l3fe9e12aj17efeaa8d84a210@mail.gmail.com>
	<496E7FB2.5060503@lshift.net> <496E825A.5000708@lshift.net>
Message-ID: <3b949f090901141644jae1c639hd3f142faca5cb0b4@mail.gmail.com>

Hi Tony,

I guess it makes sense. Doing a reverse lookup on the new IP assigned
by the DHCP server.

-J

On Wed, Jan 14, 2009 at 5:24 PM, Tony Garnock-Jones <tonyg at lshift.net> wrote:
> Matthias Radestock wrote:
>>
>> The mnesia dir you sent Ben contains evidence of two nodenames:
>> phantome-rabbit1 at thunderstallion and phantome-rabbit1 at Phantome.
>
> Interesting - it looks like OS X changes the *hostname* depending on the
> assignments it gets back from *DHCP*!
>
> I frequently open my laptop at home, open an xterm, and see "tonyg at truth"
> instead of "tonyg at walk"; walk is the name of my OS X laptop, truth of my
> linux desktop. When this happens, truth hasn't been running, and instead I
> get the IP address that is *usually* assigned to truth.
>
> Tony
>



From jasonjwwilliams at gmail.com  Thu Jan 15 00:47:17 2009
From: jasonjwwilliams at gmail.com (Jason J. W. Williams)
Date: Wed, 14 Jan 2009 17:47:17 -0700
Subject: [rabbitmq-discuss] AMQP & Python Write-Up
In-Reply-To: <496E8340.5000700@barryp.org>
References: <3b949f090901131806k2d16f98dwf61e652c7434c157@mail.gmail.com>
	<496DEB04.4060707@redhat.com> <496E8340.5000700@barryp.org>
Message-ID: <3b949f090901141647k5aa319f2g1e4170aef23613d7@mail.gmail.com>

Hi Barry,

Your comments on the typos are absolutely correct. That's what I get
for not double-checking the code that *didn't* make it into the full
amqp_consumer.py download.

Also, regarding the no_ack argument. Thank you (and Gordon) for the
correction. I will update the article to match the correct mechanism.

-J

On Wed, Jan 14, 2009 at 5:28 PM, Barry Pederson <bp at barryp.org> wrote:
> Gordon Sim wrote:
>>
>> Jason J. W. Williams wrote:
>>>
>>> I've written up a quick start on the basics of AMQP and using it in
>>> Python, that is the kind of document I wished I'd been able to find in
>>> one place: http://blogs.digitar.com/jjww/2009/01/rabbits-and-warrens/
>>>
>>> It's probably laced with errors, and I'd appreciate any
>>> feedback/corrections.
>>
>> Nice article!
>>
>> I am not that familiar with py-amqplib but the no_ack argument to
>> basic_consume/basic_get is defined in the AMQP spec to mean that the server
>> should not expect an ack and should discard the message on delivery. I.e.
>> its an unreliable mode of delivery[1] rather than a signal to the client
>> library to automatically acknowledge on receiving a message.
>
> I just read the article too, very nice.
>
> Gordon's right about the no_ack flag, this sentence:
>
>  If you set the no_ack argument to true, then py-amqplib will
>  automatically send the acknowledgement immediately for you.
>
> should probably instead say something like what Gordon mentions above - it's
> the broker that acts differently based on that flag, not the client library.
>
> The only other thing I noticed was this section:
>
> ----
> Now, there's two methods of getting messages out of the queue. The first is
> to call chan.basic_get() to pull the next message off the queue:
>
>   1. msg = chan.basic_get("po_box")
>   2. print msg.body()
>   3. chan.basic_ack(msg.delivery_tag)
> ----
>
> If there isn't a message waiting in the queue when line 1 executes, then msg
> is set to None and line 2 will die since None does not have a "body"
> attribute.  Also, body is not a function to call, it's just a string, so
> this would be more appropriate:
>
>    msg = chan.basic_get("po_box")
>    if msg is not None:
>        print msg.body
>        chan.basic_ack(msg.delivery_tag)
>
> ================
>
>        Barry
>
>
>



From jasonjwwilliams at gmail.com  Thu Jan 15 00:58:53 2009
From: jasonjwwilliams at gmail.com (Jason J. W. Williams)
Date: Wed, 14 Jan 2009 17:58:53 -0700
Subject: [rabbitmq-discuss] AMQP & Python Write-Up
In-Reply-To: <496E8340.5000700@barryp.org>
References: <3b949f090901131806k2d16f98dwf61e652c7434c157@mail.gmail.com>
	<496DEB04.4060707@redhat.com> <496E8340.5000700@barryp.org>
Message-ID: <3b949f090901141658w2b1e8052nf87545403199ed18@mail.gmail.com>

Barry & Gordon,

Entry has been updated with the correct no_ack explanation. Regarding
the None return on "no message waiting" from basic_get(), I chose to
explain that in words, rather than trap it out in the code to maintain
clarity.

http://blogs.digitar.com/jjww/2009/01/rabbits-and-warrens/

Thank you very much for your help.

-J

On Wed, Jan 14, 2009 at 5:28 PM, Barry Pederson <bp at barryp.org> wrote:
> Gordon Sim wrote:
>>
>> Jason J. W. Williams wrote:
>>>
>>> I've written up a quick start on the basics of AMQP and using it in
>>> Python, that is the kind of document I wished I'd been able to find in
>>> one place: http://blogs.digitar.com/jjww/2009/01/rabbits-and-warrens/
>>>
>>> It's probably laced with errors, and I'd appreciate any
>>> feedback/corrections.
>>
>> Nice article!
>>
>> I am not that familiar with py-amqplib but the no_ack argument to
>> basic_consume/basic_get is defined in the AMQP spec to mean that the server
>> should not expect an ack and should discard the message on delivery. I.e.
>> its an unreliable mode of delivery[1] rather than a signal to the client
>> library to automatically acknowledge on receiving a message.
>
> I just read the article too, very nice.
>
> Gordon's right about the no_ack flag, this sentence:
>
>  If you set the no_ack argument to true, then py-amqplib will
>  automatically send the acknowledgement immediately for you.
>
> should probably instead say something like what Gordon mentions above - it's
> the broker that acts differently based on that flag, not the client library.
>
> The only other thing I noticed was this section:
>
> ----
> Now, there's two methods of getting messages out of the queue. The first is
> to call chan.basic_get() to pull the next message off the queue:
>
>   1. msg = chan.basic_get("po_box")
>   2. print msg.body()
>   3. chan.basic_ack(msg.delivery_tag)
> ----
>
> If there isn't a message waiting in the queue when line 1 executes, then msg
> is set to None and line 2 will die since None does not have a "body"
> attribute.  Also, body is not a function to call, it's just a string, so
> this would be more appropriate:
>
>    msg = chan.basic_get("po_box")
>    if msg is not None:
>        print msg.body
>        chan.basic_ack(msg.delivery_tag)
>
> ================
>
>        Barry
>
>
>



From holger at wizards.de  Thu Jan 15 01:20:21 2009
From: holger at wizards.de (=?ISO-8859-1?Q?Holger_Hoffst=E4tte?=)
Date: Thu, 15 Jan 2009 02:20:21 +0100
Subject: [rabbitmq-discuss] Miscellaneous Question
In-Reply-To: <496E825A.5000708@lshift.net>
References: <3b949f090901141417q5d79429ewe9732a10a68d38@mail.gmail.com>	<3b949f090901141423i6346f93ew76c2be27c278d4e9@mail.gmail.com>	<269388e30901141506o21d57be0w77883c6b68687258@mail.gmail.com>	<3b949f090901141510r7a11c2e0g2763e526b504afaa@mail.gmail.com>	<269388e30901141518w7a6c24cfh8394d6fd1d12a028@mail.gmail.com>	<3b949f090901141518r61fcd332w7b4c05d593ddcedc@mail.gmail.com>	<269388e30901141540x7df4bc36nf6b861c043ae0d78@mail.gmail.com>	<3b949f090901141546w70183804qcf7babec570cc148@mail.gmail.com>	<496E7AE8.8040707@lshift.net>	<3b949f090901141556l3fe9e12aj17efeaa8d84a210@mail.gmail.com>	<496E7FB2.5060503@lshift.net>
	<496E825A.5000708@lshift.net>
Message-ID: <496E8F55.1080206@wizards.de>

Tony Garnock-Jones wrote:
> I frequently open my laptop at home, open an xterm, and see 
> "tonyg at truth" instead of "tonyg at walk"; walk is the name of my OS X 
> laptop, truth of my linux desktop. When this happens, truth hasn't been 
> running, and instead I get the IP address that is *usually* assigned to 
> truth.

You can usually tell DHCP to assign different IPs based on the MAC
address, so truth will always get the IP truth (so to speak).

Holger



From dialtone at gmail.com  Thu Jan 15 01:47:38 2009
From: dialtone at gmail.com (Valentino Volonghi)
Date: Wed, 14 Jan 2009 17:47:38 -0800
Subject: [rabbitmq-discuss] Erlang client not working?
Message-ID: <397E3E57-9977-4F94-968B-14E7E2E5D4D6@gmail.com>

I'm not sure what's going on but...

I'm trying to send messages using the rabbitmq-erlang-client using  
these lines:

             Properties = #'P_basic'{
                 content_type = <<"application/octet-stream">>,
                 delivery_mode = 2,
                 priority = 0
             },
             lib_amqp:publish(Broker, <<"flow">>, list_to_binary(Key),  
Payload, Properties)

But then I receive this error:

Channel 1 is shutting down due to: {badarg,
                                     [{erlang,size,
                                       ["2009:1:15:1:37:50|| 
BOIXKZLU35DNVNIAJG5QX3||FB2ECVNZMRHUPP65V3VIDU|| 
d57564110fee0b631a95d9adceb713cc.ev||US||USA||United States||CA|| 
37.79150000000001||-122.4089||415||807||San Francisco||94108|| 
127.0.0.1|||| 
TW96aWxsYS81LjAgKE1hY2ludG9zaDsgVTsgSW50ZWwgTWFjIE9TIFggMTBfNV82OyBlbi11cykgQXBwbGVXZWJLaXQvNTI1LjI3LjEgKEtIVE1MLCBsaWtlIEdlY2tvKSBWZXJzaW9uLzMuMi4xIFNhZmFyaS81MjUuMjcuMQ 
==||ff32ff680112993033bc3fde17d49f5e"]},
                                      {rabbit_binary_generator,
                                       build_content_frames,5},
                                      {rabbit_binary_generator,
                                       build_simple_content_frames,3},
                                      {rabbit_writer,assemble_frames,4},
                                      {rabbit_writer,
                                       internal_send_command_async,5},
                                      {rabbit_writer,handle_message,2},
                                      {rabbit_writer,mainloop,1}]}

It only does that for some messages apparently though, those that are  
delivered then raise
this error on the consumer side (that still forwards messages):

** Reason for termination ==
** {noproc,
        {gen_server,call,
            [<0.219.0>,
             {call,
                 {'basic.publish',1,<<"flow">>,
                      
<<"event.BOIXKZLU35DNVNIAJG5QX3.FB2ECVNZMRHUPP65V3VIDU">>,
                     false,false},
                 {content,60,
                     {'P_basic',<<"application/octet- 
stream">>,undefined,
                         undefined, 
2,0,undefined,undefined,undefined,undefined,
                          
undefined,undefined,undefined,undefined,undefined},
                     none,
                     ["2009:1:15:1:37:52||BOIXKZLU35DNVNIAJG5QX3|| 
FB2ECVNZMRHUPP65V3VIDU||d57564110fee0b631a95d9adceb713cc.ev||US||USA|| 
United States||CA||37.79150000000001||-122.4089||415||807||San  
Francisco||94108||127.0.0.1|||| 
TW96aWxsYS81LjAgKE1hY2ludG9zaDsgVTsgSW50ZWwgTWFjIE9TIFggMTBfNV82OyBlbi11cykgQXBwbGVXZWJLaXQvNTI1LjI3LjEgKEtIVE1MLCBsaWtlIEdlY2tvKSBWZXJzaW9uLzMuMi4xIFNhZmFyaS81MjUuMjcuMQ 
==||52dd6625acfffde415c6b9da26f6be68"]}}]}}

It seems that something is mixing the arguments moving the Payload  
where a Size should be.

I'm using:

rabbitmq-server (default branch):
changeset:   727:89756e9329f4
tag:         tip
parent:      718:0a1371be4f98
parent:      726:97e40f6bb50a
user:        Matthias Radestock <matthias at lshift.net>
date:        Mon Jan 12 17:24:05 2009 +0000
summary:     merge v1_5_1 into default

rabbitmq-erlang-client (default branch):
changeset:   213:437d0e4d66c8
branch:      bug20103
tag:         tip
user:        Ben Hood <0x6e6562 at gmail.com>
date:        Fri Jan 09 18:28:35 2009 +0000
summary:     Switched over to gen_server2 handling


-- 
Valentino Volonghi aka Dialtone
Now running MacOS X 10.5
Home Page: http://www.twisted.it
http://www.adroll.com

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20090114/c9cd333f/attachment.htm 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: PGP.sig
Type: application/pgp-signature
Size: 194 bytes
Desc: This is a digitally signed message part
Url : http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20090114/c9cd333f/attachment.pgp 

From dialtone at gmail.com  Thu Jan 15 02:08:54 2009
From: dialtone at gmail.com (Valentino Volonghi)
Date: Wed, 14 Jan 2009 18:08:54 -0800
Subject: [rabbitmq-discuss] Erlang client not working?
In-Reply-To: <397E3E57-9977-4F94-968B-14E7E2E5D4D6@gmail.com>
References: <397E3E57-9977-4F94-968B-14E7E2E5D4D6@gmail.com>
Message-ID: <0D347655-DBBD-4596-B500-60F0FA23A75D@gmail.com>


On Jan 14, 2009, at 5:47 PM, Valentino Volonghi wrote:

> I'm not sure what's going on but...
>
> I'm trying to send messages using the rabbitmq-erlang-client using  
> these lines:


My bad, I was sending a list rather than a binary...

-- 
Valentino Volonghi aka Dialtone
Now running MacOS X 10.5
Home Page: http://www.twisted.it
http://www.adroll.com

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20090114/6946a8e2/attachment.htm 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: PGP.sig
Type: application/pgp-signature
Size: 194 bytes
Desc: This is a digitally signed message part
Url : http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20090114/6946a8e2/attachment.pgp 

From mike at middlesoft.co.uk  Thu Jan 15 03:59:44 2009
From: mike at middlesoft.co.uk (Michael Barker)
Date: Thu, 15 Jan 2009 16:59:44 +1300
Subject: [rabbitmq-discuss] [PROBLEM] .NET Client fails with
	OperationInterruptedException
In-Reply-To: <496E06E1.50706@lshift.net>
References: <80d1dfde0901101741m677494f2j1ac54abf75e01863@mail.gmail.com>
	<496A165F.4050702@lshift.net>
	<80d1dfde0901112200oa3a469bhf01f3081e8dc490e@mail.gmail.com>
	<496B10BC.8000701@lshift.net> <496B4375.5020605@lshift.net>
	<80d1dfde0901121005v5e73da76jcbe5913876c86228@mail.gmail.com>
	<496E06E1.50706@lshift.net>
Message-ID: <80d1dfde0901141959r4422b9f5qc6bc184f3fea6254@mail.gmail.com>

Hi Hubert,

No problem, if you need me to test a pre-release version let me know
(within the next 2 weeks, as I am heading off on holiday after then).

Regards,
Michael Barker.

On Thu, Jan 15, 2009 at 4:38 AM, Hubert Plociniczak <hubert at lshift.net> wrote:
> Hi,
>
> we managed to reproduce the problem you are having. It seems to be
> time-sensitive and doesn't happen on every machine. I will look into it.
>
> Thanks for reporting that,
> hubert
>
>
> Michael Barker wrote:
>>>>
>>>> Would it be possible for you to upgrade the server to 1.5.0? That way we
>>>> can rule out any problems that have been fixed in that release.
>>>>
>>
>> I get the exact same behaviour with rabbitmq-server 1.5, so it
>> probably a client issue.
>>
>>
>>>
>>> Also, are you perhaps running your experiments on a virtualised platform?
>>> If
>>> so, could it be that the system time is fluctuating?
>>>
>>
>> No, I am running Ubuntu natively on my laptop.
>>
>> Mike.
>>
>> _______________________________________________
>> rabbitmq-discuss mailing list
>> rabbitmq-discuss at lists.rabbitmq.com
>> http://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss
>>
>
>
> --
>  [][][] Hubert Plociniczak
>   [][] LShift Ltd
>  []  [] www.lshift.net
>
>



From tonyg at lshift.net  Thu Jan 15 04:01:50 2009
From: tonyg at lshift.net (Tony Garnock-Jones)
Date: Thu, 15 Jan 2009 17:01:50 +1300
Subject: [rabbitmq-discuss] Miscellaneous Question
In-Reply-To: <496E8F55.1080206@wizards.de>
References: <3b949f090901141417q5d79429ewe9732a10a68d38@mail.gmail.com>	<3b949f090901141423i6346f93ew76c2be27c278d4e9@mail.gmail.com>	<269388e30901141506o21d57be0w77883c6b68687258@mail.gmail.com>	<3b949f090901141510r7a11c2e0g2763e526b504afaa@mail.gmail.com>	<269388e30901141518w7a6c24cfh8394d6fd1d12a028@mail.gmail.com>	<3b949f090901141518r61fcd332w7b4c05d593ddcedc@mail.gmail.com>	<269388e30901141540x7df4bc36nf6b861c043ae0d78@mail.gmail.com>	<3b949f090901141546w70183804qcf7babec570cc148@mail.gmail.com>	<496E7AE8.8040707@lshift.net>	<3b949f090901141556l3fe9e12aj17efeaa8d84a210@mail.gmail.com>	<496E7FB2.5060503@lshift.net>	<496E825A.5000708@lshift.net>
	<496E8F55.1080206@wizards.de>
Message-ID: <496EB52E.3060601@lshift.net>

Holger Hoffst?tte wrote:
> You can usually tell DHCP to assign different IPs based on the MAC
> address, so truth will always get the IP truth (so to speak).

Correct, in cases where DHCP isn't being run by a tinker-toy wireless 
router in the corner in the living room...




From tonyg at lshift.net  Thu Jan 15 04:07:34 2009
From: tonyg at lshift.net (Tony Garnock-Jones)
Date: Thu, 15 Jan 2009 17:07:34 +1300
Subject: [rabbitmq-discuss] Headers exchange
Message-ID: <496EB686.2010805@lshift.net>

I've implemented the headers exchange on a branch of the server. It has 
NOT been QA'd yet, and so has not been merged into the default branch. 
If QA completes successfully by the time of next release, the next 
release will have the feature.

For those who would like to experiment with it:

   hg clone http://hg.rabbitmq.com/rabbitmq-server/
   hg clone http://hg.rabbitmq.com/rabbitmq-codegen/
   cd rabbitmq-server
   hg up bug20152
   make
   make run

Note that if you have an existing RabbitMQ database, you will need to 
clear it out in order for the code to decide to create the built in 
"amq.match"/"amq.headers" exchanges:

   make cleandb
   make run

Regards,
   Tony



From jasonjwwilliams at gmail.com  Thu Jan 15 05:33:59 2009
From: jasonjwwilliams at gmail.com (Jason J. W. Williams)
Date: Wed, 14 Jan 2009 22:33:59 -0700
Subject: [rabbitmq-discuss] Miscellaneous Question
In-Reply-To: <496E7353.2060500@lshift.net>
References: <3b949f090901141417q5d79429ewe9732a10a68d38@mail.gmail.com>
	<496E7128.4070607@lshift.net>
	<3b949f090901141513n100f7a53w18a466aa8fdd2de@mail.gmail.com>
	<496E7353.2060500@lshift.net>
Message-ID: <3b949f090901142133n3742a494gaf4d883415d09dd7@mail.gmail.com>

This sequence works perfectly. The persisted messages are replayed as
expected, despite recreating the Mnesia database. The only enhancement
I can think of is to store a copy of the queues,exchanges,bindings
need to replay the persister log in separate file from the Mnesia
database. This would enable replay/rebuild of the queues before all
the consumer apps have come online and recreated their queues.

-J

On Wed, Jan 14, 2009 at 4:20 PM, Matthias Radestock <matthias at lshift.net> wrote:
> Jason,
>
> Jason J. W. Williams wrote:
>>
>> Thanks for the info and links. I'll read up on Mnesia. Just for future
>> reference, if one were to carefully delete only the Mnesia DB Files
>> and leave the message log, would it be possible to still use the log
>> after the queues/exchanges/bindings were recreated?
>
> That's an interesting thought. You could
>
> 1) move the persister log out of the way (rabbit_persister.LOG*)
> 2) delete the mnesia dir
> 3) start rabbit (and thus get a fresh mnesia dir and persister log)
> 4) recreate the durable exchanges/queues/bindings
> 5) stop rabbit
> 7) replace the new persister log with the old one
> 8) restart rabbit
>
> Might work. Haven't tried it though.
>
>
> Matthias.
>



From alexis.richardson at cohesiveft.com  Thu Jan 15 11:57:41 2009
From: alexis.richardson at cohesiveft.com (Alexis Richardson)
Date: Thu, 15 Jan 2009 11:57:41 +0000
Subject: [rabbitmq-discuss] a note on running qpid python tests
Message-ID: <167204d20901150357m2031aba2t8e17e178626b5611@mail.gmail.com>

Hi folks,

I recently came across this blog post:
http://dougsharp-work.blogspot.com/2009/01/rabbitmq.html

In it Doug Sharp reports some results from running the Qpid Python
test suite, with RabbitMQ.  Since Doug's blog does not accept comments
from passers-by, I thought I would post a short note on list.

This page reports what a RabbitMQ user should currently expect when
running the Qpid Python test suite:
http://www.rabbitmq.com/interoperability.html

General AMQP conformance is described here:
http://www.rabbitmq.com/compatibility.html

As usual: any reports of behaviour that you do not expect, or are not
happy with, are welcome here!

Cheers,

alexis



From tim+rabbitmq.com at coote.org  Thu Jan 15 11:43:04 2009
From: tim+rabbitmq.com at coote.org (Tim Coote)
Date: Thu, 15 Jan 2009 11:43:04 +0000
Subject: [rabbitmq-discuss] AMQP & Python Write-Up
In-Reply-To: <269388e30901141512t769b40f8ifc181798230f57e2@mail.gmail.com>
References: <A2C93102-2102-4618-ABA2-84D5355ABA69@coote.org>
	<269388e30901141512t769b40f8ifc181798230f57e2@mail.gmail.com>
Message-ID: <01295F17-BA4D-4442-A9F8-C48B6A13BFB3@coote.org>

Hi Ben
you are quite correct with the central tenet.  It's the I of ACID.

My pov is that, as someone who controls the use of messaging systems,  
I'd rather have a mechanism that enforces good behaviour than have to  
rely on programmatic style. This is even if I'm writing the code  
myself. I want it right (and simple) before I want it fast, as 'right'  
is often fast enough, anyway. (note I'm talking here about the code  
using rabbitMQ, not rabbitMQ itself).  I expect much sloppier code  
using the messaging layer than in the messaging layer. That's why  
kernel code costs 10x as much as business application level code.

Surely it's more difficult to get interleaved updates if the work is  
carried out in processes rather than threads, isn't it?  If it's  
possible to abuse the command isolation, even using processes, is  
there a way for me to enforce the isolation?

Tim
On 14 Jan 2009, at 23:12, Ben Hood wrote:

>
> Tim,
>
> On Wed, Jan 14, 2009 at 11:04 PM, Tim Coote <tim+rabbitmq.com at coote.org 
> > wrote:
>>
> Be that as it may, the central tenant is to not interleave different
> command streams in one channel.
>
> Whether this is done by thread or process confinement (or even if you
> are a kernel hacker and you know that in reality there is no such
> thing as a thread or a process) is irrelevant.
>
> The broker has no visibility into what client side objects are shared,
> nor does it care.
>
> The broker is just sitting on the other end of a wire with the mere
> expectation that each individual stream of commands is stateful and
> coherent.
>
> HTH,
>
> Ben
>

Tim Coote
tim at coote.org
vincit veritas






From 0x6e6562 at gmail.com  Thu Jan 15 15:01:19 2009
From: 0x6e6562 at gmail.com (Ben Hood)
Date: Thu, 15 Jan 2009 15:01:19 +0000
Subject: [rabbitmq-discuss] Rabbitmq list archives question
In-Reply-To: <845634110901150636t3bc3e510m4c4e372132c7095d@mail.gmail.com>
References: <845634110901150636t3bc3e510m4c4e372132c7095d@mail.gmail.com>
Message-ID: <269388e30901150701m707ef8dch1415cc9422363f9a@mail.gmail.com>

John,

On Thu, Jan 15, 2009 at 2:36 PM, John Arnold <jarnold at sydrom.com> wrote:
> Ben
>
> Two questions:
> 1. Is there any easy way to search the archives?

Apart from google, I think that Nabble and trapexit may index the
archives. I don't know because I've got everything indexed in Gmail.

> 2. Can I use rabbitmqctl to create Exchanges, or shall I use the answer to
> (1) to find out? :-)

No. The design decision behind this was not to duplicate functionality
that is already available in wire clients - you could for example use
the Python or Ruby clients interactively or via a script.

BTW do you not subscribe to the list?

HTH,

Ben



From dmitriy.samovskiy at cohesiveft.com  Thu Jan 15 15:35:21 2009
From: dmitriy.samovskiy at cohesiveft.com (Dmitriy Samovskiy)
Date: Thu, 15 Jan 2009 09:35:21 -0600
Subject: [rabbitmq-discuss] Rabbitmq list archives question
In-Reply-To: <269388e30901150701m707ef8dch1415cc9422363f9a@mail.gmail.com>
References: <845634110901150636t3bc3e510m4c4e372132c7095d@mail.gmail.com>
	<269388e30901150701m707ef8dch1415cc9422363f9a@mail.gmail.com>
Message-ID: <496F57B9.2050005@cohesiveft.com>



Ben Hood wrote:
> John,
> 
> On Thu, Jan 15, 2009 at 2:36 PM, John Arnold <jarnold at sydrom.com> wrote:
>> Ben
>>
>> Two questions:
>> 1. Is there any easy way to search the archives?
> 
> Apart from google, I think that Nabble and trapexit may index the
> archives. I don't know because I've got everything indexed in Gmail.
> 

http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/2008-September/001735.html



From jarnold at sydrom.com  Thu Jan 15 15:42:41 2009
From: jarnold at sydrom.com (John Arnold)
Date: Thu, 15 Jan 2009 10:42:41 -0500
Subject: [rabbitmq-discuss] Rabbitmq list archives question
In-Reply-To: <496F57B9.2050005@cohesiveft.com>
References: <845634110901150636t3bc3e510m4c4e372132c7095d@mail.gmail.com>
	<269388e30901150701m707ef8dch1415cc9422363f9a@mail.gmail.com>
	<496F57B9.2050005@cohesiveft.com>
Message-ID: <845634110901150742l5ad5fb9bua69150d31325dafa@mail.gmail.com>

Cool!
Thanks guys

On Thu, Jan 15, 2009 at 10:35 AM, Dmitriy Samovskiy <
dmitriy.samovskiy at cohesiveft.com> wrote:

>
>
> Ben Hood wrote:
>
>> John,
>>
>> On Thu, Jan 15, 2009 at 2:36 PM, John Arnold <jarnold at sydrom.com> wrote:
>>
>>> Ben
>>>
>>> Two questions:
>>> 1. Is there any easy way to search the archives?
>>>
>>
>> Apart from google, I think that Nabble and trapexit may index the
>> archives. I don't know because I've got everything indexed in Gmail.
>>
>>
>
> http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/2008-September/001735.html
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20090115/68831811/attachment.htm 

From 0x6e6562 at gmail.com  Thu Jan 15 16:28:33 2009
From: 0x6e6562 at gmail.com (0x6e6562 at gmail.com)
Date: Thu, 15 Jan 2009 16:28:33 +0000
Subject: [rabbitmq-discuss] Rabbitmq list archives question
In-Reply-To: <845634110901150742l5ad5fb9bua69150d31325dafa@mail.gmail.com>
References: <845634110901150636t3bc3e510m4c4e372132c7095d@mail.gmail.com>
	<269388e30901150701m707ef8dch1415cc9422363f9a@mail.gmail.com>
	<496F57B9.2050005@cohesiveft.com>
	<845634110901150742l5ad5fb9bua69150d31325dafa@mail.gmail.com>
Message-ID: <269388e30901150828w2f4441d7ua5ea43b8f19bd60@mail.gmail.com>

On 1/15/09, John Arnold <jarnold at sydrom.com> wrote:
> Cool!
> Thanks guys

That's the power of pub/sub over p2p :-)
>
> On Thu, Jan 15, 2009 at 10:35 AM, Dmitriy Samovskiy <
> dmitriy.samovskiy at cohesiveft.com> wrote:
>
>>
>>
>> Ben Hood wrote:
>>
>>> John,
>>>
>>> On Thu, Jan 15, 2009 at 2:36 PM, John Arnold <jarnold at sydrom.com> wrote:
>>>
>>>> Ben
>>>>
>>>> Two questions:
>>>> 1. Is there any easy way to search the archives?
>>>>
>>>
>>> Apart from google, I think that Nabble and trapexit may index the
>>> archives. I don't know because I've got everything indexed in Gmail.
>>>
>>>
>>
>> http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/2008-September/001735.html
>>
>



From 0x6e6562 at gmail.com  Thu Jan 15 16:43:33 2009
From: 0x6e6562 at gmail.com (0x6e6562 at gmail.com)
Date: Thu, 15 Jan 2009 16:43:33 +0000
Subject: [rabbitmq-discuss] Fwd:  Headers exchange
In-Reply-To: <496EB686.2010805@lshift.net>
References: <496EB686.2010805@lshift.net>
Message-ID: <269388e30901150843u4a14dd98j766ddc38b1784077@mail.gmail.com>

This has been qa'ed and is now in the main tree - as Tony has pointed
out, this will be in the next major release.

Ben

---------- Forwarded message ----------
From: Tony Garnock-Jones <tonyg at lshift.net>
Date: Thu, 15 Jan 2009 17:07:34 +1300
Subject: [rabbitmq-discuss] Headers exchange
To: rabbitmq <rabbitmq-discuss at lists.rabbitmq.com>

I've implemented the headers exchange on a branch of the server. It has
NOT been QA'd yet, and so has not been merged into the default branch.
If QA completes successfully by the time of next release, the next
release will have the feature.

For those who would like to experiment with it:

   hg clone http://hg.rabbitmq.com/rabbitmq-server/
   hg clone http://hg.rabbitmq.com/rabbitmq-codegen/
   cd rabbitmq-server
   hg up bug20152
   make
   make run

Note that if you have an existing RabbitMQ database, you will need to
clear it out in order for the code to decide to create the built in
"amq.match"/"amq.headers" exchanges:

   make cleandb
   make run

Regards,
   Tony

_______________________________________________
rabbitmq-discuss mailing list
rabbitmq-discuss at lists.rabbitmq.com
http://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss



From jasonjwwilliams at gmail.com  Thu Jan 15 21:41:12 2009
From: jasonjwwilliams at gmail.com (Jason J. W. Williams)
Date: Thu, 15 Jan 2009 14:41:12 -0700
Subject: [rabbitmq-discuss] basic.get Load Balancing
Message-ID: <3b949f090901151341s4cee88aal2cae9ac2667cb585@mail.gmail.com>

Hi Y'all,

Quick question. Since basic.get (unlike basic.consume) doesn't
register with a queue, basic.get requests are first-come first-serve
no? Rather than load balanced as with basic.consume?

-J



From tonyg at lshift.net  Thu Jan 15 21:52:52 2009
From: tonyg at lshift.net (Tony Garnock-Jones)
Date: Fri, 16 Jan 2009 10:52:52 +1300
Subject: [rabbitmq-discuss] basic.get Load Balancing
In-Reply-To: <3b949f090901151341s4cee88aal2cae9ac2667cb585@mail.gmail.com>
References: <3b949f090901151341s4cee88aal2cae9ac2667cb585@mail.gmail.com>
Message-ID: <496FB034.70008@lshift.net>

Jason J. W. Williams wrote:
> Quick question. Since basic.get (unlike basic.consume) doesn't
> register with a queue, basic.get requests are first-come first-serve
> no? Rather than load balanced as with basic.consume?

That's right.


Tony




From jasonjwwilliams at gmail.com  Thu Jan 15 21:57:03 2009
From: jasonjwwilliams at gmail.com (Jason J. W. Williams)
Date: Thu, 15 Jan 2009 14:57:03 -0700
Subject: [rabbitmq-discuss] basic.get Load Balancing
In-Reply-To: <496FB034.70008@lshift.net>
References: <3b949f090901151341s4cee88aal2cae9ac2667cb585@mail.gmail.com>
	<496FB034.70008@lshift.net>
Message-ID: <3b949f090901151357k434729b5o282d4bab7e9e68a8@mail.gmail.com>

Thank you. :-)

-J

On Thu, Jan 15, 2009 at 2:52 PM, Tony Garnock-Jones <tonyg at lshift.net> wrote:
> Jason J. W. Williams wrote:
>>
>> Quick question. Since basic.get (unlike basic.consume) doesn't
>> register with a queue, basic.get requests are first-come first-serve
>> no? Rather than load balanced as with basic.consume?
>
> That's right.
>
>
> Tony
>
>



From jasonjwwilliams at gmail.com  Thu Jan 15 22:13:21 2009
From: jasonjwwilliams at gmail.com (Jason J. W. Williams)
Date: Thu, 15 Jan 2009 15:13:21 -0700
Subject: [rabbitmq-discuss] Load balancing/ack interaction.
Message-ID: <3b949f090901151413q3f42d577o17f3375fe676645b@mail.gmail.com>

It seems like RabbitMQ will continue to issue consume notifications to
registered consumers that haven't yet ack'd messages they have already
received...is this correct?

-J



From darien at kindlund.com  Thu Jan 15 22:17:00 2009
From: darien at kindlund.com (Darien Kindlund)
Date: Thu, 15 Jan 2009 17:17:00 -0500
Subject: [rabbitmq-discuss] Fwd: Headers exchange
In-Reply-To: <269388e30901150843u4a14dd98j766ddc38b1784077@mail.gmail.com>
References: <496EB686.2010805@lshift.net>
	<269388e30901150843u4a14dd98j766ddc38b1784077@mail.gmail.com>
Message-ID: <50c8ffe90901151417u69bce9fcha8af722bdcd01c8c@mail.gmail.com>

Tony & Ben,

Thanks very much for all your help regarding this issue as well as my
other questions.  I will certainly try out the headers exchange code
once I get an initial set of AMQP-aware clients prototyped.

Regards,
-- Darien

On Thu, Jan 15, 2009 at 11:43 AM,  <0x6e6562 at gmail.com> wrote:
> This has been qa'ed and is now in the main tree - as Tony has pointed
> out, this will be in the next major release.
>
> Ben
>
> ---------- Forwarded message ----------
> From: Tony Garnock-Jones <tonyg at lshift.net>
> Date: Thu, 15 Jan 2009 17:07:34 +1300
> Subject: [rabbitmq-discuss] Headers exchange
> To: rabbitmq <rabbitmq-discuss at lists.rabbitmq.com>
>
> I've implemented the headers exchange on a branch of the server. It has
> NOT been QA'd yet, and so has not been merged into the default branch.
> If QA completes successfully by the time of next release, the next
> release will have the feature.
>
> For those who would like to experiment with it:
>
>   hg clone http://hg.rabbitmq.com/rabbitmq-server/
>   hg clone http://hg.rabbitmq.com/rabbitmq-codegen/
>   cd rabbitmq-server
>   hg up bug20152
>   make
>   make run
>
> Note that if you have an existing RabbitMQ database, you will need to
> clear it out in order for the code to decide to create the built in
> "amq.match"/"amq.headers" exchanges:
>
>   make cleandb
>   make run
>
> Regards,
>   Tony
>
> _______________________________________________
> rabbitmq-discuss mailing list
> rabbitmq-discuss at lists.rabbitmq.com
> http://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss
>
> _______________________________________________
> rabbitmq-discuss mailing list
> rabbitmq-discuss at lists.rabbitmq.com
> http://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss
>



From 0x6e6562 at gmail.com  Thu Jan 15 22:30:54 2009
From: 0x6e6562 at gmail.com (Ben Hood)
Date: Thu, 15 Jan 2009 22:30:54 +0000
Subject: [rabbitmq-discuss] Fwd: Headers exchange
In-Reply-To: <50c8ffe90901151417u69bce9fcha8af722bdcd01c8c@mail.gmail.com>
References: <496EB686.2010805@lshift.net>
	<269388e30901150843u4a14dd98j766ddc38b1784077@mail.gmail.com>
	<50c8ffe90901151417u69bce9fcha8af722bdcd01c8c@mail.gmail.com>
Message-ID: <269388e30901151430u32458e67r2dabf39220c4752e@mail.gmail.com>

Darien,

On Thu, Jan 15, 2009 at 10:17 PM, Darien Kindlund <darien at kindlund.com> wrote:
> Thanks very much for all your help regarding this issue as well as my
> other questions.  I will certainly try out the headers exchange code
> once I get an initial set of AMQP-aware clients prototyped.

Don't thank me, it was Tony who implemented the exchange and Matthias
who did the QA work.

Ben



From 0x6e6562 at gmail.com  Thu Jan 15 22:32:41 2009
From: 0x6e6562 at gmail.com (Ben Hood)
Date: Thu, 15 Jan 2009 22:32:41 +0000
Subject: [rabbitmq-discuss] Load balancing/ack interaction.
In-Reply-To: <3b949f090901151413q3f42d577o17f3375fe676645b@mail.gmail.com>
References: <3b949f090901151413q3f42d577o17f3375fe676645b@mail.gmail.com>
Message-ID: <269388e30901151432j5e4ee631h270c08d09deb424b@mail.gmail.com>

Jason,

On Thu, Jan 15, 2009 at 10:13 PM, Jason J. W. Williams
<jasonjwwilliams at gmail.com> wrote:
> It seems like RabbitMQ will continue to issue consume notifications to
> registered consumers that haven't yet ack'd messages they have already
> received...is this correct?

Are you talking about the subscription lifecyle, i.e. how the
basic.consume/basic.consume_ok cycle works?

Ben



From jasonjwwilliams at gmail.com  Thu Jan 15 22:33:51 2009
From: jasonjwwilliams at gmail.com (Jason J. W. Williams)
Date: Thu, 15 Jan 2009 15:33:51 -0700
Subject: [rabbitmq-discuss] Load balancing/ack interaction.
In-Reply-To: <269388e30901151432j5e4ee631h270c08d09deb424b@mail.gmail.com>
References: <3b949f090901151413q3f42d577o17f3375fe676645b@mail.gmail.com>
	<269388e30901151432j5e4ee631h270c08d09deb424b@mail.gmail.com>
Message-ID: <3b949f090901151433r154d490cu8cc74afe3a679972@mail.gmail.com>

I noticed that consumer apps who had not yet ack'd the message they
had received would receive new messages. I had assumed they wouldn't
be assigned a new message from the queue until they had ack'd what
they had already received.

-J

On Thu, Jan 15, 2009 at 3:32 PM, Ben Hood <0x6e6562 at gmail.com> wrote:
> Jason,
>
> On Thu, Jan 15, 2009 at 10:13 PM, Jason J. W. Williams
> <jasonjwwilliams at gmail.com> wrote:
>> It seems like RabbitMQ will continue to issue consume notifications to
>> registered consumers that haven't yet ack'd messages they have already
>> received...is this correct?
>
> Are you talking about the subscription lifecyle, i.e. how the
> basic.consume/basic.consume_ok cycle works?
>
> Ben
>



From sustrik at imatix.com  Thu Jan 15 22:37:25 2009
From: sustrik at imatix.com (Martin Sustrik)
Date: Thu, 15 Jan 2009 23:37:25 +0100
Subject: [rabbitmq-discuss] Load balancing/ack interaction.
In-Reply-To: <3b949f090901151433r154d490cu8cc74afe3a679972@mail.gmail.com>
References: <3b949f090901151413q3f42d577o17f3375fe676645b@mail.gmail.com>	<269388e30901151432j5e4ee631h270c08d09deb424b@mail.gmail.com>
	<3b949f090901151433r154d490cu8cc74afe3a679972@mail.gmail.com>
Message-ID: <496FBAA5.8060906@imatix.com>

In AMQP/0-8 protocol there's "prefetch size" parameter, specifying how 
many messages may broker pass to the client without receiving an ack.

Martin

Jason J. W. Williams wrote:
> I noticed that consumer apps who had not yet ack'd the message they
> had received would receive new messages. I had assumed they wouldn't
> be assigned a new message from the queue until they had ack'd what
> they had already received.
> 
> -J
> 
> On Thu, Jan 15, 2009 at 3:32 PM, Ben Hood <0x6e6562 at gmail.com> wrote:
>> Jason,
>>
>> On Thu, Jan 15, 2009 at 10:13 PM, Jason J. W. Williams
>> <jasonjwwilliams at gmail.com> wrote:
>>> It seems like RabbitMQ will continue to issue consume notifications to
>>> registered consumers that haven't yet ack'd messages they have already
>>> received...is this correct?
>> Are you talking about the subscription lifecyle, i.e. how the
>> basic.consume/basic.consume_ok cycle works?
>>
>> Ben
>>
> 
> _______________________________________________
> rabbitmq-discuss mailing list
> rabbitmq-discuss at lists.rabbitmq.com
> http://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss




From 0x6e6562 at gmail.com  Thu Jan 15 22:41:10 2009
From: 0x6e6562 at gmail.com (Ben Hood)
Date: Thu, 15 Jan 2009 22:41:10 +0000
Subject: [rabbitmq-discuss] Load balancing/ack interaction.
In-Reply-To: <3b949f090901151433r154d490cu8cc74afe3a679972@mail.gmail.com>
References: <3b949f090901151413q3f42d577o17f3375fe676645b@mail.gmail.com>
	<269388e30901151432j5e4ee631h270c08d09deb424b@mail.gmail.com>
	<3b949f090901151433r154d490cu8cc74afe3a679972@mail.gmail.com>
Message-ID: <269388e30901151441k765c116cg723a50a5b56819f1@mail.gmail.com>

Jason,

On Thu, Jan 15, 2009 at 10:33 PM, Jason J. W. Williams
<jasonjwwilliams at gmail.com> wrote:
> I noticed that consumer apps who had not yet ack'd the message they
> had received would receive new messages. I had assumed they wouldn't
> be assigned a new message from the queue until they had ack'd what
> they had already received.

I see you're talking about egress flow control.

ATM the only way for the consumer to stop the flow of messages is to
exert TCP back pressure on the server. If there is no back pressure,
the server will continue to deliver messages regardless of whether
prior messages have been ack'd or not.

Having said that, I am halfway through QA'ing a patch to implement the
basic.qos command, which will allow you to specify a prefetch window.

So the consumer specifies the window size and the server will halt the
flow of messages until enough acks have come back to push the window
forwards.

This patch should land quite soon.

HTH,

Ben



From jasonjwwilliams at gmail.com  Thu Jan 15 22:42:36 2009
From: jasonjwwilliams at gmail.com (Jason J. W. Williams)
Date: Thu, 15 Jan 2009 15:42:36 -0700
Subject: [rabbitmq-discuss] Load balancing/ack interaction.
In-Reply-To: <269388e30901151441k765c116cg723a50a5b56819f1@mail.gmail.com>
References: <3b949f090901151413q3f42d577o17f3375fe676645b@mail.gmail.com>
	<269388e30901151432j5e4ee631h270c08d09deb424b@mail.gmail.com>
	<3b949f090901151433r154d490cu8cc74afe3a679972@mail.gmail.com>
	<269388e30901151441k765c116cg723a50a5b56819f1@mail.gmail.com>
Message-ID: <3b949f090901151442l4c54c81kf558f6ba5681c53a@mail.gmail.com>

Hi Ben,

That would be very helpful. Thank you!

-J

On Thu, Jan 15, 2009 at 3:41 PM, Ben Hood <0x6e6562 at gmail.com> wrote:
> Jason,
>
> On Thu, Jan 15, 2009 at 10:33 PM, Jason J. W. Williams
> <jasonjwwilliams at gmail.com> wrote:
>> I noticed that consumer apps who had not yet ack'd the message they
>> had received would receive new messages. I had assumed they wouldn't
>> be assigned a new message from the queue until they had ack'd what
>> they had already received.
>
> I see you're talking about egress flow control.
>
> ATM the only way for the consumer to stop the flow of messages is to
> exert TCP back pressure on the server. If there is no back pressure,
> the server will continue to deliver messages regardless of whether
> prior messages have been ack'd or not.
>
> Having said that, I am halfway through QA'ing a patch to implement the
> basic.qos command, which will allow you to specify a prefetch window.
>
> So the consumer specifies the window size and the server will halt the
> flow of messages until enough acks have come back to push the window
> forwards.
>
> This patch should land quite soon.
>
> HTH,
>
> Ben
>



From 0x6e6562 at gmail.com  Thu Jan 15 22:45:26 2009
From: 0x6e6562 at gmail.com (Ben Hood)
Date: Thu, 15 Jan 2009 22:45:26 +0000
Subject: [rabbitmq-discuss] Load balancing/ack interaction.
In-Reply-To: <3b949f090901151442l4c54c81kf558f6ba5681c53a@mail.gmail.com>
References: <3b949f090901151413q3f42d577o17f3375fe676645b@mail.gmail.com>
	<269388e30901151432j5e4ee631h270c08d09deb424b@mail.gmail.com>
	<3b949f090901151433r154d490cu8cc74afe3a679972@mail.gmail.com>
	<269388e30901151441k765c116cg723a50a5b56819f1@mail.gmail.com>
	<3b949f090901151442l4c54c81kf558f6ba5681c53a@mail.gmail.com>
Message-ID: <269388e30901151445o4906e7c9nee93274116f14288@mail.gmail.com>

Jason,

On Thu, Jan 15, 2009 at 10:42 PM, Jason J. W. Williams
<jasonjwwilliams at gmail.com> wrote:
> That would be very helpful. Thank you!

If you're *really* keen, you can check this out yourself now - the
branch is called 18557 in the server and java client repos.

It's pretty stable and has been thoroughly tested, just needs some
final QA stuff done before it goes into the mainline.

Ben



From jasonjwwilliams at gmail.com  Thu Jan 15 22:50:45 2009
From: jasonjwwilliams at gmail.com (Jason J. W. Williams)
Date: Thu, 15 Jan 2009 15:50:45 -0700
Subject: [rabbitmq-discuss] Load balancing/ack interaction.
In-Reply-To: <269388e30901151445o4906e7c9nee93274116f14288@mail.gmail.com>
References: <3b949f090901151413q3f42d577o17f3375fe676645b@mail.gmail.com>
	<269388e30901151432j5e4ee631h270c08d09deb424b@mail.gmail.com>
	<3b949f090901151433r154d490cu8cc74afe3a679972@mail.gmail.com>
	<269388e30901151441k765c116cg723a50a5b56819f1@mail.gmail.com>
	<3b949f090901151442l4c54c81kf558f6ba5681c53a@mail.gmail.com>
	<269388e30901151445o4906e7c9nee93274116f14288@mail.gmail.com>
Message-ID: <3b949f090901151450t423e8004s7d48910c3d6ea23a@mail.gmail.com>

Hi Ben,

I'll give it a shot.

-J

On Thu, Jan 15, 2009 at 3:45 PM, Ben Hood <0x6e6562 at gmail.com> wrote:
> Jason,
>
> On Thu, Jan 15, 2009 at 10:42 PM, Jason J. W. Williams
> <jasonjwwilliams at gmail.com> wrote:
>> That would be very helpful. Thank you!
>
> If you're *really* keen, you can check this out yourself now - the
> branch is called 18557 in the server and java client repos.
>
> It's pretty stable and has been thoroughly tested, just needs some
> final QA stuff done before it goes into the mainline.
>
> Ben
>



From kirk at kirkwylie.com  Fri Jan 16 12:32:24 2009
From: kirk at kirkwylie.com (Kirk Wylie)
Date: Fri, 16 Jan 2009 12:32:24 +0000
Subject: [rabbitmq-discuss] Use of Java 1.4 with the RabbitMQ Java
	Client library
In-Reply-To: <8f10a9e00901070604m358a72c1l156982a2206b447a@mail.gmail.com>
References: <8f10a9e00901070604m358a72c1l156982a2206b447a@mail.gmail.com>
Message-ID: <8f10a9e00901160432x775532s8fdf773063f2b951@mail.gmail.com>

Just one more plea for responses (I've only had 3, none of which
indicate any existing or planned adoption of RabbitMQ Java Client in a
Java 1.4 environment).

If you haven't done so yet, please let me know what your plans are for
integrating Java and RabbitMQ/AMQP using the RabbitMQ/AMQP Java Client
library is!

http://www.misterpoll.com/polls/376470

Kirk Wylie

On Wed, Jan 7, 2009 at 2:04 PM, Kirk Wylie <kirk at kirkwylie.com> wrote:
> (Apologies for the repost; I realized that my subject line yesterday
> was a bit cryptic and not everybody that I need to might have seen it)
>
> I'm starting to do some development using and enhancing some features
> in the RabbitMQ Java Client Library, and I'm attempting to determine
> to what level we need to prioritize continuing support for 1.4 (and
> earlier) JVMs.
>
> Taking my lead from Alex Miller
> (http://tech.puredanger.com/2008/07/15/jdk-version-poll-results/),
> I've created an online poll to gauge the types of JVMs that people are
> currently using so that we can determine our optimum platform support
> plans for Java clients.
>
> If you are currently, or planning to, use the RabbitMQ Java client,
> please help me out by filling out this quick (3 questions, less than 5
> minute) poll:
> http://www.misterpoll.com/polls/376470
>
> I'll post results when people start filling it in!
>
> Thanks a lot in advance,
>
> Kirk Wylie
>



From 0x6e6562 at gmail.com  Fri Jan 16 17:43:39 2009
From: 0x6e6562 at gmail.com (Ben Hood)
Date: Fri, 16 Jan 2009 17:43:39 +0000
Subject: [rabbitmq-discuss] Load balancing/ack interaction.
In-Reply-To: <3b949f090901151450t423e8004s7d48910c3d6ea23a@mail.gmail.com>
References: <3b949f090901151413q3f42d577o17f3375fe676645b@mail.gmail.com>
	<269388e30901151432j5e4ee631h270c08d09deb424b@mail.gmail.com>
	<3b949f090901151433r154d490cu8cc74afe3a679972@mail.gmail.com>
	<269388e30901151441k765c116cg723a50a5b56819f1@mail.gmail.com>
	<3b949f090901151442l4c54c81kf558f6ba5681c53a@mail.gmail.com>
	<269388e30901151445o4906e7c9nee93274116f14288@mail.gmail.com>
	<3b949f090901151450t423e8004s7d48910c3d6ea23a@mail.gmail.com>
Message-ID: <269388e30901160943l429c35b5g841214c9eaa98afa@mail.gmail.com>

Hey Jason,

On Thu, Jan 15, 2009 at 10:50 PM, Jason J. W. Williams
<jasonjwwilliams at gmail.com> wrote:
> I'll give it a shot.

Just FYI: The qos functionality has now been merged into the default
branch, so you don't need to check out a branch any more.

Ben



From smparkes at smparkes.net  Sat Jan 17 01:49:29 2009
From: smparkes at smparkes.net (Steven Parkes)
Date: Fri, 16 Jan 2009 17:49:29 -0800
Subject: [rabbitmq-discuss] mod_rabbitmq update?
In-Reply-To: <26c0cf900901132137g19141a01ma947cb62af9c6ee0@mail.gmail.com>
References: <26c0cf900901091439k367a0abgeec1b5f1e9dddd5b@mail.gmail.com><4969A2E7.1030401@lshift.net>
	<26c0cf900901132137g19141a01ma947cb62af9c6ee0@mail.gmail.com>
Message-ID: <000101c97845$d67750b0$8365f210$@net>

Is there an update to mod_rabbitmq floating around somewhere that is
compatible with 1.5? The comments and code by Matthias and Ben at the end of
rabbit_exchange.erl sure make it sound like there is, but I don't see
anything checked into mercurial.

I can probably figure out the necessary changes to call the code in
rabbit_exchange.erl but ...




From julien.genestoux at gmail.com  Sat Jan 17 08:03:48 2009
From: julien.genestoux at gmail.com (Julien Genestoux)
Date: Sat, 17 Jan 2009 00:03:48 -0800
Subject: [rabbitmq-discuss] Message deleted at subscription?
Message-ID: <26c0cf900901170003n39bd445ek23d7c1f6d755dec1@mail.gmail.com>

Hey guys,

I am suing the last rabbitmq with the Ruby Stomp adapter and I have been
doing some testing.
A queue has been created as durable and non auto-delete. This queue has no
listener as of now.

A process puts messages in a queue every second roughly. Atfer some time, I
check the queue.
> rabbitmqctl list_queues messages name consumers
Listing queues ...
508    /queue/MyQueue    0

Now, I start a consumer with the following code :

queue_client.subscribe("/queue/FeedsToParse", {:durable => true,
"auto-delete".intern => false}) do |message|
  sleep 600
  puts "done!"
end

As you can see, when starting this client, the number of elements in my
queue should decrease pretty slowly (1 every 10 minutes)... but here is what
happens if I check the queue again:
> rabbitmqctl list_queues messages name consumers
Listing queues ...
417    /queue/MyQueue    1

So it seems that starting a consumer deletes some messages in the queue. I
have no idea why. Can anyone explain?

Thanks a lot for your great help!

julien


--
Julien Genestoux
http://www.ouvre-boite.com
http://blog.notifixio.us

+1 (415) 254 7340
+33 (0)9 70 44 76 29
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20090117/745db0c3/attachment.htm 

From alexis.richardson at cohesiveft.com  Sat Jan 17 13:10:51 2009
From: alexis.richardson at cohesiveft.com (Alexis Richardson)
Date: Sat, 17 Jan 2009 13:10:51 +0000
Subject: [rabbitmq-discuss] Making persistence simpler (Was: AMQP & Python
	Write-Up)
Message-ID: <167204d20901170510t57f85e56ufca8fd9046023f2c@mail.gmail.com>

Hi,

I am reposting Jason's thoughts on simplifying AMQP persistence to the
list, with his permission.

alexis


---------- Forwarded message ----------
From: Jason J. W. Williams <jasonjwwilliams at gmail.com>
Date: Thu, Jan 15, 2009 at 8:56 PM
Subject: Re: [rabbitmq-discuss] AMQP & Python Write-Up
To: Alexis Richardson <alexis.richardson at gmail.com>


Hi Alexis,

My thinking on it is that the publisher should be able to be as "dumb"
as possible. This seems to be a tenet of AMQP from my reading, based
on the fact that it doesn't know where the message is going.

In the way we're designing uses for the queues, the consumers are the
ones that know if they need the messages to be persistent, or rather
know the value of the message. Largely because they have the details
on what they're doing with the message.

To that end, requiring every publisher to mark a message consistent,
means one accidentally may not be coded that way, and thereby will
override the consumer's need for the message to be persistent.

It seems to me in that regard, it makes more sense to make persistence
an attribute of the exchange and the queue (as durable is).

Fewer moving parts to keep track of, and the publishers can be
simple-minded minions. ;-)

Just my very uninformed opinion.

-J

On Thu, Jan 15, 2009 at 2:15 AM, Alexis Richardson
> On Thu, Jan 15, 2009 at 12:58 AM, Jason J. W. Williams
> <jasonjwwilliams at gmail.com> wrote:
>> Barry & Gordon,
>>
>> Entry has been updated with the correct no_ack explanation. Regarding
>> the None return on "no message waiting" from basic_get(), I chose to
>> explain that in words, rather than trap it out in the code to maintain
>> clarity.
>>
>> http://blogs.digitar.com/jjww/2009/01/rabbits-and-warrens/
>>
>> Thank you very much for your help.
>>
>> -J
>>
>> On Wed, Jan 14, 2009 at 5:28 PM, Barry Pederson <bp at barryp.org> wrote:
>>> Gordon Sim wrote:
>>>>
>>>> Jason J. W. Williams wrote:
>>>>>
>>>>> I've written up a quick start on the basics of AMQP and using it in
>>>>> Python, that is the kind of document I wished I'd been able to find in
>>>>> one place: http://blogs.digitar.com/jjww/2009/01/rabbits-and-warrens/
>>>>>
>>>>> It's probably laced with errors, and I'd appreciate any
>>>>> feedback/corrections.
>>>>
>>>> Nice article!
>>>>
>>>> I am not that familiar with py-amqplib but the no_ack argument to
>>>> basic_consume/basic_get is defined in the AMQP spec to mean that the server
>>>> should not expect an ack and should discard the message on delivery. I.e.
>>>> its an unreliable mode of delivery[1] rather than a signal to the client
>>>> library to automatically acknowledge on receiving a message.
>>>
>>> I just read the article too, very nice.
>>>
>>> Gordon's right about the no_ack flag, this sentence:
>>>
>>>  If you set the no_ack argument to true, then py-amqplib will
>>>  automatically send the acknowledgement immediately for you.
>>>
>>> should probably instead say something like what Gordon mentions above - it's
>>> the broker that acts differently based on that flag, not the client library.
>>>
>>> The only other thing I noticed was this section:
>>>
>>> ----
>>> Now, there's two methods of getting messages out of the queue. The first is
>>> to call chan.basic_get() to pull the next message off the queue:
>>>
>>>   1. msg = chan.basic_get("po_box")
>>>   2. print msg.body()
>>>   3. chan.basic_ack(msg.delivery_tag)
>>> ----
>>>
>>> If there isn't a message waiting in the queue when line 1 executes, then msg
>>> is set to None and line 2 will die since None does not have a "body"
>>> attribute.  Also, body is not a function to call, it's just a string, so
>>> this would be more appropriate:
>>>
>>>    msg = chan.basic_get("po_box")
>>>    if msg is not None:
>>>        print msg.body
>>>        chan.basic_ack(msg.delivery_tag)
>>>
>>> ================
>>>
>>>        Barry
>>>
>>>
>>>
>>
>> _______________________________________________
>> rabbitmq-discuss mailing list
>> rabbitmq-discuss at lists.rabbitmq.com
>> http://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss
>>
>



From sustrik at imatix.com  Sat Jan 17 13:55:19 2009
From: sustrik at imatix.com (Martin Sustrik)
Date: Sat, 17 Jan 2009 14:55:19 +0100
Subject: [rabbitmq-discuss] Making persistence simpler (Was: AMQP &
 Python Write-Up)
In-Reply-To: <167204d20901170510t57f85e56ufca8fd9046023f2c@mail.gmail.com>
References: <167204d20901170510t57f85e56ufca8fd9046023f2c@mail.gmail.com>
Message-ID: <4971E347.9070506@imatix.com>

Jason,

> My thinking on it is that the publisher should be able to be as "dumb"
> as possible. This seems to be a tenet of AMQP from my reading, based
> on the fact that it doesn't know where the message is going.
> 
> In the way we're designing uses for the queues, the consumers are the
> ones that know if they need the messages to be persistent, or rather
> know the value of the message. Largely because they have the details
> on what they're doing with the message.
> 
> To that end, requiring every publisher to mark a message consistent,
> means one accidentally may not be coded that way, and thereby will
> override the consumer's need for the message to be persistent.
> 
> It seems to me in that regard, it makes more sense to make persistence
> an attribute of the exchange and the queue (as durable is).
> 
> Fewer moving parts to keep track of, and the publishers can be
> simple-minded minions. ;-)

Specifying persistence on per-message basis makes no sense of course. 
However, JMS API requires it to be specified that way. One of AMQP goals 
is to provide standardised wire-level protocol for JMS implementations. 
Thus, AMQP has to offer per-message notion of persistence. RabbitMQ is 
AMQP imlementation and so it has to comply :(

Martin



From holger at wizards.de  Sat Jan 17 18:25:10 2009
From: holger at wizards.de (=?ISO-8859-1?Q?Holger_Hoffst=E4tte?=)
Date: Sat, 17 Jan 2009 19:25:10 +0100
Subject: [rabbitmq-discuss] Making persistence simpler (Was: AMQP &
 Python Write-Up)
In-Reply-To: <4971E347.9070506@imatix.com>
References: <167204d20901170510t57f85e56ufca8fd9046023f2c@mail.gmail.com>
	<4971E347.9070506@imatix.com>
Message-ID: <49722286.8000702@wizards.de>

Martin Sustrik wrote:
> Specifying persistence on per-message basis makes no sense of course. 

"Of course"? I'd like to hear why you think that is so obvious, because I
don't think it is. :)
Explicitly required persistence can be seen as just another orthogonal
property to transactionality, lifetime or other QoS requirements.
Enforcing these properties for every consumer up-front might admittedly
make the life of a broker implementer easier, but at the cost of going
against the client-driven nature and an architecture with intelligent and
responsible endpoints (bottom up). You can always superimpose centralized
decisions over this (e.g. through consistent configuration), but not the
other way.

thanks
Holger




From sustrik at imatix.com  Sat Jan 17 20:51:14 2009
From: sustrik at imatix.com (Martin Sustrik)
Date: Sat, 17 Jan 2009 21:51:14 +0100
Subject: [rabbitmq-discuss] Making persistence simpler (Was: AMQP &
 Python Write-Up)
In-Reply-To: <49722286.8000702@wizards.de>
References: <167204d20901170510t57f85e56ufca8fd9046023f2c@mail.gmail.com>	<4971E347.9070506@imatix.com>
	<49722286.8000702@wizards.de>
Message-ID: <497244C2.2010008@imatix.com>

Holger Hoffst?tte wrote:
> Martin Sustrik wrote:
>> Specifying persistence on per-message basis makes no sense of course. 
> 
> "Of course"? I'd like to hear why you think that is so obvious, because I
> don't think it is. :)
> Explicitly required persistence can be seen as just another orthogonal
> property to transactionality, lifetime or other QoS requirements.
> Enforcing these properties for every consumer up-front might admittedly
> make the life of a broker implementer easier, but at the cost of going
> against the client-driven nature and an architecture with intelligent and
> responsible endpoints (bottom up). You can always superimpose centralized
> decisions over this (e.g. through consistent configuration), but not the
> other way.

True, but the fact that you can do something doesn't necessarily mean 
you should do it.

I would say that clearly separating dataflows with different semantics 
is a matter of sane design. If I had to pass both persistent and 
transient messages between two endpoints (say trades & market data) I 
would define each of them as a separate "path" that way reducing 
possible interactions between persistent and transient messages and 
avoiding undefined behaviour in case of failover, where transient 
messages are lost while persistent messages are replayed.

Martin




From smparkes at smparkes.net  Sun Jan 18 06:31:29 2009
From: smparkes at smparkes.net (Steven Parkes)
Date: Sat, 17 Jan 2009 22:31:29 -0800
Subject: [rabbitmq-discuss] mod_rabbitmq update?
Message-ID: <000401c97936$657d86d0$30789470$@net>

(Sorry for the double posting ... I must have replied to another email which
google took to mean I was changing that other thread which wasn't much
intention ... which I'll try to undo.)

Anyway, is there an update to mod_rabbitmq floating around somewhere that is
compatible with 1.5? The comments and code by Matthias and Ben at the end of
rabbit_exchange.erl sure make it sound like there is, but I don't see
anything checked into mercurial.

I can probably figure out the necessary changes to call the code in
rabbit_exchange.erl but ...




From matthias at lshift.net  Sun Jan 18 09:41:02 2009
From: matthias at lshift.net (Matthias Radestock)
Date: Sun, 18 Jan 2009 09:41:02 +0000
Subject: [rabbitmq-discuss] Message deleted at subscription?
In-Reply-To: <26c0cf900901170003n39bd445ek23d7c1f6d755dec1@mail.gmail.com>
References: <26c0cf900901170003n39bd445ek23d7c1f6d755dec1@mail.gmail.com>
Message-ID: <4972F92E.3000708@lshift.net>

Julien,

Julien Genestoux wrote:
> A process puts messages in a queue every second roughly. Atfer some 
> time, I check the queue.
>  > rabbitmqctl list_queues messages name consumers
> Listing queues ...
> 508    /queue/MyQueue    0
> 
> Now, I start a consumer with the following code :
> 
> queue_client.subscribe("/queue/FeedsToParse", {:durable => true, 
> "auto-delete".intern => false}) do |message|
>   sleep 600
>   puts "done!"
> end
> 
> As you can see, when starting this client, the number of elements in my 
> queue should decrease pretty slowly (1 every 10 minutes)... but here is 
> what happens if I check the queue again:
>  > rabbitmqctl list_queues messages name consumers
> Listing queues ...
> 417    /queue/MyQueue    1
> 
> So it seems that starting a consumer deletes some messages in the queue. 
> I have no idea why. Can anyone explain?

The 'messages' count is the sum of:

- messages_ready - Number of ready messages (i.e. messages ready to be 
delivered to client)

- messages_unacknowledged - Number of unacknowledged messages.

- messages_uncommitted - Number of uncommitted messages (i.e. messages 
published in a transaction but not yet committed)

Since your example does not involve transactions, only messages_ready + 
messages_unacknowledged come into play.

On publication, messages_ready increases.

When delivering messages to a client, messages_ready decreases and 
messages_unacknowledged increases by the same amount, so the sum remains 
the same.

When an acknowledgement is received from the client, 
messages_unacknowledged decreases, and so does the sum.

Now ...

I am familiar with Aman's ruby client, but looking at the code and docs 
it appears that by default the subscribe method creates a consumer from 
which the server does not expect acknowledgements (and indeed there is 
no explicit ack in the code above). Here's what ruby client's docs say;

     # == Options
     # * :ack => true | false (default false)
     # If this field is set to false the server does not expect 
acknowledgments
     # for messages. That is, when a message is delivered to the client
     # the server automatically and silently acknowledges it on behalf
     # of the client. This functionality increases performance but at
     # the cost of reliability. Messages can get lost if a client dies
     # before it can deliver them to the application.

So as soon as your code creates the subscription, the server will start 
sending it the queue's messages (resulting in messages_ready to 
decrease) and automatically acknowledge all such messages (resulting in 
messages_unacknowledged to remain unchanged), and thus the 'messages' 
count decreases. This is an asynchronous operation; so the client will 
receive a stream of messages without having to do anything. The stream 
is only paused by network/tcp congestion, and basic.qos (search the 
archives for discussions on the latter).

If that is not what you want I suggest you change the flag to true and 
explicitly acknowledge messages in your code.


Regards,

Matthias



From julien.genestoux at gmail.com  Sun Jan 18 16:43:37 2009
From: julien.genestoux at gmail.com (Julien Genestoux)
Date: Sun, 18 Jan 2009 08:43:37 -0800
Subject: [rabbitmq-discuss] Message deleted at subscription?
In-Reply-To: <4972F92E.3000708@lshift.net>
References: <26c0cf900901170003n39bd445ek23d7c1f6d755dec1@mail.gmail.com>
	<4972F92E.3000708@lshift.net>
Message-ID: <26c0cf900901180843t6028f92fp46d9b69db6eabb5@mail.gmail.com>

Thanks Matthias for this very helpful and complete answer. I was actually
not using AMQP, but STOMP... I guess the problem and the solution remain the
same.
Do you think I should rather switch from Stomp to Amqp?

Thanks,

--
Julien Genestoux
http://www.ouvre-boite.com
http://blog.notifixio.us

+1 (415) 254 7340
+33 (0)9 70 44 76 29


On Sun, Jan 18, 2009 at 1:41 AM, Matthias Radestock <matthias at lshift.net>wrote:

> Julien,
>
> Julien Genestoux wrote:
>
>> A process puts messages in a queue every second roughly. Atfer some time,
>> I check the queue.
>>  > rabbitmqctl list_queues messages name consumers
>> Listing queues ...
>> 508    /queue/MyQueue    0
>>
>> Now, I start a consumer with the following code :
>>
>> queue_client.subscribe("/queue/FeedsToParse", {:durable => true,
>> "auto-delete".intern => false}) do |message|
>>  sleep 600
>>  puts "done!"
>> end
>>
>> As you can see, when starting this client, the number of elements in my
>> queue should decrease pretty slowly (1 every 10 minutes)... but here is what
>> happens if I check the queue again:
>>  > rabbitmqctl list_queues messages name consumers
>> Listing queues ...
>> 417    /queue/MyQueue    1
>>
>> So it seems that starting a consumer deletes some messages in the queue. I
>> have no idea why. Can anyone explain?
>>
>
> The 'messages' count is the sum of:
>
> - messages_ready - Number of ready messages (i.e. messages ready to be
> delivered to client)
>
> - messages_unacknowledged - Number of unacknowledged messages.
>
> - messages_uncommitted - Number of uncommitted messages (i.e. messages
> published in a transaction but not yet committed)
>
> Since your example does not involve transactions, only messages_ready +
> messages_unacknowledged come into play.
>
> On publication, messages_ready increases.
>
> When delivering messages to a client, messages_ready decreases and
> messages_unacknowledged increases by the same amount, so the sum remains the
> same.
>
> When an acknowledgement is received from the client,
> messages_unacknowledged decreases, and so does the sum.
>
> Now ...
>
> I am familiar with Aman's ruby client, but looking at the code and docs it
> appears that by default the subscribe method creates a consumer from which
> the server does not expect acknowledgements (and indeed there is no explicit
> ack in the code above). Here's what ruby client's docs say;
>
>    # == Options
>    # * :ack => true | false (default false)
>    # If this field is set to false the server does not expect
> acknowledgments
>    # for messages. That is, when a message is delivered to the client
>    # the server automatically and silently acknowledges it on behalf
>    # of the client. This functionality increases performance but at
>    # the cost of reliability. Messages can get lost if a client dies
>    # before it can deliver them to the application.
>
> So as soon as your code creates the subscription, the server will start
> sending it the queue's messages (resulting in messages_ready to decrease)
> and automatically acknowledge all such messages (resulting in
> messages_unacknowledged to remain unchanged), and thus the 'messages' count
> decreases. This is an asynchronous operation; so the client will receive a
> stream of messages without having to do anything. The stream is only paused
> by network/tcp congestion, and basic.qos (search the archives for
> discussions on the latter).
>
> If that is not what you want I suggest you change the flag to true and
> explicitly acknowledge messages in your code.
>
>
> Regards,
>
> Matthias
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20090118/8dbf43a1/attachment.htm 

From matthias at lshift.net  Sun Jan 18 22:15:53 2009
From: matthias at lshift.net (Matthias Radestock)
Date: Sun, 18 Jan 2009 22:15:53 +0000
Subject: [rabbitmq-discuss] Message deleted at subscription?
In-Reply-To: <26c0cf900901180843t6028f92fp46d9b69db6eabb5@mail.gmail.com>
References: <26c0cf900901170003n39bd445ek23d7c1f6d755dec1@mail.gmail.com>	<4972F92E.3000708@lshift.net>
	<26c0cf900901180843t6028f92fp46d9b69db6eabb5@mail.gmail.com>
Message-ID: <4973AA19.5020003@lshift.net>

Julien,

Julien Genestoux wrote:
> Thanks Matthias for this very helpful and complete answer. I was 
> actually not using AMQP, but STOMP...

Apologies, I should have read your post more carefully.

> I guess the problem and the solution remain the same.

I think so. Looking at the rabbitmq-stomp code, there appears to be a 
header named "ack" that controls whether the server should 
auto-acknowledge messages. It defaults to "auto". Setting it to "client" 
should do the trick.

> Do you think I should rather switch from Stomp to Amqp?

That very much depends on what you want to do. Can you tell us more 
about your use case?


Regards,

Matthias.



From tonyg at lshift.net  Mon Jan 19 15:59:31 2009
From: tonyg at lshift.net (Tony Garnock-Jones)
Date: Mon, 19 Jan 2009 15:59:31 +0000
Subject: [rabbitmq-discuss] mod_rabbitmq update?
In-Reply-To: <000401c97936$657d86d0$30789470$@net>
References: <000401c97936$657d86d0$30789470$@net>
Message-ID: <4974A363.3040507@lshift.net>

Hi Steven,

I'll take a look.

Regards,
  Tony


Steven Parkes wrote:
> Anyway, is there an update to mod_rabbitmq floating around somewhere that is
> compatible with 1.5? The comments and code by Matthias and Ben at the end of
> rabbit_exchange.erl sure make it sound like there is, but I don't see
> anything checked into mercurial.
> 
> I can probably figure out the necessary changes to call the code in
> rabbit_exchange.erl but ...
> 
> 
> _______________________________________________
> rabbitmq-discuss mailing list
> rabbitmq-discuss at lists.rabbitmq.com
> http://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss


-- 
 [][][] Tony Garnock-Jones     | Mob: +44 (0)7905 974 211
   [][] LShift Ltd             | Tel: +44 (0)20 7729 7060
 []  [] http://www.lshift.net/ | Email: tonyg at lshift.net



From bp at barryp.org  Mon Jan 19 17:40:17 2009
From: bp at barryp.org (Barry Pederson)
Date: Mon, 19 Jan 2009 11:40:17 -0600
Subject: [rabbitmq-discuss] py-amqplib 0.6
Message-ID: <4974BB01.1060808@barryp.org>

I've wrapped up a new release of py-amqplib, version 0.6 available at 
http://barryp.org/software/py-amqplib/ or the Python Cheeseshop.

This is the restructured code I've been working on, minus the optional 
thread-assisted mode (which is still in the development repository at 
http://hg.barryp.org/py-amqplib-devel/ ).

The main point of this release is to have something more maintainable 
and hackable, but compatible with the previous versions.

	Barry



From tonyg at lshift.net  Mon Jan 19 17:55:21 2009
From: tonyg at lshift.net (Tony Garnock-Jones)
Date: Mon, 19 Jan 2009 17:55:21 +0000
Subject: [rabbitmq-discuss] RabbitMQ XMPP gateway and 1.5.x: mnesia table
	renaming needed
Message-ID: <4974BE89.7090305@lshift.net>

So, having just updated the XMPP gateway code (see hg repository) to
compile against RabbitMQ 1.5.x, I've run into an interesting roadblock.

 - RabbitMQ 1.5.x defines a mnesia table called 'route'.
 - EJabberd *also* defines a mnesia table called 'route'.

They have different structure and semantics.

This effectively means that the XMPP gateway won't work with the 1.5.x
versions of RabbitMQ.

One or other of the projects needs to rename their tables. We'll do it,
but not until RabbitMQ 1.6.x.

Tony




From smparkes at smparkes.net  Mon Jan 19 18:08:33 2009
From: smparkes at smparkes.net (Steven Parkes)
Date: Mon, 19 Jan 2009 10:08:33 -0800
Subject: [rabbitmq-discuss] RabbitMQ XMPP gateway and 1.5.x: mnesia
	table renaming needed
In-Reply-To: <4974BE89.7090305@lshift.net>
References: <4974BE89.7090305@lshift.net>
Message-ID: <000701c97a60$f1334d10$d399e730$@net>

Thanks, Tony! I can hack the table names so I can test.

Wonder if either/both projects should use a prefix (rmq_, ejb_) on table
names ... part of me thinks it's overkill, but it I end up using mnesia
tables in my plugin, I think I'll prefix names ...

> -----Original Message-----
> From: Tony Garnock-Jones [mailto:tonyg at lshift.net]
> Sent: Monday, January 19, 2009 9:55 AM
> To: rabbitmq
> Cc: smparkes at smparkes.net; Glenn Rempe
> Subject: RabbitMQ XMPP gateway and 1.5.x: mnesia table renaming needed
> 
> So, having just updated the XMPP gateway code (see hg repository) to
> compile against RabbitMQ 1.5.x, I've run into an interesting roadblock.
> 
>  - RabbitMQ 1.5.x defines a mnesia table called 'route'.
>  - EJabberd *also* defines a mnesia table called 'route'.
> 
> They have different structure and semantics.
> 
> This effectively means that the XMPP gateway won't work with the 1.5.x
> versions of RabbitMQ.
> 
> One or other of the projects needs to rename their tables. We'll do it,
> but not until RabbitMQ 1.6.x.
> 
> Tony





From alexis.richardson at cohesiveft.com  Mon Jan 19 18:11:29 2009
From: alexis.richardson at cohesiveft.com (Alexis Richardson)
Date: Mon, 19 Jan 2009 18:11:29 +0000
Subject: [rabbitmq-discuss] RabbitMQ XMPP gateway and 1.5.x: mnesia
	table renaming needed
In-Reply-To: <4974BE89.7090305@lshift.net>
References: <4974BE89.7090305@lshift.net>
Message-ID: <167204d20901191011m1c48b8cei9095e35712bbe0b2@mail.gmail.com>

Tony,

Do you know if it *will* work against 1.4.x?

alexis


On Mon, Jan 19, 2009 at 5:55 PM, Tony Garnock-Jones <tonyg at lshift.net> wrote:
> So, having just updated the XMPP gateway code (see hg repository) to
> compile against RabbitMQ 1.5.x, I've run into an interesting roadblock.
>
>  - RabbitMQ 1.5.x defines a mnesia table called 'route'.
>  - EJabberd *also* defines a mnesia table called 'route'.
>
> They have different structure and semantics.
>
> This effectively means that the XMPP gateway won't work with the 1.5.x
> versions of RabbitMQ.
>
> One or other of the projects needs to rename their tables. We'll do it,
> but not until RabbitMQ 1.6.x.
>
> Tony
>
>
> _______________________________________________
> rabbitmq-discuss mailing list
> rabbitmq-discuss at lists.rabbitmq.com
> http://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss
>



From tonyg at lshift.net  Mon Jan 19 18:32:25 2009
From: tonyg at lshift.net (Tony Garnock-Jones)
Date: Mon, 19 Jan 2009 18:32:25 +0000
Subject: [rabbitmq-discuss] RabbitMQ XMPP gateway and 1.5.x: mnesia
	table renaming needed
In-Reply-To: <000701c97a60$f1334d10$d399e730$@net>
References: <4974BE89.7090305@lshift.net> <000701c97a60$f1334d10$d399e730$@net>
Message-ID: <4974C739.7000401@lshift.net>

Steven Parkes wrote:
> Wonder if either/both projects should use a prefix (rmq_, ejb_) on table
> names ... part of me thinks it's overkill, but it I end up using mnesia
> tables in my plugin, I think I'll prefix names ...

Exactly. It *is* overkill, but it *is* necessary. Erlang's (lack of)
namespacing support is just a bit awkward sometimes. Sigh!

Another option for getting the gateway into working shape is to
restructure it to have it run as a separate component, using the XMPP
component protocol to communicate with a separate ejabberd server... I
wonder how much effort that would be? It'd certainly an improvement over
the current plugin-style system.

Anyone care to comment on the possible merits or drawbacks of such a
restructuring?

Regards,
  Tony
-- 
 [][][] Tony Garnock-Jones     | Mob: +44 (0)7905 974 211
   [][] LShift Ltd             | Tel: +44 (0)20 7729 7060
 []  [] http://www.lshift.net/ | Email: tonyg at lshift.net



From tonyg at lshift.net  Mon Jan 19 18:42:08 2009
From: tonyg at lshift.net (Tony Garnock-Jones)
Date: Mon, 19 Jan 2009 18:42:08 +0000
Subject: [rabbitmq-discuss] RabbitMQ XMPP gateway and 1.5.x: mnesia
 table renaming needed
In-Reply-To: <167204d20901191011m1c48b8cei9095e35712bbe0b2@mail.gmail.com>
References: <4974BE89.7090305@lshift.net>
	<167204d20901191011m1c48b8cei9095e35712bbe0b2@mail.gmail.com>
Message-ID: <4974C980.2020004@lshift.net>

Alexis Richardson wrote:
> Do you know if it *will* work against 1.4.x?

There's no XMPP gateway version tagged with 1.4.x (agh!), but I know it
definitely has run fine against 1.4.x. The most recent commit will need
to be undone, because the internal API has changed between 1.4 and 1.5
(which is what kicked off this whole business), but it should be fine
after that.

Actually I'll try it. OK, it looks like it starts up OK. I've just added
a tag, works_with_rabbitmq_v1_4_0.

If you're working with 1.4.x, and want to get the XMPP gateway compiled
and running with it,

  hg clone http://hg.rabbitmq.com/rabbitmq-xmpp
  cd rabbitmq-xmpp
  hg up works_with_rabbitmq_v1_4_0

then compile that as per the instructions.

Regards,
  Tony
-- 
 [][][] Tony Garnock-Jones     | Mob: +44 (0)7905 974 211
   [][] LShift Ltd             | Tel: +44 (0)20 7729 7060
 []  [] http://www.lshift.net/ | Email: tonyg at lshift.net



From julien.genestoux at gmail.com  Mon Jan 19 23:46:22 2009
From: julien.genestoux at gmail.com (Julien Genestoux)
Date: Mon, 19 Jan 2009 15:46:22 -0800
Subject: [rabbitmq-discuss] Queue Re-declaration
In-Reply-To: <3b949f090901131526x2eb486adx6f1dd21781648145@mail.gmail.com>
References: <3b949f090901121639y51a0952ek3142c87b0dbae000@mail.gmail.com>
	<D7806050-2372-46CA-8776-BC509D600E61@mac.com>
	<496C551A.2070307@lshift.net>
	<3b949f090901131506y2b708a0drf43edd78ba2d6291@mail.gmail.com>
	<496D224A.5070400@lshift.net>
	<3b949f090901131526x2eb486adx6f1dd21781648145@mail.gmail.com>
Message-ID: <26c0cf900901191546y9bfe1e9t7fa9c1d1b04be6b4@mail.gmail.com>

Let me jump into that conversation to ask a basic question : how to destroy
a queue when t's been created as non-auto-delete?
Also, side (bonus question) : is there a way to actually list the consumers
of the queue (not just the number of them) or, even better, to kick one of
them out?

Thanks

--
Julien Genestoux
http://www.ouvre-boite.com
http://blog.notifixio.us

+1 (415) 254 7340
+33 (0)9 70 44 76 29


On Tue, Jan 13, 2009 at 3:26 PM, Jason J. W. Williams <
jasonjwwilliams at gmail.com> wrote:

> Thank you again. :-) Puts a lot of emphasis on getting the configuration
> right.
>
> -J
>
> On Tue, Jan 13, 2009 at 4:22 PM, Matthias Radestock <matthias at lshift.net>
> wrote:
> > Jason,
> >
> > Jason J. W. Williams wrote:
> >>
> >> So if you make a mistake and declare an-in-use queue as non-durable
> >> and need to change it, the only way to do so is to destroy the queue
> >> and re-create it?
> >
> > Correct, and that is true in all versions of the AMQP spec. It is central
> to
> > the assertion-style semantics of declaration, which avoids many of the
> > pitfalls associated with access to a shared resource by multiple,
> > distributed clients.
> >
> >
> > Matthias.
> >
>
> _______________________________________________
> rabbitmq-discuss mailing list
> rabbitmq-discuss at lists.rabbitmq.com
> http://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20090119/38d27484/attachment.htm 

From matthias at lshift.net  Mon Jan 19 23:53:09 2009
From: matthias at lshift.net (Matthias Radestock)
Date: Mon, 19 Jan 2009 23:53:09 +0000
Subject: [rabbitmq-discuss] Queue Re-declaration
In-Reply-To: <26c0cf900901191546y9bfe1e9t7fa9c1d1b04be6b4@mail.gmail.com>
References: <3b949f090901121639y51a0952ek3142c87b0dbae000@mail.gmail.com>	<D7806050-2372-46CA-8776-BC509D600E61@mac.com>	<496C551A.2070307@lshift.net>	<3b949f090901131506y2b708a0drf43edd78ba2d6291@mail.gmail.com>	<496D224A.5070400@lshift.net>	<3b949f090901131526x2eb486adx6f1dd21781648145@mail.gmail.com>
	<26c0cf900901191546y9bfe1e9t7fa9c1d1b04be6b4@mail.gmail.com>
Message-ID: <49751265.7010806@lshift.net>

Julien,

Julien Genestoux wrote:
> Let me jump into that conversation to ask a basic question : how to 
> destroy a queue when it's been created as non-auto-delete?

By invoking AMQP's queue.delete command.

> Also, side (bonus question) : is there a way to actually list the 
> consumers of the queue (not just the number of them) or, even better, to 
> kick one of them out?

Only through the Erlang shell.

What use case have you got in mind for this?


Matthias



From mikeisgreat at gmail.com  Tue Jan 20 21:56:01 2009
From: mikeisgreat at gmail.com (Michael Steinfeld)
Date: Tue, 20 Jan 2009 16:56:01 -0500
Subject: [rabbitmq-discuss] getting started, broker runs; can't get status
Message-ID: <3d5db09e0901201356r1cafa64aud71de1a8c2d28cef@mail.gmail.com>

Hi all,

I've installed erlang and rabbitmq from source on rhel4 (x86_64) and I
can start the broker without issue, but when I attempt to get 'status'
of the broker I fail with

Status of node rabbit at dbase2 ...
{badrpc,nodedown}
...done.

All I have done so far is install it and run the broker, I am using
the default config for now..
I don't see anything relevant in the logs as to what is/not happening..

Can someone tell me what I can do to provide myself and the list with
more information?

Thanks in advance,
-- Mike



From 0x6e6562 at gmail.com  Tue Jan 20 22:04:19 2009
From: 0x6e6562 at gmail.com (Ben Hood)
Date: Tue, 20 Jan 2009 22:04:19 +0000
Subject: [rabbitmq-discuss] getting started, broker runs;
	can't get status
In-Reply-To: <3d5db09e0901201356r1cafa64aud71de1a8c2d28cef@mail.gmail.com>
References: <3d5db09e0901201356r1cafa64aud71de1a8c2d28cef@mail.gmail.com>
Message-ID: <269388e30901201404y2f36b9b8la2cfe7e45d2cf666@mail.gmail.com>

Michael,

On Tue, Jan 20, 2009 at 9:56 PM, Michael Steinfeld
<mikeisgreat at gmail.com> wrote:
> I've installed erlang and rabbitmq from source on rhel4 (x86_64) and I
> can start the broker without issue, but when I attempt to get 'status'
> of the broker I fail with
>
> Status of node rabbit at dbase2 ...
> {badrpc,nodedown}
> ...done.

This link might help:

http://lettuce.squarespace.com/faq/erlang/what-does-badrpcnodedown-mean.html

> All I have done so far is install it and run the broker, I am using
> the default config for now..
> I don't see anything relevant in the logs as to what is/not happening..

Can you post the rabbit.log?

> Can someone tell me what I can do to provide myself and the list with
> more information?

How did you install Rabbit? From the RPMs or from a binary tarball?

Ben



From mikeisgreat at gmail.com  Tue Jan 20 22:20:33 2009
From: mikeisgreat at gmail.com (Michael Steinfeld)
Date: Tue, 20 Jan 2009 17:20:33 -0500
Subject: [rabbitmq-discuss] getting started, broker runs;
	can't get status
In-Reply-To: <269388e30901201404y2f36b9b8la2cfe7e45d2cf666@mail.gmail.com>
References: <3d5db09e0901201356r1cafa64aud71de1a8c2d28cef@mail.gmail.com>
	<269388e30901201404y2f36b9b8la2cfe7e45d2cf666@mail.gmail.com>
Message-ID: <3d5db09e0901201420v2195969dm5261db800741c892@mail.gmail.com>

On Tue, Jan 20, 2009 at 5:04 PM, Ben Hood <0x6e6562 at gmail.com> wrote:
> Michael,
>
> On Tue, Jan 20, 2009 at 9:56 PM, Michael Steinfeld
> <mikeisgreat at gmail.com> wrote:
>> I've installed erlang and rabbitmq from source on rhel4 (x86_64) and I
>> can start the broker without issue, but when I attempt to get 'status'
>> of the broker I fail with
>>
>> Status of node rabbit at dbase2 ...
>> {badrpc,nodedown}
>> ...done.
>
> This link might help:
>
> http://lettuce.squarespace.com/faq/erlang/what-does-badrpcnodedown-mean.html
>
>> All I have done so far is install it and run the broker, I am using
>> the default config for now..
>> I don't see anything relevant in the logs as to what is/not happening..
>
> Can you post the rabbit.log?

This is the entire log:

[root at carrots rabbitmq]# more rabbit.log

=INFO REPORT==== 20-Jan-2009::15:05:48 ===
disk_log: repairing "/var/lib/rabbitmq/mnesia/rabbit/rabbit_persister.LOG" ...

=INFO REPORT==== 20-Jan-2009::15:05:48 ===
Repaired persister log - 1 recovered, 0 bad

=INFO REPORT==== 20-Jan-2009::15:05:48 ===
Rolling persister log to
"/var/lib/rabbitmq/mnesia/rabbit/rabbit_persister.LOG.previous"

=INFO REPORT==== 20-Jan-2009::15:05:48 ===
started TCP listener on 0.0.0.0:5672

>
>> Can someone tell me what I can do to provide myself and the list with
>> more information?
>
> How did you install Rabbit? From the RPMs or from a binary tarball?

like this:

$ cd ~/<SRC>
$ mkdir rabbit (this will be <RABBIT> hereunder)
$ cd <RABBIT>
$ wget http://www.rabbitmq.com/releases/rabbitmq-server/v1.5.0/rabbitmq-server-1.5.0.tar.gz
$ tar -zxvf rabbitmq-server-1.5.0.tar.gz
$ cd /usr/local/lib/erlang/lib
$ sudo ln -s <SRC>/<RABBIT>/rabbitmq-server-1.5.0 ./rabbitmq-server-1.5.0
* Add the <SRC>/<RABBIT>/rabbitmq-server/scripts to your $PATH

However, I also attempted to use the generic-unix install and was unsuccessful.

extra info:

OS: RHEL 4 (x86_64)
KERNEL: 2.6.9-67.ELsmp

>
> Ben
>



From 0x6e6562 at gmail.com  Tue Jan 20 22:33:39 2009
From: 0x6e6562 at gmail.com (Ben Hood)
Date: Tue, 20 Jan 2009 22:33:39 +0000
Subject: [rabbitmq-discuss] getting started, broker runs;
	can't get status
In-Reply-To: <3d5db09e0901201420v2195969dm5261db800741c892@mail.gmail.com>
References: <3d5db09e0901201356r1cafa64aud71de1a8c2d28cef@mail.gmail.com>
	<269388e30901201404y2f36b9b8la2cfe7e45d2cf666@mail.gmail.com>
	<3d5db09e0901201420v2195969dm5261db800741c892@mail.gmail.com>
Message-ID: <269388e30901201433p2e8233e9l4561b10088b18118@mail.gmail.com>

Michael,

On Tue, Jan 20, 2009 at 10:20 PM, Michael Steinfeld
<mikeisgreat at gmail.com> wrote:
>>> Status of node rabbit at dbase2 ...
>>> {badrpc,nodedown}

Are you able to connect to the server with an AMQP client or even via
something like netcat?

Ben



From dialtone at gmail.com  Tue Jan 20 22:43:50 2009
From: dialtone at gmail.com (Valentino Volonghi)
Date: Tue, 20 Jan 2009 14:43:50 -0800
Subject: [rabbitmq-discuss] getting started, broker runs;
	can't get status
In-Reply-To: <269388e30901201433p2e8233e9l4561b10088b18118@mail.gmail.com>
References: <3d5db09e0901201356r1cafa64aud71de1a8c2d28cef@mail.gmail.com>
	<269388e30901201404y2f36b9b8la2cfe7e45d2cf666@mail.gmail.com>
	<3d5db09e0901201420v2195969dm5261db800741c892@mail.gmail.com>
	<269388e30901201433p2e8233e9l4561b10088b18118@mail.gmail.com>
Message-ID: <c893b8530901201443r123cd383w3ec6e35e5d505d49@mail.gmail.com>

On Tue, Jan 20, 2009 at 2:33 PM, Ben Hood <0x6e6562 at gmail.com> wrote:

> Are you able to connect to the server with an AMQP client or even via
> something like netcat?

That also happened to me, for me the answer to this question is yes.
When installing from the rpm everything works fine, when installing from
source instead (on ubuntu) nothing actually works and rabbitmq-multi
hangs instead of completing (basically because rabbitmq-server doesn't
detach I would say).

-- 
Valentino Volonghi aka Dialtone
Now running MacOS X 10.5
Home Page: http://www.twisted.it



From mikeisgreat at gmail.com  Tue Jan 20 22:54:08 2009
From: mikeisgreat at gmail.com (Michael Steinfeld)
Date: Tue, 20 Jan 2009 17:54:08 -0500
Subject: [rabbitmq-discuss] getting started, broker runs;
	can't get status
In-Reply-To: <269388e30901201433p2e8233e9l4561b10088b18118@mail.gmail.com>
References: <3d5db09e0901201356r1cafa64aud71de1a8c2d28cef@mail.gmail.com>
	<269388e30901201404y2f36b9b8la2cfe7e45d2cf666@mail.gmail.com>
	<3d5db09e0901201420v2195969dm5261db800741c892@mail.gmail.com>
	<269388e30901201433p2e8233e9l4561b10088b18118@mail.gmail.com>
Message-ID: <3d5db09e0901201454t33a7e2eau437feabe63ce3ccf@mail.gmail.com>

On Tue, Jan 20, 2009 at 5:33 PM, Ben Hood <0x6e6562 at gmail.com> wrote:
> Michael,
>
> On Tue, Jan 20, 2009 at 10:20 PM, Michael Steinfeld
> <mikeisgreat at gmail.com> wrote:
>>>> Status of node rabbit at dbase2 ...
>>>> {badrpc,nodedown}
>
> Are you able to connect to the server with an AMQP client or even via
> something like netcat?


=INFO REPORT==== 20-Jan-2009::16:51:52 ===
starting TCP connection <0.187.0> from XXX.XXX.XXX.XXX:48178

=ERROR REPORT==== 20-Jan-2009::16:52:02 ===
error on TCP connection <0.187.0> from XXX.XXX.XXX.XXX:48178
{handshake_timeout,handshake}

=INFO REPORT==== 20-Jan-2009::16:52:02 ===
closing TCP connection <0.187.0> from XXX.XXX.XXX.XXX:48178

netstat:

tcp        0      0 0.0.0.0:5672                0.0.0.0:*
     LISTEN      21871/beam.smp
tcp        0      0 0.0.0.0:57950               0.0.0.0:*
     LISTEN      21871/beam.smp
tcp        0      0 127.0.0.1:57951             127.0.0.1:4369
     ESTABLISHED 21871/beam.smp




>
> Ben
>



From matthias at lshift.net  Tue Jan 20 23:30:14 2009
From: matthias at lshift.net (Matthias Radestock)
Date: Tue, 20 Jan 2009 23:30:14 +0000
Subject: [rabbitmq-discuss] getting started, broker runs;
	can't get status
In-Reply-To: <c893b8530901201443r123cd383w3ec6e35e5d505d49@mail.gmail.com>
References: <3d5db09e0901201356r1cafa64aud71de1a8c2d28cef@mail.gmail.com>	<269388e30901201404y2f36b9b8la2cfe7e45d2cf666@mail.gmail.com>	<3d5db09e0901201420v2195969dm5261db800741c892@mail.gmail.com>	<269388e30901201433p2e8233e9l4561b10088b18118@mail.gmail.com>
	<c893b8530901201443r123cd383w3ec6e35e5d505d49@mail.gmail.com>
Message-ID: <49765E86.605@lshift.net>

Valentino,

Valentino Volonghi wrote:
> when installing from source instead (on ubuntu) nothing actually
> works

Is this reproducible? If so please, please send us a *complete* 
transcript of what you were doing, i.e. covering the build, 
installation, how you started rabbitmq, etc, up to the point where you 
observe something not working.


Regards,

Matthias.



From 0x6e6562 at gmail.com  Tue Jan 20 23:39:59 2009
From: 0x6e6562 at gmail.com (Ben Hood)
Date: Tue, 20 Jan 2009 23:39:59 +0000
Subject: [rabbitmq-discuss] getting started, broker runs;
	can't get status
In-Reply-To: <3d5db09e0901201454t33a7e2eau437feabe63ce3ccf@mail.gmail.com>
References: <3d5db09e0901201356r1cafa64aud71de1a8c2d28cef@mail.gmail.com>
	<269388e30901201404y2f36b9b8la2cfe7e45d2cf666@mail.gmail.com>
	<3d5db09e0901201420v2195969dm5261db800741c892@mail.gmail.com>
	<269388e30901201433p2e8233e9l4561b10088b18118@mail.gmail.com>
	<3d5db09e0901201454t33a7e2eau437feabe63ce3ccf@mail.gmail.com>
Message-ID: <269388e30901201539k6fa2b007y943c3b430c28c2bd@mail.gmail.com>

Michael,

On Tue, Jan 20, 2009 at 10:54 PM, Michael Steinfeld
<mikeisgreat at gmail.com> wrote:
> On Tue, Jan 20, 2009 at 5:33 PM, Ben Hood <0x6e6562 at gmail.com> wrote:
>> Michael,
>>
>> On Tue, Jan 20, 2009 at 10:20 PM, Michael Steinfeld
>> <mikeisgreat at gmail.com> wrote:
>>>>> Status of node rabbit at dbase2 ...
>>>>> {badrpc,nodedown}
>>
>> Are you able to connect to the server with an AMQP client or even via
>> something like netcat?
>
>
> =INFO REPORT==== 20-Jan-2009::16:51:52 ===
> starting TCP connection <0.187.0> from XXX.XXX.XXX.XXX:48178
>
> =ERROR REPORT==== 20-Jan-2009::16:52:02 ===
> error on TCP connection <0.187.0> from XXX.XXX.XXX.XXX:48178
> {handshake_timeout,handshake}
>
> =INFO REPORT==== 20-Jan-2009::16:52:02 ===
> closing TCP connection <0.187.0> from XXX.XXX.XXX.XXX:48178

This indicates to me that Rabbit is potentially running and just that
you are having issues using the rabbitmqctl command:

1. As what user are you running rabbitmqctl and the server? On the same machine?
2. Can you send the complete log file?

Ben



From darien at kindlund.com  Tue Jan 20 23:57:58 2009
From: darien at kindlund.com (Darien Kindlund)
Date: Tue, 20 Jan 2009 18:57:58 -0500
Subject: [rabbitmq-discuss] STOMP Connector / Net::Stomp / Custom Headers
Message-ID: <50c8ffe90901201557w6dcae5f2t323dd999e07078d8@mail.gmail.com>

Hi Tony,

Perhaps you can address this issue:  I've got two perl processes both
using Net::Stomp to talk to one another via the RabbitMQ STOMP
connector.

1) When sending a message, I've tried setting the header named:
'reply-to', 'reply_to', x-reply-to', and 'x_reply_to'.  In *all*
cases, it seems that the STOMP connector strips this header before
sending the message through to the receiving *perl* process.

So, I ask, how can two perl processes effectively send messages to
each other, where one of the perl processes sets up a "temporary"
queue and routing_key and needs to let the other perl process know the
temporary routing key in order to receive any type of response?

2) In general, how does the STOMP connector deal with custom headers
via Net::Stomp?  Does it strip out all custom headers?  Or only custom
headers that don't begin with 'x-'?

Regards,
-- Darien



From mikeisgreat at gmail.com  Wed Jan 21 00:00:38 2009
From: mikeisgreat at gmail.com (Michael Steinfeld)
Date: Tue, 20 Jan 2009 19:00:38 -0500
Subject: [rabbitmq-discuss] getting started, broker runs;
	can't get status
In-Reply-To: <269388e30901201539k6fa2b007y943c3b430c28c2bd@mail.gmail.com>
References: <3d5db09e0901201356r1cafa64aud71de1a8c2d28cef@mail.gmail.com>
	<269388e30901201404y2f36b9b8la2cfe7e45d2cf666@mail.gmail.com>
	<3d5db09e0901201420v2195969dm5261db800741c892@mail.gmail.com>
	<269388e30901201433p2e8233e9l4561b10088b18118@mail.gmail.com>
	<3d5db09e0901201454t33a7e2eau437feabe63ce3ccf@mail.gmail.com>
	<269388e30901201539k6fa2b007y943c3b430c28c2bd@mail.gmail.com>
Message-ID: <3d5db09e0901201600o56660be0gc1ea8fbc91824245@mail.gmail.com>

On Tue, Jan 20, 2009 at 6:39 PM, Ben Hood <0x6e6562 at gmail.com> wrote:
> Michael,
>
> On Tue, Jan 20, 2009 at 10:54 PM, Michael Steinfeld
> <mikeisgreat at gmail.com> wrote:
>> On Tue, Jan 20, 2009 at 5:33 PM, Ben Hood <0x6e6562 at gmail.com> wrote:
>>> Michael,
>>>
>>> On Tue, Jan 20, 2009 at 10:20 PM, Michael Steinfeld
>>> <mikeisgreat at gmail.com> wrote:
>>>>>> Status of node rabbit at dbase2 ...
>>>>>> {badrpc,nodedown}
>>>
>>> Are you able to connect to the server with an AMQP client or even via
>>> something like netcat?
>>
>>
>> =INFO REPORT==== 20-Jan-2009::16:51:52 ===
>> starting TCP connection <0.187.0> from XXX.XXX.XXX.XXX:48178
>>
>> =ERROR REPORT==== 20-Jan-2009::16:52:02 ===
>> error on TCP connection <0.187.0> from XXX.XXX.XXX.XXX:48178
>> {handshake_timeout,handshake}
>>
>> =INFO REPORT==== 20-Jan-2009::16:52:02 ===
>> closing TCP connection <0.187.0> from XXX.XXX.XXX.XXX:48178
>
> This indicates to me that Rabbit is potentially running and just that
> you are having issues using the rabbitmqctl command:
>
> 1. As what user are you running rabbitmqctl and the server? On the same machine?

I have not added a new user, just using the default. Yes, I am running
rabbitmqctl on the same machine


> 2. Can you send the complete log file?

I did send the complete log file, there is not much in it. However,
using nc -z I get this:

[root at staging lib]# nc -z XXX.XXX.XXX.XXX 5672
Connection to XXX.XXX.XXX.XXX 5672 port [tcp/amqp] succeeded!

---------------------------

=INFO REPORT==== 20-Jan-2009::17:47:30 ===
accepted TCP connection on 0.0.0.0:5672 from XXX.XXX.XXX.XXX:59091

=INFO REPORT==== 20-Jan-2009::17:47:30 ===
starting TCP connection <0.207.0> from XXX.XXX.XXX.XXX:59091

=ERROR REPORT==== 20-Jan-2009::17:47:30 ===
error on TCP connection <0.207.0> from XXX.XXX.XXX.XXX:59091
connection_closed_abruptly

=INFO REPORT==== 20-Jan-2009::17:47:30 ===
closing TCP connection <0.207.0> from XXX.XXX.XXX.XXX:59091


-- Mike


>
> Ben
>



From 0x6e6562 at gmail.com  Wed Jan 21 00:18:10 2009
From: 0x6e6562 at gmail.com (Ben Hood)
Date: Wed, 21 Jan 2009 00:18:10 +0000
Subject: [rabbitmq-discuss] getting started, broker runs;
	can't get status
In-Reply-To: <3d5db09e0901201600o56660be0gc1ea8fbc91824245@mail.gmail.com>
References: <3d5db09e0901201356r1cafa64aud71de1a8c2d28cef@mail.gmail.com>
	<269388e30901201404y2f36b9b8la2cfe7e45d2cf666@mail.gmail.com>
	<3d5db09e0901201420v2195969dm5261db800741c892@mail.gmail.com>
	<269388e30901201433p2e8233e9l4561b10088b18118@mail.gmail.com>
	<3d5db09e0901201454t33a7e2eau437feabe63ce3ccf@mail.gmail.com>
	<269388e30901201539k6fa2b007y943c3b430c28c2bd@mail.gmail.com>
	<3d5db09e0901201600o56660be0gc1ea8fbc91824245@mail.gmail.com>
Message-ID: <269388e30901201618t32daa701k3590ab5877b1c611@mail.gmail.com>

Michael,

On Wed, Jan 21, 2009 at 12:00 AM, Michael Steinfeld
<mikeisgreat at gmail.com> wrote:
>> 1. As what user are you running rabbitmqctl and the server? On the same machine?
>
> I have not added a new user, just using the default. Yes, I am running
> rabbitmqctl on the same machine.

What user is the server running as?

And what user is running rabbitmqctl?

>> 2. Can you send the complete log file?
>
> I did send the complete log file, there is not much in it. However,
> using nc -z I get this:

So this looks like the server could be running. Have you tried running
an AMQP against it?

Ben



From norbu09 at googlemail.com  Wed Jan 21 00:26:23 2009
From: norbu09 at googlemail.com (lenz)
Date: Wed, 21 Jan 2009 13:26:23 +1300
Subject: [rabbitmq-discuss] STOMP Connector / Net::Stomp / Custom Headers
In-Reply-To: <50c8ffe90901201557w6dcae5f2t323dd999e07078d8@mail.gmail.com>
References: <50c8ffe90901201557w6dcae5f2t323dd999e07078d8@mail.gmail.com>
Message-ID: <e25246b60901201626y7c3f7c91n8c90f9cfba86ab51@mail.gmail.com>

hi,
i tried to work in production with a bridge between erlang and perl using
Net::STOMP on RabbitMQ. in short, it did not work because of the limitations
of STOMP. i have some libs around Net::STOMP that do RPC style stuff and can
probably clean them up a bit and push them on github.
we intended to write a native AMQP perl implementation but resources got
used up in other projects. if one of you would put some time in as well we
could probably bump out a first version in not too much time and write the
overdue perl implementation finally.

thoughts?

cheers
lenz

On Wed, Jan 21, 2009 at 12:57 PM, Darien Kindlund <darien at kindlund.com>wrote:

> Hi Tony,
>
> Perhaps you can address this issue:  I've got two perl processes both
> using Net::Stomp to talk to one another via the RabbitMQ STOMP
> connector.
>
> 1) When sending a message, I've tried setting the header named:
> 'reply-to', 'reply_to', x-reply-to', and 'x_reply_to'.  In *all*
> cases, it seems that the STOMP connector strips this header before
> sending the message through to the receiving *perl* process.
>
> So, I ask, how can two perl processes effectively send messages to
> each other, where one of the perl processes sets up a "temporary"
> queue and routing_key and needs to let the other perl process know the
> temporary routing key in order to receive any type of response?
>
> 2) In general, how does the STOMP connector deal with custom headers
> via Net::Stomp?  Does it strip out all custom headers?  Or only custom
> headers that don't begin with 'x-'?
>
> Regards,
> -- Darien
>
> _______________________________________________
> rabbitmq-discuss mailing list
> rabbitmq-discuss at lists.rabbitmq.com
> http://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss
>



-- 
iWantMyName.com
painless domain registration (finally)
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20090121/4f3a9633/attachment.htm 

From darien at kindlund.com  Wed Jan 21 03:55:15 2009
From: darien at kindlund.com (Darien Kindlund)
Date: Tue, 20 Jan 2009 22:55:15 -0500
Subject: [rabbitmq-discuss] STOMP Connector / Net::Stomp / Custom Headers
In-Reply-To: <e25246b60901201626y7c3f7c91n8c90f9cfba86ab51@mail.gmail.com>
References: <50c8ffe90901201557w6dcae5f2t323dd999e07078d8@mail.gmail.com>
	<e25246b60901201626y7c3f7c91n8c90f9cfba86ab51@mail.gmail.com>
Message-ID: <50c8ffe90901201955t55d1b79s117be071afbd2c9d@mail.gmail.com>

Hi lenz,

I believe Eric Rybski is currently working on a Net::AMQP perl module;
however, he may be interested in the code you've developed so far.
I've CC'd him in case there's interest.

Regarding one of the original issues (1), it turns out the STOMP
connector requires custom headers to be prefixed as 'X-' within a
Net::Stomp->send() hashref.  Apparently, the 'X-' is case sensitive,
so 'x-' prefixes would get stripped as well.

So, a general hack would be to tack on an 'X-reply-to' and process the
header as if it were the original 'reply_to' one.

-- Darien

On Tue, Jan 20, 2009 at 7:26 PM, lenz <norbu09 at googlemail.com> wrote:
> hi,
> i tried to work in production with a bridge between erlang and perl using
> Net::STOMP on RabbitMQ. in short, it did not work because of the limitations
> of STOMP. i have some libs around Net::STOMP that do RPC style stuff and can
> probably clean them up a bit and push them on github.
> we intended to write a native AMQP perl implementation but resources got
> used up in other projects. if one of you would put some time in as well we
> could probably bump out a first version in not too much time and write the
> overdue perl implementation finally.
> thoughts?
> cheers
> lenz
>
> On Wed, Jan 21, 2009 at 12:57 PM, Darien Kindlund <darien at kindlund.com>
> wrote:
>>
>> Hi Tony,
>>
>> Perhaps you can address this issue:  I've got two perl processes both
>> using Net::Stomp to talk to one another via the RabbitMQ STOMP
>> connector.
>>
>> 1) When sending a message, I've tried setting the header named:
>> 'reply-to', 'reply_to', x-reply-to', and 'x_reply_to'.  In *all*
>> cases, it seems that the STOMP connector strips this header before
>> sending the message through to the receiving *perl* process.
>>
>> So, I ask, how can two perl processes effectively send messages to
>> each other, where one of the perl processes sets up a "temporary"
>> queue and routing_key and needs to let the other perl process know the
>> temporary routing key in order to receive any type of response?
>>
>> 2) In general, how does the STOMP connector deal with custom headers
>> via Net::Stomp?  Does it strip out all custom headers?  Or only custom
>> headers that don't begin with 'x-'?
>>
>> Regards,
>> -- Darien
>>
>> _______________________________________________
>> rabbitmq-discuss mailing list
>> rabbitmq-discuss at lists.rabbitmq.com
>> http://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss
>
>
>
> --
> iWantMyName.com
> painless domain registration (finally)
>



From has.sox at gmail.com  Wed Jan 21 04:03:30 2009
From: has.sox at gmail.com (Daniel N)
Date: Wed, 21 Jan 2009 15:03:30 +1100
Subject: [rabbitmq-discuss] Tracking Queues and Exchanges
Message-ID: <2fff50390901202003xce625fau39f1fb01c6561f10@mail.gmail.com>

Hey there guys,

I've tried to locate this in the docs but I haven't been able to find it
(not that it's not there).

Is it possible to query exchanges and queues to find out what's happening?

Specifically, what queues are on any given exchange, how many messages it's
doing per s etc.

For Queues, how many messages are in it at any given time, how many / what
clients are reading from it?

I'm currently using the amqp ruby library to connect and setup my workers.

Thanx for any pointers.

Cheers
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20090121/fa284cf2/attachment.htm 

From michael.s.klishin at gmail.com  Wed Jan 21 07:36:03 2009
From: michael.s.klishin at gmail.com (Michael Klishin)
Date: Wed, 21 Jan 2009 10:36:03 +0300
Subject: [rabbitmq-discuss]  getting started, broker runs; can't get status
In-Reply-To: <269388e30901201404y2f36b9b8la2cfe7e45d2cf666@mail.gmail.com>
References: <3d5db09e0901201356r1cafa64aud71de1a8c2d28cef@mail.gmail.com>
	<269388e30901201404y2f36b9b8la2cfe7e45d2cf666@mail.gmail.com>
Message-ID: <FC9EA68C-BFE9-4A00-BCB7-F9C0F2E4DBF6@gmail.com>

On 21.01.2009, at 1:04, Ben Hood wrote:

> This link might help:
>
> http://lettuce.squarespace.com/faq/erlang/what-does-badrpcnodedown-mean.html


Ben,

That link is password protected for me.
In fact, http://lettuce.squarespace.com asks me for credentials, too  
(weblog account, not HTTP basic authentication)

MK




From michael.s.klishin at gmail.com  Wed Jan 21 07:39:01 2009
From: michael.s.klishin at gmail.com (Michael Klishin)
Date: Wed, 21 Jan 2009 10:39:01 +0300
Subject: [rabbitmq-discuss]  getting started, broker runs; can't get status
In-Reply-To: <3d5db09e0901201356r1cafa64aud71de1a8c2d28cef@mail.gmail.com>
References: <3d5db09e0901201356r1cafa64aud71de1a8c2d28cef@mail.gmail.com>
Message-ID: <CF2A3612-3DFB-424F-90F2-EC6627B42E30@gmail.com>


On 21.01.2009, at 0:56, Michael Steinfeld wrote:

> Can someone tell me what I can do to provide myself and the list with
> more information?


I often noticed that the same problem happens with Ejabberd control  
script because
in some distributions Erlang cookie file script uses is located where  
your user cannot read it, and thus,
Erlang connection to the server fails.

Not sure what configuration looks like for RPM packages you use, but  
this may be a good thing to
double check.

MK




From 0x6e6562 at gmail.com  Wed Jan 21 08:37:35 2009
From: 0x6e6562 at gmail.com (Ben Hood)
Date: Wed, 21 Jan 2009 08:37:35 +0000
Subject: [rabbitmq-discuss] Tracking Queues and Exchanges
In-Reply-To: <2fff50390901202003xce625fau39f1fb01c6561f10@mail.gmail.com>
References: <2fff50390901202003xce625fau39f1fb01c6561f10@mail.gmail.com>
Message-ID: <269388e30901210037u2e7cb2e5yb8c5481d94bb67d8@mail.gmail.com>

Daniel,

On Wed, Jan 21, 2009 at 4:03 AM, Daniel N <has.sox at gmail.com> wrote:
> I've tried to locate this in the docs but I haven't been able to find it
> (not that it's not there).

Have you read this?

http://www.rabbitmq.com/admin-guide.html#server_status

> Specifically, what queues are on any given exchange, how many messages it's
> doing per s etc.

This is not possible because we don't expose statistics for delivered
messages, i.e. the case when messages don't get queued, just
delivered.

> For Queues, how many messages are in it at any given time, how many / what
> clients are reading from it?

You should be able to get these. See the above documentation.

> I'm currently using the amqp ruby library to connect and setup my workers.

These is not exposed by the amqp ruby library, just via the rabbitmqctl CLI.

HTH,

Ben



From 0x6e6562 at gmail.com  Wed Jan 21 08:40:46 2009
From: 0x6e6562 at gmail.com (Ben Hood)
Date: Wed, 21 Jan 2009 08:40:46 +0000
Subject: [rabbitmq-discuss] getting started, broker runs;
	can't get status
In-Reply-To: <FC9EA68C-BFE9-4A00-BCB7-F9C0F2E4DBF6@gmail.com>
References: <3d5db09e0901201356r1cafa64aud71de1a8c2d28cef@mail.gmail.com>
	<269388e30901201404y2f36b9b8la2cfe7e45d2cf666@mail.gmail.com>
	<FC9EA68C-BFE9-4A00-BCB7-F9C0F2E4DBF6@gmail.com>
Message-ID: <269388e30901210040y2499c930o91801bc669b1fb42@mail.gmail.com>

Michael,

On Wed, Jan 21, 2009 at 7:36 AM, Michael Klishin
<michael.s.klishin at gmail.com> wrote:
>> http://lettuce.squarespace.com/faq/erlang/what-does-badrpcnodedown-mean.html
> That link is password protected for me.
> In fact, http://lettuce.squarespace.com asks me for credentials, too (weblog
> account, not HTTP basic authentication)

At the time when I sent the link to Michael Steinfeld, it was active.

In the meantime, I cancelled the whole FAQ site, so hopefully he might
have read it already.

Ben



From 0x6e6562 at gmail.com  Wed Jan 21 08:44:32 2009
From: 0x6e6562 at gmail.com (Ben Hood)
Date: Wed, 21 Jan 2009 08:44:32 +0000
Subject: [rabbitmq-discuss] getting started, broker runs;
	can't get status
In-Reply-To: <CF2A3612-3DFB-424F-90F2-EC6627B42E30@gmail.com>
References: <3d5db09e0901201356r1cafa64aud71de1a8c2d28cef@mail.gmail.com>
	<CF2A3612-3DFB-424F-90F2-EC6627B42E30@gmail.com>
Message-ID: <269388e30901210044u3547de46m85f3d8e24a027d9f@mail.gmail.com>

Michael (Klishin)

On Wed, Jan 21, 2009 at 7:39 AM, Michael Klishin
<michael.s.klishin at gmail.com> wrote:
> I often noticed that the same problem happens with Ejabberd control
> script because
> in some distributions Erlang cookie file script uses is located where
> your user cannot read it, and thus,
> Erlang connection to the server fails.

This is why I asked Michael Steinfeld as what specific user *both*
processes were running as, but I didn't really get a clear answer -
maybe your point can help highlight why I need to know specifcally as
what user both OS processes are running as.

Ben



From 0x6e6562 at gmail.com  Wed Jan 21 10:07:18 2009
From: 0x6e6562 at gmail.com (Ben Hood)
Date: Wed, 21 Jan 2009 10:07:18 +0000
Subject: [rabbitmq-discuss] RabbitMQ 1.5.1 released
Message-ID: <269388e30901210207t2785a770jece856ffaaaea973@mail.gmail.com>

The RabbitMQ team is pleased to announce the release of RabbitMQ 1.5.1.

This release has 'final' status and fixes a number of bugs in the
server, the .net client, and the Debian/RPM packaging.

For details see the attached release notes.

Binary and source distributions of the new release can be found in the
usual place, at http://www.rabbitmq.com/download.html

We recommend that all users of earlier versions of RabbitMQ upgrade to
this latest release.

As always, we welcome any questions, bug reports, and other feedback on
this release, as well as general suggestions for features and
enhancements in future releases. Mail us via the RabbitMQ discussion
list at rabbitmq-discuss at lists.rabbitmq.com, or directly at
info at rabbitmq.com.


Regards,

The RabbitMQ Team

Release: RabbitMQ 1.5.1
Status : final

Release Highlights
==================

server
------
bug fixes
- handle race condition between routing and queue deletion that could
  cause errors on message publication
- the default settings for RABBITMQ_SERVER_ERL_ARGS were not taken
  into account, resulting in decreased network performance
- add workaround for the Erlang/OTP bug OTP-7025, which caused errors
  in topic routing in Erlang/OTP versions older than R12B-1
- display the nodes of queue and connection processes in rabbitmqctl's
  list_{queues,connections} command. Previously we displayed pids,
  which was broken and not particularly useful.

enhancements
- enable 'channel.flow'-based producer throttling by default on Linux
- include stack traces in error reports in rabbit.log
- speed up rabbitmqctl and rabbitmq-multi

Java client
-----------
no significant changes

.net client
-----------
bug fixes
- handle race condition in client-initiated connection closure that
  could result in an OperationInterruptedException

enhancements
- re-enable heartbeating by default

building & packaging
--------------------
bug fixes
- fix bug that caused removal of RPMs to be incomplete
- produce separate RPMs for SuSE-like systems to resolve various
  incompatibilities
- rename BUILD to README in order to prevent build failures on systems
  with case-insensitive file naming (such as OS X)

enhancements
- minor tweaks in Debian and RPM packaging for better compliance with
  packaging guidelines
- better handling of errors encountered during code generation


Upgrading
=========

No special precautions are necessary when upgrading from
RabbitMQ-1.5.0.

When upgrading from earlier releases, note that the database schema
has changed in RabbitMQ-1.5.x. When the RabbitMQ server detects the
presence of an old database, it moves it to a backup location, creates
a fresh, empty database, and logs a warning.

If your RabbitMQ installation contains important data, such as user
accounts, durable exchanges and queues, or persistent messages, then
we recommend you contact support at rabbitmq.com for assistance with the
upgrade.


Credits
=======

We would like to thank the following individuals for submitting bug
reports and feedback that we incorporated into this release:

Aymerick J?hanne
Chuck Remes
Ezra Zygmuntowicz
Glenn Robuck
Mathias Gug
Michael Barker



From opendev at gmail.com  Wed Jan 21 10:40:11 2009
From: opendev at gmail.com (Joern)
Date: Wed, 21 Jan 2009 11:40:11 +0100
Subject: [rabbitmq-discuss] AMQP security / dealing with Flex subscribers
Message-ID: <9e009ad0901210240j13fc8eecq5faa8cd4ba53cbf0@mail.gmail.com>

Hi List,

integrating a Flex client into an AMQP infrastructure seems
straightforward enough (and the logical thing to do if your goal is to
provide asynchronous messenging for those). I am still quite unsure
how to deal with security and access control issues. Are there plans
to integrate application specific ACLs into RabbitMQ? Or are there
other ways to deal with the issue of non-intranet mq clients?

I got a couple of thoughts on how such an access control could look
like but I cannot help but wonder if there isn't such thing in place
already.

Best regards,


Joern
--



From matthias at lshift.net  Wed Jan 21 12:39:41 2009
From: matthias at lshift.net (Matthias Radestock)
Date: Wed, 21 Jan 2009 12:39:41 +0000
Subject: [rabbitmq-discuss] AMQP security / dealing with Flex subscribers
In-Reply-To: <9e009ad0901210240j13fc8eecq5faa8cd4ba53cbf0@mail.gmail.com>
References: <9e009ad0901210240j13fc8eecq5faa8cd4ba53cbf0@mail.gmail.com>
Message-ID: <4977178D.3050808@lshift.net>

Joern,

Joern wrote:
> Are there plans
> to integrate application specific ACLs into RabbitMQ?

Our plans are documented at
   https://dev.rabbitmq.com/wiki/AccessControlDesign
and development of ACLs is underway. Comments welcome.


Regards,

Matthias.



From cremes.devlist at mac.com  Wed Jan 21 15:00:42 2009
From: cremes.devlist at mac.com (Chuck Remes)
Date: Wed, 21 Jan 2009 09:00:42 -0600
Subject: [rabbitmq-discuss] Tracking Queues and Exchanges
In-Reply-To: <269388e30901210037u2e7cb2e5yb8c5481d94bb67d8@mail.gmail.com>
References: <2fff50390901202003xce625fau39f1fb01c6561f10@mail.gmail.com>
	<269388e30901210037u2e7cb2e5yb8c5481d94bb67d8@mail.gmail.com>
Message-ID: <78CA39E9-0AAB-4277-8904-309A5D25EFA9@mac.com>


On Jan 21, 2009, at 2:37 AM, Ben Hood wrote:

> Daniel,
>
> On Wed, Jan 21, 2009 at 4:03 AM, Daniel N <has.sox at gmail.com> wrote:
>> I've tried to locate this in the docs but I haven't been able to  
>> find it
>> (not that it's not there).
>
> Have you read this?
>
> http://www.rabbitmq.com/admin-guide.html#server_status
>
>> Specifically, what queues are on any given exchange, how many  
>> messages it's
>> doing per s etc.
>
> This is not possible because we don't expose statistics for delivered
> messages, i.e. the case when messages don't get queued, just
> delivered.
>
>> For Queues, how many messages are in it at any given time, how  
>> many / what
>> clients are reading from it?
>
> You should be able to get these. See the above documentation.
>
>> I'm currently using the amqp ruby library to connect and setup my  
>> workers.
>
> These is not exposed by the amqp ruby library, just via the  
> rabbitmqctl CLI.

You can retrieve the number of messages in the queue via the ruby amqp  
library using the #status method.

The following code isn't great but it does illustrate the point. :)

The rest of Ben's reply is correct.

cr


require 'rubygems'
require 'mq'

AMQP.start do
   def setup_exchange
     exchange = MQ.direct('bar')
     EM.add_periodic_timer(1) do
       exchange.publish "random number #{rand(1000)}"
     end
   end

   def synchronous_subscribe
     @foo = MQ.queue('foo queue')
     @foo.bind 'bar'
     EM.add_periodic_timer(2) do
       @foo.pop do |body|
         p body
       end
     end
   end

   def get_status
     EM.add_periodic_timer(1) do
       @foo.status do |message_count|
         p message_count
       end
     end
   end

   setup_exchange
   synchronous_subscribe
   get_status
end



From 0x6e6562 at gmail.com  Thu Jan 22 10:22:45 2009
From: 0x6e6562 at gmail.com (Ben Hood)
Date: Thu, 22 Jan 2009 10:22:45 +0000
Subject: [rabbitmq-discuss] Access Control
Message-ID: <269388e30901220222g185d3c00x4ff1edd2a1b64ff7@mail.gmail.com>

Dear List,

Those people who have been following the discussion on access control
in Rabbit are probably aware of the design document that we produced.

The document outlines how we might implement this requirement using
plain jane ACL or capabilities.

Whilst we have decided to go down the ACL route and Matthias is well
on the way to having knocked this code out, I decided to document the
findings of the POC for using capabilities.

This is because it is an interesting concept and the code that was
written is real implementation for a real use case, hence I think it
is valuable to document the experiences gained from having done this.

The article is here:

http://hopper.squarespace.com/blog/2009/1/22/capabilities-for-messaging.html

Ben



From matthias at lshift.net  Thu Jan 22 12:42:55 2009
From: matthias at lshift.net (Matthias Radestock)
Date: Thu, 22 Jan 2009 12:42:55 +0000
Subject: [rabbitmq-discuss] RabbitMQ on NetBSD
Message-ID: <497869CF.5080801@lshift.net>

There have been some reports of people running into problems starting 
RabbitMQ on NetBSD, with errors in the logs like

   application: os_mon
   exited: {shutdown,{os_mon,start,[normal,[]]}}
   type: temporary

and

   {unsupported_os,{unix,netbsd}}

I had a brief look into this and it appears that the root cause is in 
Erlang/OTP's cpu_sup code, the internals of which match on the Unix 
flavor and only accept sunos, linux, darwin, freebsd, openbsd, irix64, irix.

RabbitMQ uses cpu_sup's load monitoring to redirect clients to less 
loaded hosts in a clustered setup. It copes with cpu_sup not being 
available by falling back on other (less accurate) statistics.

So one way around the startup problem on NetBSD (and other Unix flavours 
that are unsupported by cpu_sup) is to disable cpu_sup in the 
rabbitmq_server startup script by changing the line
     -os_mon start_cpu_sup true \
to
     -os_mon start_cpu_sup false \

I haven't got a NetBSD box handy to test this, so if anybody can confirm 
that the above works please let the list know.


Regards,

Matthias.



From dialtone at gmail.com  Thu Jan 22 21:02:32 2009
From: dialtone at gmail.com (Valentino Volonghi)
Date: Thu, 22 Jan 2009 13:02:32 -0800
Subject: [rabbitmq-discuss] getting started, broker runs;
	can't get status
In-Reply-To: <49765E86.605@lshift.net>
References: <3d5db09e0901201356r1cafa64aud71de1a8c2d28cef@mail.gmail.com>	<269388e30901201404y2f36b9b8la2cfe7e45d2cf666@mail.gmail.com>	<3d5db09e0901201420v2195969dm5261db800741c892@mail.gmail.com>	<269388e30901201433p2e8233e9l4561b10088b18118@mail.gmail.com>
	<c893b8530901201443r123cd383w3ec6e35e5d505d49@mail.gmail.com>
	<49765E86.605@lshift.net>
Message-ID: <9F62222D-82AD-4CB1-9FDA-668ED6D797B4@gmail.com>


On Jan 20, 2009, at 3:30 PM, Matthias Radestock wrote:

> Valentino,
>
> Valentino Volonghi wrote:
>> when installing from source instead (on ubuntu) nothing actually
>> works
>
> Is this reproducible? If so please, please send us a *complete*  
> transcript of what you were doing, i.e. covering the build,  
> installation, how you started rabbitmq, etc, up to the point where  
> you observe something not working.


I think I get it now. The reason is how the script is written using
`dirname $0`

it basically means that if you move the script to /usr/local/bin/ and  
run from it
it has the badrpc error for some reason that I cannot understand but  
if you
run it from its own directory there's no issue.

-- 
Valentino Volonghi aka Dialtone
Now running MacOS X 10.5
Home Page: http://www.twisted.it
http://www.adroll.com

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20090122/8b7e34e4/attachment.htm 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: PGP.sig
Type: application/pgp-signature
Size: 194 bytes
Desc: This is a digitally signed message part
Url : http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20090122/8b7e34e4/attachment.pgp 

From mikeisgreat at gmail.com  Thu Jan 22 22:07:46 2009
From: mikeisgreat at gmail.com (Michael Steinfeld)
Date: Thu, 22 Jan 2009 17:07:46 -0500
Subject: [rabbitmq-discuss] getting started, broker runs;
	can't get status
In-Reply-To: <9F62222D-82AD-4CB1-9FDA-668ED6D797B4@gmail.com>
References: <3d5db09e0901201356r1cafa64aud71de1a8c2d28cef@mail.gmail.com>
	<269388e30901201404y2f36b9b8la2cfe7e45d2cf666@mail.gmail.com>
	<3d5db09e0901201420v2195969dm5261db800741c892@mail.gmail.com>
	<269388e30901201433p2e8233e9l4561b10088b18118@mail.gmail.com>
	<c893b8530901201443r123cd383w3ec6e35e5d505d49@mail.gmail.com>
	<49765E86.605@lshift.net>
	<9F62222D-82AD-4CB1-9FDA-668ED6D797B4@gmail.com>
Message-ID: <3d5db09e0901221407p21994b0ck880062a66c6f8536@mail.gmail.com>

On Thu, Jan 22, 2009 at 4:02 PM, Valentino Volonghi <dialtone at gmail.com> wrote:
>
> On Jan 20, 2009, at 3:30 PM, Matthias Radestock wrote:
>
> Valentino,
>
> Valentino Volonghi wrote:
>
> when installing from source instead (on ubuntu) nothing actually
>
> works

Well, for the life of me I could not get it to work on RHEL4 x86_64.
Oddly enough the broker would run.

I tried source and binary.

>
> Is this reproducible? If so please, please send us a *complete* transcript
> of what you were doing, i.e. covering the build, installation, how you
> started rabbitmq, etc, up to the point where you observe something not
> working.
>
> I think I get it now. The reason is how the script is written using
> `dirname $0`
> it basically means that if you move the script to /usr/local/bin/ and run
> from it
> it has the badrpc error for some reason that I cannot understand but if you
> run it from its own directory there's no issue.

I finally gave up on RHEL4. However, I have a RHEL5 box that I
installed it on and everything seems to be fine. I followed the same
procedure I did on teh initial box.
I'll have more to say when I get a moment to do so..

-- Mike


> --
> Valentino Volonghi aka Dialtone
> Now running MacOS X 10.5
> Home Page: http://www.twisted.it
> http://www.adroll.com
>
> _______________________________________________
> rabbitmq-discuss mailing list
> rabbitmq-discuss at lists.rabbitmq.com
> http://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss
>
>



From 0x6e6562 at gmail.com  Thu Jan 22 23:14:10 2009
From: 0x6e6562 at gmail.com (Ben Hood)
Date: Thu, 22 Jan 2009 23:14:10 +0000
Subject: [rabbitmq-discuss] ACLs
Message-ID: <269388e30901221514m6a6ddecdq244b85db99eb7dfc@mail.gmail.com>

Dear List,

Those of you who have following the recent discussion about ACLs may
be interested in the merge of the new ACL functionality into the
server mainline.

This will go out as part of the next major release.

For now, you can access this from the default branch in hg.

I've attached a synopsis of the new functionality.

Thanks go to Matthias for getting this done so quickly.

Ben

--snip--

Access control

When an AMQP client establishes a connection to an AMQP server, it
specifies a virtual host within which it intends to operate. A first
level of access control is enforced at this point, with the server
checking whether the user has any permissions to access the virtual
hosts, and rejecting the connection attempt otherwise.

Resources, i.e. exchanges and queues, are named entities inside a
particular virtual host; the same name denotes a different resource in
each virtual host. A second level of access control is enforced when
certain operations are performed on resources.

RabbitMQ distinguishes between configuration and messaging operations
on a resource. The former alter the messaging topology. Examples are
exchange and queue declaration and binding. The latter involve
messaging operations such as publication, setting up consumers, and
purging queues.

In order to perform an operation on a resource the user must have been
granted the appropriate permissions for it. The permissions are
expressed as a pair of regular expressions - one for configuration and
one for messaging - on per-vhost basis. The user is granted the
respective permission for operations on all resources with names
matching the regular expressions. (Note: For convenience RabbitMQ maps
AMQP's default exchange's blank name to 'amq.default' when performing
permission checks.)

Some AMQP operations can create resources with server-generated names.
Every user has configuration and messaging permissions for such
resources. However, the names are strong and not discoverable as part
of the protocol, only through management functionality. Therefore
these resources are in effect private to the user unless they choose
to dilvuge their names to other users.
Creating a virtual host

rabbitmqctl add_vhost vhostpath

vhostpath
    The name of the virtual host entry to create.

For example:

rabbitmqctl add_vhost test

This command instructs the RabbitMQ broker to create a new virtual
host called test.
Deleting a virtual host

rabbitmqctl delete_vhost vhostpath

vhostpath
    The name of the virtual host entry to delete.

Deleting a virtual host deletes all its exchanges, queues, user
mappings and associated permissions.

For example:

rabbitmqctl delete_vhost test

This command instructs the RabbitMQ broker to delete the virtual host
called test.
Listing virtual hosts

rabbitmqctl list_vhosts

For example:

rabbitmqctl list_vhosts

This command instructs the RabbitMQ broker to list all virtual hosts.
Setting user permissions

rabbitmqctl set_permissions [-p vhostpath] username regexp regexp

vhostpath
    The name of the virtual host to which to grant the user access,
defaulting to /.
username
    The name of the user to grant access to the specified virtual host.
regexp
    The regular expressions for matching resource names for which the
user is granted configuration and messaging permissions, respectively.

For example:

rabbitmqctl set_permissions -p /myvhost tonyg "^tonyg-.*" ".*"

This command instructs the RabbitMQ broker to grant the user named
tonyg access to the virtual host called /myvhost, with configuration
permissions on all resources whose names starts with "tonyg-", and
messaging permissions on all resources.
Clearing user permissions

rabbitmqctl clear_permissions [-p vhostpath] username

vhostpath
    The name of the virtual host to which to deny the user access,
defaulting to /.
username
    The name of the user to grant access to the specified virtual host.

For example:

rabbitmqctl clear_permissions -p /myvhost tonyg

This command instructs the RabbitMQ broker to deny the user named
tonyg access to the virtual host called /myvhost.
Listing permissions in a virtual host

rabbitmqctl list_permissions [-p vhostpath]

vhostpath
    The name of the virtual host for which to list the users that have
been granted access to it, and their permissions. Defaults to /.

For example:

rabbitmqctl list_permissions -p /myvhost

This command instructs the RabbitMQ broker to list all the users which
have been granted access to the virtual host called /myvhost, and the
permissions they have for operations on resources in that virtual
host.
Listing user permissions

rabbitmqctl list_user_permissions username

username
    The name of the user for which to list the permissions.

For example:

rabbitmqctl list_user_permissions tonyg

This command instructs the RabbitMQ broker to list all the virtual
hosts to which the user named tonyg has been granted access, and the
permissions the user has for operations on resources in these virtual
hosts.



From opendev at gmail.com  Fri Jan 23 09:29:30 2009
From: opendev at gmail.com (Joern)
Date: Fri, 23 Jan 2009 10:29:30 +0100
Subject: [rabbitmq-discuss] AMQP security / dealing with Flex subscribers
In-Reply-To: <4977178D.3050808@lshift.net>
References: <9e009ad0901210240j13fc8eecq5faa8cd4ba53cbf0@mail.gmail.com>
	<4977178D.3050808@lshift.net>
Message-ID: <9e009ad0901230129nea9397dj6ad51df430507c3e@mail.gmail.com>

Hi Matthias,

2009/1/21 Matthias Radestock <matthias at lshift.net>:

> Our plans are documented at
>  https://dev.rabbitmq.com/wiki/AccessControlDesign
> and development of ACLs is underway. Comments welcome.

I wonder if the following would be an alternative for fine-granular,
application-specific access control logic.

 - Users are getting additional flags: 'untrusted' and 'trusted'.
 - Every action (binding, declaring, sending messages) of an
'untrusted' user is replicated as a message (in some easy to digest
format) to an access control system exchange.
 - Access control applications bind queues to this exchange and reply
with 'grant' or 'deny' (with configurable timeouts) or do other things
like logging / accounting. The results of an authorization reply may
be cached, depending on the reply of the access control application.
The cache can be flushed by access control applications and is
specific to the individual access control application and/or user in
question. The applications need 'trusted' users in order to bind to /
send messages to this system exchange.

This should be both, simple to implement and flexible for almost all
access control needs. This would also allow filtering / validating
individual messages which is probably out of the scope of every broker
specific access control implementation.

Does this make sense or am I overseeing something here?

Best regards,


Joern
--



From 0x6e6562 at gmail.com  Fri Jan 23 11:02:29 2009
From: 0x6e6562 at gmail.com (Ben Hood)
Date: Fri, 23 Jan 2009 11:02:29 +0000
Subject: [rabbitmq-discuss] Is there a use case for a queue with
	auto_delete=True and durable=True?
Message-ID: <269388e30901230302p24433d09xc23940e2fdc3d280@mail.gmail.com>

Brian,

Just posting this back via the mailing list because you did not choose
LShift's $10000 per question option ;-)

On Fri, Jan 23, 2009 at 9:05 AM, Ben Hood <ben at lshift.net> wrote:
> ----- Forwarded message from Brian Sullivan <bsullivan at lindenlab.com> -----
> I was just explaining scenarios for the various persistence settings, and
> couldn't come up with a use case for creating an auto-delete queue (which
> is the default), but setting durable = true.

Have you read what the 0.8/0.9.1 spec says on what effect each flag
has for the queue.declare command?

Though the spec does not specify default values, our internally
generated commands use a JSON version of the actual specification that
has been augmented with Rabbit considers to be *sensible* default
values.

In the file amqp-0.8.json the auto_delete flag on queue.declare is off.

The relevance of this is marginal because it is up to what the client
library actually puts on the wire.

> Upon restart after a server
> crash, I'd assume that the client would take a little bit of time to
> reconnect, in which case the queue would be deleted, even if it was
> durable, correct?

The events that trigger a consideration of the auto_delete flag in
Rabbit are subscription cancellations and the channel going down.

> Is there a use case for this combination of settings?  I have seen some
> posts that have been confused by not having queues remain when
> durable=true if people forget to set auto-delete=false, so it seems odd to
> have the defaults set the way they are (at least as they appear to be in
> the python lib)

I would consider it to be odd, but I'm not a lawyer.

Though the exact behavior of this scenario is IMHO not clearly defined
in the spec, I think that most implementations would take a common
sense approach.

>From the perspective of py-amqplib, I would say that it's over to
Barry to make a call on this.

BTW, feel free to question any spec related aspect of AMQP, we'll do
our best to try an explain why it is like it is, although we didn't
write it.

HTH,

Ben



From 0x6e6562 at gmail.com  Fri Jan 23 11:14:24 2009
From: 0x6e6562 at gmail.com (Ben Hood)
Date: Fri, 23 Jan 2009 11:14:24 +0000
Subject: [rabbitmq-discuss] AMQP security / dealing with Flex subscribers
In-Reply-To: <9e009ad0901230129nea9397dj6ad51df430507c3e@mail.gmail.com>
References: <9e009ad0901210240j13fc8eecq5faa8cd4ba53cbf0@mail.gmail.com>
	<4977178D.3050808@lshift.net>
	<9e009ad0901230129nea9397dj6ad51df430507c3e@mail.gmail.com>
Message-ID: <269388e30901230314r6300441cn7f0c139c0b3ac5f7@mail.gmail.com>

Joern,

On Fri, Jan 23, 2009 at 9:29 AM, Joern <opendev at gmail.com> wrote:
> I wonder if the following would be an alternative for fine-granular,
> application-specific access control logic.
>
>  - Users are getting additional flags: 'untrusted' and 'trusted'.
>  - Every action (binding, declaring, sending messages) of an
> 'untrusted' user is replicated as a message (in some easy to digest
> format) to an access control system exchange.
>  - Access control applications bind queues to this exchange and reply
> with 'grant' or 'deny' (with configurable timeouts) or do other things
> like logging / accounting. The results of an authorization reply may
> be cached, depending on the reply of the access control application.
> The cache can be flushed by access control applications and is
> specific to the individual access control application and/or user in
> question. The applications need 'trusted' users in order to bind to /
> send messages to this system exchange.

Maybe you could get away without needing to build in an explicit
grant/deny request/response cycle and having to differentiate between
trusted and untrusted users.

If you published the name of an exchange to the public, you could have
a security aware consumer process these messages and then forward them
to the real exchange, which would have an unguessable name that only
this consumer knows about.

This consumer could perform any logic that that it wants to.

BTW this is similar to the capabilities concept I described yesterday
- did you read the article?

HTH,

Ben



From bp at barryp.org  Fri Jan 23 15:19:59 2009
From: bp at barryp.org (Barry Pederson)
Date: Fri, 23 Jan 2009 09:19:59 -0600
Subject: [rabbitmq-discuss] Is there a use case for a queue
 with	auto_delete=True and durable=True?
In-Reply-To: <269388e30901230302p24433d09xc23940e2fdc3d280@mail.gmail.com>
References: <269388e30901230302p24433d09xc23940e2fdc3d280@mail.gmail.com>
Message-ID: <4979E01F.2060405@barryp.org>

Ben Hood wrote:
> Brian Sullivan wrote:
>> Is there a use case for this combination of settings?  I have seen some
>> posts that have been confused by not having queues remain when
>> durable=true if people forget to set auto-delete=false, so it seems odd to
>> have the defaults set the way they are (at least as they appear to be in
>> the python lib)
> 
> I would consider it to be odd, but I'm not a lawyer.
> 
> Though the exact behavior of this scenario is IMHO not clearly defined
> in the spec, I think that most implementations would take a common
> sense approach.
> 
> From the perspective of py-amqplib, I would say that it's over to
> Barry to make a call on this.

Brian:

IIRC as far as the py-amqplib defaults go...my thought was that if 
you're going to do something that makes a persistent change the server, 
such has having a queue that's durable, then I thought you should 
explicitly say so.  That way if you're just dabbling around or don't 
exactly know what you're doing, there's no permanent harm done.

Even if a case could be made that the defaults are not ideal, it's 
probably too late to change it now.  I supposed it could be addressed in 
documentation.

I agree that having the separate durable and auto_delete flags can be 
confusing, but that comes from the spec, and is just passed through by 
the client library - the broker is where the flags have an impact.

	Barry




From darien at kindlund.com  Fri Jan 23 15:32:58 2009
From: darien at kindlund.com (Darien Kindlund)
Date: Fri, 23 Jan 2009 10:32:58 -0500
Subject: [rabbitmq-discuss] Is there a use case for a queue with
	auto_delete=True and durable=True?
In-Reply-To: <269388e30901230302p24433d09xc23940e2fdc3d280@mail.gmail.com>
References: <269388e30901230302p24433d09xc23940e2fdc3d280@mail.gmail.com>
Message-ID: <50c8ffe90901230732y745b943fjfbd0efc1e085e359@mail.gmail.com>

Hi Ben,

Just my $0.02, but, I got the impression a (durable=True,
auto_delete=True) use case means: "Delete the queue ONLY after all
messages have been removed from the queue -- once the queue is empty."

A condition where this would apply is: Consider a producer/consumer
scenario.  The consumer creates a static exchange/queue (durable=True,
auto_delete=False) such that in the event of a network error, the
consumer can reconnect and resync with the queue.  Upon receipt of a
new message, the consumer sends an ACK message (part of the
application -- not the AMQP spec) back to the producer (using the
reply-to: header).

The producer creates a temporary exchange/queue (durable=True,
auto_delete=True) for receiving these ACK messages such that in the
event of a network error, the producer can reconnect and resync with
the queue.  From the producer's point of view, it wants a queue that
*remains alive until all messages have been flushed* from the queue.
In this case, lost messages are not acceptable.

A downside to this approach (obviously) are cases where logic errors
in the producer cause the producing app to die, which becomes a more
common problem than network errors.  In this case, RabbitMQ ends up
with a bunch of temporary producer queues with (maybe) one or 1 ACK
messages in each queue, that stick around forever.  In this case,
you'd have to write some sort of utility script to purge the
no-longer-used queues.

Therefore, (durable=True, auto_delete=True) comes in handy in cases
where the producing app:

1) has no logic errors (that cause it to disconnect without emptying its queue)
2) is talking across a network that is prone to channel disconnects

A couple of side notes:
- In this scenario, it maybe possible to 'timeout' a (durable=True,
auto_delete=True) queue, where if it has messages and has no
consumers, wait X minutes before deleting (configurable).

- If (durable=True, auto_delete=True) becomes an invalid configuration
in the next version of the AMQP specification, then the producing app
would have to contain application-level logic to deal with network
disconnects (rather than rely on AMQP to do the right thing).  Or, it
would have to switch to declaring a static queue and not rely on the
auto_delete option.

Regards,
-- Darien

On Fri, Jan 23, 2009 at 6:02 AM, Ben Hood <0x6e6562 at gmail.com> wrote:
> Brian,
>
> Just posting this back via the mailing list because you did not choose
> LShift's $10000 per question option ;-)
>
> On Fri, Jan 23, 2009 at 9:05 AM, Ben Hood <ben at lshift.net> wrote:
>> ----- Forwarded message from Brian Sullivan <bsullivan at lindenlab.com> -----
>> I was just explaining scenarios for the various persistence settings, and
>> couldn't come up with a use case for creating an auto-delete queue (which
>> is the default), but setting durable = true.
>
> Have you read what the 0.8/0.9.1 spec says on what effect each flag
> has for the queue.declare command?
>
> Though the spec does not specify default values, our internally
> generated commands use a JSON version of the actual specification that
> has been augmented with Rabbit considers to be *sensible* default
> values.
>
> In the file amqp-0.8.json the auto_delete flag on queue.declare is off.
>
> The relevance of this is marginal because it is up to what the client
> library actually puts on the wire.
>
>> Upon restart after a server
>> crash, I'd assume that the client would take a little bit of time to
>> reconnect, in which case the queue would be deleted, even if it was
>> durable, correct?
>
> The events that trigger a consideration of the auto_delete flag in
> Rabbit are subscription cancellations and the channel going down.
>
>> Is there a use case for this combination of settings?  I have seen some
>> posts that have been confused by not having queues remain when
>> durable=true if people forget to set auto-delete=false, so it seems odd to
>> have the defaults set the way they are (at least as they appear to be in
>> the python lib)
>
> I would consider it to be odd, but I'm not a lawyer.
>
> Though the exact behavior of this scenario is IMHO not clearly defined
> in the spec, I think that most implementations would take a common
> sense approach.
>
> From the perspective of py-amqplib, I would say that it's over to
> Barry to make a call on this.
>
> BTW, feel free to question any spec related aspect of AMQP, we'll do
> our best to try an explain why it is like it is, although we didn't
> write it.
>
> HTH,
>
> Ben
>
> _______________________________________________
> rabbitmq-discuss mailing list
> rabbitmq-discuss at lists.rabbitmq.com
> http://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss
>



From bsullivan at lindenlab.com  Fri Jan 23 17:33:26 2009
From: bsullivan at lindenlab.com (Brian Sullivan)
Date: Fri, 23 Jan 2009 09:33:26 -0800
Subject: [rabbitmq-discuss] Is there a use case for a queue
	with	auto_delete=True and durable=True?
In-Reply-To: <4979E01F.2060405@barryp.org>
References: <269388e30901230302p24433d09xc23940e2fdc3d280@mail.gmail.com>
	<4979E01F.2060405@barryp.org>
Message-ID: <5EC0B3BB-230C-4D09-BACC-C6B42D4BF67B@lindenlab.com>

Hi Barry,

Just for the record, I think I agree that the defaults should be  
towards minimizing leftovers on the server unless specifically  
desired.  So I think that setting auto_delete = true and durable =  
false by default makes sense.  The sometimes unfortunate bit is that  
to get what I was expect for "durable" queues, I need to set both flag  
in the opposite.

My only question here I guess is a curiosity one - is there a use case  
for having an auto-deleting, but durable queue?  I did look through  
the spec again but didn't find something along these lines.

Sorry Ben, I agree I should have sent this directly to the list.  ;)

Thanks all,
Brian

On Jan 23, 2009, at 7:19 AM, Barry Pederson wrote:

> Ben Hood wrote:
>> Brian Sullivan wrote:
>>> Is there a use case for this combination of settings?  I have seen  
>>> some
>>> posts that have been confused by not having queues remain when
>>> durable=true if people forget to set auto-delete=false, so it  
>>> seems odd to
>>> have the defaults set the way they are (at least as they appear to  
>>> be in
>>> the python lib)
>> I would consider it to be odd, but I'm not a lawyer.
>> Though the exact behavior of this scenario is IMHO not clearly  
>> defined
>> in the spec, I think that most implementations would take a common
>> sense approach.
>> From the perspective of py-amqplib, I would say that it's over to
>> Barry to make a call on this.
>
> Brian:
>
> IIRC as far as the py-amqplib defaults go...my thought was that if  
> you're going to do something that makes a persistent change the  
> server, such has having a queue that's durable, then I thought you  
> should explicitly say so.  That way if you're just dabbling around  
> or don't exactly know what you're doing, there's no permanent harm  
> done.
>
> Even if a case could be made that the defaults are not ideal, it's  
> probably too late to change it now.  I supposed it could be  
> addressed in documentation.
>
> I agree that having the separate durable and auto_delete flags can  
> be confusing, but that comes from the spec, and is just passed  
> through by the client library - the broker is where the flags have  
> an impact.
>
> 	Barry
>




From matthias at lshift.net  Fri Jan 23 18:08:21 2009
From: matthias at lshift.net (Matthias Radestock)
Date: Fri, 23 Jan 2009 18:08:21 +0000
Subject: [rabbitmq-discuss] getting started, broker runs;
	can't get status
In-Reply-To: <9F62222D-82AD-4CB1-9FDA-668ED6D797B4@gmail.com>
References: <3d5db09e0901201356r1cafa64aud71de1a8c2d28cef@mail.gmail.com>	<269388e30901201404y2f36b9b8la2cfe7e45d2cf666@mail.gmail.com>	<3d5db09e0901201420v2195969dm5261db800741c892@mail.gmail.com>	<269388e30901201433p2e8233e9l4561b10088b18118@mail.gmail.com>	<c893b8530901201443r123cd383w3ec6e35e5d505d49@mail.gmail.com>	<49765E86.605@lshift.net>
	<9F62222D-82AD-4CB1-9FDA-668ED6D797B4@gmail.com>
Message-ID: <497A0795.1050301@lshift.net>

Valentino,

Valentino Volonghi wrote:
> I think I get it now. The reason is how the script is written using
> `dirname $0`
> 
> it basically means that if you move the script to /usr/local/bin/ and 
> run from it
> it has the badrpc error for some reason that I cannot understand but if you
> run it from its own directory there's no issue.

The script needs to find the rabbit code somehow. It supports two 
mechanisms for that, as documented in the installation instructions: you 
either place the rabbitmq dir alongside the OTP modules (usually in 
/usr/lib/erlang/lib), or you let the script look for the code in the 
ebin sibling dir.

Moving the script breaks the latter, but not the former. However, you 
should be able to create a symlink from /usr/local/bin to wherever the 
script resides.


Matthias.



From matthias at lshift.net  Fri Jan 23 18:10:01 2009
From: matthias at lshift.net (Matthias Radestock)
Date: Fri, 23 Jan 2009 18:10:01 +0000
Subject: [rabbitmq-discuss] getting started, broker runs;
	can't get status
In-Reply-To: <3d5db09e0901221407p21994b0ck880062a66c6f8536@mail.gmail.com>
References: <3d5db09e0901201356r1cafa64aud71de1a8c2d28cef@mail.gmail.com>	<269388e30901201404y2f36b9b8la2cfe7e45d2cf666@mail.gmail.com>	<3d5db09e0901201420v2195969dm5261db800741c892@mail.gmail.com>	<269388e30901201433p2e8233e9l4561b10088b18118@mail.gmail.com>	<c893b8530901201443r123cd383w3ec6e35e5d505d49@mail.gmail.com>	<49765E86.605@lshift.net>	<9F62222D-82AD-4CB1-9FDA-668ED6D797B4@gmail.com>
	<3d5db09e0901221407p21994b0ck880062a66c6f8536@mail.gmail.com>
Message-ID: <497A07F9.9020907@lshift.net>

Michael,

Michael Steinfeld wrote:
> Well, for the life of me I could not get it to work on RHEL4 x86_64.
> Oddly enough the broker would run.
> 
> I tried source and binary.

Can you send us a transcript of the installation and your subsequent 
attempts to access the broker?


Matthias.



From matthias at lshift.net  Fri Jan 23 18:35:13 2009
From: matthias at lshift.net (Matthias Radestock)
Date: Fri, 23 Jan 2009 18:35:13 +0000
Subject: [rabbitmq-discuss] Is there a use case for a queue with
 auto_delete=True and durable=True?
In-Reply-To: <50c8ffe90901230732y745b943fjfbd0efc1e085e359@mail.gmail.com>
References: <269388e30901230302p24433d09xc23940e2fdc3d280@mail.gmail.com>
	<50c8ffe90901230732y745b943fjfbd0efc1e085e359@mail.gmail.com>
Message-ID: <497A0DE1.6080400@lshift.net>

Darien,

Darien Kindlund wrote:
> Just my $0.02, but, I got the impression a (durable=True,
> auto_delete=True) use case means: "Delete the queue ONLY after all
> messages have been removed from the queue -- once the queue is empty."

How did you get that impression? There is an "if-empty" flag on 
queue.delete, which prevents deletion if the queue contains messages, 
but there is no equivalent behaviour defined for auto_deletion.

As an aside, in AMQP 0-9-1 the rules for exclusive queues have been 
clarified. Exclusive queues get deleted when their creating connection 
closes, regardless of whether the queue ever had any consumers. By 
contrast, auto_deletion takes place when a queue's last consumer is 
removed (either explicitly or as a side-effect of channel/connection 
closure).

> A condition where this would apply is: Consider a producer/consumer
> scenario.  The consumer creates a static exchange/queue (durable=True,
> auto_delete=False) such that in the event of a network error, the
> consumer can reconnect and resync with the queue.  Upon receipt of a
> new message, the consumer sends an ACK message (part of the
> application -- not the AMQP spec) back to the producer (using the
> reply-to: header).
> 
> The producer creates a temporary exchange/queue (durable=True,
> auto_delete=True) for receiving these ACK messages such that in the
> event of a network error, the producer can reconnect and resync with
> the queue.  From the producer's point of view, it wants a queue that
> *remains alive until all messages have been flushed* from the queue.
> In this case, lost messages are not acceptable.

Since the producer knows how many acks it is waiting for, it can declare 
the queue as durable and non-auto_delete, and delete it explicitly when 
all acks have arrived.


Regards,

Matthias.



From matthias at lshift.net  Sat Jan 24 12:15:30 2009
From: matthias at lshift.net (Matthias Radestock)
Date: Sat, 24 Jan 2009 12:15:30 +0000
Subject: [rabbitmq-discuss] RabbitMQ experience
In-Reply-To: <167204d20901220500o5b7bf24o5b63056360f92ee9@mail.gmail.com>
References: <20090122115024.B15252402F@relay.gooddata.com>
	<167204d20901220500o5b7bf24o5b63056360f92ee9@mail.gmail.com>
Message-ID: <497B0662.7000400@lshift.net>

[I am cross-posting this to the list with the permission of the OP]

Vlastimil,

>> I tried to benchmark both products [ActiveMQ and RabbitMQ] with
>> this  initial test scenario:
>> - each test produces 100'000 messages from one of these sets
>>    - +/-5KB, 50KB, 100KB, 200KB
>>  - randomly into 5 queues
>>  - test is executed with persistent messages (queues) and
>>    then non-persistent
>>  (total number of test types 4*2*number of iterations)
>> - consumer reads all the messages
>> - measure:
>>  - time to enqueue all messages
>>  - time to consume all messages
>> - run several iterations and get average numbers

>> Contestant              +/- 5KB     fix 50KB  fix 100KB fix 200KB
>> ActiveMQ/stomp (np)     1398/1250   140/138   68/69     34/34
>> (persistent)            1247/967    127/125   66/66     34/34
>> RabbitMQ/stomp (np)     4475/360    362/33    175/17    85/8
>> (persistent)            3920/371    375/35    180/18    88/8
>>
>> values are "processed avg. messages per second" on producer/consumer.

>> Performance of RabbitMQ producer is quite impressive!, but the consumer
>> falls behind.

This is not surprising. The tests push the system to its limits. When 
that happens RabbitMQ (and the O/S) need to make choices as to what work 
to do - drain messages of the tcp socket, push them through the 
publication pipeline, store them, push them through the delivery 
(consumer) pipelines, hand them over to the network card, etc, etc. Add 
to that the fact that each of the pipelines has buffers (where messages 
may end up getting stored temporarily), and that the stages require 
different amounts of work.

The upshot of this is that when one pushes the system hard, it is 
impossible to predict how exactly it will behave (within the bounds of 
behaving correctly, which it does). Results can vary considerably 
between tests. Chances are RabbitMQ will end up buffering messages at 
various stages of the pipelines, since buffering costs very little 
compared to other tasks. So we can see producer rates exceeding consumer 
rates. [as an aside, your test is *not* measuring the "time to enqueue 
all messages", it is measuring the time it takes the client to hand over 
all messages to the client's network stack; they are a long way from 
being enqueued at that point]. And this happens regardless of the number 
of consumers because the requests from consumers, and the messages due 
for delivery to them, are just more things that end up getting buffered.

This doesn't matter when the high load is temporary - RabbitMQ can cope 
with that just fine - but if it the load is sustained over long periods 
of time then RabbitMQ can run out of memory. More on that below.

The question is whether long periods of producers injecting messages at 
a rate that exceeds the broker capacity is really something that occurs 
in the use case you envisage. Most systems need to be able cope with 
some specified average throughput, and peaks over short periods of time; 
not sustained ingress rates that exceed the throughput capacity.

One way to measure the average sustainable throughput is to control the 
rate at which the producers inject messages. Start with a low rate and 
increase it incrementally, giving the system some time to settle at each 
step. Then measure the consumption rate. Stop at the point where the 
consumption rate falls behind the production rate.

>> And this is main reason of my diasppointment -- memory management of
>> messages is too greedy and RabbitMQ goes easily down. I know that
>> you have experimental memory-based flow control, but it only
>> _tells_ producers to slow down and furthermore it is not propagated
>> to STOMP clients. I think that this must be solved mainly on the
>> side of middleware, he has to slowdown clients like ActiveMQ does.

As you say, we *do* have an experimental flow control feature that 
throttles producers. However, as Alexis has already mentioned, this 
doesn't work for our STOMP adapater, and, more generally, the STOMP 
adapter is experimental and certainly not the way to go if maximum 
performance is the objective.

As for the middleware *forcing* producers to slow down, there is only 
one way to do that: TCP's flow control. Unfortunately that doesn't work 
too well in AMQP because a single TCP connection can be shared by both 
producers and consumers, and consuming messages generally involves the 
client *sending* some data on the network connection (e.g. for 
acknowledgements). Therefore putting back-pressure on these connections 
will slow down both producers and consumers and hence may not alleviate 
memory pressure.

By contrast, AMQP's channel.flow command (which is what our experimental 
flow control implements) allows the producer to ask the clients to stop 
publishing messages, without affecting message consumption. That does 
require cooperation from clients, but note that a) this is fairly easy 
to implement and is done in all the clients we officially support, b) 
the spec permits the server to cut off clients who do not abide by the 
channel.flow instruction (though the RabbitMQ server does not do this).

Finally, as Alexis mentioned, we are in the process of enabling RabbitMQ 
to page messages to disk, thus eliminating the memory-bounded nature of 
the current message queuing implementation. Note however that under high 
load messages could still build up in memory in various buffers 
throughout the system, as described above. So this new feature won't be 
a substitute for flow control.


Regards,

Matthias.



From sustrik at imatix.com  Sat Jan 24 12:42:30 2009
From: sustrik at imatix.com (Martin Sustrik)
Date: Sat, 24 Jan 2009 13:42:30 +0100
Subject: [rabbitmq-discuss] RabbitMQ experience
In-Reply-To: <497B0662.7000400@lshift.net>
References: <20090122115024.B15252402F@relay.gooddata.com>	<167204d20901220500o5b7bf24o5b63056360f92ee9@mail.gmail.com>
	<497B0662.7000400@lshift.net>
Message-ID: <497B0CB6.6030007@imatix.com>

Matthias,

>>> RabbitMQ/stomp (np)     4475/360    362/33    175/17    85/8
>>> (persistent)            3920/371    375/35    180/18    88/8

The interesting thing about the test is that the overall throughput 
corresponds to message size in a very straightforward way. The network 
wasn't exhausted (unless very low-bandwidth connection was used or a 
very unefficient format for encoding the message body) so it seems that 
the main bottleneck has to do with processing the body of the message. 
Excessive copying may be the cause, or maybe a slow binary->text->binary 
conversions)...

Martin



From dialtone at gmail.com  Sun Jan 25 22:53:29 2009
From: dialtone at gmail.com (Valentino Volonghi)
Date: Sun, 25 Jan 2009 14:53:29 -0800
Subject: [rabbitmq-discuss] RabbitMQ experience
In-Reply-To: <497B0CB6.6030007@imatix.com>
References: <20090122115024.B15252402F@relay.gooddata.com>	<167204d20901220500o5b7bf24o5b63056360f92ee9@mail.gmail.com>
	<497B0662.7000400@lshift.net> <497B0CB6.6030007@imatix.com>
Message-ID: <8368D8BB-EECC-4073-8535-F66D78174F4C@gmail.com>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1


On Jan 24, 2009, at 4:42 AM, Martin Sustrik wrote:

> Matthias,
>
>>>> RabbitMQ/stomp (np)     4475/360    362/33    175/17    85/8
>>>> (persistent)            3920/371    375/35    180/18    88/8
>
> The interesting thing about the test is that the overall throughput
> corresponds to message size in a very straightforward way. The network
> wasn't exhausted (unless very low-bandwidth connection was used or a
> very unefficient format for encoding the message body) so it seems  
> that
> the main bottleneck has to do with processing the body of the message.
> Excessive copying may be the cause, or maybe a slow binary->text- 
> >binary
> conversions)...


A lot of help comes from using zlib:compress() on the payload before  
sending
it. I've measured about 4400 persistent messages per second on a simple
dual processor using the erlang client and rabbitmq 1.5.0 with a  
payload of
about 4K compressed. And that value is actually the req/sec that I was  
able to
serve from a mochiweb that was using rabbitmq to log requests. Another  
probable
reason for the increased speed I'm seeing is the use of the erlang  
client that sits
in the same process and doesn't incur in tcp performance hit on the  
wire.

Actually I'm VERY satisfied performance wise with RabbitMQ and really  
the
only thing missing to make it the perfect store-and-forward solution
is page-to-disk.

My tests were done on a Core 2 Duo 2.4Ghz with 4GB of memory on
a Gigabit network (used by the python consumer that was able to get  
more than
150msg/sec, including decompression), but this value is probably also  
changed
by the shovel that runs on the source rabbitmq that batches 1000  
messages together
before sending them to a destination rabbitmq.

I should probably run more rigorous tests and see what happens again,  
it would
be very interesting for me too. With 1KB messages though I remember  
seeing
about 8000 msg/sec on the producer side (just pushed in rabbitmq, not  
queued)
with about 4000 msg/sec on the consumer side (consumed). So it could  
indeed
be an 'issue' with serialization as the body of the message grows.

On EC2 instead it's totally different story :), unfortunately the  
shared nature of
the machines makes them pretty slow in almost all cases, a medium high- 
cpu
instance barely reaches 1500 req/sec in the 'same' configuration (the  
one with
mochiweb) and only for short times but the ability to scale on demand  
could be
put to good use :).

I'm not sure if this is useful to anybody, hope so.

- --
Valentino Volonghi aka Dialtone
Now running MacOS X 10.5
Home Page: http://www.twisted.it
http://www.adroll.com

-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.4.9 (Darwin)

iEYEARECAAYFAkl87WkACgkQ9Llz28widGXK4wCbBvKRu/D5C2e72f6djV0Ju4cH
EYEAoJxN0adnuwUHZexIJ0cm8NYmr4ZP
=sBVb
-----END PGP SIGNATURE-----



From terry at jon.es  Mon Jan 26 00:31:54 2009
From: terry at jon.es (Terry Jones)
Date: Mon, 26 Jan 2009 01:31:54 +0100
Subject: [rabbitmq-discuss] RabbitMQ experience
In-Reply-To: Your message at 14:53:29 on Sunday, 25 January 2009
References: <20090122115024.B15252402F@relay.gooddata.com>
	<167204d20901220500o5b7bf24o5b63056360f92ee9@mail.gmail.com>
	<497B0662.7000400@lshift.net> <497B0CB6.6030007@imatix.com>
	<8368D8BB-EECC-4073-8535-F66D78174F4C@gmail.com>
Message-ID: <18813.1146.642737.254104@jon.es>

Hi Valentino

>>>>> "Valentino" == Valentino Volonghi <dialtone at gmail.com> writes:
Valentino> I'm not sure if this is useful to anybody, hope so.

Yes, it's great. Thanks for digging in and for posting your results.

Terry



From ch at murgatroid.com  Mon Jan 26 04:46:50 2009
From: ch at murgatroid.com (christopher hoover)
Date: Sun, 25 Jan 2009 20:46:50 -0800
Subject: [rabbitmq-discuss] rabbitmq 1.5.1-1 from debian pool fails to start
Message-ID: <009b01c97f71$1a382950$4ea87bf0$@com>

On two machines so far, one Debian testing and the other Ubuntu jaunty,
rabbitmq 1.5.1-1 fails to start.     1.5 was OK.

ch at frob:~$ uname -a
Linux frob.xxxxxx 2.6.26-1-686 #1 SMP Thu Aug 28 12:00:54 UTC 2008 i686
GNU/Linux
ch at frob:~$ cat /etc/issue
 Debian GNU/Linux 5.0 \n \l

ch at frob:~$ grep rabbit /etc/apt/sources.list
deb http://www.rabbitmq.com/debian/ testing main
ch at frob:~$ dpkg -l | egrep 'rabbit|erlang'
ii  erlang-base                                  1:12.b.3-dfsg-4
Concurrent, real-time, distributed functional language (virtual 
ii  erlang-nox                                   1:12.b.3-dfsg-4
Concurrent, real-time, distributed functional language (no X11 d
iF  rabbitmq-server                              1.5.1-1
An AMQP server written in Erlang
ch at frob:~$ cat /var/log/rabbitmq/startup_err 
Kernel pid terminated (application_controller)
({application_start_failure,kernel,{shutdown,{kernel,start,[normal,[]]}}})
Error: {node_start_failed,normal}
ch at frob:~$ cat /var/log/rabbitmq/startup_log 
Starting all nodes...
Starting node rabbit at frob...
{error_logger,{{2009,1,25},{20,13,20}},"Protocol: ~p: register/listen error:
~p~n",["inet_tcp",einval]}
{error_logger,{{2009,1,25},{20,13,20}},crash_report,[[{pid,<0.21.0>},{regist
ered_name,net_kernel},{error_info,{exit,{error,badarg},[{gen_server,init_it,
6},{proc_lib,init_p,5}]}},{initial_call,{gen,init_it,[gen_server,<0.18.0>,<0
.18.0>,{local,net_kernel},net_kernel,{rabbit,shortnames,15000},[]]}},{ancest
ors,[net_sup,kernel_sup,<0.9.0>]},{messages,[]},{links,[<0.18.0>]},{dictiona
ry,[{longnames,false}]},{trap_exit,true},{status,running},{heap_size,377},{s
tack_size,23},{reductions,300}],[]]}
{error_logger,{{2009,1,25},{20,13,20}},supervisor_report,[{supervisor,{local
,net_sup}},{errorContext,start_error},{reason,{'EXIT',nodistribution}},{offe
nder,[{pid,undefined},{name,net_kernel},{mfa,{net_kernel,start_link,[[rabbit
,shortnames]]}},{restart_type,permanent},{shutdown,2000},{child_type,worker}
]}]}
{error_logger,{{2009,1,25},{20,13,20}},supervisor_report,[{supervisor,{local
,kernel_sup}},{errorContext,start_error},{reason,shutdown},{offender,[{pid,u
ndefined},{name,net_sup},{mfa,{erl_distribution,start_link,[]}},{restart_typ
e,permanent},{shutdown,infinity},{child_type,supervisor}]}]}
{error_logger,{{2009,1,25},{20,13,20}},crash_report,[[{pid,<0.8.0>},{registe
red_name,[]},{error_info,{exit,{shutdown,{kernel,start,[normal,[]]}},[{appli
cation_master,init,4},{proc_lib,init_p,5}]}},{initial_call,{application_mast
er,init,[<0.6.0>,<0.7.0>,{appl_data,kernel,[application_controller,erl_reply
,auth,boot_server,code_server,disk_log_server,disk_log_sup,erl_prim_loader,e
rror_logger,file_server_2,fixtable_server,global_group,global_name_server,he
art,init,kernel_config,kernel_sup,net_kernel,net_sup,rex,user,os_server,ddll
_server,erl_epmd,inet_db,pg2],undefined,{kernel,[]},[application,application
_controller,application_master,application_starter,auth,code,code_aux,packag
es,code_server,dist_util,erl_boot_server,erl_distribution,erl_prim_loader,er
l_reply,erlang,error_handler,error_logger,file,file_server,file_io_server,pr
im_file,global,global_group,global_search,group,heart,hipe_unified_loader,in
et6_tcp,inet6_tcp_dist,inet6_udp,inet_config,inet_hosts,inet_gethost_native,
inet_tcp_dist,init,kernel,kernel_config,net,net_adm,net_kernel,os,ram_file,r
pc,user,user_drv,user_sup,disk_log,disk_log_1,disk_log_server,disk_log_sup,d
ist_ac,erl_ddll,erl_epmd,erts_debug,gen_tcp,gen_udp,gen_sctp,prim_inet,inet,
inet_db,inet_dns,inet_parse,inet_res,inet_tcp,inet_udp,inet_sctp,pg2,seq_tra
ce,wrap_log_reader,zlib,otp_ring0],[],infinity,infinity},normal]}},{ancestor
s,[<0.7.0>]},{messages,[{'EXIT',<0.9.0>,normal}]},{links,[<0.7.0>,<0.6.0>]},
{dictionary,[]},{trap_exit,true},{status,running},{heap_size,610},{stack_siz
e,23},{reductions,127}],[]]}
{error_logger,{{2009,1,25},{20,13,20}},std_info,[{application,kernel},{exite
d,{shutdown,{kernel,start,[normal,[]]}}},{type,permanent}]}
{"Kernel pid
terminated",application_controller,"{application_start_failure,kernel,{shutd
own,{kernel,start,[normal,[]]}}}"}
ch at frob:~$ 







From ch at murgatroid.com  Mon Jan 26 07:09:24 2009
From: ch at murgatroid.com (christopher hoover)
Date: Sun, 25 Jan 2009 23:09:24 -0800
Subject: [rabbitmq-discuss] rabbitmq 1.5.1-1 from debian pool fails to
	start
In-Reply-To: <167204d20901252246k46287a88r6acbad7405ba7815@mail.gmail.com>
References: <009b01c97f71$1a382950$4ea87bf0$@com>
	<167204d20901252246k46287a88r6acbad7405ba7815@mail.gmail.com>
Message-ID: <00c601c97f85$04c4e400$0e4eac00$@com>

> Can you tell me where you downloaded 1.5 and 1.5.1-1 from please?  I
> uploaded 1.5.1-1 yesterday, to Jaunty REVU.

See the grep on my /etc/apt/sources.list.  This particular machine was
Debian testing and not Jaunty.

But I see the same problem on Jaunty -- with which I have the same
/etc/apt/sources.list line as grep'ed below.

I'm not sure what "REVU" means.

-ch


> -----Original Message-----
> From: Alexis Richardson [mailto:alexis.richardson at gmail.com]
> Sent: Sunday, January 25, 2009 10:46 PM
> To: christopher hoover
> Subject: Re: [rabbitmq-discuss] rabbitmq 1.5.1-1 from debian pool fails
> to start
> 
> Christopher,
> 
> Can you tell me where you downloaded 1.5 and 1.5.1-1 from please?  I
> uploaded 1.5.1-1 yesterday, to Jaunty REVU.
> 
> alexis
> 
> 
> On Mon, Jan 26, 2009 at 4:46 AM, christopher hoover <ch at murgatroid.com>
> wrote:
> > On two machines so far, one Debian testing and the other Ubuntu
> jaunty,
> > rabbitmq 1.5.1-1 fails to start.     1.5 was OK.
> >
> > ch at frob:~$ uname -a
> > Linux frob.xxxxxx 2.6.26-1-686 #1 SMP Thu Aug 28 12:00:54 UTC 2008
> i686
> > GNU/Linux
> > ch at frob:~$ cat /etc/issue
> >  Debian GNU/Linux 5.0 \n \l
> >
> > ch at frob:~$ grep rabbit /etc/apt/sources.list
> > deb http://www.rabbitmq.com/debian/ testing main
> > ch at frob:~$ dpkg -l | egrep 'rabbit|erlang'
> > ii  erlang-base                                  1:12.b.3-dfsg-4
> > Concurrent, real-time, distributed functional language (virtual
> > ii  erlang-nox                                   1:12.b.3-dfsg-4
> > Concurrent, real-time, distributed functional language (no X11 d
> > iF  rabbitmq-server                              1.5.1-1
> > An AMQP server written in Erlang
> > ch at frob:~$ cat /var/log/rabbitmq/startup_err
> > Kernel pid terminated (application_controller)
> >
> ({application_start_failure,kernel,{shutdown,{kernel,start,[normal,[]]}
> }})
> > Error: {node_start_failed,normal}
> > ch at frob:~$ cat /var/log/rabbitmq/startup_log
> > Starting all nodes...
> > Starting node rabbit at frob...
> > {error_logger,{{2009,1,25},{20,13,20}},"Protocol: ~p: register/listen
> error:
> > ~p~n",["inet_tcp",einval]}
> >
> {error_logger,{{2009,1,25},{20,13,20}},crash_report,[[{pid,<0.21.0>},{r
> egist
> >
> ered_name,net_kernel},{error_info,{exit,{error,badarg},[{gen_server,ini
> t_it,
> >
> 6},{proc_lib,init_p,5}]}},{initial_call,{gen,init_it,[gen_server,<0.18.
> 0>,<0
> >
> .18.0>,{local,net_kernel},net_kernel,{rabbit,shortnames,15000},[]]}},{a
> ncest
> >
> ors,[net_sup,kernel_sup,<0.9.0>]},{messages,[]},{links,[<0.18.0>]},{dic
> tiona
> >
> ry,[{longnames,false}]},{trap_exit,true},{status,running},{heap_size,37
> 7},{s
> > tack_size,23},{reductions,300}],[]]}
> >
> {error_logger,{{2009,1,25},{20,13,20}},supervisor_report,[{supervisor,{
> local
> >
> ,net_sup}},{errorContext,start_error},{reason,{'EXIT',nodistribution}},
> {offe
> >
> nder,[{pid,undefined},{name,net_kernel},{mfa,{net_kernel,start_link,[[r
> abbit
> >
> ,shortnames]]}},{restart_type,permanent},{shutdown,2000},{child_type,wo
> rker}
> > ]}]}
> >
> {error_logger,{{2009,1,25},{20,13,20}},supervisor_report,[{supervisor,{
> local
> >
> ,kernel_sup}},{errorContext,start_error},{reason,shutdown},{offender,[{
> pid,u
> >
> ndefined},{name,net_sup},{mfa,{erl_distribution,start_link,[]}},{restar
> t_typ
> > e,permanent},{shutdown,infinity},{child_type,supervisor}]}]}
> >
> {error_logger,{{2009,1,25},{20,13,20}},crash_report,[[{pid,<0.8.0>},{re
> giste
> >
> red_name,[]},{error_info,{exit,{shutdown,{kernel,start,[normal,[]]}},[{
> appli
> >
> cation_master,init,4},{proc_lib,init_p,5}]}},{initial_call,{application
> _mast
> >
> er,init,[<0.6.0>,<0.7.0>,{appl_data,kernel,[application_controller,erl_
> reply
> >
> ,auth,boot_server,code_server,disk_log_server,disk_log_sup,erl_prim_loa
> der,e
> >
> rror_logger,file_server_2,fixtable_server,global_group,global_name_serv
> er,he
> >
> art,init,kernel_config,kernel_sup,net_kernel,net_sup,rex,user,os_server
> ,ddll
> >
> _server,erl_epmd,inet_db,pg2],undefined,{kernel,[]},[application,applic
> ation
> >
> _controller,application_master,application_starter,auth,code,code_aux,p
> ackag
> >
> es,code_server,dist_util,erl_boot_server,erl_distribution,erl_prim_load
> er,er
> >
> l_reply,erlang,error_handler,error_logger,file,file_server,file_io_serv
> er,pr
> >
> im_file,global,global_group,global_search,group,heart,hipe_unified_load
> er,in
> >
> et6_tcp,inet6_tcp_dist,inet6_udp,inet_config,inet_hosts,inet_gethost_na
> tive,
> >
> inet_tcp_dist,init,kernel,kernel_config,net,net_adm,net_kernel,os,ram_f
> ile,r
> >
> pc,user,user_drv,user_sup,disk_log,disk_log_1,disk_log_server,disk_log_
> sup,d
> >
> ist_ac,erl_ddll,erl_epmd,erts_debug,gen_tcp,gen_udp,gen_sctp,prim_inet,
> inet,
> >
> inet_db,inet_dns,inet_parse,inet_res,inet_tcp,inet_udp,inet_sctp,pg2,se
> q_tra
> >
> ce,wrap_log_reader,zlib,otp_ring0],[],infinity,infinity},normal]}},{anc
> estor
> >
> s,[<0.7.0>]},{messages,[{'EXIT',<0.9.0>,normal}]},{links,[<0.7.0>,<0.6.
> 0>]},
> >
> {dictionary,[]},{trap_exit,true},{status,running},{heap_size,610},{stac
> k_siz
> > e,23},{reductions,127}],[]]}
> >
> {error_logger,{{2009,1,25},{20,13,20}},std_info,[{application,kernel},{
> exite
> > d,{shutdown,{kernel,start,[normal,[]]}}},{type,permanent}]}
> > {"Kernel pid
> >
> terminated",application_controller,"{application_start_failure,kernel,{
> shutd
> > own,{kernel,start,[normal,[]]}}}"}
> > ch at frob:~$
> >
> >
> >
> >
> >
> > _______________________________________________
> > rabbitmq-discuss mailing list
> > rabbitmq-discuss at lists.rabbitmq.com
> > http://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss
> >





From matthias at lshift.net  Mon Jan 26 09:03:31 2009
From: matthias at lshift.net (Matthias Radestock)
Date: Mon, 26 Jan 2009 09:03:31 +0000
Subject: [rabbitmq-discuss] rabbitmq 1.5.1-1 from debian pool fails to
 start
In-Reply-To: <009b01c97f71$1a382950$4ea87bf0$@com>
References: <009b01c97f71$1a382950$4ea87bf0$@com>
Message-ID: <497D7C63.9060904@lshift.net>

Christopher,

christopher hoover wrote:
> On two machines so far, one Debian testing and the other Ubuntu jaunty,
> rabbitmq 1.5.1-1 fails to start.     1.5 was OK.
> [...]
> {error_logger,{{2009,1,25},{20,13,20}},"Protocol: ~p: register/listen error:
> ~p~n",["inet_tcp",einval]}

How did you start rabbit? In a standard debian setup you should be using
   /etc/init.d/rabbitmq-server start

Also, is there a process called 'epmd' running on your machine? If so, 
it may be worth killing it; it should get restarted automatically when 
you first run rabbit.


Matthias.



From matthias at lshift.net  Mon Jan 26 09:15:01 2009
From: matthias at lshift.net (Matthias Radestock)
Date: Mon, 26 Jan 2009 09:15:01 +0000
Subject: [rabbitmq-discuss] rabbitmq 1.5.1-1 from debian pool fails to
 start
In-Reply-To: <497D7C63.9060904@lshift.net>
References: <009b01c97f71$1a382950$4ea87bf0$@com> <497D7C63.9060904@lshift.net>
Message-ID: <497D7F15.1080202@lshift.net>

Matthias Radestock wrote:
> How did you start rabbit? In a standard debian setup you should be using
>   /etc/init.d/rabbitmq-server start

Make that
    sudo /etc/init.d/rabbitmq-server start
or
    sudo invoke-rc.d rabbitmq-server start


Also, is there anything in /etc/default/rabbitmq?


Matthias.



From holger at wizards.de  Mon Jan 26 10:13:18 2009
From: holger at wizards.de (=?ISO-8859-1?Q?Holger_Hoffst=E4tte?=)
Date: Mon, 26 Jan 2009 11:13:18 +0100
Subject: [rabbitmq-discuss] High(er) latency with 1.5.1?
Message-ID: <497D8CBE.10702@wizards.de>

Hi,

I was re-running some of the latency tests with 1.5.1 again and noticed
that the latency is much higher than before, even with TCP_NODELAY.

Everything on Windows, running MulticastMain with -r 10 -s 100 -i 3 -h
localhost gives:

recving rate: 10 msg/s, min/avg/max latency: 1062/1237/1798 microseconds
recving rate: 10 msg/s, min/avg/max latency: 1047/1228/1764 microseconds
recving rate: 10 msg/s, min/avg/max latency: 1000/1245/1666 microseconds
recving rate: 10 msg/s, min/avg/max latency: 1042/1227/1756 microseconds
recving rate: 10 msg/s, min/avg/max latency: 1014/1202/1807 microseconds
recving rate: 10 msg/s, min/avg/max latency: 1083/1250/1555 microseconds
recving rate: 10 msg/s, min/avg/max latency: 1091/1242/1862 microseconds
recving rate: 10 msg/s, min/avg/max latency: 1035/1166/1373 microseconds
recving rate: 10 msg/s, min/avg/max latency: 993/1209/1511 microseconds
recving rate: 10 msg/s, min/avg/max latency: 955/1151/1476 microseconds
recving rate: 10 msg/s, min/avg/max latency: 974/1173/1777 microseconds
recving rate: 10 msg/s, min/avg/max latency: 974/1122/1655 microseconds
recving rate: 10 msg/s, min/avg/max latency: 969/1351/7688 microseconds
recving rate: 10 msg/s, min/avg/max latency: 972/1175/1463 microseconds
recving rate: 10 msg/s, min/avg/max latency: 1021/1179/1679 microseconds
recving rate: 10 msg/s, min/avg/max latency: 993/1176/1811 microseconds

Linux is the same as far as I can tell - almost a factor of 3 higher than
before (~250-300us after we fixed Nagle). Could this be a consequence of
the internal scalability changes done for 1.5.0? Or maybe just a
regression in the test - I think I remember seeing some changes to the
timing measurements in the changelogs.
Any ideas?

cheers
Holger



From opendev at gmail.com  Mon Jan 26 10:38:51 2009
From: opendev at gmail.com (Joern)
Date: Mon, 26 Jan 2009 11:38:51 +0100
Subject: [rabbitmq-discuss] AMQP security / dealing with Flex subscribers
In-Reply-To: <269388e30901230314r6300441cn7f0c139c0b3ac5f7@mail.gmail.com>
References: <9e009ad0901210240j13fc8eecq5faa8cd4ba53cbf0@mail.gmail.com>
	<4977178D.3050808@lshift.net>
	<9e009ad0901230129nea9397dj6ad51df430507c3e@mail.gmail.com>
	<269388e30901230314r6300441cn7f0c139c0b3ac5f7@mail.gmail.com>
Message-ID: <9e009ad0901260238j605b6001q2da7d062c88cadaa@mail.gmail.com>

Hi Ben,

2009/1/23 Ben Hood <0x6e6562 at gmail.com>:

> If you published the name of an exchange to the public, you could have
> a security aware consumer process these messages and then forward them
> to the real exchange, which would have an unguessable name that only
> this consumer knows about.

This would work for me. The ACL based access control that was
mentioned recently on the list can be added later to prevent unwanted
operations from the Flash clients. I (wrongly) thought the exchange
name might be discoverable using management operations on the broker.

> BTW this is similar to the capabilities concept I described yesterday
> - did you read the article?

Yes, I read it but apparently only cursorily. The capability concept
seemed to me too abstract then so I failed to connect the dots to my
actual problem.

Best regards,


Joern
--



From matthias at lshift.net  Mon Jan 26 11:06:20 2009
From: matthias at lshift.net (Matthias Radestock)
Date: Mon, 26 Jan 2009 11:06:20 +0000
Subject: [rabbitmq-discuss] High(er) latency with 1.5.1?
In-Reply-To: <497D8CBE.10702@wizards.de>
References: <497D8CBE.10702@wizards.de>
Message-ID: <497D992C.5070707@lshift.net>

Holger,

Holger Hoffst?tte wrote:
> I was re-running some of the latency tests with 1.5.1 again and noticed
> that the latency is much higher than before, even with TCP_NODELAY.
> 
> Everything on Windows, running MulticastMain with -r 10 -s 100 -i 3 -h
> localhost [...]
> 
> Linux is the same as far as I can tell - almost a factor of 3 higher than
> before (~250-300us after we fixed Nagle). Could this be a consequence of
> the internal scalability changes done for 1.5.0? Or maybe just a
> regression in the test - I think I remember seeing some changes to the
> timing measurements in the changelogs.

I don't think the time measurement code has changed.

The scalability improvement in 1.5.x affect latency somewhat, but not by 
a factor of 3. And I cannot think of any other changes off the top of my 
head that would cause this.

Did you run the tests back-to-back with 1.4.x?


Matthias.



From holger at wizards.de  Mon Jan 26 11:32:38 2009
From: holger at wizards.de (=?ISO-8859-1?Q?Holger_Hoffst=E4tte?=)
Date: Mon, 26 Jan 2009 12:32:38 +0100
Subject: [rabbitmq-discuss] High(er) latency with 1.5.1?
In-Reply-To: <497D992C.5070707@lshift.net>
References: <497D8CBE.10702@wizards.de> <497D992C.5070707@lshift.net>
Message-ID: <497D9F56.4080908@wizards.de>

Matthias Radestock wrote:
> The scalability improvement in 1.5.x affect latency somewhat, but not by
> a factor of 3. And I cannot think of any other changes off the top of my
> head that would cause this.

hmm..okay. I ran the test on two very different systems (dual-core Windows
laptop and rusty single-core Linux box) and both showed essentially the
same numbers, which made me curious. I still had the results from the
previous runs back when we found the Nagle bug, and those were on the
order of 280,320,500us with a Nagle-disabled 1.4 rabbit.

> Did you run the tests back-to-back with 1.4.x?

No, rabbit 1.4.0 won't run anymore since I upgraded to erlang 12.2.5 on
all machines and can't reinstall right now. Maybe someone with an older
erlang release can give it a try? Would be interesting to see if it is
reproducible.

thanks
Holger




From matt.george at myemma.com  Mon Jan 26 14:50:27 2009
From: matt.george at myemma.com (Matt George)
Date: Mon, 26 Jan 2009 08:50:27 -0600
Subject: [rabbitmq-discuss] ubuntu upgrade path
Message-ID: <B914FA24-2BD8-4956-8D01-36F684CBBA78@myemma.com>

Hello,
We are currently running a rabbitmq instance in a production  
environment. I would like to upgrade it to 1.5.1 from 1.5 and wanted
to know what is the best way to go about doing that in a running  
environment? We installed from the apt repository listed on the  
installation page.

thanks,
Matt

Matt George
Software Developer | Emma?
matt.george at myemma.com
800.595.4401
615.292.0777 (fax)

Emma helps organizations everywhere communicate & market in style.
Visit us online at http://www.myemma.com

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20090126/3232e4b9/attachment.htm 

From matthias at lshift.net  Mon Jan 26 16:21:33 2009
From: matthias at lshift.net (Matthias Radestock)
Date: Mon, 26 Jan 2009 16:21:33 +0000
Subject: [rabbitmq-discuss] ubuntu upgrade path
In-Reply-To: <B914FA24-2BD8-4956-8D01-36F684CBBA78@myemma.com>
References: <B914FA24-2BD8-4956-8D01-36F684CBBA78@myemma.com>
Message-ID: <497DE30D.1030800@lshift.net>

Matt,

Matt George wrote:
> We are currently running a rabbitmq instance in a production 
> environment. I would like to upgrade it to 1.5.1 from 1.5 and wanted
> to know what is the best way to go about doing that in a running 
> environment? We installed from the apt repository listed on the 
> installation page.

An ordinary debian package upgrade should work smoothly. The server will 
be restarted in the process - hence any existing client connections will 
be  dropped - but all durable resources and persisted messages are retained.


Matthias.



From ch at murgatroid.com  Mon Jan 26 17:39:19 2009
From: ch at murgatroid.com (christopher hoover)
Date: Mon, 26 Jan 2009 09:39:19 -0800
Subject: [rabbitmq-discuss] rabbitmq 1.5.1-1 from debian pool fails to
	start
In-Reply-To: <497D7C63.9060904@lshift.net>
References: <009b01c97f71$1a382950$4ea87bf0$@com> <497D7C63.9060904@lshift.net>
Message-ID: <000001c97fdd$0498c2f0$0dca48d0$@com>

> How did you start rabbit? In a standard debian setup you should be
> using
>    /etc/init.d/rabbitmq-server start

I just let the package system start the system.

If I use /etc/init.d/rabbitmq-server, I get the same problem.

> Also, is there a process called 'epmd' running on your machine? If so,
> it may be worth killing it; it should get restarted automatically when
> you first run rabbit.

Epmd is left around by the failed startup.  Killing it off beforehand (it
wasn't there obviously on the first clean install), makes no difference --
same lossage.

-ch





From ch at murgatroid.com  Mon Jan 26 17:41:06 2009
From: ch at murgatroid.com (christopher hoover)
Date: Mon, 26 Jan 2009 09:41:06 -0800
Subject: [rabbitmq-discuss] rabbitmq 1.5.1-1 from debian pool fails to
	start
In-Reply-To: <497D7F15.1080202@lshift.net>
References: <009b01c97f71$1a382950$4ea87bf0$@com>
	<497D7C63.9060904@lshift.net> <497D7F15.1080202@lshift.net>
Message-ID: <000301c97fdd$4442ac90$ccc805b0$@com>

> Make that
>     sudo /etc/init.d/rabbitmq-server start
> or
>     sudo invoke-rc.d rabbitmq-server start

Of course.

> Also, is there anything in /etc/default/rabbitmq?

Nope.  It is a clean install.   The file does not exist in package nor on my
machine.

-ch





From matthias at lshift.net  Mon Jan 26 19:28:14 2009
From: matthias at lshift.net (Matthias Radestock)
Date: Mon, 26 Jan 2009 19:28:14 +0000
Subject: [rabbitmq-discuss] rabbitmq 1.5.1-1 from debian pool fails to
 start
In-Reply-To: <000001c97fdd$0498c2f0$0dca48d0$@com>
References: <009b01c97f71$1a382950$4ea87bf0$@com> <497D7C63.9060904@lshift.net>
	<000001c97fdd$0498c2f0$0dca48d0$@com>
Message-ID: <497E0ECE.3090702@lshift.net>

Christopher,

christopher hoover wrote:
>> How did you start rabbit? In a standard debian setup you should be
>> using
>>    /etc/init.d/rabbitmq-server start
> 
> I just let the package system start the system.
> 
> If I use /etc/init.d/rabbitmq-server, I get the same problem.

It looks like the basic Erlang process distribution code fails to 
initialise.

Try running (as an ordinary user)
   erl -sname test
and then
   sudo -u rabbitmq -H erl -sname test
and finally
   sudo -H erl -sname test

In each case you should get an Erlang prompt of the form 
"(test@<yourhostname>)1>", which you can exit with C-c C-c. If you get 
an error or something different instead, please post it.


Matthias.



From ch at murgatroid.com  Mon Jan 26 19:32:19 2009
From: ch at murgatroid.com (christopher hoover)
Date: Mon, 26 Jan 2009 11:32:19 -0800
Subject: [rabbitmq-discuss] rabbitmq 1.5.1-1 from debian pool fails to
	start
In-Reply-To: <497E0ECE.3090702@lshift.net>
References: <009b01c97f71$1a382950$4ea87bf0$@com> <497D7C63.9060904@lshift.net>
	<000001c97fdd$0498c2f0$0dca48d0$@com> <497E0ECE.3090702@lshift.net>
Message-ID: <002301c97fec$cdc37d00$694a7700$@com>

> It looks like the basic Erlang process distribution code fails to
> initialise.
> 
> Try running (as an ordinary user)
>    erl -sname test
> and then
>    sudo -u rabbitmq -H erl -sname test
> and finally
>    sudo -H erl -sname test
> 
> In each case you should get an Erlang prompt of the form
> "(test@<yourhostname>)1>", which you can exit with C-c C-c. If you get
> an error or something different instead, please post it.


ch at frob:~$ erl -sname test
Erlang (BEAM) emulator version 5.6.3 [source] [async-threads:0]
[kernel-poll:false]

Eshell V5.6.3  (abort with ^G)
(test at frob)1> 
BREAK: (a)bort (c)ontinue (p)roc info (i)nfo (l)oaded
       (v)ersion (k)ill (D)b-tables (d)istribution
^Cch at frob:~$ sudo -u rabbitmq -H erl -sname test
Erlang (BEAM) emulator version 5.6.3 [source] [async-threads:0]
[kernel-poll:false]

Eshell V5.6.3  (abort with ^G)
(test at frob)1> 
BREAK: (a)bort (c)ontinue (p)roc info (i)nfo (l)oaded
       (v)ersion (k)ill (D)b-tables (d)istribution
^Cch at frob:~$ sudo -H erl -sname test
Erlang (BEAM) emulator version 5.6.3 [source] [async-threads:0]
[kernel-poll:false]

Eshell V5.6.3  (abort with ^G)
(test at frob)1> 
BREAK: (a)bort (c)ontinue (p)roc info (i)nfo (l)oaded
       (v)ersion (k)ill (D)b-tables (d)istribution
^Cch at frob:~$






From matthias at lshift.net  Mon Jan 26 20:02:25 2009
From: matthias at lshift.net (Matthias Radestock)
Date: Mon, 26 Jan 2009 20:02:25 +0000
Subject: [rabbitmq-discuss] rabbitmq 1.5.1-1 from debian pool fails to
 start
In-Reply-To: <002301c97fec$cdc37d00$694a7700$@com>
References: <009b01c97f71$1a382950$4ea87bf0$@com>
	<497D7C63.9060904@lshift.net>	<000001c97fdd$0498c2f0$0dca48d0$@com>
	<497E0ECE.3090702@lshift.net> <002301c97fec$cdc37d00$694a7700$@com>
Message-ID: <497E16D1.8020501@lshift.net>

Christopher,

christopher hoover wrote:
> Eshell V5.6.3  (abort with ^G)
> (test at frob)1> 

So it all works for plain Erlang. *sigh*.

Is there any chance you could give me access to the machine, or send me 
an image of your setup?


Matthias.



From gsim at redhat.com  Mon Jan 26 21:28:39 2009
From: gsim at redhat.com (Gordon Sim)
Date: Mon, 26 Jan 2009 21:28:39 +0000
Subject: [rabbitmq-discuss] RabbitMQ experience
In-Reply-To: <497B0662.7000400@lshift.net>
References: <20090122115024.B15252402F@relay.gooddata.com>	<167204d20901220500o5b7bf24o5b63056360f92ee9@mail.gmail.com>
	<497B0662.7000400@lshift.net>
Message-ID: <497E2B07.7060906@redhat.com>

Matthias Radestock wrote:
>>> Performance of RabbitMQ producer is quite impressive!, but the consumer
>>> falls behind.
 >
> [as an aside, your test is *not* measuring the "time to enqueue 
> all messages", it is measuring the time it takes the client to hand over 
> all messages to the client's network stack; they are a long way from 
> being enqueued at that point]. 

I think that is itself quite an important point in these sorts of 
measurements. As the basic.publish command is asynchronous with no form 
of acknowledgement, what a publish rate actually measures is vague and 
client specific.

A more meaningful result is often the throughput as measured from 
publishing client to receiving client. (Adding in a reply queue and 
periodic status updates back from the consumer to the producer also 
allows such a test to 'throttle' itself and avoid the overload that 
Matthias refers to).



From matthias at lshift.net  Mon Jan 26 23:19:20 2009
From: matthias at lshift.net (Matthias Radestock)
Date: Mon, 26 Jan 2009 23:19:20 +0000
Subject: [rabbitmq-discuss] RabbitMQ experience
In-Reply-To: <497E2B07.7060906@redhat.com>
References: <20090122115024.B15252402F@relay.gooddata.com>	<167204d20901220500o5b7bf24o5b63056360f92ee9@mail.gmail.com>	<497B0662.7000400@lshift.net>
	<497E2B07.7060906@redhat.com>
Message-ID: <497E44F8.9050007@lshift.net>

Gordon,

Gordon Sim wrote:
> A more meaningful result is often the throughput as measured from 
> publishing client to receiving client.

Indeed. That plus latency for the same setup are the performance figures 
we usually look at.

> (Adding in a reply queue and  periodic status updates back from the
> consumer to the producer also allows such a test to 'throttle' itself
> and avoid the overload that Matthias refers to).

It is actually surprisingly difficult to determine the *maximum* 
sustainable throughput that way. My experiments have shown that in a 
test where the feedback loop ensures a constant lag (the number of 
messages "in flight", i.e. the difference between the number of messages 
sent by the producer and received by the consumer), plotting the lag vs 
throughput exhibits some peculiar characteristics:

- there are local maxima, due to buffering and other effects

- the graph is very sensitive to the setup

- the graph changes over time, due in part to the effects of JITs

- sampling intervals have to be very long to get anything approaching 
reproducible results

And all that happens when the feedback loop has been minimised by 
colocating the producer and consumer in the same O/S process and using 
internal message passing for the feedback. Routing the feedback through 
the broker would make the results even more unpredictable.

That's why so far the goal of writing a "press a button and get the 
maximum throughput figure" test has eluded us. Coming up with a test 
that delivers results with a +/-20% accuracy isn't too hard. But that is 
far too insensitive for performance regression tests, where we are 
interested in spotting variations of as little as 2%.


Matthias.



From ch at murgatroid.com  Tue Jan 27 00:21:04 2009
From: ch at murgatroid.com (christopher hoover)
Date: Mon, 26 Jan 2009 16:21:04 -0800
Subject: [rabbitmq-discuss] rabbitmq 1.5.1-1 from debian pool fails to
	start
In-Reply-To: <497E16D1.8020501@lshift.net>
References: <009b01c97f71$1a382950$4ea87bf0$@com>
	<497D7C63.9060904@lshift.net>	<000001c97fdd$0498c2f0$0dca48d0$@com>
	<497E0ECE.3090702@lshift.net> <002301c97fec$cdc37d00$694a7700$@com>
	<497E16D1.8020501@lshift.net>
Message-ID: <008501c98015$244dd940$6ce98bc0$@com>

> christopher hoover wrote:
> > Eshell V5.6.3  (abort with ^G)
> > (test at frob)1>
> 
> So it all works for plain Erlang. *sigh*.
> 
> Is there any chance you could give me access to the machine, or send me
> an image of your setup?

Not that machine, but perhaps one of my own if I can reproduce it as such.  

Note: I've seen it in two places so far (Debian testing, Ubuntu Jaunty), so
I suspect it is not that hard to reproduce.

The other clue that I suspect is important is that 1.5.0 works.

-ch





From 0x6e6562 at gmail.com  Tue Jan 27 00:21:15 2009
From: 0x6e6562 at gmail.com (Ben Hood)
Date: Tue, 27 Jan 2009 00:21:15 +0000
Subject: [rabbitmq-discuss] Work distribution
Message-ID: <269388e30901261621m3d4e9628p8c708deffcfe638f@mail.gmail.com>

Dear List,

I'm probably going get dissed for posting a Java example to a Ruby
list, but I thought I'd announce the arrival of the basic.qos command
on the Ruby list first because I think that it may be of most interest
to some the Ruby based projects out there.

The idea behind the qos command is more fine grained egress flow
control, which IMHO, is relevant for applications that are doing work
distribution via AMQP.

Although the code for the article is written in Java (because the Ruby
client doesn't support the qos command), I think it would be straight
forward to draw a Rubyesque analogy.

As much as anything, it demonstrates how unreadable Java is because of
checked exceptions :-)

The article is here:
http://hopper.squarespace.com/blog/2009/1/26/work-distribution-in-rabbitmq.html

HTH,

Ben



From jasonjwwilliams at gmail.com  Tue Jan 27 02:25:27 2009
From: jasonjwwilliams at gmail.com (Jason J. W. Williams)
Date: Mon, 26 Jan 2009 19:25:27 -0700
Subject: [rabbitmq-discuss] Channel Cost
Message-ID: <3b949f090901261825r50a09601s5aaf8991e558476f@mail.gmail.com>

Is it costly in Rabbit to open and close channels frequently? The
reason I ask is that you can't pickup errors from a basic_publish in
py-ampqlib until you close the channel.

-J



From sustrik at imatix.com  Tue Jan 27 07:45:46 2009
From: sustrik at imatix.com (Martin Sustrik)
Date: Tue, 27 Jan 2009 08:45:46 +0100
Subject: [rabbitmq-discuss] RabbitMQ experience
In-Reply-To: <497E44F8.9050007@lshift.net>
References: <20090122115024.B15252402F@relay.gooddata.com>	<167204d20901220500o5b7bf24o5b63056360f92ee9@mail.gmail.com>	<497B0662.7000400@lshift.net>	<497E2B07.7060906@redhat.com>
	<497E44F8.9050007@lshift.net>
Message-ID: <497EBBAA.8040803@imatix.com>

Matthias, Gordon,

> It is actually surprisingly difficult to determine the *maximum* 
> sustainable throughput that way.

That's because there's no such thing as maximum throughput. Frankly, 
from methodological point of view the metric is completely broken. 
Still, we have to measure it because people expect us to do so.

> My experiments have shown that in a 
> test where the feedback loop ensures a constant lag (the number of 
> messages "in flight", i.e. the difference between the number of messages 
> sent by the producer and received by the consumer), plotting the lag vs 
> throughput exhibits some peculiar characteristics:

The problem here is that the throughput has to be measured at a _single_ 
point of the flow. Trying to measure throughput between point A and 
point B gives some strange metric that is half throughput and half 
latency. Think of a river. You can measure the flow rate of Danube 
(m^3/s) in Vienna, you can measure the flow rate in Budapest, but 
there's no such way as "flow rate between Vienna and Budapest".

> - there are local maxima, due to buffering and other effects

The maxima are inherent to the methodology. To compute throughput you 
have to do a rolling average over the data. The smaller the window for 
rolling average (and more fine grained the view of the data) the more 
peaky it is. With window size approaching 1, high peaks approach 
infinity while low peaks approach zero.

> - the graph is very sensitive to the setup

Yes. Confirmed. There's very little point in presenting throughput 
results to users as any little change in customer's setup can shift the 
actual figures by 50% or so.

> - the graph changes over time, due in part to the effects of JITs
> 
> - sampling intervals have to be very long to get anything approaching 
> reproducible results

We are using sampling intervals of 10,000,000-100,000,000 messages to 
keep the test quick and what we see is that results differ by up to 20% 
- even though dedicated non-switched link and real-time OS are used, 
whole quad-core CPU is shielded for the test, scheduling is set to FIFO etc.

> And all that happens when the feedback loop has been minimised by 
> colocating the producer and consumer in the same O/S process and using 
> internal message passing for the feedback. Routing the feedback through 
> the broker would make the results even more unpredictable.

Yes, the "broken methodology" problem applies even in a single process. 
Actually, passing messages between two threads may prove to be even more 
peaky as the timeslices assigned to a thread by OS are non-continuous by 
design and thus messages tend to processed in bursts.

> That's why so far the goal of writing a "press a button and get the 
> maximum throughput figure" test has eluded us. Coming up with a test 
> that delivers results with a +/-20% accuracy isn't too hard. But that is 
> far too insensitive for performance regression tests, where we are 
> interested in spotting variations of as little as 2%.

On more reason why "maximal throughput" metric is broken: It's often 
considered obvious that if maximal throughput is 200,000 msgs/sec, the 
system will be able to handle 100,000 msgs/sec. This may not be true. 
For example, when ingress rate is 200,000 msgs/sec system may be able to 
do some batching that will reduce number of packets on the network. With 
100,000 msgs/sec the ingress can be too slow to trigger batching 
mechanism and each message will be sent as a separate packet overloading 
the network stack. The consequence is that you'll experience no latency 
problems at the rate 200,000 msgs/sec, but messages may be delayed at 
100,000 msgs/sec.

Given all the methodological problems above and many more I haven't even 
mentioned lead us to use a different metric internally. We call it 
"message density" (1/lambda for those familiar with Erlang's work). It's 
a time interval between two subsequent messages at a single point of the 
network. The metric proved to be very stable and the tests are suddenly 
reproducible :) Also, performance results make much more sense when 
measured using density metric. Check following two graphs:

http://www.zeromq.org/results:0mq-tests-v03#toc4

First of them uses "throughput" metric, second one "density" metric. 
Even on first sight it's obvious that the "density" communicates more 
stable and predictable info about the behaviour of the system.

Sorry for such a long email, but we've messed with measurement 
methodology for at least a year so I have strong opinions on it.

Martin



From matthias at lshift.net  Tue Jan 27 09:13:57 2009
From: matthias at lshift.net (Matthias Radestock)
Date: Tue, 27 Jan 2009 09:13:57 +0000
Subject: [rabbitmq-discuss] Channel Cost
In-Reply-To: <3b949f090901261825r50a09601s5aaf8991e558476f@mail.gmail.com>
References: <3b949f090901261825r50a09601s5aaf8991e558476f@mail.gmail.com>
Message-ID: <497ED055.1070207@lshift.net>

Jason,

Jason J. W. Williams wrote:
> Is it costly in Rabbit to open and close channels frequently?

Yes.

> The reason I ask is that you can't pickup errors from a basic_publish
> in py-ampqlib until you close the channel.

What do you mean by "errors"? There are two types of errors that can 
arise when the server processes a basic.publish command. AMQP errors, 
such as malformed requests, missing exchange, etc, close the channel or 
connection automatically. Routing failures of messages with the 
'mandatory' or 'immediate' flag are signalled to the client with an 
asynchronous basic.return command.

Are you saying that in py-amqplib there is no way to get hold of the 
latter until channel closure? If so that would seem to be an omission in 
the library and I suggest you take that up with the authors.


Matthias.



From daveb at miceda.org  Tue Jan 27 14:02:14 2009
From: daveb at miceda.org (Dave Bryson)
Date: Tue, 27 Jan 2009 08:02:14 -0600
Subject: [rabbitmq-discuss] Erlang client handshake problem
Message-ID: <D0763298-F39F-4AAF-A583-98FDA5A76A6A@miceda.org>

Hi,

I have not been able to get the Erlang client to connect to the  
server. I've tried connecting to both the local server and the  
rabbitmq public server and getting the same problem on  
both...basically the client just hangs trying to make the connection.   
This happens when I run the network_test as well.   Looking in my  
local server log I keep seeing the same errors over and over:

=INFO REPORT==== 26-Jan-2009::22:09:38 ===
accepted TCP connection on 0.0.0.0:5672 from 127.0.0.1:64314

=INFO REPORT==== 26-Jan-2009::22:09:38 ===
starting TCP connection <0.153.0> from 127.0.0.1:64314

=ERROR REPORT==== 26-Jan-2009::22:09:48 ===
error on TCP connection <0.153.0> from 127.0.0.1:64314
{handshake_timeout,frame_header}

I'm using:
- latest erlang client from the website
- Rabbitmq server 1.5.1
- Erlang 12b-5

Any idea what I'm doing wrong?

Thanks!
Dave



From tonyg at lshift.net  Tue Jan 27 14:31:26 2009
From: tonyg at lshift.net (Tony Garnock-Jones)
Date: Tue, 27 Jan 2009 14:31:26 +0000
Subject: [rabbitmq-discuss] XMPP gateway status
Message-ID: <497F1ABE.5050500@lshift.net>

I've just overhauled the XMPP gateway code to get it basically working
with the tip of default of rabbitmq-server.

To try it out, please grab the tip of default of rabbitmq-server and of
rabbitmq-xmpp, and have a go.

We've renamed all the rabbitmq Mnesia tables to work around the name
conflict with ejabberd. The internal rabbitmq-server API has also
changed quite a lot in recent weeks which meant that the XMPP gateway
was broken in a number of other ways, but I think I've fixed the
majority of the problems.

Note that since the database tables have been renamed you won't be able
to use an existing rabbitmq database. Also it's possible I didn't catch
all the changes required so don't go rashly sticking the XMPP code into
production :-)

For the curious, these are the changes I made:
  http://hg.rabbitmq.com/rabbitmq-xmpp/rev/bb907510867c
  http://hg.rabbitmq.com/rabbitmq-xmpp/rev/3df8e3c95c7d

Regards,
  Tony
-- 
 [][][] Tony Garnock-Jones     | Mob: +44 (0)7905 974 211
   [][] LShift Ltd             | Tel: +44 (0)20 7729 7060
 []  [] http://www.lshift.net/ | Email: tonyg at lshift.net



From tonyg at lshift.net  Tue Jan 27 15:04:07 2009
From: tonyg at lshift.net (Tony Garnock-Jones)
Date: Tue, 27 Jan 2009 15:04:07 +0000
Subject: [rabbitmq-discuss] Explicit ACKs - Timeout Algorithm? (related:
 Net::Stomp)
In-Reply-To: <50c8ffe90901141228j6ae2e55et8b828af520eaff1d@mail.gmail.com>
References: <50c8ffe90901141228j6ae2e55et8b828af520eaff1d@mail.gmail.com>
Message-ID: <497F2267.6060306@lshift.net>

Hi Darien,

Darien Kindlund wrote:
> 1) So far, it seems that RabbitMQ will only alter messages that have
> been previously been "acquired" back to "not acquired" ONLY when the
> original consumer's *channel* has been terminated

That's right.

> 2) Is there any reference in the AMQP specification for dealing with
> these situations?  If RabbitMQ does implement some sort of timeout (as
> previously stated), what is the default time delay?

Currently AMQP doesn't have support for configuring such a timeout, and
RabbitMQ doesn't implement one, either. It seems like a useful idea,
though. If it were implemented, I'd imagine that if you didn't
acknowledge a message within the timeout, the server would issue a
channel.close, which would have as a side-effect the rollback of any
transactions and the release of any "acquired" messages.

However, could it be done some other way, avoiding the need for an
extension to the protocol or a change to the server? Perhaps some kind
of watchdog on the client side that throcks the connection when it
notices that the message-processing part of the client is wedged?

> 3) Is it possible that in order to achieve this type of behavior, you
> have to use transactions (tx) or distributed transactions (dtx) in
> RabbitMQ?

I don't think so -- in a way, ack-required messages even on ordinary
non-TX channels are like tiny, single-operation transactions that can
rollback (on channel close) or commit (on ack).

Regards,
  Tony
-- 
 [][][] Tony Garnock-Jones     | Mob: +44 (0)7905 974 211
   [][] LShift Ltd             | Tel: +44 (0)20 7729 7060
 []  [] http://www.lshift.net/ | Email: tonyg at lshift.net



From tonyg at lshift.net  Tue Jan 27 15:15:00 2009
From: tonyg at lshift.net (Tony Garnock-Jones)
Date: Tue, 27 Jan 2009 15:15:00 +0000
Subject: [rabbitmq-discuss] STOMP Connector / Net::Stomp / Custom Headers
In-Reply-To: <50c8ffe90901201955t55d1b79s117be071afbd2c9d@mail.gmail.com>
References: <50c8ffe90901201557w6dcae5f2t323dd999e07078d8@mail.gmail.com>	
	<e25246b60901201626y7c3f7c91n8c90f9cfba86ab51@mail.gmail.com>
	<50c8ffe90901201955t55d1b79s117be071afbd2c9d@mail.gmail.com>
Message-ID: <497F24F4.6020505@lshift.net>

Hi Darien,

> 1) When sending a message, I've tried setting the header named:
> 'reply-to', 'reply_to', x-reply-to', and 'x_reply_to'.  In *all*
> cases, it seems that the STOMP connector strips this header before
> sending the message through to the receiving *perl* process.

As you noted, the STOMP adapter treats all headers as case sensitive.

If you set "reply-to", then the "reply-to" header in the Basic Content
Properties part of the AMQP delivery is set to the string you give.
However, when the adapter gets a Basic.Deliver, it doesn't take the
"reply-to" header out of it to pass on to the STOMP client! I should fix
that.

If you set "X-reply-to", then an AMQP *user* header called "reply-to"
will be placed in the "headers" header in the Basic Content Properties
part of the delivery. I *did* implement the bit where the "headers"
header is extracted, keys prefixed with "X-", and send on in the MESSAGE
to the STOMP client. Phew.

> 2) In general, how does the STOMP connector deal with custom headers
> via Net::Stomp?  Does it strip out all custom headers?  Or only custom
> headers that don't begin with 'x-'?

User-level headers (that go in the "headers" member of a Basic Content
Properties frame, see section 1.1.6, page 21, line 5 of
https://jira.amqp.org/confluence/download/attachments/720900/amqp-xml-doc0-8.pdf?version=1)
are expected to be prefixed with "X-" in a SEND, and are prefixed with
"X-" when packaged up into a MESSAGE.

There are also "X-Q-" and "X-B-" prefixes that are used to construct the
arguments tables for queue declaration and binding, respectively, during
a SUBSCRIBE operation.

Regards,
  Tony
-- 
 [][][] Tony Garnock-Jones     | Mob: +44 (0)7905 974 211
   [][] LShift Ltd             | Tel: +44 (0)20 7729 7060
 []  [] http://www.lshift.net/ | Email: tonyg at lshift.net



From tonyg at lshift.net  Tue Jan 27 15:23:53 2009
From: tonyg at lshift.net (Tony Garnock-Jones)
Date: Tue, 27 Jan 2009 15:23:53 +0000
Subject: [rabbitmq-discuss] RabbitMQ experience
In-Reply-To: <497EBBAA.8040803@imatix.com>
References: <20090122115024.B15252402F@relay.gooddata.com>	<167204d20901220500o5b7bf24o5b63056360f92ee9@mail.gmail.com>	<497B0662.7000400@lshift.net>	<497E2B07.7060906@redhat.com>	<497E44F8.9050007@lshift.net>
	<497EBBAA.8040803@imatix.com>
Message-ID: <497F2709.6060206@lshift.net>

Martin Sustrik wrote:
> Given all the methodological problems above and many more I haven't even 
> mentioned lead us to use a different metric internally. We call it 
> "message density" (1/lambda for those familiar with Erlang's work). It's 
> a time interval between two subsequent messages at a single point of the 
> network. The metric proved to be very stable and the tests are suddenly 
> reproducible :) Also, performance results make much more sense when 
> measured using density metric. Check following two graphs:
> 
> http://www.zeromq.org/results:0mq-tests-v03#toc4

This is very interesting!

On another tack entirely, when measuring toxicity, the only sensible way
of specifying how poisonous something is is to use LD50, the "lethal
dose 50%", i.e. that dose at which there is a 50% chance of death (or at
which 50% of your dosed population dies, etc.). (Also used are LD75,
LD90 etc.)

Is there some kind of LD50-like concept that could be used in measuring
peak capacity?

Tony
-- 
 [][][] Tony Garnock-Jones     | Mob: +44 (0)7905 974 211
   [][] LShift Ltd             | Tel: +44 (0)20 7729 7060
 []  [] http://www.lshift.net/ | Email: tonyg at lshift.net



From dmitriy.samovskiy at cohesiveft.com  Tue Jan 27 15:24:43 2009
From: dmitriy.samovskiy at cohesiveft.com (Dmitriy Samovskiy)
Date: Tue, 27 Jan 2009 09:24:43 -0600
Subject: [rabbitmq-discuss] Channel Cost
In-Reply-To: <3b949f090901261825r50a09601s5aaf8991e558476f@mail.gmail.com>
References: <3b949f090901261825r50a09601s5aaf8991e558476f@mail.gmail.com>
Message-ID: <497F273B.9050501@cohesiveft.com>

Hi Jason,

Jason J. W. Williams wrote:
> Is it costly in Rabbit to open and close channels frequently? The
> reason I ask is that you can't pickup errors from a basic_publish in
> py-ampqlib until you close the channel.
> 
Could this suggestion by Matthias help you (second to last paragraph):
http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/2008-November/002539.html


- Dmitriy



From sustrik at imatix.com  Tue Jan 27 15:38:51 2009
From: sustrik at imatix.com (Martin Sustrik)
Date: Tue, 27 Jan 2009 16:38:51 +0100
Subject: [rabbitmq-discuss] RabbitMQ experience
In-Reply-To: <497F2709.6060206@lshift.net>
References: <20090122115024.B15252402F@relay.gooddata.com>	<167204d20901220500o5b7bf24o5b63056360f92ee9@mail.gmail.com>	<497B0662.7000400@lshift.net>	<497E2B07.7060906@redhat.com>	<497E44F8.9050007@lshift.net>
	<497EBBAA.8040803@imatix.com> <497F2709.6060206@lshift.net>
Message-ID: <497F2A8B.40409@imatix.com>


> On another tack entirely, when measuring toxicity, the only sensible way
> of specifying how poisonous something is is to use LD50, the "lethal
> dose 50%", i.e. that dose at which there is a 50% chance of death (or at
> which 50% of your dosed population dies, etc.). (Also used are LD75,
> LD90 etc.)
> 
> Is there some kind of LD50-like concept that could be used in measuring
> peak capacity?

Hm, interesting. I've never thought of that kind of metric. Possibly 
something like "if there's a peak lasting N seconds containing M 
messages there's a 50% chance that the max latency will exceed X 
microseconds". The obvious problem is that there are to many free 
variables in the formula.

Fixing X to say 1 millisecond makes sense (customers tend to have quite 
a clear idea what's the maximal viable latency), however, I'm not sure 
how to combine N and M into a single scalar value describing quality of 
the peak.

Martin



From tonyg at lshift.net  Tue Jan 27 15:51:34 2009
From: tonyg at lshift.net (Tony Garnock-Jones)
Date: Tue, 27 Jan 2009 15:51:34 +0000
Subject: [rabbitmq-discuss] STOMP Connector / Net::Stomp / Custom Headers
In-Reply-To: <497F24F4.6020505@lshift.net>
References: <50c8ffe90901201557w6dcae5f2t323dd999e07078d8@mail.gmail.com>		<e25246b60901201626y7c3f7c91n8c90f9cfba86ab51@mail.gmail.com>	<50c8ffe90901201955t55d1b79s117be071afbd2c9d@mail.gmail.com>
	<497F24F4.6020505@lshift.net>
Message-ID: <497F2D86.5050507@lshift.net>

Tony Garnock-Jones wrote:
> However, when the adapter gets a Basic.Deliver, it doesn't take the
> "reply-to" header out of it to pass on to the STOMP client! I should fix
> that.

I've added support for more of the Basic Content Properties: user
headers ("X-" prefix), content-type, content-encoding, delivery-mode,
priority, correlation-id, reply-to, and amqp-message-id are now supported.

Note that STOMP uses "message-id" for its own purposes (see the spec for
MESSAGE and ACK), so the Basic Content Properties field named "message
id" has to be labelled "amqp-message-id" when transferred via STOMP.

This is the changeset implementing the new headers:
http://hg.rabbitmq.com/rabbitmq-stomp/rev/8d4fe88546d8

Regards,
  Tony
-- 
 [][][] Tony Garnock-Jones     | Mob: +44 (0)7905 974 211
   [][] LShift Ltd             | Tel: +44 (0)20 7729 7060
 []  [] http://www.lshift.net/ | Email: tonyg at lshift.net



From bhyde at pobox.com  Tue Jan 27 17:07:35 2009
From: bhyde at pobox.com (Ben Hyde)
Date: Tue, 27 Jan 2009 12:07:35 -0500
Subject: [rabbitmq-discuss] Channel Cost
In-Reply-To: <497F273B.9050501@cohesiveft.com>
References: <3b949f090901261825r50a09601s5aaf8991e558476f@mail.gmail.com>
	<497F273B.9050501@cohesiveft.com>
Message-ID: <8D5FB78E-B233-47F3-A5B4-B1F8C4AA67B7@pobox.com>

Is there a more appropriate venue for AMQP users to gather and puzzle  
out what's what?  I feel a lack of community around my attempts to  
puzzle out what design patterns are good, and what AMQP expects of me.

On Jan 26, 2009, at 9:25 PM, Jason J. W. Williams wrote:
> ... you can't pickup errors from a basic_publish in
> py-ampqlib until you close the channel ...

One thing I'm having trouble with is getting a clear model of how  
responsibility for a message moves around. Basic publish tosses  
responsibility, and it's - ah - later that you _might_ infer or be  
told that it didn't work out.

That is the point of "2.2.3  No Confirmations" in "Advanced Message  
Queuing Protocol Specification [0.8 June 2006]".

On Jan 27, 2009, at 4:13 AM, Matthias Radestock wrote:
> What do you mean by "errors"?

indeed ... great list!

> There are two types of errors that can
> arise when the server processes a basic.publish command. AMQP errors,
> such as malformed requests, missing exchange, etc, close the channel  
> or
> connection automatically.

Assuring that all these are raised and caught provides no end of  
amusement.

There doesn't appear to be a way for the server to signal these errors  
short of tearing down the connection.  So catching this is a matter  
for your heartbeats or your doing it at the transport layer.  Correct?

> Routing failures of messages with the
> 'mandatory' or 'immediate' flag are signalled to the client with an
> asynchronous basic.return command.

> Are you saying that in py-amqplib there is no way to get hold of the
> latter until channel closure?

If I'm reading the code correctly the client (next time it reads from  
the channel) will dispatch to the basic_return method of the Channel  
object.  The Channel class does not have that method defined.  I could  
be wrong.

> If so that would seem to be an omission in
> the library and I suggest you take that up with the authors.

True that.  Crosstalk is good.  Py-amqplib is an important complement  
to rabbitmq.  There isn't a py-ampqlib mailing list, correct?

On Jan 27, 2009, at 10:24 AM, Dmitriy Samovskiy wrote:
> Could this suggestion by Matthias help you (second to last paragraph):
> http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/2008-November/002539.html

interesting:  "issue *any* synchronous command.  The response  
constitutes a guarantee that all messages published prior  to the  
request will have been processed by the channel process on the server."

That seems useful.  If you had the heart beat enabled would that tell  
you something similar?  Again not interoperable.

Do you have a synch. cmd you'd recommend.



From dmitriy.samovskiy at cohesiveft.com  Tue Jan 27 17:17:12 2009
From: dmitriy.samovskiy at cohesiveft.com (Dmitriy Samovskiy)
Date: Tue, 27 Jan 2009 11:17:12 -0600
Subject: [rabbitmq-discuss] Channel Cost
In-Reply-To: <8D5FB78E-B233-47F3-A5B4-B1F8C4AA67B7@pobox.com>
References: <3b949f090901261825r50a09601s5aaf8991e558476f@mail.gmail.com>	<497F273B.9050501@cohesiveft.com>
	<8D5FB78E-B233-47F3-A5B4-B1F8C4AA67B7@pobox.com>
Message-ID: <497F4198.50602@cohesiveft.com>



Ben Hyde wrote:
> On Jan 27, 2009, at 10:24 AM, Dmitriy Samovskiy wrote:
>> Could this suggestion by Matthias help you (second to last paragraph):
>> http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/2008-November/002539.html
> 
> interesting:  "issue *any* synchronous command.  The response  
> constitutes a guarantee that all messages published prior  to the  
> request will have been processed by the channel process on the server."
> 
> That seems useful.  If you had the heart beat enabled would that tell  
> you something similar?  Again not interoperable.
> 
> Do you have a synch. cmd you'd recommend.

I thought a passive queue or exchange declaration of a known entity might be sufficiently 
inexpensive:

ch.exchange_declare('amq.topic', type='topic', passive=True)

DEBUG:amqplib:> (10, 10): Connection.start
DEBUG:amqplib:Start from server, version: 8.0, properties: {u'platform': 'Erlang/OTP', 
u'product': 'RabbitMQ', u'version': '1.5.1', u'copyright': 'Copyright (C) 2007-2009 LShift 
Ltd., Cohesive Financial Technologies LLC., and Rabbit Technologies Ltd.', u'information': 
'Licensed under the MPL.  See http://www.rabbitmq.com/'}, mechanisms: ['PLAIN', 
'AMQPLAIN'], locales: ['en_US']
DEBUG:amqplib:< (10, 11): Connection.start_ok
DEBUG:amqplib:> (10, 30): Connection.tune
DEBUG:amqplib:< (10, 31): Connection.tune_ok
DEBUG:amqplib:< (10, 40): Connection.open
DEBUG:amqplib:> (10, 41): Connection.open_ok
DEBUG:amqplib:Open OK! known_hosts [myvm:5672]
DEBUG:amqplib:using channel_id: 1
DEBUG:amqplib:< (20, 10): Channel.open
DEBUG:amqplib:> (20, 11): Channel.open_ok
DEBUG:amqplib:Channel open
DEBUG:amqplib:< (60, 40): Channel.basic_publish
DEBUG:amqplib:< (40, 10): Channel.exchange_declare
DEBUG:amqplib:> (40, 11): Channel.exchange_declare_ok



From jasonjwwilliams at gmail.com  Tue Jan 27 17:19:17 2009
From: jasonjwwilliams at gmail.com (Jason J. W. Williams)
Date: Tue, 27 Jan 2009 10:19:17 -0700
Subject: [rabbitmq-discuss] Channel Cost
In-Reply-To: <497ED055.1070207@lshift.net>
References: <3b949f090901261825r50a09601s5aaf8991e558476f@mail.gmail.com>
	<497ED055.1070207@lshift.net>
Message-ID: <3b949f090901270919h32f45c1dw8396431c469d0b@mail.gmail.com>

Hi Matthias,

Thank you for the insight. My issue was exactly picking up channel
errors like publishing to an exchange that doesn't exist.
Unfortunately, py-amqplib doesn't raise the error until you close the
channel. I'll look at patching py-amqplib.

-J

On 1/27/09, Matthias Radestock <matthias at lshift.net> wrote:
> Jason,
>
> Jason J. W. Williams wrote:
>> Is it costly in Rabbit to open and close channels frequently?
>
> Yes.
>
>> The reason I ask is that you can't pickup errors from a basic_publish
>> in py-ampqlib until you close the channel.
>
> What do you mean by "errors"? There are two types of errors that can
> arise when the server processes a basic.publish command. AMQP errors,
> such as malformed requests, missing exchange, etc, close the channel or
> connection automatically. Routing failures of messages with the
> 'mandatory' or 'immediate' flag are signalled to the client with an
> asynchronous basic.return command.
>
> Are you saying that in py-amqplib there is no way to get hold of the
> latter until channel closure? If so that would seem to be an omission in
> the library and I suggest you take that up with the authors.
>
>
> Matthias.
>



From jasonjwwilliams at gmail.com  Tue Jan 27 17:20:40 2009
From: jasonjwwilliams at gmail.com (Jason J. W. Williams)
Date: Tue, 27 Jan 2009 10:20:40 -0700
Subject: [rabbitmq-discuss] Channel Cost
In-Reply-To: <497ED055.1070207@lshift.net>
References: <3b949f090901261825r50a09601s5aaf8991e558476f@mail.gmail.com>
	<497ED055.1070207@lshift.net>
Message-ID: <3b949f090901270920x6f18c98dpc92b04133e46c4c4@mail.gmail.com>

Hi Matthias,

Thank you for the insight. My issue was exactly picking up channel
errors like publishing to an exchange that doesn't exist.
Unfortunately, py-amqplib doesn't raise the error until you close the
channel. I'll look at patching py-amqplib.

-J

On 1/27/09, Matthias Radestock <matthias at lshift.net> wrote:
> Jason,
>
> Jason J. W. Williams wrote:
>> Is it costly in Rabbit to open and close channels frequently?
>
> Yes.
>
>> The reason I ask is that you can't pickup errors from a basic_publish
>> in py-ampqlib until you close the channel.
>
> What do you mean by "errors"? There are two types of errors that can
> arise when the server processes a basic.publish command. AMQP errors,
> such as malformed requests, missing exchange, etc, close the channel or
> connection automatically. Routing failures of messages with the
> 'mandatory' or 'immediate' flag are signalled to the client with an
> asynchronous basic.return command.
>
> Are you saying that in py-amqplib there is no way to get hold of the
> latter until channel closure? If so that would seem to be an omission in
> the library and I suggest you take that up with the authors.
>
>
> Matthias.
>



From jasonjwwilliams at gmail.com  Tue Jan 27 19:16:29 2009
From: jasonjwwilliams at gmail.com (Jason J. W. Williams)
Date: Tue, 27 Jan 2009 12:16:29 -0700
Subject: [rabbitmq-discuss] Channel Cost
In-Reply-To: <3b949f090901270919h32f45c1dw8396431c469d0b@mail.gmail.com>
References: <3b949f090901261825r50a09601s5aaf8991e558476f@mail.gmail.com>
	<497ED055.1070207@lshift.net>
	<3b949f090901270919h32f45c1dw8396431c469d0b@mail.gmail.com>
Message-ID: <3b949f090901271116g6c80531ck8b6799d82a1d9379@mail.gmail.com>

It looks like I can trigger the error by calling a channel.wait() to
pick up any errors that were triggered by the send. Problem is .wait()
is a blocking call and if everything went all right it just hangs up
the program. I'll take this over to the py-amqplib folks.

-J

On Tue, Jan 27, 2009 at 10:19 AM, Jason J. W. Williams
<jasonjwwilliams at gmail.com> wrote:
> Hi Matthias,
>
> Thank you for the insight. My issue was exactly picking up channel
> errors like publishing to an exchange that doesn't exist.
> Unfortunately, py-amqplib doesn't raise the error until you close the
> channel. I'll look at patching py-amqplib.
>
> -J
>
> On 1/27/09, Matthias Radestock <matthias at lshift.net> wrote:
>> Jason,
>>
>> Jason J. W. Williams wrote:
>>> Is it costly in Rabbit to open and close channels frequently?
>>
>> Yes.
>>
>>> The reason I ask is that you can't pickup errors from a basic_publish
>>> in py-ampqlib until you close the channel.
>>
>> What do you mean by "errors"? There are two types of errors that can
>> arise when the server processes a basic.publish command. AMQP errors,
>> such as malformed requests, missing exchange, etc, close the channel or
>> connection automatically. Routing failures of messages with the
>> 'mandatory' or 'immediate' flag are signalled to the client with an
>> asynchronous basic.return command.
>>
>> Are you saying that in py-amqplib there is no way to get hold of the
>> latter until channel closure? If so that would seem to be an omission in
>> the library and I suggest you take that up with the authors.
>>
>>
>> Matthias.
>>
>
> _______________________________________________
> rabbitmq-discuss mailing list
> rabbitmq-discuss at lists.rabbitmq.com
> http://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss
>



From bp at barryp.org  Tue Jan 27 19:24:33 2009
From: bp at barryp.org (Barry Pederson)
Date: Tue, 27 Jan 2009 13:24:33 -0600
Subject: [rabbitmq-discuss] Channel Cost
In-Reply-To: <3b949f090901271116g6c80531ck8b6799d82a1d9379@mail.gmail.com>
References: <3b949f090901261825r50a09601s5aaf8991e558476f@mail.gmail.com>	<497ED055.1070207@lshift.net>	<3b949f090901270919h32f45c1dw8396431c469d0b@mail.gmail.com>
	<3b949f090901271116g6c80531ck8b6799d82a1d9379@mail.gmail.com>
Message-ID: <497F5F71.2010607@barryp.org>

Jason J. W. Williams wrote:
> It looks like I can trigger the error by calling a channel.wait() to
> pick up any errors that were triggered by the send. Problem is .wait()
> is a blocking call and if everything went all right it just hangs up
> the program. I'll take this over to the py-amqplib folks.

How are you triggering errors with the send?  Is it with immediate or 
mandatory flags?  It'd be good to have an example that could be the 
basis for a unittest.

	Barry



From matthias at lshift.net  Tue Jan 27 19:25:17 2009
From: matthias at lshift.net (Matthias Radestock)
Date: Tue, 27 Jan 2009 19:25:17 +0000
Subject: [rabbitmq-discuss] Channel Cost
In-Reply-To: <8D5FB78E-B233-47F3-A5B4-B1F8C4AA67B7@pobox.com>
References: <3b949f090901261825r50a09601s5aaf8991e558476f@mail.gmail.com>	<497F273B.9050501@cohesiveft.com>
	<8D5FB78E-B233-47F3-A5B4-B1F8C4AA67B7@pobox.com>
Message-ID: <497F5F9D.8000206@lshift.net>

Ben,

Ben Hyde wrote:
> There doesn't appear to be a way for the server to signal these errors  
> short of tearing down the connection.  So catching this is a matter  
> for your heartbeats or your doing it at the transport layer.  Correct?

The errors are signalled to the client in a {channel,connection}.close 
command. When the client responds to that with an 'ok' (or after a 
timeout) the server closes the underlying tcp connection.

So there is plenty of opportunity for the client to report/signal the 
error. Such notifications are still asynchronous though, since you don't 
get any positive acks that a message has been successfully published.

> interesting:  "issue *any* synchronous command.  The response  
> constitutes a guarantee that all messages published prior  to the  
> request will have been processed by the channel process on the server."
> 
> That seems useful.  If you had the heart beat enabled would that tell  
> you something similar?  Again not interoperable.
> 
> Do you have a synch. cmd you'd recommend.

Heartbeats only tell you whether the other side is still alive. They 
don't tell you what it has seen/processed.

As for what sychronous command to use...

- 'access.request' is the cheap since it's currently a no-op ... pending 
its removal when we implement AMQP 0-9-1.

- 'basic.cancel' with a non-existing consumer tag is very cheap too.

- Another option is 'channel.flow', which for the RabbitMQ server is a 
no-op (until we implement it), and hence cheap.


Note though that getting a confirmation that the RabbitMQ's channel 
processes have handled a message may not provide you enough of a 
guarantee. The messages may not have been enqueued yet (though setting 
the 'mandatory' flag will provide that guarantee), and, in case of 
persistent messages, may not have been flushed to disk yet (nothing you 
can do about that short of using tx.*).


Matthias.



From jasonjwwilliams at gmail.com  Tue Jan 27 19:34:31 2009
From: jasonjwwilliams at gmail.com (Jason J. W. Williams)
Date: Tue, 27 Jan 2009 12:34:31 -0700
Subject: [rabbitmq-discuss] Channel Cost
In-Reply-To: <497F5F71.2010607@barryp.org>
References: <3b949f090901261825r50a09601s5aaf8991e558476f@mail.gmail.com>
	<497ED055.1070207@lshift.net>
	<3b949f090901270919h32f45c1dw8396431c469d0b@mail.gmail.com>
	<3b949f090901271116g6c80531ck8b6799d82a1d9379@mail.gmail.com>
	<497F5F71.2010607@barryp.org>
Message-ID: <3b949f090901271134i1ea260e9y3353793b7b5f21fb@mail.gmail.com>

Hi Barry,

chan_send.basic_publish(msg,exchange=args.exchange,routing_key=args.routing_key)
to an exchange that doesn't exist. I was just wrapping that in a
try/except, assuming it would raise AMQPChannelError if there was an
issue. Unfortunately, it doesn't look like basic_publish has any logic
for checking for an error.

At this point I'm looking at wrapping .wait() in a decorator that
registers an alarm signal and forces an exception if the alarm timer
is too long. Either that or I'll have to move to txAMQP to defer the
error check.

-J

On Tue, Jan 27, 2009 at 12:24 PM, Barry Pederson <bp at barryp.org> wrote:
> Jason J. W. Williams wrote:
>>
>> It looks like I can trigger the error by calling a channel.wait() to
>> pick up any errors that were triggered by the send. Problem is .wait()
>> is a blocking call and if everything went all right it just hangs up
>> the program. I'll take this over to the py-amqplib folks.
>
> How are you triggering errors with the send?  Is it with immediate or
> mandatory flags?  It'd be good to have an example that could be the basis
> for a unittest.
>
>        Barry
>



From matthias at lshift.net  Tue Jan 27 19:58:37 2009
From: matthias at lshift.net (Matthias Radestock)
Date: Tue, 27 Jan 2009 19:58:37 +0000
Subject: [rabbitmq-discuss] rabbitmq 1.5.1-1 from debian pool fails to
 start
In-Reply-To: <008501c98015$244dd940$6ce98bc0$@com>
References: <009b01c97f71$1a382950$4ea87bf0$@com>	<497D7C63.9060904@lshift.net>	<000001c97fdd$0498c2f0$0dca48d0$@com>	<497E0ECE.3090702@lshift.net>
	<002301c97fec$cdc37d00$694a7700$@com>	<497E16D1.8020501@lshift.net>
	<008501c98015$244dd940$6ce98bc0$@com>
Message-ID: <497F676D.40609@lshift.net>

Christopher,

christopher hoover wrote:
>> Is there any chance you could give me access to the machine, or send me
>> an image of your setup?
> 
> Not that machine, but perhaps one of my own if I can reproduce it as such.  
> 
> Note: I've seen it in two places so far (Debian testing, Ubuntu Jaunty), so
> I suspect it is not that hard to reproduce.
> 
> The other clue that I suspect is important is that 1.5.0 works.

These are all good data points. Alas I have been unable to reproduce the 
problem. Hence giving me access to a machine that exhibits the behaviour 
you are seeing is the next logical step.


Matthias.



From bhyde at pobox.com  Tue Jan 27 20:54:09 2009
From: bhyde at pobox.com (Ben Hyde)
Date: Tue, 27 Jan 2009 15:54:09 -0500
Subject: [rabbitmq-discuss] Channel Cost
In-Reply-To: <3b949f090901271134i1ea260e9y3353793b7b5f21fb@mail.gmail.com>
References: <3b949f090901261825r50a09601s5aaf8991e558476f@mail.gmail.com>
	<497ED055.1070207@lshift.net>
	<3b949f090901270919h32f45c1dw8396431c469d0b@mail.gmail.com>
	<3b949f090901271116g6c80531ck8b6799d82a1d9379@mail.gmail.com>
	<497F5F71.2010607@barryp.org>
	<3b949f090901271134i1ea260e9y3353793b7b5f21fb@mail.gmail.com>
Message-ID: <05C03F18-72E2-4969-A0D4-5E67C11C7BCA@pobox.com>


On Jan 27, 2009, at 2:34 PM, Jason J. W. Williams wrote:
> Hi Barry,
>
> chan_send
> .basic_publish
> (msg,exchange=args.exchange,routing_key=args.routing_key)
> to an exchange that doesn't exist.


Sometime ago, as Dmitriy had pointed out, Matthias suggested that a  
synchronous call to RabbitMQ is a good way to see if it has consumed  
the frames we previously dispatched to it.  And presumably that also  
allows amqplib a chance to see any errors that consumption sent back.   
Dmitriy suggested using declare_exchange as possible choice for a  
synchronous call to the broker, and Matthias made some other  
suggestions.

So in the following ping_channel does a meaningless exchange_declare.

Jason's example of how to get basic_publish to have an error:

On Jan 27, 2009, at 2:34 PM, Jason J. W. Williams wrote:
> ...chan_send 
> .basic_publish 
> (msg,exchange=args.exchange,routing_key=args.routing_key)
> to an exchange that doesn't exist. ..

So the following code does that, followed by calling ping_channel.   
The transcript below shows amqplib reporting the error as soon as it  
reads off that the channel is closing.

The source:

#!/usr/bin/env python
import amqplib.client_0_8 as amqp
import logging
from os import environ

def ping_channel(channel):
     channel.exchange_declare("RANDOMTEXT",type='topic', passive=True)


if __name__ == '__main__':
     logger = logging.getLogger('amqplib')
     logger.addHandler(logging.StreamHandler())
     logger.setLevel(logging.DEBUG)
     def trace(m): logger.debug('TRACE: ' + m)
     vhost=environ.get('AMQP_USERID','/')
     trace('create connection')
     connection = conn =  
amqp.Connection(environ.get('AMQP_SERVER','localhost'),
                                               
userid=environ.get('AMQP_USERID','guest'),
                                               
password=environ.get('AMQP_USERID','guest'),
                                              virtual_host=vhost)
     trace('create channel')
     channel = connection.channel()
     trace('access_request')
     channel.access_request(vhost, active=True, write=True)
     exchange_name = environ.get('AMQP_EXCHANGE','ampq.topic')
#    exchange = channel.exchange_declare(exchange_name,
#                                         
environ.get('AMQP_EXCHANGE_KIND','topic'))
     trace('make message')
     msg = amqp.Message("Hi there", content_type='text/plain')
     trace('basic_publish')
     channel.basic_publish(msg, exchange_name,  
routing_key=environ.get('AMQP_ROUTING_KEY',''))
     trace('ping')
     ping_channel(channel)
     trace('done')


The transcript:
bash-3.2$ env - PATH=$PATH AMQP_SERVER=192.168.1.2 AMQP_EXCHANGE=bogus  
bin/foo.py
TRACE: create connection
 > (10, 10): Connection.start
Start from server, version: 8.0, properties: {u'platform': 'Erlang/ 
OTP', u'product': 'RabbitMQ', u'version': '1.5.0', u'copyright':  
'Copyright (C) 2007-2009 LShift Ltd., Cohesive Financial Technologies  
LLC., and Rabbit Technologies Ltd.', u'information': 'Licensed under  
the MPL.  See http://www.rabbitmq.com/'}, mechanisms: ['PLAIN',  
'AMQPLAIN'], locales: ['en_US']
< (10, 11): Connection.start_ok
 > (10, 30): Connection.tune
< (10, 31): Connection.tune_ok
< (10, 40): Connection.open
 > (10, 41): Connection.open_ok
Open OK! known_hosts [elm.cozy.org:5672]
TRACE: create channel
using channel_id: 1
< (20, 10): Channel.open
 > (20, 11): Channel.open_ok
Channel open
TRACE: access_request
< (30, 10): Channel.access_request
 > (30, 11): Channel.access_request_ok
TRACE: make message
TRACE: basic_publish
< (60, 40): Channel.basic_publish
TRACE: ping
< (40, 10): Channel.exchange_declare
 > (20, 40): Channel.close
< (20, 41): Channel.close_ok
Closed channel #1
Traceback (most recent call last):
   File "bin/foo.py", line 34, in <module>
     ping_channel(channel)
   File "bin/foo.py", line 8, in ping_channel
     channel.exchange_declare("RANDOMTEXT",type='topic', passive=True)
   File "/opt/local/lib/python2.5/site-packages/amqplib/ 
client_0_8.py", line 1814, in exchange_declare
     (40, 11),    # Channel.exchange_declare_ok
   File "/opt/local/lib/python2.5/site-packages/amqplib/ 
client_0_8.py", line 203, in wait
     return self._dispatch(method_sig, args, content)
   File "/opt/local/lib/python2.5/site-packages/amqplib/ 
client_0_8.py", line 115, in _dispatch
     return amqp_method(self, args)
   File "/opt/local/lib/python2.5/site-packages/amqplib/ 
client_0_8.py", line 1244, in _close
     raise AMQPChannelException(reply_code, reply_text, (class_id,  
method_id))
amqplib.client_0_8.AMQPChannelException: (404, u"NOT_FOUND - no  
exchange 'bogus' in vhost '/'", (60, 40), 'Channel.basic_publish')
bash-3.2$ 



From jasonjwwilliams at gmail.com  Tue Jan 27 21:08:34 2009
From: jasonjwwilliams at gmail.com (Jason J. W. Williams)
Date: Tue, 27 Jan 2009 14:08:34 -0700
Subject: [rabbitmq-discuss] Channel Cost
In-Reply-To: <05C03F18-72E2-4969-A0D4-5E67C11C7BCA@pobox.com>
References: <3b949f090901261825r50a09601s5aaf8991e558476f@mail.gmail.com>
	<497ED055.1070207@lshift.net>
	<3b949f090901270919h32f45c1dw8396431c469d0b@mail.gmail.com>
	<3b949f090901271116g6c80531ck8b6799d82a1d9379@mail.gmail.com>
	<497F5F71.2010607@barryp.org>
	<3b949f090901271134i1ea260e9y3353793b7b5f21fb@mail.gmail.com>
	<05C03F18-72E2-4969-A0D4-5E67C11C7BCA@pobox.com>
Message-ID: <3b949f090901271308g5062f996g709add4304602506@mail.gmail.com>

I think one of the issues is that a channel close is always going to
get a response, so the embedded .wait() to get a response to hangs in
a blocking state. The issue with basic_publish is that it may channel
error, or it may not, and a wait() call is going to block in non-error
conditions. I assume this is why basic_publish doesn't check for
channel errors.

It seems to me there need to be a way to set the timeout on the wait()
call (w/ msec precision). In the meantime, as a work around, I'm doing
a test publish when the channel is created, closing the channel, and
if no exception is raised re-opening the channel. If there are any
errors subsequently they don't get noticed, but this at least handles
the bulk of the channel error issues.

-J

On Tue, Jan 27, 2009 at 1:54 PM, Ben Hyde <bhyde at pobox.com> wrote:
>
> On Jan 27, 2009, at 2:34 PM, Jason J. W. Williams wrote:
>>
>> Hi Barry,
>>
>> chan_send
>> .basic_publish
>> (msg,exchange=args.exchange,routing_key=args.routing_key)
>> to an exchange that doesn't exist.
>
>
> Sometime ago, as Dmitriy had pointed out, Matthias suggested that a
> synchronous call to RabbitMQ is a good way to see if it has consumed the
> frames we previously dispatched to it.  And presumably that also allows
> amqplib a chance to see any errors that consumption sent back.  Dmitriy
> suggested using declare_exchange as possible choice for a synchronous call
> to the broker, and Matthias made some other suggestions.
>
> So in the following ping_channel does a meaningless exchange_declare.
>
> Jason's example of how to get basic_publish to have an error:
>
> On Jan 27, 2009, at 2:34 PM, Jason J. W. Williams wrote:
>>
>>
>> ...chan_send.basic_publish(msg,exchange=args.exchange,routing_key=args.routing_key)
>> to an exchange that doesn't exist. ..
>
> So the following code does that, followed by calling ping_channel.  The
> transcript below shows amqplib reporting the error as soon as it reads off
> that the channel is closing.
>
> The source:
>
> #!/usr/bin/env python
> import amqplib.client_0_8 as amqp
> import logging
> from os import environ
>
> def ping_channel(channel):
>    channel.exchange_declare("RANDOMTEXT",type='topic', passive=True)
>
>
> if __name__ == '__main__':
>    logger = logging.getLogger('amqplib')
>    logger.addHandler(logging.StreamHandler())
>    logger.setLevel(logging.DEBUG)
>    def trace(m): logger.debug('TRACE: ' + m)
>    vhost=environ.get('AMQP_USERID','/')
>    trace('create connection')
>    connection = conn =
> amqp.Connection(environ.get('AMQP_SERVER','localhost'),
>
> userid=environ.get('AMQP_USERID','guest'),
>
> password=environ.get('AMQP_USERID','guest'),
>                                             virtual_host=vhost)
>    trace('create channel')
>    channel = connection.channel()
>    trace('access_request')
>    channel.access_request(vhost, active=True, write=True)
>    exchange_name = environ.get('AMQP_EXCHANGE','ampq.topic')
> #    exchange = channel.exchange_declare(exchange_name,
> #
>  environ.get('AMQP_EXCHANGE_KIND','topic'))
>    trace('make message')
>    msg = amqp.Message("Hi there", content_type='text/plain')
>    trace('basic_publish')
>    channel.basic_publish(msg, exchange_name,
> routing_key=environ.get('AMQP_ROUTING_KEY',''))
>    trace('ping')
>    ping_channel(channel)
>    trace('done')
>
>
> The transcript:
> bash-3.2$ env - PATH=$PATH AMQP_SERVER=192.168.1.2 AMQP_EXCHANGE=bogus
> bin/foo.py
> TRACE: create connection
>> (10, 10): Connection.start
> Start from server, version: 8.0, properties: {u'platform': 'Erlang/OTP',
> u'product': 'RabbitMQ', u'version': '1.5.0', u'copyright': 'Copyright (C)
> 2007-2009 LShift Ltd., Cohesive Financial Technologies LLC., and Rabbit
> Technologies Ltd.', u'information': 'Licensed under the MPL.  See
> http://www.rabbitmq.com/'}, mechanisms: ['PLAIN', 'AMQPLAIN'], locales:
> ['en_US']
> < (10, 11): Connection.start_ok
>> (10, 30): Connection.tune
> < (10, 31): Connection.tune_ok
> < (10, 40): Connection.open
>> (10, 41): Connection.open_ok
> Open OK! known_hosts [elm.cozy.org:5672]
> TRACE: create channel
> using channel_id: 1
> < (20, 10): Channel.open
>> (20, 11): Channel.open_ok
> Channel open
> TRACE: access_request
> < (30, 10): Channel.access_request
>> (30, 11): Channel.access_request_ok
> TRACE: make message
> TRACE: basic_publish
> < (60, 40): Channel.basic_publish
> TRACE: ping
> < (40, 10): Channel.exchange_declare
>> (20, 40): Channel.close
> < (20, 41): Channel.close_ok
> Closed channel #1
> Traceback (most recent call last):
>  File "bin/foo.py", line 34, in <module>
>    ping_channel(channel)
>  File "bin/foo.py", line 8, in ping_channel
>    channel.exchange_declare("RANDOMTEXT",type='topic', passive=True)
>  File "/opt/local/lib/python2.5/site-packages/amqplib/client_0_8.py", line
> 1814, in exchange_declare
>    (40, 11),    # Channel.exchange_declare_ok
>  File "/opt/local/lib/python2.5/site-packages/amqplib/client_0_8.py", line
> 203, in wait
>    return self._dispatch(method_sig, args, content)
>  File "/opt/local/lib/python2.5/site-packages/amqplib/client_0_8.py", line
> 115, in _dispatch
>    return amqp_method(self, args)
>  File "/opt/local/lib/python2.5/site-packages/amqplib/client_0_8.py", line
> 1244, in _close
>    raise AMQPChannelException(reply_code, reply_text, (class_id, method_id))
> amqplib.client_0_8.AMQPChannelException: (404, u"NOT_FOUND - no exchange
> 'bogus' in vhost '/'", (60, 40), 'Channel.basic_publish')
> bash-3.2$
>



From tonyg at lshift.net  Tue Jan 27 22:05:07 2009
From: tonyg at lshift.net (Tony Garnock-Jones)
Date: Tue, 27 Jan 2009 22:05:07 +0000
Subject: [rabbitmq-discuss] RabbitMQ experience
In-Reply-To: <497F2A8B.40409@imatix.com>
References: <20090122115024.B15252402F@relay.gooddata.com>	<167204d20901220500o5b7bf24o5b63056360f92ee9@mail.gmail.com>	<497B0662.7000400@lshift.net>	<497E2B07.7060906@redhat.com>	<497E44F8.9050007@lshift.net>
	<497EBBAA.8040803@imatix.com> <497F2709.6060206@lshift.net>
	<497F2A8B.40409@imatix.com>
Message-ID: <497F8513.50903@lshift.net>

Martin Sustrik wrote:
> Hm, interesting. I've never thought of that kind of metric. Possibly 
> something like "if there's a peak lasting N seconds containing M 
> messages there's a 50% chance that the max latency will exceed X 
> microseconds". The obvious problem is that there are to many free 
> variables in the formula.

Yeah. Hmm. Well, LD50 is measured IIRC along the lines of "LD50 is this 
many mg/kg in mice", so there's a dependency on species, amount of 
bodyweight, and amount of drug. Still doesn't help with our problem, of 
course :-)

Those charts you linked earlier were interesting. The 1/lambda chart had 
a sharp corner where the network took over from the CPU as the 
bottleneck. Perhaps the location (and sharpness?) of the corner is a 
relevant measure?



From bp at barryp.org  Tue Jan 27 22:16:37 2009
From: bp at barryp.org (Barry Pederson)
Date: Tue, 27 Jan 2009 16:16:37 -0600
Subject: [rabbitmq-discuss] Channel Cost
In-Reply-To: <3b949f090901271134i1ea260e9y3353793b7b5f21fb@mail.gmail.com>
References: <3b949f090901261825r50a09601s5aaf8991e558476f@mail.gmail.com>	
	<497ED055.1070207@lshift.net>	
	<3b949f090901270919h32f45c1dw8396431c469d0b@mail.gmail.com>	
	<3b949f090901271116g6c80531ck8b6799d82a1d9379@mail.gmail.com>	
	<497F5F71.2010607@barryp.org>
	<3b949f090901271134i1ea260e9y3353793b7b5f21fb@mail.gmail.com>
Message-ID: <497F87C5.70707@barryp.org>

Jason J. W. Williams wrote:
> Hi Barry,
> 
> chan_send.basic_publish(msg,exchange=args.exchange,routing_key=args.routing_key)
> to an exchange that doesn't exist. I was just wrapping that in a
> try/except, assuming it would raise AMQPChannelError if there was an
> issue. Unfortunately, it doesn't look like basic_publish has any logic
> for checking for an error.

Would it make more sense to do an exchange_declare() with passive=True 
to check for the existence of the exchange you're going to publish to? 
The PyDocs for Channel.exchange_declare() say:

-----------
   passive: boolean

       do not create exchange

       If set, the server will not create the exchange.  The
       client can use this to check whether an exchange
       exists without modifying the server state.

       RULE:

           If set, and the exchange does not already exist,
           the server MUST raise a channel exception with
           reply code 404 (not found).
-------------


	Barry



From bp at barryp.org  Tue Jan 27 22:19:59 2009
From: bp at barryp.org (Barry Pederson)
Date: Tue, 27 Jan 2009 16:19:59 -0600
Subject: [rabbitmq-discuss] Channel Cost
In-Reply-To: <3b949f090901271308g5062f996g709add4304602506@mail.gmail.com>
References: <3b949f090901261825r50a09601s5aaf8991e558476f@mail.gmail.com>	
	<497ED055.1070207@lshift.net>	
	<3b949f090901270919h32f45c1dw8396431c469d0b@mail.gmail.com>	
	<3b949f090901271116g6c80531ck8b6799d82a1d9379@mail.gmail.com>	
	<497F5F71.2010607@barryp.org>	
	<3b949f090901271134i1ea260e9y3353793b7b5f21fb@mail.gmail.com>	
	<05C03F18-72E2-4969-A0D4-5E67C11C7BCA@pobox.com>
	<3b949f090901271308g5062f996g709add4304602506@mail.gmail.com>
Message-ID: <497F888F.901@barryp.org>

Jason J. W. Williams wrote:

> It seems to me there need to be a way to set the timeout on the wait()
> call (w/ msec precision). In the meantime, as a work around, I'm doing
> a test publish when the channel is created, closing the channel, and
> if no exception is raised re-opening the channel. If there are any
> errors subsequently they don't get noticed, but this at least handles
> the bulk of the channel error issues.

The development version of py-amqplib has some timeout features you can 
play with.

     http://hg.barryp.org/py-amqplib-devel/

	Barry



From 0x6e6562 at gmail.com  Tue Jan 27 22:32:30 2009
From: 0x6e6562 at gmail.com (Ben Hood)
Date: Tue, 27 Jan 2009 22:32:30 +0000
Subject: [rabbitmq-discuss] Channel Cost
In-Reply-To: <8D5FB78E-B233-47F3-A5B4-B1F8C4AA67B7@pobox.com>
References: <3b949f090901261825r50a09601s5aaf8991e558476f@mail.gmail.com>
	<497F273B.9050501@cohesiveft.com>
	<8D5FB78E-B233-47F3-A5B4-B1F8C4AA67B7@pobox.com>
Message-ID: <269388e30901271432u50d95ce5r83b24f972f438542@mail.gmail.com>

Ben,

On Tue, Jan 27, 2009 at 5:07 PM, Ben Hyde <bhyde at pobox.com> wrote:
> Is there a more appropriate venue for AMQP users to gather and puzzle
> out what's what?

Theoretically there should be, but in the absence of an official AMQP
user list, feel free to send your questions to the place where you
think they may get best answered :-)

> I feel a lack of community around my attempts to
> puzzle out what design patterns are good, and what AMQP expects of me.

This is unfortunate - can you tell us what we need to improve to rectify this?

Thx,

Ben



From 0x6e6562 at gmail.com  Tue Jan 27 22:35:57 2009
From: 0x6e6562 at gmail.com (Ben Hood)
Date: Tue, 27 Jan 2009 22:35:57 +0000
Subject: [rabbitmq-discuss] Erlang client handshake problem
In-Reply-To: <D0763298-F39F-4AAF-A583-98FDA5A76A6A@miceda.org>
References: <D0763298-F39F-4AAF-A583-98FDA5A76A6A@miceda.org>
Message-ID: <269388e30901271435j55e1cab6o2f44d5b0de247b0d@mail.gmail.com>

Dave,

On Tue, Jan 27, 2009 at 2:02 PM, Dave Bryson <daveb at miceda.org> wrote:
> I have not been able to get the Erlang client to connect to the
> server. I've tried connecting to both the local server and the
> rabbitmq public server and getting the same problem on
> both...basically the client just hangs trying to make the connection.
> This happens when I run the network_test as well.   Looking in my
> local server log I keep seeing the same errors over and over:

Can we have a few more clues about your setup, e.g. which specific
version of the client you are running and how you are running it?

Ben



From jasonjwwilliams at gmail.com  Wed Jan 28 00:11:29 2009
From: jasonjwwilliams at gmail.com (Jason J. W. Williams)
Date: Tue, 27 Jan 2009 17:11:29 -0700
Subject: [rabbitmq-discuss] Channel Cost
In-Reply-To: <497F87C5.70707@barryp.org>
References: <3b949f090901261825r50a09601s5aaf8991e558476f@mail.gmail.com>
	<497ED055.1070207@lshift.net>
	<3b949f090901270919h32f45c1dw8396431c469d0b@mail.gmail.com>
	<3b949f090901271116g6c80531ck8b6799d82a1d9379@mail.gmail.com>
	<497F5F71.2010607@barryp.org>
	<3b949f090901271134i1ea260e9y3353793b7b5f21fb@mail.gmail.com>
	<497F87C5.70707@barryp.org>
Message-ID: <3b949f090901271611wafaeb5eve853544d9cae2a31@mail.gmail.com>

Hey Barry,


>
> Would it make more sense to do an exchange_declare() with passive=True to
> check for the existence of the exchange you're going to publish to? The

I thought about declaring the exchange in the producer, but again that
would be only an instantiation check. Since the class instance is long
lasting, it's not something I would want to do with every
basic_publish, so if by some method the exchange were to disappear
after object instantiation, the app still wouldn't know until the
object (and app) were torn down.

-J



From daveb at miceda.org  Wed Jan 28 00:13:04 2009
From: daveb at miceda.org (Dave Bryson)
Date: Tue, 27 Jan 2009 18:13:04 -0600
Subject: [rabbitmq-discuss] Erlang client handshake problem
In-Reply-To: <269388e30901271435j55e1cab6o2f44d5b0de247b0d@mail.gmail.com>
References: <D0763298-F39F-4AAF-A583-98FDA5A76A6A@miceda.org>
	<269388e30901271435j55e1cab6o2f44d5b0de247b0d@mail.gmail.com>
Message-ID: <4C35D274-A908-4823-A322-97E39D8D5F45@miceda.org>

Ben,

Thanks for the response.  I've been racking my brain trying to figure  
out what's going on:

As for versions of the client, I've tried:
-  latest snapshot erlang-client in the zip from the download link off  
the rabbitmq website
-  and also tried the latest version from repo here: hg clone http://hg.rabbitmq.com/rabbitmq-erlang-client/

For servers, I tried:
  - the generic unix version of rabbitmq 1.5.1 from the tar on the  
website
  - and also built it separately from the repository.

In all cases I continue to have the same problem:  the client doesn't  
connect.  When I run "make test_network"  the basic_get_test() shows a  
*time out* and the client just sits there... the same happens if I try  
and use the api directly from the console via:

erl -pa ebin rabbitmq_server/ebin -boot start_sasl

 > C = amqp_connection:start("guest", "guest", "localhost").

If I look in the rabbit server logs I see:

=INFO REPORT==== 27-Jan-2009::10:31:48 ===
accepted TCP connection on 0.0.0.0:5672 from 127.0.0.1:65509

=INFO REPORT==== 27-Jan-2009::10:31:48 ===
starting TCP connection <0.167.0> from 127.0.0.1:65509

=ERROR REPORT==== 27-Jan-2009::10:31:58 ===
error on TCP connection <0.167.0> from 127.0.0.1:65509
{handshake_timeout,frame_header}

That's it, no erl dumps or any other error shows up on the client.

I tried a separate test against the server using a AMQP Ruby client  
against the server and all worked without a problem.

My Environment:

- Mac OS X 10.5.6
- Erlang 12b-5

Any help is greatly appreciated!
Dave




On Jan 27, 2009, at 4:35 PM, Ben Hood wrote:

> Dave,
>
> On Tue, Jan 27, 2009 at 2:02 PM, Dave Bryson <daveb at miceda.org> wrote:
>> I have not been able to get the Erlang client to connect to the
>> server. I've tried connecting to both the local server and the
>> rabbitmq public server and getting the same problem on
>> both...basically the client just hangs trying to make the connection.
>> This happens when I run the network_test as well.   Looking in my
>> local server log I keep seeing the same errors over and over:
>
> Can we have a few more clues about your setup, e.g. which specific
> version of the client you are running and how you are running it?
>
> Ben




From daveb at miceda.org  Wed Jan 28 00:55:34 2009
From: daveb at miceda.org (Dave Bryson)
Date: Tue, 27 Jan 2009 18:55:34 -0600
Subject: [rabbitmq-discuss] Erlang client handshake problem
In-Reply-To: <269388e30901271435j55e1cab6o2f44d5b0de247b0d@mail.gmail.com>
References: <D0763298-F39F-4AAF-A583-98FDA5A76A6A@miceda.org>
	<269388e30901271435j55e1cab6o2f44d5b0de247b0d@mail.gmail.com>
Message-ID: <F1B38DEC-119C-4078-995D-E463898378A7@miceda.org>

Ben,

I also just did a test on Ubuntu 8.04 with:
- the latest snapshot of rabbitmq-server 1.5.1
- and the latest snapshot of the erlang client.
- Erlang 12b-3

I'm getting the same exact error as I get on my Mac:

 From the client the "make test_network" times out on basic_get_test
and the logs on the server show:

"error on TCP connection"
{handshake_timeout,frame_header}

Dave

On Jan 27, 2009, at 4:35 PM, Ben Hood wrote:

> Dave,
>
> On Tue, Jan 27, 2009 at 2:02 PM, Dave Bryson <daveb at miceda.org> wrote:
>> I have not been able to get the Erlang client to connect to the
>> server. I've tried connecting to both the local server and the
>> rabbitmq public server and getting the same problem on
>> both...basically the client just hangs trying to make the connection.
>> This happens when I run the network_test as well.   Looking in my
>> local server log I keep seeing the same errors over and over:
>
> Can we have a few more clues about your setup, e.g. which specific
> version of the client you are running and how you are running it?
>
> Ben




From bhyde at pobox.com  Wed Jan 28 01:01:49 2009
From: bhyde at pobox.com (Ben Hyde)
Date: Tue, 27 Jan 2009 20:01:49 -0500
Subject: [rabbitmq-discuss] Channel Cost
In-Reply-To: <05C03F18-72E2-4969-A0D4-5E67C11C7BCA@pobox.com>
References: <3b949f090901261825r50a09601s5aaf8991e558476f@mail.gmail.com>
	<497ED055.1070207@lshift.net>
	<3b949f090901270919h32f45c1dw8396431c469d0b@mail.gmail.com>
	<3b949f090901271116g6c80531ck8b6799d82a1d9379@mail.gmail.com>
	<497F5F71.2010607@barryp.org>
	<3b949f090901271134i1ea260e9y3353793b7b5f21fb@mail.gmail.com>
	<05C03F18-72E2-4969-A0D4-5E67C11C7BCA@pobox.com>
Message-ID: <0B1D0D75-AE5C-4357-8E86-00AE1984E930@pobox.com>

The code below has a flaw.  It worked only by virtue of dumb luck.
The ping should be changed to check for an exchange your sure
exists.  Passive is spec'd to close the connection if the exchange
doesn't exist (which RANDOMTEXT doesn't).  That failure is masked
in the example because the err. r. the bogus exchange came first.

On Jan 27, 2009, at 3:54 PM, Ben Hyde wrote:

>
> On Jan 27, 2009, at 2:34 PM, Jason J. W. Williams wrote:
>> Hi Barry,
>>
>> chan_send
>> .basic_publish
>> (msg,exchange=args.exchange,routing_key=args.routing_key)
>> to an exchange that doesn't exist.
>
>
> Sometime ago, as Dmitriy had pointed out, Matthias suggested that a
> synchronous call to RabbitMQ is a good way to see if it has consumed
> the frames we previously dispatched to it.  And presumably that also
> allows amqplib a chance to see any errors that consumption sent back.
> Dmitriy suggested using declare_exchange as possible choice for a
> synchronous call to the broker, and Matthias made some other
> suggestions.
>
> So in the following ping_channel does a meaningless exchange_declare.
>
> Jason's example of how to get basic_publish to have an error:
>
> On Jan 27, 2009, at 2:34 PM, Jason J. W. Williams wrote:
>> ...chan_send
>> .basic_publish
>> (msg,exchange=args.exchange,routing_key=args.routing_key)
>> to an exchange that doesn't exist. ..
>
> So the following code does that, followed by calling ping_channel.
> The transcript below shows amqplib reporting the error as soon as it
> reads off that the channel is closing.
>
> The source:
>
> #!/usr/bin/env python
> import amqplib.client_0_8 as amqp
> import logging
> from os import environ
>
> def ping_channel(channel):
>     channel.exchange_declare("RANDOMTEXT",type='topic', passive=True)
>
>
> if __name__ == '__main__':
>     logger = logging.getLogger('amqplib')
>     logger.addHandler(logging.StreamHandler())
>     logger.setLevel(logging.DEBUG)
>     def trace(m): logger.debug('TRACE: ' + m)
>     vhost=environ.get('AMQP_USERID','/')
>     trace('create connection')
>     connection = conn =
> amqp.Connection(environ.get('AMQP_SERVER','localhost'),
>
> userid=environ.get('AMQP_USERID','guest'),
>
> password=environ.get('AMQP_USERID','guest'),
>                                              virtual_host=vhost)
>     trace('create channel')
>     channel = connection.channel()
>     trace('access_request')
>     channel.access_request(vhost, active=True, write=True)
>     exchange_name = environ.get('AMQP_EXCHANGE','ampq.topic')
> #    exchange = channel.exchange_declare(exchange_name,
> #
> environ.get('AMQP_EXCHANGE_KIND','topic'))
>     trace('make message')
>     msg = amqp.Message("Hi there", content_type='text/plain')
>     trace('basic_publish')
>     channel.basic_publish(msg, exchange_name,
> routing_key=environ.get('AMQP_ROUTING_KEY',''))
>     trace('ping')
>     ping_channel(channel)
>     trace('done')
>
>
> The transcript:
> bash-3.2$ env - PATH=$PATH AMQP_SERVER=192.168.1.2 AMQP_EXCHANGE=bogus
> bin/foo.py
> TRACE: create connection
>> (10, 10): Connection.start
> Start from server, version: 8.0, properties: {u'platform': 'Erlang/
> OTP', u'product': 'RabbitMQ', u'version': '1.5.0', u'copyright':
> 'Copyright (C) 2007-2009 LShift Ltd., Cohesive Financial Technologies
> LLC., and Rabbit Technologies Ltd.', u'information': 'Licensed under
> the MPL.  See http://www.rabbitmq.com/'}, mechanisms: ['PLAIN',
> 'AMQPLAIN'], locales: ['en_US']
> < (10, 11): Connection.start_ok
>> (10, 30): Connection.tune
> < (10, 31): Connection.tune_ok
> < (10, 40): Connection.open
>> (10, 41): Connection.open_ok
> Open OK! known_hosts [elm.cozy.org:5672]
> TRACE: create channel
> using channel_id: 1
> < (20, 10): Channel.open
>> (20, 11): Channel.open_ok
> Channel open
> TRACE: access_request
> < (30, 10): Channel.access_request
>> (30, 11): Channel.access_request_ok
> TRACE: make message
> TRACE: basic_publish
> < (60, 40): Channel.basic_publish
> TRACE: ping
> < (40, 10): Channel.exchange_declare
>> (20, 40): Channel.close
> < (20, 41): Channel.close_ok
> Closed channel #1
> Traceback (most recent call last):
>   File "bin/foo.py", line 34, in <module>
>     ping_channel(channel)
>   File "bin/foo.py", line 8, in ping_channel
>     channel.exchange_declare("RANDOMTEXT",type='topic', passive=True)
>   File "/opt/local/lib/python2.5/site-packages/amqplib/
> client_0_8.py", line 1814, in exchange_declare
>     (40, 11),    # Channel.exchange_declare_ok
>   File "/opt/local/lib/python2.5/site-packages/amqplib/
> client_0_8.py", line 203, in wait
>     return self._dispatch(method_sig, args, content)
>   File "/opt/local/lib/python2.5/site-packages/amqplib/
> client_0_8.py", line 115, in _dispatch
>     return amqp_method(self, args)
>   File "/opt/local/lib/python2.5/site-packages/amqplib/
> client_0_8.py", line 1244, in _close
>     raise AMQPChannelException(reply_code, reply_text, (class_id,
> method_id))
> amqplib.client_0_8.AMQPChannelException: (404, u"NOT_FOUND - no
> exchange 'bogus' in vhost '/'", (60, 40), 'Channel.basic_publish')
> bash-3.2$
>
> _______________________________________________
> rabbitmq-discuss mailing list
> rabbitmq-discuss at lists.rabbitmq.com
> http://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss




From daveb at miceda.org  Wed Jan 28 01:09:41 2009
From: daveb at miceda.org (Dave Bryson)
Date: Tue, 27 Jan 2009 19:09:41 -0600
Subject: [rabbitmq-discuss] Erlang client handshake problem
In-Reply-To: <269388e30901271435j55e1cab6o2f44d5b0de247b0d@mail.gmail.com>
References: <D0763298-F39F-4AAF-A583-98FDA5A76A6A@miceda.org>
	<269388e30901271435j55e1cab6o2f44d5b0de247b0d@mail.gmail.com>
Message-ID: <6F47303D-D75E-4581-A23A-BCF917E10A72@miceda.org>

Possible reason:

It looks like that by default "amqp_connection:start()" uses the  
"amqp_direct_driver"  See line 50 in the amqp_connection.erl.  Which  
assumes your running the client in the same process as the server.   
The connection type is also used by the "network_client_test".  Is  
this correct?  This could possible explain the error I'm getting.

Dave

On Jan 27, 2009, at 4:35 PM, Ben Hood wrote:

> Dave,
>
> On Tue, Jan 27, 2009 at 2:02 PM, Dave Bryson <daveb at miceda.org> wrote:
>> I have not been able to get the Erlang client to connect to the
>> server. I've tried connecting to both the local server and the
>> rabbitmq public server and getting the same problem on
>> both...basically the client just hangs trying to make the connection.
>> This happens when I run the network_test as well.   Looking in my
>> local server log I keep seeing the same errors over and over:
>
> Can we have a few more clues about your setup, e.g. which specific
> version of the client you are running and how you are running it?
>
> Ben




From dialtone at gmail.com  Wed Jan 28 01:31:49 2009
From: dialtone at gmail.com (Valentino Volonghi)
Date: Tue, 27 Jan 2009 17:31:49 -0800
Subject: [rabbitmq-discuss] Erlang client handshake problem
In-Reply-To: <F1B38DEC-119C-4078-995D-E463898378A7@miceda.org>
References: <D0763298-F39F-4AAF-A583-98FDA5A76A6A@miceda.org>
	<269388e30901271435j55e1cab6o2f44d5b0de247b0d@mail.gmail.com>
	<F1B38DEC-119C-4078-995D-E463898378A7@miceda.org>
Message-ID: <A6265C61-876E-4581-85DA-74D3E5218992@gmail.com>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1


On Jan 27, 2009, at 4:55 PM, Dave Bryson wrote:

> Ben,
>
> I also just did a test on Ubuntu 8.04 with:
> - the latest snapshot of rabbitmq-server 1.5.1
> - and the latest snapshot of the erlang client.
> - Erlang 12b-3
>
> I'm getting the same exact error as I get on my Mac:
>
> From the client the "make test_network" times out on basic_get_test
> and the logs on the server show:
>
> "error on TCP connection"
> {handshake_timeout,frame_header}


I also can reproduce this error, I don't do anything special. source  
checkouts
of the rabbitmq-erlang-client and rabbitmq-server with rabbitmq-codegen.

All at their tip, when I try to connect with rabbitmq-erlang-client I  
get the
error above.

FWIW this doesn't happen in:

changeset:   727:89756e9329f4

as opposed to rabbitmq-server tip:
810:6d6dbd7f9b50

I also went on and did some bisect search on the changesets and found  
out
that the problem starts appearing on changeset 780. changeset 779 is  
perfectly
fine.

- --
Valentino Volonghi aka Dialtone
Now running MacOS X 10.5
Home Page: http://www.twisted.it
http://www.adroll.com

-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.4.9 (Darwin)

iEYEARECAAYFAkl/tYUACgkQ9Llz28widGUgxwCfXBk87/kdyGpPxMSb/zz5lOVY
7DYAoNsnb5lv63uaZOT/26JsOItq6Ynu
=9ryf
-----END PGP SIGNATURE-----



From daveb at miceda.org  Wed Jan 28 02:54:18 2009
From: daveb at miceda.org (Dave Bryson)
Date: Tue, 27 Jan 2009 20:54:18 -0600
Subject: [rabbitmq-discuss] Erlang client handshake problem
In-Reply-To: <A6265C61-876E-4581-85DA-74D3E5218992@gmail.com>
References: <D0763298-F39F-4AAF-A583-98FDA5A76A6A@miceda.org>
	<269388e30901271435j55e1cab6o2f44d5b0de247b0d@mail.gmail.com>
	<F1B38DEC-119C-4078-995D-E463898378A7@miceda.org>
	<A6265C61-876E-4581-85DA-74D3E5218992@gmail.com>
Message-ID: <3ED44D9A-B554-4592-95F6-257104DA8A8B@miceda.org>

Valentino,

I backed down to version 1.5.0 of the server and the client works  
without a problem.  So there's definitely something between 1.5.0 and  
1.5.1 that's breaking the Erlang client.

Thanks for the help,

Dave

On Jan 27, 2009, at 7:31 PM, Valentino Volonghi wrote:

> -----BEGIN PGP SIGNED MESSAGE-----
> Hash: SHA1
>
>
> On Jan 27, 2009, at 4:55 PM, Dave Bryson wrote:
>
>> Ben,
>>
>> I also just did a test on Ubuntu 8.04 with:
>> - the latest snapshot of rabbitmq-server 1.5.1
>> - and the latest snapshot of the erlang client.
>> - Erlang 12b-3
>>
>> I'm getting the same exact error as I get on my Mac:
>>
>> From the client the "make test_network" times out on basic_get_test
>> and the logs on the server show:
>>
>> "error on TCP connection"
>> {handshake_timeout,frame_header}
>
>
> I also can reproduce this error, I don't do anything special. source  
> checkouts
> of the rabbitmq-erlang-client and rabbitmq-server with rabbitmq- 
> codegen.
>
> All at their tip, when I try to connect with rabbitmq-erlang-client  
> I get the
> error above.
>
> FWIW this doesn't happen in:
>
> changeset:   727:89756e9329f4
>
> as opposed to rabbitmq-server tip:
> 810:6d6dbd7f9b50
>
> I also went on and did some bisect search on the changesets and  
> found out
> that the problem starts appearing on changeset 780. changeset 779 is  
> perfectly
> fine.
>
> - --
> Valentino Volonghi aka Dialtone
> Now running MacOS X 10.5
> Home Page: http://www.twisted.it
> http://www.adroll.com
>
> -----BEGIN PGP SIGNATURE-----
> Version: GnuPG v1.4.9 (Darwin)
>
> iEYEARECAAYFAkl/tYUACgkQ9Llz28widGUgxwCfXBk87/kdyGpPxMSb/zz5lOVY
> 7DYAoNsnb5lv63uaZOT/26JsOItq6Ynu
> =9ryf
> -----END PGP SIGNATURE-----




From sustrik at imatix.com  Wed Jan 28 06:53:53 2009
From: sustrik at imatix.com (Martin Sustrik)
Date: Wed, 28 Jan 2009 07:53:53 +0100
Subject: [rabbitmq-discuss] RabbitMQ experience
In-Reply-To: <497F8513.50903@lshift.net>
References: <20090122115024.B15252402F@relay.gooddata.com>	<167204d20901220500o5b7bf24o5b63056360f92ee9@mail.gmail.com>	<497B0662.7000400@lshift.net>	<497E2B07.7060906@redhat.com>	<497E44F8.9050007@lshift.net>
	<497EBBAA.8040803@imatix.com> <497F2709.6060206@lshift.net>
	<497F2A8B.40409@imatix.com> <497F8513.50903@lshift.net>
Message-ID: <49800101.8020501@imatix.com>

Tony Garnock-Jones wrote:
> Martin Sustrik wrote:
>> Hm, interesting. I've never thought of that kind of metric. Possibly 
>> something like "if there's a peak lasting N seconds containing M 
>> messages there's a 50% chance that the max latency will exceed X 
>> microseconds". The obvious problem is that there are to many free 
>> variables in the formula.
> 
> Yeah. Hmm. Well, LD50 is measured IIRC along the lines of "LD50 is this 
> many mg/kg in mice", so there's a dependency on species, amount of 
> bodyweight, and amount of drug. Still doesn't help with our problem, of 
> course :-)

What can be done for example is to simulate some particularly terrible 
real-world market data peak and show that the solution is capable of 
handling it with latencies below N in 99.99% of cases.

Still, while vendors love percentile statistics, customers want hard 
limits forgetting that they won't run the system on hard realtime OS 
anyway... something more "straightforward" would do a better marketing job.

> Those charts you linked earlier were interesting. The 1/lambda chart had 
> a sharp corner where the network took over from the CPU as the 
> bottleneck. Perhaps the location (and sharpness?) of the corner is a 
> relevant measure?

That metric may be pretty interesting to understand how the system 
behaves, but you can easily make it look better by slowing down 
processing of the message content (linearly bound part of the algorithm) 
instead of speeding up processing of the message as a unit (constantly 
bound part of the algorithm).

You can make it unambiguous by mentioning 2 values: "for message sizes 
below 32 bytes the system hits its processing limit at 250 nanoseconds 
per message i.e. 4 million messages a second."

Martin



From matthias at lshift.net  Wed Jan 28 08:48:26 2009
From: matthias at lshift.net (Matthias Radestock)
Date: Wed, 28 Jan 2009 08:48:26 +0000
Subject: [rabbitmq-discuss] Erlang client handshake problem
In-Reply-To: <D0763298-F39F-4AAF-A583-98FDA5A76A6A@miceda.org>
References: <D0763298-F39F-4AAF-A583-98FDA5A76A6A@miceda.org>
Message-ID: <49801BDA.3080705@lshift.net>

Dave,

Dave Bryson wrote:
> I'm using:
> - latest erlang client from the website
> - Rabbitmq server 1.5.1
> - Erlang 12b-5
> 
> Any idea what I'm doing wrong?

The tests work fine for me using the v1_5_1-tagged revision of the 
server (same as latest release) and the head of the *default* branch of 
the rabbitmq-erlang-client (revision 3c6f7b5e67ae at the time of writing).

When building from our hg repos, do *not* use the 'tip' revision - it 
will be some random, probably un-qa'ed branch. Use the head of the 
'default' branch instead, or, even better, some tagged revision such as 
'v1_5_1'. Revisions with the same tag should work together, whereas the 
'default' revisions in different repos sometimes do not.

I have just added a 'v1_5_1' tag to the rabbitmq-erlang-client repo.


Matthias.



From Alister.Morton at tradition.com  Wed Jan 28 11:05:21 2009
From: Alister.Morton at tradition.com (Alister Morton)
Date: Wed, 28 Jan 2009 11:05:21 +0000
Subject: [rabbitmq-discuss] A new exchange type
Message-ID: <5A46D132C446C04B9EFE8AD14E7891065C49E4B4BB@SVR-2K3-BH-EMC.tradition.int>

Maybe.

We have a use pattern in mind that I think would require development of a new exchange type, and a couple of conversations with Alexis would seem to reinforce this view that, currently, the functionality we have in mind doesn't exist in rabbitmq.

What we'd like to do is have an exchange type which acted like a regular topic exchange, where messages are "routed" into queues based on the topic, but in addition kept a copy of the last message sent to the exchange for each topic. So the behaviour of the exchange would be slightly different to how it is at the moment. Currently, if you create a purely topic based exchange, and publish a message to it, then some time alter attach a queue to that subject, no message is delivered until the next message is published to that topic. With the new exchange the newly connected queue would immediately receive a message that was a copy of the last message published, however long ago it was. Clearly, the timestamp on the message is important, but this architecture could, I think, be very useful. One use would be as a replacement for the proprietary "market data feed" type servers many institutions use to share internal data records. Although there is clearly a distinction between a "record" and a "message" it would be very simple, and for many purposes perfectly adequate, to build a simple internal feed system around a RabbitMQ message broker with this new, additional exchange type.

Anyone else see a use for it? We're currently weighing up the pros and cons of having such an exchange developed for rabbit, or continuing to use our own, internally developed but proprietary message broker, which /does/ implement last message persistence in this way.



al.


The information herein may have been obtained from various sources. Any opinion expressed may be that of the sender only, is subject to change without notice and should be independently evaluated. Nothing herein constitutes investment advice or an offer, or solicitation of an offer, to buy or sell any financial product. Any data consists of purely indicative prices and should not be relied upon to revalue any commercial positions held by any recipient. Tradition makes no warranty that the data represent or indicates prices at which transactions may be or have been made by any Tradition Group company. To the maximum extent of the law, Tradition accepts no responsibility for, and cannot and does not warrant the integrity, accuracy, quality, completeness, merchantability or suitability for a particular purpose or requirement of the information or data, even if arising out of the negligence of Tradition or otherwise. Tradition accepts no liability for any direct, indirect or other consequential loss arising out of any use of the information contained in this document or any omission from it. This communication is directed at Eligible Counterparties and Professional Clients as defined by the FSA. It is not for distribution to nor should it be relied upon by Private Clients. It is not intended for distribution to, or use by any person or entity in any jurisdiction or country where such distribution or use would be contrary to any applicable law or regulation. Please note that, for business or compliance reasons, we may monitor and read emails sent or received using our servers or equipment. Tradition (UK) Ltd (937647; FSA 139200), Tradition Financial Services Ltd (1046064; FSA 147543), TFS Derivatives Ltd (4051930; FSA 197244), Tradition London Clearing Ltd (3633863; FSA 190632) and TFS-ICAP Ltd (4025995; FSA 206018) registered in England at Beaufort House, 15 St Botolph Street, London EC3A 7QX; authorised and regulated by the Financial Services Authority. VAT No: GB 365 4639 27 except TFS-ICAP GB 766 0854 05.



From sustrik at imatix.com  Wed Jan 28 11:30:50 2009
From: sustrik at imatix.com (Martin Sustrik)
Date: Wed, 28 Jan 2009 12:30:50 +0100
Subject: [rabbitmq-discuss] A new exchange type
In-Reply-To: <5A46D132C446C04B9EFE8AD14E7891065C49E4B4BB@SVR-2K3-BH-EMC.tradition.int>
References: <5A46D132C446C04B9EFE8AD14E7891065C49E4B4BB@SVR-2K3-BH-EMC.tradition.int>
Message-ID: <498041EA.4040004@imatix.com>


> We have a use pattern in mind that I think would require development of a new exchange type, and a couple of conversations with Alexis would seem to reinforce this view that, currently, the functionality we have in mind doesn't exist in rabbitmq.
> 
> What we'd like to do is have an exchange type which acted like a regular topic exchange, where messages are "routed" into queues based on the topic, but in addition kept a copy of the last message sent to the exchange for each topic. So the behaviour of the exchange would be slightly different to how it is at the moment. Currently, if you create a purely topic based exchange, and publish a message to it, then some time alter attach a queue to that subject, no message is delivered until the next message is published to that topic. With the new exchange the newly connected queue would immediately receive a message that was a copy of the last message published, however long ago it was. Clearly, the timestamp on the message is important, but this architecture could, I think, be very useful. One use would be as a replacement for the proprietary "market data feed" type servers many institutions use to share internal data records. Although there is clearly a distinction between a 
"record" and a "message" it would be very simple, and for many purposes perfectly adequate, to build a simple internal feed system around a RabbitMQ message broker with this new, additional exchange type.
> 
> Anyone else see a use for it? We're currently weighing up the pros and cons of having such an exchange developed for rabbit, or continuing to use our own, internally developed but proprietary message broker, which /does/ implement last message persistence in this way.

That's the standard last-value-cache scenario. Almost everyone would 
benefit from that kind of functionality IMO. However, it's pretty 
dangerous to use without the proper caution. The number of topics is 
basically unbound (actually 256^256) meaning that you can exhaust memory 
and cause DoS by swapping to disk when application doesn't restrict 
itself to a finite set of distinct topics. Also, getting the last value 
can be pretty CPU greedy if there's a lot of topics - that can also lead 
to DoS situations.

Martin



From tonyg at lshift.net  Wed Jan 28 11:33:02 2009
From: tonyg at lshift.net (Tony Garnock-Jones)
Date: Wed, 28 Jan 2009 11:33:02 +0000
Subject: [rabbitmq-discuss] A new exchange type
In-Reply-To: <5A46D132C446C04B9EFE8AD14E7891065C49E4B4BB@SVR-2K3-BH-EMC.tradition.int>
References: <5A46D132C446C04B9EFE8AD14E7891065C49E4B4BB@SVR-2K3-BH-EMC.tradition.int>
Message-ID: <4980426E.5020803@lshift.net>

Alister,

That's a great insight. We've been puzzling over "last-value caching"
for a while now, and not made any great progress, largely I think
because we'd concentrated on putting it in to the *queues* rather than
the exchanges. Your observation that it's best placed in the *exchange*
is, I think, critical. Great stuff!

So given a stateful (!) exchange of the kind you describe, what could
some of the parameters be for its behaviour?

 - how entries in the cache are expired

 - how the cache is keyed

 - whether looser consistency than total across a cluster is
   worthwhile for each particular application

Anything else?

Off the top of my head, it'd be a straightforward enough implementation.
Presumably it would be activated by an argument in the exchange.declare
arguments table. A new shared mnesia table would be required, with the
same scope as the routing tables. It could either be disk- or
ram-resident. On binding creation, a scan of the cache table would be
done and the matching messages delivered to the queue before the binding
completes.

Tony



Alister Morton wrote:
> We have a use pattern in mind that I think would require development
of a new exchange type, and a couple of conversations with Alexis would
seem to reinforce this view that, currently, the functionality we have
in mind doesn't exist in rabbitmq.
> 
> What we'd like to do is have an exchange type which acted like a
regular topic exchange, where messages are "routed" into queues based on
the topic, but in addition kept a copy of the last message sent to the
exchange for each topic. So the behaviour of the exchange would be
slightly different to how it is at the moment. Currently, if you create
a purely topic based exchange, and publish a message to it, then some
time alter attach a queue to that subject, no message is delivered until
the next message is published to that topic. With the new exchange the
newly connected queue would immediately receive a message that was a
copy of the last message published, however long ago it was. Clearly,
the timestamp on the message is important, but this architecture could,
I think, be very useful. One use would be as a replacement for the
proprietary "market data feed" type servers many institutions use to
share internal data records. Although there is clearly a distinction
between a "record" and a "message" it would be very simple, and for many
purposes perfectly adequate, to build a simple internal feed system
around a RabbitMQ message broker with this new, additional exchange type.
> 
> Anyone else see a use for it? We're currently weighing up the pros
> and
cons of having such an exchange developed for rabbit, or continuing to
use our own, internally developed but proprietary message broker, which
/does/ implement last message persistence in this way.

-- 
 [][][] Tony Garnock-Jones     | Mob: +44 (0)7905 974 211
   [][] LShift Ltd             | Tel: +44 (0)20 7729 7060
 []  [] http://www.lshift.net/ | Email: tonyg at lshift.net



From andrius.norkaitis at oryo.lt  Wed Jan 28 11:36:13 2009
From: andrius.norkaitis at oryo.lt (Andrius Norkaitis)
Date: Wed, 28 Jan 2009 13:36:13 +0200
Subject: [rabbitmq-discuss] A new exchange type
References: <5A46D132C446C04B9EFE8AD14E7891065C49E4B4BB@SVR-2K3-BH-EMC.tradition.int>
Message-ID: <0CDA17F57848D14C960AE8AAB11BCB83022AD400@ex.pczona.lt>

Great idea Alister, it could be useful indeed.

Just my quick thoughts about functionality that may be needed:
1)	When declaring exchange, ability to specify the count of messages to hold (not only just last one)
2)	ability to specify expiration date or time span and hold messages to that date 

What do you think?

Currently we are using custom implementation of second the case. When a user starts listening to newly declared query, he also asks ?service? for the last messages that haven?t timeout.



-----Original Message-----
From:	rabbitmq-discuss-bounces at lists.rabbitmq.com on behalf of Alister Morton
Sent:	Tr 2009.01.28 13:05
To:	'rabbitmq-discuss at lists.rabbitmq.com'
Cc:	
Subject:	[rabbitmq-discuss] A new exchange type

Maybe.

We have a use pattern in mind that I think would require development of a new exchange type, and a couple of conversations with Alexis would seem to reinforce this view that, currently, the functionality we have in mind doesn't exist in rabbitmq.

What we'd like to do is have an exchange type which acted like a regular topic exchange, where messages are "routed" into queues based on the topic, but in addition kept a copy of the last message sent to the exchange for each topic. So the behaviour of the exchange would be slightly different to how it is at the moment. Currently, if you create a purely topic based exchange, and publish a message to it, then some time alter attach a queue to that subject, no message is delivered until the next message is published to that topic. With the new exchange the newly connected queue would immediately receive a message that was a copy of the last message published, however long ago it was. Clearly, the timestamp on the message is important, but this architecture could, I think, be very useful. One use would be as a replacement for the proprietary "market data feed" type servers many institutions use to share internal data records. Although there is clearly a distinction between a "record" and a "message" it would be very simple, and for many purposes perfectly adequate, to build a simple internal feed system around a RabbitMQ message broker with this new, additional exchange type.

Anyone else see a use for it? We're currently weighing up the pros and cons of having such an exchange developed for rabbit, or continuing to use our own, internally developed but proprietary message broker, which /does/ implement last message persistence in this way.



al.


The information herein may have been obtained from various sources. Any opinion expressed may be that of the sender only, is subject to change without notice and should be independently evaluated. Nothing herein constitutes investment advice or an offer, or solicitation of an offer, to buy or sell any financial product. Any data consists of purely indicative prices and should not be relied upon to revalue any commercial positions held by any recipient. Tradition makes no warranty that the data represent or indicates prices at which transactions may be or have been made by any Tradition Group company. To the maximum extent of the law, Tradition accepts no responsibility for, and cannot and does not warrant the integrity, accuracy, quality, completeness, merchantability or suitability for a particular purpose or requirement of the information or data, even if arising out of the negligence of Tradition or otherwise. Tradition accepts no liability for any direct, indirect or other consequential loss arising out of any use of the information contained in this document or any omission from it. This communication is directed at Eligible Counterparties and Professional Clients as defined by the FSA. It is not for distribution to nor should it be relied upon by Private Clients. It is not intended for distribution to, or use by any person or entity in any jurisdiction or country where such distribution or use would be contrary to any applicable law or regulation. Please note that, for business or compliance reasons, we may monitor and read emails sent or received using our servers or equipment. Tradition (UK) Ltd (937647; FSA 139200), Tradition Financial Services Ltd (1046064; FSA 147543), TFS Derivatives Ltd (4051930; FSA 197244), Tradition London Clearing Ltd (3633863; FSA 190632) and TFS-ICAP Ltd (4025995; FSA 206018) registered in England at Beaufort House, 15 St Botolph Street, London EC3A 7QX; authorised and regulated by the Financial Services Authority. VAT No: GB 365 4639 27 except TFS-ICAP GB 766 0854 05.

_______________________________________________
rabbitmq-discuss mailing list
rabbitmq-discuss at lists.rabbitmq.com
http://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss



-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20090128/9126491d/attachment.htm 

From tonyg at lshift.net  Wed Jan 28 11:43:26 2009
From: tonyg at lshift.net (Tony Garnock-Jones)
Date: Wed, 28 Jan 2009 11:43:26 +0000
Subject: [rabbitmq-discuss] A new exchange type
In-Reply-To: <0CDA17F57848D14C960AE8AAB11BCB83022AD400@ex.pczona.lt>
References: <5A46D132C446C04B9EFE8AD14E7891065C49E4B4BB@SVR-2K3-BH-EMC.tradition.int>
	<0CDA17F57848D14C960AE8AAB11BCB83022AD400@ex.pczona.lt>
Message-ID: <498044DE.8010308@lshift.net>

Andrius Norkaitis wrote:
> Currently we are using custom implementation of second the case. When a
> user starts listening to newly declared query, he also asks ?service?
> for the last messages that haven?t timeout.

That's a useful stopgap solution. I know a bunch of people that would be
interested in such a piece of software, until a proper last-value-cache
is implemented: is it something you'd be willing to share?

Regards,
  Tony
-- 
 [][][] Tony Garnock-Jones     | Mob: +44 (0)7905 974 211
   [][] LShift Ltd             | Tel: +44 (0)20 7729 7060
 []  [] http://www.lshift.net/ | Email: tonyg at lshift.net



From Alister.Morton at tradition.com  Wed Jan 28 11:46:11 2009
From: Alister.Morton at tradition.com (Alister Morton)
Date: Wed, 28 Jan 2009 11:46:11 +0000
Subject: [rabbitmq-discuss] A new exchange type
In-Reply-To: <498041EA.4040004@imatix.com>
References: <5A46D132C446C04B9EFE8AD14E7891065C49E4B4BB@SVR-2K3-BH-EMC.tradition.int>
	<498041EA.4040004@imatix.com>
Message-ID: <5A46D132C446C04B9EFE8AD14E7891065C49E4B4D5@SVR-2K3-BH-EMC.tradition.int>

> That's the standard last-value-cache scenario. Almost
> everyone would benefit from that kind of functionality IMO.
Yup, that's what I thought.

> However, it's pretty dangerous to use without the proper
> caution.
Absolutely.

> The number of topics is basically unbound (actually
> 256^256) meaning that you can exhaust memory and cause DoS by
> swapping to disk when application doesn't restrict itself to
> a finite set of distinct topics.
Yes, you do have to put controls in place to stop the server from becoming exhausted.

> Also, getting the last value
> can be pretty CPU greedy if there's a lot of topics - that
> can also lead to DoS situations.
Indeed.


al.

The information herein may have been obtained from various sources. Any opinion expressed may be that of the sender only, is subject to change without notice and should be independently evaluated. Nothing herein constitutes investment advice or an offer, or solicitation of an offer, to buy or sell any financial product. Any data consists of purely indicative prices and should not be relied upon to revalue any commercial positions held by any recipient. Tradition makes no warranty that the data represent or indicates prices at which transactions may be or have been made by any Tradition Group company. To the maximum extent of the law, Tradition accepts no responsibility for, and cannot and does not warrant the integrity, accuracy, quality, completeness, merchantability or suitability for a particular purpose or requirement of the information or data, even if arising out of the negligence of Tradition or otherwise. Tradition accepts no liability for any direct, indirect or other consequential loss arising out of any use of the information contained in this document or any omission from it. This communication is directed at Eligible Counterparties and Professional Clients as defined by the FSA. It is not for distribution to nor should it be relied upon by Private Clients. It is not intended for distribution to, or use by any person or entity in any jurisdiction or country where such distribution or use would be contrary to any applicable law or regulation. Please note that, for business or compliance reasons, we may monitor and read emails sent or received using our servers or equipment. Tradition (UK) Ltd (937647; FSA 139200), Tradition Financial Services Ltd (1046064; FSA 147543), TFS Derivatives Ltd (4051930; FSA 197244), Tradition London Clearing Ltd (3633863; FSA 190632) and TFS-ICAP Ltd (4025995; FSA 206018) registered in England at Beaufort House, 15 St Botolph Street, London EC3A 7QX; authorised and regulated by the Financial Services Authority. VAT No: GB 365 4639 27 except TFS-ICAP GB 766 0854 05.



From Alister.Morton at tradition.com  Wed Jan 28 11:50:26 2009
From: Alister.Morton at tradition.com (Alister Morton)
Date: Wed, 28 Jan 2009 11:50:26 +0000
Subject: [rabbitmq-discuss] A new exchange type
In-Reply-To: <0CDA17F57848D14C960AE8AAB11BCB83022AD400@ex.pczona.lt>
References: <5A46D132C446C04B9EFE8AD14E7891065C49E4B4BB@SVR-2K3-BH-EMC.tradition.int>
	<0CDA17F57848D14C960AE8AAB11BCB83022AD400@ex.pczona.lt>
Message-ID: <5A46D132C446C04B9EFE8AD14E7891065C49E4B4DA@SVR-2K3-BH-EMC.tradition.int>

Just my quick thoughts about functionality that may be needed:
1)      When declaring exchange, ability to specify the count of messages to hold (not only just last one)
2)      ability to specify expiration date or time span and hold messages to that date

What do you think?

Those both sound like useful extensions to the idea. I can see the first scenario quickly consuming resources, but if used correctly it has a lot of uses.

al.

________________________________
The information herein may have been obtained from various sources. Any opinion expressed may be that of the sender only, is subject to change without notice and should be independently evaluated. Nothing herein constitutes investment advice or an offer, or solicitation of an offer, to buy or sell any financial product. Any data consists of purely indicative prices and should not be relied upon to revalue any commercial positions held by any recipient. Tradition makes no warranty that the data represent or indicates prices at which transactions may be or have been made by any Tradition Group company. To the maximum extent of the law, Tradition accepts no responsibility for, and cannot and does not warrant the integrity, accuracy, quality, completeness, merchantability or suitability for a particular purpose or requirement of the information or data, even if arising out of the negligence of Tradition or otherwise. Tradition accepts no liability for any direct, indirect or other consequential loss arising out of any use of the information contained in this document or any omission from it. This communication is directed at Eligible Counterparties and Professional Clients as defined by the FSA. It is not for distribution to nor should it be relied upon by Private Clients. It is not intended for distribution to, or use by any person or entity in any jurisdiction or country where such distribution or use would be contrary to any applicable law or regulation. Please note that, for business or compliance reasons, we may monitor and read emails sent or received using our servers or equipment. Tradition (UK) Ltd (937647; FSA 139200), Tradition Financial Services Ltd (1046064; FSA 147543), TFS Derivatives Ltd (4051930; FSA 197244), Tradition London Clearing Ltd (3633863; FSA 190632) and TFS-ICAP Ltd (4025995; FSA 206018) registered in England at Beaufort House, 15 St Botolph Street, London EC3A 7QX; authorised and regulated by the Financial Services Authority. VAT No: GB 365 4639 27 except TFS-ICAP GB 766 0854 05.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20090128/8bb1d563/attachment.htm 

From andrius.norkaitis at oryo.lt  Wed Jan 28 14:25:47 2009
From: andrius.norkaitis at oryo.lt (Andrius Norkaitis)
Date: Wed, 28 Jan 2009 16:25:47 +0200
Subject: [rabbitmq-discuss] A new exchange type
References: <5A46D132C446C04B9EFE8AD14E7891065C49E4B4BB@SVR-2K3-BH-EMC.tradition.int>
	<0CDA17F57848D14C960AE8AAB11BCB83022AD400@ex.pczona.lt>
	<498044DE.8010308@lshift.net>
	<0CDA17F57848D14C960AE8AAB11BCB83022AD401@ex.pczona.lt>
Message-ID: <0CDA17F57848D14C960AE8AAB11BCB83022AD402@ex.pczona.lt>

Tony, our messages volumes aren?t large, so it was implemented simply.
RabbitMQ were used for pub/sub routing and scalable transportation of the messages:
 Client application (publisher) calls remote Windows communication service (WCF). It does some validations, logs message to db and publishes to rabbitmq clients. When (subscriber) client starts, it calls WCF service for ?last message? list.
Simple but works for our case. If reasonable we may replace ?GetLastMessages? service after new exchange will be created.

-----Original Message-----
From:	Tony Garnock-Jones [mailto:tonyg at lshift.net]
Sent:	Tr 2009.01.28 13:43
To:	Andrius Norkaitis
Cc:	Alister Morton; rabbitmq-discuss at lists.rabbitmq.com
Subject:	Re: [rabbitmq-discuss] A new exchange type

Andrius Norkaitis wrote:
> Currently we are using custom implementation of second the case. When a
> user starts listening to newly declared query, he also asks ?service?
> for the last messages that haven?t timeout.

That's a useful stopgap solution. I know a bunch of people that would be
interested in such a piece of software, until a proper last-value-cache
is implemented: is it something you'd be willing to share?

Regards,
  Tony
-- 
 [][][] Tony Garnock-Jones     | Mob: +44 (0)7905 974 211
   [][] LShift Ltd             | Tel: +44 (0)20 7729 7060
 []  [] http://www.lshift.net/ | Email: tonyg at lshift.net




-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20090128/323da48c/attachment.htm 

From Alister.Morton at tradition.com  Wed Jan 28 14:51:29 2009
From: Alister.Morton at tradition.com (Alister Morton)
Date: Wed, 28 Jan 2009 14:51:29 +0000
Subject: [rabbitmq-discuss] A new exchange type
In-Reply-To: <4980426E.5020803@lshift.net>
References: <5A46D132C446C04B9EFE8AD14E7891065C49E4B4BB@SVR-2K3-BH-EMC.tradition.int>
	<4980426E.5020803@lshift.net>
Message-ID: <5A46D132C446C04B9EFE8AD14E7891065C49E4B518@SVR-2K3-BH-EMC.tradition.int>

> *queues* rather than the exchanges. Your observation that
> it's best placed in the *exchange* is, I think, critical. Great stuff!
To me that seems a logical place.

> So given a stateful (!) exchange of the kind you describe,
> what could some of the parameters be for its behaviour?

I'd say that at its simplest level you'd want to control whether the history persists a reboot or not (which could be separate from whether the exchange definition persists), the history depth (whether you only keep the most recent message, or whether messages ripple to a configurable depth. This could consume large resources, though) and how long the messages persist. For example, you /might/ want to always keep the most recent message, but lose the previous four messages (say) after they are over a certain age, or you might want messages to "drop off" after they exceed a certain age, so that eventually there was no history, or you might want to always keep the last five (say) messages regardless of how old they were.

al.

The information herein may have been obtained from various sources. Any opinion expressed may be that of the sender only, is subject to change without notice and should be independently evaluated. Nothing herein constitutes investment advice or an offer, or solicitation of an offer, to buy or sell any financial product. Any data consists of purely indicative prices and should not be relied upon to revalue any commercial positions held by any recipient. Tradition makes no warranty that the data represent or indicates prices at which transactions may be or have been made by any Tradition Group company. To the maximum extent of the law, Tradition accepts no responsibility for, and cannot and does not warrant the integrity, accuracy, quality, completeness, merchantability or suitability for a particular purpose or requirement of the information or data, even if arising out of the negligence of Tradition or otherwise. Tradition accepts no liability for any direct, indirect or other consequential loss arising out of any use of the information contained in this document or any omission from it. This communication is directed at Eligible Counterparties and Professional Clients as defined by the FSA. It is not for distribution to nor should it be relied upon by Private Clients. It is not intended for distribution to, or use by any person or entity in any jurisdiction or country where such distribution or use would be contrary to any applicable law or regulation. Please note that, for business or compliance reasons, we may monitor and read emails sent or received using our servers or equipment. Tradition (UK) Ltd (937647; FSA 139200), Tradition Financial Services Ltd (1046064; FSA 147543), TFS Derivatives Ltd (4051930; FSA 197244), Tradition London Clearing Ltd (3633863; FSA 190632) and TFS-ICAP Ltd (4025995; FSA 206018) registered in England at Beaufort House, 15 St Botolph Street, London EC3A 7QX; authorised and regulated by the Financial Services Authority. VAT No: GB 365 4639 27 except TFS-ICAP GB 766 0854 05.



From dmitriy.samovskiy at cohesiveft.com  Wed Jan 28 15:21:30 2009
From: dmitriy.samovskiy at cohesiveft.com (Dmitriy Samovskiy)
Date: Wed, 28 Jan 2009 09:21:30 -0600
Subject: [rabbitmq-discuss] A new exchange type
In-Reply-To: <4980426E.5020803@lshift.net>
References: <5A46D132C446C04B9EFE8AD14E7891065C49E4B4BB@SVR-2K3-BH-EMC.tradition.int>
	<4980426E.5020803@lshift.net>
Message-ID: <498077FA.4020005@cohesiveft.com>


Hi all,

Tony Garnock-Jones wrote:
> That's a great insight. We've been puzzling over "last-value caching"
> for a while now, and not made any great progress, largely I think
> because we'd concentrated on putting it in to the *queues* rather than
> the exchanges. Your observation that it's best placed in the *exchange*
> is, I think, critical. Great stuff!
> 
> Alister Morton wrote:
>> We have a use pattern in mind that I think would require development
> of a new exchange type, and a couple of conversations with Alexis would
> seem to reinforce this view that, currently, the functionality we have
> in mind doesn't exist in rabbitmq.

Alternatively (and please note that this is purely a theoretical speculation on my part),
is the broker itself the best place to run this extended functionality? Wouldn't it be
beneficial to have core broker implement only absolutely necessary fundamental concepts
and push the rest of functionality out to user-space? (compare with kernel-space vs
user-space in OSes).

For example, if core broker could expose AMQP events via AMQP (i.e., broker itself will be
sending messages to a certain protected exchange every time a queue is created, or
consumer connects, or consumer disconnects, etc) plus have its runtime state obtainable
via AMQP (again - send a request message to a certain exchange, get response), then I
could hopefully implement last-value-cache scenario totally in user-space. (This could
also help with monitoring, btw).

Benefits could be:
* smaller core broker (which means faster, more secure, more reliable, fewer moving parts,
more stable, rev'ed less frequently)
* flexibility

When I say flexibility, I mean, for example, when I am running a broker in the cloud,
local disk (the only medium to which core broker can persist; forget about mnesia for now
due to partitioned network) might not be the most reliable persistence medium and I might
choose to persist to something else. Can't expect core broker to integrate with AWS
SimpleDB, right?

Furthermore, flexibility can come handy for those who are like me and have not yet
advanced beyond chapter 5 of Joe Armstrong's book :), and for organizations that do not
(yet!) have Erlang expertise in house. With user-space approach, any language can be used
to write new routing logic and extend core rabbit, and it can better integrate with one's
infra.

Possible disadvantages:
* suboptimal algorithms (can be improved with community peer review)
* higher latency for certain things outside of core broker (not a big deal for me - but I
am not running a trading shop, YMMV)

In other words, please consider rabbitmq core broker as a *platform* on top of which new
functionality can be written and shared, *in* *addition* to being an *end* *product*.

- Dmitriy




From Alister.Morton at tradition.com  Wed Jan 28 15:30:52 2009
From: Alister.Morton at tradition.com (Alister Morton)
Date: Wed, 28 Jan 2009 15:30:52 +0000
Subject: [rabbitmq-discuss] A new exchange type
In-Reply-To: <498077FA.4020005@cohesiveft.com>
References: <5A46D132C446C04B9EFE8AD14E7891065C49E4B4BB@SVR-2K3-BH-EMC.tradition.int>
	<4980426E.5020803@lshift.net> <498077FA.4020005@cohesiveft.com>
Message-ID: <5A46D132C446C04B9EFE8AD14E7891065C49E4B532@SVR-2K3-BH-EMC.tradition.int>

> Alternatively (and please note that this is purely a
> theoretical speculation on my part), is the broker itself the
> best place to run this extended functionality?
That's a very valid question.

> For example, if core broker could expose AMQP events via AMQP
> (i.e., broker itself will be sending messages to a certain
> protected exchange every time a queue is created, or consumer
> connects, or consumer disconnects, etc) plus have its runtime
> state obtainable via AMQP (again - send a request message to
> a certain exchange, get response), then I could hopefully
> implement last-value-cache scenario totally in user-space.
> (This could also help with monitoring, btw).

In order that last value caching can work, you'd need to be able to ask the broker to notify you (a publisher) whenever a queue was connected to an exchange that you'd flagged as needing last value caching, in order that the last value can be pushed again. But this last value must only be pushed to the newly connecting queue, so it would have to have some kind of flags attached to it to indicate that it was a refresh and was not to be passed to queues that had already seen it. While this is possible, I think it could add as much complexity as adding a new exchange type.

What does everyone else think?

al

(Apologies for the big sig, BTW - company mail server adds it :( )

The information herein may have been obtained from various sources. Any opinion expressed may be that of the sender only, is subject to change without notice and should be independently evaluated. Nothing herein constitutes investment advice or an offer, or solicitation of an offer, to buy or sell any financial product. Any data consists of purely indicative prices and should not be relied upon to revalue any commercial positions held by any recipient. Tradition makes no warranty that the data represent or indicates prices at which transactions may be or have been made by any Tradition Group company. To the maximum extent of the law, Tradition accepts no responsibility for, and cannot and does not warrant the integrity, accuracy, quality, completeness, merchantability or suitability for a particular purpose or requirement of the information or data, even if arising out of the negligence of Tradition or otherwise. Tradition accepts no liability for any direct, indirect or other consequential loss arising out of any use of the information contained in this document or any omission from it. This communication is directed at Eligible Counterparties and Professional Clients as defined by the FSA. It is not for distribution to nor should it be relied upon by Private Clients. It is not intended for distribution to, or use by any person or entity in any jurisdiction or country where such distribution or use would be contrary to any applicable law or regulation. Please note that, for business or compliance reasons, we may monitor and read emails sent or received using our servers or equipment. Tradition (UK) Ltd (937647; FSA 139200), Tradition Financial Services Ltd (1046064; FSA 147543), TFS Derivatives Ltd (4051930; FSA 197244), Tradition London Clearing Ltd (3633863; FSA 190632) and TFS-ICAP Ltd (4025995; FSA 206018) registered in England at Beaufort House, 15 St Botolph Street, London EC3A 7QX; authorised and regulated by the Financial Services Authority. VAT No: GB 365 4639 27 except TFS-ICAP GB 766 0854 05.



From bill at soudan.net  Wed Jan 28 17:25:32 2009
From: bill at soudan.net (Bill Soudan)
Date: Wed, 28 Jan 2009 12:25:32 -0500 (GMT-05:00)
Subject: [rabbitmq-discuss] A new exchange type
In-Reply-To: <5A46D132C446C04B9EFE8AD14E7891065C49E4B4BB@SVR-2K3-BH-EMC.tradition.int>
Message-ID: <4133214.3831233163532404.JavaMail.root@zimbra>


I had sent a message a month or two ago about this as well, but then I was sidetracked... on the main website, the last-value-cache is described as an external service, but I agree it makes more sense (and I believe I asked about) to implement it as a new exchange type.

Unfortunately I just haven't had the time to work an the implementation yet, but I agree this would be extremely useful and that an exchange type (or new flag?) seems the natural place to implement this in AMQP.

The only thing that is unresolved in my mind is the corner case when a queue binds to a topic but there has been NO value published for the topic.  What to do here?  In an asynchronous system, you may need to be able to distinguish between "no-current-value" and "the-current-value-is-just-taking-a-long-time-to-arrive".  Prior to AMQP, I was using some custom middleware and I'd implemented a 'no-current-value' message for this condition.  Some options, but I haven't explored them thoroughly yet:

1) Deliver a 'no-current-value' message using the regular publish mechanism.  Easy to implement, but perhaps not the best given there are no other cases that I'm currently aware where AMQP servers generate content.

2) Implement a new AMQP message that indicates this condition and deliver it after the queue.bind if there is no current cached value.  Better than #1 but requires cooperation from the AMQP guys?

3) If there is a AMQP queue.bind_ok message (I think?), then deliver the current value prior to the bind_ok message.  This implies if there is no data delivered before the bind_ok, that there is no current value.  Possibly forbidden by the specification, however, but requires no special content message, no new AMQP implementation, and probably fits most naturally in the implementation (receive bind request, send the most recent value if any, reply bind_ok).  My favorite option if the spec allows it.

Bill

----- Original Message -----
From: "Alister Morton" <Alister.Morton at tradition.com>
To: "rabbitmq-discuss at lists.rabbitmq.com" <rabbitmq-discuss at lists.rabbitmq.com>
Sent: Wednesday, January 28, 2009 6:05:21 AM (GMT-0500) America/New_York
Subject: [rabbitmq-discuss] A new exchange type

Maybe.

We have a use pattern in mind that I think would require development of a new exchange type, and a couple of conversations with Alexis would seem to reinforce this view that, currently, the functionality we have in mind doesn't exist in rabbitmq.

What we'd like to do is have an exchange type which acted like a regular topic exchange, where messages are "routed" into queues based on the topic, but in addition kept a copy of the last message sent to the exchange for each topic. So the behaviour of the exchange would be slightly different to how it is at the moment. Currently, if you create a purely topic based exchange, and publish a message to it, then some time alter attach a queue to that subject, no message is delivered until the next message is published to that topic. With the new exchange the newly connected queue would immediately receive a message that was a copy of the last message published, however long ago it was. Clearly, the timestamp on the message is important, but this architecture could, I think, be very useful. One use would be as a replacement for the proprietary "market data feed" type servers many institutions use to share internal data records. Although there is clearly a distinction between a "r
 ecord" and a "message" it would be very simple, and for many purposes perfectly adequate, to build a simple internal feed system around a RabbitMQ message broker with this new, additional exchange type.

Anyone else see a use for it? We're currently weighing up the pros and cons of having such an exchange developed for rabbit, or continuing to use our own, internally developed but proprietary message broker, which /does/ implement last message persistence in this way.



al.


The information herein may have been obtained from various sources. Any opinion expressed may be that of the sender only, is subject to change without notice and should be independently evaluated. Nothing herein constitutes investment advice or an offer, or solicitation of an offer, to buy or sell any financial product. Any data consists of purely indicative prices and should not be relied upon to revalue any commercial positions held by any recipient. Tradition makes no warranty that the data represent or indicates prices at which transactions may be or have been made by any Tradition Group company. To the maximum extent of the law, Tradition accepts no responsibility for, and cannot and does not warrant the integrity, accuracy, quality, completeness, merchantability or suitability for a particular purpose or requirement of the information or data, even if arising out of the negligence of Tradition or otherwise. Tradition accepts no liability for any direct, indirect or othe
 r consequential loss arising out of any use of the information contained in this document or any omission from it. This communication is directed at Eligible Counterparties and Professional Clients as defined by the FSA. It is not for distribution to nor should it be relied upon by Private Clients. It is not intended for distribution to, or use by any person or entity in any jurisdiction or country where such distribution or use would be contrary to any applicable law or regulation. Please note that, for business or compliance reasons, we may monitor and read emails sent or received using our servers or equipment. Tradition (UK) Ltd (937647; FSA 139200), Tradition Financial Services Ltd (1046064; FSA 147543), TFS Derivatives Ltd (4051930; FSA 197244), Tradition London Clearing Ltd (3633863; FSA 190632) and TFS-ICAP Ltd (4025995; FSA 206018) registered in England at Beaufort House, 15 St Botolph Street, London EC3A 7QX; authorised and regulated by the Financial Services Autho
 rity. VAT No: GB 365 4639 27 except TFS-ICAP GB 766 0854 05.

_______________________________________________
rabbitmq-discuss mailing list
rabbitmq-discuss at lists.rabbitmq.com
http://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss




From seth.buntin at gmail.com  Wed Jan 28 21:53:30 2009
From: seth.buntin at gmail.com (sethtrain)
Date: Wed, 28 Jan 2009 13:53:30 -0800 (PST)
Subject: [rabbitmq-discuss]  Java API nextDelivery
Message-ID: <21715527.post@talk.nabble.com>


Am I missing something?  If I setup a QueueingConsumer and call
nextDelivery() without acknowledging that message when I run nextDelivery()
again shouldn't I get the same message?
-- 
View this message in context: http://www.nabble.com/Java-API-nextDelivery-tp21715527p21715527.html
Sent from the RabbitMQ mailing list archive at Nabble.com.




From 0x6e6562 at gmail.com  Wed Jan 28 23:24:56 2009
From: 0x6e6562 at gmail.com (Ben Hood)
Date: Wed, 28 Jan 2009 23:24:56 +0000
Subject: [rabbitmq-discuss] Java API nextDelivery
In-Reply-To: <21715527.post@talk.nabble.com>
References: <21715527.post@talk.nabble.com>
Message-ID: <269388e30901281524r7053e63boc5ca0af251052742@mail.gmail.com>

Sethrain,

On Wed, Jan 28, 2009 at 9:53 PM, sethtrain <seth.buntin at gmail.com> wrote:
>
> Am I missing something?  If I setup a QueueingConsumer and call
> nextDelivery() without acknowledging that message when I run nextDelivery()
> again shouldn't I get the same message?

Not really. The QueueingConsumer is just some higher level porcelain
around the AMQP execution model that offers blocking semantics to the
caller.

Under the covers it is buffering the messages delivered to it, which
could be piling up from the network, i.e. a situation where the broker
has pushed more messages over the network and up the client stack than
the consuming application has processed.

This touches on the semantics of deliver acknowledgments and egress
flow control.

To summarize these topics, unless the client explicitly specifies a
prefetch window, the broker will push messages to it until TCP back
pressure kicks in.

Furthermore, it makes a difference whether you specify auto-acks or not :-)

HTH,

Ben



From bhyde at pobox.com  Thu Jan 29 14:59:31 2009
From: bhyde at pobox.com (Ben Hyde)
Date: Thu, 29 Jan 2009 09:59:31 -0500
Subject: [rabbitmq-discuss] A new exchange type
In-Reply-To: <5A46D132C446C04B9EFE8AD14E7891065C49E4B532@SVR-2K3-BH-EMC.tradition.int>
References: <5A46D132C446C04B9EFE8AD14E7891065C49E4B4BB@SVR-2K3-BH-EMC.tradition.int>
	<4980426E.5020803@lshift.net> <498077FA.4020005@cohesiveft.com>
	<5A46D132C446C04B9EFE8AD14E7891065C49E4B532@SVR-2K3-BH-EMC.tradition.int>
Message-ID: <D5E4463B-8FBE-40C3-9DAA-75FB36279C6B@pobox.com>

This cache of last msg of a given key exchange type is useful only if  
the messages are
absolute, rather than a series of diffs on the state of the thing  
denoted by the key.  Is that
the typical pattern in these parts?

Revision numbers are the usual thing once you have diffs.  So by  
extension
you could build an exchange that stands willing to replay the messages  
an
observer missed since he was last online.  That's more what you desire  
if
your messages are atom feeds, say.

There are delicacies about assuring that you don't act on stale data.   
People
often forward chain on message arrival.  Which is cool if your  
messaging substrate
is fast and has tiny buffers; but these replayed messages are not  
fresh.  I guess
it might be a good rule of thumb to add guards to enforce sell-by- 
dates on all
the message handling.  Is that common?

I find there then are often three modes.  Coming online, online, and  
running
behind.  The last of these is the mess that arises when your on the  
other side of a
slow link; and there tend to be too many ways that happens; but in  
that scenario
you want somebody downstream to be merging, condensing, or  
summarizing, or
something.  Something else a stateful system component might provide.

Finally in system's I've build the diffs fly fast and furious,  When  
new observers
come online they talk to other observers (possibly a master observer)  
to bring
their model of the state of the world up to date  That step tends to  
involve moving
a lot of data.

I don't know if all that means this should be in the broker or not.



From 0x6e6562 at gmail.com  Thu Jan 29 20:24:12 2009
From: 0x6e6562 at gmail.com (Ben Hood)
Date: Thu, 29 Jan 2009 20:24:12 +0000
Subject: [rabbitmq-discuss] A new exchange type
In-Reply-To: <D5E4463B-8FBE-40C3-9DAA-75FB36279C6B@pobox.com>
References: <5A46D132C446C04B9EFE8AD14E7891065C49E4B4BB@SVR-2K3-BH-EMC.tradition.int>
	<4980426E.5020803@lshift.net> <498077FA.4020005@cohesiveft.com>
	<5A46D132C446C04B9EFE8AD14E7891065C49E4B532@SVR-2K3-BH-EMC.tradition.int>
	<D5E4463B-8FBE-40C3-9DAA-75FB36279C6B@pobox.com>
Message-ID: <269388e30901291224q25b12474i79958a7f17b0f1c8@mail.gmail.com>

Ben,

On Thu, Jan 29, 2009 at 2:59 PM, Ben Hyde <bhyde at pobox.com> wrote:
> This cache of last msg of a given key exchange type is useful only if
> the messages are
> absolute, rather than a series of diffs on the state of the thing
> denoted by the key.  Is that
> the typical pattern in these parts?

I don't know if that generally holds, I guess you could envisage some
LCA scheme. However, for all practical purposes, I think this is more
in the application domain, or is at least an overlay concern rather
than something intrinsic to the caching mechanism. What I am trying to
say is that this is has more to do with a usage pattern rather than
the fundamental messaging infrastructure.

> I guess
> it might be a good rule of thumb to add guards to enforce sell-by-
> dates on all
> the message handling.  Is that common?

No, but it should be :-)

We are currently re-implementing the queue data structure to be able
to set TTLs on a per-message basis. No ETA on that feature, though.

> I don't know if all that means this should be in the broker or not.

I think this kind of thing should be a layered concern.

HTH,

Ben



From 0x6e6562 at gmail.com  Thu Jan 29 20:36:53 2009
From: 0x6e6562 at gmail.com (Ben Hood)
Date: Thu, 29 Jan 2009 20:36:53 +0000
Subject: [rabbitmq-discuss] A new exchange type
In-Reply-To: <4980426E.5020803@lshift.net>
References: <5A46D132C446C04B9EFE8AD14E7891065C49E4B4BB@SVR-2K3-BH-EMC.tradition.int>
	<4980426E.5020803@lshift.net>
Message-ID: <269388e30901291236ic1ff156wbc04227318149580@mail.gmail.com>

Tony,

On Wed, Jan 28, 2009 at 11:33 AM, Tony Garnock-Jones <tonyg at lshift.net> wrote:
> That's a great insight. We've been puzzling over "last-value caching"
> for a while now, and not made any great progress, largely I think
> because we'd concentrated on putting it in to the *queues* rather than
> the exchanges. Your observation that it's best placed in the *exchange*
> is, I think, critical. Great stuff!

Just a thought - what about implementing a queue that when the
consumer disconnects from it, it stays active but becomes bounded, so
that it only caches the last the n messages? Or maybe you could go one
step further and just put a user specified depth on the queue for it's
entire lifetime, so that you don't even need to bother with any
disconnection events? There are of course obvious disadvantages to
this approach, but it does solve your coherency issue.

Ben



From mheitzenroder at gmail.com  Thu Jan 29 20:54:30 2009
From: mheitzenroder at gmail.com (Matt Heitzenroder)
Date: Thu, 29 Jan 2009 15:54:30 -0500
Subject: [rabbitmq-discuss] Installation help
Message-ID: <AAAAFD21-C13F-4ED2-AC33-F1ACD2C889B6@gmail.com>

Hello - I'm a new to the list, thanks for any help you can offer.

Issue:
matt at c1203:~$ sudo rabbitmqctl status
{"init terminating in do_boot",{undef,[{rabbit_control,start,[]}, 
{init,start_it,1},{init,start_em,1}]}}
init terminating in do_boot ()

Environment Information:
matt at c1203:~$ which erl
/usr/local/bin/erl
matt at c1203:~$ sudo echo $ERLANG_HOME
/usr/local/lib/erlang
matt at c1203:~$ sudo ls -laF /sbin/rabbitmq-server
-rwxr-xr-x 1 root root 4766 Jan 29 20:44 /sbin/rabbitmq-server*
matt at c1203:~$ sudo ls -laF $ERLANG_HOME
total 36
drwxr-xr-x  8 root root 4096 Dec 17 16:32 ./
drwxr-xr-x  5 root root 4096 Dec 26 06:04 ../
-rwxr-xr-x  1 root root 3065 Dec 17 16:32 Install*
drwxr-xr-x  2 root root 4096 Dec 17 16:32 bin/
drwxr-xr-x  8 root root 4096 Dec 17 16:32 erts-5.6.5/
drwxr-xr-x 50 root root 4096 Dec 17 16:32 lib/
drwxr-xr-x  2 root root 4096 Dec 17 16:32 misc/
drwxr-xr-x  3 root root 4096 Dec 17 16:32 releases/
drwxr-xr-x  4 root root 4096 Dec 17 16:32 usr/

I compiled erlang from source.

I used the rabbitmq server 1.5.1 deb installation on an Ubuntu box.

I added /sbin/rabbitmq-server from the VCS & made it executable.

Any ideas?

Thanks,
Matt
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20090129/77fc5d88/attachment.htm 

From 0x6e6562 at gmail.com  Thu Jan 29 20:55:17 2009
From: 0x6e6562 at gmail.com (Ben Hood)
Date: Thu, 29 Jan 2009 20:55:17 +0000
Subject: [rabbitmq-discuss] A new exchange type
In-Reply-To: <5A46D132C446C04B9EFE8AD14E7891065C49E4B532@SVR-2K3-BH-EMC.tradition.int>
References: <5A46D132C446C04B9EFE8AD14E7891065C49E4B4BB@SVR-2K3-BH-EMC.tradition.int>
	<4980426E.5020803@lshift.net> <498077FA.4020005@cohesiveft.com>
	<5A46D132C446C04B9EFE8AD14E7891065C49E4B532@SVR-2K3-BH-EMC.tradition.int>
Message-ID: <269388e30901291255g4a9bb807p49e02d77ed5aed36@mail.gmail.com>

Alistair,

On Wed, Jan 28, 2009 at 3:30 PM, Alister Morton
<Alister.Morton at tradition.com> wrote:
> In order that last value caching can work, you'd need to be able to ask the broker to notify you (a publisher) whenever a
> queue was connected to an exchange that you'd flagged as needing last value caching, in order that the last value can
> be pushed again. But this last value must only be pushed to the newly connecting queue, so it would have to have
> some kind of flags attached to it to indicate that it was a refresh and was not to be passed to queues that had already
> seen it. While this is possible, I think it could add as much complexity as adding a new exchange type.

In general, I'm in favor of layered approaches - it keeps the broker
simpler, means less maintenance and means that the community can more
easily mash Rabbit up rather having to wait for the snail-paced Rabbit
engineering team. I think that the criterion for judging whether
functionality should be in the broker or get implemented as a
porcelain should be based on whether doing it in the broker would be
significantly more efficient than application layer code. This may the
case if the broker can exploit knowledge that higher level code is not
privy to.

Dmitriy's idea of exposing AMQP events in userland via a pub/sub model
has merits - it may even up the playing field between what the broker
is able to do and what application code can do.

My suggestion of how to further develop this line of thought is write
a small POC text that would play through the mechanics of each use
case for both variants (i.e. a POC for a new exchange and one for an
AMQP event model) - this is incidentally what we may end up having to
anyway, if we get around to implementing this feature.

Ben



From sustrik at imatix.com  Thu Jan 29 21:02:18 2009
From: sustrik at imatix.com (Martin Sustrik)
Date: Thu, 29 Jan 2009 22:02:18 +0100
Subject: [rabbitmq-discuss] A new exchange type
In-Reply-To: <D5E4463B-8FBE-40C3-9DAA-75FB36279C6B@pobox.com>
References: <5A46D132C446C04B9EFE8AD14E7891065C49E4B4BB@SVR-2K3-BH-EMC.tradition.int>	<4980426E.5020803@lshift.net>
	<498077FA.4020005@cohesiveft.com>	<5A46D132C446C04B9EFE8AD14E7891065C49E4B532@SVR-2K3-BH-EMC.tradition.int>
	<D5E4463B-8FBE-40C3-9DAA-75FB36279C6B@pobox.com>
Message-ID: <4982195A.4020607@imatix.com>

Ben Hyde wrote:
> This cache of last msg of a given key exchange type is useful only if  
> the messages are
> absolute, rather than a series of diffs on the state of the thing  
> denoted by the key.  Is that
> the typical pattern in these parts?

Last value cache is typical of stock trading.

Diffs are typical of video streaming.

Thus mixing the two seems of little interest... but...

Think of FIX/FAST transferred over AMQP. FAST encoding of a stock quote 
is actually a diff. Storing it in the last value cache makes little 
sense. This is a strong argument in favor of building last value cache 
on top of AMQP, in application layer where messages are already decoded, 
rather then in AMQP that deals with raw encoded data.

Martin



From matthias at lshift.net  Thu Jan 29 21:25:20 2009
From: matthias at lshift.net (Matthias Radestock)
Date: Thu, 29 Jan 2009 21:25:20 +0000
Subject: [rabbitmq-discuss] Installation help
In-Reply-To: <AAAAFD21-C13F-4ED2-AC33-F1ACD2C889B6@gmail.com>
References: <AAAAFD21-C13F-4ED2-AC33-F1ACD2C889B6@gmail.com>
Message-ID: <49821EC0.7070305@lshift.net>

Matt,

Matt Heitzenroder wrote:
> *Issue:*
> matt at c1203:~$ sudo rabbitmqctl status
> {"init terminating in 
> do_boot",{undef,[{rabbit_control,start,[]},{init,start_it,1},{init,start_em,1}]}}
> init terminating in do_boot ()
> [...]
> I compiled erlang from source.
> 
> I used the rabbitmq server 1.5.1 deb installation on an Ubuntu box.
> 
> I added /sbin/rabbitmq-server from the VCS & made it executable.

Congratulations. This is the most exotic way of installing rabbit I have 
yet encountered ;)

A manually installed Erlang distribution goes in a different place from 
the Erlang debian package. The rabbitmq-server debian package installs 
itself in the location of the latter, which ensures that it is found by 
the various scripts. To resolve the above error, I suggest you create a 
symlink to /usr/lib/erlang/lib/rabbitmq_server-<vsn> in 
/usr/local/lib/erlang/lib.

And for starting/stopping the server you ought to use the script in 
/etc/init.d. That will run rabbit as the 'rabbitmq' user, which is also 
what /usr/sbin/rabbitmqctl expects.


Regards,

Matthias.



From cctrieloff at redhat.com  Thu Jan 29 21:45:59 2009
From: cctrieloff at redhat.com (Carl Trieloff)
Date: Thu, 29 Jan 2009 16:45:59 -0500
Subject: [rabbitmq-discuss] A new exchange type
In-Reply-To: <4982195A.4020607@imatix.com>
References: <5A46D132C446C04B9EFE8AD14E7891065C49E4B4BB@SVR-2K3-BH-EMC.tradition.int>	<4980426E.5020803@lshift.net>	<498077FA.4020005@cohesiveft.com>	<5A46D132C446C04B9EFE8AD14E7891065C49E4B532@SVR-2K3-BH-EMC.tradition.int>	<D5E4463B-8FBE-40C3-9DAA-75FB36279C6B@pobox.com>
	<4982195A.4020607@imatix.com>
Message-ID: <49822397.9020600@redhat.com>


>  This is a strong argument in favor of building last value cache 
> on top of AMQP, in application layer where messages are already decoded, 
> rather then in AMQP that deals with raw encoded data.

there are many cases where LVQ in a broker does make sense - we have LVQ 
in the broker in Qpid , however
I agree with Martin that diff's on diffs make no sense in LVQ.

Carl.






From matthias at lshift.net  Thu Jan 29 22:26:11 2009
From: matthias at lshift.net (Matthias Radestock)
Date: Thu, 29 Jan 2009 22:26:11 +0000
Subject: [rabbitmq-discuss] Installation help
In-Reply-To: <3d5db09e0901291335j526f56b3v181dc519d9e9572d@mail.gmail.com>
References: <AAAAFD21-C13F-4ED2-AC33-F1ACD2C889B6@gmail.com>	<49821EC0.7070305@lshift.net>
	<3d5db09e0901291335j526f56b3v181dc519d9e9572d@mail.gmail.com>
Message-ID: <49822D03.9040509@lshift.net>

Michael,

Michael Steinfeld wrote:
> On Thu, Jan 29, 2009 at 4:25 PM, Matthias Radestock <matthias at lshift.net> wrote:
>> Matt Heitzenroder wrote:
>>> *Issue:*
>>> matt at c1203:~$ sudo rabbitmqctl status
>>> {"init terminating in
>>> do_boot",{undef,[{rabbit_control,start,[]},{init,start_it,1},{init,start_em,1}]}}
>>> init terminating in do_boot ()
>>> [...]
>>> I compiled erlang from source.
>>>
>>> I used the rabbitmq server 1.5.1 deb installation on an Ubuntu box.
>>>
>>> I added /sbin/rabbitmq-server from the VCS & made it executable.
> 
> 
> Hmm, I installed it the same way.. on RHEL (from source)

What do you mean by "the same way"? Matt's problems stem from combining 
a debian-packaged RabbitMQ with a manually installed Erlang. Presumably 
you didn't install the debian package on RHEL, but either chose the rpm 
or "generic unix" route.

> but I set ERLANG_HOME=/usr/local/lib/erlang/lib (you had /usr/local/lib/erlang)

That sounds wrong. However, none of the rabbit scripts depend on that 
setting directly.

> also I just put the rabbit scripts in there as well and linked them to
> /usr/local/bin/
> 
> HTH.. it was a bit of a struggle for me as well.

Sorry to hear it was a struggle. Is there something missing, wrong or 
unclear in our installation instructions at 
http://www.rabbitmq.com/install.html?


Regards,

Matthias.



From mheitzenroder at gmail.com  Thu Jan 29 22:33:14 2009
From: mheitzenroder at gmail.com (Matt Heitzenroder)
Date: Thu, 29 Jan 2009 17:33:14 -0500
Subject: [rabbitmq-discuss] Installation help
In-Reply-To: <49821EC0.7070305@lshift.net>
References: <AAAAFD21-C13F-4ED2-AC33-F1ACD2C889B6@gmail.com>
	<49821EC0.7070305@lshift.net>
Message-ID: <ED540DBB-B2F2-43EE-B00D-27F4DEA3B8A9@gmail.com>

HAHAHAHA.  Thanks.  I like all things exotic, this is no exception.

The symlink did the trick, thank you very much.

Thank you very much!

Matt


On  Jan 29, at 4:25 PM, Matthias Radestock wrote:

> Matt,
>
> Matt Heitzenroder wrote:
>> *Issue:*
>> matt at c1203:~$ sudo rabbitmqctl status
>> {"init terminating in do_boot",{undef,[{rabbit_control,start,[]}, 
>> {init,start_it,1},{init,start_em,1}]}}
>> init terminating in do_boot ()
>> [...]
>> I compiled erlang from source.
>> I used the rabbitmq server 1.5.1 deb installation on an Ubuntu box.
>> I added /sbin/rabbitmq-server from the VCS & made it executable.
>
> Congratulations. This is the most exotic way of installing rabbit I  
> have yet encountered ;)
>
> A manually installed Erlang distribution goes in a different place  
> from the Erlang debian package. The rabbitmq-server debian package  
> installs itself in the location of the latter, which ensures that it  
> is found by the various scripts. To resolve the above error, I  
> suggest you create a symlink to /usr/lib/erlang/lib/rabbitmq_server- 
> <vsn> in /usr/local/lib/erlang/lib.
>
> And for starting/stopping the server you ought to use the script in / 
> etc/init.d. That will run rabbit as the 'rabbitmq' user, which is  
> also what /usr/sbin/rabbitmqctl expects.
>
>
> Regards,
>
> Matthias.




From mikeisgreat at gmail.com  Thu Jan 29 22:38:45 2009
From: mikeisgreat at gmail.com (Michael Steinfeld)
Date: Thu, 29 Jan 2009 17:38:45 -0500
Subject: [rabbitmq-discuss] Installation help
In-Reply-To: <49822D03.9040509@lshift.net>
References: <AAAAFD21-C13F-4ED2-AC33-F1ACD2C889B6@gmail.com>
	<49821EC0.7070305@lshift.net>
	<3d5db09e0901291335j526f56b3v181dc519d9e9572d@mail.gmail.com>
	<49822D03.9040509@lshift.net>
Message-ID: <3d5db09e0901291438y4ade0c95w1b53510adf4d5dca@mail.gmail.com>

On Thu, Jan 29, 2009 at 5:26 PM, Matthias Radestock <matthias at lshift.net> wrote:
> Michael,
>
> Michael Steinfeld wrote:
>>
>> On Thu, Jan 29, 2009 at 4:25 PM, Matthias Radestock <matthias at lshift.net>
>> wrote:
>>>
>>> Matt Heitzenroder wrote:
>>>>
>>>> *Issue:*
>>>> matt at c1203:~$ sudo rabbitmqctl status
>>>> {"init terminating in
>>>>
>>>> do_boot",{undef,[{rabbit_control,start,[]},{init,start_it,1},{init,start_em,1}]}}
>>>> init terminating in do_boot ()
>>>> [...]
>>>> I compiled erlang from source.
>>>>
>>>> I used the rabbitmq server 1.5.1 deb installation on an Ubuntu box.
>>>>
>>>> I added /sbin/rabbitmq-server from the VCS & made it executable.
>>
>>
>> Hmm, I installed it the same way.. on RHEL (from source)
>
> What do you mean by "the same way"? Matt's problems stem from combining a
> debian-packaged RabbitMQ with a manually installed Erlang. Presumably you
> didn't install the debian package on RHEL, but either chose the rpm or
> "generic unix" route.

I meant that I compiled erlang manually. I attempted the RPM install
but I was unsuccessful even though I had the shared libs installed.
I ended up using
"http://www.rabbitmq.com/releases/rabbitmq-server/v1.5.1/rabbitmq-server-1.5.1.tar.gz"
for whatever reason even though the server was running with the RPM
I couldn't get any of the tools to work everything was badrpc ... so I
just installed from source.



>
>> but I set ERLANG_HOME=/usr/local/lib/erlang/lib (you had
>> /usr/local/lib/erlang)
>
> That sounds wrong. However, none of the rabbit scripts depend on that
> setting directly.

Yeah it does, but I could've sworn that is what the docs said, I just
checked and they don't say that at all :) sorry for the consfusion. I
stand corrected.
>
>> also I just put the rabbit scripts in there as well and linked them to
>> /usr/local/bin/
>>
>> HTH.. it was a bit of a struggle for me as well.
>
> Sorry to hear it was a struggle. Is there something missing, wrong or
> unclear in our installation instructions at
> http://www.rabbitmq.com/install.html?

Well I don't know. Being that the server would run but none of the
tools worked, it would've been more helpful if there was reference to
this badrpc error. I had no idea where to look, although you guys were
helpful on the list, it didn't solve my issues. Like I said, I just
ending up installing from source and that seems to work fine.

>
>
> Regards,
>
> Matthias.
>



From matthias at lshift.net  Thu Jan 29 22:54:53 2009
From: matthias at lshift.net (Matthias Radestock)
Date: Thu, 29 Jan 2009 22:54:53 +0000
Subject: [rabbitmq-discuss] Installation help
In-Reply-To: <3d5db09e0901291438y4ade0c95w1b53510adf4d5dca@mail.gmail.com>
References: <AAAAFD21-C13F-4ED2-AC33-F1ACD2C889B6@gmail.com>	<49821EC0.7070305@lshift.net>	<3d5db09e0901291335j526f56b3v181dc519d9e9572d@mail.gmail.com>	<49822D03.9040509@lshift.net>
	<3d5db09e0901291438y4ade0c95w1b53510adf4d5dca@mail.gmail.com>
Message-ID: <498233BD.6020501@lshift.net>

Michael,

Michael Steinfeld wrote:
>>> but I set ERLANG_HOME=/usr/local/lib/erlang/lib (you had
>>> /usr/local/lib/erlang)
>> That sounds wrong. However, none of the rabbit scripts depend on that
>> setting directly.
> 
> Yeah it does, but I could've sworn that is what the docs said, I just
> checked and they don't say that at all :)

You weren't imagining it - I removed the misleading reference to 
ERLANG_HOME only a few moments ago :)

>> Sorry to hear it was a struggle. Is there something missing, wrong or
>> unclear in our installation instructions at
>> http://www.rabbitmq.com/install.html?
> 
> Well I don't know. Being that the server would run but none of the
> tools worked, it would've been more helpful if there was reference to
> this badrpc error. I had no idea where to look, although you guys were
> helpful on the list, it didn't solve my issues. Like I said, I just
> ending up installing from source and that seems to work fine.

I see. If you can reproduce the error you were encountering, it would be 
great if you sent us a transcript of your install, the server startup, 
and the attempts to use the scripts. Once we have figured out what the 
actual problem was we can then think of how to amend the documentation.


Regards,


Matthias.



From matthias at lshift.net  Thu Jan 29 22:59:41 2009
From: matthias at lshift.net (Matthias Radestock)
Date: Thu, 29 Jan 2009 22:59:41 +0000
Subject: [rabbitmq-discuss] rabbitmq 1.5.1-1 from debian pool fails to
 start
In-Reply-To: <497F676D.40609@lshift.net>
References: <009b01c97f71$1a382950$4ea87bf0$@com>	<497D7C63.9060904@lshift.net>	<000001c97fdd$0498c2f0$0dca48d0$@com>	<497E0ECE.3090702@lshift.net>
	<002301c97fec$cdc37d00$694a7700$@com>	<497E16D1.8020501@lshift.net>
	<008501c98015$244dd940$6ce98bc0$@com> <497F676D.40609@lshift.net>
Message-ID: <498234DD.8090000@lshift.net>

Christopher,

Matthias Radestock wrote:
> christopher hoover wrote:
>> Note: I've seen it in two places so far (Debian testing, Ubuntu 
>> Jaunty), so
>> I suspect it is not that hard to reproduce.
>>
>> The other clue that I suspect is important is that 1.5.0 works.
> 
> These are all good data points. Alas I have been unable to reproduce the 
> problem. Hence giving me access to a machine that exhibits the behaviour 
> you are seeing is the next logical step.

Have you had any success yet getting RabbitMQ to work? I just remembered 
that Dmitriy reported some weird interaction of snoopy with erlang a 
while ago. See http://somic.org/2008/04/22/snoopy-fubars-erlang/. So 
that's one possible route of investigation. Failing that, access to a 
machine / image would be great.


Matthias.



From dmitriy.samovskiy at cohesiveft.com  Thu Jan 29 23:16:16 2009
From: dmitriy.samovskiy at cohesiveft.com (Dmitriy Samovskiy)
Date: Thu, 29 Jan 2009 17:16:16 -0600
Subject: [rabbitmq-discuss] Installation help
In-Reply-To: <49822D03.9040509@lshift.net>
References: <AAAAFD21-C13F-4ED2-AC33-F1ACD2C889B6@gmail.com>	<49821EC0.7070305@lshift.net>	<3d5db09e0901291335j526f56b3v181dc519d9e9572d@mail.gmail.com>
	<49822D03.9040509@lshift.net>
Message-ID: <498238C0.1060507@cohesiveft.com>

Hi Matthias,

Matthias Radestock wrote:
> 
> Sorry to hear it was a struggle. Is there something missing, wrong or 
> unclear in our installation instructions at 
> http://www.rabbitmq.com/install.html?

Another problem might be coming from the fact that if you want to install your own build 
of erlang, people usually tend to do it outside of packaging framework (unless they are 
like me, who works for a company that does some packaging for living).

So you end up with erlang outside of package control system. And then if you attempt to 
install rabbitmq-server deb (or I suspect rpm), apt-get (or yum, respectively) will want 
to install erlang-nox (or its rpm equivalent), which will either conflict with your build 
of erlang in /usr or will install a second build of erlang (if you put your in 
/usr/local). As a result, some might choose source tarball over a packaged rabbit to avoid 
this mess altogether.

I wish there was better way but maybe erlang dependency can be removed from package's 
declared dependencies (rpm and deb at least)? This will allow rabbitmq-server package to 
work with erlang from OS or your own build, as long as erl is in your PATH. And maybe 
modify all scripts to check for erl in PATH...


- Dmitriy



From ch at murgatroid.com  Fri Jan 30 03:10:57 2009
From: ch at murgatroid.com (christopher hoover)
Date: Thu, 29 Jan 2009 19:10:57 -0800
Subject: [rabbitmq-discuss] rabbitmq 1.5.1-1 from debian pool fails to
	start
In-Reply-To: <498234DD.8090000@lshift.net>
References: <009b01c97f71$1a382950$4ea87bf0$@com>	<497D7C63.9060904@lshift.net>	<000001c97fdd$0498c2f0$0dca48d0$@com>	<497E0ECE.3090702@lshift.net>
	<002301c97fec$cdc37d00$694a7700$@com>	<497E16D1.8020501@lshift.net>
	<008501c98015$244dd940$6ce98bc0$@com>
	<497F676D.40609@lshift.net> <498234DD.8090000@lshift.net>
Message-ID: <000001c98288$5f4d62c0$1de82840$@com>

> Matthias Radestock wrote:
> > christopher hoover wrote:
> >> Note: I've seen it in two places so far (Debian testing, Ubuntu
> >> Jaunty), so
> >> I suspect it is not that hard to reproduce.
> >>
> >> The other clue that I suspect is important is that 1.5.0 works.
> >
> > These are all good data points. Alas I have been unable to reproduce
> the
> > problem. Hence giving me access to a machine that exhibits the
> behaviour
> > you are seeing is the next logical step.
> 
> Have you had any success yet getting RabbitMQ to work? 

Yes.

I tried running the /etc/init.d/rabbitmq steps by hand.  Almost by accident,
I discovered that rabbitmq would start properly with rabbitmq's home
(/var/lib/rabbitmq) as cwd, but would fail with / or even /tmp as cwd.

Editing /etc/init.d/rabbitmq to tweak the chdir to /var/lib/rabbitmq makes
it work fine.

I'm still not sure of the root cause.  I looked at the diffs in hg between
the two releases, but I couldn't come up with an explanation.   But my
Erlang is pretty poor, so I may have missed something.

-ch





From matthias at lshift.net  Fri Jan 30 10:03:52 2009
From: matthias at lshift.net (Matthias Radestock)
Date: Fri, 30 Jan 2009 10:03:52 +0000
Subject: [rabbitmq-discuss] rabbitmq 1.5.1-1 from debian pool fails to
 start
In-Reply-To: <000001c98288$5f4d62c0$1de82840$@com>
References: <009b01c97f71$1a382950$4ea87bf0$@com>	<497D7C63.9060904@lshift.net>	<000001c97fdd$0498c2f0$0dca48d0$@com>	<497E0ECE.3090702@lshift.net>	<002301c97fec$cdc37d00$694a7700$@com>	<497E16D1.8020501@lshift.net>	<008501c98015$244dd940$6ce98bc0$@com>	<497F676D.40609@lshift.net>
	<498234DD.8090000@lshift.net> <000001c98288$5f4d62c0$1de82840$@com>
Message-ID: <4982D088.5080106@lshift.net>

Christopher,

christopher hoover wrote:
> I tried running the /etc/init.d/rabbitmq steps by hand.  Almost by accident,
> I discovered that rabbitmq would start properly with rabbitmq's home
> (/var/lib/rabbitmq) as cwd, but would fail with / or even /tmp as cwd.
> 
> Editing /etc/init.d/rabbitmq to tweak the chdir to /var/lib/rabbitmq makes
> it work fine.

Just to be clear, you changed /etc/init.d/rabbitmq-server:28 from
   cd /
to
   cd /var/lib/rabbitmq
and then ran
   sudo /etc/init.d/rabbitmq-server start
which now started rabbitmq successfully whereas previously it resulted 
in the "register/listen error" you reported?

If so, there are a few more things to check:

1) run
   sudo getent passwd rabbitmq
which should print out something like
   rabbitmq:x:116:119:Rabbit AMQP Messaging 
Server:/var/lib/rabbitmq:/bin/false

2) run
   sudo su rabbitmq -s /bin/sh -c "erl -sname test"
and at the prompt enter
   init:get_argument(home).
which should display
   {ok,[["/var/lib/rabbitmq"]]}

3) revert your change to /etc/init.d/rabbitmq-server:28 and instead add 
the line
   PATH=/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin
just after the initial comments (i.e. on line 11) and then attempt to 
start rabbit in the usual way, i.e. by running
   sudo /etc/init.d/rabbitmq-server start
The line in question is the only line that has changed in the startup 
scripts between 1.5.0 and 1.5.1. I cannot see how it would make a 
difference, but it's worth a try.


Matthias.



From tonyg at lshift.net  Fri Jan 30 12:41:25 2009
From: tonyg at lshift.net (Tony Garnock-Jones)
Date: Fri, 30 Jan 2009 12:41:25 +0000
Subject: [rabbitmq-discuss] Mercurial usage: "default", not "tip"
Message-ID: <4982F575.6050209@lshift.net>

Hi all,

In many of our blog posts and email messages, we've mentioned the "tip"
of various Mercurial repositories.

This, it turns out, is a bad idea. We should have been talking about
"default" (or to be more precise, the tip of the "default" branch).

"tip", unfortunately, means simply the most recent commit, on *any*
branch within the repository, and so can produce some pretty random and
broken possibly-experimental code.

I'm about to go through all our literature and blogposts etc (thanks,
Google!) to try to update everything to point to "default" instead of
"tip"...


Tony

-- 
 [][][] Tony Garnock-Jones     | Mob: +44 (0)7905 974 211
   [][] LShift Ltd             | Tel: +44 (0)20 7729 7060
 []  [] http://www.lshift.net/ | Email: tonyg at lshift.net



From 0x6e6562 at gmail.com  Fri Jan 30 12:43:11 2009
From: 0x6e6562 at gmail.com (Ben Hood)
Date: Fri, 30 Jan 2009 12:43:11 +0000
Subject: [rabbitmq-discuss] Work distribution
In-Reply-To: <9916AAA4-A3D0-47DA-B8DF-DD7FD7DCE3E4@soundcloud.com>
References: <269388e30901261621m3d4e9628p8c708deffcfe638f@mail.gmail.com>
	<9916AAA4-A3D0-47DA-B8DF-DD7FD7DCE3E4@soundcloud.com>
Message-ID: <269388e30901300443o73caf208tcc7dc3443b177eb1@mail.gmail.com>

Sean,

On Fri, Jan 30, 2009 at 11:44 AM, Sean Treadway <sean at soundcloud.com> wrote:
> Thanks for the work you did on this.  It's very high on our list to roll in
> to our architecture as it will greatly improve the utility of our work
> offloading framework.
>
> We're currently stuck with the STOMP adapter for now - but when are able to
> move to EventMachine for our worker daemons, we'll most likely be forking
> and patching the ruby AMQP library for qos support.  I'm keeping this
> offlist because I don't know *when* we will get to it and I don't really
> want to prevent anyone else from taking a crack at the client implementation
> :)

Why not keep it on list - somebody might just do your work for you :-)

Besides, adding basic.qos to a client library is trivial because it is
probably the simplest RPC there is.

All the hard stuff is handled on the server.

>
> I can't speak higher praises about this RabbitMQ - it's the most stable and
> architecturally influential software I've encountered.
>
> We've recently moved to Solaris.  Rabbitmq + stomp from 'tip' built without
> a problem.  Kudos to you and all at LShift.

BTW updating to tip in mercurial is a bit dodgy because you just get
some random revision - and a high likelihood that it'll be one that
you don't want - it is better to update to the head of a named branch,
for example the default branch.

HTH,

Ben



From ch at murgatroid.com  Fri Jan 30 17:15:39 2009
From: ch at murgatroid.com (christopher hoover)
Date: Fri, 30 Jan 2009 09:15:39 -0800
Subject: [rabbitmq-discuss] rabbitmq 1.5.1-1 from debian pool fails to
	start
In-Reply-To: <4982D088.5080106@lshift.net>
References: <009b01c97f71$1a382950$4ea87bf0$@com>	<497D7C63.9060904@lshift.net>	<000001c97fdd$0498c2f0$0dca48d0$@com>	<497E0ECE.3090702@lshift.net>	<002301c97fec$cdc37d00$694a7700$@com>	<497E16D1.8020501@lshift.net>	<008501c98015$244dd940$6ce98bc0$@com>	<497F676D.40609@lshift.net>
	<498234DD.8090000@lshift.net> <000001c98288$5f4d62c0$1de82840$@com>
	<4982D088.5080106@lshift.net>
Message-ID: <005601c982fe$5fd72890$1f8579b0$@com>

> Just to be clear, you changed /etc/init.d/rabbitmq-server:28 from
>    cd /
> to
>    cd /var/lib/rabbitmq
> and then ran
>    sudo /etc/init.d/rabbitmq-server start
> which now started rabbitmq successfully whereas previously it resulted
> in the "register/listen error" you reported?

Yes, precisely.

> If so, there are a few more things to check:
> 
> 1) run
>    sudo getent passwd rabbitmq
> which should print out something like
>    rabbitmq:x:116:119:Rabbit AMQP Messaging
> Server:/var/lib/rabbitmq:/bin/false
> 2) run
>    sudo su rabbitmq -s /bin/sh -c "erl -sname test"
> and at the prompt enter
>    init:get_argument(home).
> which should display
>    {ok,[["/var/lib/rabbitmq"]]}

ch at gato:~/src/sdc/daffy$ sudo getent passwd rabbitmq
rabbitmq:x:119:126:RabbitMQ messaging server:/var/lib/rabbitmq:/bin/false
ch at gato:~/src/sdc/daffy$ sudo getent group rabbitmq
rabbitmq:x:126:
ch at gato:~/src/sdc/daffy$ sudo su rabbitmq -s /bin/sh -c "erl -sname test"
Erlang (BEAM) emulator version 5.6.3 [source] [async-threads:0] [hipe]
[kernel-poll:false]

Eshell V5.6.3  (abort with ^G)
(test at gato)1> init:get_argument(home)
(test at gato)1> .
{ok,[["/var/lib/rabbitmq"]]}
(test at gato)2> 
BREAK: (a)bort (c)ontinue (p)roc info (i)nfo (l)oaded
       (v)ersion (k)ill (D)b-tables (d)istribution
^Cch at gato:~/src/sdc/daffy$


> 3) revert your change to /etc/init.d/rabbitmq-server:28 and instead add
> the line
>    PATH=/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin
> just after the initial comments (i.e. on line 11) and then attempt to
> start rabbit in the usual way, i.e. by running
>    sudo /etc/init.d/rabbitmq-server start
> The line in question is the only line that has changed in the startup
> scripts between 1.5.0 and 1.5.1. I cannot see how it would make a
> difference, but it's worth a try.

I saw that and tried reverting it.  No luck.   Let me double-check.  Nope,
no good.

ch at gato:~/src/sdc/daffy$ sudo /etc/init.d/rabbitmq-server stop
Stopping rabbitmq-server: rabbitmq-server.
ch at gato:~/src/sdc/daffy$ 
ch at gato:~/src/sdc/daffy$ ps -efw | grep erl
ch        2914  4179  0 09:12 pts/0    00:00:00 grep erl
rabbitmq 19633     1  0 Jan29 ?        00:00:00
/usr/lib/erlang/erts-5.6.3/bin/epmd -daemon
ch at gato:~/src/sdc/daffy$ sudo kill 19633
ch at gato:~/src/sdc/daffy$ ps -efw | grep erl
ch        2917  4179  0 09:12 pts/0    00:00:00 grep erl
ch at gato:~/src/sdc/daffy$ egrep '^cd|PATH' /etc/init.d/rabbitmq-server
PATH=/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin
cd /
ch at gato:~/src/sdc/daffy$ sudo /etc/init.d/rabbitmq-server start
Starting rabbitmq-server: FAILED - check /var/log/rabbitmq/startup_log, _err
rabbitmq-server.
ch at gato:~/src/sdc/daffy$ ps -efw | grep erlang
rabbitmq  2958     1  0 09:13 ?        00:00:00
/usr/lib/erlang/erts-5.6.3/bin/epmd -daemon
ch        3049  4179  0 09:13 pts/0    00:00:00 grep erlang
ch at gato:~/src/sdc/daffy$ sudo kill 2958
ch at gato:~/src/sdc/daffy$ egrep '^cd|PATH' /etc/init.d/rabbitmq-server
#PATH=/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin
cd /var/lib/rabbitmq
ch at gato:~/src/sdc/daffy$ sudo /etc/init.d/rabbitmq-server start
Starting rabbitmq-server: SUCCESS
rabbitmq-server.
ch at gato:~/src/sdc/daffy$


-ch






From matthias at lshift.net  Fri Jan 30 18:09:48 2009
From: matthias at lshift.net (Matthias Radestock)
Date: Fri, 30 Jan 2009 18:09:48 +0000
Subject: [rabbitmq-discuss] rabbitmq 1.5.1-1 from debian pool fails to
 start
In-Reply-To: <005601c982fe$5fd72890$1f8579b0$@com>
References: <009b01c97f71$1a382950$4ea87bf0$@com>	<497D7C63.9060904@lshift.net>	<000001c97fdd$0498c2f0$0dca48d0$@com>	<497E0ECE.3090702@lshift.net>	<002301c97fec$cdc37d00$694a7700$@com>	<497E16D1.8020501@lshift.net>	<008501c98015$244dd940$6ce98bc0$@com>	<497F676D.40609@lshift.net>	<498234DD.8090000@lshift.net>
	<000001c98288$5f4d62c0$1de82840$@com>	<4982D088.5080106@lshift.net>
	<005601c982fe$5fd72890$1f8579b0$@com>
Message-ID: <4983426C.6010400@lshift.net>

Christopher,

christopher hoover wrote:
>> Just to be clear, you changed /etc/init.d/rabbitmq-server:28 from
>>    cd /
>> to
>>    cd /var/lib/rabbitmq
>> and then ran
>>    sudo /etc/init.d/rabbitmq-server start
>> which now started rabbitmq successfully whereas previously it resulted
>> in the "register/listen error" you reported?
> 
> Yes, precisely.
> 
>> If so, there are a few more things to check:
>> [...all of which worked...]

Thanks for your patience. Unfortunately there is nothing more I can do 
until I get access to a machine that exhibits the problem. Or, rather, 
the next steps would be far too time-consuming to execute over an email 
transport :(


Matthias.



From ch at murgatroid.com  Fri Jan 30 18:24:46 2009
From: ch at murgatroid.com (christopher hoover)
Date: Fri, 30 Jan 2009 10:24:46 -0800
Subject: [rabbitmq-discuss] rabbitmq 1.5.1-1 from debian pool fails to
	start
In-Reply-To: <4983426C.6010400@lshift.net>
References: <009b01c97f71$1a382950$4ea87bf0$@com>	<497D7C63.9060904@lshift.net>	<000001c97fdd$0498c2f0$0dca48d0$@com>	<497E0ECE.3090702@lshift.net>	<002301c97fec$cdc37d00$694a7700$@com>	<497E16D1.8020501@lshift.net>	<008501c98015$244dd940$6ce98bc0$@com>	<497F676D.40609@lshift.net>	<498234DD.8090000@lshift.net>
	<000001c98288$5f4d62c0$1de82840$@com>	<4982D088.5080106@lshift.net>
	<005601c982fe$5fd72890$1f8579b0$@com> <4983426C.6010400@lshift.net>
Message-ID: <009401c98308$0796a520$16c3ef60$@com>

> > Yes, precisely.
> >
> >> If so, there are a few more things to check:
> >> [...all of which worked...]
> 
> Thanks for your patience. Unfortunately there is nothing more I can do
> until I get access to a machine that exhibits the problem. Or, rather,
> the next steps would be far too time-consuming to execute over an email
> transport :(
> 

Matthias-

Thanks for your cooperation.

I'm afraid my corporate infosec requirements make it impossible for me to
get you access to my current setup.

Can you run vmplayer or other vmware product?   If so, let me see if I can
start with some online vmware image and get it to fail.

If not, I'll figure something else out.

-ch





From dmitriy.samovskiy at cohesiveft.com  Fri Jan 30 18:40:04 2009
From: dmitriy.samovskiy at cohesiveft.com (Dmitriy Samovskiy)
Date: Fri, 30 Jan 2009 12:40:04 -0600
Subject: [rabbitmq-discuss] rabbitmq 1.5.1-1 from debian pool fails to
 start
In-Reply-To: <009401c98308$0796a520$16c3ef60$@com>
References: <009b01c97f71$1a382950$4ea87bf0$@com>	<497D7C63.9060904@lshift.net>	<000001c97fdd$0498c2f0$0dca48d0$@com>	<497E0ECE.3090702@lshift.net>	<002301c97fec$cdc37d00$694a7700$@com>	<497E16D1.8020501@lshift.net>	<008501c98015$244dd940$6ce98bc0$@com>	<497F676D.40609@lshift.net>	<498234DD.8090000@lshift.net>	<000001c98288$5f4d62c0$1de82840$@com>	<4982D088.5080106@lshift.net>	<005601c982fe$5fd72890$1f8579b0$@com>
	<4983426C.6010400@lshift.net> <009401c98308$0796a520$16c3ef60$@com>
Message-ID: <49834984.1000006@cohesiveft.com>



christopher hoover wrote:
> Can you run vmplayer or other vmware product?   If so, let me see if I can
> start with some online vmware image and get it to fail.

(disclosure: self promotion)

You can quickly and easily build a clean Debian Etch (shown as DaiSY) or Ubuntu HH/II at 
http://elasticserver.com/ .

Note that erlang and rabbit in Bundle Explorer might not be the latest versions though.

- Dmitriy





From matthias at lshift.net  Fri Jan 30 18:51:22 2009
From: matthias at lshift.net (Matthias Radestock)
Date: Fri, 30 Jan 2009 18:51:22 +0000
Subject: [rabbitmq-discuss] rabbitmq 1.5.1-1 from debian pool fails to
 start
In-Reply-To: <009401c98308$0796a520$16c3ef60$@com>
References: <009b01c97f71$1a382950$4ea87bf0$@com>	<497D7C63.9060904@lshift.net>	<000001c97fdd$0498c2f0$0dca48d0$@com>	<497E0ECE.3090702@lshift.net>	<002301c97fec$cdc37d00$694a7700$@com>	<497E16D1.8020501@lshift.net>	<008501c98015$244dd940$6ce98bc0$@com>	<497F676D.40609@lshift.net>	<498234DD.8090000@lshift.net>	<000001c98288$5f4d62c0$1de82840$@com>	<4982D088.5080106@lshift.net>	<005601c982fe$5fd72890$1f8579b0$@com>
	<4983426C.6010400@lshift.net> <009401c98308$0796a520$16c3ef60$@com>
Message-ID: <49834C2A.5040406@lshift.net>

Christopher,

christopher hoover wrote:
> Can you run vmplayer or other vmware product?

Yes, I can.


Matthias.



From dialtone at gmail.com  Fri Jan 30 20:13:22 2009
From: dialtone at gmail.com (Valentino Volonghi)
Date: Fri, 30 Jan 2009 12:13:22 -0800
Subject: [rabbitmq-discuss] Mnesia db integrity
Message-ID: <52DE060A-CB23-4ABC-ADD6-73B054CAE4BA@gmail.com>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

I'm doing some deployment testing on EC2 in these days using EBS to  
store
the mnesia directory for rabbitmq and I found a problem that I need to  
solve.

Basically the issue is something that was already discussed an year on  
this
list. After a simulated crash (basically just shutdown the system  
without stopping
services) and a restart rabbitmq reacts by crashing on the mnesia  
directory.

The error is essentially timeout_waiting_for_tables  which I suppose  
means that
the system crashed while everything was in the middle of a transaction  
of some
kind (the server though wasn't hit with any traffic and no messages  
were around).

I thought that by saving rabbitmq log files and removing the mnesia  
files rabbitmq
would have picked up the undelivered messages but apparently all I get  
from
the logs is a:

Rolling persister log to "/mnt/ebs/adrollserver/mnesia/adserverrmq/ 
rabbit_persister.LOG.previous"

Which basically means that it discards my messages that won't be  
transmitted again.

Is there any way to automatically or manually fix this issue or to  
have rabbitmq
not choke on it?

- --
Valentino Volonghi aka Dialtone
Now running MacOS X 10.5
Home Page: http://www.twisted.it
http://www.adroll.com

-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.4.9 (Darwin)

iEYEARECAAYFAkmDX2IACgkQ9Llz28widGVj1gCdEwwmKS4Bdx7pDS82yBSWLnJq
CusAn0Nm7s4StRx+kVfaf25hZSiMmcAW
=w0tx
-----END PGP SIGNATURE-----



From matthias at lshift.net  Fri Jan 30 20:31:51 2009
From: matthias at lshift.net (Matthias Radestock)
Date: Fri, 30 Jan 2009 20:31:51 +0000
Subject: [rabbitmq-discuss] Mnesia db integrity
In-Reply-To: <52DE060A-CB23-4ABC-ADD6-73B054CAE4BA@gmail.com>
References: <52DE060A-CB23-4ABC-ADD6-73B054CAE4BA@gmail.com>
Message-ID: <498363B7.7040003@lshift.net>

Valentino,

Valentino Volonghi wrote:
> After a simulated crash (basically just shutdown the system without
> stopping services) and a restart rabbitmq reacts by crashing on the
> mnesia directory.

Mnesia should generally recover from this without assistance.

Next time this happens, could you please zip up the mnesia dir and send 
it to me?

Also, can you reproduce the problem by, say, killing the rabbit process?

> I thought that by saving rabbitmq log files and removing the mnesia 
> files rabbitmq would have picked up the undelivered messages

That's not quite enough. Removing the mnesia files will remove all the 
durable exchanges and queues, so there is no place for the persisted 
messages to go. See
 
http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/2009-January/002974.html

for a sequence of steps that might work.

> apparently all I get from the logs is a:
> 
> Rolling persister log to "/mnt/ebs/adrollserver/mnesia/adserverrmq/ 
> rabbit_persister.LOG.previous"
> 
> Which basically means that it discards my messages that won't be 
> transmitted again.

The above does not indicate that the messages have been discarded 
(though for the reasons I mentioned above they will have been), only 
that the persister has created a new snapshot of the persisted data.


Matthias.



From dialtone at gmail.com  Fri Jan 30 20:52:24 2009
From: dialtone at gmail.com (Valentino Volonghi)
Date: Fri, 30 Jan 2009 12:52:24 -0800
Subject: [rabbitmq-discuss] Mnesia db integrity
In-Reply-To: <498363B7.7040003@lshift.net>
References: <52DE060A-CB23-4ABC-ADD6-73B054CAE4BA@gmail.com>
	<498363B7.7040003@lshift.net>
Message-ID: <BC27850D-12B2-4F2B-9416-0830971BE27E@gmail.com>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

On Jan 30, 2009, at 12:31 PM, Matthias Radestock wrote:

> Mnesia should generally recover from this without assistance.
>
> Next time this happens, could you please zip up the mnesia dir and  
> send it to me?
>
> Also, can you reproduce the problem by, say, killing the rabbit  
> process?

I've tried going a bit deeper into the thing and I suspect it's  
related to how you
would deal with failures in a cloud. Basically you start a new image  
that has a
new hostname and I suppose mnesia would be waiting for the broken node
to come back up.

I'm going to try running:
hostname something.somethingelse.com

before starting rabbitmq so that mnesia should see the same hostname  
between
restarts... hopefully.

- --
Valentino Volonghi aka Dialtone
Now running MacOS X 10.5
Home Page: http://www.twisted.it
http://www.adroll.com

-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.4.9 (Darwin)

iEYEARECAAYFAkmDaIgACgkQ9Llz28widGUWvgCgpJTmakBnLvAvM92iUTqVDnOg
HOQAn26nL+h7Kno0Pz4+qinBbaSJtNaf
=JvmY
-----END PGP SIGNATURE-----



From matthias at lshift.net  Fri Jan 30 21:00:04 2009
From: matthias at lshift.net (Matthias Radestock)
Date: Fri, 30 Jan 2009 21:00:04 +0000
Subject: [rabbitmq-discuss] Mnesia db integrity
In-Reply-To: <BC27850D-12B2-4F2B-9416-0830971BE27E@gmail.com>
References: <52DE060A-CB23-4ABC-ADD6-73B054CAE4BA@gmail.com>	<498363B7.7040003@lshift.net>
	<BC27850D-12B2-4F2B-9416-0830971BE27E@gmail.com>
Message-ID: <49836A54.6000103@lshift.net>

Valentino,

Valentino Volonghi wrote:
> I've tried going a bit deeper into the thing and I suspect it's
> related to how you would deal with failures in a cloud. Basically you
> start a new image that has a new hostname and I suppose mnesia would
> be waiting for the broken node to come back up.

Correct. That's exactly what would happen. Retaining the hostname across 
restarts is crucial for mnesia to be able to recover. There are ways 
around that, but they are somewhat involved.


Matthias.



From dialtone at gmail.com  Fri Jan 30 21:06:59 2009
From: dialtone at gmail.com (Valentino Volonghi)
Date: Fri, 30 Jan 2009 13:06:59 -0800
Subject: [rabbitmq-discuss] Mnesia db integrity
In-Reply-To: <49836A54.6000103@lshift.net>
References: <52DE060A-CB23-4ABC-ADD6-73B054CAE4BA@gmail.com>	<498363B7.7040003@lshift.net>
	<BC27850D-12B2-4F2B-9416-0830971BE27E@gmail.com>
	<49836A54.6000103@lshift.net>
Message-ID: <2FC935C6-8FD4-459A-9AE7-5E76E9EA03A0@gmail.com>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1


On Jan 30, 2009, at 1:00 PM, Matthias Radestock wrote:
> Correct. That's exactly what would happen. Retaining the hostname  
> across restarts is crucial for mnesia to be able to recover. There  
> are ways around that, but they are somewhat involved.


Yes, running the hostname command before apparently fixed it... We now
have to be careful to bind the hostname to the EBS storage so that this
problem doesn't happen. :)

thanks.

- --
Valentino Volonghi aka Dialtone
Now running MacOS X 10.5
Home Page: http://www.twisted.it
http://www.adroll.com

-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.4.9 (Darwin)

iEUEARECAAYFAkmDa/QACgkQ9Llz28widGWCrwCgugmb3FyNUq0TA68zmiSwPk+h
7fUAmNqOksGSis1C3THI0vY4DYGa9xU=
=EfMX
-----END PGP SIGNATURE-----



From 0x6e6562 at gmail.com  Fri Jan 30 21:51:13 2009
From: 0x6e6562 at gmail.com (Ben Hood)
Date: Fri, 30 Jan 2009 21:51:13 +0000
Subject: [rabbitmq-discuss] Mnesia db integrity
In-Reply-To: <BC27850D-12B2-4F2B-9416-0830971BE27E@gmail.com>
References: <52DE060A-CB23-4ABC-ADD6-73B054CAE4BA@gmail.com>
	<498363B7.7040003@lshift.net>
	<BC27850D-12B2-4F2B-9416-0830971BE27E@gmail.com>
Message-ID: <269388e30901301351m2f8c1b95x4050788ee39ac7a5@mail.gmail.com>

Valentino,

On Fri, Jan 30, 2009 at 8:52 PM, Valentino Volonghi <dialtone at gmail.com> wrote:
> I've tried going a bit deeper into the thing and I suspect it's
> related to how you
> would deal with failures in a cloud. Basically you start a new image
> that has a
> new hostname and I suppose mnesia would be waiting for the broken node
> to come back up.
>
> I'm going to try running:
> hostname something.somethingelse.com

Recently we identified a problem that coincided with the way OSX
assigns the hostname to a laptop depending on where it currenly is. We
didn't work out how we were going to solve it. Maybe this is related
to what you are doing on a cloud.

Ben



From mark.geib at echostar.com  Sat Jan 31 00:16:27 2009
From: mark.geib at echostar.com (Mark Geib)
Date: Fri, 30 Jan 2009 17:16:27 -0700
Subject: [rabbitmq-discuss] Can't read messages with erlang client
Message-ID: <4983985B.3000304@echostar.com>

I am using a topic exchange, created by the producer, and sending with 
simple routing key <<"test">>. I do the same basic config in the 
consumer, in addition I do a
   %bind a queue to get the sms commands
   Q = lib_amqp:declare_queue(Channel),
   SourceKey = <<"test">>,
   lib_amqp:bind_queue(Channel, X, Q, SourceKey),

Then to read a message I do
   Reply = lib_amqp:get(Channel, Q, false),

But I always get a 'basic.get_empty' reply.

Any help is appreciated. Everything is current, running on Ubuntu 8.10.

This all works great with Java...

Mark.

-- 
Principal Engineer
Cheyenne Software Engineering
mark.geib at echostar.com / 35-215




From jasonjwwilliams at gmail.com  Sat Jan 31 00:21:55 2009
From: jasonjwwilliams at gmail.com (Jason J. W. Williams)
Date: Fri, 30 Jan 2009 17:21:55 -0700
Subject: [rabbitmq-discuss] basic.reject
Message-ID: <3b949f090901301621y79cac546s89925696d0775d2d@mail.gmail.com>

Hi Y'all,

Any chance basic.reject support will make it into the 1.6 release?

-J



From 0x6e6562 at gmail.com  Sat Jan 31 01:34:25 2009
From: 0x6e6562 at gmail.com (Ben Hood)
Date: Sat, 31 Jan 2009 01:34:25 +0000
Subject: [rabbitmq-discuss] Can't read messages with erlang client
In-Reply-To: <4983985B.3000304@echostar.com>
References: <4983985B.3000304@echostar.com>
Message-ID: <269388e30901301734x5978b4e9pee6a3b67d7e06703@mail.gmail.com>

Mark,

On Sat, Jan 31, 2009 at 12:16 AM, Mark Geib <mark.geib at echostar.com> wrote:
> I am using a topic exchange, created by the producer, and sending with
> simple routing key <<"test">>. I do the same basic config in the
> consumer, in addition I do a
>   %bind a queue to get the sms commands
>   Q = lib_amqp:declare_queue(Channel),
>   SourceKey = <<"test">>,
>   lib_amqp:bind_queue(Channel, X, Q, SourceKey),
>
> Then to read a message I do
>   Reply = lib_amqp:get(Channel, Q, false),
>
> But I always get a 'basic.get_empty' reply.

This may be a stupid question, but are you sending a message before or
after having created the binding?

Ben



From 0x6e6562 at gmail.com  Sat Jan 31 01:35:44 2009
From: 0x6e6562 at gmail.com (Ben Hood)
Date: Sat, 31 Jan 2009 01:35:44 +0000
Subject: [rabbitmq-discuss] basic.reject
In-Reply-To: <3b949f090901301621y79cac546s89925696d0775d2d@mail.gmail.com>
References: <3b949f090901301621y79cac546s89925696d0775d2d@mail.gmail.com>
Message-ID: <269388e30901301735r30afc98fid9bce7b41ceaa1a@mail.gmail.com>

Jason,

On Sat, Jan 31, 2009 at 12:21 AM, Jason J. W. Williams
<jasonjwwilliams at gmail.com> wrote:
> Any chance basic.reject support will make it into the 1.6 release?

Very little. You're the first person to ask, as yet.

HTH,

Ben



From Mark.Geib at echostar.com  Sat Jan 31 02:27:42 2009
From: Mark.Geib at echostar.com (Geib, Mark)
Date: Fri, 30 Jan 2009 19:27:42 -0700
Subject: [rabbitmq-discuss] Can't read messages with erlang client
References: <4983985B.3000304@echostar.com>
	<269388e30901301734x5978b4e9pee6a3b67d7e06703@mail.gmail.com>
Message-ID: <60774C345843F8489D49A4F3A817D83301739ACC@MER2-EXCHA1.echostar.com>

Ben,

I have another erlang app that is constantly sending messages. So the answer is both.
I have looked at the queue with rabbitmq and the number of messages constantly grows, I just can't seem to 'get' them.

Mark.


-----Original Message-----
From: Ben Hood [mailto:0x6e6562 at gmail.com]
Sent: Fri 1/30/2009 6:34 PM
To: Geib, Mark
Cc: rabbitmq-discuss at lists.rabbitmq.com
Subject: Re: [rabbitmq-discuss] Can't read messages with erlang client
 
Mark,

On Sat, Jan 31, 2009 at 12:16 AM, Mark Geib <mark.geib at echostar.com> wrote:
> I am using a topic exchange, created by the producer, and sending with
> simple routing key <<"test">>. I do the same basic config in the
> consumer, in addition I do a
>   %bind a queue to get the sms commands
>   Q = lib_amqp:declare_queue(Channel),
>   SourceKey = <<"test">>,
>   lib_amqp:bind_queue(Channel, X, Q, SourceKey),
>
> Then to read a message I do
>   Reply = lib_amqp:get(Channel, Q, false),
>
> But I always get a 'basic.get_empty' reply.

This may be a stupid question, but are you sending a message before or
after having created the binding?

Ben

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20090130/a9a10e56/attachment.htm 

From dave at interactivemediums.com  Sat Jan 31 02:31:07 2009
From: dave at interactivemediums.com (dave farkas)
Date: Fri, 30 Jan 2009 20:31:07 -0600
Subject: [rabbitmq-discuss] getting started, broker runs;
	can't get status
In-Reply-To: <497A07F9.9020907@lshift.net>
References: <3d5db09e0901201356r1cafa64aud71de1a8c2d28cef@mail.gmail.com>	<269388e30901201404y2f36b9b8la2cfe7e45d2cf666@mail.gmail.com>	<3d5db09e0901201420v2195969dm5261db800741c892@mail.gmail.com>	<269388e30901201433p2e8233e9l4561b10088b18118@mail.gmail.com>	<c893b8530901201443r123cd383w3ec6e35e5d505d49@mail.gmail.com>	<49765E86.605@lshift.net>	<9F62222D-82AD-4CB1-9FDA-668ED6D797B4@gmail.com>	<3d5db09e0901221407p21994b0ck880062a66c6f8536@mail.gmail.com>
	<497A07F9.9020907@lshift.net>
Message-ID: <4983B7EB.5070500@interactivemediums.com>

I'm seeing a similar problem on RHE 5 (64 bit).  I've installed verision 
1.5.1-1 from the fedora linux (64-bit) rpm.  When I start the server, I 
get the following:

[root at db1 init.d]# ./rabbitmq-server start
Starting rabbitmq-server: FAILED - check /var/log/rabbitmq/startup_log, _err
rabbitmq-server.

This script hangs for a long time eventually giving the failed message.  
The process are still running and i can connect with an amqp client.

[root at db1 init.d]# ./rabbitmq-server status
Status of all running nodes...
Error: no_nodes_running


Here are the logs:

root at db1 rabbitmq]# more startup_log
Starting all nodes...
Starting node rabbit at db1...
RabbitMQ 1.5.1 (AMQP 8-0)
Copyright (C) 2007-2009 LShift Ltd., Cohesive Financial Technologies 
LLC., and Rabbit Technologies Ltd.
Licensed under the MPL.  See http://www.rabbitmq.com/

Logging to "/var/log/rabbitmq/rabbit.log"
SASL logging to "/var/log/rabbitmq/rabbit-sasl.log"

starting database             ...done
starting core processes       ...done
starting recovery             ...done
starting persister            ...done
starting builtin applications ...done
starting TCP listeners        ...done

broker running

[root at db1 rabbitmq]# more startup_err
Error: cannot_get_pid


The rabbit.log is (this is after i connect with an amqp client):

[root at db1 rabbitmq]# more rabbit.log

=INFO REPORT==== 30-Jan-2009::20:20:54 ===
disk_log: repairing 
"/var/lib/rabbitmq/mnesia/rabbit/rabbit_persister.LOG" ...

=INFO REPORT==== 30-Jan-2009::20:20:54 ===
Repaired persister log - 1 recovered, 0 bad

=INFO REPORT==== 30-Jan-2009::20:20:54 ===
Rolling persister log to 
"/var/lib/rabbitmq/mnesia/rabbit/rabbit_persister.LOG.previous"

=INFO REPORT==== 30-Jan-2009::20:20:54 ===
started TCP listener on 0.0.0.0:5672

=INFO REPORT==== 30-Jan-2009::20:21:47 ===
accepted TCP connection on 0.0.0.0:5672 from 127.0.0.1:49811

=INFO REPORT==== 30-Jan-2009::20:21:47 ===
starting TCP connection <0.202.0> from 127.0.0.1:49811

=ERROR REPORT==== 30-Jan-2009::20:21:47 ===
error on TCP connection <0.202.0> from 127.0.0.1:49811
connection_closed_abruptly

=INFO REPORT==== 30-Jan-2009::20:21:47 ===
closing TCP connection <0.202.0> from 127.0.0.1:49811

and here's info on how the processes are running:

[root at db1 bin]# ps -ef | grep rabbitmq
root     18666 18642  0 20:20 pts/2    00:00:00 /bin/sh 
./rabbitmq-server start
root     18667 18666  0 20:20 pts/2    00:00:00 su rabbitmq -s /bin/sh 
-c /usr/lib64/rabbitmq/bin/rabbitmq-multi start_all 1
rabbitmq 18668 18667  3 20:20 ?        00:00:00 
/usr/lib64/erlang/erts-5.6.3/bin/beam.smp -- -root /usr/lib64/erlang 
-progname erl -- -home /var/lib/rabbitmq -pa 
/usr/lib64/rabbitmq/bin/../ebin -noshell -noinput -hidden -sname 
rabbitmq_multi18668 -s rabbit_multi -extra start_all 1
rabbitmq 18676     1  0 20:20 ?        00:00:00 
/usr/lib64/erlang/erts-5.6.3/bin/epmd -daemon
rabbitmq 18692 18668  0 20:20 ?        00:00:00 inet_gethost 4
rabbitmq 18693 18692  0 20:20 ?        00:00:00 inet_gethost 4
rabbitmq 18694 18668 40 20:20 ?        00:00:01 
/usr/lib64/erlang/erts-5.6.3/bin/beam.smp -W w -K true -A30 -- -root 
/usr/lib64/erlang -progname erl -- -home /var/lib/rabbitmq -pa 
/usr/lib64/rabbitmq/bin/../ebin -noshell -noinput -s rabbit -sname 
rabbit -boot start_sasl -kernel inet_default_listen_options 
[{nodelay,true},{sndbuf,16384},{recbuf,4096}] -kernel 
inet_default_connect_options [{nodelay,true}] -rabbit tcp_listeners 
[{"0.0.0.0", 5672}] -sasl errlog_type error -kernel error_logger 
{file,"/var/log/rabbitmq/rabbit.log"} -sasl sasl_error_logger 
{file,"/var/log/rabbitmq/rabbit-sasl.log"} -os_mon start_cpu_sup true 
-os_mon start_disksup false -os_mon start_memsup false -os_mon 
start_os_sup false -os_mon memsup_system_only true -os_mon 
system_memory_high_watermark 0.95 -mnesia dir 
"/var/lib/rabbitmq/mnesia/rabbit" -noshell -noinput
rabbitmq 18749 18694  0 20:20 ?        00:00:00 
/usr/lib64/erlang/lib/os_mon-2.1.6/priv/bin/cpu_sup
rabbitmq 18750 18694  0 20:20 ?        00:00:00 inet_gethost 4
rabbitmq 18751 18750  0 20:20 ?        00:00:00 inet_gethost 4


Please let me know if there is any other information that would be helpful.

Thanks,
Dave

Matthias Radestock wrote:
> Michael,
>
> Michael Steinfeld wrote:
>   
>> Well, for the life of me I could not get it to work on RHEL4 x86_64.
>> Oddly enough the broker would run.
>>
>> I tried source and binary.
>>     
>
> Can you send us a transcript of the installation and your subsequent 
> attempts to access the broker?
>
>
> Matthias.
>
> _______________________________________________
> rabbitmq-discuss mailing list
> rabbitmq-discuss at lists.rabbitmq.com
> http://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss
>   



From matthias at lshift.net  Sat Jan 31 07:50:42 2009
From: matthias at lshift.net (Matthias Radestock)
Date: Sat, 31 Jan 2009 07:50:42 +0000
Subject: [rabbitmq-discuss] basic.reject
In-Reply-To: <269388e30901301735r30afc98fid9bce7b41ceaa1a@mail.gmail.com>
References: <3b949f090901301621y79cac546s89925696d0775d2d@mail.gmail.com>
	<269388e30901301735r30afc98fid9bce7b41ceaa1a@mail.gmail.com>
Message-ID: <498402D2.9080705@lshift.net>

Jason,

Ben Hood wrote:
> On Sat, Jan 31, 2009 at 12:21 AM, Jason J. W. Williams
> <jasonjwwilliams at gmail.com> wrote:
>> Any chance basic.reject support will make it into the 1.6 release?
> 
> Very little. You're the first person to ask, as yet.

Btw, the reason we haven't implemented basic.reject yet is the following 
part of its specification: "The server MUST NOT deliver the message to 
the same client within the context of the current channel." That 
requires a whole bunch of extra book keeping and logic.


Matthias.



From matthias at lshift.net  Sat Jan 31 08:20:29 2009
From: matthias at lshift.net (Matthias Radestock)
Date: Sat, 31 Jan 2009 08:20:29 +0000
Subject: [rabbitmq-discuss] getting started, broker runs;
	can't get status
In-Reply-To: <4983B7EB.5070500@interactivemediums.com>
References: <3d5db09e0901201356r1cafa64aud71de1a8c2d28cef@mail.gmail.com>	<269388e30901201404y2f36b9b8la2cfe7e45d2cf666@mail.gmail.com>	<3d5db09e0901201420v2195969dm5261db800741c892@mail.gmail.com>	<269388e30901201433p2e8233e9l4561b10088b18118@mail.gmail.com>	<c893b8530901201443r123cd383w3ec6e35e5d505d49@mail.gmail.com>	<49765E86.605@lshift.net>	<9F62222D-82AD-4CB1-9FDA-668ED6D797B4@gmail.com>	<3d5db09e0901221407p21994b0ck880062a66c6f8536@mail.gmail.com>	<497A07F9.9020907@lshift.net>
	<4983B7EB.5070500@interactivemediums.com>
Message-ID: <498409CD.6060600@lshift.net>

Dave,

dave farkas wrote:
> I'm seeing a similar problem on RHE 5 (64 bit).  I've installed verision 
> 1.5.1-1 from the fedora linux (64-bit) rpm.

Thanks for the detailed report. I don't think this is quite the same 
problem as other folks have seen, mainly because of this:

> [root at db1 rabbitmq]# more startup_err
> Error: cannot_get_pid

...which I don't recall anybody reporting before.

As you observed, rabbitmq is indeed happily running. However, for some 
reason the launcher program failed to communicate with it and obtain 
(and record) its process id. The error

> [root at db1 init.d]# ./rabbitmq-server status
> Status of all running nodes...
> Error: no_nodes_running

is a consequence of that.

What happens when you run
   rabbitmqctl status
(which should live in /usr/sbin, or /sbin or some such place - do *not* 
run the one in /usr/lib64/rabbitmq/bin/)?


Regards,

Matthias.



From 0x6e6562 at gmail.com  Sat Jan 31 08:42:31 2009
From: 0x6e6562 at gmail.com (Ben Hood)
Date: Sat, 31 Jan 2009 08:42:31 +0000
Subject: [rabbitmq-discuss] Can't read messages with erlang client
In-Reply-To: <60774C345843F8489D49A4F3A817D83301739ACC@MER2-EXCHA1.echostar.com>
References: <4983985B.3000304@echostar.com>
	<269388e30901301734x5978b4e9pee6a3b67d7e06703@mail.gmail.com>
	<60774C345843F8489D49A4F3A817D83301739ACC@MER2-EXCHA1.echostar.com>
Message-ID: <269388e30901310042r76306669tcac7a00ae8d79226@mail.gmail.com>

Mark,

On Sat, Jan 31, 2009 at 2:27 AM, Geib, Mark <Mark.Geib at echostar.com> wrote:
> I have another erlang app that is constantly sending messages. So the answer
> is both.
> I have looked at the queue with rabbitmq and the number of messages
> constantly grows, I just can't seem to 'get' them.

Would it be possible for you to send the code for this so that I can
reproduce it?

Ben



From sean at soundcloud.com  Sat Jan 31 13:38:24 2009
From: sean at soundcloud.com (Sean Treadway)
Date: Sat, 31 Jan 2009 14:38:24 +0100
Subject: [rabbitmq-discuss] Mercurial usage: "default", not "tip"
In-Reply-To: <4982F575.6050209@lshift.net>
References: <4982F575.6050209@lshift.net>
Message-ID: <038DC6DE-C4F1-4550-B6B5-431BCD02900B@soundcloud.com>

Thanks for the clarification.

The two URLs that we used to build our latest installation were from:

http://www.rabbitmq.com/server.html
http://www.rabbitmq.com/download.html

Under the "Latest Snapshot" heading for the following links:

rabbitmq-server http://hg.rabbitmq.com/rabbitmq-server/archive/tip.zip
rabbitmq-codegen http://hg.rabbitmq.com/rabbitmq-codegen/archive/tip.zip
rabbitmq-stomp http://hg.rabbitmq.com/rabbitmq-stomp/archive/tip.zip

Are these archive links also branchless?

-Sean

On Jan 30, 2009, at 1:41 PM, Tony Garnock-Jones wrote:

> Hi all,
>
> In many of our blog posts and email messages, we've mentioned the  
> "tip"
> of various Mercurial repositories.
>
> This, it turns out, is a bad idea. We should have been talking about
> "default" (or to be more precise, the tip of the "default" branch).
>
> "tip", unfortunately, means simply the most recent commit, on *any*
> branch within the repository, and so can produce some pretty random  
> and
> broken possibly-experimental code.
>
> I'm about to go through all our literature and blogposts etc (thanks,
> Google!) to try to update everything to point to "default" instead of
> "tip"...
>
>
> Tony
>
> -- 
> [][][] Tony Garnock-Jones     | Mob: +44 (0)7905 974 211
>   [][] LShift Ltd             | Tel: +44 (0)20 7729 7060
> []  [] http://www.lshift.net/ | Email: tonyg at lshift.net
>
> _______________________________________________
> rabbitmq-discuss mailing list
> rabbitmq-discuss at lists.rabbitmq.com
> http://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss




From mark.geib at echostar.com  Sat Jan 31 17:20:37 2009
From: mark.geib at echostar.com (Mark Geib)
Date: Sat, 31 Jan 2009 10:20:37 -0700
Subject: [rabbitmq-discuss] Can't read messages with erlang client
In-Reply-To: <269388e30901310042r76306669tcac7a00ae8d79226@mail.gmail.com>
References: <4983985B.3000304@echostar.com>	
	<269388e30901301734x5978b4e9pee6a3b67d7e06703@mail.gmail.com>	
	<60774C345843F8489D49A4F3A817D83301739ACC@MER2-EXCHA1.echostar.com>
	<269388e30901310042r76306669tcac7a00ae8d79226@mail.gmail.com>
Message-ID: <49848865.1010001@echostar.com>

For the producer I do...
   Connection = lib_amqp:start_connection("localhost"),
   Channel = lib_amqp:start_channel(Connection),
   X = <<"cse.sms.commands">>,
   K = <<"test.messages">>,
   lib_amqp:declare_exchange(Channel, X, <<"topic">>),
   Payload = list_to_binary("This is a test message"),
   Reply = lib_amqp:publish(Channel, X, K, Payload),

In the consumer I am doing...
     Connection = lib_amqp:start_connection("localhost"),
     Channel = lib_amqp:start_channel(Connection),
     X = <<"cse.sms.commands">>,
     K = <<"test.messages">>,
     lib_amqp:declare_exchange(Channel, X, <<"topic">>),
     Q = lib_amqp:declare_queue(Channel),
     lib_amqp:bind_queue(Channel, X, Q, K),
     GetReply = lib_amqp:get(Channel, Q, false),

Mark.


Ben Hood wrote:
> Mark,
> 
> On Sat, Jan 31, 2009 at 2:27 AM, Geib, Mark <Mark.Geib at echostar.com> wrote:
>> I have another erlang app that is constantly sending messages. So the answer
>> is both.
>> I have looked at the queue with rabbitmq and the number of messages
>> constantly grows, I just can't seem to 'get' them.
> 
> Would it be possible for you to send the code for this so that I can
> reproduce it?
> 
> Ben
> 

-- 
Principal Engineer
Cheyenne Software Engineering
mark.geib at echostar.com / 35-215




From dave at interactivemediums.com  Sat Jan 31 18:48:29 2009
From: dave at interactivemediums.com (Dave Farkas)
Date: Sat, 31 Jan 2009 12:48:29 -0600
Subject: [rabbitmq-discuss] getting started, broker runs;
	can't get status
In-Reply-To: <498409CD.6060600@lshift.net>
References: <3d5db09e0901201356r1cafa64aud71de1a8c2d28cef@mail.gmail.com>
	<3d5db09e0901201420v2195969dm5261db800741c892@mail.gmail.com>
	<269388e30901201433p2e8233e9l4561b10088b18118@mail.gmail.com>
	<c893b8530901201443r123cd383w3ec6e35e5d505d49@mail.gmail.com>
	<49765E86.605@lshift.net>
	<9F62222D-82AD-4CB1-9FDA-668ED6D797B4@gmail.com>
	<3d5db09e0901221407p21994b0ck880062a66c6f8536@mail.gmail.com>
	<497A07F9.9020907@lshift.net>
	<4983B7EB.5070500@interactivemediums.com>
	<498409CD.6060600@lshift.net>
Message-ID: <921b71e30901311048k3a96f0c8o7a303b1b89e16d99@mail.gmail.com>

Matthias,

Thanks for responding, I appreciate the help. Here is what i happens
when i run rabbitmqctl out of /user/sbin:

[root at db1 sbin]# ./rabbitmqctl status
Status of node rabbit at db1 ...
{badrpc,nodedown}
...done.

Is there anything else I should try?

Thanks again.
Dave

On Sat, Jan 31, 2009 at 2:20 AM, Matthias Radestock <matthias at lshift.net> wrote:
> Dave,
>
> dave farkas wrote:
>>
>> I'm seeing a similar problem on RHE 5 (64 bit).  I've installed verision
>> 1.5.1-1 from the fedora linux (64-bit) rpm.
>
> Thanks for the detailed report. I don't think this is quite the same problem
> as other folks have seen, mainly because of this:
>
>> [root at db1 rabbitmq]# more startup_err
>> Error: cannot_get_pid
>
> ...which I don't recall anybody reporting before.
>
> As you observed, rabbitmq is indeed happily running. However, for some
> reason the launcher program failed to communicate with it and obtain (and
> record) its process id. The error
>
>> [root at db1 init.d]# ./rabbitmq-server status
>> Status of all running nodes...
>> Error: no_nodes_running
>
> is a consequence of that.
>
> What happens when you run
>  rabbitmqctl status
> (which should live in /usr/sbin, or /sbin or some such place - do *not* run
> the one in /usr/lib64/rabbitmq/bin/)?
>
>
> Regards,
>
> Matthias.
>



From 0x6e6562 at gmail.com  Sat Jan 31 18:49:49 2009
From: 0x6e6562 at gmail.com (Ben Hood)
Date: Sat, 31 Jan 2009 18:49:49 +0000
Subject: [rabbitmq-discuss] Mercurial usage: "default", not "tip"
In-Reply-To: <038DC6DE-C4F1-4550-B6B5-431BCD02900B@soundcloud.com>
References: <4982F575.6050209@lshift.net>
	<038DC6DE-C4F1-4550-B6B5-431BCD02900B@soundcloud.com>
Message-ID: <269388e30901311049p68a9ca52r6acd24b60636b0d1@mail.gmail.com>

Sean,

On Sat, Jan 31, 2009 at 1:38 PM, Sean Treadway <sean at soundcloud.com> wrote:
> Under the "Latest Snapshot" heading for the following links:
>
> rabbitmq-server http://hg.rabbitmq.com/rabbitmq-server/archive/tip.zip
> rabbitmq-codegen http://hg.rabbitmq.com/rabbitmq-codegen/archive/tip.zip
> rabbitmq-stomp http://hg.rabbitmq.com/rabbitmq-stomp/archive/tip.zip
>
> Are these archive links also branchless?

Yes, they always point to the current tip, which is essentially an
(un)lucky dip.

So for example, and I'm using the Java client to show this, because as
I write this the tip and the head revision of the default branch of
the server are the same - hence if you went for the server right now,
you'd get lucky.

But if you went for the tip of the Java client, you'd get
312cfc0b8f05, but the latest QA'ed work is the head of the default
branch, i.e. a7ead3fa59d9, which contains some stuff that Matthias was
just hacking on.

Personally, and I stress that this is my only own opinion, I think the
tip concept in mercurial is misleading and adds no value. It confuses
the uninitiated because its behavior is not apparent. As somebody
trying to get people to use our not-yet-released code, it is
especially annoying.

As Tony indicated beforehand,

hg up -C default

will get you the latest and greatest QA'ed code that will go into the
next release.

HTH,

Ben



From 0x6e6562 at gmail.com  Sat Jan 31 19:08:00 2009
From: 0x6e6562 at gmail.com (Ben Hood)
Date: Sat, 31 Jan 2009 19:08:00 +0000
Subject: [rabbitmq-discuss] Can't read messages with erlang client
In-Reply-To: <49848865.1010001@echostar.com>
References: <4983985B.3000304@echostar.com>
	<269388e30901301734x5978b4e9pee6a3b67d7e06703@mail.gmail.com>
	<60774C345843F8489D49A4F3A817D83301739ACC@MER2-EXCHA1.echostar.com>
	<269388e30901310042r76306669tcac7a00ae8d79226@mail.gmail.com>
	<49848865.1010001@echostar.com>
Message-ID: <269388e30901311108w415e1f62te6e0886e048f6476@mail.gmail.com>

Mark,

On Sat, Jan 31, 2009 at 5:20 PM, Mark Geib <mark.geib at echostar.com> wrote:
> For the producer I do...

Ok, let's start with first principles - what behavior do you see when
you rearrange your code in this way:

test() ->
    Connection = lib_amqp:start_connection("localhost"),
    Channel = lib_amqp:start_channel(Connection),
    X = <<"cse.sms.commands">>,
    K = <<"test.messages">>,
    lib_amqp:declare_exchange(Channel, X, <<"topic">>),
    Q = lib_amqp:declare_queue(Channel),
    lib_amqp:bind_queue(Channel, X, Q, K),
    lib_amqp:publish(Channel, X, K, <<"This is a test message">>),
    lib_amqp:get(Channel, Q, false).


Ben



From 0x6e6562 at gmail.com  Sat Jan 31 19:12:56 2009
From: 0x6e6562 at gmail.com (Ben Hood)
Date: Sat, 31 Jan 2009 19:12:56 +0000
Subject: [rabbitmq-discuss] getting started, broker runs;
	can't get status
In-Reply-To: <921b71e30901311048k3a96f0c8o7a303b1b89e16d99@mail.gmail.com>
References: <3d5db09e0901201356r1cafa64aud71de1a8c2d28cef@mail.gmail.com>
	<269388e30901201433p2e8233e9l4561b10088b18118@mail.gmail.com>
	<c893b8530901201443r123cd383w3ec6e35e5d505d49@mail.gmail.com>
	<49765E86.605@lshift.net>
	<9F62222D-82AD-4CB1-9FDA-668ED6D797B4@gmail.com>
	<3d5db09e0901221407p21994b0ck880062a66c6f8536@mail.gmail.com>
	<497A07F9.9020907@lshift.net>
	<4983B7EB.5070500@interactivemediums.com>
	<498409CD.6060600@lshift.net>
	<921b71e30901311048k3a96f0c8o7a303b1b89e16d99@mail.gmail.com>
Message-ID: <269388e30901311112r13cb8ee3h40ccc0c8e449ffe4@mail.gmail.com>

Dave,

On Sat, Jan 31, 2009 at 6:48 PM, Dave Farkas
<dave at interactivemediums.com> wrote:
> Thanks for responding, I appreciate the help. Here is what i happens
> when i run rabbitmqctl out of /user/sbin:
>
> [root at db1 sbin]# ./rabbitmqctl status
> Status of node rabbit at db1 ...
> {badrpc,nodedown}
> ...done.
>
> Is there anything else I should try?

It's probably bad form to butt in, but is the server and rabbitmqctl
being run as the same user? I just want to exclude the possibility of
Erlang's cookie mechanism preventing you from connecting to a node
running as another user.

Ben



From dave at interactivemediums.com  Sat Jan 31 19:34:01 2009
From: dave at interactivemediums.com (Dave Farkas)
Date: Sat, 31 Jan 2009 13:34:01 -0600
Subject: [rabbitmq-discuss] getting started, broker runs;
	can't get status
In-Reply-To: <269388e30901311112r13cb8ee3h40ccc0c8e449ffe4@mail.gmail.com>
References: <3d5db09e0901201356r1cafa64aud71de1a8c2d28cef@mail.gmail.com>
	<c893b8530901201443r123cd383w3ec6e35e5d505d49@mail.gmail.com>
	<49765E86.605@lshift.net>
	<9F62222D-82AD-4CB1-9FDA-668ED6D797B4@gmail.com>
	<3d5db09e0901221407p21994b0ck880062a66c6f8536@mail.gmail.com>
	<497A07F9.9020907@lshift.net>
	<4983B7EB.5070500@interactivemediums.com>
	<498409CD.6060600@lshift.net>
	<921b71e30901311048k3a96f0c8o7a303b1b89e16d99@mail.gmail.com>
	<269388e30901311112r13cb8ee3h40ccc0c8e449ffe4@mail.gmail.com>
Message-ID: <921b71e30901311134x7b674082j8e645ed251b10d64@mail.gmail.com>

Hey Ben,

On Sat, Jan 31, 2009 at 1:12 PM, Ben Hood <0x6e6562 at gmail.com> wrote:

> It's probably bad form to butt in, but is the server and rabbitmqctl
> being run as the same user? I just want to exclude the possibility of
> Erlang's cookie mechanism preventing you from connecting to a node
> running as another user.
>
> Ben
>

No worries, the more the merrier. :)  I believe everything is being
run as the rabbitmq user.
I run the start script as root, and then it executes the server start
up as rabbitmq. Here's the relevant information from the
/etc/init.d/rabbitmq script

DAEMON_NAME=rabbitmq-multi
DAEMON=/usr/lib64/rabbitmq/bin/$DAEMON_NAME
NAME=rabbitmq-server
DESC=rabbitmq-server
USER=rabbitmq
NODE_COUNT=1

start_rabbitmq () {
    set +e
    su $USER -s /bin/sh -c "$DAEMON start_all ${NODE_COUNT}" >
/var/log/rabbitmq/startup_log 2> /var/log/rabbitmq/startup_err

I was running the /usr/sbin/rabbitmqctl command as root, but it looks
like it also executes the status check as rabbitmq.

if [ `id -u` = 0 ] ; then
        su rabbitmq -s /bin/sh -c "/usr/lib64/rabbitmq/bin/rabbitmqctl
${CMDLINE}"
else
        /usr/lib64/rabbitmq/bin/rabbitmqctl
        echo -e "\nOnly root should run rabbitmqctl\n"
        exit 1
fi

Thanks,
Dave



From matthias at lshift.net  Sat Jan 31 19:39:47 2009
From: matthias at lshift.net (Matthias Radestock)
Date: Sat, 31 Jan 2009 19:39:47 +0000
Subject: [rabbitmq-discuss] getting started, broker runs;
	can't get status
In-Reply-To: <921b71e30901311048k3a96f0c8o7a303b1b89e16d99@mail.gmail.com>
References: <3d5db09e0901201356r1cafa64aud71de1a8c2d28cef@mail.gmail.com>	<3d5db09e0901201420v2195969dm5261db800741c892@mail.gmail.com>	<269388e30901201433p2e8233e9l4561b10088b18118@mail.gmail.com>	<c893b8530901201443r123cd383w3ec6e35e5d505d49@mail.gmail.com>	<49765E86.605@lshift.net>	<9F62222D-82AD-4CB1-9FDA-668ED6D797B4@gmail.com>	<3d5db09e0901221407p21994b0ck880062a66c6f8536@mail.gmail.com>	<497A07F9.9020907@lshift.net>	<4983B7EB.5070500@interactivemediums.com>	<498409CD.6060600@lshift.net>
	<921b71e30901311048k3a96f0c8o7a303b1b89e16d99@mail.gmail.com>
Message-ID: <4984A903.7060804@lshift.net>

Dave Farkas wrote:

> Here is what i happens when i run rabbitmqctl out of /user/sbin:
> 
> [root at db1 sbin]# ./rabbitmqctl status
> Status of node rabbit at db1 ...
> {badrpc,nodedown}
> ...done.
> 
> Is there anything else I should try?

The following may help us track down the problem:

1) stop rabbit (just kill the process if everything else fails)

2) kill the 'epmd' process

3) start epmd in non-daemon and debugging mode and capture its logs - 
you can do that as any user:
   epmd -d > /tmp/epmd.log 2>&1 &

4) start the rabbitmq server in the normal way, e.g.
   sudo /etc/init.d/rabbitmq-server start

5) run the rabbitmqctl command in the normal way, e.g.
   sudo rabbitmqctl status

6) stop epmd by killing the process

7) send me the /tmp/epmd.log file


Here's what the log file looks for me when I do the above:

epmd: Sat Jan 31 19:30:19 2009: epmd running - daemon = 0
epmd: Sat Jan 31 19:30:32 2009: ** got ALIVE2_REQ
epmd: Sat Jan 31 19:30:32 2009: registering 'rabbitmq_multi21852:3', 
port 40125
epmd: Sat Jan 31 19:30:32 2009: type 77 proto 0 highvsn 5 lowvsn 5
epmd: Sat Jan 31 19:30:32 2009: ** sent ALIVE2_RESP for 
"rabbitmq_multi21852"
epmd: Sat Jan 31 19:30:32 2009: ** got PORT2_REQ
epmd: Sat Jan 31 19:30:32 2009: ** sent PORT2_RESP (error) for "rabbit"
epmd: Sat Jan 31 19:30:32 2009: ** got PORT2_REQ
epmd: Sat Jan 31 19:30:32 2009: ** sent PORT2_RESP (error) for "rabbit"
epmd: Sat Jan 31 19:30:32 2009: ** got ALIVE2_REQ
epmd: Sat Jan 31 19:30:32 2009: registering 'rabbit:3', port 45735
epmd: Sat Jan 31 19:30:32 2009: type 77 proto 0 highvsn 5 lowvsn 5
epmd: Sat Jan 31 19:30:32 2009: ** sent ALIVE2_RESP for "rabbit"
epmd: Sat Jan 31 19:30:33 2009: ** got PORT2_REQ
epmd: Sat Jan 31 19:30:33 2009: ** sent PORT2_RESP (ok) for "rabbit"
epmd: Sat Jan 31 19:30:33 2009: unregistering 'rabbitmq_multi21852:3', 
port 40125
epmd: Sat Jan 31 19:30:48 2009: ** got ALIVE2_REQ
epmd: Sat Jan 31 19:30:48 2009: registering 'rabbitmqctl21934:1', port 59932
epmd: Sat Jan 31 19:30:48 2009: type 77 proto 0 highvsn 5 lowvsn 5
epmd: Sat Jan 31 19:30:48 2009: ** sent ALIVE2_RESP for "rabbitmqctl21934"
epmd: Sat Jan 31 19:30:48 2009: ** got PORT2_REQ
epmd: Sat Jan 31 19:30:48 2009: ** sent PORT2_RESP (ok) for "rabbit"
epmd: Sat Jan 31 19:30:48 2009: unregistering 'rabbitmqctl21934:1', port 
59932

I suspect your log file will look substantially different, unless the 
above steps happen to coincidentally "fix" the problem.


Regards,

Matthias.



From dave at interactivemediums.com  Sat Jan 31 20:13:05 2009
From: dave at interactivemediums.com (Dave Farkas)
Date: Sat, 31 Jan 2009 14:13:05 -0600
Subject: [rabbitmq-discuss] getting started, broker runs;
	can't get status
In-Reply-To: <4984A903.7060804@lshift.net>
References: <3d5db09e0901201356r1cafa64aud71de1a8c2d28cef@mail.gmail.com>
	<c893b8530901201443r123cd383w3ec6e35e5d505d49@mail.gmail.com>
	<49765E86.605@lshift.net>
	<9F62222D-82AD-4CB1-9FDA-668ED6D797B4@gmail.com>
	<3d5db09e0901221407p21994b0ck880062a66c6f8536@mail.gmail.com>
	<497A07F9.9020907@lshift.net>
	<4983B7EB.5070500@interactivemediums.com>
	<498409CD.6060600@lshift.net>
	<921b71e30901311048k3a96f0c8o7a303b1b89e16d99@mail.gmail.com>
	<4984A903.7060804@lshift.net>
Message-ID: <921b71e30901311213h5c9b072ftff66b3addd2a0466@mail.gmail.com>

Matthias,

> The following may help us track down the problem:
>
> 1) stop rabbit (just kill the process if everything else fails)
>
> 2) kill the 'epmd' process
>
> 3) start epmd in non-daemon and debugging mode and capture its logs - you
> can do that as any user:
>  epmd -d > /tmp/epmd.log 2>&1 &
>
> 4) start the rabbitmq server in the normal way, e.g.
>  sudo /etc/init.d/rabbitmq-server start
>
> 5) run the rabbitmqctl command in the normal way, e.g.
>  sudo rabbitmqctl status
>
> 6) stop epmd by killing the process
>
> 7) send me the /tmp/epmd.log file
>
>
> Here's what the log file looks for me when I do the above:
>
> epmd: Sat Jan 31 19:30:19 2009: epmd running - daemon = 0
> epmd: Sat Jan 31 19:30:32 2009: ** got ALIVE2_REQ
> epmd: Sat Jan 31 19:30:32 2009: registering 'rabbitmq_multi21852:3', port
> 40125
> epmd: Sat Jan 31 19:30:32 2009: type 77 proto 0 highvsn 5 lowvsn 5
> epmd: Sat Jan 31 19:30:32 2009: ** sent ALIVE2_RESP for
> "rabbitmq_multi21852"
> epmd: Sat Jan 31 19:30:32 2009: ** got PORT2_REQ
> epmd: Sat Jan 31 19:30:32 2009: ** sent PORT2_RESP (error) for "rabbit"
> epmd: Sat Jan 31 19:30:32 2009: ** got PORT2_REQ
> epmd: Sat Jan 31 19:30:32 2009: ** sent PORT2_RESP (error) for "rabbit"
> epmd: Sat Jan 31 19:30:32 2009: ** got ALIVE2_REQ
> epmd: Sat Jan 31 19:30:32 2009: registering 'rabbit:3', port 45735
> epmd: Sat Jan 31 19:30:32 2009: type 77 proto 0 highvsn 5 lowvsn 5
> epmd: Sat Jan 31 19:30:32 2009: ** sent ALIVE2_RESP for "rabbit"
> epmd: Sat Jan 31 19:30:33 2009: ** got PORT2_REQ
> epmd: Sat Jan 31 19:30:33 2009: ** sent PORT2_RESP (ok) for "rabbit"
> epmd: Sat Jan 31 19:30:33 2009: unregistering 'rabbitmq_multi21852:3', port
> 40125
> epmd: Sat Jan 31 19:30:48 2009: ** got ALIVE2_REQ
> epmd: Sat Jan 31 19:30:48 2009: registering 'rabbitmqctl21934:1', port 59932
> epmd: Sat Jan 31 19:30:48 2009: type 77 proto 0 highvsn 5 lowvsn 5
> epmd: Sat Jan 31 19:30:48 2009: ** sent ALIVE2_RESP for "rabbitmqctl21934"
> epmd: Sat Jan 31 19:30:48 2009: ** got PORT2_REQ
> epmd: Sat Jan 31 19:30:48 2009: ** sent PORT2_RESP (ok) for "rabbit"
> epmd: Sat Jan 31 19:30:48 2009: unregistering 'rabbitmqctl21934:1', port
> 59932
>
> I suspect your log file will look substantially different, unless the above
> steps happen to coincidentally "fix" the problem.
>
>
> Regards,
>
> Matthias.
>
Here is the epmd log:

epmd: Sat Jan 31 13:58:22 2009: epmd running - daemon = 0
epmd: Sat Jan 31 13:58:54 2009: ** got ALIVE2_REQ
epmd: Sat Jan 31 13:58:54 2009: registering 'rabbitmq_multi23327:1', port 58232
epmd: Sat Jan 31 13:58:54 2009: type 77 proto 0 highvsn 5 lowvsn 5
epmd: Sat Jan 31 13:58:54 2009: ** sent ALIVE2_RESP for "rabbitmq_multi23327"
epmd: Sat Jan 31 13:59:01 2009: ** got ALIVE2_REQ
epmd: Sat Jan 31 13:59:01 2009: registering 'rabbit:2', port 58362
epmd: Sat Jan 31 13:59:01 2009: type 77 proto 0 highvsn 5 lowvsn 5
epmd: Sat Jan 31 13:59:01 2009: ** sent ALIVE2_RESP for "rabbit"
epmd: Sat Jan 31 14:06:46 2009: unregistering 'rabbitmq_multi23327:1',
port 58232
epmd: Sat Jan 31 14:06:46 2009: ** got ALIVE2_REQ
epmd: Sat Jan 31 14:06:46 2009: registering 'rabbitmqctl23452:2', port 50042
epmd: Sat Jan 31 14:06:46 2009: type 77 proto 0 highvsn 5 lowvsn 5
epmd: Sat Jan 31 14:06:46 2009: ** sent ALIVE2_RESP for "rabbitmqctl23452"
epmd: Sat Jan 31 14:06:53 2009: unregistering 'rabbitmqctl23452:2', port 50042

Thanks,
Dave



From matthias at lshift.net  Sat Jan 31 20:51:50 2009
From: matthias at lshift.net (Matthias Radestock)
Date: Sat, 31 Jan 2009 20:51:50 +0000
Subject: [rabbitmq-discuss] getting started, broker runs;
	can't get status
In-Reply-To: <921b71e30901311213h5c9b072ftff66b3addd2a0466@mail.gmail.com>
References: <3d5db09e0901201356r1cafa64aud71de1a8c2d28cef@mail.gmail.com>	<c893b8530901201443r123cd383w3ec6e35e5d505d49@mail.gmail.com>	<49765E86.605@lshift.net>	<9F62222D-82AD-4CB1-9FDA-668ED6D797B4@gmail.com>	<3d5db09e0901221407p21994b0ck880062a66c6f8536@mail.gmail.com>	<497A07F9.9020907@lshift.net>	<4983B7EB.5070500@interactivemediums.com>	<498409CD.6060600@lshift.net>	<921b71e30901311048k3a96f0c8o7a303b1b89e16d99@mail.gmail.com>	<4984A903.7060804@lshift.net>
	<921b71e30901311213h5c9b072ftff66b3addd2a0466@mail.gmail.com>
Message-ID: <4984B9E6.5050804@lshift.net>

Dave,

Dave Farkas wrote:
> epmd: Sat Jan 31 13:58:22 2009: epmd running - daemon = 0
> [...]

This does look remarkably similar to the problem Dmitriy identified last 
year - see http://somic.org/2008/04/22/snoopy-fubars-erlang/

Specifically, your epmd log shows the node registration traffic 
(ALIVE2_{REQ,RESP}) but no query traffic (PORT2_{REQ,RESP}), and the 
other symptoms are the same too.

So my suggestion would be to check for the presence of a snoopy or 
similar software on your machine.


Matthias.



From dmitriy.samovskiy at cohesiveft.com  Sat Jan 31 21:07:57 2009
From: dmitriy.samovskiy at cohesiveft.com (Dmitriy Samovskiy)
Date: Sat, 31 Jan 2009 15:07:57 -0600
Subject: [rabbitmq-discuss] getting started, broker runs;
	can't get status
In-Reply-To: <4984B9E6.5050804@lshift.net>
References: <3d5db09e0901201356r1cafa64aud71de1a8c2d28cef@mail.gmail.com>	<c893b8530901201443r123cd383w3ec6e35e5d505d49@mail.gmail.com>	<49765E86.605@lshift.net>	<9F62222D-82AD-4CB1-9FDA-668ED6D797B4@gmail.com>	<3d5db09e0901221407p21994b0ck880062a66c6f8536@mail.gmail.com>	<497A07F9.9020907@lshift.net>	<4983B7EB.5070500@interactivemediums.com>	<498409CD.6060600@lshift.net>	<921b71e30901311048k3a96f0c8o7a303b1b89e16d99@mail.gmail.com>	<4984A903.7060804@lshift.net>	<921b71e30901311213h5c9b072ftff66b3addd2a0466@mail.gmail.com>
	<4984B9E6.5050804@lshift.net>
Message-ID: <4984BDAD.9040502@cohesiveft.com>



Matthias Radestock wrote:
> Dave,
> 
> Dave Farkas wrote:
>> epmd: Sat Jan 31 13:58:22 2009: epmd running - daemon = 0
>> [...]
> 
> This does look remarkably similar to the problem Dmitriy identified last 
> year - see http://somic.org/2008/04/22/snoopy-fubars-erlang/
> 
> Specifically, your epmd log shows the node registration traffic 
> (ALIVE2_{REQ,RESP}) but no query traffic (PORT2_{REQ,RESP}), and the 
> other symptoms are the same too.
To add more context. The moment I saw a post from Matthias with output from his run of 
epmd, I remembered the path how I got to snoopy.

It placed something in /etc/ld.preload or set LD_PRELOAD env var. Can you check if either 
is set?

Also, can you check SELinux? I am not a SELinux expert, but check out these links:

http://www.revsys.com/writings/quicktips/turn-off-selinux.html
http://etbe.coker.com.au/2008/10/29/jabber/

Or search google for "epmd selinux."

I have been trying to reproduce it on Fedora 10 32 bit but couldn't (if anyone is 
interested and has access to EC2, I tried public ami ami-2a5db943).

Like Matthias said above, it's got to be something that prevents epmd communications with 
nodes.

HTH,
Dmitriy



From matthias at lshift.net  Sat Jan 31 21:11:57 2009
From: matthias at lshift.net (Matthias Radestock)
Date: Sat, 31 Jan 2009 21:11:57 +0000
Subject: [rabbitmq-discuss] getting started, broker runs;
	can't get status
In-Reply-To: <4984BDAD.9040502@cohesiveft.com>
References: <3d5db09e0901201356r1cafa64aud71de1a8c2d28cef@mail.gmail.com>	<c893b8530901201443r123cd383w3ec6e35e5d505d49@mail.gmail.com>	<49765E86.605@lshift.net>	<9F62222D-82AD-4CB1-9FDA-668ED6D797B4@gmail.com>	<3d5db09e0901221407p21994b0ck880062a66c6f8536@mail.gmail.com>	<497A07F9.9020907@lshift.net>	<4983B7EB.5070500@interactivemediums.com>	<498409CD.6060600@lshift.net>	<921b71e30901311048k3a96f0c8o7a303b1b89e16d99@mail.gmail.com>	<4984A903.7060804@lshift.net>	<921b71e30901311213h5c9b072ftff66b3addd2a0466@mail.gmail.com>	<4984B9E6.5050804@lshift.net>
	<4984BDAD.9040502@cohesiveft.com>
Message-ID: <4984BE9D.6080909@lshift.net>

Dmitriy,

Dmitriy Samovskiy wrote:
> Like Matthias said above, it's got to be something that prevents epmd 
> communications with nodes.

Right, but curiously it doesn't prevent epmd communication completely, 
i.e. the node registration traffic goes through but the query traffic 
doesn't.


Matthias.



From dmitriy.samovskiy at cohesiveft.com  Sat Jan 31 21:13:30 2009
From: dmitriy.samovskiy at cohesiveft.com (Dmitriy Samovskiy)
Date: Sat, 31 Jan 2009 15:13:30 -0600
Subject: [rabbitmq-discuss] getting started, broker runs;
	can't get status
In-Reply-To: <4984BDAD.9040502@cohesiveft.com>
References: <3d5db09e0901201356r1cafa64aud71de1a8c2d28cef@mail.gmail.com>	<c893b8530901201443r123cd383w3ec6e35e5d505d49@mail.gmail.com>	<49765E86.605@lshift.net>	<9F62222D-82AD-4CB1-9FDA-668ED6D797B4@gmail.com>	<3d5db09e0901221407p21994b0ck880062a66c6f8536@mail.gmail.com>	<497A07F9.9020907@lshift.net>	<4983B7EB.5070500@interactivemediums.com>	<498409CD.6060600@lshift.net>	<921b71e30901311048k3a96f0c8o7a303b1b89e16d99@mail.gmail.com>	<4984A903.7060804@lshift.net>	<921b71e30901311213h5c9b072ftff66b3addd2a0466@mail.gmail.com>	<4984B9E6.5050804@lshift.net>
	<4984BDAD.9040502@cohesiveft.com>
Message-ID: <4984BEFA.1050709@cohesiveft.com>



> It placed something in /etc/ld.preload or set LD_PRELOAD env var. Can you check if either 
> is set?
correction: /etc/ld.so.preload



From dmitriy.samovskiy at cohesiveft.com  Sat Jan 31 21:38:36 2009
From: dmitriy.samovskiy at cohesiveft.com (Dmitriy Samovskiy)
Date: Sat, 31 Jan 2009 15:38:36 -0600
Subject: [rabbitmq-discuss] getting started, broker runs;
	can't get status
In-Reply-To: <4984BE9D.6080909@lshift.net>
References: <3d5db09e0901201356r1cafa64aud71de1a8c2d28cef@mail.gmail.com>	<c893b8530901201443r123cd383w3ec6e35e5d505d49@mail.gmail.com>	<49765E86.605@lshift.net>	<9F62222D-82AD-4CB1-9FDA-668ED6D797B4@gmail.com>	<3d5db09e0901221407p21994b0ck880062a66c6f8536@mail.gmail.com>	<497A07F9.9020907@lshift.net>	<4983B7EB.5070500@interactivemediums.com>	<498409CD.6060600@lshift.net>	<921b71e30901311048k3a96f0c8o7a303b1b89e16d99@mail.gmail.com>	<4984A903.7060804@lshift.net>	<921b71e30901311213h5c9b072ftff66b3addd2a0466@mail.gmail.com>	<4984B9E6.5050804@lshift.net>
	<4984BDAD.9040502@cohesiveft.com> <4984BE9D.6080909@lshift.net>
Message-ID: <4984C4DC.1080105@cohesiveft.com>



Matthias Radestock wrote:
> Dmitriy,
> 
> Dmitriy Samovskiy wrote:
>> Like Matthias said above, it's got to be something that prevents epmd 
>> communications with nodes.
> 
> Right, but curiously it doesn't prevent epmd communication completely, 
> i.e. the node registration traffic goes through but the query traffic 
> doesn't.
Yep, the way I am reading this, ALIVE_REQ is alone on its connection, other commands use 
their own connections. So looks like the second connection always fails (and I assume 
ALIVE_REQ will always be the first one)?

http://github.com/mfoemmel/erlang-otp/blob/c6341282a575b4cdaa64c6f7013f9eab05fe0cf4/erts/epmd/src/epmd_srv.c


* In all but one case there is only one request for each connection made
* to this server so we can safely close the socket after sending the
* reply. The exception is ALIVE_REQ where we keep the connection
* open without sending any data. When we receive a "close" this is
* an indication that the Erlang node was terminated. The termination
* may have been "normal" or caused by a crash. The operating system
* ensure that the connection is closed either way.

* Incomplete packets are thrown away after a timout. The Erlang node
* doing the request is responsible for completing in it in a reasonable time.
*
* Note that if the server gets busy it may not have time to
* process all requests for connection. The "accept()" function
* will on most operating systems silently refuse to accept more
* than 5 outstanding requests. It is the client's responsibility
* to retry the request a number of times with random time interval.
* The "-debug" flag will insert a delay so you can test this
* behaviour.
*
* FIXME: In this code we assume that the packets we send on each
* socket is so small that a "write()" never block
*
* FIXME: We never restarts a read or write that was terminated
* by an interrupt. Do we need to?



From matthias at lshift.net  Sat Jan 31 23:48:33 2009
From: matthias at lshift.net (Matthias Radestock)
Date: Sat, 31 Jan 2009 23:48:33 +0000
Subject: [rabbitmq-discuss] getting started, broker runs;
	can't get status
In-Reply-To: <4984C4DC.1080105@cohesiveft.com>
References: <3d5db09e0901201356r1cafa64aud71de1a8c2d28cef@mail.gmail.com>	<c893b8530901201443r123cd383w3ec6e35e5d505d49@mail.gmail.com>	<49765E86.605@lshift.net>	<9F62222D-82AD-4CB1-9FDA-668ED6D797B4@gmail.com>	<3d5db09e0901221407p21994b0ck880062a66c6f8536@mail.gmail.com>	<497A07F9.9020907@lshift.net>	<4983B7EB.5070500@interactivemediums.com>	<498409CD.6060600@lshift.net>	<921b71e30901311048k3a96f0c8o7a303b1b89e16d99@mail.gmail.com>	<4984A903.7060804@lshift.net>	<921b71e30901311213h5c9b072ftff66b3addd2a0466@mail.gmail.com>	<4984B9E6.5050804@lshift.net>	<4984BDAD.9040502@cohesiveft.com>
	<4984BE9D.6080909@lshift.net> <4984C4DC.1080105@cohesiveft.com>
Message-ID: <4984E351.5030202@lshift.net>

Dmitriy, Dave, Christopher,

Dmitriy Samovskiy wrote:
> Yep, the way I am reading this, ALIVE_REQ is alone on its connection, 
> other commands use their own connections. So looks like the second 
> connection always fails (and I assume ALIVE_REQ will always be the first 
> one)?

Hmmm. This particular FIXME in the epmd code caught my attention.

> * FIXME: In this code we assume that the packets we send on each
> * socket is so small that a "write()" never block

...and looking a the code I don't think it deals with partial packets on 
read particularly well either. I could be wrong though.

I wonder whether the disabling of Nagle in 1.5.1 (which was enabled in 
1.5.0 due to a bug) might cause the server to fragment packets and thus 
upset epmd.

This might also explain the problems Christopher was seeing. So ...


Dave, Christopher, to test the above theory, please re-enable Nagle by 
changing the following lines in the rabbitmq-server script from

[ "x" = "x$RABBITMQ_SERVER_ERL_ARGS" ] && RABBITMQ_SERVER_ERL_ARGS="+K 
true +A30 \
-kernel inet_default_listen_options 
[{nodelay,true},{sndbuf,16384},{recbuf,4096}] \
-kernel inet_default_connect_options [{nodelay,true}]"

to

[ "x" = "x$RABBITMQ_SERVER_ERL_ARGS" ] && RABBITMQ_SERVER_ERL_ARGS="+K 
true +A30"

(Alternatively you can override the value by setting 
RABBITMQ_SERVER_ERL_ARGS in your shell or SERVER_ERL_ARGS in 
/etc/default/rabbitmq)


Then try starting the server and invoking rabbitmqctl.


Matthias.



From angus.davis at gmail.com  Sat Jan 31 23:54:14 2009
From: angus.davis at gmail.com (Angus Davis)
Date: Sat, 31 Jan 2009 15:54:14 -0800
Subject: [rabbitmq-discuss] RabbitMQ or other AMQP Client on Embedded Systems
Message-ID: <4984E4A6.8040709@gmail.com>

Hello,
I am new to RabbitMQ, but am curious if it could be used in an embedded 
systems environment to publish messages.  We have a network of 
environmental sensors in various locations that output real-time wind 
information using RS-232 Serial.  We have an embedded device connected 
to the sensor that uses the Lantronix xPort embedded device server to 
convert serial to Ethernet (http://tinyurl.com/3toe4).  Today, these 
distributed devices connect via TCP over the Internet to a centrally 
located home server and just constantly print out their information 
every couple seconds, which we then process and log as appropriate in a 
database, which is subsequently polled by Web-based clients to show near 
real-time updates form the sensors.  Instead of this architecture, we 
think it might be advantageous to use RabbitMQ to publish the messages, 
giving us greater control and flexibility.  Doing so requires an AMQP 
client, either running on the embedded device server, or on some other 
component we run in the environment at the location of the remote 
sensor, where today we do not have any traditional PC (due to cost 
reasons -- we have only a DSL modem, router and our embedded sensor 
device).  We could consider, for example, a Linksys WRT54G running 
OpenWRT Linux - does anyone have experience running RabbitMQ or another 
RabbitMQ-compatible AMQP client in such an environment, perhaps on an 
Linksys WRT54G or similar embedded device?  The advantage of the OpenWRT 
route is that we could avoid custom firmware hacking on the Lantronix, 
which uses a proprietary environment called DSTni.  Thanks in advance 
for any tips or pointers on AMQP clients in such an environment.  Also, 
if this is something someone would be interested in tackling on a 
consulting/contractor basis, let me know, as I would be happy to fund a 
RabbitMQ port to OpenWRT (or better option) if the cost were reasonable 
and it would benefit the community.  Thanks,
-angus



