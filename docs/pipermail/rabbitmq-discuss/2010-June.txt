From donovanhide at gmail.com  Tue Jun  1 08:22:11 2010
From: donovanhide at gmail.com (Donovan)
Date: Tue, 1 Jun 2010 00:22:11 -0700 (PDT)
Subject: [rabbitmq-discuss] rabbitmq-jsonrpc-channel on port 80
Message-ID: <50c57ea5-495c-45d6-86b6-3ee13241e726@l6g2000vbo.googlegroups.com>

Hi,

I'm trying to set up rabbit_mochiweb to be served on port 80 so that I
can invoke JSON-RPC methods without any firewall configuration. On
Lucid Lynx I configure /etc/rabbitmq/rabbitmq.conf:

[
    {rabbit_mochiweb, [{port, 80}]}
].

and get:

Error: {node_start_failed,normal}

Crash dump was written to: erl_crash.dump
Kernel pid terminated (application_controller)
({application_start_failure,rabbit_mochiweb,{shutdown,
{rabbit_mochiweb_app,start,[normal,[]]}}})

If I change the port to any value above 1023, it works, which makes me
think this a running as root issue. Any ideas how to make this work?

Cheers,
Donovan.


From majek04 at gmail.com  Tue Jun  1 12:25:26 2010
From: majek04 at gmail.com (Marek Majkowski)
Date: Tue, 1 Jun 2010 12:25:26 +0100
Subject: [rabbitmq-discuss] rabbitmq-jsonrpc-channel on port 80
In-Reply-To: <50c57ea5-495c-45d6-86b6-3ee13241e726@l6g2000vbo.googlegroups.com>
References: <50c57ea5-495c-45d6-86b6-3ee13241e726@l6g2000vbo.googlegroups.com>
Message-ID: <AANLkTim9dwSkSxd0ON1qYhOj2Ri6xMNl6CLdvYoAp1Fq@mail.gmail.com>

On Tue, Jun 1, 2010 at 08:22, Donovan <donovanhide at gmail.com> wrote:
> I'm trying to set up rabbit_mochiweb to be served on port 80 so that I
> can invoke JSON-RPC methods without any firewall configuration. On
> Lucid Lynx I configure /etc/rabbitmq/rabbitmq.conf:
>
> [
> ? ?{rabbit_mochiweb, [{port, 80}]}
> ].
>
> If I change the port to any value above 1023, it works, which makes me
> think this a running as root issue. Any ideas how to make this work?

Hi,

Rabbitmq is starting as an unprivileged user, so it can't bind to ports
less than 1024. I'd suggest using some intermediate layer for that,
maybe haproxy?

Steps:
apt-get install haproxy

Edit /etc/default/haproxy to enable it.
Modify config, to something like

global
        maxconn 2000
        user haproxy
        group haproxy
        daemon

listen  http-server 0.0.0.0:80
        mode    http
        balance roundrobin
        contimeout      5000
        clitimeout      50000
        srvtimeout      50000
        server  inst00 127.0.0.1:8000 check inter 2000 fall 3

Change 8000 to whatever port you need, like 55672.

Cheers,
  Marek Majkowski


From sh at defuze.org  Tue Jun  1 12:35:55 2010
From: sh at defuze.org (Sylvain Hellegouarch)
Date: Tue, 1 Jun 2010 13:35:55 +0200
Subject: [rabbitmq-discuss] detecting publish failure across restart
In-Reply-To: <yrv4ctypnq0el.fsf@dwragg.eng.vmware.com>
References: <28712608.post@talk.nabble.com>
	<yrv4cpr0cyznu.fsf@dwragg.eng.vmware.com>
	<AANLkTilt2b_eawaZM5j3A7bP7mu7P0dKYtdXf2CTXIDO@mail.gmail.com>
	<yrv4ctypnq0el.fsf@dwragg.eng.vmware.com>
Message-ID: <AANLkTinJ-qg3BDFHdLFEbaI1Qafb66x1Jkm4ONF6K0Qz@mail.gmail.com>

On Mon, May 31, 2010 at 10:30 PM, David Wragg <david at rabbitmq.com> wrote:

> Hi Sylvain,
>
> Sylvain Hellegouarch <sh at defuze.org> writes:
> > I'm curious, in the general case, what's the cost of using a transaction?
> > Does it consume more resources? Roughly, what takes place within
> > RabbitMQ?
>
> There is indeed a cost associated with a transaction.  One source of
> overhead is the fact that the AMQP tx.commit method is synchronous, and
> so involves a round-trip over the network to the server.  Another is the
> fact that when the server commits a transaction, it must make sure that
> the relevant effects of a transaction have reached stable storage
> (e.g. that a persistent message that reaches a queue has been stored on
> disk).  My colleagues might be able to list other costs.
>
> It's difficult to quantify these costs in general, but I think its fair
> to say that they have a significant impact compared with
> non-transactional uses of AMQP.  The MulticastMain tool included with
> our Java client library has command line options that allow the impact
> to be measured in various scenarios.
>
> David
>

Cheers for that feedback. Much appreciated. I will try to perform some
measurements and see both the server and client behave.


-- 
- Sylvain
http://www.defuze.org
http://twitter.com/lawouach
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20100601/29e50079/attachment.htm 

From majek04 at gmail.com  Tue Jun  1 13:07:18 2010
From: majek04 at gmail.com (Marek Majkowski)
Date: Tue, 1 Jun 2010 13:07:18 +0100
Subject: [rabbitmq-discuss] RabbitMQ does not start with rabbit-status
	plugin - broker is running
In-Reply-To: <B36BE88613F4AB40B178E7F6105136A205E99853@gws-ex2.gws-muenster.local>
References: <B36BE88613F4AB40B178E7F6105136A205E99853@gws-ex2.gws-muenster.local>
Message-ID: <AANLkTinAoVLvdNsjQ8Pr1doCC4fVSpCrVikukq-0QFq_@mail.gmail.com>

On Mon, May 31, 2010 at 13:28, Steverding, Kai <Kai.Steverding at gws.ms> wrote:
> Hi !
>
> I have a Rabbit node running on Ubtuntu 10.04 64 bit (running RabbitMQ
> 1.7.2). When I put the rabbit-status plugin into the plugin dir and do a
> rabbitmq-active-plugins, the rabbitmq does not start anymore.

I tried to repeat that on Ubuntu 10.04 (Lucid Lynx) 64bit, but it
works fine for me.
Here are my steps:

sudo apt-get install rabbitmq-server curl
cd /tmp
wget http://dev.lshift.net/majek/rabbitmq-status_1.7.0.tar.gz
sudo mkdir /usr/lib/rabbitmq/lib/rabbitmq_server-1.7.2/plugins
cd /usr/lib/rabbitmq/lib/rabbitmq_server-1.7.2/plugins
sudo tar xvzf ~/rabbitmq-status_1.7.0.tar.gz
sudo rabbitmq-activate-plugins
sudo /etc/init.d/rabbitmq-server restart

And RabbitMQ happily lisetns to http://guest:guest at 127.0.0.1:55672/

Cheers,
  Marek Majkowski


From Kai.Steverding at gws.ms  Tue Jun  1 13:21:37 2010
From: Kai.Steverding at gws.ms (Steverding, Kai)
Date: Tue, 1 Jun 2010 14:21:37 +0200
Subject: [rabbitmq-discuss] RabbitMQ does not start with rabbit-status
	plugin - broker is running
In-Reply-To: <AANLkTinAoVLvdNsjQ8Pr1doCC4fVSpCrVikukq-0QFq_@mail.gmail.com>
References: <B36BE88613F4AB40B178E7F6105136A205E99853@gws-ex2.gws-muenster.local>
	<AANLkTinAoVLvdNsjQ8Pr1doCC4fVSpCrVikukq-0QFq_@mail.gmail.com>
Message-ID: <B36BE88613F4AB40B178E7F6105136A205E9986E@gws-ex2.gws-muenster.local>

Strange !
I did the same on another Ubuntu system without rabbit and get the same error. I followed your instructions step by step

sudo apt-get install rabbitmq-server
Paketlisten werden gelesen... Fertig
Abh?ngigkeitsbaum wird aufgebaut       
Status-Informationen einlesen... Fertig
rabbitmq-server ist schon die neueste Version.
Die folgenden Pakete wurden automatisch installiert und werden nicht l?nger ben?tigt:
  libmysqlclient15off libapr1 libaprutil1-ldap netcat-openbsd libaprutil1-dbd-sqlite3 ssl-cert libaprutil1
Verwenden Sie ?apt-get autoremove?, um sie zu entfernen.
0 aktualisiert, 0 neu installiert, 0 zu entfernen und 11 nicht aktualisiert.
1 nicht vollst?ndig installiert oder entfernt.
Nach dieser Operation werden 0B Plattenplatz zus?tzlich benutzt.
Richte rabbitmq-server ein (1.7.2-1ubuntu1) ...
Starting rabbitmq-server: SUCCESS
rabbitmq-server.

root at rabbit-cl1:~#
root at rabbit-cl1:~# cd /tmp
root at rabbit-cl1:/tmp# wget http://dev.lshift.net/majek/rabbitmq-status_1.7.0.tar.gz
--2010-06-01 14:16:11--  http://dev.lshift.net/majek/rabbitmq-status_1.7.0.tar.gz
Verbindungsaufbau zu 10.10.1.1:3128... verbunden.
Proxy Anforderung gesendet, warte auf Antwort... 200 OK
L?nge: 259243 (253K) [application/x-gzip]
In ??rabbitmq-status_1.7.0.tar.gz?? speichern.

100%[==========================================================================================>] 259.243     67,6K/s   in 3,7s    

2010-06-01 14:16:17 (67,6 KB/s) - ??rabbitmq-status_1.7.0.tar.gz?? gespeichert [259243/259243]
root at rabbit-cl1:/tmp# sudo mkdir /usr/lib/rabbitmq/lib/rabbitmq_server-1.7.2/plugins
root at rabbit-cl1:/tmp# cd /usr/lib/rabbitmq/lib/rabbitmq_server-1.7.2/plugins
root at rabbit-cl1:/usr/lib/rabbitmq/lib/rabbitmq_server-1.7.2/plugins# sudo tar xvzf /tmp/rabbitmq-status_1.7.0.tar.gz
rabbitmq-mochiweb.ez
mochiweb.ez
rabbit_status.ez
root at rabbit-cl1:/usr/lib/rabbitmq/lib/rabbitmq_server-1.7.2/plugins
root at rabbit-cl1:/usr/lib/rabbitmq/lib/rabbitmq_server-1.7.2/plugins# sudo rabbitmq-activate-plugins
root at rabbit-cl1:/usr/lib/rabbitmq/lib/rabbitmq_server-1.7.2/plugins# /etc/init.d/rabbitmq-server restart
Restarting rabbitmq-server: FAILED - check /var/log/rabbitmq/startup_log, _err
rabbitmq-server.
root at rabbit-cl1:/usr/lib/rabbitmq/lib/rabbitmq_server-1.7.2/plugins#

Mit freundlichen Gr??en
Kai Steverding

_________________________________________________
GWS Gesellschaft f?r Warenwirtschafts-Systeme mbH
Kr?gerweg 10 - 48155 M?nster
Kai Steverding
Branchensoftware-Entwicklung
Tel:   +49 (251) 7000-02
Fax:   +49 (251) 7000-3999
mailto:Kai.Steverding at gws.ms
Internet: http://www.gws.ms


GWS Gesellschaft f?r Warenwirtschafts-Systeme mbH
M?nster, M?nchen, N?rnberg, Leonberg
Gesch?ftsf?hrer: Dipl. Betriebswirt Helmut Benefader
Sitz: M?nster (Westf.)
Amtsgericht M?nster HRB 3844







-----Urspr?ngliche Nachricht-----
Von: Marek Majkowski [mailto:majek04 at gmail.com] 
Gesendet: Dienstag, 1. Juni 2010 14:07
An: Steverding, Kai
Cc: rabbitmq-discuss at lists.rabbitmq.com
Betreff: Re: [rabbitmq-discuss] RabbitMQ does not start with rabbit-status plugin - broker is running

On Mon, May 31, 2010 at 13:28, Steverding, Kai <Kai.Steverding at gws.ms> wrote:
> Hi !
>
> I have a Rabbit node running on Ubtuntu 10.04 64 bit (running RabbitMQ
> 1.7.2). When I put the rabbit-status plugin into the plugin dir and do a
> rabbitmq-active-plugins, the rabbitmq does not start anymore.

I tried to repeat that on Ubuntu 10.04 (Lucid Lynx) 64bit, but it
works fine for me.
Here are my steps:

sudo apt-get install rabbitmq-server curl
cd /tmp
wget http://dev.lshift.net/majek/rabbitmq-status_1.7.0.tar.gz
sudo mkdir /usr/lib/rabbitmq/lib/rabbitmq_server-1.7.2/plugins
cd /usr/lib/rabbitmq/lib/rabbitmq_server-1.7.2/plugins
sudo tar xvzf ~/rabbitmq-status_1.7.0.tar.gz
sudo rabbitmq-activate-plugins
sudo /etc/init.d/rabbitmq-server restart

And RabbitMQ happily lisetns to http://guest:guest at 127.0.0.1:55672/

Cheers,
  Marek Majkowski

From donovanhide at gmail.com  Tue Jun  1 14:10:19 2010
From: donovanhide at gmail.com (Donovan)
Date: Tue, 1 Jun 2010 06:10:19 -0700 (PDT)
Subject: [rabbitmq-discuss] rabbitmq-jsonrpc-channel on port 80
In-Reply-To: <AANLkTim9dwSkSxd0ON1qYhOj2Ri6xMNl6CLdvYoAp1Fq@mail.gmail.com>
References: <50c57ea5-495c-45d6-86b6-3ee13241e726@l6g2000vbo.googlegroups.com>
	<AANLkTim9dwSkSxd0ON1qYhOj2Ri6xMNl6CLdvYoAp1Fq@mail.gmail.com>
Message-ID: <0aeafc4f-2d37-49c1-936c-cf2c38dfb5bd@z17g2000vbd.googlegroups.com>

Hi Marek,

thanks for getting back with that solution. I had already done a
similar proxy with nginx, but haproxy looks like a lighter weight
solution!

If I wanted to elevate the privileges of the rabbitmq user that gets
created with the ubuntu package, would that work? It seems a bit
counter-intuitive to have two web servers installed, when only one is
needed.

Cheers,
Donovan.

On Jun 1, 12:25?pm, Marek Majkowski <maje... at gmail.com> wrote:
> On Tue, Jun 1, 2010 at 08:22, Donovan <donovanh... at gmail.com> wrote:
> > I'm trying to set up rabbit_mochiweb to be served on port 80 so that I
> > can invoke JSON-RPC methods without any firewall configuration. On
> > Lucid Lynx I configure /etc/rabbitmq/rabbitmq.conf:
>
> > [
> > ? ?{rabbit_mochiweb, [{port, 80}]}
> > ].
>
> > If I change the port to any value above 1023, it works, which makes me
> > think this a running as root issue. Any ideas how to make this work?
>
> Hi,
>
> Rabbitmq is starting as an unprivileged user, so it can't bind to ports
> less than 1024. I'd suggest using some intermediate layer for that,
> maybe haproxy?
>
> Steps:
> apt-get install haproxy
>
> Edit /etc/default/haproxy to enable it.
> Modify config, to something like
>
> global
> ? ? ? ? maxconn 2000
> ? ? ? ? user haproxy
> ? ? ? ? group haproxy
> ? ? ? ? daemon
>
> listen ?http-server 0.0.0.0:80
> ? ? ? ? mode ? ?http
> ? ? ? ? balance roundrobin
> ? ? ? ? contimeout ? ? ?5000
> ? ? ? ? clitimeout ? ? ?50000
> ? ? ? ? srvtimeout ? ? ?50000
> ? ? ? ? server ?inst00 127.0.0.1:8000 check inter 2000 fall 3
>
> Change 8000 to whatever port you need, like 55672.
>
> Cheers,
> ? Marek Majkowski
>
> _______________________________________________
> rabbitmq-discuss mailing list
> rabbitmq-disc... at lists.rabbitmq.comhttp://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss


From matthew at rabbitmq.com  Tue Jun  1 14:28:39 2010
From: matthew at rabbitmq.com (Matthew Sackman)
Date: Tue, 1 Jun 2010 14:28:39 +0100
Subject: [rabbitmq-discuss] rabbitmq-jsonrpc-channel on port 80
In-Reply-To: <0aeafc4f-2d37-49c1-936c-cf2c38dfb5bd@z17g2000vbd.googlegroups.com>
References: <50c57ea5-495c-45d6-86b6-3ee13241e726@l6g2000vbo.googlegroups.com>
	<AANLkTim9dwSkSxd0ON1qYhOj2Ri6xMNl6CLdvYoAp1Fq@mail.gmail.com>
	<0aeafc4f-2d37-49c1-936c-cf2c38dfb5bd@z17g2000vbd.googlegroups.com>
Message-ID: <20100601132839.GB9109@rabbitmq.com>

On Tue, Jun 01, 2010 at 06:10:19AM -0700, Donovan wrote:
> thanks for getting back with that solution. I had already done a
> similar proxy with nginx, but haproxy looks like a lighter weight
> solution!

Err, no proxy required. iptables should be sufficient.

iptables -t nat -A PREROUTING -d 127.0.0.1 -p tcp --dport 80 -j DNAT --to-destination 127.0.0.1:55672

(or something like that!)

Matthew


From donovanhide at gmail.com  Tue Jun  1 15:32:51 2010
From: donovanhide at gmail.com (Donovan)
Date: Tue, 1 Jun 2010 07:32:51 -0700 (PDT)
Subject: [rabbitmq-discuss] rabbitmq-jsonrpc-channel on port 80
In-Reply-To: <20100601132839.GB9109@rabbitmq.com>
References: <50c57ea5-495c-45d6-86b6-3ee13241e726@l6g2000vbo.googlegroups.com>
	<AANLkTim9dwSkSxd0ON1qYhOj2Ri6xMNl6CLdvYoAp1Fq@mail.gmail.com> 
	<0aeafc4f-2d37-49c1-936c-cf2c38dfb5bd@z17g2000vbd.googlegroups.com> 
	<20100601132839.GB9109@rabbitmq.com>
Message-ID: <7bf19eaa-8868-4a43-89c0-0e808d868b5a@r9g2000vbk.googlegroups.com>

Hi Matthew,

thanks for the iptables pointer! Had to use the real ip address rather
than 127.0.0.1 to make it work:

sudo iptables -t nat -A PREROUTING -p tcp -d 172.16.200.10 --dport 80 -
j DNAT --to 172.16.200.10:55672

for some reason!

Cheers,
Donovan.

On Jun 1, 2:28?pm, Matthew Sackman <matt... at rabbitmq.com> wrote:
> On Tue, Jun 01, 2010 at 06:10:19AM -0700, Donovan wrote:
> > thanks for getting back with that solution. I had already done a
> > similar proxy with nginx, but haproxy looks like a lighter weight
> > solution!
>
> Err, no proxy required. iptables should be sufficient.
>
> iptables -t nat -A PREROUTING -d 127.0.0.1 -p tcp --dport 80 -j DNAT --to-destination 127.0.0.1:55672
>
> (or something like that!)
>
> Matthew
>
> _______________________________________________
> rabbitmq-discuss mailing list
> rabbitmq-disc... at lists.rabbitmq.comhttp://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss


From matthew at rabbitmq.com  Tue Jun  1 15:53:21 2010
From: matthew at rabbitmq.com (Matthew Sackman)
Date: Tue, 1 Jun 2010 15:53:21 +0100
Subject: [rabbitmq-discuss] Can the consumer know who sent the message?
In-Reply-To: <4C002704.5020705@uic.edu>
References: <C822E61F.A890%pdezwart@rubiconproject.com>
	<4C002704.5020705@uic.edu>
Message-ID: <20100601145321.GC9109@rabbitmq.com>

Hi Bob,

On Fri, May 28, 2010 at 03:26:44PM -0500, Bob Goldstein wrote:
> Is there a way for the message consumer to know the rabbitmq userid of
> the process that sent the message?

No, not by default, and intentially not by design. Of course, there's
nothing to stop you putting any information, including userid, into any
of the headers, property tables, or even the payload, when publishing a
message.

> I realize there is the props hash, which has a user_id attribute.
> But I believe props is filled in by the sender, so the sender
> could forge anything.

Yes, exactly. But non-repudiation is really something that AMQP isn't
trying to solve anyway - if you want that, then you need to layer all
sorts of extra crypto on top anyway.

> The best I can figure is to create a queue, and make sure that a
> particular sender is the only one with privs to write to that queue.
> However, that seems cumbersome, fragile, and not particularly scalable.

Well, see above about doing it "properly", but you could have something
like an rpc service which hands out private/anonymous queues to
publishers and forwards the queue name to the consumer which is then
able to subscribe to the queue. There you'd be relying on the queue name
from being unforgeable, and as you say, you'd probably want to set up
some additional restrictions so that only the publisher in question can
publish. Queues aren't /that/ heavyweight - 10s of thousands are
perfectly feasible, but it depends on quite what your scalability
requirements are.

Matthew


From majek04 at gmail.com  Tue Jun  1 16:05:09 2010
From: majek04 at gmail.com (Marek Majkowski)
Date: Tue, 1 Jun 2010 16:05:09 +0100
Subject: [rabbitmq-discuss] rabbitmq-jsonrpc-channel on port 80
In-Reply-To: <0aeafc4f-2d37-49c1-936c-cf2c38dfb5bd@z17g2000vbd.googlegroups.com>
References: <50c57ea5-495c-45d6-86b6-3ee13241e726@l6g2000vbo.googlegroups.com>
	<AANLkTim9dwSkSxd0ON1qYhOj2Ri6xMNl6CLdvYoAp1Fq@mail.gmail.com> 
	<0aeafc4f-2d37-49c1-936c-cf2c38dfb5bd@z17g2000vbd.googlegroups.com>
Message-ID: <AANLkTilQizYw9S2TQsSj0wHq2b9ACBs_qEF188xXeJE5@mail.gmail.com>

On Tue, Jun 1, 2010 at 14:10, Donovan <donovanhide at gmail.com> wrote:
> If I wanted to elevate the privileges of the rabbitmq user that gets
> created with the ubuntu package, would that work? It seems a bit
> counter-intuitive to have two web servers installed, when only one is
> needed.

Don't do that, running Rabbitmq as root is a bad idea.


Marek


From majek04 at gmail.com  Tue Jun  1 16:17:51 2010
From: majek04 at gmail.com (Marek Majkowski)
Date: Tue, 1 Jun 2010 16:17:51 +0100
Subject: [rabbitmq-discuss] RabbitMQ does not start with rabbit-status
	plugin - broker is running
In-Reply-To: <B36BE88613F4AB40B178E7F6105136A205E9986E@gws-ex2.gws-muenster.local>
References: <B36BE88613F4AB40B178E7F6105136A205E99853@gws-ex2.gws-muenster.local>
	<AANLkTinAoVLvdNsjQ8Pr1doCC4fVSpCrVikukq-0QFq_@mail.gmail.com> 
	<B36BE88613F4AB40B178E7F6105136A205E9986E@gws-ex2.gws-muenster.local>
Message-ID: <AANLkTiky4beFzoW0r76TlEmQi-5bB8AsfzremJf9DPrV@mail.gmail.com>

2010/6/1 Steverding, Kai <Kai.Steverding at gws.ms>:
> Strange !
> I did the same on another Ubuntu system without rabbit and get the same error. I followed your instructions step by step

That's strange.

Can you attach following logs (if they aren't too big):
/var/log/rabbitmq/rabbit.log
/var/log/rabbitmq/rabbit-sasl.log
/var/log/rabbitmq/startup_log
/var/log/rabbitmq/startup_err

Do you get the same issue without any plugins? To check:
sudo rabbitmq-deactivate-plugins
sudo /etc/init.d/rabbitmq-server restart


From donovanhide at gmail.com  Tue Jun  1 16:20:07 2010
From: donovanhide at gmail.com (Donovan)
Date: Tue, 1 Jun 2010 08:20:07 -0700 (PDT)
Subject: [rabbitmq-discuss] rabbitmq-jsonrpc-channel on port 80
In-Reply-To: <AANLkTilQizYw9S2TQsSj0wHq2b9ACBs_qEF188xXeJE5@mail.gmail.com>
References: <50c57ea5-495c-45d6-86b6-3ee13241e726@l6g2000vbo.googlegroups.com>
	<AANLkTim9dwSkSxd0ON1qYhOj2Ri6xMNl6CLdvYoAp1Fq@mail.gmail.com> 
	<0aeafc4f-2d37-49c1-936c-cf2c38dfb5bd@z17g2000vbd.googlegroups.com> 
	<AANLkTilQizYw9S2TQsSj0wHq2b9ACBs_qEF188xXeJE5@mail.gmail.com>
Message-ID: <9ef2a7e7-f29e-49db-aa0c-9dce3cc87d23@s41g2000vba.googlegroups.com>

Hi Marek,

I understand the perils of running as root, but Apache manages to
operate with port 80, maybe RabbitMQ's mochiweb part should be able
too?

This ended up being the most convenient for me:

sudo iptables -t nat -A PREROUTING -i eth0 -p tcp --dport 80 -j
REDIRECT --to-port 55672

Cheers,
Donovan.

On Jun 1, 4:05?pm, Marek Majkowski <maje... at gmail.com> wrote:
> On Tue, Jun 1, 2010 at 14:10, Donovan <donovanh... at gmail.com> wrote:
> > If I wanted to elevate the privileges of the rabbitmq user that gets
> > created with the ubuntu package, would that work? It seems a bit
> > counter-intuitive to have two web servers installed, when only one is
> > needed.
>
> Don't do that, running Rabbitmq as root is a bad idea.
>
> Marek
>
> _______________________________________________
> rabbitmq-discuss mailing list
> rabbitmq-disc... at lists.rabbitmq.comhttp://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss


From matthew at rabbitmq.com  Tue Jun  1 16:26:01 2010
From: matthew at rabbitmq.com (Matthew Sackman)
Date: Tue, 1 Jun 2010 16:26:01 +0100
Subject: [rabbitmq-discuss] rabbitmq-jsonrpc-channel on port 80
In-Reply-To: <9ef2a7e7-f29e-49db-aa0c-9dce3cc87d23@s41g2000vba.googlegroups.com>
References: <50c57ea5-495c-45d6-86b6-3ee13241e726@l6g2000vbo.googlegroups.com>
	<AANLkTim9dwSkSxd0ON1qYhOj2Ri6xMNl6CLdvYoAp1Fq@mail.gmail.com>
	<0aeafc4f-2d37-49c1-936c-cf2c38dfb5bd@z17g2000vbd.googlegroups.com>
	<AANLkTilQizYw9S2TQsSj0wHq2b9ACBs_qEF188xXeJE5@mail.gmail.com>
	<9ef2a7e7-f29e-49db-aa0c-9dce3cc87d23@s41g2000vba.googlegroups.com>
Message-ID: <20100601152601.GD9109@rabbitmq.com>

On Tue, Jun 01, 2010 at 08:20:07AM -0700, Donovan wrote:
> I understand the perils of running as root, but Apache manages to
> operate with port 80, maybe RabbitMQ's mochiweb part should be able
> too?

Yeah, I think at least one of the reasons behind AMQP default port of 5672
was to avoid such issues. Of course, once your broker starts running
embedded webservers, it's going to start causing pain.

Currently RabbitMQ lacks a "start up as root, open sockets and then drop
priviliges". It's unlikely to gain one too - I'm not sure if it's
possible to do in Erlang anyway - I've certainly not seen any Erlang-ish
interfaces to the whole "change my priviliges" APIs, and even if it was,
it's questionable if you'd want to do it - plugins should be treated as
much less thoroughly tested and thus less "safe" than the rest of the
broker anyway, and if they were basically able to do some execution as
root on booting of Rabbit, that would be quite alarming.

Yes, Apache/Postfix/Bind etc etc etc can do it, but they're doing that
for their major port - i.e. the port which those programs were designed
to be looking after anyway. The equiv would be us doing this for 5672,
were that required. I'm not aware of Apache/Postfix/Bind etc giving the
same treatment to untrusted plugins.

Certainly, I'd suggest iptables is your best bet for the time being.

Matthew


From nmichalakis at adconion.com  Tue Jun  1 16:46:59 2010
From: nmichalakis at adconion.com (Nikos Michalakis)
Date: Tue, 1 Jun 2010 11:46:59 -0400
Subject: [rabbitmq-discuss] how does the rabbitmq transport cope with WAN
	links?
Message-ID: <48B24296-C97F-498A-B6B2-BA573BB1E1C4@adconion.com>

Hi everyone,

I'm evaluating RabbitMQ to possibly replace our existing solution. We have 2 datacenters, one in the US, one in Europe and sometimes the link shows 1-10% packet loss (our RTT is about 200 ms). We have publishers and subscribers on both US+Europe. Our existing solution does not deal with packet loss very well. Our queues end up filling up and we have huge delays and/or dropped packets. We believe it might be that our solution is using RMI over a single TCP connection (among other things).

I was reading the RabbitMQ docs, but couldn't find many details on what exactly the underlying protocol is for sending messages between cluster nodes.

I 've seen that RabbitMQ relies on distributed Erlang over TCP, but is there more specific information on how links are made reliable in RabbitMQ? More particularly I'm looking to find out more details on how RabbitMQ configures its transports between cluster nodes. 

Are there single or multiple TCP connections between nodes? 

What happens when a TCP connection fails? Do nodes detect that event and try to reestablish the connection automatically? Distributed Erlang has APIs for detecting a node is down. Is that used in Rabbit?

Do connections rely on TCP to deal with packet loss or is there some Rabbit magic as well?

How are messages serialized into AMQP packets?

I found some useful information about WAN setups in this thread:
http://old.nabble.com/RabbitMQ-and-a-two-site-deployment-connected-via-WAN.-td28445648ef25704.html#a28445648
and I've read the Distributed Erlang docs, but not much info is there either.

I was hoping to get a better understanding of the transport with these questions.

many thanks,
nikos

From matthew at rabbitmq.com  Tue Jun  1 16:52:40 2010
From: matthew at rabbitmq.com (Matthew Sackman)
Date: Tue, 1 Jun 2010 16:52:40 +0100
Subject: [rabbitmq-discuss] how does the rabbitmq transport cope with
 WAN links?
In-Reply-To: <48B24296-C97F-498A-B6B2-BA573BB1E1C4@adconion.com>
References: <48B24296-C97F-498A-B6B2-BA573BB1E1C4@adconion.com>
Message-ID: <20100601155240.GE9109@rabbitmq.com>

Hi Nikos,

On Tue, Jun 01, 2010 at 11:46:59AM -0400, Nikos Michalakis wrote:
> I was reading the RabbitMQ docs, but couldn't find many details on what exactly the underlying protocol is for sending messages between cluster nodes.

AMQP over TCP.

> I 've seen that RabbitMQ relies on distributed Erlang over TCP, but is there more specific information on how links are made reliable in RabbitMQ? More particularly I'm looking to find out more details on how RabbitMQ configures its transports between cluster nodes. 

Clustering is intended for scalability only, and really needs to work in
a LAN situation, given the all-to-all connections made between erlang
nodes in a cluster. I think it's more likely you'll find utility in the
rabbitmq-shovel, which makes a broker look like a client, hence makes it
very easy to do store-and-forward (amongst other things).

We always rely on TCP.

> Are there single or multiple TCP connections between nodes? 

Normally single, in a clustering environment. But if you're using the
shovel then it'll be one per shovel configuration.

> What happens when a TCP connection fails? Do nodes detect that event and try to reestablish the connection automatically? Distributed Erlang has APIs for detecting a node is down. Is that used in Rabbit?

Yes and yes. And the shovel does that too.

> Do connections rely on TCP to deal with packet loss or is there some Rabbit magic as well?

TCP is a reliable transport by definition, and sorts out packet loss and
reording itself. We rely on that.

> How are messages serialized into AMQP packets?

The AMQP payload is totally opaque. The client APIs tend to present just
byte arrays to set a message payload.

Matthew


From matthew at rabbitmq.com  Tue Jun  1 16:57:03 2010
From: matthew at rabbitmq.com (Matthew Sackman)
Date: Tue, 1 Jun 2010 16:57:03 +0100
Subject: [rabbitmq-discuss] how does the rabbitmq transport cope with
 WAN links?
In-Reply-To: <20100601155240.GE9109@rabbitmq.com>
References: <48B24296-C97F-498A-B6B2-BA573BB1E1C4@adconion.com>
	<20100601155240.GE9109@rabbitmq.com>
Message-ID: <20100601155703.GF9109@rabbitmq.com>

On Tue, Jun 01, 2010 at 04:52:40PM +0100, Matthew Sackman wrote:
> Hi Nikos,
> 
> On Tue, Jun 01, 2010 at 11:46:59AM -0400, Nikos Michalakis wrote:
> > I was reading the RabbitMQ docs, but couldn't find many details on what exactly the underlying protocol is for sending messages between cluster nodes.
> 
> AMQP over TCP.

Err sorry, that's wrong. Erlang has its own externalisation format which
is described in some detail in
http://www.erlang.org/doc/apps/erts/erl_ext_dist.html

When we send messages between nodes in the cluster, we just rely on
Erlang to do its magic. If you're using the shovel, then that'll just be
AMQP over TCP.

Matthew


From jesse at wavemarket.com  Tue Jun  1 19:55:33 2010
From: jesse at wavemarket.com (Jesse Myers)
Date: Tue, 01 Jun 2010 11:55:33 -0700
Subject: [rabbitmq-discuss] detecting publish failure across restart
In-Reply-To: <AANLkTinJ-qg3BDFHdLFEbaI1Qafb66x1Jkm4ONF6K0Qz@mail.gmail.com>
References: <28712608.post@talk.nabble.com>	<yrv4cpr0cyznu.fsf@dwragg.eng.vmware.com>	<AANLkTilt2b_eawaZM5j3A7bP7mu7P0dKYtdXf2CTXIDO@mail.gmail.com>	<yrv4ctypnq0el.fsf@dwragg.eng.vmware.com>
	<AANLkTinJ-qg3BDFHdLFEbaI1Qafb66x1Jkm4ONF6K0Qz@mail.gmail.com>
Message-ID: <4C0557A5.6050709@wavemarket.com>

Likewise, I appreciate the feedback.

Can someone elaborate on the expected bottlenecks when using 
transactions? From what I've mocked up so far, it looks like the 
majority of the overhead is associated with tx.commit (no surprise 
there) and that I can get much better performance by batching messages 
within a single transaction. I also looked at running multiple tx.commit 
operations concurrently in different channels in different threads, but 
there doesn't actually appear to be any performance benefit to doing so. 
Am I right to conclude that only a single transaction is allowed at a 
time per connection?

If so, this suggests queuing up messages client side and having a single 
worker thread submit messages in batches. Does this sound reasonable?

Thanks,

Jesse

On 6/1/10 4:35 AM, Sylvain Hellegouarch wrote:
>
>
> On Mon, May 31, 2010 at 10:30 PM, David Wragg <david at rabbitmq.com 
> <mailto:david at rabbitmq.com>> wrote:
>
>     Hi Sylvain,
>
>     Sylvain Hellegouarch <sh at defuze.org <mailto:sh at defuze.org>> writes:
>     > I'm curious, in the general case, what's the cost of using a
>     transaction?
>     > Does it consume more resources? Roughly, what takes place within
>     > RabbitMQ?
>
>     There is indeed a cost associated with a transaction.  One source of
>     overhead is the fact that the AMQP tx.commit method is
>     synchronous, and
>     so involves a round-trip over the network to the server.  Another
>     is the
>     fact that when the server commits a transaction, it must make sure
>     that
>     the relevant effects of a transaction have reached stable storage
>     (e.g. that a persistent message that reaches a queue has been
>     stored on
>     disk).  My colleagues might be able to list other costs.
>
>     It's difficult to quantify these costs in general, but I think its
>     fair
>     to say that they have a significant impact compared with
>     non-transactional uses of AMQP.  The MulticastMain tool included with
>     our Java client library has command line options that allow the impact
>     to be measured in various scenarios.
>
>     David
>
>
> Cheers for that feedback. Much appreciated. I will try to perform some 
> measurements and see both the server and client behave.
>
>
> -- 
> - Sylvain
> http://www.defuze.org
> http://twitter.com/lawouach
>
>
> _______________________________________________
> rabbitmq-discuss mailing list
> rabbitmq-discuss at lists.rabbitmq.com
> http://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss
>    
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20100601/f24d17c5/attachment.htm 

From nmichalakis at adconion.com  Tue Jun  1 20:05:13 2010
From: nmichalakis at adconion.com (Nikos Michalakis)
Date: Tue, 1 Jun 2010 15:05:13 -0400
Subject: [rabbitmq-discuss] how does the rabbitmq transport cope with
	WAN links?
In-Reply-To: <20100601155240.GE9109@rabbitmq.com>
References: <48B24296-C97F-498A-B6B2-BA573BB1E1C4@adconion.com>
	<20100601155240.GE9109@rabbitmq.com>
Message-ID: <E6AC2562-CDBB-4503-B9B5-9BB85D0B4953@adconion.com>

Thanks for the info, Matthew.

It seems to me that the only difference between the cluster and the shovel is that you have one WAN connection vs multiple ones. The failure detection and reconnect mechanisms seem to be the same. Assuming my messages fit in a single TCP frame (about 100-200 bytes) and I have a throughput of 20-100 messages/sec with 3 nodes on each side of the WAN link, would the cluster have serious performance issues compared to the shovel set up? I'm assuming that the sender has one "thread" per outgoing queue so the 3 copies that need to go over the WAN are sent at nearly the same time (since I have enough bandwidth over the link). Is that not the case?

nikos

On Jun 1, 2010, at 11:52 AM, Matthew Sackman wrote:

> Hi Nikos,
> 
> On Tue, Jun 01, 2010 at 11:46:59AM -0400, Nikos Michalakis wrote:
>> I was reading the RabbitMQ docs, but couldn't find many details on what exactly the underlying protocol is for sending messages between cluster nodes.
> 
> AMQP over TCP.
> 
>> I 've seen that RabbitMQ relies on distributed Erlang over TCP, but is there more specific information on how links are made reliable in RabbitMQ? More particularly I'm looking to find out more details on how RabbitMQ configures its transports between cluster nodes. 
> 
> Clustering is intended for scalability only, and really needs to work in
> a LAN situation, given the all-to-all connections made between erlang
> nodes in a cluster. I think it's more likely you'll find utility in the
> rabbitmq-shovel, which makes a broker look like a client, hence makes it
> very easy to do store-and-forward (amongst other things).
> 
> We always rely on TCP.
> 
>> Are there single or multiple TCP connections between nodes? 
> 
> Normally single, in a clustering environment. But if you're using the
> shovel then it'll be one per shovel configuration.
> 
>> What happens when a TCP connection fails? Do nodes detect that event and try to reestablish the connection automatically? Distributed Erlang has APIs for detecting a node is down. Is that used in Rabbit?
> 
> Yes and yes. And the shovel does that too.
> 
>> Do connections rely on TCP to deal with packet loss or is there some Rabbit magic as well?
> 
> TCP is a reliable transport by definition, and sorts out packet loss and
> reording itself. We rely on that.
> 
>> How are messages serialized into AMQP packets?
> 
> The AMQP payload is totally opaque. The client APIs tend to present just
> byte arrays to set a message payload.
> 
> Matthew
> 
> _______________________________________________
> rabbitmq-discuss mailing list
> rabbitmq-discuss at lists.rabbitmq.com
> http://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss



From bradfordstephens at gmail.com  Tue Jun  1 23:27:51 2010
From: bradfordstephens at gmail.com (Bradford Stephens)
Date: Tue, 1 Jun 2010 15:27:51 -0700
Subject: [rabbitmq-discuss] RabbitMQ Consumes Very Slow
Message-ID: <AANLkTikPa8gCw8oA60seupzSulnQ3VMlpl9dca0yOVzx@mail.gmail.com>

Hey guys!

I'm having pretty nasty speed issues on Fedora. I'm running Fedora 8,
64-bit on EC2. I have a 8core/8GB RAM server. I'm able to insert
thousands of messages a second, but I can only consume about 3/sec.
Each is ~1k.

This is bad, because we need to consume over a million messages in a
few seconds :)

Everything's default from the yum repo install.

Here's the code:

(note: this is ugly code. I know!)

http://pastebin.com/ZFaRsaLj



-- 
Bradford Stephens,
Founder, Drawn to Scale
drawntoscalehq.com
727.697.7528

http://www.drawntoscalehq.com --  The intuitive, cloud-scale data
solution. Process, store, query, search, and serve all your data.

http://www.roadtofailure.com -- The Fringes of Scalability, Social
Media, and Computer Science


From matthew at rabbitmq.com  Wed Jun  2 00:09:34 2010
From: matthew at rabbitmq.com (Matthew Sackman)
Date: Wed, 2 Jun 2010 00:09:34 +0100
Subject: [rabbitmq-discuss] RabbitMQ Consumes Very Slow
In-Reply-To: <AANLkTikPa8gCw8oA60seupzSulnQ3VMlpl9dca0yOVzx@mail.gmail.com>
References: <AANLkTikPa8gCw8oA60seupzSulnQ3VMlpl9dca0yOVzx@mail.gmail.com>
Message-ID: <20100601230934.GA28451@wellquite.org>

Hi Bradford,

On Tue, Jun 01, 2010 at 03:27:51PM -0700, Bradford Stephens wrote:
> I'm having pretty nasty speed issues on Fedora. I'm running Fedora 8,
> 64-bit on EC2. I have a 8core/8GB RAM server. I'm able to insert
> thousands of messages a second, but I can only consume about 3/sec.
> Each is ~1k.

Well for starters, don't use basic.get, set up a consumer using
basic.consume. Secondly, think about whether you need to acknowledge
messages - if they're relatively unimportant messages (i.e. if a client
crashes whilst processing messages, do you want those messages to be
lost, or to automatically be requeued) then you might consider turning
on noAck (looks like you already do in your example code), which helps
speed.

Finally, you're bascially writing a poor version of the QueueingConsumer
(the major difference being that QueueingConsumer permits a jump across
threads, meaning that you can process received messages in a different
thread, and not impact the rate at which you receive messages from the
broker). I'd recommend you try using the QueueingConsumer instead as it
would then mean that you don't block the client whilst you're processing
the messages (in this case just adding messages into a queue -- err
which is what the QueueingConsumer does for you automatically).

As always with performance issues, once you're using the right API and
right algorithms (and asking here is definitely the right thing to do),
careful use of a profiler is a good idea to pick up where any further
bottlenecks are.

Matthew


From ozhurakousky at vmware.com  Wed Jun  2 00:22:46 2010
From: ozhurakousky at vmware.com (Oleg Zhurakousky)
Date: Tue, 1 Jun 2010 16:22:46 -0700
Subject: [rabbitmq-discuss] RabbitMQ Consumes Very Slow
In-Reply-To: <20100601230934.GA28451@wellquite.org>
References: <AANLkTikPa8gCw8oA60seupzSulnQ3VMlpl9dca0yOVzx@mail.gmail.com>
	<20100601230934.GA28451@wellquite.org>
Message-ID: <E57757ED-280B-4C7E-BA12-832648FD0F42@vmware.com>

Bradford

Here is the simple test I used last week to demo Rabbit to a client. I am actually running Rabbit on a small VM on my laptop and am sending 1000 messages ~30K each (send and receive in less then a sec). There you can see the basicConsume(..) sample.

-------------- next part --------------
A non-text attachment was scrubbed...
Name: PerfTest.java
Type: application/octet-stream
Size: 2707 bytes
Desc: PerfTest.java
Url : http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20100601/0b70b9b1/attachment-0001.obj 
-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: ATT00001..txt
Url: http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20100601/0b70b9b1/attachment-0001.txt 

From bradfordstephens at gmail.com  Wed Jun  2 00:58:32 2010
From: bradfordstephens at gmail.com (Bradford Stephens)
Date: Tue, 1 Jun 2010 16:58:32 -0700
Subject: [rabbitmq-discuss] RabbitMQ Consumes Very Slow
In-Reply-To: <E57757ED-280B-4C7E-BA12-832648FD0F42@vmware.com>
References: <AANLkTikPa8gCw8oA60seupzSulnQ3VMlpl9dca0yOVzx@mail.gmail.com>
	<20100601230934.GA28451@wellquite.org>
	<E57757ED-280B-4C7E-BA12-832648FD0F42@vmware.com>
Message-ID: <AANLkTilI7NWcJWdm9AK6Gf5tIKMtMUnun50jpuER0dvr@mail.gmail.com>

Holy crap, that worked.

Went from about 3 msgs/sec to ~20,000 msgs/sec. I can live with that :)

You should take that basicGet out of the "Getting Started" guide, it's
dangerous :P I assumed that the QueueingConsumer was for
continuously-running processes only and did high-throughput
synchronous stuff. Guess I shoulda read the code more.

You rock, I've never had a problem solved by a community so fast :)

On Tue, Jun 1, 2010 at 4:22 PM, Oleg Zhurakousky
<ozhurakousky at vmware.com> wrote:
> Bradford
>
> Here is the simple test I used last week to demo Rabbit to a client. I am actually running Rabbit on a small VM on my laptop and am sending 1000 messages ~30K each (send and receive in less then a sec). There you can see the basicConsume(..) sample.
>
>
> _______________________________________________
> rabbitmq-discuss mailing list
> rabbitmq-discuss at lists.rabbitmq.com
> http://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss
>
>



-- 
Bradford Stephens,
Founder, Drawn to Scale
drawntoscalehq.com
727.697.7528

http://www.drawntoscalehq.com --  The intuitive, cloud-scale data
solution. Process, store, query, search, and serve all your data.

http://www.roadtofailure.com -- The Fringes of Scalability, Social
Media, and Computer Science


From Kai.Steverding at gws.ms  Wed Jun  2 10:19:57 2010
From: Kai.Steverding at gws.ms (Steverding, Kai)
Date: Wed, 2 Jun 2010 11:19:57 +0200
Subject: [rabbitmq-discuss] RabbitMQ does not start with rabbit-status
	plugin - broker is running
In-Reply-To: <AANLkTiky4beFzoW0r76TlEmQi-5bB8AsfzremJf9DPrV@mail.gmail.com>
References: <B36BE88613F4AB40B178E7F6105136A205E99853@gws-ex2.gws-muenster.local>
	<AANLkTinAoVLvdNsjQ8Pr1doCC4fVSpCrVikukq-0QFq_@mail.gmail.com>
	<B36BE88613F4AB40B178E7F6105136A205E9986E@gws-ex2.gws-muenster.local>
	<AANLkTiky4beFzoW0r76TlEmQi-5bB8AsfzremJf9DPrV@mail.gmail.com>
Message-ID: <B36BE88613F4AB40B178E7F6105136A205E99877@gws-ex2.gws-muenster.local>

Hi !

Without plugins, everything is fine :

root at rabbit-cl1:~# rabbitmq-deactivate-plugins 
root at rabbit-cl1:~# /etc/init.d/rabbitmq-server restart
Restarting rabbitmq-server: No nodes running
SUCCESS
rabbitmq-server.
root at rabbit-cl1:~# rabbitmqctl status
Status of node 'rabbit at rabbit-cl1' ...
[{running_applications,[{rabbit,"RabbitMQ","1.7.2"},
                        {mnesia,"MNESIA  CXC 138 12","4.4.12"},
                        {os_mon,"CPO  CXC 138 46","2.2.4"},
                        {sasl,"SASL  CXC 138 11","2.1.8"},
                        {stdlib,"ERTS  CXC 138 10","1.16.4"},
                        {kernel,"ERTS  CXC 138 10","2.13.4"}]},
 {nodes,['rabbit at rabbit-cl1']},
 {running_nodes,['rabbit at rabbit-cl1']}]
...done.

And now for the logs :


cat /var/log/rabbitmq/rabbit.log

=INFO REPORT==== 2-Jun-2010::11:16:25 ===
Memory limit set to 803MB.

=INFO REPORT==== 2-Jun-2010::11:16:25 ===
Rolling persister log to "/var/lib/rabbitmq/mnesia/rabbit/rabbit_persister.LOG.previous"

=INFO REPORT==== 2-Jun-2010::11:16:25 ===
started TCP Listener on 0.0.0.0:5672

=INFO REPORT==== 2-Jun-2010::11:16:25 ===
    application: rabbit_status
    exited: {shutdown,{rabbit_status_app,start,[normal,[]]}}
    type: permanent

=INFO REPORT==== 2-Jun-2010::11:16:25 ===
stopped TCP Listener on 0.0.0.0:5672

-----------------------------------------------------------------------------------------------

cat /var/log/rabbitmq/rabbit-sasl.log

=CRASH REPORT==== 2-Jun-2010::11:16:25 ===
  crasher:
    initial call: rabbit_status_web:init/1
    pid: <0.156.0>
    registered_name: []
    exception exit: {undef,[{httpd_util,rfc1123_date,[{{2010,6,2},{9,16,25}}]},
                            {rabbit_status_web,internal_update,1},
                            {rabbit_status_web,init,1},
                            {gen_server,init_it,6},
                            {proc_lib,init_p_do_apply,3}]}
      in function  gen_server:init_it/6
    ancestors: [rabbit_status_sup,<0.154.0>]
    messages: []
    links: [<0.155.0>]
    dictionary: []
    trap_exit: false
    status: running
    heap_size: 6765
    stack_size: 24
    reductions: 13565
  neighbours:

=SUPERVISOR REPORT==== 2-Jun-2010::11:16:25 ===
     Supervisor: {local,rabbit_status_sup}
     Context:    start_error
     Reason:     {undef,[{httpd_util,rfc1123_date,[{{2010,6,2},{9,16,25}}]},
                         {rabbit_status_web,internal_update,1},
                         {rabbit_status_web,init,1},
                         {gen_server,init_it,6},
                         {proc_lib,init_p_do_apply,3}]}
     Offender:   [{pid,undefined},
                  {name,rabbit_status_web},
                  {mfa,{rabbit_status_web,start_link,[]}},
                  {restart_type,permanent},
                  {shutdown,5000},
                  {child_type,worker}]

----------------------------------------------------------------------------------------------------

cat /var/log/rabbitmq/startup_log 
Starting all nodes...
Starting node rabbit at rabbit-cl1...

+---+   +---+
|   |   |   |
|   |   |   |
|   |   |   |
|   +---+   +-------+
|                   |
| RabbitMQ  +---+   |
|           |   |   |
|   v1.7.2  +---+   |
|                   |
+-------------------+
AMQP 8-0
Copyright (C) 2007-2010 LShift Ltd., Cohesive Financial Technologies LLC., and Rabbit Technologies Ltd.
Licensed under the MPL.  See http://www.rabbitmq.com/

node          : rabbit at rabbit-cl1
app descriptor: /usr/lib/rabbitmq/lib/rabbitmq_server-1.7.2/sbin/../ebin/rabbit.app
home dir      : /var/lib/rabbitmq
cookie hash   : TIQTKMN1LFm80SCVc+2Upw==
log           : /var/log/rabbitmq/rabbit.log
sasl log      : /var/log/rabbitmq/rabbit-sasl.log
database dir  : /var/lib/rabbitmq/mnesia/rabbit

starting internal event notification system                           ...done
starting logging server                                               ...done
starting database                                                     ...done
-- kernel ready
starting alarm handler                                                ...done
starting queue supervisor                                             ...done
starting node monitor                                                 ...done
starting cluster router                                               ...done
-- core initialized
starting empty DB check                                               ...done
starting codec correctness check                                      ...done
starting exchange recovery                                            ...done
starting queue recovery                                               ...done
starting persister                                                    ...done
starting guid generator                                               ...done
-- message delivery logic ready
starting error log relay                                              ...done
starting networking                                                   ...done
-- network listeners available

broker running
{"Kernel pid terminated",application_controller,"{application_start_failure,rabbit_status,{shutdown,{rabbit_status_app,start,[normal,[]]}}}"}

--------------------------------------------------------------------------------------------------------

cat /var/log/rabbitmq/startup_err 
Erlang has closed
Error: {node_start_failed,normal}

Crash dump was written to: erl_crash.dump
Kernel pid terminated (application_controller) ({application_start_failure,rabbit_status,{shutdown,{rabbit_status_app,start,[normal,[]]}}})


Mit freundlichen Gr??en
Kai Steverding

_________________________________________________
GWS Gesellschaft f?r Warenwirtschafts-Systeme mbH
Kr?gerweg 10 - 48155 M?nster
Kai Steverding
Branchensoftware-Entwicklung
Tel:   +49 (251) 7000-02
Fax:   +49 (251) 7000-3999
mailto:Kai.Steverding at gws.ms
Internet: http://www.gws.ms


GWS Gesellschaft f?r Warenwirtschafts-Systeme mbH
M?nster, M?nchen, N?rnberg, Leonberg
Gesch?ftsf?hrer: Dipl. Betriebswirt Helmut Benefader
Sitz: M?nster (Westf.)
Amtsgericht M?nster HRB 3844







-----Urspr?ngliche Nachricht-----
Von: Marek Majkowski [mailto:majek04 at gmail.com] 
Gesendet: Dienstag, 1. Juni 2010 17:18
An: Steverding, Kai
Cc: rabbitmq-discuss at lists.rabbitmq.com
Betreff: Re: [rabbitmq-discuss] RabbitMQ does not start with rabbit-status plugin - broker is running

2010/6/1 Steverding, Kai <Kai.Steverding at gws.ms>:
> Strange !
> I did the same on another Ubuntu system without rabbit and get the same error. I followed your instructions step by step

That's strange.

Can you attach following logs (if they aren't too big):
/var/log/rabbitmq/rabbit.log
/var/log/rabbitmq/rabbit-sasl.log
/var/log/rabbitmq/startup_log
/var/log/rabbitmq/startup_err

Do you get the same issue without any plugins? To check:
sudo rabbitmq-deactivate-plugins
sudo /etc/init.d/rabbitmq-server restart

From majek04 at gmail.com  Wed Jun  2 12:34:19 2010
From: majek04 at gmail.com (Marek Majkowski)
Date: Wed, 2 Jun 2010 12:34:19 +0100
Subject: [rabbitmq-discuss] RabbitMQ does not start with rabbit-status
	plugin - broker is running
In-Reply-To: <B36BE88613F4AB40B178E7F6105136A205E99877@gws-ex2.gws-muenster.local>
References: <B36BE88613F4AB40B178E7F6105136A205E99853@gws-ex2.gws-muenster.local>
	<AANLkTinAoVLvdNsjQ8Pr1doCC4fVSpCrVikukq-0QFq_@mail.gmail.com> 
	<B36BE88613F4AB40B178E7F6105136A205E9986E@gws-ex2.gws-muenster.local> 
	<AANLkTiky4beFzoW0r76TlEmQi-5bB8AsfzremJf9DPrV@mail.gmail.com> 
	<B36BE88613F4AB40B178E7F6105136A205E99877@gws-ex2.gws-muenster.local>
Message-ID: <AANLkTilTnH7E-1USspRfp7g94rHvxYehY-gvr-L-zI45@mail.gmail.com>

On Wed, Jun 2, 2010 at 10:19, Steverding, Kai <Kai.Steverding at gws.ms> wrote:
> Hi !
>
> ? ?exception exit: {undef,[{httpd_util,rfc1123_date,[{{2010,6,2},{9,16,25}}]},
> ? ? ? ? ? ? ? ? ? ? ? ? ? ?{rabbit_status_web,internal_update,1},
> ? ? ? ? ? ? ? ? ? ? ? ? ? ?{rabbit_status_web,init,1},
> ? ? ? ? ? ? ? ? ? ? ? ? ? ?{gen_server,init_it,6},
> ? ? ? ? ? ? ? ? ? ? ? ? ? ?{proc_lib,init_p_do_apply,3}]}


Ah, now it's clear. You don't have erlang-inets installed. Please try:

sudo apt-get install erlang-inets

I didn't even know rabbitmq-status had such a dependency.

Marek


From Kai.Steverding at gws.ms  Wed Jun  2 12:42:15 2010
From: Kai.Steverding at gws.ms (Steverding, Kai)
Date: Wed, 2 Jun 2010 13:42:15 +0200
Subject: [rabbitmq-discuss] RabbitMQ does not start with rabbit-status
	plugin - broker is running
In-Reply-To: <AANLkTilTnH7E-1USspRfp7g94rHvxYehY-gvr-L-zI45@mail.gmail.com>
References: <B36BE88613F4AB40B178E7F6105136A205E99853@gws-ex2.gws-muenster.local>
	<AANLkTinAoVLvdNsjQ8Pr1doCC4fVSpCrVikukq-0QFq_@mail.gmail.com>
	<B36BE88613F4AB40B178E7F6105136A205E9986E@gws-ex2.gws-muenster.local>
	<AANLkTiky4beFzoW0r76TlEmQi-5bB8AsfzremJf9DPrV@mail.gmail.com>
	<B36BE88613F4AB40B178E7F6105136A205E99877@gws-ex2.gws-muenster.local>
	<AANLkTilTnH7E-1USspRfp7g94rHvxYehY-gvr-L-zI45@mail.gmail.com>
Message-ID: <B36BE88613F4AB40B178E7F6105136A205E9987D@gws-ex2.gws-muenster.local>

Thank you, that is the solution. It works now

Mit freundlichen Gr??en
Kai Steverding

_________________________________________________
GWS Gesellschaft f?r Warenwirtschafts-Systeme mbH
Kr?gerweg 10 - 48155 M?nster
Kai Steverding
Branchensoftware-Entwicklung
Tel:   +49 (251) 7000-02
Fax:   +49 (251) 7000-3999
mailto:Kai.Steverding at gws.ms
Internet: http://www.gws.ms


GWS Gesellschaft f?r Warenwirtschafts-Systeme mbH
M?nster, M?nchen, N?rnberg, Leonberg
Gesch?ftsf?hrer: Dipl. Betriebswirt Helmut Benefader
Sitz: M?nster (Westf.)
Amtsgericht M?nster HRB 3844







-----Urspr?ngliche Nachricht-----
Von: Marek Majkowski [mailto:majek04 at gmail.com] 
Gesendet: Mittwoch, 2. Juni 2010 13:34
An: Steverding, Kai
Cc: rabbitmq-discuss at lists.rabbitmq.com
Betreff: Re: [rabbitmq-discuss] RabbitMQ does not start with rabbit-status plugin - broker is running

On Wed, Jun 2, 2010 at 10:19, Steverding, Kai <Kai.Steverding at gws.ms> wrote:
> Hi !
>
> ? ?exception exit: {undef,[{httpd_util,rfc1123_date,[{{2010,6,2},{9,16,25}}]},
> ? ? ? ? ? ? ? ? ? ? ? ? ? ?{rabbit_status_web,internal_update,1},
> ? ? ? ? ? ? ? ? ? ? ? ? ? ?{rabbit_status_web,init,1},
> ? ? ? ? ? ? ? ? ? ? ? ? ? ?{gen_server,init_it,6},
> ? ? ? ? ? ? ? ? ? ? ? ? ? ?{proc_lib,init_p_do_apply,3}]}


Ah, now it's clear. You don't have erlang-inets installed. Please try:

sudo apt-get install erlang-inets

I didn't even know rabbitmq-status had such a dependency.

Marek

From matthew at rabbitmq.com  Wed Jun  2 14:01:09 2010
From: matthew at rabbitmq.com (Matthew Sackman)
Date: Wed, 2 Jun 2010 14:01:09 +0100
Subject: [rabbitmq-discuss] RabbitMQ Consumes Very Slow
In-Reply-To: <AANLkTilI7NWcJWdm9AK6Gf5tIKMtMUnun50jpuER0dvr@mail.gmail.com>
References: <AANLkTikPa8gCw8oA60seupzSulnQ3VMlpl9dca0yOVzx@mail.gmail.com>
	<20100601230934.GA28451@wellquite.org>
	<E57757ED-280B-4C7E-BA12-832648FD0F42@vmware.com>
	<AANLkTilI7NWcJWdm9AK6Gf5tIKMtMUnun50jpuER0dvr@mail.gmail.com>
Message-ID: <20100602130109.GA3546@rabbitmq.com>

Hi Bradford,

On Tue, Jun 01, 2010 at 04:58:32PM -0700, Bradford Stephens wrote:
> Holy crap, that worked.
> Went from about 3 msgs/sec to ~20,000 msgs/sec. I can live with that :)

Good to hear - yeah in a straight line I've seen up to about 30kHz with
noAck turned on, but obviously on a sufficiently parallel machine with
multiple queues, higher overall throughput is possible.

> You should take that basicGet out of the "Getting Started" guide, it's
> dangerous :P I assumed that the QueueingConsumer was for
> continuously-running processes only and did high-throughput
> synchronous stuff. Guess I shoulda read the code more.

Hmm, I wasn't aware basic.get was quite /that/ slow, but it's possible.
The reason it's in the Getting Started guide is that it is, at least
conceptually, the simplest way of getting a message out of a queue - the
learning curve would be a bit steeper if we immediately started
introducing consume and asynchronous delivery.

> You rock, I've never had a problem solved by a community so fast :)

Glad to help :) - it's always nice when people take the time to ask us
questions if they're having any problems and refrain from hitting the
ranty-blog button too fast!

Matthew


From rsusasene at gmail.com  Wed Jun  2 14:56:09 2010
From: rsusasene at gmail.com (susantha senevirathna)
Date: Wed, 2 Jun 2010 19:26:09 +0530
Subject: [rabbitmq-discuss] RabbitMQ ConnectionFactory newConnection issue
Message-ID: <AANLkTimT5sKPEMyRwQy303T8tbcskQBykX-e5x_e9aKC@mail.gmail.com>

Hi All,
   I have configured RabbitMQ in my windows machine.It is working
properly.However I try to run rabbitmq "ConsumerMain" sample.It has given
following error.So i tried to resolve that matter but i couldnt achive
yet.If you can help me sort out this issue ,I will be glad.Please help me.I
have mentioned that  exception below.


Main thread caught exception: java.io.IOException
java.io.IOException
        at com.rabbitmq.client.impl.
AMQChannel.wrap(AMQChannel.java:121)
        at
com.rabbitmq.client.impl.AMQChannel.exnWrappingRpc(AMQChannel.java:139)
        at
com.rabbitmq.client.impl.AMQConnection.start(AMQConnection.java:260)
        at
com.rabbitmq.client.ConnectionFactory.newConnection(ConnectionFactory.java:200)
        at
com.rabbitmq.client.ConnectionFactory.newConnection(ConnectionFactory.java:249)
        at
com.rabbitmq.client.ConnectionFactory.newConnection(ConnectionFactory.java:263)
        at
com.rabbitmq.client.ConnectionFactory.newConnection(ConnectionFactory.java:274)
        at com.rabbitmq.examples.ConsumerMain.main(ConsumerMain.java:76)
Caused by: com.rabbitmq.client.ShutdownSignalException: connection error;
reason: java.io.EOFException
        at
com.rabbitmq.utility.ValueOrException.getValue(ValueOrException.java:81)
        at
com.rabbitmq.utility.BlockingValueOrException.uninterruptibleGetValue(BlockingValueOrException.java:47)
        at
com.rabbitmq.client.impl.AMQChannel$BlockingRpcContinuation.getReply(AMQChannel.java:336)
        at com.rabbitmq.client.impl.AMQChannel.rpc(AMQChannel.java:209)
        at
com.rabbitmq.client.impl.AMQChannel.exnWrappingRpc(AMQChannel.java:133)
        ... 6 more
Caused by: java.io.EOFException
        at
java.io.DataInputStream.readUnsignedByte(DataInputStream.java:273)
        at com.rabbitmq.client.impl.Frame.readFrom(Frame.java:118)
        at
com.rabbitmq.client.impl.SocketFrameHandler.readFrame(SocketFrameHandler.java:133)
        at
com.rabbitmq.client.impl.AMQConnection.readFrame(AMQConnection.java:367)
        at
com.rabbitmq.client.impl.AMQConnection$MainLoop.run(AMQConnection.java:408)
Java Result: 1

regards,
Susantha
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20100602/8a6f3e44/attachment.htm 

From emile at rabbitmq.com  Wed Jun  2 15:13:44 2010
From: emile at rabbitmq.com (Emile Joubert)
Date: Wed, 02 Jun 2010 15:13:44 +0100
Subject: [rabbitmq-discuss] RabbitMQ ConnectionFactory newConnection
	issue
In-Reply-To: <AANLkTimT5sKPEMyRwQy303T8tbcskQBykX-e5x_e9aKC@mail.gmail.com>
References: <AANLkTimT5sKPEMyRwQy303T8tbcskQBykX-e5x_e9aKC@mail.gmail.com>
Message-ID: <4C066718.1040803@rabbitmq.com>


Hi Susantha,

A possible cause of this error is authentication failure. The rabbit 
broker has possibly been configured not to accept default credentials 
that the tests and demos expect.

If authentication failure is not the root cause of the problem then 
please let me know the version of the broker and the java client (or 
source revision if compiled from source) you are using. Please also 
attach the relevant parts of rabbit.log and rabbit-sasl.log for the 
period of the failed test.


Regards

Emile


susantha senevirathna wrote:
> 
> Hi All,
>    I have configured RabbitMQ in my windows machine.It is working 
> properly.However I try to run rabbitmq "ConsumerMain" sample.It has 
> given following error.So i tried to resolve that matter but i couldnt 
> achive yet.If you can help me sort out this issue ,I will be glad.Please 
> help me.I have mentioned that  exception below.
> 
> 
> Main thread caught exception: java.io.IOException
> java.io.IOException
>         at com.rabbitmq.client.impl.
> AMQChannel.wrap(AMQChannel.java:121)
>         at 
> com.rabbitmq.client.impl.AMQChannel.exnWrappingRpc(AMQChannel.java:139)
>         at 
> com.rabbitmq.client.impl.AMQConnection.start(AMQConnection.java:260)
>         at 
> com.rabbitmq.client.ConnectionFactory.newConnection(ConnectionFactory.java:200)
>         at 
> com.rabbitmq.client.ConnectionFactory.newConnection(ConnectionFactory.java:249)
>         at 
> com.rabbitmq.client.ConnectionFactory.newConnection(ConnectionFactory.java:263)
>         at 
> com.rabbitmq.client.ConnectionFactory.newConnection(ConnectionFactory.java:274)
>         at com.rabbitmq.examples.ConsumerMain.main(ConsumerMain.java:76)
> Caused by: com.rabbitmq.client.ShutdownSignalException: connection 
> error; reason: java.io.EOFException
>         at 
> com.rabbitmq.utility.ValueOrException.getValue(ValueOrException.java:81)
>         at 
> com.rabbitmq.utility.BlockingValueOrException.uninterruptibleGetValue(BlockingValueOrException.java:47)
>         at 
> com.rabbitmq.client.impl.AMQChannel$BlockingRpcContinuation.getReply(AMQChannel.java:336)
>         at com.rabbitmq.client.impl.AMQChannel.rpc(AMQChannel.java:209)
>         at 
> com.rabbitmq.client.impl.AMQChannel.exnWrappingRpc(AMQChannel.java:133)
>         ... 6 more
> Caused by: java.io.EOFException
>         at 
> java.io.DataInputStream.readUnsignedByte(DataInputStream.java:273)
>         at com.rabbitmq.client.impl.Frame.readFrom(Frame.java:118)
>         at 
> com.rabbitmq.client.impl.SocketFrameHandler.readFrame(SocketFrameHandler.java:133)
>         at 
> com.rabbitmq.client.impl.AMQConnection.readFrame(AMQConnection.java:367)
>         at 
> com.rabbitmq.client.impl.AMQConnection$MainLoop.run(AMQConnection.java:408)
> Java Result: 1
> 
> regards,
> Susantha




From donovanhide at gmail.com  Wed Jun  2 16:04:33 2010
From: donovanhide at gmail.com (Donovan)
Date: Wed, 2 Jun 2010 08:04:33 -0700 (PDT)
Subject: [rabbitmq-discuss] RabbitMQ JSON-RPC via GET rather than POST
Message-ID: <b0fec7b6-0e51-474e-abc0-7f18aa8a1e78@q13g2000vbm.googlegroups.com>

Hi,

This:

curl "http://dev.rabbitmq.com/rpc/rabbitmq" -d '{"version":"1.1","id":
2,"method":"open","params":["guest","guest",5,null]}'

return this:

{"version":"1.1","id":2,"result":
{"service":"6EEAADDC83484475E58A4AC1C5AB3D9D"}}

Quoting from here:
http://hg.opensource.lshift.net/erlang-rfc4627/raw-file/a800c54e7ff3/doc/index.html

<Quote>
Similarly, any idempotent methods provided by a service may be
accessed via POST to the base URL for the service, or via GET to a URL
of the form

http://localhost:5671/rpc/ServiceName/MethodName?arg=value&..
</Quote>

I'm trying to create the equivalent GET version of the POST curl
above, so that I can do JSON-RPC across domains. POST is not permitted
by browsers when using jQuery, annoyingly!!!

I tried:

curl "http://dev.rabbitmq.com/rpc/rabbitmq/open?
username=guest&password=guest&sessionTimeout=5"

and got:

{"version":"1.1","id":null,"error":{"name":"JSONRPCError","code":
403,"message":"Non-idempotent method","error":"open"}}

Any help much appreciated!!

Cheers,
Donovan.



From emile at rabbitmq.com  Wed Jun  2 17:54:33 2010
From: emile at rabbitmq.com (Emile Joubert)
Date: Wed, 02 Jun 2010 17:54:33 +0100
Subject: [rabbitmq-discuss] RabbitMQ ConnectionFactory newConnection
	issue
In-Reply-To: <AANLkTilIq2oEBpJcqER_Y4eKwycUTK6Z91F2RnCZBEBM@mail.gmail.com>
References: <AANLkTimT5sKPEMyRwQy303T8tbcskQBykX-e5x_e9aKC@mail.gmail.com>	<4C066718.1040803@rabbitmq.com>
	<AANLkTilIq2oEBpJcqER_Y4eKwycUTK6Z91F2RnCZBEBM@mail.gmail.com>
Message-ID: <4C068CC9.3060106@rabbitmq.com>


Hi Susantha,

I suggest that you use "/" for virtualhost and use "127.0.0.1" for the 
host by not specifying them. You are getting authentication errors in 
the logfile because the default username and password are not valid for 
the virtualhost you are attempting to use.

Regards

Emile


susantha senevirathna wrote:
> Hi Emile,
>    First I would like to thanks for your immediate reply.
> I used code has mentioned below.
> 
>             ConnectionParameters params = new 
> ConnectionParameters();           
>             params.setUsername("guest");
>             params.setPassword("guest");
>             params.setVirtualHost("127.0.0.1");           
>             params.setRequestedHeartbeat(0);
>             ConnectionFactory factory = new 
> ConnectionFactory(params);            
>             Connection conn = factory.newConnection("127.0.0.1", 5672);
> 
> Version :rabbitmq server-1.7.1
>             
> Further I have attached the rabbit.log  for your reference.I am looking 
> forwrd your reply to sort out my issue.However the rabbit-sasl.log 
> hasn't any data.
> 
> regards,
> Susantha
> 
> On Wed, Jun 2, 2010 at 7:43 PM, Emile Joubert <emile at rabbitmq.com 
> <mailto:emile at rabbitmq.com>> wrote:
> 
> 
>     Hi Susantha,
> 
>     A possible cause of this error is authentication failure. The rabbit
>     broker has possibly been configured not to accept default
>     credentials that the tests and demos expect.
> 
>     If authentication failure is not the root cause of the problem then
>     please let me know the version of the broker and the java client (or
>     source revision if compiled from source) you are using. Please also
>     attach the relevant parts of rabbit.log and rabbit-sasl.log for the
>     period of the failed test.
> 
> 
>     Regards
> 
>     Emile
> 
> 
> 
>     susantha senevirathna wrote:
> 
> 
>         Hi All,
>           I have configured RabbitMQ in my windows machine.It is working
>         properly.However I try to run rabbitmq "ConsumerMain" sample.It
>         has given following error.So i tried to resolve that matter but
>         i couldnt achive yet.If you can help me sort out this issue ,I
>         will be glad.Please help me.I have mentioned that  exception below.
> 
> 
>         Main thread caught exception: java.io.IOException
>         java.io.IOException
>                at com.rabbitmq.client.impl.
>         AMQChannel.wrap(AMQChannel.java:121)
>                at
>         com.rabbitmq.client.impl.AMQChannel.exnWrappingRpc(AMQChannel.java:139)
>                at
>         com.rabbitmq.client.impl.AMQConnection.start(AMQConnection.java:260)
>                at
>         com.rabbitmq.client.ConnectionFactory.newConnection(ConnectionFactory.java:200)
>                at
>         com.rabbitmq.client.ConnectionFactory.newConnection(ConnectionFactory.java:249)
>                at
>         com.rabbitmq.client.ConnectionFactory.newConnection(ConnectionFactory.java:263)
>                at
>         com.rabbitmq.client.ConnectionFactory.newConnection(ConnectionFactory.java:274)
>                at
>         com.rabbitmq.examples.ConsumerMain.main(ConsumerMain.java:76)
>         Caused by: com.rabbitmq.client.ShutdownSignalException:
>         connection error; reason: java.io.EOFException
>                at
>         com.rabbitmq.utility.ValueOrException.getValue(ValueOrException.java:81)
>                at
>         com.rabbitmq.utility.BlockingValueOrException.uninterruptibleGetValue(BlockingValueOrException.java:47)
>                at
>         com.rabbitmq.client.impl.AMQChannel$BlockingRpcContinuation.getReply(AMQChannel.java:336)
>                at
>         com.rabbitmq.client.impl.AMQChannel.rpc(AMQChannel.java:209)
>                at
>         com.rabbitmq.client.impl.AMQChannel.exnWrappingRpc(AMQChannel.java:133)
>                ... 6 more
>         Caused by: java.io.EOFException
>                at
>         java.io.DataInputStream.readUnsignedByte(DataInputStream.java:273)
>                at com.rabbitmq.client.impl.Frame.readFrom(Frame.java:118)
>                at
>         com.rabbitmq.client.impl.SocketFrameHandler.readFrame(SocketFrameHandler.java:133)
>                at
>         com.rabbitmq.client.impl.AMQConnection.readFrame(AMQConnection.java:367)
>                at
>         com.rabbitmq.client.impl.AMQConnection$MainLoop.run(AMQConnection.java:408)
>         Java Result: 1
> 
>         regards,
>         Susantha
> 
> 
> 
> 



From majek04 at gmail.com  Wed Jun  2 18:25:01 2010
From: majek04 at gmail.com (Marek Majkowski)
Date: Wed, 2 Jun 2010 18:25:01 +0100
Subject: [rabbitmq-discuss] [admin] Maintenance of rabbitmq-discuss
Message-ID: <AANLkTik7YA2ReW95WcAzM9ewMvmci4W0KDcUGzw2l9z3@mail.gmail.com>

Hi,

I'm migrating the mailing list, the web interface and archives
might be down for up to a day, sending and receiving emails
should work without any distractions.

Please report any issues directly to me.

Cheers,
  Marek Majkowski

From chen650 at yahoo.com  Thu Jun  3 01:55:26 2010
From: chen650 at yahoo.com (alex chen)
Date: Wed, 2 Jun 2010 17:55:26 -0700 (PDT)
Subject: [rabbitmq-discuss] socket read timeout in rabbitmq-c
In-Reply-To: <4BFB838A.5090900@rabbitmq.com>
References: <131339.14680.qm@web31812.mail.mud.yahoo.com>
	<4BFB838A.5090900@rabbitmq.com>
Message-ID: <343701.1413.qm@web31805.mail.mud.yahoo.com>

Matthias, 

attached please find the patch to rabbitmq-c.
thanks.

-alex



----- Original Message ----
> From: Matthias Radestock <matthias at rabbitmq.com>
> To: alex chen <chen650 at yahoo.com>
> Cc: rabbitmq-discuss at lists.rabbitmq.com
> Sent: Tue, May 25, 2010 1:00:10 AM
> Subject: Re: [rabbitmq-discuss] socket read timeout in rabbitmq-c
> 
> Alex,

apologies for the delay in responding to this ...

alex chen 
> wrote:
> I am wondering if it can support specifying a time out 
> (e.g.
> amqp_set_timeout(int timeout)), and add select(timeout) before 
> the
> read() in wait_frame?

That would seem like a worthwhile 
> addition. Care to submit a patch?

> We found in several cases that 
> amqp_channel_open hanged while doing
> read() in 
> wait_frame_inner().

That really shouldn't happen, from an AMQP protocol 
> perspective. Was there anything noteworthy in the server logs? Is this 
> reproducible? If so it may help to run via rabbit's tracer 
> (http://www.rabbitmq.com/examples.html#tracer) or wireshark to see what's 
> happening at the protocol level and thus determine whether there is a problem at 
> the server end (highly unlikely) or client.


Matthias.


      
-------------- next part --------------
A non-text attachment was scrubbed...
Name: rabbitmq-c.patch
Type: text/x-patch
Size: 3849 bytes
Desc: not available
URL: <http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20100602/c6684bb3/attachment.bin>

From nico at nicocesar.com  Thu Jun  3 13:38:38 2010
From: nico at nicocesar.com (=?UTF-8?B?Tmljb2zDoXMgQ8Opc2Fy?=)
Date: Thu, 3 Jun 2010 09:38:38 -0300
Subject: [rabbitmq-discuss] Memory problems
Message-ID: <AANLkTikhdxoEat-tO6-MUqshMv8-Jx7kZ7jIbW2Dvi7S@mail.gmail.com>

Hi all

First I need to send kudos to all of you, I've been using rabbit for a year
now and has given me a lot of satisfactions. It reminded me the day I use a
Database instead of a bunch of files.. the same but with data flows! Like a
marriage, satisfactions and problems come in the same pack! Just some
background info:

 * Im running rabbitmq 1.7.0-3 on a debian testing distribution with
python-amqplib 0.6.1-1
 * It's a VPS with 2GB of RAM, *BUT* when the used memory it's aboout 80%,
"tasks may be killed off pre-maturely, we do this to prevent a total OOM
scenario where the VPS goes dead" (literal words from the provider)
 * I was using ~15 queues with 1kb messages and a rate of  ~20
messages/minute

Like a week ago I've made the following changes:
 * I'm using 50 queues  with a rate of ~60 messages/minute
 * One of them (I call it "the fat queue" ) has 50kb messages
 * Processing at the rear end is rate fixed ... so I need rabbit  to act as
a memory/disk buffer

A: High speed producer : 50000 1K messages in a second or so.
B: Translator: reads from A_q and generates a 50kb message from a single 1kb
message  and publishes it on the fat_queue.
C: (Slow) Fixed speed consumer: grabs the 50kb message and does it's magic.

A process -> A_q queue -> B process -> fat_queue -> many C processes (even
that I have many Cs,   A is much faster)


Here is the problem when everythig is almost empty:

rabbitmqctl list_queues memory | awk '{T += $1;}END{print T;}'
5703040

this means that the total memory used for queues is arround 5Mb but RES
memory for beam.smp process is 358Mb !!!

And when I start using it, things get worse. beam.smp just jumps from 400m
to1.6G (in jumps of 100-200m per second) and well... my VPS provider just
decides to kill almost everything on that machine. Right now I'm killing the
B process after a bunch of messages, but actually i don't know how to
estimate how much memory rabbit will be using per message.


I've heard the "new persister" (what a name, eh!) is "much better" with
"memory issues":
http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/2010-May/007251.html

taken from:
http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/2010-February/006397.html

> =INFO REPORT==== 16-Feb-2010::04:42:05 ===
> Memory limit set to 3196MB.

I'd love that functionality! when was implemented? or what parameters I need
to pass to rabbit?

Greetings!

Nico C?sar
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20100603/7cbbbfee/attachment.htm>

From alexis.richardson at gmail.com  Thu Jun  3 15:32:34 2010
From: alexis.richardson at gmail.com (Alexis Richardson)
Date: Thu, 3 Jun 2010 15:32:34 +0100
Subject: [rabbitmq-discuss] June 9th - Meetup in London
In-Reply-To: <8EC96D2F-DF66-4261-9D8D-AE9C51D4D068@gmail.com>
References: <AANLkTikYX3tJD_trmVmJ1jZ0nhDek1m_d1nTIx2VRced@mail.gmail.com>
	<AANLkTinr1Q8w1HdwNLWfNeAedMp80P5UeKdamGtoEMUH@mail.gmail.com>
	<8EC96D2F-DF66-4261-9D8D-AE9C51D4D068@gmail.com>
Message-ID: <AANLkTimA1NVuhipiVfDXqtOvvexjRSQ4RmyUj7Rn8XM9@mail.gmail.com>

And now we come to the important question of:

* Pub Selection.

I'd like to propose two possible areas for the pubsub meet-up...

1. London Bridge / Borough
2. Spitalfields

What do people prefer?  My preference is (1).

alexis


On Tue, May 25, 2010 at 6:02 PM, Alvaro Videla <videlalvaro at gmail.com> wrote:
> For me it' ok too, just let me know the details
>
> -Alvaro
>
>
> On May 26, 2010, at 1:01 AM, Jonathan Lister wrote:
>
>> Sounds good to me.
>>
>> On Mon, May 24, 2010 at 9:08 PM, Alexis Richardson
>> <alexis.richardson at gmail.com> wrote:
>>> Right
>>>
>>> Let's organise this...
>>>
>>> Beers on Wednesday June 9th starting at ... 5:30pm?
>>>
>>> Location?
>>>
>>> alexis
>>>
>>>
>>>
>>>
>>> On Wed, May 12, 2010 at 12:22 PM, Alvaro Videla <videlalvaro at gmail.com> wrote:
>>>> That's OK for me, since I'll be arriving in the morning
>>>>
>>>>
>>>> On May 12, 2010, at 7:09 PM, Alexis Richardson wrote:
>>>>
>>>>> On Wed, May 12, 2010 at 12:05 PM, James Governor <jgovernor at redmonk.com> wrote:
>>>>>> Pub sub. Lets pick it up. Les plans diaboliques.
>>>>>
>>>>> Merveilleux.
>>>>>
>>>>>
>>>>>
>>>>>
>>>>>> When in june?
>>>>>
>>>>> Do as the junians do?
>>>>>
>>>>> I suggest Wednesday June 9th.
>>>>>
>>>>> alexis
>>>>>
>>>>>
>>>>>>
>>>>>>
>>>>>> -----Original Message-----
>>>>>> From: alexis.richardson at gmail.com [mailto:alexis.richardson at gmail.com] On
>>>>>> Behalf Of Alexis Richardson
>>>>>> Sent: 12 May 2010 11:59
>>>>>> To: Alvaro Videla
>>>>>> Cc: rabbitmq-discuss; James Governor; Jonathan Lister
>>>>>> Subject: Re: [rabbitmq-discuss] Meeting in London
>>>>>>
>>>>>> Alvaro
>>>>>>
>>>>>> That sounds like an excellent plan. ?Perhaps it's time for another
>>>>>> 'pubsub' meet-up? ?If it is the week of the EF then we can invite a
>>>>>> lot of 'NoSQL' folks along too...
>>>>>>
>>>>>> alexis
>>>>>>
>>>>>>
>>>>>> On Wed, May 12, 2010 at 10:08 AM, Alvaro Videla <videlalvaro at gmail.com>
>>>>>> wrote:
>>>>>>> Hi guys/gals,
>>>>>>>
>>>>>>> I'll asked Alexis about this and he told me to ask here:
>>>>>>>
>>>>>>> I'll be in London next June for the Erlang Factory. Since I'm traveling
>>>>>> from China and I won't be going there any time like every week :) I would
>>>>>> like to meet with some of the RabbitMQ guys in London, can we arrange
>>>>>> something?
>>>>>>>
>>>>>>> Perhaps going to a pub or something?
>>>>>>>
>>>>>>> Regards,
>>>>>>>
>>>>>>> Alvaro
>>>>>>> _______________________________________________
>>>>>>> rabbitmq-discuss mailing list
>>>>>>> rabbitmq-discuss at lists.rabbitmq.com
>>>>>>> http://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss
>>>>>>>
>>>>>>
>>>>
>>>>
>>>
>>
>>
>>
>> --
>> t: @jayfresh
>> b: http://www.jaybyjayfresh.com
>
>

From kirk at kirkwylie.com  Thu Jun  3 16:24:30 2010
From: kirk at kirkwylie.com (Kirk Wylie)
Date: Thu, 3 Jun 2010 16:24:30 +0100
Subject: [rabbitmq-discuss] June 9th - Meetup in London
In-Reply-To: <9b8d0924371a45fcdc596b348e41aa63@mail.gmail.com>
References: <AANLkTikYX3tJD_trmVmJ1jZ0nhDek1m_d1nTIx2VRced@mail.gmail.com>
	<AANLkTinr1Q8w1HdwNLWfNeAedMp80P5UeKdamGtoEMUH@mail.gmail.com>
	<8EC96D2F-DF66-4261-9D8D-AE9C51D4D068@gmail.com>
	<AANLkTimA1NVuhipiVfDXqtOvvexjRSQ4RmyUj7Rn8XM9@mail.gmail.com>
	<9b8d0924371a45fcdc596b348e41aa63@mail.gmail.com>
Message-ID: <AANLkTin79kNNSq0NhxlGKcgluuKpcv149sIj7KNbrNQA@mail.gmail.com>

Yeah, I think it was a north of the river phenomenon when all the cool
kids were up in Shoreditch. Times change, and with the Rabbit team
(courtesy of their new EMC/VMWare/SpringSource hierarchy of benevolent
dictators) down here in lovely, sunny bankside, it might be time for
everybody to get their stab vests on and sojourn down to Silicon
Wobbly Bridge.

Bankside is the new Shoreditch which is the new Clerkenwell which is
the new ..... :-)

On Thu, Jun 3, 2010 at 3:34 PM, James Governor <jgovernor at redmonk.com> wrote:
> Sod off with your sarf of the river bollocks. You know as well as I do
> that pubsub is a shoreditch phenomenon....
>
> I go for 2 of course.
>
> -----Original Message-----
> From: Alexis Richardson [mailto:alexis.richardson at gmail.com]
> Sent: 03 June 2010 15:33
> To: Alvaro Videla
> Cc: Jonathan Lister; James Governor; rabbitmq-discuss; Lionel Cons; Justin
> Sheehy; pub-sub at googlegroups.com; Bojan Nastic; Kirk Wylie
> Subject: Re: June 9th - Meetup in London
>
> And now we come to the important question of:
>
> * Pub Selection.
>
> I'd like to propose two possible areas for the pubsub meet-up...
>
> 1. London Bridge / Borough
> 2. Spitalfields
>
> What do people prefer? ?My preference is (1).
>
> alexis
>
>
> On Tue, May 25, 2010 at 6:02 PM, Alvaro Videla <videlalvaro at gmail.com>
> wrote:
>> For me it' ok too, just let me know the details
>>
>> -Alvaro
>>
>>
>> On May 26, 2010, at 1:01 AM, Jonathan Lister wrote:
>>
>>> Sounds good to me.
>>>
>>> On Mon, May 24, 2010 at 9:08 PM, Alexis Richardson
>>> <alexis.richardson at gmail.com> wrote:
>>>> Right
>>>>
>>>> Let's organise this...
>>>>
>>>> Beers on Wednesday June 9th starting at ... 5:30pm?
>>>>
>>>> Location?
>>>>
>>>> alexis
>>>>
>>>>
>>>>
>>>>
>>>> On Wed, May 12, 2010 at 12:22 PM, Alvaro Videla
> <videlalvaro at gmail.com> wrote:
>>>>> That's OK for me, since I'll be arriving in the morning
>>>>>
>>>>>
>>>>> On May 12, 2010, at 7:09 PM, Alexis Richardson wrote:
>>>>>
>>>>>> On Wed, May 12, 2010 at 12:05 PM, James Governor
> <jgovernor at redmonk.com> wrote:
>>>>>>> Pub sub. Lets pick it up. Les plans diaboliques.
>>>>>>
>>>>>> Merveilleux.
>>>>>>
>>>>>>
>>>>>>
>>>>>>
>>>>>>> When in june?
>>>>>>
>>>>>> Do as the junians do?
>>>>>>
>>>>>> I suggest Wednesday June 9th.
>>>>>>
>>>>>> alexis
>>>>>>
>>>>>>
>>>>>>>
>>>>>>>
>>>>>>> -----Original Message-----
>>>>>>> From: alexis.richardson at gmail.com
> [mailto:alexis.richardson at gmail.com] On
>>>>>>> Behalf Of Alexis Richardson
>>>>>>> Sent: 12 May 2010 11:59
>>>>>>> To: Alvaro Videla
>>>>>>> Cc: rabbitmq-discuss; James Governor; Jonathan Lister
>>>>>>> Subject: Re: [rabbitmq-discuss] Meeting in London
>>>>>>>
>>>>>>> Alvaro
>>>>>>>
>>>>>>> That sounds like an excellent plan. ?Perhaps it's time for another
>>>>>>> 'pubsub' meet-up? ?If it is the week of the EF then we can invite a
>>>>>>> lot of 'NoSQL' folks along too...
>>>>>>>
>>>>>>> alexis
>>>>>>>
>>>>>>>
>>>>>>> On Wed, May 12, 2010 at 10:08 AM, Alvaro Videla
> <videlalvaro at gmail.com>
>>>>>>> wrote:
>>>>>>>> Hi guys/gals,
>>>>>>>>
>>>>>>>> I'll asked Alexis about this and he told me to ask here:
>>>>>>>>
>>>>>>>> I'll be in London next June for the Erlang Factory. Since I'm
> traveling
>>>>>>> from China and I won't be going there any time like every week :) I
> would
>>>>>>> like to meet with some of the RabbitMQ guys in London, can we
> arrange
>>>>>>> something?
>>>>>>>>
>>>>>>>> Perhaps going to a pub or something?
>>>>>>>>
>>>>>>>> Regards,
>>>>>>>>
>>>>>>>> Alvaro
>>>>>>>> _______________________________________________
>>>>>>>> rabbitmq-discuss mailing list
>>>>>>>> rabbitmq-discuss at lists.rabbitmq.com
>>>>>>>>
> http://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss
>>>>>>>>
>>>>>>>
>>>>>
>>>>>
>>>>
>>>
>>>
>>>
>>> --
>>> t: @jayfresh
>>> b: http://www.jaybyjayfresh.com
>>
>>
>

From kirk at kirkwylie.com  Thu Jun  3 17:12:52 2010
From: kirk at kirkwylie.com (Kirk Wylie)
Date: Thu, 3 Jun 2010 17:12:52 +0100
Subject: [rabbitmq-discuss] June 9th - Meetup in London
In-Reply-To: <9c2265b14ff9021303a5af6506f86869@mail.gmail.com>
References: <AANLkTikYX3tJD_trmVmJ1jZ0nhDek1m_d1nTIx2VRced@mail.gmail.com>
	<AANLkTinr1Q8w1HdwNLWfNeAedMp80P5UeKdamGtoEMUH@mail.gmail.com>
	<8EC96D2F-DF66-4261-9D8D-AE9C51D4D068@gmail.com>
	<AANLkTimA1NVuhipiVfDXqtOvvexjRSQ4RmyUj7Rn8XM9@mail.gmail.com>
	<9b8d0924371a45fcdc596b348e41aa63@mail.gmail.com>
	<AANLkTin79kNNSq0NhxlGKcgluuKpcv149sIj7KNbrNQA@mail.gmail.com>
	<9c2265b14ff9021303a5af6506f86869@mail.gmail.com>
Message-ID: <AANLkTim5G9-m0SJPhi13TSf90HXGZHJLpE2rtacHzBfN@mail.gmail.com>

Well, no, some of us are sucking on the big Venture Capital tit. :-)

I note that IGIndex is also just down the road here in Silicon Power Station.

On Thu, Jun 3, 2010 at 5:04 PM, James Governor <jgovernor at redmonk.com> wrote:
> So its all about sucking on the big corporate tit now, is it?
>
> -----Original Message-----
> From: Kirk Wylie [mailto:kirk at kirkwylie.com]
> Sent: 03 June 2010 16:25
> To: James Governor
> Cc: Alexis Richardson; Alvaro Videla; Jonathan Lister; rabbitmq-discuss;
> Lionel Cons; Justin Sheehy; pub-sub at googlegroups.com; Bojan Nastic
> Subject: Re: June 9th - Meetup in London
>
> Yeah, I think it was a north of the river phenomenon when all the cool
> kids were up in Shoreditch. Times change, and with the Rabbit team
> (courtesy of their new EMC/VMWare/SpringSource hierarchy of benevolent
> dictators) down here in lovely, sunny bankside, it might be time for
> everybody to get their stab vests on and sojourn down to Silicon
> Wobbly Bridge.
>
> Bankside is the new Shoreditch which is the new Clerkenwell which is
> the new ..... :-)
>
> On Thu, Jun 3, 2010 at 3:34 PM, James Governor <jgovernor at redmonk.com>
> wrote:
>> Sod off with your sarf of the river bollocks. You know as well as I do
>> that pubsub is a shoreditch phenomenon....
>>
>> I go for 2 of course.
>>
>> -----Original Message-----
>> From: Alexis Richardson [mailto:alexis.richardson at gmail.com]
>> Sent: 03 June 2010 15:33
>> To: Alvaro Videla
>> Cc: Jonathan Lister; James Governor; rabbitmq-discuss; Lionel Cons;
> Justin
>> Sheehy; pub-sub at googlegroups.com; Bojan Nastic; Kirk Wylie
>> Subject: Re: June 9th - Meetup in London
>>
>> And now we come to the important question of:
>>
>> * Pub Selection.
>>
>> I'd like to propose two possible areas for the pubsub meet-up...
>>
>> 1. London Bridge / Borough
>> 2. Spitalfields
>>
>> What do people prefer? ?My preference is (1).
>>
>> alexis
>>
>>
>> On Tue, May 25, 2010 at 6:02 PM, Alvaro Videla <videlalvaro at gmail.com>
>> wrote:
>>> For me it' ok too, just let me know the details
>>>
>>> -Alvaro
>>>
>>>
>>> On May 26, 2010, at 1:01 AM, Jonathan Lister wrote:
>>>
>>>> Sounds good to me.
>>>>
>>>> On Mon, May 24, 2010 at 9:08 PM, Alexis Richardson
>>>> <alexis.richardson at gmail.com> wrote:
>>>>> Right
>>>>>
>>>>> Let's organise this...
>>>>>
>>>>> Beers on Wednesday June 9th starting at ... 5:30pm?
>>>>>
>>>>> Location?
>>>>>
>>>>> alexis
>>>>>
>>>>>
>>>>>
>>>>>
>>>>> On Wed, May 12, 2010 at 12:22 PM, Alvaro Videla
>> <videlalvaro at gmail.com> wrote:
>>>>>> That's OK for me, since I'll be arriving in the morning
>>>>>>
>>>>>>
>>>>>> On May 12, 2010, at 7:09 PM, Alexis Richardson wrote:
>>>>>>
>>>>>>> On Wed, May 12, 2010 at 12:05 PM, James Governor
>> <jgovernor at redmonk.com> wrote:
>>>>>>>> Pub sub. Lets pick it up. Les plans diaboliques.
>>>>>>>
>>>>>>> Merveilleux.
>>>>>>>
>>>>>>>
>>>>>>>
>>>>>>>
>>>>>>>> When in june?
>>>>>>>
>>>>>>> Do as the junians do?
>>>>>>>
>>>>>>> I suggest Wednesday June 9th.
>>>>>>>
>>>>>>> alexis
>>>>>>>
>>>>>>>
>>>>>>>>
>>>>>>>>
>>>>>>>> -----Original Message-----
>>>>>>>> From: alexis.richardson at gmail.com
>> [mailto:alexis.richardson at gmail.com] On
>>>>>>>> Behalf Of Alexis Richardson
>>>>>>>> Sent: 12 May 2010 11:59
>>>>>>>> To: Alvaro Videla
>>>>>>>> Cc: rabbitmq-discuss; James Governor; Jonathan Lister
>>>>>>>> Subject: Re: [rabbitmq-discuss] Meeting in London
>>>>>>>>
>>>>>>>> Alvaro
>>>>>>>>
>>>>>>>> That sounds like an excellent plan. ?Perhaps it's time for another
>>>>>>>> 'pubsub' meet-up? ?If it is the week of the EF then we can invite
> a
>>>>>>>> lot of 'NoSQL' folks along too...
>>>>>>>>
>>>>>>>> alexis
>>>>>>>>
>>>>>>>>
>>>>>>>> On Wed, May 12, 2010 at 10:08 AM, Alvaro Videla
>> <videlalvaro at gmail.com>
>>>>>>>> wrote:
>>>>>>>>> Hi guys/gals,
>>>>>>>>>
>>>>>>>>> I'll asked Alexis about this and he told me to ask here:
>>>>>>>>>
>>>>>>>>> I'll be in London next June for the Erlang Factory. Since I'm
>> traveling
>>>>>>>> from China and I won't be going there any time like every week :)
> I
>> would
>>>>>>>> like to meet with some of the RabbitMQ guys in London, can we
>> arrange
>>>>>>>> something?
>>>>>>>>>
>>>>>>>>> Perhaps going to a pub or something?
>>>>>>>>>
>>>>>>>>> Regards,
>>>>>>>>>
>>>>>>>>> Alvaro
>>>>>>>>> _______________________________________________
>>>>>>>>> rabbitmq-discuss mailing list
>>>>>>>>> rabbitmq-discuss at lists.rabbitmq.com
>>>>>>>>>
>> http://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss
>>>>>>>>>
>>>>>>>>
>>>>>>
>>>>>>
>>>>>
>>>>
>>>>
>>>>
>>>> --
>>>> t: @jayfresh
>>>> b: http://www.jaybyjayfresh.com
>>>
>>>
>>
>

From matthias at rabbitmq.com  Thu Jun  3 17:35:59 2010
From: matthias at rabbitmq.com (Matthias Radestock)
Date: Thu, 03 Jun 2010 17:35:59 +0100
Subject: [rabbitmq-discuss] RabbitMQ Consumes Very Slow
In-Reply-To: <20100602130109.GA3546@rabbitmq.com>
References: <AANLkTikPa8gCw8oA60seupzSulnQ3VMlpl9dca0yOVzx@mail.gmail.com>	<20100601230934.GA28451@wellquite.org>	<E57757ED-280B-4C7E-BA12-832648FD0F42@vmware.com>	<AANLkTilI7NWcJWdm9AK6Gf5tIKMtMUnun50jpuER0dvr@mail.gmail.com>
	<20100602130109.GA3546@rabbitmq.com>
Message-ID: <4C07D9EF.704@rabbitmq.com>

On 02/06/10 14:01, Matthew Sackman wrote:
> On Tue, Jun 01, 2010 at 04:58:32PM -0700, Bradford Stephens wrote:
>> Went from about 3 msgs/sec to ~20,000 msgs/sec.
> [...]
> Hmm, I wasn't aware basic.get was quite /that/ slow, but it's possible.

basic.get isn't inherently slow; it's the latency that's the killer. 
Fetching messages one-at-a-time with basic.get limits the throughput to 
1/2*roundtrip_latency. By contrast, the throughput achievable with 
basic.consume is only bounded by network bandwidth and the performance 
of the endpoints.


Matthias.

From tsuraan at gmail.com  Thu Jun  3 17:49:39 2010
From: tsuraan at gmail.com (tsuraan)
Date: Thu, 3 Jun 2010 11:49:39 -0500
Subject: [rabbitmq-discuss] bug21673 file formats
Message-ID: <AANLkTimbouXOE9Ea7dLFN65MmGlE4K5tdsW49ZLkSXf7@mail.gmail.com>

Has the on-disk format of the message queues in bug21673 stabilized,
or is there a plan for it to become stable?  I'd like to upgrade
regularly, but sometimes when I do I wind up with code that's
incompatible with my queues, which is a pain.  Could the disk format
changes be logged in the mercurial commit messages, or on a newsfeed
or something?

From matthew at rabbitmq.com  Thu Jun  3 17:59:09 2010
From: matthew at rabbitmq.com (Matthew Sackman)
Date: Thu, 3 Jun 2010 17:59:09 +0100
Subject: [rabbitmq-discuss] bug21673 file formats
In-Reply-To: <AANLkTimbouXOE9Ea7dLFN65MmGlE4K5tdsW49ZLkSXf7@mail.gmail.com>
References: <AANLkTimbouXOE9Ea7dLFN65MmGlE4K5tdsW49ZLkSXf7@mail.gmail.com>
Message-ID: <20100603165909.GD9881@rabbitmq.com>

Hi,

On Thu, Jun 03, 2010 at 11:49:39AM -0500, tsuraan wrote:
> Has the on-disk format of the message queues in bug21673 stabilized,
> or is there a plan for it to become stable?  I'd like to upgrade
> regularly, but sometimes when I do I wind up with code that's
> incompatible with my queues, which is a pain.  Could the disk format
> changes be logged in the mercurial commit messages, or on a newsfeed
> or something?

Err, it's not changed for a while now, so I'm curious whether you're
seeing some other issue. Certainly, I'm not sure I can think of it
changing this year at all. I will try to make an effort to put in the
commit messages in the future if the format is changing.

Best wishes,

Matthew

From matthew at rabbitmq.com  Thu Jun  3 18:11:56 2010
From: matthew at rabbitmq.com (Matthew Sackman)
Date: Thu, 3 Jun 2010 18:11:56 +0100
Subject: [rabbitmq-discuss] bug21673 file formats
In-Reply-To: <20100603165909.GD9881@rabbitmq.com>
References: <AANLkTimbouXOE9Ea7dLFN65MmGlE4K5tdsW49ZLkSXf7@mail.gmail.com>
	<20100603165909.GD9881@rabbitmq.com>
Message-ID: <20100603171156.GE9881@rabbitmq.com>

On Thu, Jun 03, 2010 at 05:59:09PM +0100, Matthew Sackman wrote:
> Hi,
> 
> On Thu, Jun 03, 2010 at 11:49:39AM -0500, tsuraan wrote:
> > Has the on-disk format of the message queues in bug21673 stabilized,
> > or is there a plan for it to become stable?  I'd like to upgrade
> > regularly, but sometimes when I do I wind up with code that's
> > incompatible with my queues, which is a pain.  Could the disk format
> > changes be logged in the mercurial commit messages, or on a newsfeed
> > or something?
> 
> Err, it's not changed for a while now, so I'm curious whether you're
> seeing some other issue. Certainly, I'm not sure I can think of it
> changing this year at all. I will try to make an effort to put in the
> commit messages in the future if the format is changing.

Some follow up on that - the mnesia schema *has* changed recently which
will have caused you issues (though this was done on a different branch
and made it to default before making it into the new persister branch).
Also, some of the paths in the new persister have changed around easter
time which may also have caused issues.

Matthew

From videlalvaro at gmail.com  Thu Jun  3 18:54:59 2010
From: videlalvaro at gmail.com (Alvaro Videla)
Date: Thu, 3 Jun 2010 19:54:59 +0200
Subject: [rabbitmq-discuss] June 9th - Meetup in London
In-Reply-To: <AANLkTimA1NVuhipiVfDXqtOvvexjRSQ4RmyUj7Rn8XM9@mail.gmail.com>
References: <AANLkTikYX3tJD_trmVmJ1jZ0nhDek1m_d1nTIx2VRced@mail.gmail.com>
	<AANLkTinr1Q8w1HdwNLWfNeAedMp80P5UeKdamGtoEMUH@mail.gmail.com>
	<8EC96D2F-DF66-4261-9D8D-AE9C51D4D068@gmail.com>
	<AANLkTimA1NVuhipiVfDXqtOvvexjRSQ4RmyUj7Rn8XM9@mail.gmail.com>
Message-ID: <24B1C1E0-ACB3-4C50-AC17-8E9F229F69B8@gmail.com>

I would like a place close to where the speaker dinner of Erlang Factory is.

You know London better than me, so your choice is fine for me.

-Alvaro

On Jun 3, 2010, at 4:32 PM, Alexis Richardson wrote:

> And now we come to the important question of:
> 
> * Pub Selection.
> 
> I'd like to propose two possible areas for the pubsub meet-up...
> 
> 1. London Bridge / Borough
> 2. Spitalfields
> 
> What do people prefer?  My preference is (1).
> 
> alexis
> 
> 
> On Tue, May 25, 2010 at 6:02 PM, Alvaro Videla <videlalvaro at gmail.com> wrote:
>> For me it' ok too, just let me know the details
>> 
>> -Alvaro
>> 
>> 
>> On May 26, 2010, at 1:01 AM, Jonathan Lister wrote:
>> 
>>> Sounds good to me.
>>> 
>>> On Mon, May 24, 2010 at 9:08 PM, Alexis Richardson
>>> <alexis.richardson at gmail.com> wrote:
>>>> Right
>>>> 
>>>> Let's organise this...
>>>> 
>>>> Beers on Wednesday June 9th starting at ... 5:30pm?
>>>> 
>>>> Location?
>>>> 
>>>> alexis
>>>> 
>>>> 
>>>> 
>>>> 
>>>> On Wed, May 12, 2010 at 12:22 PM, Alvaro Videla <videlalvaro at gmail.com> wrote:
>>>>> That's OK for me, since I'll be arriving in the morning
>>>>> 
>>>>> 
>>>>> On May 12, 2010, at 7:09 PM, Alexis Richardson wrote:
>>>>> 
>>>>>> On Wed, May 12, 2010 at 12:05 PM, James Governor <jgovernor at redmonk.com> wrote:
>>>>>>> Pub sub. Lets pick it up. Les plans diaboliques.
>>>>>> 
>>>>>> Merveilleux.
>>>>>> 
>>>>>> 
>>>>>> 
>>>>>> 
>>>>>>> When in june?
>>>>>> 
>>>>>> Do as the junians do?
>>>>>> 
>>>>>> I suggest Wednesday June 9th.
>>>>>> 
>>>>>> alexis
>>>>>> 
>>>>>> 
>>>>>>> 
>>>>>>> 
>>>>>>> -----Original Message-----
>>>>>>> From: alexis.richardson at gmail.com [mailto:alexis.richardson at gmail.com] On
>>>>>>> Behalf Of Alexis Richardson
>>>>>>> Sent: 12 May 2010 11:59
>>>>>>> To: Alvaro Videla
>>>>>>> Cc: rabbitmq-discuss; James Governor; Jonathan Lister
>>>>>>> Subject: Re: [rabbitmq-discuss] Meeting in London
>>>>>>> 
>>>>>>> Alvaro
>>>>>>> 
>>>>>>> That sounds like an excellent plan.  Perhaps it's time for another
>>>>>>> 'pubsub' meet-up?  If it is the week of the EF then we can invite a
>>>>>>> lot of 'NoSQL' folks along too...
>>>>>>> 
>>>>>>> alexis
>>>>>>> 
>>>>>>> 
>>>>>>> On Wed, May 12, 2010 at 10:08 AM, Alvaro Videla <videlalvaro at gmail.com>
>>>>>>> wrote:
>>>>>>>> Hi guys/gals,
>>>>>>>> 
>>>>>>>> I'll asked Alexis about this and he told me to ask here:
>>>>>>>> 
>>>>>>>> I'll be in London next June for the Erlang Factory. Since I'm traveling
>>>>>>> from China and I won't be going there any time like every week :) I would
>>>>>>> like to meet with some of the RabbitMQ guys in London, can we arrange
>>>>>>> something?
>>>>>>>> 
>>>>>>>> Perhaps going to a pub or something?
>>>>>>>> 
>>>>>>>> Regards,
>>>>>>>> 
>>>>>>>> Alvaro
>>>>>>>> _______________________________________________
>>>>>>>> rabbitmq-discuss mailing list
>>>>>>>> rabbitmq-discuss at lists.rabbitmq.com
>>>>>>>> http://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss
>>>>>>>> 
>>>>>>> 
>>>>> 
>>>>> 
>>>> 
>>> 
>>> 
>>> 
>>> --
>>> t: @jayfresh
>>> b: http://www.jaybyjayfresh.com
>> 
>> 


From tsuraan at gmail.com  Thu Jun  3 19:19:56 2010
From: tsuraan at gmail.com (tsuraan)
Date: Thu, 3 Jun 2010 13:19:56 -0500
Subject: [rabbitmq-discuss] bug21673 file formats
In-Reply-To: <20100603171156.GE9881@rabbitmq.com>
References: <AANLkTimbouXOE9Ea7dLFN65MmGlE4K5tdsW49ZLkSXf7@mail.gmail.com>
	<20100603165909.GD9881@rabbitmq.com>
	<20100603171156.GE9881@rabbitmq.com>
Message-ID: <AANLkTinGiWKHlourpu_9Q9zEfeVNQ4fCJ-5lb1-oclpW@mail.gmail.com>

> Some follow up on that - the mnesia schema *has* changed recently which
> will have caused you issues (though this was done on a different branch
> and made it to default before making it into the new persister branch).
> Also, some of the paths in the new persister have changed around easter
> time which may also have caused issues.

I have been running code from april 19; trying to start that code on
the older queues caused rabbit to crash, whereas wiping out the dir
and starting fresh worked pretty well.  I just upgraded rabbit today,
and it can't see any queues from my april 19th build either.  That's
even stranger, because I also can't add new queues; the queue_declare
gives me an error that the queue doesn't exist.  very strange.  It's a
known risk of running dev code, so I'm not really annoyed by it, but
it would be nice if it never happened :)

From alexis at rabbitmq.com  Thu Jun  3 19:29:16 2010
From: alexis at rabbitmq.com (Alexis Richardson)
Date: Thu, 3 Jun 2010 19:29:16 +0100
Subject: [rabbitmq-discuss] June 9th - Meetup in London
In-Reply-To: <24B1C1E0-ACB3-4C50-AC17-8E9F229F69B8@gmail.com>
References: <AANLkTikYX3tJD_trmVmJ1jZ0nhDek1m_d1nTIx2VRced@mail.gmail.com>
	<AANLkTinr1Q8w1HdwNLWfNeAedMp80P5UeKdamGtoEMUH@mail.gmail.com>
	<8EC96D2F-DF66-4261-9D8D-AE9C51D4D068@gmail.com>
	<AANLkTimA1NVuhipiVfDXqtOvvexjRSQ4RmyUj7Rn8XM9@mail.gmail.com>
	<24B1C1E0-ACB3-4C50-AC17-8E9F229F69B8@gmail.com>
Message-ID: <AANLkTilfObXXGU_lKzMIaCNCIBGgyQcH6SBgQyhz2HXA@mail.gmail.com>

That would be spitalfields

On Jun 3, 2010 6:55 PM, "Alvaro Videla" <videlalvaro at gmail.com> wrote:

I would like a place close to where the speaker dinner of Erlang Factory is.

You know London better than me, so your choice is fine for me.

-Alvaro

On Jun 3, 2010, at 4:32 PM, Alexis Richardson wrote: > And now we come to
the important question o...
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20100603/7c2dc260/attachment.htm>

From matthew at rabbitmq.com  Thu Jun  3 19:56:22 2010
From: matthew at rabbitmq.com (Matthew Sackman)
Date: Thu, 3 Jun 2010 19:56:22 +0100
Subject: [rabbitmq-discuss] bug21673 file formats
In-Reply-To: <AANLkTinGiWKHlourpu_9Q9zEfeVNQ4fCJ-5lb1-oclpW@mail.gmail.com>
References: <AANLkTimbouXOE9Ea7dLFN65MmGlE4K5tdsW49ZLkSXf7@mail.gmail.com>
	<20100603165909.GD9881@rabbitmq.com>
	<20100603171156.GE9881@rabbitmq.com>
	<AANLkTinGiWKHlourpu_9Q9zEfeVNQ4fCJ-5lb1-oclpW@mail.gmail.com>
Message-ID: <20100603185622.GA4666@wellquite.org>

On Thu, Jun 03, 2010 at 01:19:56PM -0500, tsuraan wrote:
> I have been running code from april 19; trying to start that code on
> the older queues caused rabbit to crash, whereas wiping out the dir
> and starting fresh worked pretty well.  I just upgraded rabbit today,
> and it can't see any queues from my april 19th build either.  That's
> even stranger, because I also can't add new queues; the queue_declare
> gives me an error that the queue doesn't exist.  very strange.  It's a
> known risk of running dev code, so I'm not really annoyed by it, but
> it would be nice if it never happened :)

Indeed! That's odd about not being able to declare queues, though we
have just changed some of the restrictions on exclusive queues as we
were unnecessarily lax about the restrictions previously and the change
brings us closer to the 0-9-1 spec requirements, so if you're doing
something with exclusive queues you might be hitting a new issue.

As ever, steps to reproduce and log contents are very welcome ;)

Matthew

From alexis at rabbitmq.com  Fri Jun  4 11:56:03 2010
From: alexis at rabbitmq.com (Alexis Richardson)
Date: Fri, 4 Jun 2010 11:56:03 +0100
Subject: [rabbitmq-discuss] June 9th - Meetup in London
In-Reply-To: <AANLkTilfObXXGU_lKzMIaCNCIBGgyQcH6SBgQyhz2HXA@mail.gmail.com>
References: <AANLkTikYX3tJD_trmVmJ1jZ0nhDek1m_d1nTIx2VRced@mail.gmail.com>
	<AANLkTinr1Q8w1HdwNLWfNeAedMp80P5UeKdamGtoEMUH@mail.gmail.com>
	<8EC96D2F-DF66-4261-9D8D-AE9C51D4D068@gmail.com>
	<AANLkTimA1NVuhipiVfDXqtOvvexjRSQ4RmyUj7Rn8XM9@mail.gmail.com>
	<24B1C1E0-ACB3-4C50-AC17-8E9F229F69B8@gmail.com>
	<AANLkTilfObXXGU_lKzMIaCNCIBGgyQcH6SBgQyhz2HXA@mail.gmail.com>
Message-ID: <AANLkTim0EFlHoC1Dd6sFU_srDPDY4fVO7Obz5KbNOOPH@mail.gmail.com>

Right, so: deferring to the various folks coming from abroad for the
Erlang Factory, I propose we return to the POET

http://www.welovelocal.com/en/london/tower-hamlets/spitalfields/pubs/the-poet-bar-e17ez.html

For those coming from the sarf, probably the easiest thing is to cab it.

James, however, this does mean the first round is on you.

alexis



On Thu, Jun 3, 2010 at 7:29 PM, Alexis Richardson <alexis at rabbitmq.com> wrote:
> That would be spitalfields
>
> On Jun 3, 2010 6:55 PM, "Alvaro Videla" <videlalvaro at gmail.com> wrote:
>
> I would like a place close to where the speaker dinner of Erlang Factory is.
>
> You know London better than me, so your choice is fine for me.
>
> -Alvaro
>
> On Jun 3, 2010, at 4:32 PM, Alexis Richardson wrote: > And now we come to
> the important question o...

From ozhurakousky at vmware.com  Fri Jun  4 16:17:02 2010
From: ozhurakousky at vmware.com (Oleg Zhurakousky)
Date: Fri, 4 Jun 2010 08:17:02 -0700
Subject: [rabbitmq-discuss] 'immediate' vs 'mandatory'
In-Reply-To: <AANLkTim0EFlHoC1Dd6sFU_srDPDY4fVO7Obz5KbNOOPH@mail.gmail.com>
References: <AANLkTikYX3tJD_trmVmJ1jZ0nhDek1m_d1nTIx2VRced@mail.gmail.com>
	<AANLkTinr1Q8w1HdwNLWfNeAedMp80P5UeKdamGtoEMUH@mail.gmail.com>
	<8EC96D2F-DF66-4261-9D8D-AE9C51D4D068@gmail.com>
	<AANLkTimA1NVuhipiVfDXqtOvvexjRSQ4RmyUj7Rn8XM9@mail.gmail.com>
	<24B1C1E0-ACB3-4C50-AC17-8E9F229F69B8@gmail.com>
	<AANLkTilfObXXGU_lKzMIaCNCIBGgyQcH6SBgQyhz2HXA@mail.gmail.com>
	<AANLkTim0EFlHoC1Dd6sFU_srDPDY4fVO7Obz5KbNOOPH@mail.gmail.com>
Message-ID: <E0057F81-189E-47E2-97A5-4A250F5B50FE@vmware.com>

What is the main difference between the two?

The docs read: If a message is published with the "mandatory" or "immediate" flags set, but cannot be delivered...

Should it read as: "Can not be delivered to the consumer" or "can not be routed to a queue"?
Thanks
Oleg

On Jun 4, 2010, at 6:56 AM, Alexis Richardson wrote:

Right, so: deferring to the various folks coming from abroad for the
Erlang Factory, I propose we return to the POET

http://www.welovelocal.com/en/london/tower-hamlets/spitalfields/pubs/the-poet-bar-e17ez.html

For those coming from the sarf, probably the easiest thing is to cab it.

James, however, this does mean the first round is on you.

alexis



On Thu, Jun 3, 2010 at 7:29 PM, Alexis Richardson <alexis at rabbitmq.com> wrote:
That would be spitalfields

On Jun 3, 2010 6:55 PM, "Alvaro Videla" <videlalvaro at gmail.com> wrote:

I would like a place close to where the speaker dinner of Erlang Factory is.

You know London better than me, so your choice is fine for me.

-Alvaro

On Jun 3, 2010, at 4:32 PM, Alexis Richardson wrote: > And now we come to
the important question o...
_______________________________________________
rabbitmq-discuss mailing list
rabbitmq-discuss at lists.rabbitmq.com
http://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss


From simon at rabbitmq.com  Fri Jun  4 16:40:11 2010
From: simon at rabbitmq.com (Simon MacMullen)
Date: Fri, 04 Jun 2010 16:40:11 +0100
Subject: [rabbitmq-discuss] 'immediate' vs 'mandatory'
In-Reply-To: <E0057F81-189E-47E2-97A5-4A250F5B50FE@vmware.com>
References: <AANLkTikYX3tJD_trmVmJ1jZ0nhDek1m_d1nTIx2VRced@mail.gmail.com>	<AANLkTinr1Q8w1HdwNLWfNeAedMp80P5UeKdamGtoEMUH@mail.gmail.com>	<8EC96D2F-DF66-4261-9D8D-AE9C51D4D068@gmail.com>	<AANLkTimA1NVuhipiVfDXqtOvvexjRSQ4RmyUj7Rn8XM9@mail.gmail.com>	<24B1C1E0-ACB3-4C50-AC17-8E9F229F69B8@gmail.com>	<AANLkTilfObXXGU_lKzMIaCNCIBGgyQcH6SBgQyhz2HXA@mail.gmail.com>	<AANLkTim0EFlHoC1Dd6sFU_srDPDY4fVO7Obz5KbNOOPH@mail.gmail.com>
	<E0057F81-189E-47E2-97A5-4A250F5B50FE@vmware.com>
Message-ID: <4C091E5B.3050802@rabbitmq.com>

On 04/06/10 16:17, Oleg Zhurakousky wrote:
> What is the main difference between the two?
>
> The docs read: If a message is published with the "mandatory" or
> "immediate" flags set, but cannot be delivered...
>
> Should it read as: "Can not be delivered to the consumer" or "can not
> be routed to a queue"? Thanks Oleg

Hi Oleg.

Mandatory == must be delivered to a queue.

Immediate == must be delivered to a consumer.

Note that immediate really means immediate - if it can be delivered to a 
queue, and a consumer is pulling things from that queue but not quickly 
enough and messages are backing up in the server, that's not good enough.

Cheers, Simon

From ozhurakousky at vmware.com  Fri Jun  4 16:54:38 2010
From: ozhurakousky at vmware.com (Oleg Zhurakousky)
Date: Fri, 4 Jun 2010 08:54:38 -0700
Subject: [rabbitmq-discuss] 'immediate' vs 'mandatory'
In-Reply-To: <4C091E5B.3050802@rabbitmq.com>
References: <AANLkTikYX3tJD_trmVmJ1jZ0nhDek1m_d1nTIx2VRced@mail.gmail.com>
	<AANLkTinr1Q8w1HdwNLWfNeAedMp80P5UeKdamGtoEMUH@mail.gmail.com>
	<8EC96D2F-DF66-4261-9D8D-AE9C51D4D068@gmail.com>
	<AANLkTimA1NVuhipiVfDXqtOvvexjRSQ4RmyUj7Rn8XM9@mail.gmail.com>
	<24B1C1E0-ACB3-4C50-AC17-8E9F229F69B8@gmail.com>
	<AANLkTilfObXXGU_lKzMIaCNCIBGgyQcH6SBgQyhz2HXA@mail.gmail.com>
	<AANLkTim0EFlHoC1Dd6sFU_srDPDY4fVO7Obz5KbNOOPH@mail.gmail.com>
	<E0057F81-189E-47E2-97A5-4A250F5B50FE@vmware.com>
	<4C091E5B.3050802@rabbitmq.com>
Message-ID: <253EA436-77D2-41C4-B41A-C430BE70CE42@vmware.com>

Thanks, Simon

So what does 'must be delivered to the consumer means?'
a) handleDelivery(..) was successfully invoked.
b) consumer sent ACK.
c) consumer processes message transactionally and then commits it

Cheers
Oleg
On Jun 4, 2010, at 11:40 AM, Simon MacMullen wrote:

> On 04/06/10 16:17, Oleg Zhurakousky wrote:
>> What is the main difference between the two?
>> 
>> The docs read: If a message is published with the "mandatory" or
>> "immediate" flags set, but cannot be delivered...
>> 
>> Should it read as: "Can not be delivered to the consumer" or "can not
>> be routed to a queue"? Thanks Oleg
> 
> Hi Oleg.
> 
> Mandatory == must be delivered to a queue.
> 
> Immediate == must be delivered to a consumer.
> 
> Note that immediate really means immediate - if it can be delivered to a 
> queue, and a consumer is pulling things from that queue but not quickly 
> enough and messages are backing up in the server, that's not good enough.
> 
> Cheers, Simon
> _______________________________________________
> rabbitmq-discuss mailing list
> rabbitmq-discuss at lists.rabbitmq.com
> http://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss


From simon at rabbitmq.com  Fri Jun  4 17:54:25 2010
From: simon at rabbitmq.com (Simon MacMullen)
Date: Fri, 04 Jun 2010 17:54:25 +0100
Subject: [rabbitmq-discuss] 'immediate' vs 'mandatory'
In-Reply-To: <253EA436-77D2-41C4-B41A-C430BE70CE42@vmware.com>
References: <AANLkTikYX3tJD_trmVmJ1jZ0nhDek1m_d1nTIx2VRced@mail.gmail.com>
	<AANLkTinr1Q8w1HdwNLWfNeAedMp80P5UeKdamGtoEMUH@mail.gmail.com>
	<8EC96D2F-DF66-4261-9D8D-AE9C51D4D068@gmail.com>
	<AANLkTimA1NVuhipiVfDXqtOvvexjRSQ4RmyUj7Rn8XM9@mail.gmail.com>
	<24B1C1E0-ACB3-4C50-AC17-8E9F229F69B8@gmail.com>
	<AANLkTilfObXXGU_lKzMIaCNCIBGgyQcH6SBgQyhz2HXA@mail.gmail.com>
	<AANLkTim0EFlHoC1Dd6sFU_srDPDY4fVO7Obz5KbNOOPH@mail.gmail.com>
	<E0057F81-189E-47E2-97A5-4A250F5B50FE@vmware.com>
	<4C091E5B.3050802@rabbitmq.com>
	<253EA436-77D2-41C4-B41A-C430BE70CE42@vmware.com>
Message-ID: <4C092FC1.2070303@rabbitmq.com>

On 04/06/10 16:54, Oleg Zhurakousky wrote:
> So what does 'must be delivered to the consumer means?'
> a) handleDelivery(..) was successfully invoked.
> b) consumer sent ACK.
> c) consumer processes message transactionally and then commits it

Well, from the perspective of the server a) and b) are the same thing 
(the server cannot be sure the client has seen the message unless it 
sees an ack).

However, it looks like what we actually do is to consider it delivered 
(for the purposes of the immediate flag but not any other) as soon as we 
start to send the message to the consumer. Hmm.

Cheers, Simon

From ozhurakousky at vmware.com  Fri Jun  4 18:03:01 2010
From: ozhurakousky at vmware.com (Oleg Zhurakousky)
Date: Fri, 4 Jun 2010 10:03:01 -0700
Subject: [rabbitmq-discuss] 'immediate' vs 'mandatory'
In-Reply-To: <4C092FC1.2070303@rabbitmq.com>
References: <AANLkTikYX3tJD_trmVmJ1jZ0nhDek1m_d1nTIx2VRced@mail.gmail.com>
	<AANLkTinr1Q8w1HdwNLWfNeAedMp80P5UeKdamGtoEMUH@mail.gmail.com>
	<8EC96D2F-DF66-4261-9D8D-AE9C51D4D068@gmail.com>
	<AANLkTimA1NVuhipiVfDXqtOvvexjRSQ4RmyUj7Rn8XM9@mail.gmail.com>
	<24B1C1E0-ACB3-4C50-AC17-8E9F229F69B8@gmail.com>
	<AANLkTilfObXXGU_lKzMIaCNCIBGgyQcH6SBgQyhz2HXA@mail.gmail.com>
	<AANLkTim0EFlHoC1Dd6sFU_srDPDY4fVO7Obz5KbNOOPH@mail.gmail.com>
	<E0057F81-189E-47E2-97A5-4A250F5B50FE@vmware.com>
	<4C091E5B.3050802@rabbitmq.com>
	<253EA436-77D2-41C4-B41A-C430BE70CE42@vmware.com>
	<4C092FC1.2070303@rabbitmq.com>
Message-ID: <96DF469B-1665-4A7C-BC77-264D50751AD0@vmware.com>

Well, 'a' and 'b' are actually different IMHO.

If I have a consumer with noAck set to 'false', then I am sending the basicAck conditionally inside of the handleDelivery() method. This means that even though handleDelivery() was successfully invoked, the ACK might not have been sent, right?

Cheers
Oleg


On Jun 4, 2010, at 12:54 PM, Simon MacMullen wrote:

> On 04/06/10 16:54, Oleg Zhurakousky wrote:
>> So what does 'must be delivered to the consumer means?'
>> a) handleDelivery(..) was successfully invoked.
>> b) consumer sent ACK.
>> c) consumer processes message transactionally and then commits it
> 
> Well, from the perspective of the server a) and b) are the same thing 
> (the server cannot be sure the client has seen the message unless it 
> sees an ack).
> 
> However, it looks like what we actually do is to consider it delivered 
> (for the purposes of the immediate flag but not any other) as soon as we 
> start to send the message to the consumer. Hmm.
> 
> Cheers, Simon
> _______________________________________________
> rabbitmq-discuss mailing list
> rabbitmq-discuss at lists.rabbitmq.com
> http://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss


From simon at rabbitmq.com  Fri Jun  4 18:19:41 2010
From: simon at rabbitmq.com (Simon MacMullen)
Date: Fri, 04 Jun 2010 18:19:41 +0100
Subject: [rabbitmq-discuss] 'immediate' vs 'mandatory'
In-Reply-To: <96DF469B-1665-4A7C-BC77-264D50751AD0@vmware.com>
References: <AANLkTikYX3tJD_trmVmJ1jZ0nhDek1m_d1nTIx2VRced@mail.gmail.com>
	<AANLkTinr1Q8w1HdwNLWfNeAedMp80P5UeKdamGtoEMUH@mail.gmail.com>
	<8EC96D2F-DF66-4261-9D8D-AE9C51D4D068@gmail.com>
	<AANLkTimA1NVuhipiVfDXqtOvvexjRSQ4RmyUj7Rn8XM9@mail.gmail.com>
	<24B1C1E0-ACB3-4C50-AC17-8E9F229F69B8@gmail.com>
	<AANLkTilfObXXGU_lKzMIaCNCIBGgyQcH6SBgQyhz2HXA@mail.gmail.com>
	<AANLkTim0EFlHoC1Dd6sFU_srDPDY4fVO7Obz5KbNOOPH@mail.gmail.com>
	<E0057F81-189E-47E2-97A5-4A250F5B50FE@vmware.com>
	<4C091E5B.3050802@rabbitmq.com>
	<253EA436-77D2-41C4-B41A-C430BE70CE42@vmware.com>
	<4C092FC1.2070303@rabbitmq.com>
	<96DF469B-1665-4A7C-BC77-264D50751AD0@vmware.com>
Message-ID: <4C0935AD.6010400@rabbitmq.com>

On 04/06/10 18:03, Oleg Zhurakousky wrote:
> Well, 'a' and 'b' are actually different IMHO.
>
> If I have a consumer with noAck set to 'false', then I am sending the
> basicAck conditionally inside of the handleDelivery() method. This
> means that even though handleDelivery() was successfully invoked, the
> ACK might not have been sent, right?

 From the perspective of the client, or of an all-knowing observer, 
that's true. From the perspective of the server, suppose it delivers the 
message and then the connection goes away - did the client crash or lose 
power? Did it get as far as invoking handleDelivery() (or whatever the 
client API looks like) or not?

The only way it'll know the client has processed the message 
successfully is if it receives an ack.

But to return to the immediate flag, my "Hmm" in the last mail may have 
been premature. The spec says:

"When a message arrives in a message queue, the message queue tries 
immediately to pass it to a consumer application via AMQP. If this is 
not possible, the message queue stores the message (in memory or on disk
as requested by the producer) and waits for a consumer to be ready. If 
there are no consumers, the message queue may return the message to the 
producer via AMQP (again, if the producer asked for this)."

I think the motivation for this behaviour is that if the server waited 
for an ack, it could have to wait a long time.

Cheers, Simon

From newsjimi at gmail.com  Sat Jun  5 11:10:40 2010
From: newsjimi at gmail.com (J76)
Date: Sat, 5 Jun 2010 12:10:40 +0200
Subject: [rabbitmq-discuss] RabbitMQ and C Interface
Message-ID: <5E7A83A4-BB27-4E62-A900-DF37EFED4421@gmail.com>

Hi All,
We have an distributed application written in CPP (on windows) , and We would like replace our communication library with rabbitmq.
So the RabbitMQ C client is EXPERIMENTAL,  Exists a module like erl_interface.h for rabbitmq? We would like to avoid http://markmail.org/message/2phdwvrvwc57ya5m.

Thanks in advance.
J.

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20100605/c0207ed1/attachment.htm>

From akalend at mail.ru  Sat Jun  5 15:09:19 2010
From: akalend at mail.ru (Alexandre Kalendarev)
Date: Sat, 05 Jun 2010 18:09:19 +0400
Subject: [rabbitmq-discuss] =?windows-1251?q?RabbitMQ_and_C_Interface?=
In-Reply-To: <5E7A83A4-BB27-4E62-A900-DF37EFED4421@gmail.com>
References: <5E7A83A4-BB27-4E62-A900-DF37EFED4421@gmail.com>
Message-ID: <E1OKu3r-0001Um-00.akalend-mail-ru@f199.mail.ru>

Dear J,

You could be like to test and use the cpp extension of rabbitmq-c http://code.google.com/p/rabbitcpp 

the library using the librabbitmq-c, but it don't test over windows.


Alexandre.


> Hi All,
> We have an distributed application written in CPP (on windows) , and We would like replace our communication library with rabbitmq.
> 
> So the RabbitMQ C client is EXPERIMENTAL,  Exists a module like erl_interface.h for rabbitmq? We would like to avoid http://markmail.org/message/2phdwvrvwc57ya5m.
> 
> 
> 
> 
> Thanks in advance.
> 
> J.
> 
> 
> 
> _______________________________________________
> rabbitmq-discuss mailing list
> rabbitmq-discuss at lists.rabbitmq.com
> http://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss

????????? ??????????
www.eDocs.al.ru

From ozhurakousky at vmware.com  Sun Jun  6 17:58:20 2010
From: ozhurakousky at vmware.com (Oleg Zhurakousky)
Date: Sun, 6 Jun 2010 09:58:20 -0700
Subject: [rabbitmq-discuss] Ordering of messages after txRollback()
Message-ID: <FEA5F3AE-7762-408C-9ABB-511F015C79DA@vmware.com>

I have a simple test where I receive 20 messages in the order in which they came in, then rollback each and every one of them.

Upon the next attempt to receive messages the order is completely arbitrary. Is this by design?

Thanks
Oleg


From ozhurakousky at vmware.com  Sun Jun  6 18:20:56 2010
From: ozhurakousky at vmware.com (Oleg Zhurakousky)
Date: Sun, 6 Jun 2010 10:20:56 -0700
Subject: [rabbitmq-discuss] 'immediate' vs 'mandatory'
In-Reply-To: <4C0935AD.6010400@rabbitmq.com>
References: <AANLkTikYX3tJD_trmVmJ1jZ0nhDek1m_d1nTIx2VRced@mail.gmail.com>
	<AANLkTinr1Q8w1HdwNLWfNeAedMp80P5UeKdamGtoEMUH@mail.gmail.com>
	<8EC96D2F-DF66-4261-9D8D-AE9C51D4D068@gmail.com>
	<AANLkTimA1NVuhipiVfDXqtOvvexjRSQ4RmyUj7Rn8XM9@mail.gmail.com>
	<24B1C1E0-ACB3-4C50-AC17-8E9F229F69B8@gmail.com>
	<AANLkTilfObXXGU_lKzMIaCNCIBGgyQcH6SBgQyhz2HXA@mail.gmail.com>
	<AANLkTim0EFlHoC1Dd6sFU_srDPDY4fVO7Obz5KbNOOPH@mail.gmail.com>
	<E0057F81-189E-47E2-97A5-4A250F5B50FE@vmware.com>
	<4C091E5B.3050802@rabbitmq.com>
	<253EA436-77D2-41C4-B41A-C430BE70CE42@vmware.com>
	<4C092FC1.2070303@rabbitmq.com>
	<96DF469B-1665-4A7C-BC77-264D50751AD0@vmware.com>
	<4C0935AD.6010400@rabbitmq.com>
Message-ID: <B738630B-F917-4F61-B4A4-58F8CA2CA540@vmware.com>

Well, if the only way for the server to know "the client has processed the message successfully is if it receives an ack", but at the same time server can not wait for an ack forever (in case of client failures), then what is the purpose of an ACK in relation to 'immediate' flag? It seem to be meaningless... right? 

Oleg
On Jun 4, 2010, at 1:19 PM, Simon MacMullen wrote:

> On 04/06/10 18:03, Oleg Zhurakousky wrote:
>> Well, 'a' and 'b' are actually different IMHO.
>> 
>> If I have a consumer with noAck set to 'false', then I am sending the
>> basicAck conditionally inside of the handleDelivery() method. This
>> means that even though handleDelivery() was successfully invoked, the
>> ACK might not have been sent, right?
> 
> From the perspective of the client, or of an all-knowing observer, 
> that's true. From the perspective of the server, suppose it delivers the 
> message and then the connection goes away - did the client crash or lose 
> power? Did it get as far as invoking handleDelivery() (or whatever the 
> client API looks like) or not?
> 
> The only way it'll know the client has processed the message 
> successfully is if it receives an ack.
> 
> But to return to the immediate flag, my "Hmm" in the last mail may have 
> been premature. The spec says:
> 
> "When a message arrives in a message queue, the message queue tries 
> immediately to pass it to a consumer application via AMQP. If this is 
> not possible, the message queue stores the message (in memory or on disk
> as requested by the producer) and waits for a consumer to be ready. If 
> there are no consumers, the message queue may return the message to the 
> producer via AMQP (again, if the producer asked for this)."
> 
> I think the motivation for this behaviour is that if the server waited 
> for an ack, it could have to wait a long time.
> 
> Cheers, Simon
> _______________________________________________
> rabbitmq-discuss mailing list
> rabbitmq-discuss at lists.rabbitmq.com
> http://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss


From matthew at rabbitmq.com  Sun Jun  6 18:32:09 2010
From: matthew at rabbitmq.com (Matthew Sackman)
Date: Sun, 6 Jun 2010 18:32:09 +0100
Subject: [rabbitmq-discuss] Ordering of messages after txRollback()
In-Reply-To: <FEA5F3AE-7762-408C-9ABB-511F015C79DA@vmware.com>
References: <FEA5F3AE-7762-408C-9ABB-511F015C79DA@vmware.com>
Message-ID: <20100606173208.GA27119@wellquite.org>

On Sun, Jun 06, 2010 at 09:58:20AM -0700, Oleg Zhurakousky wrote:
> I have a simple test where I receive 20 messages in the order in which they came in, then rollback each and every one of them.
> 
> Upon the next attempt to receive messages the order is completely arbitrary. Is this by design?

Yes, pretty much. Not quite sure what you mean by rollback though:
Transactions are only on what you send to the server, not what it sends
to you. I suspect you're not meaning to use transactions and are
actually just closing the connection or channel on which you've done the
consume, which will cause all unacked messages to be requeued. If you
use basic.recover{requeue=true} then the order will be more predictable,
however, that's a facet of the design: the spec is completely silent on
the order, and you should not rely on RabbitMQ doing any particular
ordering.

Matthew

From matthew at rabbitmq.com  Sun Jun  6 18:36:21 2010
From: matthew at rabbitmq.com (Matthew Sackman)
Date: Sun, 6 Jun 2010 18:36:21 +0100
Subject: [rabbitmq-discuss] 'immediate' vs 'mandatory'
In-Reply-To: <B738630B-F917-4F61-B4A4-58F8CA2CA540@vmware.com>
References: <24B1C1E0-ACB3-4C50-AC17-8E9F229F69B8@gmail.com>
	<AANLkTilfObXXGU_lKzMIaCNCIBGgyQcH6SBgQyhz2HXA@mail.gmail.com>
	<AANLkTim0EFlHoC1Dd6sFU_srDPDY4fVO7Obz5KbNOOPH@mail.gmail.com>
	<E0057F81-189E-47E2-97A5-4A250F5B50FE@vmware.com>
	<4C091E5B.3050802@rabbitmq.com>
	<253EA436-77D2-41C4-B41A-C430BE70CE42@vmware.com>
	<4C092FC1.2070303@rabbitmq.com>
	<96DF469B-1665-4A7C-BC77-264D50751AD0@vmware.com>
	<4C0935AD.6010400@rabbitmq.com>
	<B738630B-F917-4F61-B4A4-58F8CA2CA540@vmware.com>
Message-ID: <20100606173620.GB27119@wellquite.org>

On Sun, Jun 06, 2010 at 10:20:56AM -0700, Oleg Zhurakousky wrote:
> Well, if the only way for the server to know "the client has processed the message successfully is if it receives an ack", but at the same time server can not wait for an ack forever (in case of client failures), then what is the purpose of an ACK in relation to 'immediate' flag? It seem to be meaningless... right? 

Yeah, I wouldn't really disagree with that. You could have some
requirement that you don't want messages to be buffered in the queue,
but, as you don't know the qos settings of any consumer, you have no way
of knowing what buffering the consumers are doing: by default, the
client buffers are unbounded. Furthermore, you have no knowledge of
whether the consumer was consuming with noAck set, in which case the
client really has responsibility for the future of the message, or if
the client is meant to be acking, in which case the server is still
maintaining responsibility.

About the only thing that you can gather from not getting a return when
using immediate is that the queue had an unblocked consumer. Of course,
you don't actually know whether you've not got a return - it may be
awaiting you in the future.

Matthew

From ozhurakousky at vmware.com  Sun Jun  6 19:05:49 2010
From: ozhurakousky at vmware.com (Oleg Zhurakousky)
Date: Sun, 6 Jun 2010 11:05:49 -0700
Subject: [rabbitmq-discuss] Ordering of messages after txRollback()
In-Reply-To: <20100606173208.GA27119@wellquite.org>
References: <FEA5F3AE-7762-408C-9ABB-511F015C79DA@vmware.com>
	<20100606173208.GA27119@wellquite.org>
Message-ID: <73BC8F83-C281-40F7-8AE8-10D2E1B3306C@vmware.com>

Thanks Matthew

Let me get this straight. TX are only for publishers, not consumers, thus the only way to implement TX behavior on the consumer side is by not sending ACK. Is that correct?

Since the spec is "completely silent" on the 'ordering', does that mean that when I retrieve messages initially and they come in order it is just a coincidence?
I was under the impression that Queue semantics imply FIFO ordering, regardless of which spec implements such Queue. Am I missing something?

Cheers
Oleg


On Jun 6, 2010, at 1:32 PM, Matthew Sackman wrote:

> On Sun, Jun 06, 2010 at 09:58:20AM -0700, Oleg Zhurakousky wrote:
>> I have a simple test where I receive 20 messages in the order in which they came in, then rollback each and every one of them.
>> 
>> Upon the next attempt to receive messages the order is completely arbitrary. Is this by design?
> 
> Yes, pretty much. Not quite sure what you mean by rollback though:
> Transactions are only on what you send to the server, not what it sends
> to you. I suspect you're not meaning to use transactions and are
> actually just closing the connection or channel on which you've done the
> consume, which will cause all unacked messages to be requeued. If you
> use basic.recover{requeue=true} then the order will be more predictable,
> however, that's a facet of the design: the spec is completely silent on
> the order, and you should not rely on RabbitMQ doing any particular
> ordering.
> 
> Matthew
> _______________________________________________
> rabbitmq-discuss mailing list
> rabbitmq-discuss at lists.rabbitmq.com
> http://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss


From markfisher at vmware.com  Sun Jun  6 19:13:09 2010
From: markfisher at vmware.com (Mark Fisher)
Date: Sun, 6 Jun 2010 11:13:09 -0700
Subject: [rabbitmq-discuss] Ordering of messages after txRollback()
In-Reply-To: <73BC8F83-C281-40F7-8AE8-10D2E1B3306C@vmware.com>
References: <FEA5F3AE-7762-408C-9ABB-511F015C79DA@vmware.com>
	<20100606173208.GA27119@wellquite.org>
	<73BC8F83-C281-40F7-8AE8-10D2E1B3306C@vmware.com>
Message-ID: <AD47A3B6-AC12-43DA-AA95-6AE9E636A929@vmware.com>

The only thing a rollback on the consuming side can do is *undo acks*,  
and there's no difference between never acking and rolling back acks  
as far as the broker is concerned. I'm just mentioning that since - if  
I'm understanding correctly - it is a valid if limited use for TXs on  
the consumer side.

Sent from my iPhone

On Jun 6, 2010, at 2:05 PM, "Oleg Zhurakousky"  
<ozhurakousky at vmware.com> wrote:

> Thanks Matthew
>
> Let me get this straight. TX are only for publishers, not consumers,  
> thus the only way to implement TX behavior on the consumer side is  
> by not sending ACK. Is that correct?
>
> Since the spec is "completely silent" on the 'ordering', does that  
> mean that when I retrieve messages initially and they come in order  
> it is just a coincidence?
> I was under the impression that Queue semantics imply FIFO ordering,  
> regardless of which spec implements such Queue. Am I missing  
> something?
>
> Cheers
> Oleg
>
>
> On Jun 6, 2010, at 1:32 PM, Matthew Sackman wrote:
>
>> On Sun, Jun 06, 2010 at 09:58:20AM -0700, Oleg Zhurakousky wrote:
>>> I have a simple test where I receive 20 messages in the order in  
>>> which they came in, then rollback each and every one of them.
>>>
>>> Upon the next attempt to receive messages the order is completely  
>>> arbitrary. Is this by design?
>>
>> Yes, pretty much. Not quite sure what you mean by rollback though:
>> Transactions are only on what you send to the server, not what it  
>> sends
>> to you. I suspect you're not meaning to use transactions and are
>> actually just closing the connection or channel on which you've  
>> done the
>> consume, which will cause all unacked messages to be requeued. If you
>> use basic.recover{requeue=true} then the order will be more  
>> predictable,
>> however, that's a facet of the design: the spec is completely  
>> silent on
>> the order, and you should not rely on RabbitMQ doing any particular
>> ordering.
>>
>> Matthew
>> _______________________________________________
>> rabbitmq-discuss mailing list
>> rabbitmq-discuss at lists.rabbitmq.com
>> http://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss
>
> _______________________________________________
> rabbitmq-discuss mailing list
> rabbitmq-discuss at lists.rabbitmq.com
> http://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss

From matthew at rabbitmq.com  Sun Jun  6 19:25:42 2010
From: matthew at rabbitmq.com (Matthew Sackman)
Date: Sun, 6 Jun 2010 19:25:42 +0100
Subject: [rabbitmq-discuss] Ordering of messages after txRollback()
In-Reply-To: <73BC8F83-C281-40F7-8AE8-10D2E1B3306C@vmware.com>
References: <FEA5F3AE-7762-408C-9ABB-511F015C79DA@vmware.com>
	<20100606173208.GA27119@wellquite.org>
	<73BC8F83-C281-40F7-8AE8-10D2E1B3306C@vmware.com>
Message-ID: <20100606182542.GD27119@wellquite.org>

On Sun, Jun 06, 2010 at 11:05:49AM -0700, Oleg Zhurakousky wrote:
> Let me get this straight. TX are only for publishers, not consumers,

Not necessarily. A consumer, within a channel, can make the ack to one
message and the publish of another message atomic by using a
transaction. That's a pretty common use case for clients which do
transformations of messages.

> thus the only way to implement TX behavior on the consumer side is by not sending ACK. Is that correct?

The server remembers messages until they have been acked. Whilst the
channel to which a message was delivered stays up, the server waits for
the client to ack the message and will not deliver the message to
another client in the meantime (in the absence of
basic.recover{requeue=true}). When the channel closes, or the connection
dies, or the client specifically requeues requeuing of messages, the
unacknowledged messages get reinserted into the queue. You can sort of
think of that as a rollback.

> Since the spec is "completely silent" on the 'ordering',

You're always welcome to read the spec btw, it does contain many
answers...

> does that mean that when I retrieve messages initially and they come in order it is just a coincidence?
> I was under the impression that Queue semantics imply FIFO ordering, regardless of which spec implements such Queue. Am I missing something?

The spec specifies ordering with messages from one channel of a producer
going to one channel of a consumer. You're guaranteed FIFO semantics
there. But when not acking messages, requesting requeues, dealing with
multiple producers, consumers, transactions and rollbacks in the middle,
most bets are off. Rabbit does a best effort. Messages from the same
producer will hit the queue in order, when initially published.

But let's say you have 2 consumers off the same queue, and they're round
robining. The stream of messages into the queue is ? ? ? ? ? ?. The first
consumer will get ? ? ?, and the second ? ? ?. The queue is now empty.
The first consumer now dies, so even if we "maintained order", the queue
would now look like ? ? ?. Now the second consumer dies, and the queue
now looks like ? ? ? ? ? ?. So we now have messages in the queue in a
different order from being published, but we could claim we've
"maintained order". What are you going to do - reshuffle them to get
back to ? ? ? ? ? ?? What happens if another consumer's already appeared
and consumed (and acked) ? and ? - what are you going to do to ?? -
silently drop it? Thus in the event of any requeue operations, whether
explicit or implicit, all bets are off on subsequent ordering of
requeued messages, because even if we tried as hard as possible to
maintain ordering, it would still be unavoidably observably wrong, in
comparison to the published ordering.

Matthew

From ozhurakousky at vmware.com  Sun Jun  6 19:28:56 2010
From: ozhurakousky at vmware.com (Oleg Zhurakousky)
Date: Sun, 6 Jun 2010 11:28:56 -0700
Subject: [rabbitmq-discuss] Ordering of messages after txRollback()
In-Reply-To: <AD47A3B6-AC12-43DA-AA95-6AE9E636A929@vmware.com>
References: <FEA5F3AE-7762-408C-9ABB-511F015C79DA@vmware.com>
	<20100606173208.GA27119@wellquite.org>
	<73BC8F83-C281-40F7-8AE8-10D2E1B3306C@vmware.com>
	<AD47A3B6-AC12-43DA-AA95-6AE9E636A929@vmware.com>
Message-ID: <D62544C1-B5DA-41F0-9891-3E94F69A69B7@vmware.com>

Right and that is what I am essentially asking. If txRollback on the consumer side is un-doing the ack (at least I can observe this behavior), I thought that there is a difference between how re-queue is done when simply not acking the message (to the back of the queue) vs acked message but rolled back (to the front of the queue). But i guess its already been answered in a way  that the spec is silent about ordering.

Oleg

On Jun 6, 2010, at 2:13 PM, Mark Fisher wrote:

> The only thing a rollback on the consuming side can do is *undo acks*,  
> and there's no difference between never acking and rolling back acks  
> as far as the broker is concerned. I'm just mentioning that since - if  
> I'm understanding correctly - it is a valid if limited use for TXs on  
> the consumer side.
> 
> Sent from my iPhone
> 
> On Jun 6, 2010, at 2:05 PM, "Oleg Zhurakousky"  
> <ozhurakousky at vmware.com> wrote:
> 
>> Thanks Matthew
>> 
>> Let me get this straight. TX are only for publishers, not consumers,  
>> thus the only way to implement TX behavior on the consumer side is  
>> by not sending ACK. Is that correct?
>> 
>> Since the spec is "completely silent" on the 'ordering', does that  
>> mean that when I retrieve messages initially and they come in order  
>> it is just a coincidence?
>> I was under the impression that Queue semantics imply FIFO ordering,  
>> regardless of which spec implements such Queue. Am I missing  
>> something?
>> 
>> Cheers
>> Oleg
>> 
>> 
>> On Jun 6, 2010, at 1:32 PM, Matthew Sackman wrote:
>> 
>>> On Sun, Jun 06, 2010 at 09:58:20AM -0700, Oleg Zhurakousky wrote:
>>>> I have a simple test where I receive 20 messages in the order in  
>>>> which they came in, then rollback each and every one of them.
>>>> 
>>>> Upon the next attempt to receive messages the order is completely  
>>>> arbitrary. Is this by design?
>>> 
>>> Yes, pretty much. Not quite sure what you mean by rollback though:
>>> Transactions are only on what you send to the server, not what it  
>>> sends
>>> to you. I suspect you're not meaning to use transactions and are
>>> actually just closing the connection or channel on which you've  
>>> done the
>>> consume, which will cause all unacked messages to be requeued. If you
>>> use basic.recover{requeue=true} then the order will be more  
>>> predictable,
>>> however, that's a facet of the design: the spec is completely  
>>> silent on
>>> the order, and you should not rely on RabbitMQ doing any particular
>>> ordering.
>>> 
>>> Matthew
>>> _______________________________________________
>>> rabbitmq-discuss mailing list
>>> rabbitmq-discuss at lists.rabbitmq.com
>>> http://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss
>> 
>> _______________________________________________
>> rabbitmq-discuss mailing list
>> rabbitmq-discuss at lists.rabbitmq.com
>> http://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss


From matthew at rabbitmq.com  Sun Jun  6 19:33:09 2010
From: matthew at rabbitmq.com (Matthew Sackman)
Date: Sun, 6 Jun 2010 19:33:09 +0100
Subject: [rabbitmq-discuss] Ordering of messages after txRollback()
In-Reply-To: <D62544C1-B5DA-41F0-9891-3E94F69A69B7@vmware.com>
References: <FEA5F3AE-7762-408C-9ABB-511F015C79DA@vmware.com>
	<20100606173208.GA27119@wellquite.org>
	<73BC8F83-C281-40F7-8AE8-10D2E1B3306C@vmware.com>
	<AD47A3B6-AC12-43DA-AA95-6AE9E636A929@vmware.com>
	<D62544C1-B5DA-41F0-9891-3E94F69A69B7@vmware.com>
Message-ID: <20100606183308.GE27119@wellquite.org>

On Sun, Jun 06, 2010 at 11:28:56AM -0700, Oleg Zhurakousky wrote:
> Right and that is what I am essentially asking. If txRollback on the consumer side is un-doing the ack (at least I can observe this behavior), I thought that there is a difference between how re-queue is done when simply not acking the message (to the back of the queue) vs acked message but rolled back (to the front of the queue). But i guess its already been answered in a way  that the spec is silent about ordering.

If you rollback in the consumer, and the transaction consists solely of
acks, the messages ARE NOT requeued. The responsibility to ack the
message remains with the client.

Matthew

From matthew at rabbitmq.com  Sun Jun  6 19:36:05 2010
From: matthew at rabbitmq.com (Matthew Sackman)
Date: Sun, 6 Jun 2010 19:36:05 +0100
Subject: [rabbitmq-discuss] Ordering of messages after txRollback()
In-Reply-To: <20100606183308.GE27119@wellquite.org>
References: <FEA5F3AE-7762-408C-9ABB-511F015C79DA@vmware.com>
	<20100606173208.GA27119@wellquite.org>
	<73BC8F83-C281-40F7-8AE8-10D2E1B3306C@vmware.com>
	<AD47A3B6-AC12-43DA-AA95-6AE9E636A929@vmware.com>
	<D62544C1-B5DA-41F0-9891-3E94F69A69B7@vmware.com>
	<20100606183308.GE27119@wellquite.org>
Message-ID: <20100606183605.GF27119@wellquite.org>

On Sun, Jun 06, 2010 at 07:33:09PM +0100, Matthew Sackman wrote:
> On Sun, Jun 06, 2010 at 11:28:56AM -0700, Oleg Zhurakousky wrote:
> > Right and that is what I am essentially asking. If txRollback on the consumer side is un-doing the ack (at least I can observe this behavior), I thought that there is a difference between how re-queue is done when simply not acking the message (to the back of the queue) vs acked message but rolled back (to the front of the queue). But i guess its already been answered in a way  that the spec is silent about ordering.
> 
> If you rollback in the consumer, and the transaction consists solely of
> acks, the messages ARE NOT requeued. The responsibility to ack the
> message remains with the client.

Sorry, that's misleading. It has nothing to do with the txn being
*solely* acks. What I should have written was:

If you rollback a transaction, messages for which an ack was in the now
rolled back transaction ARE NOT requeued.

Matthew

From alexis at rabbitmq.com  Mon Jun  7 00:17:20 2010
From: alexis at rabbitmq.com (Alexis Richardson)
Date: Mon, 7 Jun 2010 00:17:20 +0100
Subject: [rabbitmq-discuss] FINAL: June 9th - Pubsub Meetup in London
Message-ID: <AANLkTimZL9FXIDcltslNgFmNWe1Y_KH8m48aLH2TcwQP@mail.gmail.com>

Hi

Sorry, I did mean the Water Poet on Folgate St, and *not* the Poet Bar..

Here is the correct place:
http://www.google.co.uk/search?sourceid=chrome&ie=UTF-8&q=water+poet+pub

alexis



On Fri, Jun 4, 2010 at 3:59 PM, James Governor <jgovernor at redmonk.com> wrote:
> Water Poet +1
>
> -----Original Message-----
> From: alexis.richardson at gmail.com [mailto:alexis.richardson at gmail.com] On
> Behalf Of Alexis Richardson
> Sent: 04 June 2010 11:56
> To: Alvaro Videla
> Cc: rabbitmq-discuss; Justin Sheehy; James Governor; Kirk Wylie; Bojan
> Nastic; Jonathan Lister; Lionel Cons
> Subject: Re: June 9th - Meetup in London
>
> Right, so: deferring to the various folks coming from abroad for the
> Erlang Factory, I propose we return to the POET
>
> http://www.welovelocal.com/en/london/tower-hamlets/spitalfields/pubs/the-p
> oet-bar-e17ez.html
>
> For those coming from the sarf, probably the easiest thing is to cab it.
>
> James, however, this does mean the first round is on you.
>
> alexis
>
>
>
> On Thu, Jun 3, 2010 at 7:29 PM, Alexis Richardson <alexis at rabbitmq.com>
> wrote:
>> That would be spitalfields
>>
>> On Jun 3, 2010 6:55 PM, "Alvaro Videla" <videlalvaro at gmail.com> wrote:
>>
>> I would like a place close to where the speaker dinner of Erlang Factory
> is.
>>
>> You know London better than me, so your choice is fine for me.
>>
>> -Alvaro
>>
>> On Jun 3, 2010, at 4:32 PM, Alexis Richardson wrote: > And now we come
> to
>> the important question o...
>

From david at rabbitmq.com  Mon Jun  7 00:29:51 2010
From: david at rabbitmq.com (David Wragg)
Date: Mon, 07 Jun 2010 00:29:51 +0100
Subject: [rabbitmq-discuss] RabbitMQ and C Interface
In-Reply-To: <5E7A83A4-BB27-4E62-A900-DF37EFED4421@gmail.com>
	(newsjimi@gmail.com's message of "Sat, 5 Jun 2010 12:10:40 +0200")
References: <5E7A83A4-BB27-4E62-A900-DF37EFED4421@gmail.com>
Message-ID: <yrv4cbpbnkads.fsf@dwragg.eng.vmware.com>

Hi J.,

J76 <newsjimi at gmail.com> writes:
> We have an distributed application written in CPP (on windows) , and
> We would like replace our communication library with rabbitmq.  So the
> RabbitMQ C client is EXPERIMENTAL, Exists a module like
> erl_interface.h for rabbitmq? We would like to avoid
> http://markmail.org/message/2phdwvrvwc57ya5m.

Currently there is no mature option for acessing rabbitmq from C/C++ on
Windows.  As you say, the rabbitmq-c client is experimental, and does
not currently support Windows.  The OpenAMQ C client may be an
alternative, but that route relies on 0.9.1 support, which is also
experimental in RabbitMQ.

We haven't abandoned rabbitmq-c, but at the moment we're not in a
position to say what the future may hold for it.

Another suggestion, which may or may not be relevant to your situation:
I've had success in the past on Windows calling C# code from other
languages via COM.  In that way, you might be able to use the RabbitMQ
C# client, which is supported.  But this approach is fairly contorted,
and whether it makes sense would depend upon the details of your
project.

David

-- 
David Wragg
Staff Engineer, RabbitMQ
SpringSource, a division of VMware

From frank.goenninger at consequor.de  Mon Jun  7 14:28:24 2010
From: frank.goenninger at consequor.de (=?iso-8859-1?Q?Frank_G=F6nninger?=)
Date: Mon, 7 Jun 2010 15:28:24 +0200
Subject: [rabbitmq-discuss] RabbitMQ and C Interface
In-Reply-To: <yrv4cbpbnkads.fsf@dwragg.eng.vmware.com>
References: <5E7A83A4-BB27-4E62-A900-DF37EFED4421@gmail.com>
	<yrv4cbpbnkads.fsf@dwragg.eng.vmware.com>
Message-ID: <668FBE4A-C08C-4526-BF0B-D9D49D3B772F@consequor.de>

Hi all:

We're currently working on a Visual Studio 2010 Project for the RabbitMQ C library. It will take a few more days (we estimate 2 weeks from now) until this is completed. We will post here when we're ready.

Cheers
  Frank

Am 07.06.2010 um 01:29 schrieb David Wragg:

> Hi J.,
> 
> J76 <newsjimi at gmail.com> writes:
>> We have an distributed application written in CPP (on windows) , and
>> We would like replace our communication library with rabbitmq.  So the
>> RabbitMQ C client is EXPERIMENTAL, Exists a module like
>> erl_interface.h for rabbitmq? We would like to avoid
>> http://markmail.org/message/2phdwvrvwc57ya5m.
> 
> Currently there is no mature option for acessing rabbitmq from C/C++ on
> Windows.  As you say, the rabbitmq-c client is experimental, and does
> not currently support Windows.  The OpenAMQ C client may be an
> alternative, but that route relies on 0.9.1 support, which is also
> experimental in RabbitMQ.
> 
> We haven't abandoned rabbitmq-c, but at the moment we're not in a
> position to say what the future may hold for it.
> 
> Another suggestion, which may or may not be relevant to your situation:
> I've had success in the past on Windows calling C# code from other
> languages via COM.  In that way, you might be able to use the RabbitMQ
> C# client, which is supported.  But this approach is fairly contorted,
> and whether it makes sense would depend upon the details of your
> project.
> 
> David
> 
> -- 
> David Wragg
> Staff Engineer, RabbitMQ
> SpringSource, a division of VMware
> _______________________________________________
> rabbitmq-discuss mailing list
> rabbitmq-discuss at lists.rabbitmq.com
> http://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss

--
  C o n s e q u o r   C o n s u l t i n g   A G
  Frank Goenninger

  E-Mail: frank.goenninger at consequor.de
  Phone: +49 711 781 181-10
  Fax:   +49 711 781 181-11

  Consequor Consulting AG
  Liebknechstr. 33
  D-70565 Stuttgart

  Vorstand: Frank G?nninger (Vors.), Martin Melcher
  Aufsichtsratsvorsitzender: Dipl.-Kfm. Matthias Filbinger
  Sitz der Gesellschaft: 70565 Stuttgart, Deutschland
  Registergericht Amtsgericht Stuttgart HRB 727446



From Alister.Morton at tradition.com  Mon Jun  7 14:34:56 2010
From: Alister.Morton at tradition.com (Alister Morton)
Date: Mon, 7 Jun 2010 14:34:56 +0100
Subject: [rabbitmq-discuss] RabbitMQ and C Interface
In-Reply-To: <668FBE4A-C08C-4526-BF0B-D9D49D3B772F@consequor.de>
References: <5E7A83A4-BB27-4E62-A900-DF37EFED4421@gmail.com>
	<yrv4cbpbnkads.fsf@dwragg.eng.vmware.com>
	<668FBE4A-C08C-4526-BF0B-D9D49D3B772F@consequor.de>
Message-ID: <5A46D132C446C04B9EFE8AD14E78910670D9ACB524@SVR-2K3-BH-EMC.tradition.int>

> We're currently working on a Visual Studio 2010 Project for the RabbitMQ C library. It will
> take a few more days (we estimate 2 weeks from now) until this is completed. We will
> post here when we're ready.

Ah - now that's very interesting. Will it be a completely native VS project i.e. not require /any/ linux based tools to build?


The information herein may have been obtained from various sources. Any opinion expressed may be that of the sender only, is subject to change without notice and should be independently evaluated. Nothing herein constitutes investment advice or an offer, or solicitation of an offer, to buy or sell any financial product. Any data consists of purely indicative prices and should not be relied upon to revalue any commercial positions held by any recipient. Tradition makes no warranty that the data represent or indicates prices at which transactions may be or have been made by any Tradition Group company. To the maximum extent of the law, Tradition accepts no responsibility for, and cannot and does not warrant the integrity, accuracy, quality, completeness, merchantability or suitability for a particular purpose or requirement of the information or data, even if arising out of the negligence of Tradition or otherwise. Tradition accepts no liability for any direct, indirect or other consequential loss arising out of any use of the information contained in this document or any omission from it. This communication is directed at Eligible Counterparties and Professional Clients as defined by the FSA. It is not for distribution to nor should it be relied upon by Private Clients. It is not intended for distribution to, or use by any person or entity in any jurisdiction or country where such distribution or use would be contrary to any applicable law or regulation. Please note that, for business or compliance reasons, we may monitor and read emails sent or received using our servers or equipment. Tradition (UK) Ltd (937647; FSA 139200), Tradition Financial Services Ltd (1046064; FSA 147543), TFS Derivatives Ltd (4051930; FSA 197244), Tradition London Clearing Ltd (3633863; FSA 190632) and TFS-ICAP Ltd (4025995; FSA 206018) registered in England at Beaufort House, 15 St Botolph Street, London EC3A 7QX; authorised and regulated by the Financial Services Authority. VAT No: GB 365 4639 27 except TFS-ICAP GB 766 0854 05.

From david at rabbitmq.com  Mon Jun  7 14:52:21 2010
From: david at rabbitmq.com (David Wragg)
Date: Mon, 07 Jun 2010 14:52:21 +0100
Subject: [rabbitmq-discuss] RabbitMQ and C Interface
In-Reply-To: <668FBE4A-C08C-4526-BF0B-D9D49D3B772F@consequor.de> ("Frank
	=?utf-8?Q?G=C3=B6nninger=22's?= message of "Mon, 7 Jun 2010 15:28:24
	+0200")
References: <5E7A83A4-BB27-4E62-A900-DF37EFED4421@gmail.com>
	<yrv4cbpbnkads.fsf@dwragg.eng.vmware.com>
	<668FBE4A-C08C-4526-BF0B-D9D49D3B772F@consequor.de>
Message-ID: <yrv4cljargdbe.fsf@dwragg.eng.vmware.com>

Hi Frank,

Frank G?nninger <frank.goenninger at consequor.de> writes:
> We're currently working on a Visual Studio 2010 Project for the
> RabbitMQ C library. It will take a few more days (we estimate 2 weeks
> from now) until this is completed. We will post here when we're ready.

Great!

You may want to take a look at some the MinGW-based Windows work we've
been doing.  See bug22825 at <http://hg.rabbitmq.com/rabbitmq-c/>.  That
doesn't address all the issues that would need attention in order to
build under VS, but there is bound to be a significant overlap.

David

-- 
David Wragg
Staff Engineer, RabbitMQ
SpringSource, a division of VMware

From frank.goenninger at consequor.de  Mon Jun  7 14:53:03 2010
From: frank.goenninger at consequor.de (=?iso-8859-1?Q?Frank_G=F6nninger?=)
Date: Mon, 7 Jun 2010 15:53:03 +0200
Subject: [rabbitmq-discuss] RabbitMQ and C Interface
In-Reply-To: <5A46D132C446C04B9EFE8AD14E78910670D9ACB524@SVR-2K3-BH-EMC.tradition.int>
References: <5E7A83A4-BB27-4E62-A900-DF37EFED4421@gmail.com>
	<yrv4cbpbnkads.fsf@dwragg.eng.vmware.com>
	<668FBE4A-C08C-4526-BF0B-D9D49D3B772F@consequor.de>
	<5A46D132C446C04B9EFE8AD14E78910670D9ACB524@SVR-2K3-BH-EMC.tradition.int>
Message-ID: <428AF6D4-7678-436C-BF06-C34F41AE9D51@consequor.de>


Am 07.06.2010 um 15:34 schrieb Alister Morton:

>> We're currently working on a Visual Studio 2010 Project for the RabbitMQ C library. It will
>> take a few more days (we estimate 2 weeks from now) until this is completed. We will
>> post here when we're ready.
> 
> Ah - now that's very interesting. Will it be a completely native VS project i.e. not require /any/ linux based tools to build?

Yes!

;-)

Frank

> 
> 
> The information herein may have been obtained from various sources. Any opinion expressed may be that of the sender only, is subject to change without notice and should be independently evaluated. Nothing herein constitutes investment advice or an offer, or solicitation of an offer, to buy or sell any financial product. Any data consists of purely indicative prices and should not be relied upon to revalue any commercial positions held by any recipient. Tradition makes no warranty that the data represent or indicates prices at which transactions may be or have been made by any Tradition Group company. To the maximum extent of the law, Tradition accepts no responsibility for, and cannot and does not warrant the integrity, accuracy, quality, completeness, merchantability or suitability for a particular purpose or requirement of the information or data, even if arising out of the negligence of Tradition or otherwise. Tradition accepts no liability for any direct, indirect or other consequential loss arising out of any use of the information contained in this document or any omission from it. This communication is directed at Eligible Counterparties and Professional Clients as defined by the FSA. It is not for distribution to nor should it be relied upon by Private Clients. It is not intended for distribution to, or use by any person or entity in any jurisdiction or country where such distribution or use would be contrary to any applicable law or regulation. Please note that, for business or compliance reasons, we may monitor and read emails sent or received using our servers or equipment. Tradition (UK) Ltd (937647; FSA 139200), Tradition Financial Services Ltd (1046064; FSA 147543), TFS Derivatives Ltd (4051930; FSA 197244), Tradition London Clearing Ltd (3633863; FSA 190632) and TFS-ICAP Ltd (4025995; FSA 206018) registered in England at Beaufort House, 15 St Botolph Street, London EC3A 7QX; authorised and regulated by the Financial Services Authority. VAT No: GB 365 4639 27 except TFS-ICAP GB 766 0854 05.

--
  C o n s e q u o r   C o n s u l t i n g   A G
  Frank Goenninger

  E-Mail: frank.goenninger at consequor.de
  Phone: +49 711 781 181-10
  Fax:   +49 711 781 181-11

  Consequor Consulting AG
  Liebknechstr. 33
  D-70565 Stuttgart

  Vorstand: Frank G?nninger (Vors.), Martin Melcher
  Aufsichtsratsvorsitzender: Dipl.-Kfm. Matthias Filbinger
  Sitz der Gesellschaft: 70565 Stuttgart, Deutschland
  Registergericht Amtsgericht Stuttgart HRB 727446



From jon.brisbin at npcinternational.com  Mon Jun  7 15:39:28 2010
From: jon.brisbin at npcinternational.com (Jon Brisbin)
Date: Mon, 7 Jun 2010 09:39:28 -0500
Subject: [rabbitmq-discuss] Using RabbitMQ as JMX invoker
Message-ID: <EE4A398C-0811-4E7F-8D0C-A29909C59D6B@npcinternational.com>

I expounded some on my JMX invoker utility that uses RabbitMQ on tomcatexpert.com:

http://www.tomcatexpert.com/blog/2010/06/04/how-scale-tomcat-cloud-rabbitmq-and-jmx

I'm now working on explaining the hybrid cloud session manager backed by RabbitMQ.

Jon Brisbin
Portal Webmaster
NPC International, Inc.



-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20100607/f763a969/attachment.htm>

From g at rre.tt  Mon Jun  7 17:14:51 2010
From: g at rre.tt (Garrett Smith)
Date: Mon, 7 Jun 2010 11:14:51 -0500
Subject: [rabbitmq-discuss] Parsability of rabbitctrl output
Message-ID: <AANLkTilkfhuph6QzssGeGPJhmuX1syHEqy3qD92QrW01@mail.gmail.com>

There are some values output by rabbitctrl that are blank/empty, but
these are simply omitted from the output. This makes parsing the
output difficult. E.g.

  rabbitmqctl list_queues name owner_pid memory

In cases where owner_pid is blank, the output line has two tokens,
three otherwise.

Any thoughts on providing a symbol, e.g. "undefined", "-" etc. to help
parsers know when a value is empty?

Garrett

From emile at rabbitmq.com  Mon Jun  7 17:53:34 2010
From: emile at rabbitmq.com (Emile Joubert)
Date: Mon, 07 Jun 2010 17:53:34 +0100
Subject: [rabbitmq-discuss] Parsability of rabbitctrl output
In-Reply-To: <AANLkTilkfhuph6QzssGeGPJhmuX1syHEqy3qD92QrW01@mail.gmail.com>
References: <AANLkTilkfhuph6QzssGeGPJhmuX1syHEqy3qD92QrW01@mail.gmail.com>
Message-ID: <4C0D240E.8090602@rabbitmq.com>


Hi Garrett,

The output values are separated by a tab character, so you should 
instruct your parser to expect optional values separated by a single tab 
character. The problem you describe only occurs if your pattern consumes 
an arbitrary amount of whitespace.

You may also find the -q flag useful to suppress the first and last line 
of output of the output of rabbitmqctl is being parsed.

(Nice email address btw)

Regards

Emile


On 07/06/10 17:14, Garrett Smith wrote:
> There are some values output by rabbitctrl that are blank/empty, but
> these are simply omitted from the output. This makes parsing the
> output difficult. E.g.
>
>    rabbitmqctl list_queues name owner_pid memory
>
> In cases where owner_pid is blank, the output line has two tokens,
> three otherwise.
>
> Any thoughts on providing a symbol, e.g. "undefined", "-" etc. to help
> parsers know when a value is empty?
>
> Garrett
> _______________________________________________
> rabbitmq-discuss mailing list
> rabbitmq-discuss at lists.rabbitmq.com
> http://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss


From g at rre.tt  Mon Jun  7 17:57:28 2010
From: g at rre.tt (Garrett Smith)
Date: Mon, 7 Jun 2010 11:57:28 -0500
Subject: [rabbitmq-discuss] Parsability of rabbitctrl output
In-Reply-To: <4C0D240E.8090602@rabbitmq.com>
References: <AANLkTilkfhuph6QzssGeGPJhmuX1syHEqy3qD92QrW01@mail.gmail.com>
	<4C0D240E.8090602@rabbitmq.com>
Message-ID: <AANLkTikkkkLmZEePhkt2ZWsz4oCP06pq0SOo7y3Ql8Ww@mail.gmail.com>

Ah... I should have spotted that one :)

Thanks!

On Mon, Jun 7, 2010 at 11:53 AM, Emile Joubert <emile at rabbitmq.com> wrote:
>
> Hi Garrett,
>
> The output values are separated by a tab character, so you should instruct
> your parser to expect optional values separated by a single tab character.
> The problem you describe only occurs if your pattern consumes an arbitrary
> amount of whitespace.
>
> You may also find the -q flag useful to suppress the first and last line of
> output of the output of rabbitmqctl is being parsed.
>
> (Nice email address btw)
>
> Regards
>
> Emile
>
>
> On 07/06/10 17:14, Garrett Smith wrote:
>>
>> There are some values output by rabbitctrl that are blank/empty, but
>> these are simply omitted from the output. This makes parsing the
>> output difficult. E.g.
>>
>> ? rabbitmqctl list_queues name owner_pid memory
>>
>> In cases where owner_pid is blank, the output line has two tokens,
>> three otherwise.
>>
>> Any thoughts on providing a symbol, e.g. "undefined", "-" etc. to help
>> parsers know when a value is empty?
>>
>> Garrett
>> _______________________________________________
>> rabbitmq-discuss mailing list
>> rabbitmq-discuss at lists.rabbitmq.com
>> http://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss
>
>

From vivek at khera.org  Mon Jun  7 19:03:42 2010
From: vivek at khera.org (Vick Khera)
Date: Mon, 7 Jun 2010 14:03:42 -0400
Subject: [rabbitmq-discuss] Ordering of messages after txRollback()
In-Reply-To: <20100606183605.GF27119@wellquite.org>
References: <FEA5F3AE-7762-408C-9ABB-511F015C79DA@vmware.com>
	<20100606173208.GA27119@wellquite.org>
	<73BC8F83-C281-40F7-8AE8-10D2E1B3306C@vmware.com>
	<AD47A3B6-AC12-43DA-AA95-6AE9E636A929@vmware.com>
	<D62544C1-B5DA-41F0-9891-3E94F69A69B7@vmware.com>
	<20100606183308.GE27119@wellquite.org>
	<20100606183605.GF27119@wellquite.org>
Message-ID: <AANLkTim2v6GhTVyEi8UKiVY2QRmTehzUP9xs6hGikVdt@mail.gmail.com>

On Sun, Jun 6, 2010 at 2:36 PM, Matthew Sackman <matthew at rabbitmq.com> wrote:
> If you rollback a transaction, messages for which an ack was in the now
> rolled back transaction ARE NOT requeued.

This seems rather counter-intuitive.

From matthew at rabbitmq.com  Mon Jun  7 20:12:19 2010
From: matthew at rabbitmq.com (Matthew Sackman)
Date: Mon, 7 Jun 2010 20:12:19 +0100
Subject: [rabbitmq-discuss] Ordering of messages after txRollback()
In-Reply-To: <AANLkTim2v6GhTVyEi8UKiVY2QRmTehzUP9xs6hGikVdt@mail.gmail.com>
References: <FEA5F3AE-7762-408C-9ABB-511F015C79DA@vmware.com>
	<20100606173208.GA27119@wellquite.org>
	<73BC8F83-C281-40F7-8AE8-10D2E1B3306C@vmware.com>
	<AD47A3B6-AC12-43DA-AA95-6AE9E636A929@vmware.com>
	<D62544C1-B5DA-41F0-9891-3E94F69A69B7@vmware.com>
	<20100606183308.GE27119@wellquite.org>
	<20100606183605.GF27119@wellquite.org>
	<AANLkTim2v6GhTVyEi8UKiVY2QRmTehzUP9xs6hGikVdt@mail.gmail.com>
Message-ID: <20100607191218.GA23531@wellquite.org>

On Mon, Jun 07, 2010 at 02:03:42PM -0400, Vick Khera wrote:
> On Sun, Jun 6, 2010 at 2:36 PM, Matthew Sackman <matthew at rabbitmq.com> wrote:
> > If you rollback a transaction, messages for which an ack was in the now
> > rolled back transaction ARE NOT requeued.
> 
> This seems rather counter-intuitive.

Transactions only cover publishes and acks sent from the client to the
broker. Nothing more. They cover nothing that is sent from broker to the
client.

Matthew

From pdezwart at rubiconproject.com  Mon Jun  7 20:37:18 2010
From: pdezwart at rubiconproject.com (Pieter de Zwart)
Date: Mon, 07 Jun 2010 12:37:18 -0700
Subject: [rabbitmq-discuss] RabbitMQ and C Interface
In-Reply-To: <668FBE4A-C08C-4526-BF0B-D9D49D3B772F@consequor.de>
Message-ID: <C832987E.BC01%pdezwart@rubiconproject.com>

This is truly awesome news. Are you mimicking the rabbitmq-c client library
structure? The reason why is that Alexandre Kalendarev wrote an AMQP PHP
extension which I am now maintaining, and we would love to be able to offer
the extension to Windows users as well, but that would require it using the
same function calls and structures as the rabbitmq-c client.

Thanks,
Pieter


On 6/7/10 6:28 AM, "Frank G?nninger" <frank.goenninger at consequor.de> wrote:

> Hi all:
> 
> We're currently working on a Visual Studio 2010 Project for the RabbitMQ C
> library. It will take a few more days (we estimate 2 weeks from now) until
> this is completed. We will post here when we're ready.
> 
> Cheers
>   Frank
> 
> Am 07.06.2010 um 01:29 schrieb David Wragg:
> 
>> > Hi J.,
>> >
>> > J76 <newsjimi at gmail.com> writes:
>>> >> We have an distributed application written in CPP (on windows) , and
>>> >> We would like replace our communication library with rabbitmq.  So the
>>> >> RabbitMQ C client is EXPERIMENTAL, Exists a module like
>>> >> erl_interface.h for rabbitmq? We would like to avoid
>>> >> http://markmail.org/message/2phdwvrvwc57ya5m.
>> >
>> > Currently there is no mature option for acessing rabbitmq from C/C++ on
>> > Windows.  As you say, the rabbitmq-c client is experimental, and does
>> > not currently support Windows.  The OpenAMQ C client may be an
>> > alternative, but that route relies on 0.9.1 support, which is also
>> > experimental in RabbitMQ.
>> >
>> > We haven't abandoned rabbitmq-c, but at the moment we're not in a
>> > position to say what the future may hold for it.
>> >
>> > Another suggestion, which may or may not be relevant to your situation:
>> > I've had success in the past on Windows calling C# code from other
>> > languages via COM.  In that way, you might be able to use the RabbitMQ
>> > C# client, which is supported.  But this approach is fairly contorted,
>> > and whether it makes sense would depend upon the details of your
>> > project.
>> >
>> > David
>> >
>> > --
>> > David Wragg
>> > Staff Engineer, RabbitMQ
>> > SpringSource, a division of VMware
>> > _______________________________________________
>> > rabbitmq-discuss mailing list
>> > rabbitmq-discuss at lists.rabbitmq.com
>> > http://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss
> 
> --
>   C o n s e q u o r   C o n s u l t i n g   A G
>   Frank Goenninger
> 
>   E-Mail: frank.goenninger at consequor.de
>   Phone: +49 711 781 181-10
>   Fax:   +49 711 781 181-11
> 
>   Consequor Consulting AG
>   Liebknechstr. 33
>   D-70565 Stuttgart
> 
>   Vorstand: Frank G?nninger (Vors.), Martin Melcher
>   Aufsichtsratsvorsitzender: Dipl.-Kfm. Matthias Filbinger
>   Sitz der Gesellschaft: 70565 Stuttgart, Deutschland
>   Registergericht Amtsgericht Stuttgart HRB 727446
> 
> 
> _______________________________________________
> rabbitmq-discuss mailing list
> rabbitmq-discuss at lists.rabbitmq.com
> http://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20100607/c271d6bc/attachment.htm>

From frank.goenninger at consequor.de  Tue Jun  8 08:33:37 2010
From: frank.goenninger at consequor.de (=?iso-8859-1?Q?Frank_G=F6nninger?=)
Date: Tue, 8 Jun 2010 09:33:37 +0200
Subject: [rabbitmq-discuss] RabbitMQ and C Interface
In-Reply-To: <C832987E.BC01%pdezwart@rubiconproject.com>
References: <C832987E.BC01%pdezwart@rubiconproject.com>
Message-ID: <128A6CF8-E1B6-4641-968B-A8323874F976@consequor.de>

Pieter,

sure! We're just eliminating all GNU C specific stuff and adding the required MS woodoo stuff to get a working DLL. The API as such will not be changed unless really required. So far all looks promising ... Top priority is also to not have to maintain specific MS C sources but one common source code tree with as few #ifdef insertions as possible.

Cheers
  Frank

P.S. Small progress made yesterday: Eliminated the "macro" AMQP_CHECK_RESULT...

Am 07.06.2010 um 21:37 schrieb Pieter de Zwart:

> This is truly awesome news. Are you mimicking the rabbitmq-c client library structure? The reason why is that Alexandre Kalendarev wrote an AMQP PHP extension which I am now maintaining, and we would love to be able to offer the extension to Windows users as well, but that would require it using the same function calls and structures as the rabbitmq-c client.
> 
> Thanks,
> Pieter
> 
> 
> On 6/7/10 6:28 AM, "Frank G?nninger" <frank.goenninger at consequor.de> wrote:
> 
>> Hi all:
>> 
>> We're currently working on a Visual Studio 2010 Project for the RabbitMQ C library. It will take a few more days (we estimate 2 weeks from now) until this is completed. We will post here when we're ready.
>> 
>> Cheers
>>   Frank
>> 
>> Am 07.06.2010 um 01:29 schrieb David Wragg:
>> 
>> > Hi J.,
>> >
>> > J76 <newsjimi at gmail.com> writes:
>> >> We have an distributed application written in CPP (on windows) , and
>> >> We would like replace our communication library with rabbitmq.  So the
>> >> RabbitMQ C client is EXPERIMENTAL, Exists a module like
>> >> erl_interface.h for rabbitmq? We would like to avoid
>> >> http://markmail.org/message/2phdwvrvwc57ya5m.
>> >
>> > Currently there is no mature option for acessing rabbitmq from C/C++ on
>> > Windows.  As you say, the rabbitmq-c client is experimental, and does
>> > not currently support Windows.  The OpenAMQ C client may be an
>> > alternative, but that route relies on 0.9.1 support, which is also
>> > experimental in RabbitMQ.
>> >
>> > We haven't abandoned rabbitmq-c, but at the moment we're not in a
>> > position to say what the future may hold for it.
>> >
>> > Another suggestion, which may or may not be relevant to your situation:
>> > I've had success in the past on Windows calling C# code from other
>> > languages via COM.  In that way, you might be able to use the RabbitMQ
>> > C# client, which is supported.  But this approach is fairly contorted,
>> > and whether it makes sense would depend upon the details of your
>> > project.
>> >
>> > David
>> >
>> > --
>> > David Wragg
>> > Staff Engineer, RabbitMQ
>> > SpringSource, a division of VMware
>> > _______________________________________________
>> > rabbitmq-discuss mailing list
>> > rabbitmq-discuss at lists.rabbitmq.com
>> > http://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss
>> 
>> --
>>   C o n s e q u o r   C o n s u l t i n g   A G
>>   Frank Goenninger
>> 
>>   E-Mail: frank.goenninger at consequor.de
>>   Phone: +49 711 781 181-10
>>   Fax:   +49 711 781 181-11
>> 
>>   Consequor Consulting AG
>>   Liebknechstr. 33
>>   D-70565 Stuttgart
>> 
>>   Vorstand: Frank G?nninger (Vors.), Martin Melcher
>>   Aufsichtsratsvorsitzender: Dipl.-Kfm. Matthias Filbinger
>>   Sitz der Gesellschaft: 70565 Stuttgart, Deutschland
>>   Registergericht Amtsgericht Stuttgart HRB 727446
>> 
>> 
>> _______________________________________________
>> rabbitmq-discuss mailing list
>> rabbitmq-discuss at lists.rabbitmq.com
>> http://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss

--
  C o n s e q u o r   C o n s u l t i n g   A G
  Frank Goenninger

  E-Mail: frank.goenninger at consequor.de
  Phone: +49 711 781 181-10
  Fax:   +49 711 781 181-11

  Consequor Consulting AG
  Liebknechstr. 33
  D-70565 Stuttgart

  Vorstand: Frank G?nninger (Vors.), Martin Melcher
  Aufsichtsratsvorsitzender: Dipl.-Kfm. Matthias Filbinger
  Sitz der Gesellschaft: 70565 Stuttgart, Deutschland
  Registergericht Amtsgericht Stuttgart HRB 727446



From lists at zopyx.com  Tue Jun  8 09:47:14 2010
From: lists at zopyx.com (Andreas Jung)
Date: Tue, 08 Jun 2010 10:47:14 +0200
Subject: [rabbitmq-discuss] Controlling rate of callbacks
Message-ID: <4C0E0392.7080005@zopyx.com>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

We are using RabbitMQ + consumers implemented in Python on top of
carrot and called through RabbitMQ as a callback.
Is there some configuration option on a per-queue basis e.g. for
controlling how or when consumers are called? For examples some queues
must not be processed immediately but could be processed e.g. over night
or every 15 minutes...
Or is the recommended solution to implement arbitary logic on the
application level and switching to queue polling?

Andreas


-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.4.10 (Darwin)
Comment: Using GnuPG with Mozilla - http://enigmail.mozdev.org/

iEYEARECAAYFAkwOA5IACgkQCJIWIbr9KYxNoACgmXT9WRYzmwdIL1jPbxOTB5E8
oasAoLCTYBG+GVDFFI+Z8G5Y/krIKHwV
=4784
-----END PGP SIGNATURE-----
-------------- next part --------------
A non-text attachment was scrubbed...
Name: lists.vcf
Type: text/x-vcard
Size: 316 bytes
Desc: not available
URL: <http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20100608/508321cb/attachment.vcf>

From nico at nicocesar.com  Tue Jun  8 12:33:24 2010
From: nico at nicocesar.com (=?UTF-8?B?Tmljb2zDoXMgQ8Opc2Fy?=)
Date: Tue, 8 Jun 2010 08:33:24 -0300
Subject: [rabbitmq-discuss] chan.flow and vm_memory_high_watermark
Message-ID: <AANLkTikz0HihSVm7rrs0p9mOyHDj6WgMjoyU9jVuW522@mail.gmail.com>

Hi.

I'm a having issues with a huge memory consumption with rabbit.

I'm uting rabbit 1.7.2 with Debian Linux


----- /etc/rabbitmq/rabbitmq.config ----
[{rabbit, [{vm_memory_high_watermark, 0.2}]}].
------------------------------------------------------

I hit the maximum:
------ tail -f /var/log/rabbitmq/rabbit.log | grep -i memory ------
vm_memory_high_watermark set. Memory used:434801384 allowed:429496729
    alarm_handler: {set,{vm_memory_high_watermark,[]}}
------------------------------------------------------


I'm  sopposed  to use channel.flow to stop the producer. My python code is:

-------------------------------------------
        while not self.chan.flow(True):
            sys.stdout.write("W")
            sys.stdout.flush()
            time.sleep(1)

        self.chan.basic_publish(msg,
                                exchange=self.config_amqp["exchange"],
                                routing_key=self.config_amqp['routing_key'])
-------------------------------------------

What i'm doing wrong?

BTW, Im using delivery_mode=2 and a durable exchange and queue

PS: thanks tonyg for your irclog:
http://dev.rabbitmq.com/irclog/index.php?date=2010-05-13

Nico C?sar
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20100608/39ea8726/attachment.htm>

From w.richert at gmx.net  Tue Jun  8 14:00:34 2010
From: w.richert at gmx.net (Willi Richert)
Date: Tue, 08 Jun 2010 15:00:34 +0200
Subject: [rabbitmq-discuss] hg version of RabbitMQ does not "make install"
	at Ubuntu 10.4
Message-ID: <4C0E3EF2.2090502@gmx.net>

Hi,

I try to use RabbitMQ together with Orbited (where RabbitMQ shall 
replace MorbidQ).

According to several blog posts, I need RabbitMQ together with the stomp 
plugin.

  I did everything conforming to 
http://www.rabbitmq.com/plugin-development.html#getting-started , i.e.

hg clone http://hg.rabbitmq.com/rabbitmq-public-umbrella
make co
make
cd rabbitmq-server
make && sudo make install

When I do "sudo make install" I get the following error:

mkdir -p
mkdir: missing operand

As I do not find any additional information regarding this bug I assume 
that the error is within my setup: Kubuntu 10.4, 64bit

Also the plugins directory is not there as indicated by 
plugin-development.html

Any hints in this regard?

Regards,
wr

PS: To all Orbiters that use RabbitMQ: Any experience regarding using 
only RabbitMQ (via jsonrpc) 
<http://www.rabbitmq.com/plugin-development.html#getting-started>?
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20100608/e43807f3/attachment.htm>

From matthew at rabbitmq.com  Tue Jun  8 14:08:00 2010
From: matthew at rabbitmq.com (Matthew Sackman)
Date: Tue, 8 Jun 2010 14:08:00 +0100
Subject: [rabbitmq-discuss] hg version of RabbitMQ does not "make
 install" at Ubuntu 10.4
In-Reply-To: <4C0E3EF2.2090502@gmx.net>
References: <4C0E3EF2.2090502@gmx.net>
Message-ID: <20100608130800.GC18761@rabbitmq.com>

Hi,

On Tue, Jun 08, 2010 at 03:00:34PM +0200, Willi Richert wrote:
> When I do "sudo make install" I get the following error:
> 
> mkdir -p
> mkdir: missing operand

Hmm. It's possible the "make install" target is broken - we don't run it
much and it doesn't get a great deal of love and attention from us. It
should first check that certain variables are defined, but it looks like
its prereqs manage to skip over those tests. Sigh. I'll raise a bug to
get it fixed.

Try defining SBIN_DIR, MAN_DIR and TARGET_DIR as variables. If you
really want it installed system wide, something like:

make install SBIN_DIR=/usr/sbin TARGET_DIR=/var/lib/rabbitmq-server MAN_DIR=/usr/local/man

might work.

Matthew

From w.richert at gmx.net  Tue Jun  8 14:29:46 2010
From: w.richert at gmx.net (Willi Richert)
Date: Tue, 08 Jun 2010 15:29:46 +0200
Subject: [rabbitmq-discuss] hg version of RabbitMQ does not "make
 install" at Ubuntu 10.4
In-Reply-To: <20100608130800.GC18761@rabbitmq.com>
References: <4C0E3EF2.2090502@gmx.net> <20100608130800.GC18761@rabbitmq.com>
Message-ID: <4C0E45CA.7010507@gmx.net>

Hi,

my preferred installation would indeed be a local one - so that 
everything is kept in one directory like /opt/proj-rabbitmq .

Regarding the "plugins" directory: Maybe you just mention that that 
directory should be created manually at 
http://www.rabbitmq.com/plugin-development.html#getting-started

Thanks,
wr

On 08.06.2010 15:08, Matthew Sackman wrote:
> Hi,
>
> On Tue, Jun 08, 2010 at 03:00:34PM +0200, Willi Richert wrote:
>    
>> When I do "sudo make install" I get the following error:
>>
>> mkdir -p
>> mkdir: missing operand
>>      
> Hmm. It's possible the "make install" target is broken - we don't run it
> much and it doesn't get a great deal of love and attention from us. It
> should first check that certain variables are defined, but it looks like
> its prereqs manage to skip over those tests. Sigh. I'll raise a bug to
> get it fixed.
>
> Try defining SBIN_DIR, MAN_DIR and TARGET_DIR as variables. If you
> really want it installed system wide, something like:
>
> make install SBIN_DIR=/usr/sbin TARGET_DIR=/var/lib/rabbitmq-server MAN_DIR=/usr/local/man
>
> might work.
>
> Matthew
> _______________________________________________
> rabbitmq-discuss mailing list
> rabbitmq-discuss at lists.rabbitmq.com
> http://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss
>    


From matthew at rabbitmq.com  Tue Jun  8 15:05:35 2010
From: matthew at rabbitmq.com (Matthew Sackman)
Date: Tue, 8 Jun 2010 15:05:35 +0100
Subject: [rabbitmq-discuss] chan.flow and vm_memory_high_watermark
In-Reply-To: <AANLkTikz0HihSVm7rrs0p9mOyHDj6WgMjoyU9jVuW522@mail.gmail.com>
References: <AANLkTikz0HihSVm7rrs0p9mOyHDj6WgMjoyU9jVuW522@mail.gmail.com>
Message-ID: <20100608140534.GD18761@rabbitmq.com>

Hi Nicol?s,

On Tue, Jun 08, 2010 at 08:33:24AM -0300, Nicol?s C?sar wrote:
> ----- /etc/rabbitmq/rabbitmq.config ----
> [{rabbit, [{vm_memory_high_watermark, 0.2}]}].
> ------------------------------------------------------
> 
> I hit the maximum:
> ------ tail -f /var/log/rabbitmq/rabbit.log | grep -i memory ------
> vm_memory_high_watermark set. Memory used:434801384 allowed:429496729
>     alarm_handler: {set,{vm_memory_high_watermark,[]}}
> ------------------------------------------------------
> 
> 
> I'm  sopposed  to use channel.flow to stop the producer. My python code is:
> 
> -------------------------------------------
>         while not self.chan.flow(True):
>             sys.stdout.write("W")
>             sys.stdout.flush()
>             time.sleep(1)
> 
>         self.chan.basic_publish(msg,
>                                 exchange=self.config_amqp["exchange"],
>                                 routing_key=self.config_amqp['routing_key'])
> -------------------------------------------
> 
> What i'm doing wrong?

When you hit the memory watermark, the *server* sends to *you* the
channel.flow{active=false} which you're meant to acknowledge by sending
back a channel.flow_ok{active=false}. However, depending on which python
client you're using, this may not be implemented - I'm aware Tony's
produced an experimental patch for pyamqplib, and I'm not sure about the
status of flow control in Pika.

I think what you're doing is sending a channel.flow to the server which
is telling the server whether or not to send message to you, not the
other way around.

Matthew

From nico at nicocesar.com  Tue Jun  8 21:04:48 2010
From: nico at nicocesar.com (=?UTF-8?B?Tmljb2zDoXMgQ8Opc2Fy?=)
Date: Tue, 8 Jun 2010 17:04:48 -0300
Subject: [rabbitmq-discuss] chan.flow and vm_memory_high_watermark
In-Reply-To: <20100608140534.GD18761@rabbitmq.com>
References: <AANLkTikz0HihSVm7rrs0p9mOyHDj6WgMjoyU9jVuW522@mail.gmail.com> 
	<20100608140534.GD18761@rabbitmq.com>
Message-ID: <AANLkTinmLcXEKi-sQXcdTFLhHgYYpjplJaQDayYs_IF_@mail.gmail.com>

2010/6/8 Matthew Sackman <matthew at rabbitmq.com>

> Hi Nicol?s,
>
> On Tue, Jun 08, 2010 at 08:33:24AM -0300, Nicol?s C?sar wrote:
> (..)
> > What i'm doing wrong?
>
> When you hit the memory watermark, the *server* sends to *you* the
> channel.flow{active=false} which you're meant to acknowledge by sending
> back a channel.flow_ok{active=false}. However, depending on which python
> client you're using, this may not be implemented - I'm aware Tony's
> produced an experimental patch for pyamqplib, and I'm not sure about the
> status of flow control in Pika.
>


Thanks Matthew for the excelent response. You probably are talking about
this:
http://code.google.com/p/py-amqplib/issues/detail?id=19



> I think what you're doing is sending a channel.flow to the server which
> is telling the server whether or not to send message to you, not the
> other way around.
>

Thanks for the explanation. I'll see that patch and get my things going
smoothly
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20100608/813cad2b/attachment.htm>

From chen650 at yahoo.com  Wed Jun  9 02:18:46 2010
From: chen650 at yahoo.com (alex chen)
Date: Tue, 8 Jun 2010 18:18:46 -0700 (PDT)
Subject: [rabbitmq-discuss] problem with rabbitmq-server/Makefile
Message-ID: <433123.57706.qm@web31815.mail.mud.yahoo.com>

i checked out the rabbitmq-server from source today, but it failed to generate the .beam files in ebin dir.

it seems to me there is a problem in rabbitmq-server/Makefile:
line 81:

$(EBIN_DIR)/%.beam:
  erlc $(ERLC_OPTS) -pa $(EBIN_DIR) $<

after changing it to:
$(EBIN_DIR)/%.beam:  $(SOURCE_DIR)/%.erl

Is this a bug?  or maybe i am running an older version of make (version 3.81)?
thanks.

-alex


      

From matthias at rabbitmq.com  Wed Jun  9 05:56:29 2010
From: matthias at rabbitmq.com (Matthias Radestock)
Date: Wed, 09 Jun 2010 05:56:29 +0100
Subject: [rabbitmq-discuss] problem with rabbitmq-server/Makefile
In-Reply-To: <433123.57706.qm@web31815.mail.mud.yahoo.com>
References: <433123.57706.qm@web31815.mail.mud.yahoo.com>
Message-ID: <4C0F1EFD.7050004@rabbitmq.com>

Alex,

alex chen wrote:
> i checked out the rabbitmq-server from source today, but it failed to generate the .beam files in ebin dir.
> 
> it seems to me there is a problem in rabbitmq-server/Makefile:
> line 81:
> 
> $(EBIN_DIR)/%.beam:
>   erlc $(ERLC_OPTS) -pa $(EBIN_DIR) $<
> 
> after changing it to:
> $(EBIN_DIR)/%.beam:  $(SOURCE_DIR)/%.erl
> 
> Is this a bug?  or maybe i am running an older version of make (version 3.81)?
> thanks.

I'm on version 3.81 too and this works fine for me.

Chances are the automatic dependency generation didn't work in your 
environment. Please do a 'make clean' and then post the output of 'make' 
in the original version. Also, let us know a) your platform, b) which hg 
revision of the rabbit sources you are compiling, and c) what version of 
Erlang you have installed.


Regards,

Matthias.

From matthias at rabbitmq.com  Wed Jun  9 06:43:11 2010
From: matthias at rabbitmq.com (Matthias Radestock)
Date: Wed, 09 Jun 2010 06:43:11 +0100
Subject: [rabbitmq-discuss] RabbitMQ and C Interface
In-Reply-To: <128A6CF8-E1B6-4641-968B-A8323874F976@consequor.de>
References: <C832987E.BC01%pdezwart@rubiconproject.com>
	<128A6CF8-E1B6-4641-968B-A8323874F976@consequor.de>
Message-ID: <4C0F29EF.3080105@rabbitmq.com>

Frank,

Frank G?nninger wrote:
> sure! We're just eliminating all GNU C specific stuff and adding the
> required MS woodoo stuff to get a working DLL. The API as such will
> not be changed unless really required. So far all looks promising ...
> Top priority is also to not have to maintain specific MS C sources
> but one common source code tree with as few #ifdef insertions as
> possible.

That sounds great. Please try to keep up with changes in the mainline - 
of which there have been a few in recent weeks - to avoid any ghastly 
merge conflicts later on. Also, as David pointed out, there is some work 
on the bug22825 branch which may well be relevant. That will get merged 
into 'default' soon, once Tony has qa'ed it.


Regards,

Matthias.

From matthias at rabbitmq.com  Wed Jun  9 07:11:54 2010
From: matthias at rabbitmq.com (Matthias Radestock)
Date: Wed, 09 Jun 2010 07:11:54 +0100
Subject: [rabbitmq-discuss] Large Message Timeout on Receive
In-Reply-To: <4C03AD13.5020605@rabbitmq.com>
References: <4CF0C7B31BFF934B9F5FBB66A93A6702047E8272@MLNYC20MB052.amrs.win.ml.com>	<4BFFEF2D.6060906@rabbitmq.com>	<4CF0C7B31BFF934B9F5FBB66A93A6702047E8275@MLNYC20MB052.amrs.win.ml.com>
	<4C03AD13.5020605@rabbitmq.com>
Message-ID: <4C0F30AA.2080202@rabbitmq.com>

Ryan,

Emile Joubert wrote:
> The .net client currently imposes an arbitrary limit of 32Mb on incoming 
> messages.

That restriction has now been removed, so you should no longer run into 
this problem when building the .net client from the latest hg source.

Regards,

Matthias.

From matthias at rabbitmq.com  Wed Jun  9 13:07:03 2010
From: matthias at rabbitmq.com (Matthias Radestock)
Date: Wed, 09 Jun 2010 13:07:03 +0100
Subject: [rabbitmq-discuss] hg version of RabbitMQ does not "make
 install" at Ubuntu 10.4
In-Reply-To: <4C0E45CA.7010507@gmx.net>
References: <4C0E3EF2.2090502@gmx.net> <20100608130800.GC18761@rabbitmq.com>
	<4C0E45CA.7010507@gmx.net>
Message-ID: <4C0F83E7.8000600@rabbitmq.com>

Hi,

Willi Richert wrote:
> I did everything conforming to
> http://www.rabbitmq.com/plugin-development.html#getting-started ,
> i.e.
> 
> hg clone http://hg.rabbitmq.com/rabbitmq-public-umbrella
> make co
> make
> cd rabbitmq-server
> make && sudo make install

There is no mention of 'make install' at 
http://www.rabbitmq.com/plugin-development.html#getting-started, so you 
are using an undocumented feature :) As Matthew said though, we've 
raised a bug to at least make it fail in a more obvious way when the 
expected env vars aren't set.

> Regarding the "plugins" directory: Maybe you just mention that that 
> directory should be created manually at 
> http://www.rabbitmq.com/plugin-development.html#getting-started

Done.

Regards,

Matthias.

From shane at digitalsanctum.com  Wed Jun  9 14:12:36 2010
From: shane at digitalsanctum.com (Shane)
Date: Wed, 9 Jun 2010 06:12:36 -0700 (PDT)
Subject: [rabbitmq-discuss] resources for designing messaging systems
Message-ID: <205cdab3-6363-4097-9b16-5921216001fc@d8g2000yqf.googlegroups.com>

I'm new to RabbitMQ/messaging and most of the documentation I see for
RabbitMQ has simple direct queue, topic, or fanout designs. I'm
interested in more detail on designing something more complex with
possibly several publishers and consumers.

What are some good resources to help with design?

TIA

From alexis at rabbitmq.com  Wed Jun  9 15:46:56 2010
From: alexis at rabbitmq.com (Alexis Richardson)
Date: Wed, 9 Jun 2010 15:46:56 +0100
Subject: [rabbitmq-discuss] resources for designing messaging systems
In-Reply-To: <205cdab3-6363-4097-9b16-5921216001fc@d8g2000yqf.googlegroups.com>
References: <205cdab3-6363-4097-9b16-5921216001fc@d8g2000yqf.googlegroups.com>
Message-ID: <AANLkTilDiDzSpR-RhKOR0u2mv9Ecit1nia3IQZzYpqoY@mail.gmail.com>

Shane,

Have you checked out some of the blog posts linked to from here?
http://www.rabbitmq.com/how.html

In particular the "Rabbits and Warrens post" is useful.

What exactly do you plan to do?

alexis


On Wed, Jun 9, 2010 at 2:12 PM, Shane <shane at digitalsanctum.com> wrote:
> I'm new to RabbitMQ/messaging and most of the documentation I see for
> RabbitMQ has simple direct queue, topic, or fanout designs. I'm
> interested in more detail on designing something more complex with
> possibly several publishers and consumers.
>
> What are some good resources to help with design?
>
> TIA
> _______________________________________________
> rabbitmq-discuss mailing list
> rabbitmq-discuss at lists.rabbitmq.com
> http://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss
>

From nico at nicocesar.com  Wed Jun  9 15:50:07 2010
From: nico at nicocesar.com (=?UTF-8?B?Tmljb2zDoXMgQ8Opc2Fy?=)
Date: Wed, 9 Jun 2010 11:50:07 -0300
Subject: [rabbitmq-discuss] chan.flow and vm_memory_high_watermark
In-Reply-To: <AANLkTinmLcXEKi-sQXcdTFLhHgYYpjplJaQDayYs_IF_@mail.gmail.com>
References: <AANLkTikz0HihSVm7rrs0p9mOyHDj6WgMjoyU9jVuW522@mail.gmail.com> 
	<20100608140534.GD18761@rabbitmq.com>
	<AANLkTinmLcXEKi-sQXcdTFLhHgYYpjplJaQDayYs_IF_@mail.gmail.com>
Message-ID: <AANLkTikAONfZG6-jcMhb7p3OVmXJktstz43ieax26zSa@mail.gmail.com>

El 8 de junio de 2010 17:04, Nicol?s C?sar <nico at nicocesar.com> escribi?:

> 2010/6/8 Matthew Sackman <matthew at rabbitmq.com>
>
>> Hi Nicol?s,
>>
>> On Tue, Jun 08, 2010 at 08:33:24AM -0300, Nicol?s C?sar wrote:
>> (..)
>>
>> > What i'm doing wrong?
>>
>> When you hit the memory watermark, the *server* sends to *you* the
>> channel.flow{active=false} which you're meant to acknowledge by sending
>> back a channel.flow_ok{active=false}. However, depending on which python
>> client you're using, this may not be implemented - I'm aware Tony's
>> produced an experimental patch for pyamqplib, and I'm not sure about the
>> status of flow control in Pika.
>>
>
>
> Thanks Matthew for the excelent response. You probably are talking about
> this:
> http://code.google.com/p/py-amqplib/issues/detail?id=19
>
>
>
>> I think what you're doing is sending a channel.flow to the server which
>> is telling the server whether or not to send message to you, not the
>> other way around.
>>
>
> Thanks for the explanation. I'll see that patch and get my things going
> smoothly
>
>


I've applied the patch... works just fine. If I use chan.publish( ...,
block_on_flow_control=True ) I get the expected result and (if I set it to
false I get a convienent exception)

But now I've hitted the "vm_memory_high_watermark set." ; every producer is
blocked but the memory stills allocated. (using >400M for 50 empty queues)
for more than an hour.

When vm_memory_high_watermark will be cleared?  Can I force something to get
that memory back to normal. (I refuse to shut down rabbit, since I'm
debugging to get this into production)

Greetings


Nico C?sar
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20100609/6192a0ca/attachment.htm>

From simon at rabbitmq.com  Wed Jun  9 16:03:59 2010
From: simon at rabbitmq.com (Simon MacMullen)
Date: Wed, 09 Jun 2010 16:03:59 +0100
Subject: [rabbitmq-discuss] chan.flow and vm_memory_high_watermark
In-Reply-To: <AANLkTikAONfZG6-jcMhb7p3OVmXJktstz43ieax26zSa@mail.gmail.com>
References: <AANLkTikz0HihSVm7rrs0p9mOyHDj6WgMjoyU9jVuW522@mail.gmail.com>
	<20100608140534.GD18761@rabbitmq.com>	<AANLkTinmLcXEKi-sQXcdTFLhHgYYpjplJaQDayYs_IF_@mail.gmail.com>
	<AANLkTikAONfZG6-jcMhb7p3OVmXJktstz43ieax26zSa@mail.gmail.com>
Message-ID: <4C0FAD5F.4020106@rabbitmq.com>

On 09/06/10 15:50, Nicol?s C?sar wrote:
> I've applied the patch... works just fine. If I use chan.publish( ...,
> block_on_flow_control=True ) I get the expected result and (if I set it
> to false I get a convienent exception)
>
> But now I've hitted the "vm_memory_high_watermark set." ; every producer
> is blocked but the memory stills allocated. (using >400M for 50 empty
> queues) for more than an hour.
>
> When vm_memory_high_watermark will be cleared?  Can I force something to
> get that memory back to normal. (I refuse to shut down rabbit, since I'm
> debugging to get this into production)

Are you acking the messages after consuming them?

Cheers, Simon

From nico at nicocesar.com  Wed Jun  9 16:12:00 2010
From: nico at nicocesar.com (=?UTF-8?B?Tmljb2zDoXMgQ8Opc2Fy?=)
Date: Wed, 9 Jun 2010 12:12:00 -0300
Subject: [rabbitmq-discuss] chan.flow and vm_memory_high_watermark
In-Reply-To: <4C0FAD5F.4020106@rabbitmq.com>
References: <AANLkTikz0HihSVm7rrs0p9mOyHDj6WgMjoyU9jVuW522@mail.gmail.com> 
	<20100608140534.GD18761@rabbitmq.com>
	<AANLkTinmLcXEKi-sQXcdTFLhHgYYpjplJaQDayYs_IF_@mail.gmail.com> 
	<AANLkTikAONfZG6-jcMhb7p3OVmXJktstz43ieax26zSa@mail.gmail.com> 
	<4C0FAD5F.4020106@rabbitmq.com>
Message-ID: <AANLkTikBxTUXtThl-WbIqCjj5CGwfcmUPkh51o60UnWU@mail.gmail.com>

2010/6/9 Simon MacMullen <simon at rabbitmq.com>

> On 09/06/10 15:50, Nicol?s C?sar wrote:
>
>> When vm_memory_high_watermark will be cleared?  Can I force something to
>> get that memory back to normal. (I refuse to shut down rabbit, since I'm
>> debugging to get this into production)
>>
>
> Are you acking the messages after consuming them?
>
>
yes. using:

 self.chan_in.basic_ack(msg.delivery_info['delivery_tag'])

I've checked using
/usr/sbin/rabbitmqctl list_queues name messages_unacknowledged
/usr/sbin/rabbitmqctl list_channels pid messages_unacknowledged

and yep... everything is in 0...

Is there any other way to checkit?  Is there a way to get a memory dump from
the vm to see whats going on?

Nico C?sar
http://blog.nicocesar.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20100609/5b73309b/attachment.htm>

From simon at rabbitmq.com  Wed Jun  9 17:15:30 2010
From: simon at rabbitmq.com (Simon MacMullen)
Date: Wed, 09 Jun 2010 17:15:30 +0100
Subject: [rabbitmq-discuss] chan.flow and vm_memory_high_watermark
In-Reply-To: <AANLkTikBxTUXtThl-WbIqCjj5CGwfcmUPkh51o60UnWU@mail.gmail.com>
References: <AANLkTikz0HihSVm7rrs0p9mOyHDj6WgMjoyU9jVuW522@mail.gmail.com>
	<20100608140534.GD18761@rabbitmq.com>
	<AANLkTinmLcXEKi-sQXcdTFLhHgYYpjplJaQDayYs_IF_@mail.gmail.com>
	<AANLkTikAONfZG6-jcMhb7p3OVmXJktstz43ieax26zSa@mail.gmail.com>
	<4C0FAD5F.4020106@rabbitmq.com>
	<AANLkTikBxTUXtThl-WbIqCjj5CGwfcmUPkh51o60UnWU@mail.gmail.com>
Message-ID: <4C0FBE22.6040305@rabbitmq.com>

On 09/06/10 16:12, Nicol?s C?sar wrote:
> Is there any other way to checkit?  Is there a way to get a memory dump
> from the vm to see whats going on?

Well, there's erlang:memory/0.

If you're using the Debian packages, type:

$ sudo -u rabbitmq -H erl -remsh rabbit@`hostname` -sname foo

to establish a connection to the RabbitMQ Erlang process then at the 
Erlang prompt:

memory().

to give some high level statistics about what's using memory.

Other things to think about:

* Are you using the most recent Erlang? (R13B04) GC has improved recently.

* Are you stopping the queues from hibernating? If you've written 
something like a shell script to repeatedly invoke rabbitmqctl 
list_queues this will keep the queue processes from hibernating which in 
turn stops them from GCing on hibernate. If queues are busy this is not 
a problem as they also GC every (n) reductions, but if they're 
almost-but-not-quite idle it can be a problem. It doesn't have to be a 
shell script, anything that means the queues never get 10 seconds or so 
idle.

Cheers, Simon

From chen650 at yahoo.com  Wed Jun  9 22:18:02 2010
From: chen650 at yahoo.com (alex chen)
Date: Wed, 9 Jun 2010 14:18:02 -0700 (PDT)
Subject: [rabbitmq-discuss] problem with rabbitmq-server/Makefile
In-Reply-To: <4C0F1EFD.7050004@rabbitmq.com>
References: <433123.57706.qm@web31815.mail.mud.yahoo.com>
	<4C0F1EFD.7050004@rabbitmq.com>
Message-ID: <430934.66067.qm@web31813.mail.mud.yahoo.com>

Matthias,

I found the problem was that the current Makefile does not work with make-3.80.  Sorry i mentioned that i used make-3.81 in my first email.  Actually it was 3.80.
with 3.8.0, "make" does not work.  "make all" works.

output from make-3.8.0:
$ make
erlc -I include -o ebin -Wall -v +debug_info -Duse_specs -pa ebin 
erlc -I include -o ebin -Wall -v +debug_info -Duse_specs -pa ebin

$ make all
erlc -I include -o ebin -Wall -v +debug_info -Duse_specs -pa ebin src/gen_server2.erl
erlc -I include -o ebin -Wall -v +debug_info -Duse_specs -pa ebin src/delegate.erl

we are using RHEL4 which has make-3.80 installed.  Is it possible to change the Makefile such that it works with 3.80?
thanks.

-alex




----- Original Message ----
> From: Matthias Radestock <matthias at rabbitmq.com>
> To: alex chen <chen650 at yahoo.com>
> Cc: rabbitmq-discuss at lists.rabbitmq.com
> Sent: Tue, June 8, 2010 9:56:29 PM
> Subject: Re: [rabbitmq-discuss] problem with rabbitmq-server/Makefile
> 
> Alex,

alex chen wrote:
> i checked out the rabbitmq-server from 
> source today, but it failed to generate the .beam files in ebin dir.
> 
> 
> it seems to me there is a problem in rabbitmq-server/Makefile:
> 
> line 81:
> 
> $(EBIN_DIR)/%.beam:
>   erlc $(ERLC_OPTS) 
> -pa $(EBIN_DIR) $<
> 
> after changing it to:
> 
> $(EBIN_DIR)/%.beam:  $(SOURCE_DIR)/%.erl
> 
> Is this a 
> bug?  or maybe i am running an older version of make (version 
> 3.81)?
> thanks.

I'm on version 3.81 too and this works fine for 
> me.

Chances are the automatic dependency generation didn't work in your 
> environment. Please do a 'make clean' and then post the output of 'make' in the 
> original version. Also, let us know a) your platform, b) which hg revision of 
> the rabbit sources you are compiling, and c) what version of Erlang you have 
> installed.


Regards,

Matthias.


      

From nico at nicocesar.com  Wed Jun  9 22:27:53 2010
From: nico at nicocesar.com (=?UTF-8?B?Tmljb2zDoXMgQ8Opc2Fy?=)
Date: Wed, 9 Jun 2010 18:27:53 -0300
Subject: [rabbitmq-discuss] chan.flow and vm_memory_high_watermark
In-Reply-To: <4C0FBE22.6040305@rabbitmq.com>
References: <AANLkTikz0HihSVm7rrs0p9mOyHDj6WgMjoyU9jVuW522@mail.gmail.com> 
	<20100608140534.GD18761@rabbitmq.com>
	<AANLkTinmLcXEKi-sQXcdTFLhHgYYpjplJaQDayYs_IF_@mail.gmail.com> 
	<AANLkTikAONfZG6-jcMhb7p3OVmXJktstz43ieax26zSa@mail.gmail.com> 
	<4C0FAD5F.4020106@rabbitmq.com>
	<AANLkTikBxTUXtThl-WbIqCjj5CGwfcmUPkh51o60UnWU@mail.gmail.com> 
	<4C0FBE22.6040305@rabbitmq.com>
Message-ID: <AANLkTimLiHiP2av2v6Vj4mUUlVveL_MCl4jcJoBfD_2d@mail.gmail.com>

2010/6/9 Simon MacMullen <simon at rabbitmq.com>

> On 09/06/10 16:12, Nicol?s C?sar wrote:
>
>> Is there any other way to checkit?  Is there a way to get a memory dump
>> from the vm to see whats going on?
>>
>
> Well, there's erlang:memory/0.
>
> If you're using the Debian packages, type:
>
> $ sudo -u rabbitmq -H erl -remsh rabbit@`hostname` -sname foo
>
> to establish a connection to the RabbitMQ Erlang process then at the Erlang
> prompt:
>
> memory().
>
> to give some high level statistics about what's using memory.
>

Cool!!

(rabbit at sendsorium)1> memory().
[{total,27420688},
 {processes,8840004},
 {processes_used,8793876},
 {system,18580684},
 {atom,683329},
 {atom_used,650462},
 {binary,11081456},
 {code,5263067},
 {ets,452988}]

but in top I see beam.smp using:
VIRT=141m  RES=95m

none of those numbers get close....

How can I use this information to get better debugging?



> Other things to think about:
>
> * Are you using the most recent Erlang? (R13B04) GC has improved recently.
>

I've been using:
 Erlang R13B02 (erts-5.7.3) [source] [smp:2:2] [rq:2] [async-threads:0]
[kernel-poll:false]

Is that old? I'm trying other resources before changing erlang version (and
taking my Debian to 'testing' instead of 'stable') . Thanks for the advice.
Now I'm aware of that... if everything fails, I'll do it!


> * Are you stopping the queues from hibernating? If you've written something
> like a shell script to repeatedly invoke rabbitmqctl list_queues this will
> keep the queue processes from hibernating which in turn stops them from
> GCing on hibernate. If queues are busy this is not a problem as they also GC
> every (n) reductions, but if they're almost-but-not-quite idle it can be a
> problem. It doesn't have to be a shell script, anything that means the
> queues never get 10 seconds or so idle.



This is really nice data!! Yes. I have scripts but they're cron'ed every
minute.... I'm changing that and testing again.

One small detail. I'm using:

-----------------------------------------------------
while True:
  msg = self.chan.basic_get(self.config['queue'])
  if msg:
     ....
  time.sleep(2.0)
----------------------------------------------------

because I need a fixed-rate consumer . ... could this be a similar case of
the "almost-but-not-quite idle queue"?
is there any way to tell the broker to consume at a fixed rate with
chan.basic_consume(...callback = f)?

Greetings

Nico C?sar
http://blog.nicocesar.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20100609/c250c728/attachment.htm>

From matthew at rabbitmq.com  Wed Jun  9 23:08:52 2010
From: matthew at rabbitmq.com (Matthew Sackman)
Date: Wed, 9 Jun 2010 23:08:52 +0100
Subject: [rabbitmq-discuss] problem with rabbitmq-server/Makefile
In-Reply-To: <430934.66067.qm@web31813.mail.mud.yahoo.com>
References: <433123.57706.qm@web31815.mail.mud.yahoo.com>
	<4C0F1EFD.7050004@rabbitmq.com>
	<430934.66067.qm@web31813.mail.mud.yahoo.com>
Message-ID: <20100609220852.GB9767@wellquite.org>

Hi Alex,

On Wed, Jun 09, 2010 at 02:18:02PM -0700, alex chen wrote:
> we are using RHEL4 which has make-3.80 installed.  Is it possible to change the Makefile such that it works with 3.80?

RHEL 4 is pretty ancient. A little searching around suggests that the
version of Erlang in RHEL 4 is R11B2 which is far too old to work with
any recent releases of RabbitMQ anyway - 1.7.2 requires at least R11B5
and the next release (and our source repositories) require R12B3 as a
minimum. Are you sure even if you get it to compile, you'll have a
recent enough version of Erlang for it to run on?

Matthew

From chen650 at yahoo.com  Wed Jun  9 23:31:01 2010
From: chen650 at yahoo.com (alex chen)
Date: Wed, 9 Jun 2010 15:31:01 -0700 (PDT)
Subject: [rabbitmq-discuss] problem with rabbitmq-server/Makefile
In-Reply-To: <20100609220852.GB9767@wellquite.org>
References: <433123.57706.qm@web31815.mail.mud.yahoo.com>
	<4C0F1EFD.7050004@rabbitmq.com>
	<430934.66067.qm@web31813.mail.mud.yahoo.com>
	<20100609220852.GB9767@wellquite.org>
Message-ID: <647942.6848.qm@web31813.mail.mud.yahoo.com>

Matthew,


>you'll have a recent enough version of Erlang for it to run 
> on?

We are using erlang-13B.03 on both RHEL4 and RHEL5.  We need to support both on production.
If it is too much trouble to make it work with make-3.80, we can switch to 3.81.
thanks.

-alex


      

From matthew at rabbitmq.com  Wed Jun  9 23:49:27 2010
From: matthew at rabbitmq.com (Matthew Sackman)
Date: Wed, 9 Jun 2010 23:49:27 +0100
Subject: [rabbitmq-discuss] problem with rabbitmq-server/Makefile
In-Reply-To: <647942.6848.qm@web31813.mail.mud.yahoo.com>
References: <433123.57706.qm@web31815.mail.mud.yahoo.com>
	<4C0F1EFD.7050004@rabbitmq.com>
	<430934.66067.qm@web31813.mail.mud.yahoo.com>
	<20100609220852.GB9767@wellquite.org>
	<647942.6848.qm@web31813.mail.mud.yahoo.com>
Message-ID: <20100609224927.GC9767@wellquite.org>

On Wed, Jun 09, 2010 at 03:31:01PM -0700, alex chen wrote:
> >you'll have a recent enough version of Erlang for it to run 
> > on?
> 
> We are using erlang-13B.03 on both RHEL4 and RHEL5.  We need to support both on production.
> If it is too much trouble to make it work with make-3.80, we can switch to 3.81.

If that's something you can do quickly and painlessly, I suspect that's
the easiest way forwards.

Matthew

From matthias at rabbitmq.com  Thu Jun 10 00:03:04 2010
From: matthias at rabbitmq.com (Matthias Radestock)
Date: Thu, 10 Jun 2010 00:03:04 +0100
Subject: [rabbitmq-discuss] problem with rabbitmq-server/Makefile
In-Reply-To: <20100609224927.GC9767@wellquite.org>
References: <433123.57706.qm@web31815.mail.mud.yahoo.com>	<4C0F1EFD.7050004@rabbitmq.com>	<430934.66067.qm@web31813.mail.mud.yahoo.com>	<20100609220852.GB9767@wellquite.org>	<647942.6848.qm@web31813.mail.mud.yahoo.com>
	<20100609224927.GC9767@wellquite.org>
Message-ID: <4C101DA8.4000705@rabbitmq.com>

Alex,

Matthew Sackman wrote:
> On Wed, Jun 09, 2010 at 03:31:01PM -0700, alex chen wrote:
>>> you'll have a recent enough version of Erlang for it to run 
>>> on?
>> We are using erlang-13B.03 on both RHEL4 and RHEL5.  We need to support both on production.
>> If it is too much trouble to make it work with make-3.80, we can switch to 3.81.
> 
> If that's something you can do quickly and painlessly, I suspect that's
> the easiest way forwards.

Could you also please post the complete output of the failing 'make' 
invocation? I am not at all convinced this is a problem with 'make' and 
don't want us to bark up a wrong tree here.


Matthias.

From chen650 at yahoo.com  Thu Jun 10 01:19:21 2010
From: chen650 at yahoo.com (alex chen)
Date: Wed, 9 Jun 2010 17:19:21 -0700 (PDT)
Subject: [rabbitmq-discuss] problem with rabbitmq-server/Makefile
In-Reply-To: <4C101DA8.4000705@rabbitmq.com>
References: <433123.57706.qm@web31815.mail.mud.yahoo.com>
	<4C0F1EFD.7050004@rabbitmq.com>
	<430934.66067.qm@web31813.mail.mud.yahoo.com>
	<20100609220852.GB9767@wellquite.org>
	<647942.6848.qm@web31813.mail.mud.yahoo.com>
	<20100609224927.GC9767@wellquite.org>
	<4C101DA8.4000705@rabbitmq.com>
Message-ID: <648014.31779.qm@web31803.mail.mud.yahoo.com>

Matthias,


> Could you also please post the 
> complete output of the failing 'make' invocation? 

attached please find the file "make.out" that has the output from make-3.80.

> I am not at all convinced this 
> is a problem with 'make' and don't want us to bark up a wrong tree 
> here.

I installed make-3.81 on the same system and src.  it worked.  
also it worked with 3.80 using "make all".  it just did not work with "make" in 3.80.

thanks for looking into this.

-alex


      
-------------- next part --------------
A non-text attachment was scrubbed...
Name: make.out
Type: application/octet-stream
Size: 4692 bytes
Desc: not available
URL: <http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20100609/5c0aaabd/attachment-0001.obj>

From russell at borogove.org  Thu Jun 10 02:27:47 2010
From: russell at borogove.org (Russell Borogove)
Date: Wed, 9 Jun 2010 18:27:47 -0700
Subject: [rabbitmq-discuss] externally creating authorized users?
Message-ID: <D1368BEA-C968-4A30-839B-BC2358B3FAD4@borogove.org>

I'm building a client-server system that provides a number of services. Most of the services are provided via web2py web apps, but I also need messaging via rabbitmq.

We're doing the authentication on the web app side, and I think what I want to do is have the web app side remotely add a user to the rabbitmq server when a client is authenticated ("Hey, some dude wants to use the chat system. He's cool, let him in. He'll be using this name/password."). However, the web app will normally be running in a restricted environment like Google App Engine, where it can only make http requests to the outside world. 

Are there any good ways of handling a situation like this? I can certainly rig up something that runs alongside the rabbit server, polls the web app for new users, and launches rabbitmqctl to make the introductions, but it seems inelegant.


From matthias at rabbitmq.com  Thu Jun 10 07:34:10 2010
From: matthias at rabbitmq.com (Matthias Radestock)
Date: Thu, 10 Jun 2010 07:34:10 +0100
Subject: [rabbitmq-discuss] problem with rabbitmq-server/Makefile
In-Reply-To: <648014.31779.qm@web31803.mail.mud.yahoo.com>
References: <433123.57706.qm@web31815.mail.mud.yahoo.com>
	<4C0F1EFD.7050004@rabbitmq.com>
	<430934.66067.qm@web31813.mail.mud.yahoo.com>
	<20100609220852.GB9767@wellquite.org>
	<647942.6848.qm@web31813.mail.mud.yahoo.com>
	<20100609224927.GC9767@wellquite.org>
	<4C101DA8.4000705@rabbitmq.com>
	<648014.31779.qm@web31803.mail.mud.yahoo.com>
Message-ID: <4C108762.7090309@rabbitmq.com>

Alex,

alex chen wrote:
>> Could you also please post the 
>> complete output of the failing 'make' invocation? 
> 
> attached please find the file "make.out" that has the output from make-3.80.

It looks like that run succeeded. Can you show us the output of a run 
that failed? You may have to run 'make clean' first.

Also, for some reason it doesn't show the complete 'erlc' commands, i.e. 
the file name is missing. Do you always get that on your system?


Regards,

Matthias.

From matthew at rabbitmq.com  Thu Jun 10 11:02:10 2010
From: matthew at rabbitmq.com (Matthew Sackman)
Date: Thu, 10 Jun 2010 11:02:10 +0100
Subject: [rabbitmq-discuss] problem with rabbitmq-server/Makefile
In-Reply-To: <4C108762.7090309@rabbitmq.com>
References: <433123.57706.qm@web31815.mail.mud.yahoo.com>
	<4C0F1EFD.7050004@rabbitmq.com>
	<430934.66067.qm@web31813.mail.mud.yahoo.com>
	<20100609220852.GB9767@wellquite.org>
	<647942.6848.qm@web31813.mail.mud.yahoo.com>
	<20100609224927.GC9767@wellquite.org>
	<4C101DA8.4000705@rabbitmq.com>
	<648014.31779.qm@web31803.mail.mud.yahoo.com>
	<4C108762.7090309@rabbitmq.com>
Message-ID: <20100610100209.GK29260@rabbitmq.com>

Matthias,

On Thu, Jun 10, 2010 at 07:34:10AM +0100, Matthias Radestock wrote:
> alex chen wrote:
> >>Could you also please post the complete output of the failing
> >>'make' invocation?
> >
> >attached please find the file "make.out" that has the output from make-3.80.
> 
> It looks like that run succeeded. Can you show us the output of a
> run that failed? You may have to run 'make clean' first.

No, that's wrong. That is a failed run.

> Also, for some reason it doesn't show the complete 'erlc' commands,
> i.e. the file name is missing. Do you always get that on your
> system?

If the dependency generation fails then that's the result - you get the
right number of erlc commands, but they're missing all the arguments.
It's possible something that we're doing with the dynamic dependency
generation is sufficiently novel that it exposes bugs in older versions
of make.

Matthew

From pauljones23 at gmail.com  Thu Jun 10 12:06:47 2010
From: pauljones23 at gmail.com (Paul Jones)
Date: Thu, 10 Jun 2010 12:06:47 +0100
Subject: [rabbitmq-discuss] externally creating authorized users?
In-Reply-To: <D1368BEA-C968-4A30-839B-BC2358B3FAD4@borogove.org>
References: <D1368BEA-C968-4A30-839B-BC2358B3FAD4@borogove.org>
Message-ID: <AANLkTilNcu1j3gnLAkIH057HhLM8L_xnuzQcvF-xULma@mail.gmail.com>

Hi Russell,

One approach for managing users via HTTP would be to use Alice (
http://alicetheapp.com/). This provides a RESTful management interface for
Rabbit, and includes commands for creating and deleting users (
http://willcodeforfoo.com/2009/07/13/announcing-alice/).

Another approach (and I suggest this in an academic sense rather than a
practical one) would be to access the BQL plugin via the HTTP RPC plugin.

Paul.

On Thu, Jun 10, 2010 at 2:27 AM, Russell Borogove <russell at borogove.org>wrote:

> I'm building a client-server system that provides a number of services.
> Most of the services are provided via web2py web apps, but I also need
> messaging via rabbitmq.
>
> We're doing the authentication on the web app side, and I think what I want
> to do is have the web app side remotely add a user to the rabbitmq server
> when a client is authenticated ("Hey, some dude wants to use the chat
> system. He's cool, let him in. He'll be using this name/password.").
> However, the web app will normally be running in a restricted environment
> like Google App Engine, where it can only make http requests to the outside
> world.
>
> Are there any good ways of handling a situation like this? I can certainly
> rig up something that runs alongside the rabbit server, polls the web app
> for new users, and launches rabbitmqctl to make the introductions, but it
> seems inelegant.
>
> _______________________________________________
> rabbitmq-discuss mailing list
> rabbitmq-discuss at lists.rabbitmq.com
> http://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20100610/907cb941/attachment.htm>

From simon at rabbitmq.com  Thu Jun 10 12:26:41 2010
From: simon at rabbitmq.com (Simon MacMullen)
Date: Thu, 10 Jun 2010 12:26:41 +0100
Subject: [rabbitmq-discuss] chan.flow and vm_memory_high_watermark
In-Reply-To: <AANLkTimLiHiP2av2v6Vj4mUUlVveL_MCl4jcJoBfD_2d@mail.gmail.com>
References: <AANLkTikz0HihSVm7rrs0p9mOyHDj6WgMjoyU9jVuW522@mail.gmail.com>
	<20100608140534.GD18761@rabbitmq.com>
	<AANLkTinmLcXEKi-sQXcdTFLhHgYYpjplJaQDayYs_IF_@mail.gmail.com>
	<AANLkTikAONfZG6-jcMhb7p3OVmXJktstz43ieax26zSa@mail.gmail.com>
	<4C0FAD5F.4020106@rabbitmq.com>
	<AANLkTikBxTUXtThl-WbIqCjj5CGwfcmUPkh51o60UnWU@mail.gmail.com>
	<4C0FBE22.6040305@rabbitmq.com>
	<AANLkTimLiHiP2av2v6Vj4mUUlVveL_MCl4jcJoBfD_2d@mail.gmail.com>
Message-ID: <4C10CBF1.2090204@rabbitmq.com>

On 09/06/10 22:27, Nicol?s C?sar wrote:
> (rabbit at sendsorium)1> memory().
> [{total,27420688},
<snip>
> but in top I see beam.smp using:
> VIRT=141m  RES=95m

So there is some disparity here but not as much as when you were seeing 
400M used. I take it this was a different run?

> I've been using:
>   Erlang R13B02 (erts-5.7.3) [source] [smp:2:2] [rq:2] [async-threads:0]
> [kernel-poll:false]
>
> Is that old? I'm trying other resources before changing erlang version
> (and taking my Debian to 'testing' instead of 'stable') . Thanks for the
> advice. Now I'm aware of that... if everything fails, I'll do it!

It's old enough to make a difference. If you're in general concerned 
about memory use then R13B04 should improve things. But see below for 
something more important...

>     * Are you stopping the queues from hibernating? If you've written
>     something like a shell script to repeatedly invoke rabbitmqctl
>     list_queues this will keep the queue processes from hibernating
>     which in turn stops them from GCing on hibernate. If queues are busy
>     this is not a problem as they also GC every (n) reductions, but if
>     they're almost-but-not-quite idle it can be a problem. It doesn't
>     have to be a shell script, anything that means the queues never get
>     10 seconds or so idle.
>
>
> This is really nice data!! Yes. I have scripts but they're cron'ed every
> minute.... I'm changing that and testing again.

Every minute *should* be OK, it's more like every couple of seconds 
which can prevent the hibernation.

>
> One small detail. I'm using:
>
> -----------------------------------------------------
> while True:
>    msg = self.chan.basic_get(self.config['queue'])
>    if msg:
>       ....
>    time.sleep(2.0)
> ----------------------------------------------------
>
> because I need a fixed-rate consumer . ... could this be a similar case
> of the "almost-but-not-quite idle queue"?

Yes, as you'll still be waking the queue up every 2 seconds even if it's 
empty. I suspect this is your real problem.

> is there any way to tell the broker to consume at a fixed rate with
> chan.basic_consume(...callback = f)?

Yes, basic.qos. This not-very-well-named method lets you specify how 
many unacked messages the server will send to you at any time. So set 
qos to a low value, then use basic_consume with a sleep before acking.

This is an interesting case though, I'll file a bug on this behaviour.

Cheers, Simon

From Jonathan.Graham at uk.mizuho-sc.com  Thu Jun 10 13:11:48 2010
From: Jonathan.Graham at uk.mizuho-sc.com (Jon Graham)
Date: Thu, 10 Jun 2010 05:11:48 -0700 (PDT)
Subject: [rabbitmq-discuss]  WCF and queue creation
Message-ID: <28842204.post@talk.nabble.com>


Hi,

I've just started trying to use RabbitMQ with WCF.  What I'd like to be able
to do is send one way messages to a WCF service and have RabbitMQ provide a
durable queue for messages sent to the WCF service.  I have been able to set
up a one way messaging example with relative ease, but the problem I've
encountered is that the queue is always generated on the fly by the RabbitMQ
WCF client and is automatically deleted when the consumer disconnects from
the broker.

I used the .NET client to declare a durable queue and bound it using the
same key as was being used in the WCF configuration. Unfortunately, the
RabbitMQ WCF client still creates a non-durable queue with a random name
(e.g. "amq.gen-qJXrh8ZClEjNDG8PsCe4hA==") and uses that rather than the
queue I had declared earlier.

Is there a way to get the RabbitMQ WCF client to use a pre-existing queue?

My WCF configuration is as follows:

<?xml version="1.0" encoding="utf-8" ?>
<configuration>
    <system.serviceModel>
        <extensions>
            <bindingExtensions>
                <add name="rabbitMQBinding"
                     type="RabbitMQ.ServiceModel.RabbitMQBindingSection,
RabbitMQ.ServiceModel, Version=1.0.110.0, Culture=neutral,
PublicKeyToken=null"/>
            </bindingExtensions>
        </extensions>

        <bindings>
            <rabbitMQBinding>
                <binding name="OneWayRMQBinding"
                         protocolversion="AMQP_0_8"
                         broker="amqp://MyHost:5672/"
                         oneWay="true" />
            </rabbitMQBinding>
        </bindings>

        <services>
            <service
name="AMQPTests.SimpleMessaging.ServiceImpl.OneWayService">
                <host>
                    <baseAddresses>
                        <add baseAddress="soap.amqp://amq.direct/" />
                    </baseAddresses>
                </host>
                
                <endpoint address="OneWayService"
                          binding="rabbitMQBinding"
                          bindingConfiguration="OneWayRMQBinding"
                         
contract="AMQPTests.SimpleMessaging.Client.IOneWayService" />
            </service>
        </services>

        <client>
            <endpoint name="OneWayServiceEndPoint"
                      address="soap.amqp://amq.direct/OneWayService"
                      binding="rabbitMQBinding"
                      bindingConfiguration="OneWayRMQBinding"
                     
contract="AMQPTests.SimpleMessaging.Client.IOneWayService" />
        </client>
    </system.serviceModel>
</configuration>
-- 
View this message in context: http://old.nabble.com/WCF-and-queue-creation-tp28842204p28842204.html
Sent from the RabbitMQ mailing list archive at Nabble.com.


From nico at nicocesar.com  Thu Jun 10 14:02:39 2010
From: nico at nicocesar.com (=?UTF-8?B?Tmljb2zDoXMgQ8Opc2Fy?=)
Date: Thu, 10 Jun 2010 10:02:39 -0300
Subject: [rabbitmq-discuss] chan.flow and vm_memory_high_watermark
In-Reply-To: <4C10CBF1.2090204@rabbitmq.com>
References: <AANLkTikz0HihSVm7rrs0p9mOyHDj6WgMjoyU9jVuW522@mail.gmail.com> 
	<20100608140534.GD18761@rabbitmq.com>
	<AANLkTinmLcXEKi-sQXcdTFLhHgYYpjplJaQDayYs_IF_@mail.gmail.com> 
	<AANLkTikAONfZG6-jcMhb7p3OVmXJktstz43ieax26zSa@mail.gmail.com> 
	<4C0FAD5F.4020106@rabbitmq.com>
	<AANLkTikBxTUXtThl-WbIqCjj5CGwfcmUPkh51o60UnWU@mail.gmail.com> 
	<4C0FBE22.6040305@rabbitmq.com>
	<AANLkTimLiHiP2av2v6Vj4mUUlVveL_MCl4jcJoBfD_2d@mail.gmail.com> 
	<4C10CBF1.2090204@rabbitmq.com>
Message-ID: <AANLkTinqnN-fC9QpllOp2vgKxQ_N6-7mNN8P6iYXayut@mail.gmail.com>

El 10 de junio de 2010 08:26, Simon MacMullen <simon at rabbitmq.com> escribi?:

> On 09/06/10 22:27, Nicol?s C?sar wrote:
>
>> (rabbit at sendsorium)1> memory().
>> [{total,27420688},
>>
> <snip>
>
>  but in top I see beam.smp using:
>> VIRT=141m  RES=95m
>>
>
> So there is some disparity here but not as much as when you were seeing
> 400M used. I take it this was a different run?



Yess... the OOM assassin was with his gun killing my processes! Rabbit went
down fist! Thanks to you I have the memory(). trick for the next time.


>    * Are you stopping the queues from hibernating? If you've written
>>    something like a shell script to repeatedly invoke rabbitmqctl
>>    list_queues this will keep the queue processes from hibernating
>>    which in turn stops them from GCing on hibernate. If queues are busy
>>    this is not a problem as they also GC every (n) reductions, but if
>>    they're almost-but-not-quite idle it can be a problem. It doesn't
>>    have to be a shell script, anything that means the queues never get
>>    10 seconds or so idle.
>>
>>
>> This is really nice data!! Yes. I have scripts but they're cron'ed every
>> minute.... I'm changing that and testing again.
>>
>
> Every minute *should* be OK, it's more like every couple of seconds which
> can prevent the hibernation.


I've changed it to 10 minutes and there were no significant behavior
changes.


> One small detail. I'm using:
>
> -----------------------------------------------------
> while True:
>   msg = self.chan.basic_get(self.config['queue'])
>   if msg:
>      ....
>   time.sleep(2.0)
> ----------------------------------------------------
>
> because I need a fixed-rate consumer . ... could this be a similar case
> of the "almost-but-not-quite idle queue"?
>

Yes, as you'll still be waking the queue up every 2 seconds even if it's
> empty. I suspect this is your real problem.


Bingo! thanks Simon for your help in this issue!! now it's on the mail
archive, I hope this mail helps next googling rabbiter. :)


>
>  is there any way to tell the broker to consume at a fixed rate with
>> chan.basic_consume(...callback = f)?
>>
>
> Yes, basic.qos. This not-very-well-named method lets you specify how many
> unacked messages the server will send to you at any time. So set qos to a
> low value, then use basic_consume with a sleep before acking.
>

Nice to hear a yes here!! I'll be changing my code to get this working!
Thanks!

Nico Cesar
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20100610/8178669e/attachment.htm>

From srijanani.s at gmail.com  Thu Jun 10 15:24:21 2010
From: srijanani.s at gmail.com (Srijanani Srinivasan)
Date: Thu, 10 Jun 2010 09:24:21 -0500
Subject: [rabbitmq-discuss] RabbitMQ - Not able to get sets of messages in
	the same order
In-Reply-To: <AANLkTimgCmTvpHQWWSbK1u6oGs4TJX-N1o0qZ7_nMb4M@mail.gmail.com>
References: <AANLkTimgCmTvpHQWWSbK1u6oGs4TJX-N1o0qZ7_nMb4M@mail.gmail.com>
Message-ID: <AANLkTikaKqLa_gNamCL7gdYFRVFqqdPHkZJ5goPCDqED@mail.gmail.com>

Hi,

I am using Rabbit MQ in C#. This is my scenario

1.               A separate process publishes messages to the queue

2.               Client has to read set of N messages from queue

3.               Process the N messages

4.               Acknowledge the N messages

5.               Repeat steps 2 to 4 continuously to process all sets of
messages

Under the same channel, I receive the messages and then process them and
then acknowledge them. The server process keeps publishing messages. The
problem I am facing is, when I try to get next set of messages, they do not
come in the same order as it was published by the publishing process. The
messages come in a random order. Only the first set of messages comes in the
correct order.

Does any one what is going wrong here? Is creating a new channel to access
the next set of messages not right? Or is there a problem caused because of
acknowledging multiple messages? Please help me understand why this does not
work correctly.

Below is the sample code:

while (true)

            {

                using (IModel getChannel = MQConnection.CreateModel())

                {

                    // Create a consumer

                    QueueingBasicConsumer consumer =
CreateQueueConsumer(getChannel, exchangeName, queueName);

                    int numberOfMessages = 100;

                    // Next Recieve

                    List<object> msgSet = GetNextSetOfMessages(consumer,
getChannel, exchangeName, queueName, numberOfMessages,
outfinalDeliverytag);

                    // Do some processing

                    //Acknowledge finished messages by passing in the
delivery tag.

                    // calls the method BasicAck with multiple param=true

                    if (finalDeliverytag > 0)

                        AckFinishedMessages(exchangeName, queueName,
finalDeliverytag, getChannel);

                    if (finalDeliverytag == 0)

                        break;

                }

            }



Thanks for your help in advance!

Srijanani
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20100610/6b4299b2/attachment-0001.htm>

From ozhurakousky at vmware.com  Thu Jun 10 15:38:31 2010
From: ozhurakousky at vmware.com (Oleg Zhurakousky)
Date: Thu, 10 Jun 2010 07:38:31 -0700
Subject: [rabbitmq-discuss] RabbitMQ - Not able to get sets of messages
 in	the same order
In-Reply-To: <AANLkTikaKqLa_gNamCL7gdYFRVFqqdPHkZJ5goPCDqED@mail.gmail.com>
References: <AANLkTimgCmTvpHQWWSbK1u6oGs4TJX-N1o0qZ7_nMb4M@mail.gmail.com>
	<AANLkTikaKqLa_gNamCL7gdYFRVFqqdPHkZJ5goPCDqED@mail.gmail.com>
Message-ID: <1FE1E824-89AB-48BA-B104-90252B5AE334@vmware.com>

Not sure about C# API, and how you are building the next set of messages, but here is what I belive is happening.

Channel prefetch messages. That is different then invoking a consumer. THis means that you might have 1000 prefetched messages in your channel, while you are still processing 21st message. Whatever you un-acknowledge is put back into the queue once the channel is closed. AMQO does not define an ordering of messages for re-queueing.
One way to leverage this scenario is to set prefetchCount to 1. This way there will never me more then one prefetched messages in your channel.

Oleg

On Jun 10, 2010, at 10:24 AM, Srijanani Srinivasan wrote:


Hi,

I am using Rabbit MQ in C#. This is my scenario
1.               A separate process publishes messages to the queue
2.               Client has to read set of N messages from queue
3.               Process the N messages
4.               Acknowledge the N messages
5.               Repeat steps 2 to 4 continuously to process all sets of messages
Under the same channel, I receive the messages and then process them and then acknowledge them. The server process keeps publishing messages. The problem I am facing is, when I try to get next set of messages, they do not come in the same order as it was published by the publishing process. The messages come in a random order. Only the first set of messages comes in the correct order.

Does any one what is going wrong here? Is creating a new channel to access the next set of messages not right? Or is there a problem caused because of acknowledging multiple messages? Please help me understand why this does not work correctly.

Below is the sample code:
while (true)
            {
                using (IModel getChannel = MQConnection.CreateModel())
                {
                    // Create a consumer
                    QueueingBasicConsumer consumer = CreateQueueConsumer(getChannel, exchangeName, queueName);
                    int numberOfMessages = 100;
                    // Next Recieve
                    List<object> msgSet = GetNextSetOfMessages(consumer, getChannel, exchangeName, queueName, numberOfMessages,             out finalDeliverytag);
                    // Do some processing
                    //Acknowledge finished messages by passing in the delivery tag.
                    // calls the method BasicAck with multiple param=true
                    if (finalDeliverytag > 0)
                        AckFinishedMessages(exchangeName, queueName, finalDeliverytag, getChannel);
                    if (finalDeliverytag == 0)
                        break;
                }
            }

Thanks for your help in advance!
Srijanani

<ATT00001..txt>


From shane at digitalsanctum.com  Thu Jun 10 15:41:09 2010
From: shane at digitalsanctum.com (Shane)
Date: Thu, 10 Jun 2010 07:41:09 -0700 (PDT)
Subject: [rabbitmq-discuss] resources for designing messaging systems
In-Reply-To: <AANLkTilDiDzSpR-RhKOR0u2mv9Ecit1nia3IQZzYpqoY@mail.gmail.com>
References: <205cdab3-6363-4097-9b16-5921216001fc@d8g2000yqf.googlegroups.com>
	<AANLkTilDiDzSpR-RhKOR0u2mv9Ecit1nia3IQZzYpqoY@mail.gmail.com>
Message-ID: <8b952eea-c55b-4a24-a035-f899a7cf9b0f@5g2000yqz.googlegroups.com>

I guess what I'm looking for are code examples for complete apps so I
can get a better idea of the best way to apply exchanges/queues.

I'm working to port a legacy system of batches to use RabbitMQ. The
batches run in a continuous loop and use a database as a state machine
to determine what jobs to run and which data to use. There are
dependencies between some of the batches (one cannot run until one or
more others complete).

Some specific questions:

1. How best to handle inter-dependencies between queues and splittling/
aggregating units of work?
2. What are the best practices for managing/monitoring/remediation?

Thanks.


On Jun 9, 10:46?am, Alexis Richardson <ale... at rabbitmq.com> wrote:
> Shane,
>
> Have you checked out some of the blog posts linked to from here?http://www.rabbitmq.com/how.html
>
> In particular the "Rabbits and Warrens post" is useful.
>
> What exactly do you plan to do?
>
> alexis
>
> On Wed, Jun 9, 2010 at 2:12 PM, Shane <sh... at digitalsanctum.com> wrote:
> > I'm new to RabbitMQ/messaging and most of the documentation I see for
> > RabbitMQ has simple direct queue, topic, or fanout designs. I'm
> > interested in more detail on designing something more complex with
> > possibly several publishers and consumers.
>
> > What are some good resources to help with design?
>
> > TIA
> > _______________________________________________
> > rabbitmq-discuss mailing list
> > rabbitmq-disc... at lists.rabbitmq.com
> >http://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss
>
> _______________________________________________
> rabbitmq-discuss mailing list
> rabbitmq-disc... at lists.rabbitmq.comhttp://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss

From srijanani.s at gmail.com  Thu Jun 10 15:53:04 2010
From: srijanani.s at gmail.com (Srijanani Srinivasan)
Date: Thu, 10 Jun 2010 09:53:04 -0500
Subject: [rabbitmq-discuss] RabbitMQ - Not able to get sets of messages
	in the same order
In-Reply-To: <1FE1E824-89AB-48BA-B104-90252B5AE334@vmware.com>
References: <AANLkTimgCmTvpHQWWSbK1u6oGs4TJX-N1o0qZ7_nMb4M@mail.gmail.com>
	<AANLkTikaKqLa_gNamCL7gdYFRVFqqdPHkZJ5goPCDqED@mail.gmail.com>
	<1FE1E824-89AB-48BA-B104-90252B5AE334@vmware.com>
Message-ID: <AANLkTimdU7SRDQIl08drbXAF-fM0Y9daaJhCmKZ58Gbf@mail.gmail.com>

Thanks for your response. What you said makes sense. When the messages that
have not been acknowledged are put back to the queue, then
the other messages added in the meantime should be the ones to be de-queued
first right in the FIFO manner? But like you said, i guess thats not how it
works.

The same problem occurs, when I get a set of messages and don't acknowledge
them and close the channel (in the event of any exceptions). When we get the
messages, they do not come in the correct order.

I guess, if i want to get sets of messages instead of one at a time, I must
try to use the same channel. Is that right?

On Thu, Jun 10, 2010 at 9:38 AM, Oleg Zhurakousky
<ozhurakousky at vmware.com>wrote:

> Not sure about C# API, and how you are building the next set of messages,
> but here is what I belive is happening.
>
> Channel prefetch messages. That is different then invoking a consumer. THis
> means that you might have 1000 prefetched messages in your channel, while
> you are still processing 21st message. Whatever you un-acknowledge is put
> back into the queue once the channel is closed. AMQO does not define an
> ordering of messages for re-queueing.
> One way to leverage this scenario is to set prefetchCount to 1. This way
> there will never me more then one prefetched messages in your channel.
>
> Oleg
>
> On Jun 10, 2010, at 10:24 AM, Srijanani Srinivasan wrote:
>
>
> Hi,
>
> I am using Rabbit MQ in C#. This is my scenario
> 1.               A separate process publishes messages to the queue
> 2.               Client has to read set of N messages from queue
> 3.               Process the N messages
> 4.               Acknowledge the N messages
> 5.               Repeat steps 2 to 4 continuously to process all sets of
> messages
> Under the same channel, I receive the messages and then process them and
> then acknowledge them. The server process keeps publishing messages. The
> problem I am facing is, when I try to get next set of messages, they do not
> come in the same order as it was published by the publishing process. The
> messages come in a random order. Only the first set of messages comes in the
> correct order.
>
> Does any one what is going wrong here? Is creating a new channel to access
> the next set of messages not right? Or is there a problem caused because of
> acknowledging multiple messages? Please help me understand why this does not
> work correctly.
>
> Below is the sample code:
> while (true)
>            {
>                using (IModel getChannel = MQConnection.CreateModel())
>                {
>                    // Create a consumer
>                    QueueingBasicConsumer consumer =
> CreateQueueConsumer(getChannel, exchangeName, queueName);
>                    int numberOfMessages = 100;
>                    // Next Recieve
>                    List<object> msgSet = GetNextSetOfMessages(consumer,
> getChannel, exchangeName, queueName, numberOfMessages,             out
> finalDeliverytag);
>                    // Do some processing
>                    //Acknowledge finished messages by passing in the
> delivery tag.
>                    // calls the method BasicAck with multiple param=true
>                    if (finalDeliverytag > 0)
>                        AckFinishedMessages(exchangeName, queueName,
> finalDeliverytag, getChannel);
>                    if (finalDeliverytag == 0)
>                        break;
>                }
>            }
>
> Thanks for your help in advance!
> Srijanani
>
> <ATT00001..txt>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20100610/207d0fd1/attachment.htm>

From nico at nicocesar.com  Thu Jun 10 16:00:37 2010
From: nico at nicocesar.com (=?UTF-8?B?Tmljb2zDoXMgQ8Opc2Fy?=)
Date: Thu, 10 Jun 2010 12:00:37 -0300
Subject: [rabbitmq-discuss] Fwd:  chan.flow and vm_memory_high_watermark
In-Reply-To: <AANLkTimFOTH5X4_UzfpkpZjYxZkkhC4yUbbXsGEb-xyD@mail.gmail.com>
References: <AANLkTikz0HihSVm7rrs0p9mOyHDj6WgMjoyU9jVuW522@mail.gmail.com> 
	<20100608140534.GD18761@rabbitmq.com>
	<AANLkTinmLcXEKi-sQXcdTFLhHgYYpjplJaQDayYs_IF_@mail.gmail.com> 
	<AANLkTikAONfZG6-jcMhb7p3OVmXJktstz43ieax26zSa@mail.gmail.com> 
	<4C0FAD5F.4020106@rabbitmq.com>
	<AANLkTikBxTUXtThl-WbIqCjj5CGwfcmUPkh51o60UnWU@mail.gmail.com> 
	<4C0FBE22.6040305@rabbitmq.com>
	<AANLkTimLiHiP2av2v6Vj4mUUlVveL_MCl4jcJoBfD_2d@mail.gmail.com> 
	<4C10CBF1.2090204@rabbitmq.com>
	<AANLkTinqnN-fC9QpllOp2vgKxQ_N6-7mNN8P6iYXayut@mail.gmail.com> 
	<AANLkTimFOTH5X4_UzfpkpZjYxZkkhC4yUbbXsGEb-xyD@mail.gmail.com>
Message-ID: <AANLkTinUreP_6oc0PGFwiS8b4IxOkj-_O9jfVnoyelZe@mail.gmail.com>

Ops! this mail went to Simon only, I'm posting here if any has an extra tip
for me. Thanks

Nico C?sar


---------- Mensaje reenviado ----------
De: Nicol?s C?sar <nico at nicocesar.com>
Fecha: 10 de junio de 2010 11:18
Asunto: Re: [rabbitmq-discuss] chan.flow and vm_memory_high_watermark
Para: Simon MacMullen <simon at rabbitmq.com>


El 10 de junio de 2010 10:02, Nicol?s C?sar <nico at nicocesar.com> escribi?:

> (..)
>
> is there any way to tell the broker to consume at a fixed rate with
>>> chan.basic_consume(...callback = f)?
>>>
>>
>> Yes, basic.qos. This not-very-well-named method lets you specify how many
>> unacked messages the server will send to you at any time. So set qos to a
>> low value, then use basic_consume with a sleep before acking.
>>
>
> Nice to hear a yes here!! I'll be changing my code to get this working!
> Thanks!
>

Simon,

I'm sorry but I just don't get the use of basic_qos and fixed rate consuming
toghether!. My investigation so far leads that the parameters I have for a
QoS are:

basic_qos(prefetch_size, prefetch_count, a_global)

soppose that I use

basic_qos(prefetch_size=0, prefetch_count=1, a_global=False)


How can I limit "consume 1 message every 2 seconds" (that's my fixed rete)
using chan.basic_consume(...callback = f)?

If you could give me any help here would be very appreciated.

Greetings,

Nico Cesar
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20100610/bde1d719/attachment.htm>

From scott at beamdog.com  Thu Jun 10 16:30:41 2010
From: scott at beamdog.com (Scott Brooks)
Date: Thu, 10 Jun 2010 09:30:41 -0600
Subject: [rabbitmq-discuss] Fwd: chan.flow and vm_memory_high_watermark
In-Reply-To: <AANLkTinUreP_6oc0PGFwiS8b4IxOkj-_O9jfVnoyelZe@mail.gmail.com>
References: <AANLkTikz0HihSVm7rrs0p9mOyHDj6WgMjoyU9jVuW522@mail.gmail.com>
	<20100608140534.GD18761@rabbitmq.com>
	<AANLkTinmLcXEKi-sQXcdTFLhHgYYpjplJaQDayYs_IF_@mail.gmail.com>
	<AANLkTikAONfZG6-jcMhb7p3OVmXJktstz43ieax26zSa@mail.gmail.com>
	<4C0FAD5F.4020106@rabbitmq.com>
	<AANLkTikBxTUXtThl-WbIqCjj5CGwfcmUPkh51o60UnWU@mail.gmail.com>
	<4C0FBE22.6040305@rabbitmq.com>
	<AANLkTimLiHiP2av2v6Vj4mUUlVveL_MCl4jcJoBfD_2d@mail.gmail.com>
	<4C10CBF1.2090204@rabbitmq.com>
	<AANLkTinqnN-fC9QpllOp2vgKxQ_N6-7mNN8P6iYXayut@mail.gmail.com>
	<AANLkTimFOTH5X4_UzfpkpZjYxZkkhC4yUbbXsGEb-xyD@mail.gmail.com>
	<AANLkTinUreP_6oc0PGFwiS8b4IxOkj-_O9jfVnoyelZe@mail.gmail.com>
Message-ID: <AANLkTikhaIaivg6m-jUwXd91DadM0hqPmzDModWy1q2c@mail.gmail.com>

You would consume with acks turned on.

Then once you ack a message, rabbitmq will send you another.

You can use all the extra parameters to rabbitmqctl list_queues to see
how many messages are sent but not acknowledged, etc.

Scott

2010/6/10 Nicol?s C?sar <nico at nicocesar.com>:
> Ops! this mail went to Simon only, I'm posting here if any has an extra tip
> for me. Thanks
>
> Nico C?sar
>
>
> ---------- Mensaje reenviado ----------
> De: Nicol?s C?sar <nico at nicocesar.com>
> Fecha: 10 de junio de 2010 11:18
> Asunto: Re: [rabbitmq-discuss] chan.flow and vm_memory_high_watermark
> Para: Simon MacMullen <simon at rabbitmq.com>
>
>
> El 10 de junio de 2010 10:02, Nicol?s C?sar <nico at nicocesar.com> escribi?:
>>
>> (..)
>>>>
>>>> is there any way to tell the broker to consume at a fixed rate with
>>>> chan.basic_consume(...callback = f)?
>>>
>>> Yes, basic.qos. This not-very-well-named method lets you specify how many
>>> unacked messages the server will send to you at any time. So set qos to a
>>> low value, then use basic_consume with a sleep before acking.
>>
>> Nice to hear a yes here!! I'll be changing my code to get this working!
>> Thanks!
>
> Simon,
>
> I'm sorry but I just don't get the use of basic_qos and fixed rate consuming
> toghether!. My investigation so far leads that the parameters I have for a
> QoS are:
>
> basic_qos(prefetch_size, prefetch_count, a_global)
>
> soppose that I use
>
> basic_qos(prefetch_size=0, prefetch_count=1, a_global=False)
>
> How can I limit "consume 1 message every 2 seconds" (that's my fixed rete)
> using chan.basic_consume(...callback = f)?
>
> If you could give me any help here would be very appreciated.
>
> Greetings,
>
> Nico Cesar
>
>
> _______________________________________________
> rabbitmq-discuss mailing list
> rabbitmq-discuss at lists.rabbitmq.com
> http://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss
>
>

From simon at rabbitmq.com  Thu Jun 10 16:53:16 2010
From: simon at rabbitmq.com (Simon MacMullen)
Date: Thu, 10 Jun 2010 16:53:16 +0100
Subject: [rabbitmq-discuss] Fwd: chan.flow and vm_memory_high_watermark
In-Reply-To: <AANLkTinUreP_6oc0PGFwiS8b4IxOkj-_O9jfVnoyelZe@mail.gmail.com>
References: <AANLkTikz0HihSVm7rrs0p9mOyHDj6WgMjoyU9jVuW522@mail.gmail.com>
	<20100608140534.GD18761@rabbitmq.com>	<AANLkTinmLcXEKi-sQXcdTFLhHgYYpjplJaQDayYs_IF_@mail.gmail.com>
	<AANLkTikAONfZG6-jcMhb7p3OVmXJktstz43ieax26zSa@mail.gmail.com>
	<4C0FAD5F.4020106@rabbitmq.com>	<AANLkTikBxTUXtThl-WbIqCjj5CGwfcmUPkh51o60UnWU@mail.gmail.com>
	<4C0FBE22.6040305@rabbitmq.com>	<AANLkTimLiHiP2av2v6Vj4mUUlVveL_MCl4jcJoBfD_2d@mail.gmail.com>
	<4C10CBF1.2090204@rabbitmq.com>	<AANLkTinqnN-fC9QpllOp2vgKxQ_N6-7mNN8P6iYXayut@mail.gmail.com>
	<AANLkTimFOTH5X4_UzfpkpZjYxZkkhC4yUbbXsGEb-xyD@mail.gmail.com>
	<AANLkTinUreP_6oc0PGFwiS8b4IxOkj-_O9jfVnoyelZe@mail.gmail.com>
Message-ID: <4C110A6C.2020407@rabbitmq.com>

On 10/06/10 16:00, Nicol?s C?sar wrote:
> I'm sorry but I just don't get the use of basic_qos and fixed rate
> consuming toghether!. My investigation so far leads that the parameters
> I have for a QoS are:
>
> basic_qos(prefetch_size, prefetch_count, a_global)
>
> soppose that I use
>
> basic_qos(prefetch_size=0, prefetch_count=1, a_global=False)
>
>
> How can I limit "consume 1 message every 2 seconds" (that's my fixed
> rete) using chan.basic_consume(...callback = f)?

Those qos methods look reasonable. You would need to then delay the ack 
you send in the consume callback. Be careful not to just block there, 
that will block all the frames flowing down the connection on other 
channels. You need to use some sort of timer.

Are you using Pika? Marek has an example of this sort of thing at:

http://github.com/majek/pika/blob/master/examples/demo_channel_flow_asyncore.py

Cheers, Simon

From russell at borogove.org  Thu Jun 10 19:12:46 2010
From: russell at borogove.org (Russell Borogove)
Date: Thu, 10 Jun 2010 11:12:46 -0700
Subject: [rabbitmq-discuss] externally creating authorized users?
In-Reply-To: <AANLkTilNcu1j3gnLAkIH057HhLM8L_xnuzQcvF-xULma@mail.gmail.com>
References: <D1368BEA-C968-4A30-839B-BC2358B3FAD4@borogove.org>
	<AANLkTilNcu1j3gnLAkIH057HhLM8L_xnuzQcvF-xULma@mail.gmail.com>
Message-ID: <BC38A6E9-2380-495E-A108-321CB689025B@borogove.org>

On Jun 10, 2010, at 4:06 AM, Paul Jones wrote:
> One approach for managing users via HTTP would be to use Alice (http://alicetheapp.com/). This provides a RESTful management interface for Rabbit, and includes commands for creating and deleting users (http://willcodeforfoo.com/2009/07/13/announcing-alice/).

I'll look into Alice. Thanks!
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20100610/b65c9e8a/attachment.htm>

From tyler at echonest.com  Thu Jun 10 19:17:56 2010
From: tyler at echonest.com (Tyler Williams)
Date: Thu, 10 Jun 2010 14:17:56 -0400
Subject: [rabbitmq-discuss] list_queues times out
Message-ID: <B9EAAE3F-6AA6-44B6-8A65-C00E38868331@echonest.com>

Hello,

I'm running rabbitmq bugfix 21673 on a dual core 1.7Ghz machine with 8GB of RAM.

I'm having a problem where after running for a while, and with a very large number of messages (10M+, using about 4G RAM), rabbit will get into a state where it is still working, but I cannot list queues. I've been using the rabbitmq-status plugin, and this also stops working, with this message in the logs when I hit the status page:

=ERROR REPORT==== 8-Jun-2010::01:29:00 ===
{mochiweb_socket_server,235,
    {child_error,
        {timeout,{gen_server2,call,[rabbit_status_web,get_context]}}}}

Can I do anything else to debug this? Is this a known issue?

Thanks.

--tyler



From matthew at rabbitmq.com  Thu Jun 10 19:52:50 2010
From: matthew at rabbitmq.com (Matthew Sackman)
Date: Thu, 10 Jun 2010 19:52:50 +0100
Subject: [rabbitmq-discuss] list_queues times out
In-Reply-To: <B9EAAE3F-6AA6-44B6-8A65-C00E38868331@echonest.com>
References: <B9EAAE3F-6AA6-44B6-8A65-C00E38868331@echonest.com>
Message-ID: <20100610185249.GA2141@wellquite.org>

Hi Tyler,

On Thu, Jun 10, 2010 at 02:17:56PM -0400, Tyler Williams wrote:
> I'm having a problem where after running for a while, and with a very large number of messages (10M+, using about 4G RAM), rabbit will get into a state where it is still working, but I cannot list queues. I've been using the rabbitmq-status plugin, and this also stops working, with this message in the logs when I hit the status page:
> 
> =ERROR REPORT==== 8-Jun-2010::01:29:00 ===
> {mochiweb_socket_server,235,
>     {child_error,
>         {timeout,{gen_server2,call,[rabbit_status_web,get_context]}}}}
> 
> Can I do anything else to debug this? Is this a known issue?

That's a coding error either in rabbit_status. It should not be doing any
gen_server2:calls without setting the optional timeout to infinity.

I would advise not using rabbit_status if this issue is causing rabbit
to crash.

The rabbitmqctl correctly sets timeouts and will not crash.

There are times when rabbit can be unresponsive and can take a long time
to respond to even rabbitmqctl - on the order of several minutes. This
is easily considered a bug, and fixing this sort of issue is on our todo
list. However, unresponsiveness does not mean anything's gone wrong -
especially on the 21673 branch. Rabbit should always be able to recover
eventually and eventually move to a state where it can accept more
messages.

That said, if you do have 4GB RAM and over 10M messages, you may need to
start using the rabbitmq-toke plugin which cuts down the per-message RAM
cost to very little (in combination with the 21673 branch), by using
tokyo cabinet for a particular index table which otherwise can take a
couple of hundred bytes per entry. Basically, if you see the high
watermark set in the logs, and then a while later Rabbit reaches a point
where it is inactive (no CPU and no disk use) but the high watermark has
not been cleared, then it's likely you need to start investigating the
toke plugin.

Best wishes,

Matthew

From tyler at echonest.com  Thu Jun 10 20:23:23 2010
From: tyler at echonest.com (Tyler Williams)
Date: Thu, 10 Jun 2010 15:23:23 -0400
Subject: [rabbitmq-discuss] list_queues times out
In-Reply-To: <20100610185249.GA2141@wellquite.org>
References: <B9EAAE3F-6AA6-44B6-8A65-C00E38868331@echonest.com>
	<20100610185249.GA2141@wellquite.org>
Message-ID: <2D95FF8F-4675-4F4B-96FE-ED369D17A074@echonest.com>

Mathew,

On Jun 10, 2010, at 2:52 PM, Matthew Sackman wrote:

> Hi Tyler,
> 
> On Thu, Jun 10, 2010 at 02:17:56PM -0400, Tyler Williams wrote:
>> I'm having a problem where after running for a while, and with a very large number of messages (10M+, using about 4G RAM), rabbit will get into a state where it is still working, but I cannot list queues. I've been using the rabbitmq-status plugin, and this also stops working, with this message in the logs when I hit the status page:
>> 
>> =ERROR REPORT==== 8-Jun-2010::01:29:00 ===
>> {mochiweb_socket_server,235,
>>    {child_error,
>>        {timeout,{gen_server2,call,[rabbit_status_web,get_context]}}}}
>> 
>> Can I do anything else to debug this? Is this a known issue?
> 

Thanks for your reply.

> That's a coding error either in rabbit_status. It should not be doing any
> gen_server2:calls without setting the optional timeout to infinity.
> 
> I would advise not using rabbit_status if this issue is causing rabbit
> to crash.
> 

I don't think this is *causing* rabbit to crash, it just shows up in the logs after rabbit has 'crashed' or gone into this weird state. 

> The rabbitmqctl correctly sets timeouts and will not crash.
> 
> There are times when rabbit can be unresponsive and can take a long time
> to respond to even rabbitmqctl - on the order of several minutes. This
> is easily considered a bug, and fixing this sort of issue is on our todo
> list. However, unresponsiveness does not mean anything's gone wrong -
> especially on the 21673 branch. Rabbit should always be able to recover
> eventually and eventually move to a state where it can accept more
> messages.
> 

I've run rabbitmqctl list_queues and waited for hours with no response. I still see activity in the logs, and I can still connect to rabbit and do stuff, but I don't get any output from list_queues.

> That said, if you do have 4GB RAM and over 10M messages, you may need to
> start using the rabbitmq-toke plugin which cuts down the per-message RAM
> cost to very little (in combination with the 21673 branch), by using
> tokyo cabinet for a particular index table which otherwise can take a
> couple of hundred bytes per entry. Basically, if you see the high
> watermark set in the logs, and then a while later Rabbit reaches a point
> where it is inactive (no CPU and no disk use) but the high watermark has
> not been cleared, then it's likely you need to start investigating the
> toke plugin.
> 

Ok, I'll look into this. This is not exactly the failure mode we're seeing though, because in our case, rabbit is still using cpu and disk. It even clears and resets the watermark. I just can't list the queues at all.

As an addendum, after this happened today, I restarted rabbitmq, and it recovered it's previous queues without error. After using it for about 5 minutes though, it died, this time with an error in the log, which I've posted here: http://pastebin.com/BAaGpJab

> Best wishes,
> 
> Matthew

Thanks again for your help.

--tyler


From matthew at rabbitmq.com  Thu Jun 10 20:38:12 2010
From: matthew at rabbitmq.com (Matthew Sackman)
Date: Thu, 10 Jun 2010 20:38:12 +0100
Subject: [rabbitmq-discuss] list_queues times out
In-Reply-To: <2D95FF8F-4675-4F4B-96FE-ED369D17A074@echonest.com>
References: <B9EAAE3F-6AA6-44B6-8A65-C00E38868331@echonest.com>
	<20100610185249.GA2141@wellquite.org>
	<2D95FF8F-4675-4F4B-96FE-ED369D17A074@echonest.com>
Message-ID: <20100610193812.GB2141@wellquite.org>

On Thu, Jun 10, 2010 at 03:23:23PM -0400, Tyler Williams wrote:
> I've run rabbitmqctl list_queues and waited for hours with no response. I still see activity in the logs, and I can still connect to rabbit and do stuff, but I don't get any output from list_queues.

That's interesting. That suggests there's just one (or very few) queue
that's blocked or otherwise churning away which is refusing to respond
to your list_queues query. Can you come up with a recipe that reproduces
this? - there's really no what that it should sit there unresponsive for
hours!

> Ok, I'll look into this. This is not exactly the failure mode we're seeing though, because in our case, rabbit is still using cpu and disk. It even clears and resets the watermark. I just can't list the queues at all.

Yup, sounds like it's not a total memory exhaustion issue at all then,
just a temporary issue, but certainly no queue should get stuck for that
long.

> As an addendum, after this happened today, I restarted rabbitmq, and it recovered it's previous queues without error. After using it for about 5 minutes though, it died, this time with an error in the log, which I've posted here: http://pastebin.com/BAaGpJab

That's bizarre. That's a queue trying to read a message off disk and
failing to find it there. Rabbit goes to great lengths to ensure it
remains in a consistent state so this kind of thing should never happen.
Again, if you can come up with a recipe to reproduce this, that would be
great. Just a guess, but have you run out of disk space on whichever
partition Rabbit is storing messages?

Also, which revision are you running? - it's possible you've uncovered a
bug which has since been fixed anyway - the 21673 branch has move quite
a lot over the last couple of weeks so if you're not running the latest,
it's definitely worth updating.

Matthew

From emile at rabbitmq.com  Fri Jun 11 15:39:34 2010
From: emile at rabbitmq.com (Emile Joubert)
Date: Fri, 11 Jun 2010 15:39:34 +0100
Subject: [rabbitmq-discuss] WCF and queue creation
In-Reply-To: <28842204.post@talk.nabble.com>
References: <28842204.post@talk.nabble.com>
Message-ID: <4C124AA6.4080105@rabbitmq.com>



Hi Jon,

All service queues are autogenerated and I can confirm that there is no 
way to make use of an pre-declared queue. Perhaps there is a different 
way of achieving your aim - can you explain your use case?

Regards

Emile


On 10/06/10 13:11, Jon Graham wrote:
>
> Hi,
>
> I've just started trying to use RabbitMQ with WCF.  What I'd like to be able
> to do is send one way messages to a WCF service and have RabbitMQ provide a
> durable queue for messages sent to the WCF service.  I have been able to set
> up a one way messaging example with relative ease, but the problem I've
> encountered is that the queue is always generated on the fly by the RabbitMQ
> WCF client and is automatically deleted when the consumer disconnects from
> the broker.
>
> I used the .NET client to declare a durable queue and bound it using the
> same key as was being used in the WCF configuration. Unfortunately, the
> RabbitMQ WCF client still creates a non-durable queue with a random name
> (e.g. "amq.gen-qJXrh8ZClEjNDG8PsCe4hA==") and uses that rather than the
> queue I had declared earlier.
>
> Is there a way to get the RabbitMQ WCF client to use a pre-existing queue?
>
> My WCF configuration is as follows:
>
> <?xml version="1.0" encoding="utf-8" ?>
> <configuration>
>      <system.serviceModel>
>          <extensions>
>              <bindingExtensions>
>                  <add name="rabbitMQBinding"
>                       type="RabbitMQ.ServiceModel.RabbitMQBindingSection,
> RabbitMQ.ServiceModel, Version=1.0.110.0, Culture=neutral,
> PublicKeyToken=null"/>
>              </bindingExtensions>
>          </extensions>
>
>          <bindings>
>              <rabbitMQBinding>
>                  <binding name="OneWayRMQBinding"
>                           protocolversion="AMQP_0_8"
>                           broker="amqp://MyHost:5672/"
>                           oneWay="true" />
>              </rabbitMQBinding>
>          </bindings>
>
>          <services>
>              <service
> name="AMQPTests.SimpleMessaging.ServiceImpl.OneWayService">
>                  <host>
>                      <baseAddresses>
>                          <add baseAddress="soap.amqp://amq.direct/" />
>                      </baseAddresses>
>                  </host>
>
>                  <endpoint address="OneWayService"
>                            binding="rabbitMQBinding"
>                            bindingConfiguration="OneWayRMQBinding"
>
> contract="AMQPTests.SimpleMessaging.Client.IOneWayService" />
>              </service>
>          </services>
>
>          <client>
>              <endpoint name="OneWayServiceEndPoint"
>                        address="soap.amqp://amq.direct/OneWayService"
>                        binding="rabbitMQBinding"
>                        bindingConfiguration="OneWayRMQBinding"
>
> contract="AMQPTests.SimpleMessaging.Client.IOneWayService" />
>          </client>
>      </system.serviceModel>
> </configuration>


From Jonathan.Graham at uk.mizuho-sc.com  Fri Jun 11 16:18:29 2010
From: Jonathan.Graham at uk.mizuho-sc.com (Jonathan Graham)
Date: Fri, 11 Jun 2010 16:18:29 +0100
Subject: [rabbitmq-discuss] WCF and queue creation
In-Reply-To: <4C124AA6.4080105@rabbitmq.com>
References: <28842204.post@talk.nabble.com> <4C124AA6.4080105@rabbitmq.com>
Message-ID: <1753EE61AD475A47A4DEBDD983A7BBCF0B344F91@GBR1-LDN01.uk.mizuho-sc.com>

Hi Emile,

Thanks for your reply. Since my initial message I have taken a look at
the source for the RabbitMQ WCF binding and had concluded what you
confirmed.

I have two WCF services (let's call them A and B) in an existing
application.  I want to send asynchronous, one-way messages from service
A to service B.  The operation being invoked on service B can take some
time to complete, and service A's call to B is due to an end user
initiated operation on A. I don't want to make end users wait for B to
complete, hence the asynchronous requirement.  Service B is also a
little fragile and is not always available, so I want any messages sent
to it to be stored in a durable queue until B is able to process the
messages.

At present, I've been using MSMQ to meet these requirement, but for
various reasons, MSMQ has shown itself not to be fit for purpose.  A
colleague of mine recently brought RabbitMQ to my attention and its WCF
binding made it appear as if it could work as a drop-in replacement for
MSMQ, which was ideal as project time constraints mean major re-coding
at this stage is not feasible. Unfortunately because Rabbit's WCF
binding doesn't let us use durable queues, we haven't yet been able to
make use of it.

It looks like the following options are available:

1. Change the way the WCF binding works so that existing queues can be
used and/or that queues declared by the binding can be made durable. (As
an aside, if I can find the time, I wouldn't mind contributing this
change, but I don't have a whole lot of free time at present.)

2. No longer implement service B as a WCF service and instead use the
RabbitMQ .NET client API to consume messages from RabbitMQ.

3. Find some other message queue with WCF bindings.

Your advice would be appreciated.

Regards,
Jon

-----Original Message-----
From: Emile Joubert [mailto:emile at rabbitmq.com] 
Sent: 11 June 2010 15:40
To: Graham Jonathan
Cc: rabbitmq-discuss at lists.rabbitmq.com
Subject: Re: [rabbitmq-discuss] WCF and queue creation



Hi Jon,

All service queues are autogenerated and I can confirm that there is no 
way to make use of an pre-declared queue. Perhaps there is a different 
way of achieving your aim - can you explain your use case?

Regards

Emile


On 10/06/10 13:11, Jon Graham wrote:
>
> Hi,
>
> I've just started trying to use RabbitMQ with WCF.  What I'd like to
be able
> to do is send one way messages to a WCF service and have RabbitMQ
provide a
> durable queue for messages sent to the WCF service.  I have been able
to set
> up a one way messaging example with relative ease, but the problem
I've
> encountered is that the queue is always generated on the fly by the
RabbitMQ
> WCF client and is automatically deleted when the consumer disconnects
from
> the broker.
>
> I used the .NET client to declare a durable queue and bound it using
the
> same key as was being used in the WCF configuration. Unfortunately,
the
> RabbitMQ WCF client still creates a non-durable queue with a random
name
> (e.g. "amq.gen-qJXrh8ZClEjNDG8PsCe4hA==") and uses that rather than
the
> queue I had declared earlier.
>
> Is there a way to get the RabbitMQ WCF client to use a pre-existing
queue?
>
> My WCF configuration is as follows:
>
> <?xml version="1.0" encoding="utf-8" ?>
> <configuration>
>      <system.serviceModel>
>          <extensions>
>              <bindingExtensions>
>                  <add name="rabbitMQBinding"
>
type="RabbitMQ.ServiceModel.RabbitMQBindingSection,
> RabbitMQ.ServiceModel, Version=1.0.110.0, Culture=neutral,
> PublicKeyToken=null"/>
>              </bindingExtensions>
>          </extensions>
>
>          <bindings>
>              <rabbitMQBinding>
>                  <binding name="OneWayRMQBinding"
>                           protocolversion="AMQP_0_8"
>                           broker="amqp://MyHost:5672/"
>                           oneWay="true" />
>              </rabbitMQBinding>
>          </bindings>
>
>          <services>
>              <service
> name="AMQPTests.SimpleMessaging.ServiceImpl.OneWayService">
>                  <host>
>                      <baseAddresses>
>                          <add baseAddress="soap.amqp://amq.direct/" />
>                      </baseAddresses>
>                  </host>
>
>                  <endpoint address="OneWayService"
>                            binding="rabbitMQBinding"
>                            bindingConfiguration="OneWayRMQBinding"
>
> contract="AMQPTests.SimpleMessaging.Client.IOneWayService" />
>              </service>
>          </services>
>
>          <client>
>              <endpoint name="OneWayServiceEndPoint"
>                        address="soap.amqp://amq.direct/OneWayService"
>                        binding="rabbitMQBinding"
>                        bindingConfiguration="OneWayRMQBinding"
>
> contract="AMQPTests.SimpleMessaging.Client.IOneWayService" />
>          </client>
>      </system.serviceModel>
> </configuration>


This message and any files transmitted with it are confidential and intended solely for the use of the individual or entity to whom they are addressed. If you have received this message in error please delete it and any files transmitted with it, after notifying postmaster at uk.mizuho-sc.com 
Any opinions expressed in this message may be those of the author and not necessarily those of the company. The company accepts no responsibility for the accuracy or completeness of any information contained herein. This message is not intended to create legal relations between the company and the recipient. 
Recipients should please note that messages sent via the Internet may be intercepted and that caution should therefore be exercised before dispatching to the company any confidential or sensitive information. 
Mizuho International plc Bracken House, One Friday Street, London EC4M 9JA. TEL. 020 72361090. Wholly owned subsidiary of Mizuho Securities Co., Ltd. Member of Mizuho Financial Group. Authorised and regulated by the Financial Services Authority. Member of the London Stock Exchange. 

Registered in England No. 1203696. Registered office as above.


From shane at digitalsanctum.com  Fri Jun 11 18:35:43 2010
From: shane at digitalsanctum.com (Shane)
Date: Fri, 11 Jun 2010 10:35:43 -0700 (PDT)
Subject: [rabbitmq-discuss] debugging via Java client causes handshake
	timeout?
Message-ID: <343209e2-d572-4a99-a11a-5eb1a930cebb@e5g2000yqn.googlegroups.com>

I've consistently got a handshake timeout connecting to RabbitMQ
running locally when I run test code via my IDE's debugger. Here's the
rabbit log output:

=INFO REPORT==== 11-Jun-2010::13:23:21 ===
accepted TCP connection on 0.0.0.0:5672 from 127.0.0.1:2108

=INFO REPORT==== 11-Jun-2010::13:23:21 ===
starting TCP connection <0.173.0> from 127.0.0.1:2108

=ERROR REPORT==== 11-Jun-2010::13:23:31 ===
exception on TCP connection <0.173.0> from 127.0.0.1:2108
{handshake_timeout,frame_header}

=INFO REPORT==== 11-Jun-2010::13:23:31 ===
closing TCP connection <0.173.0> from 127.0.0.1:2108

----
This is the exception from Java which I guess is happening because a
connection is never made?:

com.rabbitmq.client.AlreadyClosedException: clean connection shutdown;
reason: Attempt to use closed channel
	at com.rabbitmq.client.impl.AMQChannel.ensureIsOpen(AMQChannel.java:
189)
	at com.rabbitmq.client.impl.AMQChannel.rpc(AMQChannel.java:216)
	at com.rabbitmq.client.impl.AMQChannel.rpc(AMQChannel.java:202)
	at com.rabbitmq.client.impl.AMQChannel.exnWrappingRpc(AMQChannel.java:
133)
	at com.rabbitmq.client.impl.AMQConnection.start(AMQConnection.java:
260)
	at
com.rabbitmq.client.ConnectionFactory.newConnection(ConnectionFactory.java:
200)
	at
com.rabbitmq.client.ConnectionFactory.newConnection(ConnectionFactory.java:
249)
	at
com.rabbitmq.client.ConnectionFactory.newConnection(ConnectionFactory.java:
263)
	at
com.rabbitmq.client.ConnectionFactory.newConnection(ConnectionFactory.java:
274)

----
My environment:
Windows XP
RabbitMQ Server 1.7.2
Java Client 1.7.2

If I run the same code NOT using my debugger, it's able to make a
connection and publish a message as expected. Is this a known issue or
is there a way to increase the timeout so I can use a debugger?

From matthew at rabbitmq.com  Fri Jun 11 18:39:13 2010
From: matthew at rabbitmq.com (Matthew Sackman)
Date: Fri, 11 Jun 2010 18:39:13 +0100
Subject: [rabbitmq-discuss] debugging via Java client causes handshake
 timeout?
In-Reply-To: <343209e2-d572-4a99-a11a-5eb1a930cebb@e5g2000yqn.googlegroups.com>
References: <343209e2-d572-4a99-a11a-5eb1a930cebb@e5g2000yqn.googlegroups.com>
Message-ID: <20100611173913.GC22651@rabbitmq.com>

On Fri, Jun 11, 2010 at 10:35:43AM -0700, Shane wrote:
> If I run the same code NOT using my debugger, it's able to make a
> connection and publish a message as expected. Is this a known issue or
> is there a way to increase the timeout so I can use a debugger?

I'd suggest you just set the breakpoint after the connection has been
established. There is a 3 second timeout in the handshake with the
broker. This timeout is not exposed via configuration thus you'd need to
recompile the broker if you wished to change it. You'd need to change
the NORMAL_TIMEOUT and possible the HANDSHAKE_TIMEOUT too at the top of
rabbit_reader.erl.

Matthew

From matthew at rabbitmq.com  Fri Jun 11 18:46:02 2010
From: matthew at rabbitmq.com (Matthew Sackman)
Date: Fri, 11 Jun 2010 18:46:02 +0100
Subject: [rabbitmq-discuss] debugging via Java client causes handshake
 timeout?
In-Reply-To: <AANLkTinsQLX4j1n1La3FzKMXi-MOJNBmjUi0Kk8tMYD0@mail.gmail.com>
References: <343209e2-d572-4a99-a11a-5eb1a930cebb@e5g2000yqn.googlegroups.com>
	<20100611173913.GC22651@rabbitmq.com>
	<AANLkTinsQLX4j1n1La3FzKMXi-MOJNBmjUi0Kk8tMYD0@mail.gmail.com>
Message-ID: <20100611174602.GD22651@rabbitmq.com>

On Fri, Jun 11, 2010 at 01:42:14PM -0400, Shane Witbeck wrote:
> This seems to occur even if I have no breakpoints set.

That's very odd. I certainly have no problems working with the Java
client inside Eclipse's debugger. Which version of the java client are
you using, and which debugger are you working with?

Matthew

From matthew at rabbitmq.com  Fri Jun 11 18:50:56 2010
From: matthew at rabbitmq.com (Matthew Sackman)
Date: Fri, 11 Jun 2010 18:50:56 +0100
Subject: [rabbitmq-discuss] debugging via Java client causes handshake
 timeout?
In-Reply-To: <AANLkTim3MZUExLrra0yf8L2Oy9vGXlhhqFItsaJpaXZN@mail.gmail.com>
References: <343209e2-d572-4a99-a11a-5eb1a930cebb@e5g2000yqn.googlegroups.com>
	<20100611173913.GC22651@rabbitmq.com>
	<AANLkTinsQLX4j1n1La3FzKMXi-MOJNBmjUi0Kk8tMYD0@mail.gmail.com>
	<20100611174602.GD22651@rabbitmq.com>
	<AANLkTim3MZUExLrra0yf8L2Oy9vGXlhhqFItsaJpaXZN@mail.gmail.com>
Message-ID: <20100611175056.GE22651@rabbitmq.com>

Hi Shane,

Please try and keep the list CC'd.

On Fri, Jun 11, 2010 at 01:48:30PM -0400, Shane Witbeck wrote:
> IntelliJ IDEA 9.0.2 debugger with Java 1.6.0_18. Java client version is
> 1.7.2.

Hmm, I've not come across anyone else with the same issue. I don't use
IntelliJ, but I'm sure there are people on the list who do who may be
able to help out. Anyone?

Matthew
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 490 bytes
Desc: Digital signature
URL: <http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20100611/3dc32ec0/attachment.pgp>

From ozhurakousky at vmware.com  Fri Jun 11 19:01:00 2010
From: ozhurakousky at vmware.com (Oleg Zhurakousky)
Date: Fri, 11 Jun 2010 11:01:00 -0700
Subject: [rabbitmq-discuss] debugging via Java client causes handshake
 timeout?
In-Reply-To: <20100611175056.GE22651@rabbitmq.com>
References: <343209e2-d572-4a99-a11a-5eb1a930cebb@e5g2000yqn.googlegroups.com>
	<20100611173913.GC22651@rabbitmq.com>
	<AANLkTinsQLX4j1n1La3FzKMXi-MOJNBmjUi0Kk8tMYD0@mail.gmail.com>
	<20100611174602.GD22651@rabbitmq.com>
	<AANLkTim3MZUExLrra0yf8L2Oy9vGXlhhqFItsaJpaXZN@mail.gmail.com>
	<20100611175056.GE22651@rabbitmq.com>
Message-ID: <F7985D08-431B-482C-804E-A89A2F192E0D@vmware.com>

I had the same problem few days ago (1.7.2). And you are correct, depending on where you put a breakpoint you will hang for longer then HANDSHAKE_TIMOUT which I believe is set for 10 sec ( public static final int HANDSHAKE_TIMEOUT = 10000;).

On Jun 11, 2010, at 1:50 PM, Matthew Sackman wrote:

Hi Shane,

Please try and keep the list CC'd.

On Fri, Jun 11, 2010 at 01:48:30PM -0400, Shane Witbeck wrote:
IntelliJ IDEA 9.0.2 debugger with Java 1.6.0_18. Java client version is
1.7.2.

Hmm, I've not come across anyone else with the same issue. I don't use
IntelliJ, but I'm sure there are people on the list who do who may be
able to help out. Anyone?

Matthew
<signature.asc><ATT00001..txt>


From w.richert at gmx.net  Sun Jun 13 13:14:04 2010
From: w.richert at gmx.net (Willi Richert)
Date: Sun, 13 Jun 2010 14:14:04 +0200
Subject: [rabbitmq-discuss] RabbitMQ+STOMP: how to trigger events upon
 connect/subscribe to stomp destinations?
Message-ID: <4C14CB8C.8020008@gmx.net>

Hi,

I am using RabbitMQ+STOMP as a MorbidQ replacement in the Orbited orbit. 
With MorbidQ I had the possibility to use a custom RestQ listener 
(http://www.morbidq.com/trac/wiki/RestQ ) for doing auth and other 
stuff. As auth is perfectly handled by RabbitMQ I am looking now for 
ways to handle the "other stuff":

When a user surfs on some web page, it connects to Orbited via stomp and 
subscribes to a secret destination where it listens for updates. At the 
point when the browser subscribes, my RestQ listener signaled all the 
other browsers visiting the same page that a new user arrived (via STOMP 
messges).

What is the preferred way for this in RabbitMQ. Is there some similar 
restful service? I've read about Alice, as it was suggested at this list 
days ago. From my understanding, atm it is only for administering the 
broker.

Any hint appreciated,
wr

From askh at opera.com  Mon Jun 14 11:01:43 2010
From: askh at opera.com (Ask Solem)
Date: Mon, 14 Jun 2010 12:01:43 +0200
Subject: [rabbitmq-discuss] [Ann] pylibrabbitmq - Python bindings to
	rabbitmq-c
Message-ID: <55C3CE64-F6BE-43A9-B091-1CEBE19BC0DF@opera.com>

Hey!

I spent the weekend creating Python bindings to rabbitmq-c.

The result can be found here: http://github.com/ask/pylibrabbitmq

There's probably lots of bugs here, but I've already managed to use it
with celery (both producing and consuming). A carrot backend is also
available in the carrot master branch (carrot.backends.librabbitmq)


Cheers,
-- 
{Ask Solem,
 +47 98435213 | twitter.com/asksol }.


From majek04 at gmail.com  Mon Jun 14 11:38:17 2010
From: majek04 at gmail.com (Marek Majkowski)
Date: Mon, 14 Jun 2010 11:38:17 +0100
Subject: [rabbitmq-discuss] [Ann] pylibrabbitmq - Python bindings to
	rabbitmq-c
In-Reply-To: <55C3CE64-F6BE-43A9-B091-1CEBE19BC0DF@opera.com>
References: <55C3CE64-F6BE-43A9-B091-1CEBE19BC0DF@opera.com>
Message-ID: <AANLkTin00EWvmrp8Sd5d5o5f7JR4sBWYjTgMQR0Ix75e@mail.gmail.com>

Thanks for that, it looks very nice!

Can I ask what was the main reason for playing with rabbitmq-c
in the first place?
Are current python libraries too slow (do you have any benchmarks)?

Cheers,
   Marek Majkowski


On Mon, Jun 14, 2010 at 11:01, Ask Solem <askh at opera.com> wrote:
> Hey!
>
> I spent the weekend creating Python bindings to rabbitmq-c.
>
> The result can be found here: http://github.com/ask/pylibrabbitmq
>
> There's probably lots of bugs here, but I've already managed to use it
> with celery (both producing and consuming). A carrot backend is also
> available in the carrot master branch (carrot.backends.librabbitmq)
>
>
> Cheers,
> --
> {Ask Solem,
> ?+47 98435213 | twitter.com/asksol }.
>
> _______________________________________________
> rabbitmq-discuss mailing list
> rabbitmq-discuss at lists.rabbitmq.com
> http://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss
>

From askh at opera.com  Mon Jun 14 11:49:10 2010
From: askh at opera.com (Ask Solem)
Date: Mon, 14 Jun 2010 12:49:10 +0200
Subject: [rabbitmq-discuss] [Ann] pylibrabbitmq - Python bindings to
	rabbitmq-c
In-Reply-To: <AANLkTin00EWvmrp8Sd5d5o5f7JR4sBWYjTgMQR0Ix75e@mail.gmail.com>
References: <55C3CE64-F6BE-43A9-B091-1CEBE19BC0DF@opera.com>
	<AANLkTin00EWvmrp8Sd5d5o5f7JR4sBWYjTgMQR0Ix75e@mail.gmail.com>
Message-ID: <7D63DE47-EC8B-46C0-AF08-28CEC4DD8342@opera.com>


On Jun 14, 2010, at 12:38 PM, Marek Majkowski wrote:

> Thanks for that, it looks very nice!
> 
> Can I ask what was the main reason for playing with rabbitmq-c
> in the first place?

Just an excuse to play with it and the Python C API.

> Are current python libraries too slow (do you have any benchmarks)?
> 


Not in my experience, at least not for my current use cases.
Would be fun to produce some benchmarks,
I guess publishing is the most interesting one.


-- 
{Ask Solem,
 +47 98435213 | twitter.com/asksol }.


From askh at opera.com  Mon Jun 14 14:29:37 2010
From: askh at opera.com (Ask Solem)
Date: Mon, 14 Jun 2010 15:29:37 +0200
Subject: [rabbitmq-discuss] [Ann] pylibrabbitmq - Python bindings to
	rabbitmq-c
In-Reply-To: <AANLkTin00EWvmrp8Sd5d5o5f7JR4sBWYjTgMQR0Ix75e@mail.gmail.com>
References: <55C3CE64-F6BE-43A9-B091-1CEBE19BC0DF@opera.com>
	<AANLkTin00EWvmrp8Sd5d5o5f7JR4sBWYjTgMQR0Ix75e@mail.gmail.com>
Message-ID: <2015D1E2-206C-477B-BC2A-10121E227433@opera.com>


On Jun 14, 2010, at 12:38 PM, Marek Majkowski wrote:

> 
> Are current python libraries too slow (do you have any benchmarks)?


Just did a simple benchmark, but take it with a shot of salt because I
have quite a lot of other apps running and I could be testing the wrong
things.

basic.publish: (256 byte messages)
    amqplib:   13.48 usec/pass
    librabbit: 6.81 usec/pass
basic.consume (5000 msg/pass) 
    amqplib:   10.34 usec/pass
    librabbit: 4.49 usec/pass

The benchmark script is here:


But the real interesting benchmark is the celery one:

amqplib: concurrency=4 100 * 100 tasks.add roundtrip:   30.21 usec/pass
librabbit: concurrency=4 100 * 100 tasks.add roundtrip:   8.86 usec/pass
                                                                                                       ^^^^ !!!!!!!!!!!

That is the time taken to send a task to celery, for celery to execute the task, send the
return value back as a message, and then the benchmark recieves the result again (roundtrip time)

I guess the speed improvement is mainly about threading. Celery is highly dependent of threads, and pylibrabbitmq releases the GIL in strategic places. Just a hunch though.




-- 
{Ask Solem,
 Developer ~ Webteam,
 Opera Software,
 +47 98435213 | twitter.com/asksol }.


From sustrik at 250bpm.com  Mon Jun 14 14:32:33 2010
From: sustrik at 250bpm.com (Martin Sustrik)
Date: Mon, 14 Jun 2010 15:32:33 +0200
Subject: [rabbitmq-discuss] [Ann] pylibrabbitmq - Python bindings
	to	rabbitmq-c
In-Reply-To: <2015D1E2-206C-477B-BC2A-10121E227433@opera.com>
References: <55C3CE64-F6BE-43A9-B091-1CEBE19BC0DF@opera.com>	<AANLkTin00EWvmrp8Sd5d5o5f7JR4sBWYjTgMQR0Ix75e@mail.gmail.com>
	<2015D1E2-206C-477B-BC2A-10121E227433@opera.com>
Message-ID: <4C162F71.5030901@250bpm.com>

Ask Solem wrote:

> librabbit: concurrency=4 100 * 100 tasks.add roundtrip:   8.86 usec/pass
>                                                                                                        ^^^^ !!!!!!!!!!! 
> That is the time taken to send a task to celery, for celery to execute the task, send the
> return value back as a message, and then the benchmark recieves the result again (roundtrip time)

8.86 us roundtrip time looks strange. How much is your ping rountrip time?

Martin

From askh at opera.com  Mon Jun 14 14:33:33 2010
From: askh at opera.com (Ask Solem)
Date: Mon, 14 Jun 2010 15:33:33 +0200
Subject: [rabbitmq-discuss] [Ann] pylibrabbitmq - Python bindings to
	rabbitmq-c
In-Reply-To: <2015D1E2-206C-477B-BC2A-10121E227433@opera.com>
References: <55C3CE64-F6BE-43A9-B091-1CEBE19BC0DF@opera.com>
	<AANLkTin00EWvmrp8Sd5d5o5f7JR4sBWYjTgMQR0Ix75e@mail.gmail.com>
	<2015D1E2-206C-477B-BC2A-10121E227433@opera.com>
Message-ID: <5513FFD1-2D92-476A-BCD2-2719CF0C147F@opera.com>


On Jun 14, 2010, at 3:29 PM, Ask Solem wrote:
> 
> The benchmark script is here:


Sorry, forgot the link:
http://github.com/ask/pylibrabbitmq/blob/master/benchmark.py

I'm still high after the celery benchmark results :)


-- 
{Ask Solem,
 +47 98435213 | twitter.com/asksol }.


From emile at rabbitmq.com  Mon Jun 14 18:23:52 2010
From: emile at rabbitmq.com (Emile Joubert)
Date: Mon, 14 Jun 2010 18:23:52 +0100
Subject: [rabbitmq-discuss] WCF and queue creation
In-Reply-To: <1753EE61AD475A47A4DEBDD983A7BBCF0B344F91@GBR1-LDN01.uk.mizuho-sc.com>
References: <28842204.post@talk.nabble.com> <4C124AA6.4080105@rabbitmq.com>
	<1753EE61AD475A47A4DEBDD983A7BBCF0B344F91@GBR1-LDN01.uk.mizuho-sc.com>
Message-ID: <4C1665A8.8020806@rabbitmq.com>


Hi Jonathan,


On 11/06/10 16:18, Jonathan Graham wrote:
> Hi Emile,


> I have two WCF services (let's call them A and B) in an existing
> application.  I want to send asynchronous, one-way messages from service
> A to service B.  The operation being invoked on service B can take some
> time to complete, and service A's call to B is due to an end user
> initiated operation on A. I don't want to make end users wait for B to
> complete, hence the asynchronous requirement.  Service B is also a
> little fragile and is not always available, so I want any messages sent
> to it to be stored in a durable queue until B is able to process the
> messages.

I agree that a one-way (fire & forget) channel is appropriate for your 
use case. Queue durability alone will not be sufficient to accomplish 
your goal though, because the service host will need to reconnect to the 
same queue. If you are comfortable with recompiling the ServiceModel 
project in order to experiment with a possible approach, try replacing 
line 171 in RabbitMQInputChannel with:

string queue = m_model.QueueDeclare(LocalAddress.Uri.AbsolutePath, true);

This will cause the service queue to have a fixed name and be durable. 
The queue will then accumulate requests in the event of service B 
temporarily disconnecting.

Caveats apply: This code has not been through our formal QA process. It 
is meant for experimentation only and may break other things.

> [...] Unfortunately because Rabbit's WCF
> binding doesn't let us use durable queues, we haven't yet been able to
> make use of it.

This is a feature that could be added if there was sufficient demand, 
but you are the first to suggest it.

> It looks like the following options are available:
>
> 1. Change the way the WCF binding works so that existing queues can be
> used and/or that queues declared by the binding can be made durable. (As
> an aside, if I can find the time, I wouldn't mind contributing this
> change, but I don't have a whole lot of free time at present.)

I'm hoping that the line of code above gives you a useful place to 
start. I'd be interested to know if it works for you.

> 2. No longer implement service B as a WCF service and instead use the
> RabbitMQ .NET client API to consume messages from RabbitMQ.

If you are not bound to the strictures of WCF then this can work very 
simply. There are many examples in the RabbitMQ.Client.Examples that 
illustrate how to send messages from a message producer to a consumer. 
You will need to do some of the work that RabbitMQ ServiceModel does for 
you, such as declaring and binding a queue and structuring the message 
in the way that the consumer can understand it.

Regards

Emile


From Jonathan.Graham at uk.mizuho-sc.com  Mon Jun 14 18:47:55 2010
From: Jonathan.Graham at uk.mizuho-sc.com (Jon Graham)
Date: Mon, 14 Jun 2010 10:47:55 -0700 (PDT)
Subject: [rabbitmq-discuss] WCF and queue creation
In-Reply-To: <4C1665A8.8020806@rabbitmq.com>
References: <28842204.post@talk.nabble.com> <4C124AA6.4080105@rabbitmq.com>
	<1753EE61AD475A47A4DEBDD983A7BBCF0B344F91@GBR1-LDN01.uk.mizuho-sc.com>
	<4C1665A8.8020806@rabbitmq.com>
Message-ID: <28882606.post@talk.nabble.com>


Hi Emile,


Emile Joubert-2 wrote:
> If you are comfortable with recompiling the ServiceModel 
> project in order to experiment with a possible approach, try replacing 
> line 171 in RabbitMQInputChannel with:
> 
> string queue = m_model.QueueDeclare(LocalAddress.Uri.AbsolutePath, true);
> 
> This will cause the service queue to have a fixed name and be durable. 
> The queue will then accumulate requests in the event of service B 
> temporarily disconnecting.

Thanks - I'll try this and report back.


Caveats apply: This code has not been through our formal QA process. It 
> is meant for experimentation only and may break other things.

Understood.

Regards,
Jon
-- 
View this message in context: http://old.nabble.com/WCF-and-queue-creation-tp28842204p28882606.html
Sent from the RabbitMQ mailing list archive at Nabble.com.


From jasonjwwilliams at gmail.com  Mon Jun 14 19:51:22 2010
From: jasonjwwilliams at gmail.com (Jason J. W. Williams)
Date: Mon, 14 Jun 2010 12:51:22 -0600
Subject: [rabbitmq-discuss] Claim on new ocamlmq broker...
Message-ID: <AANLkTilCT0pduKkyNXjIbBa_B5B0leh36_ukF0vAFAwy@mail.gmail.com>

This new OCAML STOMP broker makes this claim about Rabbit on it's page:

"RabbitMQ did not guarantee that persistent messages had been saved to
disk before sending the message receipt, which could lead to data
loss"

http://eigenclass.org/R2/writings/ocamlmq-release

Anyone else seen this behavior...I surely haven't. Messages disappear
in a cluster due to the way queues are handled...but I've never seen
this in a single instance.

-J

From alexis at rabbitmq.com  Mon Jun 14 19:56:41 2010
From: alexis at rabbitmq.com (Alexis Richardson)
Date: Mon, 14 Jun 2010 19:56:41 +0100
Subject: [rabbitmq-discuss] Claim on new ocamlmq broker...
In-Reply-To: <AANLkTilCT0pduKkyNXjIbBa_B5B0leh36_ukF0vAFAwy@mail.gmail.com>
References: <AANLkTilCT0pduKkyNXjIbBa_B5B0leh36_ukF0vAFAwy@mail.gmail.com>
Message-ID: <AANLkTinpHKx49ubtLpNcGWP5hAuPy0ypRmqVq3XUhBu9@mail.gmail.com>

Yes, it's bs.


On Mon, Jun 14, 2010 at 7:51 PM, Jason J. W. Williams
<jasonjwwilliams at gmail.com> wrote:
> This new OCAML STOMP broker makes this claim about Rabbit on it's page:
>
> "RabbitMQ did not guarantee that persistent messages had been saved to
> disk before sending the message receipt, which could lead to data
> loss"
>
> http://eigenclass.org/R2/writings/ocamlmq-release
>
> Anyone else seen this behavior...I surely haven't. Messages disappear
> in a cluster due to the way queues are handled...but I've never seen
> this in a single instance.
>
> -J
> _______________________________________________
> rabbitmq-discuss mailing list
> rabbitmq-discuss at lists.rabbitmq.com
> http://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss
>

From mfp at acm.org  Tue Jun 15 00:01:38 2010
From: mfp at acm.org (mfp)
Date: Mon, 14 Jun 2010 16:01:38 -0700 (PDT)
Subject: [rabbitmq-discuss] Claim on new ocamlmq broker...
Message-ID: <28885584.post@talk.nabble.com>



Alexis Richardson-5 wrote:
> 
> 
> On Mon, Jun 14, 2010 at 7:51 PM, Jason J. W. Williams
> <jasonjwwilliams at gmail.com> wrote:
>> This new OCAML STOMP broker makes this claim about Rabbit on it's page:
>>
>> "RabbitMQ did not guarantee that persistent messages had been saved to
>> disk before sending the message receipt, which could lead to data
>> loss"
>>
>> http://eigenclass.org/R2/writings/ocamlmq-release
> 
>> Anyone else seen this behavior...I surely haven't. Messages disappear
>> in a cluster due to the way queues are handled...but I've never seen
>> this in a single instance.
> 
> Yes, it's bs.
> 
> 

Does that mean that these comments by Matthew Sackman (who AFAIK works for
LShift and is a RabbitMQ developer) no longer apply?

http://old.nabble.com/persistent-messages-can't-survive-restart-with-new-persister-b6324e288cfd-(bug21673)-td26744000.html



> When you publish a message with delivery mode 2 you are *not* _guaranteed_
> that it hits disk. Publishing is an async operation and you get no
> confirmation that it goes to disk. The new persister does very aggressive
> caching in order to avoid doing lots of tiny and expensive writes. As
> such,
> there will frequently be times where if you restart the broker, you will
> lose
> several (maybe hundreds) of messages. 
> 

Note that I'm referring to what happens in case of a hard RabbitMQ/system
crash. The behavior described by Matthew Sackman is consistent with what I
observed in the tests I did before writing ocamlmq: RabbitMQ accepting
persistent messages at fairly high rates, with quickly growing memory usage
and
no disk activity.

--

Mauricio Fernandez

-- 
View this message in context: http://old.nabble.com/Claim-on-new-ocamlmq-broker...-tp28883306p28885584.html
Sent from the RabbitMQ mailing list archive at Nabble.com.


From matthew at rabbitmq.com  Tue Jun 15 00:18:49 2010
From: matthew at rabbitmq.com (Matthew Sackman)
Date: Tue, 15 Jun 2010 00:18:49 +0100
Subject: [rabbitmq-discuss] Claim on new ocamlmq broker...
In-Reply-To: <28885584.post@talk.nabble.com>
References: <28885584.post@talk.nabble.com>
Message-ID: <20100614231848.GB13068@wellquite.org>

On Mon, Jun 14, 2010 at 04:01:38PM -0700, mfp wrote:
> >> "RabbitMQ did not guarantee that persistent messages had been saved to
> >> disk before sending the message receipt, which could lead to data
> >> loss"
> 
> Does that mean that these comments by Matthew Sackman (who AFAIK works for
> LShift and is a RabbitMQ developer) no longer apply?

After the buyout of RabbitMQ, by SpringSource/VMware, I am now employed
by VMware, and continue to work full time on RabbitMQ.

> > When you publish a message with delivery mode 2 you are *not* _guaranteed_
> > that it hits disk. Publishing is an async operation and you get no
> > confirmation that it goes to disk. The new persister does very aggressive
> > caching in order to avoid doing lots of tiny and expensive writes. As
> > such,
> > there will frequently be times where if you restart the broker, you will
> > lose
> > several (maybe hundreds) of messages. 
> 
> Note that I'm referring to what happens in case of a hard RabbitMQ/system
> crash. The behavior described by Matthew Sackman is consistent with what I
> observed in the tests I did before writing ocamlmq: RabbitMQ accepting
> persistent messages at fairly high rates, with quickly growing memory usage
> and no disk activity.

The behaviour you have described is an intentional design of AMQP. Yes,
you could decide you want to write every message to disk and fsync it,
but if you do that then you'll have utterly atrocious performance.
Anything less that this leaves open the possibility of data loss in the
event of a hard system crash. How much data can be lost is, in the case
of AMQP, left to the client to decide: they can vary the size of the
transactions as they wish - if they can tolerate at most one message
being lost, then they must tx.commit after every publish. This will
likely result in an fsync per message, and performance will be very
poor, but the fact is that it's the client who is able to make decisions
as to the amount of data that can be lost.

Without transactions, publishing is an async activity, and whilst you
can indicate that the message should be written to disk if it ends up in
a durable queue, this is merely guidance: we use quite big buffers in
some carefully chosen places (in the new persister branch) because of
the liklihood that the message will have been delivered to a consumer
and acknowledged quite quickly. As a result, by writing lazily rather
than eagerly, we eliminate 3 disk writes (msg published, msg delivered,
msg acknowledged).

I have no desire to pass comment on ocamlmq. RabbitMQ tries to solve a
very broad category of messaging patterns and requirements. By no means
is it perfect - for some it is too slow, whilst for others it does not
offer enough guarantees. But AMQP does have the advantage of giving a
great amount of flexibility to the user, which is why we believe
RabbitMQ is a sound, general purpose solution for a very broad class of
messaging needs. Careful use of the client libraries and the features
made available by AMQP is frequently sufficient to satisfy most needs.

Matthew

From mfp at acm.org  Tue Jun 15 00:37:03 2010
From: mfp at acm.org (mfp)
Date: Mon, 14 Jun 2010 16:37:03 -0700 (PDT)
Subject: [rabbitmq-discuss] Claim on new ocamlmq broker...
In-Reply-To: <20100614231848.GB13068@wellquite.org>
References: <AANLkTilCT0pduKkyNXjIbBa_B5B0leh36_ukF0vAFAwy@mail.gmail.com>
	<AANLkTinpHKx49ubtLpNcGWP5hAuPy0ypRmqVq3XUhBu9@mail.gmail.com>
	<28885584.post@talk.nabble.com>
	<20100614231848.GB13068@wellquite.org>
Message-ID: <28885806.post@talk.nabble.com>



Matthew Sackman-3 wrote:
> 
> On Mon, Jun 14, 2010 at 04:01:38PM -0700, mfp wrote:
>> >> "RabbitMQ did not guarantee that persistent messages had been saved to
>> >> disk before sending the message receipt, which could lead to data
>> >> loss"
>> 
>> Does that mean that these comments by Matthew Sackman (who AFAIK works
>> for
>> LShift and is a RabbitMQ developer) no longer apply?
> 
> After the buyout of RabbitMQ, by SpringSource/VMware, I am now employed
> by VMware, and continue to work full time on RabbitMQ.
> 

I just mentioned your affiliation because it is the reason why I attached
credibility to your original message --- it was not an uninformed claim by a
random poster :-)



>> > When you publish a message with delivery mode 2 you are *not*
>> _guaranteed_
>> > that it hits disk. Publishing is an async operation and you get no
>> > confirmation that it goes to disk. The new persister does very
>> aggressive
>> > caching in order to avoid doing lots of tiny and expensive writes. As
>> > such, there will frequently be times where if you restart the broker,
>> you
>> > will lose several (maybe hundreds) of messages. 
>> 
>> Note that I'm referring to what happens in case of a hard RabbitMQ/system
>> crash. The behavior described by Matthew Sackman is consistent with what
>> I
>> observed in the tests I did before writing ocamlmq: RabbitMQ accepting
>> persistent messages at fairly high rates, with quickly growing memory
>> usage
>> and no disk activity.
> 
> The behaviour you have described is an intentional design of AMQP. Yes,
> you could decide you want to write every message to disk and fsync it,
> but if you do that then you'll have utterly atrocious performance.
> Anything less that this leaves open the possibility of data loss in the
> event of a hard system crash. How much data can be lost is, in the case
> of AMQP, left to the client to decide: they can vary the size of the
> transactions as they wish - if they can tolerate at most one message
> being lost, then they must tx.commit after every publish. This will
> likely result in an fsync per message, and performance will be very
> poor, but the fact is that it's the client who is able to make decisions
> as to the amount of data that can be lost.
> 
> Without transactions, publishing is an async activity, and whilst you
> can indicate that the message should be written to disk if it ends up in
> a durable queue, this is merely guidance
> [...]
> by writing lazily rather than eagerly, we eliminate 3 disk writes (msg
> published, msg delivered, msg acknowledged).
> 
> 

This makes perfect sense.



> I have no desire to pass comment on ocamlmq. RabbitMQ tries to solve a
> very broad category of messaging patterns and requirements. By no means
> is it perfect - for some it is too slow, whilst for others it does not
> offer enough guarantees. But AMQP does have the advantage of giving a
> great amount of flexibility to the user, which is why we believe
> RabbitMQ is a sound, general purpose solution for a very broad class of
> messaging needs. Careful use of the client libraries and the features
> made available by AMQP is frequently sufficient to satisfy most needs.
> 

I do not have anything to object to this either; we are in full agreement.
ocamlmq is just a simple task queue / IPC system I wrote to satisfy my own
requirements (which I was unable to do with RabbitMQ + its STOMP adapter)
and is by no means a general purpose messaging system like RabbitMQ.

Regards,
--
Mauricio Fernandez

-- 
View this message in context: http://old.nabble.com/Claim-on-new-ocamlmq-broker...-tp28883306p28885806.html
Sent from the RabbitMQ mailing list archive at Nabble.com.


From therevoltingx at gmail.com  Tue Jun 15 01:36:59 2010
From: therevoltingx at gmail.com (Miguel Morales)
Date: Mon, 14 Jun 2010 17:36:59 -0700
Subject: [rabbitmq-discuss] Java Client + Android
Message-ID: <AANLkTil0z7LgJAajEaU5d7gMiwyxX_ywHj4HZQbX3pjm@mail.gmail.com>

Hi all,

For the past few months I've been developing a game using Android and
the rabbitmq java client with fair results.
Setting it up was fairly painless, however, I've run into one issue
that's making one of the key parts of my game suffer.
In Android, every time the garbage collector runs, the CPU is busy for
a few milliseconds, ~200ms.
This slows the frame rate and causes the game to stutter for a bit.

The problem is in consuming messages, I have a thread that simply
reads from a queue as fast as it can delivers the body bytes to the
game client.
However, in the library there are a bunch of small allocations that
happen which causes the GC to run at least once every 10 seconds,
using both a consumer and a basicGet.

I've tried to look at the code and remove allocations, and have got
the GC runs down to about 1 every 40 seconds.  Still, that GC runs and
constant allocations
are hindering my ability to render some decent maps on the older
Android models (I use a G1)

I also tried briefly to get the rabbitmq-c client working, and I was
successful.
However, I hit a roadblock when trying to send the body bytes back to
the JVM using JNI.
I keep running out of memory or crashing using a jbyteArray buffer.

My C is pretty rusty so I was hoping someone had some suggestions
regarding that.
Ideally, I'd just be able to get rid of the allocations while
consuming messages, any help is appreciated!

I've created a test application for android to test out the different
consuming implementations in github:
http://github.com/therevoltingx/rabbitmq_android_test

You can see how fiddling around with the internal java client code I
was able to get rid of some allocations here (simply by caching
Basic.Get):
http://github.com/therevoltingx/rabbitmq_android_test/blob/master/src/com/diastrofunk/rabbitmqtest/JavaTests.java#L74

You can see the C/JNI version here:
http://github.com/therevoltingx/rabbitmq_android_test/blob/master/jni/ndktests.c

Any help in this would be appreciated!

Thanks,
Miguel

-- 
http://diastrofunk.com, http://developingthedream.blogspot.com/,
http://www.youtube.com/user/revoltingx, ~Isaiah 55:8-9

From johndapps at gmail.com  Tue Jun 15 08:31:26 2010
From: johndapps at gmail.com (John Apps)
Date: Tue, 15 Jun 2010 09:31:26 +0200
Subject: [rabbitmq-discuss] Java Client + Android
In-Reply-To: <AANLkTil0z7LgJAajEaU5d7gMiwyxX_ywHj4HZQbX3pjm@mail.gmail.com>
References: <AANLkTil0z7LgJAajEaU5d7gMiwyxX_ywHj4HZQbX3pjm@mail.gmail.com>
Message-ID: <AANLkTilrVw9Mgl5CG1CoP658-s6BJpJxD9-viLBU3Lxq@mail.gmail.com>

This is probably way off the mark, and something you have sure to have
tried: changing the GC parameters? Or is this not possible on the Android? I
assume this is Java 6?
How is Java started on Android or, perhaps better question, can you
influence the GC parameters?

On Tue, Jun 15, 2010 at 02:36, Miguel Morales <therevoltingx at gmail.com>wrote:

> Hi all,
>
> For the past few months I've been developing a game using Android and
> the rabbitmq java client with fair results.
> Setting it up was fairly painless, however, I've run into one issue
> that's making one of the key parts of my game suffer.
> In Android, every time the garbage collector runs, the CPU is busy for
> a few milliseconds, ~200ms.
> This slows the frame rate and causes the game to stutter for a bit.
>
> The problem is in consuming messages, I have a thread that simply
> reads from a queue as fast as it can delivers the body bytes to the
> game client.
> However, in the library there are a bunch of small allocations that
> happen which causes the GC to run at least once every 10 seconds,
> using both a consumer and a basicGet.
>
> I've tried to look at the code and remove allocations, and have got
> the GC runs down to about 1 every 40 seconds.  Still, that GC runs and
> constant allocations
> are hindering my ability to render some decent maps on the older
> Android models (I use a G1)
>
> I also tried briefly to get the rabbitmq-c client working, and I was
> successful.
> However, I hit a roadblock when trying to send the body bytes back to
> the JVM using JNI.
> I keep running out of memory or crashing using a jbyteArray buffer.
>
> My C is pretty rusty so I was hoping someone had some suggestions
> regarding that.
> Ideally, I'd just be able to get rid of the allocations while
> consuming messages, any help is appreciated!
>
> I've created a test application for android to test out the different
> consuming implementations in github:
> http://github.com/therevoltingx/rabbitmq_android_test
>
> You can see how fiddling around with the internal java client code I
> was able to get rid of some allocations here (simply by caching
> Basic.Get):
>
> http://github.com/therevoltingx/rabbitmq_android_test/blob/master/src/com/diastrofunk/rabbitmqtest/JavaTests.java#L74
>
> You can see the C/JNI version here:
>
> http://github.com/therevoltingx/rabbitmq_android_test/blob/master/jni/ndktests.c
>
> Any help in this would be appreciated!
>
> Thanks,
> Miguel
>
> --
> http://diastrofunk.com, http://developingthedream.blogspot.com/,
> http://www.youtube.com/user/revoltingx, ~Isaiah 55:8-9
> _______________________________________________
> rabbitmq-discuss mailing list
> rabbitmq-discuss at lists.rabbitmq.com
> http://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss
>



-- 
---
John Apps
(49) 171 869 1813
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20100615/69259a37/attachment.htm>

From therevoltingx at gmail.com  Tue Jun 15 09:57:07 2010
From: therevoltingx at gmail.com (Miguel Morales)
Date: Tue, 15 Jun 2010 01:57:07 -0700
Subject: [rabbitmq-discuss] Java Client + Android
In-Reply-To: <AANLkTilrVw9Mgl5CG1CoP658-s6BJpJxD9-viLBU3Lxq@mail.gmail.com>
References: <AANLkTil0z7LgJAajEaU5d7gMiwyxX_ywHj4HZQbX3pjm@mail.gmail.com>
	<AANLkTilrVw9Mgl5CG1CoP658-s6BJpJxD9-viLBU3Lxq@mail.gmail.com>
Message-ID: <AANLkTimd1kZFwnpwvq-8qnE6cNBNiWIlDtgjgLfDAibd@mail.gmail.com>

Well, the only method that the Android docs provide is to call
System.gc() which make the JVM schedule a GC run.
This wouldn't help in the inner loop, but it's what I do right after I
connect and setup the queues.

I'm not sure how I can influence the GC in a stock android device beyond that.
>From googling on how to influence the GC in java, some people give
some tips such as setting the objects to null, and some other java
trickery that I'll have to try.

However, from the android google blog, it seems the dalvik (which
android uses) JVM doesn't support such optimizations:
http://android-developers.blogspot.com/2009/02/track-memory-allocations.html

Also, the JIT is coming to Android soon, I'm not entirely familiar
with how it works, but I'll keep looking.    I'm not sure if this will
work on the older devices though.
http://developer.android.com/reference/java/lang/Compiler.html

Other than that, I haven't tried any other compiler trickery, mainly
because this is my first app using java.
Again, any java related hints would be appreciated.

Thanks,
Miguel


On Tue, Jun 15, 2010 at 12:31 AM, John Apps <johndapps at gmail.com> wrote:
> This is probably way off the mark, and something you have sure to have
> tried: changing the GC parameters? Or is this not possible on the Android? I
> assume this is Java 6?
> How is Java started on Android or, perhaps better question, can you
> influence the GC parameters?
>
> On Tue, Jun 15, 2010 at 02:36, Miguel Morales <therevoltingx at gmail.com>
> wrote:
>>
>> Hi all,
>>
>> For the past few months I've been developing a game using Android and
>> the rabbitmq java client with fair results.
>> Setting it up was fairly painless, however, I've run into one issue
>> that's making one of the key parts of my game suffer.
>> In Android, every time the garbage collector runs, the CPU is busy for
>> a few milliseconds, ~200ms.
>> This slows the frame rate and causes the game to stutter for a bit.
>>
>> The problem is in consuming messages, I have a thread that simply
>> reads from a queue as fast as it can delivers the body bytes to the
>> game client.
>> However, in the library there are a bunch of small allocations that
>> happen which causes the GC to run at least once every 10 seconds,
>> using both a consumer and a basicGet.
>>
>> I've tried to look at the code and remove allocations, and have got
>> the GC runs down to about 1 every 40 seconds. ?Still, that GC runs and
>> constant allocations
>> are hindering my ability to render some decent maps on the older
>> Android models (I use a G1)
>>
>> I also tried briefly to get the rabbitmq-c client working, and I was
>> successful.
>> However, I hit a roadblock when trying to send the body bytes back to
>> the JVM using JNI.
>> I keep running out of memory or crashing using a jbyteArray buffer.
>>
>> My C is pretty rusty so I was hoping someone had some suggestions
>> regarding that.
>> Ideally, I'd just be able to get rid of the allocations while
>> consuming messages, any help is appreciated!
>>
>> I've created a test application for android to test out the different
>> consuming implementations in github:
>> http://github.com/therevoltingx/rabbitmq_android_test
>>
>> You can see how fiddling around with the internal java client code I
>> was able to get rid of some allocations here (simply by caching
>> Basic.Get):
>>
>> http://github.com/therevoltingx/rabbitmq_android_test/blob/master/src/com/diastrofunk/rabbitmqtest/JavaTests.java#L74
>>
>> You can see the C/JNI version here:
>>
>> http://github.com/therevoltingx/rabbitmq_android_test/blob/master/jni/ndktests.c
>>
>> Any help in this would be appreciated!
>>
>> Thanks,
>> Miguel
>>
>> --
>> http://diastrofunk.com, http://developingthedream.blogspot.com/,
>> http://www.youtube.com/user/revoltingx, ~Isaiah 55:8-9
>> _______________________________________________
>> rabbitmq-discuss mailing list
>> rabbitmq-discuss at lists.rabbitmq.com
>> http://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss
>
>
>
> --
> ---
> John Apps
> (49) 171 869 1813
>



-- 
http://diastrofunk.com, http://developingthedream.blogspot.com/,
http://www.youtube.com/user/revoltingx, ~Isaiah 55:8-9

From matthias at rabbitmq.com  Tue Jun 15 10:14:00 2010
From: matthias at rabbitmq.com (Matthias Radestock)
Date: Tue, 15 Jun 2010 10:14:00 +0100
Subject: [rabbitmq-discuss] how does the rabbitmq transport cope with
 WAN links?
In-Reply-To: <E6AC2562-CDBB-4503-B9B5-9BB85D0B4953@adconion.com>
References: <48B24296-C97F-498A-B6B2-BA573BB1E1C4@adconion.com>	<20100601155240.GE9109@rabbitmq.com>
	<E6AC2562-CDBB-4503-B9B5-9BB85D0B4953@adconion.com>
Message-ID: <4C174458.8060109@rabbitmq.com>

Nikos,

On 01/06/10 20:05, Nikos Michalakis wrote:
> It seems to me that the only difference between the cluster and the
> shovel is that you have one WAN connection vs multiple ones. The
> failure detection and reconnect mechanisms seem to be the same.

Clustering and the shovel actually have quite different failure 
characteristics. With Erlang clustering, when a node is unreachable the 
queues on that node are considered temporarily unavailable and rabbit 
won't attempt to route messages to them. By contrast, when using the 
shovel the messages stay buffered at the sender and will eventually be 
routed to the recipient broker when the connection is re-established.

Regards,

Matthias.

From davorin.rusevljan at gmail.com  Tue Jun 15 10:19:24 2010
From: davorin.rusevljan at gmail.com (Davorin Rusevljan)
Date: Tue, 15 Jun 2010 11:19:24 +0200
Subject: [rabbitmq-discuss] Java Client + Android
In-Reply-To: <AANLkTimd1kZFwnpwvq-8qnE6cNBNiWIlDtgjgLfDAibd@mail.gmail.com>
References: <AANLkTil0z7LgJAajEaU5d7gMiwyxX_ywHj4HZQbX3pjm@mail.gmail.com>
	<AANLkTilrVw9Mgl5CG1CoP658-s6BJpJxD9-viLBU3Lxq@mail.gmail.com>
	<AANLkTimd1kZFwnpwvq-8qnE6cNBNiWIlDtgjgLfDAibd@mail.gmail.com>
Message-ID: <AANLkTik-FEOJQ5WBrQcxUCo0b6Ixgkpl49AQpO_DI9RV@mail.gmail.com>

On Tue, Jun 15, 2010 at 10:57 AM, Miguel Morales <therevoltingx at gmail.com>wrote:

> Well, the only method that the Android docs provide is to call
> System.gc() which make the JVM schedule a GC run.
> This wouldn't help in the inner loop, but it's what I do right after I
> connect and setup the queues.
>
>
Well If I may chime in with one data point which might or might not be
relevant for this problem. Android does not have JVM, and it executes Java
programs on different kind of engine called Dalvik which does not run JVM
instructions but its own instruction set. So all tricks that work on JVM
will not necessary work on Dalvik.

rush
http://www.cloud208.com/
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20100615/512f86f0/attachment.htm>

From matthias at rabbitmq.com  Tue Jun 15 10:38:13 2010
From: matthias at rabbitmq.com (Matthias Radestock)
Date: Tue, 15 Jun 2010 10:38:13 +0100
Subject: [rabbitmq-discuss] detecting publish failure across restart
In-Reply-To: <4C0557A5.6050709@wavemarket.com>
References: <28712608.post@talk.nabble.com>	<yrv4cpr0cyznu.fsf@dwragg.eng.vmware.com>	<AANLkTilt2b_eawaZM5j3A7bP7mu7P0dKYtdXf2CTXIDO@mail.gmail.com>	<yrv4ctypnq0el.fsf@dwragg.eng.vmware.com>	<AANLkTinJ-qg3BDFHdLFEbaI1Qafb66x1Jkm4ONF6K0Qz@mail.gmail.com>
	<4C0557A5.6050709@wavemarket.com>
Message-ID: <4C174A05.9040900@rabbitmq.com>

Jesse,

On 01/06/10 19:55, Jesse Myers wrote:
> Can someone elaborate on the expected bottlenecks when using
> transactions? From what I've mocked up so far, it looks like the
> majority of the overhead is associated with tx.commit (no surprise
> there) and that I can get much better performance by batching
> messages within a single transaction.

Yes, that is correct. The main cause of that is the need to do an fsync,
which is unavoidable. Also, in the current ("old") persister, commits
happen at most every 2ms, to allow for coalescing of multiple concurrent
transactions into a single fsync. The new persister is somewhat more
clever here.

> I also looked at running multiple tx.commit operations concurrently
> in different channels in different threads, but there doesn't
> actually appear to be any performance benefit to doing so. Am I right
> to conclude that only a single transaction is allowed at a time per
> connection?

In the current persister transactions involving the *same queue* are 
completely serialised. That changes in the new persister.

> If so, this suggests queuing up messages client side and having a
> single worker thread submit messages in batches. Does this sound
> reasonable?

You don't need to submit the messages/acks themselves in batches, and in 
fact doing so is detrimental to performance. Just send them straight 
away but avoid performing a *commit* after every action.


Regards,

Matthias.

From matthew at rabbitmq.com  Tue Jun 15 11:07:17 2010
From: matthew at rabbitmq.com (Matthew Sackman)
Date: Tue, 15 Jun 2010 11:07:17 +0100
Subject: [rabbitmq-discuss] Claim on new ocamlmq broker...
In-Reply-To: <28885806.post@talk.nabble.com>
References: <AANLkTilCT0pduKkyNXjIbBa_B5B0leh36_ukF0vAFAwy@mail.gmail.com>
	<AANLkTinpHKx49ubtLpNcGWP5hAuPy0ypRmqVq3XUhBu9@mail.gmail.com>
	<28885584.post@talk.nabble.com>
	<20100614231848.GB13068@wellquite.org>
	<28885806.post@talk.nabble.com>
Message-ID: <20100615100717.GE16440@rabbitmq.com>

On Mon, Jun 14, 2010 at 04:37:03PM -0700, mfp wrote:
> I do not have anything to object to this either; we are in full agreement.
> ocamlmq is just a simple task queue / IPC system I wrote to satisfy my own
> requirements (which I was unable to do with RabbitMQ + its STOMP adapter)
> and is by no means a general purpose messaging system like RabbitMQ.

Sure, that's understandable. I have almost no knowledge myself of STOMP
- our STOMP adapter was written by TonyG and is largely unloved. If
STOMP does give publisher acks, then it's possible that the adapter is
not using AMQP transactions, and thus the publisher ack does not
indicate any sort of reliability concerns. That said, I was also under
the impression that STOMP quite deliberately has no semantics
whatsoever - if this is the case then it would seem to be completely
legitimate to issue the publisher ACK without using a transaction.

Matthew

From simon at rabbitmq.com  Tue Jun 15 12:47:03 2010
From: simon at rabbitmq.com (Simon MacMullen)
Date: Tue, 15 Jun 2010 12:47:03 +0100
Subject: [rabbitmq-discuss] Controlling rate of callbacks
In-Reply-To: <4C0E0392.7080005@zopyx.com>
References: <4C0E0392.7080005@zopyx.com>
Message-ID: <4C176837.3030504@rabbitmq.com>

Hi Andreas.

You could use queue polling; if you're only going to check every 15 min 
then the slight loss in efficiency should not be a big deal. Overall I'd 
say use basic.consume if you want to consume at a fixed rate but fairly 
fast-ish, and basic.get if you want to consume very slowly or at fixed 
times.

If you want to do this with basic.consume:

* Set basic.qos with a prefetch_count of 1 (so the server will only push 
one unacked message to you at a time).

* basic.consume with no_acks turned off.

* Each time you consume, set up a timer to send the ack after 15 min or 
whenever - don't just sleep in the consume callback as this will block 
the connection.

Unfortunately I'm not very familiar with carrot so I can't give you 
direct samples.

See the recent thread "chan.flow and vm_memory_high_watermark", 
particularly here:

http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/2010-June/007528.html

and here:

http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/2010-June/007537.html

although the GC-related stuff shouldn't apply to you.

Cheers, Simon

On 08/06/10 09:47, Andreas Jung wrote:
> -----BEGIN PGP SIGNED MESSAGE-----
> Hash: SHA1
>
> We are using RabbitMQ + consumers implemented in Python on top of
> carrot and called through RabbitMQ as a callback.
> Is there some configuration option on a per-queue basis e.g. for
> controlling how or when consumers are called? For examples some queues
> must not be processed immediately but could be processed e.g. over night
> or every 15 minutes...
> Or is the recommended solution to implement arbitary logic on the
> application level and switching to queue polling?
>
> Andreas
>
>
> -----BEGIN PGP SIGNATURE-----
> Version: GnuPG v1.4.10 (Darwin)
> Comment: Using GnuPG with Mozilla - http://enigmail.mozdev.org/
>
> iEYEARECAAYFAkwOA5IACgkQCJIWIbr9KYxNoACgmXT9WRYzmwdIL1jPbxOTB5E8
> oasAoLCTYBG+GVDFFI+Z8G5Y/krIKHwV
> =4784
> -----END PGP SIGNATURE-----
>
>
>
> _______________________________________________
> rabbitmq-discuss mailing list
> rabbitmq-discuss at lists.rabbitmq.com
> http://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss


From simon at rabbitmq.com  Tue Jun 15 13:45:13 2010
From: simon at rabbitmq.com (Simon MacMullen)
Date: Tue, 15 Jun 2010 13:45:13 +0100
Subject: [rabbitmq-discuss] RabbitMQ - Not able to get sets of messages
 in the same order
In-Reply-To: <AANLkTimdU7SRDQIl08drbXAF-fM0Y9daaJhCmKZ58Gbf@mail.gmail.com>
References: <AANLkTimgCmTvpHQWWSbK1u6oGs4TJX-N1o0qZ7_nMb4M@mail.gmail.com>	<AANLkTikaKqLa_gNamCL7gdYFRVFqqdPHkZJ5goPCDqED@mail.gmail.com>	<1FE1E824-89AB-48BA-B104-90252B5AE334@vmware.com>
	<AANLkTimdU7SRDQIl08drbXAF-fM0Y9daaJhCmKZ58Gbf@mail.gmail.com>
Message-ID: <4C1775D9.2080801@rabbitmq.com>

Hi Srijanani.

On 10/06/10 15:53, Srijanani Srinivasan wrote:
> Thanks for your response. What you said makes sense. When the messages
> that have not been acknowledged are put back to the queue, then
> the other messages added in the meantime should be the ones to be
> de-queued first right in the FIFO manner? But like you said, i guess
> thats not how it works.

There isn't a guarantee about ordering for redelivered messages in the 
spec (since in more complex cases it's impossible to guarantee anyway), 
and Rabbit tries to do the most efficient thing rather than be FIFO in 
cases where it can.

> The same problem occurs, when I get a set of messages and don't
> acknowledge them and close the channel (in the event of any exceptions).
> When we get the messages, they do not come in the correct order.

Exactly.

> I guess, if i want to get sets of messages instead of one at a time, I
> must try to use the same channel. Is that right?

You could do that if it's convenient for you. Alternatively, you could 
prevent messages from being redelivered by making sure the server only 
sends you as many as you will actually process (if you know how many 
that is).

Oleg suggests you set the prefetch count to 1 - this will ensure that 
the server only sends you one message until you ack it (which will block 
if you're trying to process 100 at once).

So if you're currently reading in 100 messages and then acking all of 
them you could set the prefetch count to 100. The server will then allow 
you 100 unacked messages. You'd need to make sure you cancel before 
acking, otherwise the server can send you more messages between acking 
and closing the channel.

So to summarise:

channel.open
basic.qos(prefetch_count = 100)
basic.consume
(consume 100 messages)
basic.cancel
(ack 100 messages)

I'd be interested to know why you need to process messages in batches 
though.

Cheers, Simon

>
> On Thu, Jun 10, 2010 at 9:38 AM, Oleg Zhurakousky
> <ozhurakousky at vmware.com <mailto:ozhurakousky at vmware.com>> wrote:
>
>     Not sure about C# API, and how you are building the next set of
>     messages, but here is what I belive is happening.
>
>     Channel prefetch messages. That is different then invoking a
>     consumer. THis means that you might have 1000 prefetched messages in
>     your channel, while you are still processing 21st message. Whatever
>     you un-acknowledge is put back into the queue once the channel is
>     closed. AMQO does not define an ordering of messages for re-queueing.
>     One way to leverage this scenario is to set prefetchCount to 1. This
>     way there will never me more then one prefetched messages in your
>     channel.
>
>     Oleg
>
>     On Jun 10, 2010, at 10:24 AM, Srijanani Srinivasan wrote:
>
>
>     Hi,
>
>     I am using Rabbit MQ in C#. This is my scenario
>     1.               A separate process publishes messages to the queue
>     2.               Client has to read set of N messages from queue
>     3.               Process the N messages
>     4.               Acknowledge the N messages
>     5.               Repeat steps 2 to 4 continuously to process all
>     sets of messages
>     Under the same channel, I receive the messages and then process them
>     and then acknowledge them. The server process keeps publishing
>     messages. The problem I am facing is, when I try to get next set of
>     messages, they do not come in the same order as it was published by
>     the publishing process. The messages come in a random order. Only
>     the first set of messages comes in the correct order.
>
>     Does any one what is going wrong here? Is creating a new channel to
>     access the next set of messages not right? Or is there a problem
>     caused because of acknowledging multiple messages? Please help me
>     understand why this does not work correctly.
>
>     Below is the sample code:
>     while (true)
>                 {
>                     using (IModel getChannel = MQConnection.CreateModel())
>                     {
>                         // Create a consumer
>                         QueueingBasicConsumer consumer =
>     CreateQueueConsumer(getChannel, exchangeName, queueName);
>                         int numberOfMessages = 100;
>                         // Next Recieve
>                         List<object> msgSet =
>     GetNextSetOfMessages(consumer, getChannel, exchangeName, queueName,
>     numberOfMessages,             out finalDeliverytag);
>                         // Do some processing
>                         //Acknowledge finished messages by passing in
>     the delivery tag.
>                         // calls the method BasicAck with multiple
>     param=true
>                         if (finalDeliverytag > 0)
>                             AckFinishedMessages(exchangeName, queueName,
>     finalDeliverytag, getChannel);
>                         if (finalDeliverytag == 0)
>                             break;
>                     }
>                 }
>
>     Thanks for your help in advance!
>     Srijanani
>
>     <ATT00001..txt>
>
>
>
>
> _______________________________________________
> rabbitmq-discuss mailing list
> rabbitmq-discuss at lists.rabbitmq.com
> http://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss


From w.richert at gmx.net  Tue Jun 15 14:52:04 2010
From: w.richert at gmx.net (Willi Richert)
Date: Tue, 15 Jun 2010 15:52:04 +0200
Subject: [rabbitmq-discuss] auto-trigger for binding removal
Message-ID: <4C178584.7040309@gmx.net>

Hi,

is there some standard way to handle the automatic triggering of some 
custom messages in the case that some binding disappeared?


Regards,
wr

From Jonathan.Graham at uk.mizuho-sc.com  Tue Jun 15 14:52:58 2010
From: Jonathan.Graham at uk.mizuho-sc.com (Jon Graham)
Date: Tue, 15 Jun 2010 06:52:58 -0700 (PDT)
Subject: [rabbitmq-discuss] WCF and queue creation
In-Reply-To: <4C1665A8.8020806@rabbitmq.com>
References: <28842204.post@talk.nabble.com> <4C124AA6.4080105@rabbitmq.com>
	<1753EE61AD475A47A4DEBDD983A7BBCF0B344F91@GBR1-LDN01.uk.mizuho-sc.com>
	<4C1665A8.8020806@rabbitmq.com>
Message-ID: <28891609.post@talk.nabble.com>


Emile,


try replacing line 171 in RabbitMQInputChannel with:
> 
> string queue = m_model.QueueDeclare(LocalAddress.Uri.AbsolutePath, true);
> 
> This will cause the service queue to have a fixed name and be durable. 
> The queue will then accumulate requests in the event of service B 
> temporarily disconnecting.

This did the trick - thanks!

A few things have occurred to me that may help increase the usefulness of
the WCF binding, but I'll start another thread about this when I have a few
minutes.

Regards,
Jon
-- 
View this message in context: http://old.nabble.com/WCF-and-queue-creation-tp28842204p28891609.html
Sent from the RabbitMQ mailing list archive at Nabble.com.


From srijanani.s at gmail.com  Tue Jun 15 17:45:03 2010
From: srijanani.s at gmail.com (Srijanani Srinivasan)
Date: Tue, 15 Jun 2010 11:45:03 -0500
Subject: [rabbitmq-discuss] RabbitMQ - Not able to get sets of messages
	in the same order
In-Reply-To: <4C1775D9.2080801@rabbitmq.com>
References: <AANLkTimgCmTvpHQWWSbK1u6oGs4TJX-N1o0qZ7_nMb4M@mail.gmail.com>
	<AANLkTikaKqLa_gNamCL7gdYFRVFqqdPHkZJ5goPCDqED@mail.gmail.com>
	<1FE1E824-89AB-48BA-B104-90252B5AE334@vmware.com>
	<AANLkTimdU7SRDQIl08drbXAF-fM0Y9daaJhCmKZ58Gbf@mail.gmail.com>
	<4C1775D9.2080801@rabbitmq.com>
Message-ID: <AANLkTiljx4EM28edhAhLUqrumcVZppyr0jE2FITKeNEF@mail.gmail.com>

Thanks for your response Simon.

I was not using Basic.QOS method to set the prefetch count so far. After
your suggestion, I modified the code to follow the same order like you said
and I tested it. I see that the order is preserved, when a new
channel/consumer is created for accessing the next set of messages. But, if
we don't acknowledge a certain set of messages, like you said, the order is
not preserved as they will be getting re-delivered.

In my application, we have high volume of messages that are going to be
coming in through the queue. And we will have to do some calculation and
store data in database. We have realized earlier that saving the data one by
one is time consuming, so we will take one set of say 5000 messages and then
do the calculations and store it the database in one database call. So
basically, we do not want to process one by one to save database calls.
Another reason, is that there could be a lot of duplicate messages, so we
will pick 5000 and do the work only for the unique ones.

Is there any performance gain if we ACK a set of messages instead of ACKing
one by one, as we are reducing the number of responses sent from the client
side when we do bulk ACks?

On Tue, Jun 15, 2010 at 7:45 AM, Simon MacMullen <simon at rabbitmq.com> wrote:

> Hi Srijanani.
>
>
> On 10/06/10 15:53, Srijanani Srinivasan wrote:
>
>> Thanks for your response. What you said makes sense. When the messages
>> that have not been acknowledged are put back to the queue, then
>> the other messages added in the meantime should be the ones to be
>> de-queued first right in the FIFO manner? But like you said, i guess
>> thats not how it works.
>>
>
> There isn't a guarantee about ordering for redelivered messages in the spec
> (since in more complex cases it's impossible to guarantee anyway), and
> Rabbit tries to do the most efficient thing rather than be FIFO in cases
> where it can.
>
>
>  The same problem occurs, when I get a set of messages and don't
>> acknowledge them and close the channel (in the event of any exceptions).
>> When we get the messages, they do not come in the correct order.
>>
>
> Exactly.
>
>
>  I guess, if i want to get sets of messages instead of one at a time, I
>> must try to use the same channel. Is that right?
>>
>
> You could do that if it's convenient for you. Alternatively, you could
> prevent messages from being redelivered by making sure the server only sends
> you as many as you will actually process (if you know how many that is).
>
> Oleg suggests you set the prefetch count to 1 - this will ensure that the
> server only sends you one message until you ack it (which will block if
> you're trying to process 100 at once).
>
> So if you're currently reading in 100 messages and then acking all of them
> you could set the prefetch count to 100. The server will then allow you 100
> unacked messages. You'd need to make sure you cancel before acking,
> otherwise the server can send you more messages between acking and closing
> the channel.
>
> So to summarise:
>
> channel.open
> basic.qos(prefetch_count = 100)
> basic.consume
> (consume 100 messages)
> basic.cancel
> (ack 100 messages)
>
> I'd be interested to know why you need to process messages in batches
> though.
>
> Cheers, Simon
>
>
>> On Thu, Jun 10, 2010 at 9:38 AM, Oleg Zhurakousky
>> <ozhurakousky at vmware.com <mailto:ozhurakousky at vmware.com>> wrote:
>>
>>    Not sure about C# API, and how you are building the next set of
>>    messages, but here is what I belive is happening.
>>
>>    Channel prefetch messages. That is different then invoking a
>>    consumer. THis means that you might have 1000 prefetched messages in
>>    your channel, while you are still processing 21st message. Whatever
>>    you un-acknowledge is put back into the queue once the channel is
>>    closed. AMQO does not define an ordering of messages for re-queueing.
>>    One way to leverage this scenario is to set prefetchCount to 1. This
>>    way there will never me more then one prefetched messages in your
>>    channel.
>>
>>    Oleg
>>
>>    On Jun 10, 2010, at 10:24 AM, Srijanani Srinivasan wrote:
>>
>>
>>    Hi,
>>
>>    I am using Rabbit MQ in C#. This is my scenario
>>    1.               A separate process publishes messages to the queue
>>    2.               Client has to read set of N messages from queue
>>    3.               Process the N messages
>>    4.               Acknowledge the N messages
>>    5.               Repeat steps 2 to 4 continuously to process all
>>    sets of messages
>>    Under the same channel, I receive the messages and then process them
>>    and then acknowledge them. The server process keeps publishing
>>    messages. The problem I am facing is, when I try to get next set of
>>    messages, they do not come in the same order as it was published by
>>    the publishing process. The messages come in a random order. Only
>>    the first set of messages comes in the correct order.
>>
>>    Does any one what is going wrong here? Is creating a new channel to
>>    access the next set of messages not right? Or is there a problem
>>    caused because of acknowledging multiple messages? Please help me
>>    understand why this does not work correctly.
>>
>>    Below is the sample code:
>>    while (true)
>>                {
>>                    using (IModel getChannel = MQConnection.CreateModel())
>>                    {
>>                        // Create a consumer
>>                        QueueingBasicConsumer consumer =
>>    CreateQueueConsumer(getChannel, exchangeName, queueName);
>>                        int numberOfMessages = 100;
>>                        // Next Recieve
>>                        List<object> msgSet =
>>    GetNextSetOfMessages(consumer, getChannel, exchangeName, queueName,
>>    numberOfMessages,             out finalDeliverytag);
>>                        // Do some processing
>>                        //Acknowledge finished messages by passing in
>>    the delivery tag.
>>                        // calls the method BasicAck with multiple
>>    param=true
>>                        if (finalDeliverytag > 0)
>>                            AckFinishedMessages(exchangeName, queueName,
>>    finalDeliverytag, getChannel);
>>                        if (finalDeliverytag == 0)
>>                            break;
>>                    }
>>                }
>>
>>    Thanks for your help in advance!
>>    Srijanani
>>
>>    <ATT00001..txt>
>>
>>
>>
>>
>> _______________________________________________
>> rabbitmq-discuss mailing list
>> rabbitmq-discuss at lists.rabbitmq.com
>> http://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss
>>
>
> _______________________________________________
> rabbitmq-discuss mailing list
> rabbitmq-discuss at lists.rabbitmq.com
> http://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20100615/c54fb4ab/attachment-0001.htm>

From tim.cole at canonical.com  Tue Jun 15 18:23:42 2010
From: tim.cole at canonical.com (Tim Cole)
Date: Tue, 15 Jun 2010 13:23:42 -0400
Subject: [rabbitmq-discuss] message availability after close without ack
Message-ID: <1276622622.10343.17.camel@bede>

My understanding had been that if a consumer is canceled (and its
channel closed) without having acked delivered messages, then those
messages become available to later consumers on the same queue.  That
doesn't actually appear to be happening, however.

I have a bit of code which is essentially doing:

 ==> basic.consume
 <== basic.deliver
 # transient application error happens
 ==> basic.cancel
 ==> channel.close

 ==> channel.open
 ==> basic.consume
 # no message delivered

I would expect to get a basic.deliver with the same message as before,
since the message wasn't acked the first time.  I'm not, though.  Is
there more to it than this?

[Note that I am not using no_ack, and that the queue in question is
durable and not exclusive or autodeleted]

Thanks,
Tim

-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 198 bytes
Desc: This is a digitally signed message part
URL: <http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20100615/d53d4615/attachment.pgp>

From simon at rabbitmq.com  Tue Jun 15 18:28:21 2010
From: simon at rabbitmq.com (Simon MacMullen)
Date: Tue, 15 Jun 2010 18:28:21 +0100
Subject: [rabbitmq-discuss] RabbitMQ - Not able to get sets of messages
 in the same order
In-Reply-To: <AANLkTiljx4EM28edhAhLUqrumcVZppyr0jE2FITKeNEF@mail.gmail.com>
References: <AANLkTimgCmTvpHQWWSbK1u6oGs4TJX-N1o0qZ7_nMb4M@mail.gmail.com>	<AANLkTikaKqLa_gNamCL7gdYFRVFqqdPHkZJ5goPCDqED@mail.gmail.com>	<1FE1E824-89AB-48BA-B104-90252B5AE334@vmware.com>	<AANLkTimdU7SRDQIl08drbXAF-fM0Y9daaJhCmKZ58Gbf@mail.gmail.com>	<4C1775D9.2080801@rabbitmq.com>
	<AANLkTiljx4EM28edhAhLUqrumcVZppyr0jE2FITKeNEF@mail.gmail.com>
Message-ID: <4C17B835.3070503@rabbitmq.com>

Hi Srijanani.

On 15/06/10 17:45, Srijanani Srinivasan wrote:
> Thanks for your response Simon.
>
> I was not using Basic.QOS method to set the prefetch count so far. After
> your suggestion, I modified the code to follow the same order like you
> said and I tested it. I see that the order is preserved, when a new
> channel/consumer is created for accessing the next set of messages. But,
> if we don't acknowledge a certain set of messages, like you said, the
> order is not preserved as they will be getting re-delivered.
>
> In my application, we have high volume of messages that are going to be
> coming in through the queue. And we will have to do some calculation and
> store data in database. We have realized earlier that saving the data
> one by one is time consuming, so we will take one set of say
> 5000 messages and then do the calculations and store it the database in
> one database call. So basically, we do not want to process one by one to
> save database calls. Another reason, is that there could be a lot of
> duplicate messages, so we will pick 5000 and do the work only for the
> unique ones.

Ah, this makes sense.

> Is there any performance gain if we ACK a set of messages instead of
> ACKing one by one, as we are reducing the number of responses sent from
> the client side when we do bulk ACks?

Yes, as long as you use the multiple flag on basic.ack. This allows you 
to acknowledge all messages up to and including the delivery tag you 
give, and only one ack message is sent over the wire.

Cheers, Simon

>
> On Tue, Jun 15, 2010 at 7:45 AM, Simon MacMullen <simon at rabbitmq.com
> <mailto:simon at rabbitmq.com>> wrote:
>
>     Hi Srijanani.
>
>
>     On 10/06/10 15:53, Srijanani Srinivasan wrote:
>
>         Thanks for your response. What you said makes sense. When the
>         messages
>         that have not been acknowledged are put back to the queue, then
>         the other messages added in the meantime should be the ones to be
>         de-queued first right in the FIFO manner? But like you said, i guess
>         thats not how it works.
>
>
>     There isn't a guarantee about ordering for redelivered messages in
>     the spec (since in more complex cases it's impossible to guarantee
>     anyway), and Rabbit tries to do the most efficient thing rather than
>     be FIFO in cases where it can.
>
>
>         The same problem occurs, when I get a set of messages and don't
>         acknowledge them and close the channel (in the event of any
>         exceptions).
>         When we get the messages, they do not come in the correct order.
>
>
>     Exactly.
>
>
>         I guess, if i want to get sets of messages instead of one at a
>         time, I
>         must try to use the same channel. Is that right?
>
>
>     You could do that if it's convenient for you. Alternatively, you
>     could prevent messages from being redelivered by making sure the
>     server only sends you as many as you will actually process (if you
>     know how many that is).
>
>     Oleg suggests you set the prefetch count to 1 - this will ensure
>     that the server only sends you one message until you ack it (which
>     will block if you're trying to process 100 at once).
>
>     So if you're currently reading in 100 messages and then acking all
>     of them you could set the prefetch count to 100. The server will
>     then allow you 100 unacked messages. You'd need to make sure you
>     cancel before acking, otherwise the server can send you more
>     messages between acking and closing the channel.
>
>     So to summarise:
>
>     channel.open
>     basic.qos(prefetch_count = 100)
>     basic.consume
>     (consume 100 messages)
>     basic.cancel
>     (ack 100 messages)
>
>     I'd be interested to know why you need to process messages in
>     batches though.
>
>     Cheers, Simon
>
>
>         On Thu, Jun 10, 2010 at 9:38 AM, Oleg Zhurakousky
>         <ozhurakousky at vmware.com <mailto:ozhurakousky at vmware.com>
>         <mailto:ozhurakousky at vmware.com
>         <mailto:ozhurakousky at vmware.com>>> wrote:
>
>             Not sure about C# API, and how you are building the next set of
>             messages, but here is what I belive is happening.
>
>             Channel prefetch messages. That is different then invoking a
>             consumer. THis means that you might have 1000 prefetched
>         messages in
>             your channel, while you are still processing 21st message.
>         Whatever
>             you un-acknowledge is put back into the queue once the
>         channel is
>             closed. AMQO does not define an ordering of messages for
>         re-queueing.
>             One way to leverage this scenario is to set prefetchCount to
>         1. This
>             way there will never me more then one prefetched messages in
>         your
>             channel.
>
>             Oleg
>
>             On Jun 10, 2010, at 10:24 AM, Srijanani Srinivasan wrote:
>
>
>             Hi,
>
>             I am using Rabbit MQ in C#. This is my scenario
>             1.               A separate process publishes messages to
>         the queue
>             2.               Client has to read set of N messages from queue
>             3.               Process the N messages
>             4.               Acknowledge the N messages
>             5.               Repeat steps 2 to 4 continuously to process all
>             sets of messages
>             Under the same channel, I receive the messages and then
>         process them
>             and then acknowledge them. The server process keeps publishing
>             messages. The problem I am facing is, when I try to get next
>         set of
>             messages, they do not come in the same order as it was
>         published by
>             the publishing process. The messages come in a random order.
>         Only
>             the first set of messages comes in the correct order.
>
>             Does any one what is going wrong here? Is creating a new
>         channel to
>             access the next set of messages not right? Or is there a problem
>             caused because of acknowledging multiple messages? Please
>         help me
>             understand why this does not work correctly.
>
>             Below is the sample code:
>             while (true)
>                         {
>                             using (IModel getChannel =
>         MQConnection.CreateModel())
>                             {
>                                 // Create a consumer
>                                 QueueingBasicConsumer consumer =
>             CreateQueueConsumer(getChannel, exchangeName, queueName);
>                                 int numberOfMessages = 100;
>                                 // Next Recieve
>                                 List<object> msgSet =
>             GetNextSetOfMessages(consumer, getChannel, exchangeName,
>         queueName,
>             numberOfMessages,             out finalDeliverytag);
>                                 // Do some processing
>                                 //Acknowledge finished messages by
>         passing in
>             the delivery tag.
>                                 // calls the method BasicAck with multiple
>             param=true
>                                 if (finalDeliverytag > 0)
>                                     AckFinishedMessages(exchangeName,
>         queueName,
>             finalDeliverytag, getChannel);
>                                 if (finalDeliverytag == 0)
>                                     break;
>                             }
>                         }
>
>             Thanks for your help in advance!
>             Srijanani
>
>         <ATT00001..txt>
>
>
>
>
>         _______________________________________________
>         rabbitmq-discuss mailing list
>         rabbitmq-discuss at lists.rabbitmq.com
>         <mailto:rabbitmq-discuss at lists.rabbitmq.com>
>         http://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss
>
>
>     _______________________________________________
>     rabbitmq-discuss mailing list
>     rabbitmq-discuss at lists.rabbitmq.com
>     <mailto:rabbitmq-discuss at lists.rabbitmq.com>
>     http://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss
>
>


From matthew at rabbitmq.com  Tue Jun 15 18:49:19 2010
From: matthew at rabbitmq.com (Matthew Sackman)
Date: Tue, 15 Jun 2010 18:49:19 +0100
Subject: [rabbitmq-discuss] message availability after close without ack
In-Reply-To: <1276622622.10343.17.camel@bede>
References: <1276622622.10343.17.camel@bede>
Message-ID: <20100615174918.GJ16440@rabbitmq.com>

On Tue, Jun 15, 2010 at 01:23:42PM -0400, Tim Cole wrote:
> My understanding had been that if a consumer is canceled (and its
> channel closed) without having acked delivered messages, then those
> messages become available to later consumers on the same queue.

You're understanding is correct - the key part is the channel being
closed.

> That doesn't actually appear to be happening, however.
> I have a bit of code which is essentially doing:
> 
>  ==> basic.consume
>  <== basic.deliver
>  # transient application error happens
>  ==> basic.cancel
>  ==> channel.close
> 
>  ==> channel.open
>  ==> basic.consume
>  # no message delivered
> 
> I would expect to get a basic.deliver with the same message as before,
> since the message wasn't acked the first time.  I'm not, though.  Is
> there more to it than this?

Hmm. Can you isolate the code that is doing this - it really shouldn't
be happening.

Matthew

From matthew at rabbitmq.com  Tue Jun 15 18:51:36 2010
From: matthew at rabbitmq.com (Matthew Sackman)
Date: Tue, 15 Jun 2010 18:51:36 +0100
Subject: [rabbitmq-discuss] message availability after close without ack
In-Reply-To: <20100615174918.GJ16440@rabbitmq.com>
References: <1276622622.10343.17.camel@bede>
	<20100615174918.GJ16440@rabbitmq.com>
Message-ID: <20100615175135.GK16440@rabbitmq.com>

On Tue, Jun 15, 2010 at 06:49:19PM +0100, Matthew Sackman wrote:
> On Tue, Jun 15, 2010 at 01:23:42PM -0400, Tim Cole wrote:
> > My understanding had been that if a consumer is canceled (and its
> > channel closed) without having acked delivered messages, then those
> > messages become available to later consumers on the same queue.
> 
> You're understanding is correct - the key part is the channel being
> closed.

Apologies. I shall return to school now to be taught the difference
between your and you're.

Matthew

From matthias at rabbitmq.com  Tue Jun 15 19:01:39 2010
From: matthias at rabbitmq.com (Matthias Radestock)
Date: Tue, 15 Jun 2010 19:01:39 +0100
Subject: [rabbitmq-discuss] message availability after close without ack
In-Reply-To: <20100615174918.GJ16440@rabbitmq.com>
References: <1276622622.10343.17.camel@bede>
	<20100615174918.GJ16440@rabbitmq.com>
Message-ID: <4C17C003.6000404@rabbitmq.com>

Tim,

On 15/06/10 18:49, Matthew Sackman wrote:
> On Tue, Jun 15, 2010 at 01:23:42PM -0400, Tim Cole wrote:
>> I have a bit of code which is essentially doing:
>>
>>   ==>  basic.consume
>>   <== basic.deliver
>>   # transient application error happens
>>   ==>  basic.cancel
>>   ==>  channel.close
>>
>>   ==>  channel.open
>>   ==>  basic.consume
>>   # no message delivered
>>
>> I would expect to get a basic.deliver with the same message as before,
>> since the message wasn't acked the first time.  I'm not, though.  Is
>> there more to it than this?
>
> Hmm. Can you isolate the code that is doing this - it really shouldn't
> be happening.

You may want to run your app through the tracer 
(http://www.rabbitmq.com/examples.html#tracer), which will produce a 
trace much like the above. If you do get a trace that looks wrong please 
post it here.

Regards,

Matthias.

From tim.cole at canonical.com  Tue Jun 15 19:39:48 2010
From: tim.cole at canonical.com (Tim Cole)
Date: Tue, 15 Jun 2010 14:39:48 -0400
Subject: [rabbitmq-discuss] txamqp not sending channel.close? (Was: message
 availability after close without ack)
In-Reply-To: <4C17C003.6000404@rabbitmq.com>
References: <1276622622.10343.17.camel@bede>
	<20100615174918.GJ16440@rabbitmq.com> <4C17C003.6000404@rabbitmq.com>
Message-ID: <1276627188.10343.35.camel@bede>

On Tue, 2010-06-15 at 19:01 +0100, Matthias Radestock wrote:
> > Hmm. Can you isolate the code that is doing this - it really shouldn't
> > be happening.
> 
> You may want to run your app through the tracer 
> (http://www.rabbitmq.com/examples.html#tracer), which will produce a 
> trace much like the above. If you do get a trace that looks wrong please 
> post it here.

Here's the output from the tracer:

1276625968512: conn#0 ch#0 -> {#method<connection.start-ok>(client-properties={},mechanism=AMQPLAIN,response=LOGINSguesPASSWORDSguest,locale=en_US),null,""}
1276625968512: conn#0 ch#0 <- {#method<connection.start>(version-major=8,version-minor=0,server properties={product=RabbitMQ, information=Licensed under the MPL.  See http://www.rabbitmq.com/, platform=Erlang/OTP, copyright=Copyright (C) 2007-2010 LShift Ltd., Cohesive Financial Technologies LLC., and Rabbit Technologies Ltd., version=1.7.2},mechanisms=PLAIN AMQPLAIN,locales=en_US),null,""}
1276625968514: conn#0 ch#0 <- {#method<connection.tune>(channel-max=0,frame-max=131072,heartbeat=0),null,""}
1276625968557: conn#0 ch#0 -> {#method<connection.tune-ok>(channel-max=0,frame-max=131072,heartbeat=0),null,""}
1276625968557: conn#0 ch#0 -> {#method<connection.open>(virtual-host=/,capabilities=,insist=false),null,""}
1276625968599: conn#0 ch#0 <- {#method<connection.open-ok>(known-hosts=bede:53814),null,""}
1276625968664: conn#0 ch#1 -> {#method<channel.open>(out-of-band=),null,""}
1276625968705: conn#0 ch#1 <- {#method<channel.open-ok>(),null,""}
1276625968749: conn#0 ch#1 -> {#method<exchange.declare>(ticket=0,exchange=2dfdceee-a20a-4ce9-a897-fd0660e214b5,type=topic,passive=false,durable=true,auto-delete=false,internal=false,nowait=false,arguments={}),null,""}
1276625968790: conn#0 ch#1 <- {#method<exchange.declare-ok>(),null,""}
1276625968831: conn#0 ch#2 -> {#method<channel.open>(out-of-band=),null,""}
1276625968872: conn#0 ch#2 <- {#method<channel.open-ok>(),null,""}
1276625968915: conn#0 ch#2 -> {#method<queue.declare>(ticket=0,queue=89207d72-4f0e-4b52-87e9-7e13656a3589,passive=false,durable=true,exclusive=false,auto-delete=false,nowait=false,arguments={}),null,""}
1276625968956: conn#0 ch#2 <- {#method<queue.declare-ok>(queue=89207d72-4f0e-4b52-87e9-7e13656a3589,message-count=0,consumer-count=0),null,""}
1276625968997: conn#0 ch#2 -> {#method<queue.bind>(ticket=0,queue=89207d72-4f0e-4b52-87e9-7e13656a3589,exchange=2dfdceee-a20a-4ce9-a897-fd0660e214b5,routing-key=blah,nowait=false,arguments={}),null,""}
1276625969038: conn#0 ch#2 <- {#method<queue.bind-ok>(),null,""}
1276625969081: conn#0 ch#2 -> {#method<basic.consume>(ticket=0,queue=89207d72-4f0e-4b52-87e9-7e13656a3589,consumer-tag=,no-local=false,no-ack=false,exclusive=false,nowait=false),null,""}
1276625969122: conn#0 ch#2 <- {#method<basic.consume-ok>(consumer-tag=amq.ctag-iVU1DgfIJCmSSthlatN1JA==),null,""}
1276625969166: conn#0 ch#3 -> {#method<channel.open>(out-of-band=),null,""}
1276625969206: conn#0 ch#3 <- {#method<channel.open-ok>(),null,""}
1276625969251: conn#0 ch#3 -> {#method<basic.publish>(ticket=0,exchange=2dfdceee-a20a-4ce9-a897-fd0660e214b5,routing-key=blah,mandatory=false,immediate=false),#contentHeader<basic>(content-type=null, content-encoding=null, headers=null, delivery-mode=2, priority=null, correlation-id=null, reply-to=null, expiration=null, message-id=null, timestamp=null, type=null, user-id=null, app-id=null, cluster-id=null),"foo"}
1276625969291: conn#0 ch#2 <- {#method<basic.deliver>(consumer-tag=amq.ctag-iVU1DgfIJCmSSthlatN1JA==,delivery-tag=1,redelivered=false,exchange=2dfdceee-a20a-4ce9-a897-fd0660e214b5,routing-key=blah),#contentHeader<basic>(content-type=null, content-encoding=null, headers=null, delivery-mode=2, priority=null, correlation-id=null, reply-to=null, expiration=null, message-id=null, timestamp=null, type=null, user-id=null, app-id=null, cluster-id=null),"foo"}
1276625969339: conn#0 ch#2 -> {#method<basic.cancel>(consumer-tag=amq.ctag-iVU1DgfIJCmSSthlatN1JA==,nowait=false),null,""}
1276625969340: conn#0 ch#4 -> {#method<channel.open>(out-of-band=),null,""}
1276625969380: conn#0 ch#2 <- {#method<basic.cancel-ok>(consumer-tag=amq.ctag-iVU1DgfIJCmSSthlatN1JA==),null,""}
1276625969381: conn#0 ch#4 <- {#method<channel.open-ok>(),null,""}
1276625969421: conn#0 ch#4 -> {#method<basic.consume>(ticket=0,queue=89207d72-4f0e-4b52-87e9-7e13656a3589,consumer-tag=,no-local=false,no-ack=false,exclusive=false,nowait=false),null,""}
1276625969463: conn#0 ch#4 <- {#method<basic.consume-ok>(consumer-tag=amq.ctag-IGMvYJA+e5b1lSzF6TqDcw==),null,""}

At this point, it just waits forever; no basic.deliver arrives.  But I'm
noticing that I don't see a channel.close being sent by the client.  I'm
calling channel.close(None) on the txamqp channel object; is that the
wrong way to close a channel, or is there a problem with txamqp?

Thanks,
Tim
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 198 bytes
Desc: This is a digitally signed message part
URL: <http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20100615/5832cb4a/attachment-0001.pgp>

From matthias at rabbitmq.com  Tue Jun 15 20:22:26 2010
From: matthias at rabbitmq.com (Matthias Radestock)
Date: Tue, 15 Jun 2010 20:22:26 +0100
Subject: [rabbitmq-discuss] txamqp not sending channel.close? (Was:
 message availability after close without ack)
In-Reply-To: <1276627188.10343.35.camel@bede>
References: <1276622622.10343.17.camel@bede>	
	<20100615174918.GJ16440@rabbitmq.com>
	<4C17C003.6000404@rabbitmq.com> <1276627188.10343.35.camel@bede>
Message-ID: <4C17D2F2.5070602@rabbitmq.com>

Tim,

Tim Cole wrote:
> At this point, it just waits forever; no basic.deliver arrives.  But I'm
> noticing that I don't see a channel.close being sent by the client.  I'm
> calling channel.close(None) on the txamqp channel object; is that the
> wrong way to close a channel, or is there a problem with txamqp?

sending a channel.close method is definitely the correct way to close a 
channel, but I do not know how that is exposed in the txamqp API.


Matthias.

From tim.cole at canonical.com  Tue Jun 15 20:36:47 2010
From: tim.cole at canonical.com (Tim Cole)
Date: Tue, 15 Jun 2010 15:36:47 -0400
Subject: [rabbitmq-discuss] txamqp not sending channel.close? (Was:
 message availability after close without ack)
In-Reply-To: <1276627188.10343.35.camel@bede>
References: <1276622622.10343.17.camel@bede>
	<20100615174918.GJ16440@rabbitmq.com> <4C17C003.6000404@rabbitmq.com>
	<1276627188.10343.35.camel@bede>
Message-ID: <1276630607.10343.38.camel@bede>

So the problem turned out to be that txamqp's channel.close doesn't do
anything (as far as the sever is concerned).  I have to do this instead:

 d = channel.channel_close()
 d.addCallback(channel.close)

Once I'm actually sending channel.close, it works fine.  Eh well.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 198 bytes
Desc: This is a digitally signed message part
URL: <http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20100615/eeedd087/attachment.pgp>

From mlartz at gmail.com  Wed Jun 16 06:32:45 2010
From: mlartz at gmail.com (Michael Artz)
Date: Wed, 16 Jun 2010 01:32:45 -0400
Subject: [rabbitmq-discuss] Highly Dynamic Bindings?
Message-ID: <D53CEBD2-F061-4C55-9192-041B7BCB9ED7@gmail.com>

We're trying to push some of our application's routing logic into RabbitMQ/AMQP but had a couple of questions before we get too far along.  We currently have a 4-node Rabbit cluster using only a single disk node.  The nodes are underpowered (and under-RAMed), but the message volume is currently only ~10 messages/sec (1K messages), although expected to grow.  We're planning on implementing a chat-like system that would perform a lot of binding operations on a limited number of queues and were wondering:

  - Are there any issues having a large (30K+) number of non-wildcarded bindings for a single queue?
  - Are there any issues with a large amount of binding "churn" (~10 binding adds/drops per second per queue)

Thanks,
-Mike

From mlartz at gmail.com  Wed Jun 16 06:39:09 2010
From: mlartz at gmail.com (Michael Artz)
Date: Wed, 16 Jun 2010 01:39:09 -0400
Subject: [rabbitmq-discuss] Highly Dynamic Bindings?
Message-ID: <4F273699-9CEC-4E98-A73F-106370E094D8@gmail.com>

We're trying to push some of our application's routing logic into RabbitMQ/AMQP but had a couple of questions before we get too far along.  We currently have a 4-node Rabbit cluster using only a single disk node.  The nodes are underpowered (and under-RAMed), but the message volume is currently only ~10 messages/sec (1K messages), although expected to grow.  We're planning on implementing a chat-like system that would perform a lot of binding operations on a limited number of queues and were wondering:

 - Are there any issues having a large (30K+) number of non-wildcarded bindings for a single queue?
 - Are there any issues with a large amount of binding "churn" (~10 binding adds/drops per second per queue)

Thanks,
-Mike

From henry.baxter at gmail.com  Wed Jun 16 06:48:34 2010
From: henry.baxter at gmail.com (henrybaxter)
Date: Tue, 15 Jun 2010 22:48:34 -0700 (PDT)
Subject: [rabbitmq-discuss]  rabbitmq-stomp listening address
Message-ID: <28899082.post@talk.nabble.com>


Given the following rabbitmq startup command, how come my stomp adapter only
listens on 127.0.0.1

 /usr/lib/erlang/erts-5.6.3/bin/beam.smp -W w -K true -A30 -P 1048576 --
-root /usr/lib/erlang -progname erl -- -home /root -sname rabbit at job-web
-boot ./scripts/../ebin/rabbit -kernel inet_default_listen_options
[{nodelay,true}] -kernel inet_default_connect_options [{nodelay,true}] -sasl
errlog_type error -kernel error_logger {file,"/tmp/rabbit at job-web.log"}
-sasl sasl_error_logger {file,"/tmp/rabbit at job-web-sasl.log"} -os_mon
start_cpu_sup true -os_mon start_disksup false -os_mon start_memsup false
-mnesia dir "/tmp/rabbitmq-rabbit-mnesia" -pa
/usr/lib/rabbitmq/rabbitmq-public-umbrella/rabbitmq-stomp/ebin -rabbit
stomp_listeners [{"0.0.0.0",61613}] extra_startup_steps
[{"STOMP-listeners",rabbit_stomp,kickstart,[]}]

To get to this point I hg cloned rabbitmq-public-umbrella, make co, make,
then symlinked ./rabbitmq-server/plugins/rabbitmq-stomp to ./rabbitmq-stomp,
then ran rabbitmq-activate-plugins, finally I added the stomp information
into /etc/rabbitmq/rabbitmq.conf

The startup_log looks like this:

...
broker running
starting STOMP Adapter (binding to [{"127.0.0.1",61613}])  ...done
OK
done.


Please let me know if I can provide more information to clarify.
-- 
View this message in context: http://old.nabble.com/rabbitmq-stomp-listening-address-tp28899082p28899082.html
Sent from the RabbitMQ mailing list archive at Nabble.com.


From matthias at rabbitmq.com  Wed Jun 16 06:59:21 2010
From: matthias at rabbitmq.com (Matthias Radestock)
Date: Wed, 16 Jun 2010 06:59:21 +0100
Subject: [rabbitmq-discuss] rabbitmq-stomp listening address
In-Reply-To: <28899082.post@talk.nabble.com>
References: <28899082.post@talk.nabble.com>
Message-ID: <4C186839.4090207@rabbitmq.com>

henrybaxter wrote:
> Given the following rabbitmq startup command, how come my stomp adapter only
> listens on 127.0.0.1 [...]
> -rabbit stomp_listeners [{"0.0.0.0",61613}] extra_startup_steps
> [{"STOMP-listeners",rabbit_stomp,kickstart,[]}]

According to the README 
(http://hg.rabbitmq.com/rabbitmq-stomp/annotate/default/README#l82), 
that should be "-rabbit_stomp listeners ...".

Also, the extra_startup_steps is not needed.


Matthias.

From henry.baxter at gmail.com  Wed Jun 16 07:08:03 2010
From: henry.baxter at gmail.com (Henry Baxter)
Date: Tue, 15 Jun 2010 23:08:03 -0700
Subject: [rabbitmq-discuss] rabbitmq-stomp listening address
In-Reply-To: <4C186839.4090207@rabbitmq.com>
References: <28899082.post@talk.nabble.com>
	<4C186839.4090207@rabbitmq.com>
Message-ID: <AANLkTiloWlF0kiB55snG6D12zA4baPNcDKLvA5OBwv6k@mail.gmail.com>

Sorry, to the whole list:

On Tue, Jun 15, 2010 at 22:59, Matthias Radestock <matthias at rabbitmq.com>wrote:

> henrybaxter wrote:
>
>> Given the following rabbitmq startup command, how come my stomp adapter
>> only
>> listens on 127.0.0.1 [...]
>>
>> -rabbit stomp_listeners [{"0.0.0.0",61613}] extra_startup_steps
>> [{"STOMP-listeners",rabbit_stomp,kickstart,[]}]
>>
>
> According to the README (
> http://hg.rabbitmq.com/rabbitmq-stomp/annotate/default/README#l82), that
> should be "-rabbit_stomp listeners ...".
>
> Also, the extra_startup_steps is not needed.
>
>
> Matthias.
>

That worked Matthias, thank you. Please note that
https://dev.rabbitmq.com/wiki/StompGateway is where I got the "-rabbit
stomp_listeners" from
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20100615/5a3d77c9/attachment.htm>

From matthias at rabbitmq.com  Wed Jun 16 07:11:38 2010
From: matthias at rabbitmq.com (Matthias Radestock)
Date: Wed, 16 Jun 2010 07:11:38 +0100
Subject: [rabbitmq-discuss] rabbitmq-stomp listening address
In-Reply-To: <AANLkTiloWlF0kiB55snG6D12zA4baPNcDKLvA5OBwv6k@mail.gmail.com>
References: <28899082.post@talk.nabble.com>	<4C186839.4090207@rabbitmq.com>
	<AANLkTiloWlF0kiB55snG6D12zA4baPNcDKLvA5OBwv6k@mail.gmail.com>
Message-ID: <4C186B1A.3070405@rabbitmq.com>

Henry,

Henry Baxter wrote:
> Please note that https://dev.rabbitmq.com/wiki/StompGateway is where
> I got the "-rabbit stomp_listeners" from

Thanks; I was wondering where that info came from. Fixed.


Matthias.

From matthew at rabbitmq.com  Wed Jun 16 16:10:12 2010
From: matthew at rabbitmq.com (Matthew Sackman)
Date: Wed, 16 Jun 2010 16:10:12 +0100
Subject: [rabbitmq-discuss] RabbitMQ 1.8.0 release
Message-ID: <20100616151011.GC27240@rabbitmq.com>

The RabbitMQ team is pleased to announce the release of RabbitMQ 1.8.0.

This release introduces several APIs to extend Rabbit in a pluggable
way, first with pluggable exchange types, and then with pluggable
backing queues. Other improvements include optimisations for cross-node
routing within a cluster, and more rigorous enforcement of channel.flow
to ensure that Rabbit can stop producers who are failing to obey the
instruction to stop sending messages to Rabbit when Rabbit comes under
memory pressure.

There are many semantic changes to bring the behaviour of Rabbit closer
towards the AMQP 0-9-1 specification. These are covered in detail in the
release notes below.

Please note this release of the RabbitMQ broker requires at least Erlang
version R12B-3.

This release does *not* contain the new persister, which is making good
progress through QA and will appear in a future release.

Finally, due to an issue we're currently seeing with the nexus/sonatype
maven repository, the 1.8.0 release is not yet available in maven. We
will rectify this as soon as we can.

For details see the attached release notes.

Binary and source distributions of the new release can be found in the
usual place, at http://www.rabbitmq.com/download.html

We recommend that all users of earlier versions of RabbitMQ upgrade to
this latest release.

As always, we welcome any questions, bug reports, and other feedback
on this release, as well as general suggestions for features and
enhancements in future releases. Mail us via the RabbitMQ discussion
list at rabbitmq-discuss at lists.rabbitmq.com, or directly at
info at rabbitmq.com.


Regards,

The RabbitMQ Team



Release: RabbitMQ 1.8.0

Release Highlights
==================

server
------
bug fixes
- prevent a change in host name from preventing RabbitMQ from being
  restarted.
- ensure that durable exclusive queues do not survive a restart of the
  broker.
- fix a race condition that could occur when concurrently declaring
  exclusive queues.
- ensure that queues being recovered by a node in a cluster cannot be
  accessed via other nodes until the queue is fully initialised.
- prevent bursts of declarations or deletions of queues or exchanges
  from exhausting mnesia's transactional capacity.
- prevent bursts of connections from exhausting TCP backlog buffers.
- various corrections to documentation to correct discrepancies
  between the website, the man pages, and the commands' usage outputs.

enhancements
------------
- introduce a pluggable exchange type API permitting plugins to the
  broker to define new exchange types which can then be used by
  clients.
- introduce a backing queue API permitting plugins to the broker to
  define new ways in which messages can be stored.
- several semantic changes to bring the behaviour inline with the AMQP
  0-9-1 spec:
  + honour many of the queue exclusivity requirements for AMQP 0-9-1,
    such as queue redeclaration, basic.get, queue.bind and
    queue.unbind.
  + honour exchange and queue equivalence requirements for AMQP 0-9-1,
    especially for queue and exchange redeclaration.
  + ensure that exclusive queues are synchronously deleted before the
    connection fully closes.
  + permit durable queues to be bound to transient exchanges.
  + enforce detection and raising exceptions due to invalid and reused
    delivery-tags in basic.ack rigorously
  + queue.purge now does not remove unacknowledged messages.
- require clients to respond to channel.flow messages within 10
  seconds to avoid an exception being raised and more rigorously deal
  with clients that disobey channel.flow messages. See
  http://www.rabbitmq.com/extensions.html#memsup
- the server now supports the client sending channel.flow messages to
  temporarily halt the flow of deliveries to the client.
- optimise cross-node routing of messages in a cluster scenario whilst
  maintaining visibility guarantees.
- ensure that clients who present invalid credentials cannot flood the
  broker with requests.
- drop support for versions of Erlang older than R12B-3.
- ensure that the minimum number of frames are used to deliver
  messages, regardless of incoming and outgoing frame sizes.
- display the current version of Erlang when booting Rabbit, and
  ensure the version is sufficiently youthful.
- work around some name resolver issues, especially under Windows.
- introduce a Pacemaker OCF script (and then fix it, thanks to patches
  by Florian Haas) to permit RabbitMQ to be used in basic
  active/passive HA scenarios (see
  http://www.rabbitmq.com/pacemaker.html).


java client
-----------
bug fixes
- fix a race condition when closing channels which could lead to the
  same channel being closed twice.
- MulticastMain could calculate negative rates, due to integer
  wrapping.
- be consistent about naming conventions.

enhancements
- Java client is now available via Maven Central.
- redesign the ConnectionFactory to be more idiomatic.
- expose server properties in connection.start.
- allow additional client properties to be set in connection.start_ok.
- attempt to infer authentication failures and construct appropriate
  exceptions.
- MulticastMain now logs returned publishes.


.net client
-----------
bug fixes
- prevent memory leak due to DomainUnload event handler.
- improvements to catching connections which are timing out.
- ensure explicitly numbered closed channels return their channel
  number to the pool correctly.
- removed artificial limitation on maximum incoming message size.

enhancements
- expose server properties in connection.start.
- allow additional client properties to be set in connection.start_ok.
- attempt to infer authentication failures and construct appropriate
  exceptions.


code generation
---------------
enhancements
- permit multiple specifications to easily be combined and merged.
- permit any number of different "actions" in code generation.


building & packaging
--------------------
bug fixes
- stop the INSTALL file from being installed in the wrong place by the
  Debian packages.

enhancements
- source rpm (.src.rpm) packages are now available
- rpm packages are now noarch, matching the debs


Upgrading
=========
The database schema and the format in which persistent messages are
stored have both changed since the last release (1.7.2). When
starting, the RabbitMQ server will detect the existence of an old
database and will move it to a backup location, before creating a
fresh, empty database, and will log a warning. If your RabbitMQ
installation contains important data then we recommend you contact
support at rabbitmq.com for assistance with the upgrade.


Important notes on the AMQP 0-9-1 semantic changes
==================================================

This release incorporates a number of semantic changes to the broker
behaviour which bring the broker more in-line with the AMQP 0-9-1
specification. We don't think any of these changes are going to be a
big problem for anyone, and will probably be irrelevant for most
people. In almost all cases they're tightening up or tidying up edge
cases where the 0-8 spec was incomplete or specified something
unhelpful. However, it's probably worth reading the list below to make
absolutely sure you're not depending on any of our existing weird
behaviour.


Reuse of delivery tags
----------------------

In previous versions of RabbitMQ, you could ack the same message with
the same delivery tag multiple times. In 1.8.0 this will cause a
not-found exception. Note that if a message is redelivered for any
reason it will get a new delivery tag so you can ack it again.


Exchange equivalence
--------------------

In previous versions of RabbitMQ you could actively declare an
exchange with one set of durable and auto-delete parameters, then
actively declare it again with different parameters and get the same
exchange back. This now causes a precondition_failed exception, as it
would if the type does not match. Note that with the old behaviour the
exchange did not actually change to match the new parameters; you just
got back something that was not what you asked for.

In previous versions, when passively declaring an exchange, the type
parameter was checked (but not the durable and auto-delete
parameters).  Now only the name is checked. Passive declaration cannot
create an exchange, and exchanges are only identified by their
name. Therefore it does not make sense to require the other parameters
of exchange.declare to match the exchange declaration in the passive
case.


Queue equivalence
-----------------

Similarly, when actively redeclaring a queue you could vary the
durable and auto-delete parameters and get back a queue which did not
match what you asked for. Again, this is now causes a
precondition_failed exception.  Likewise, passive declaration of
queues only needs to match on the queue name, not any other
parameters.


Purging unacknowledged messages
-------------------------------

When queue.purge is called, messages which had been send but not
acknowledged used to be purged. Now they are not. This makes much more
sense as consumers from a queue may have no idea whether or not a
queue has been purged by some other client.


Binding durable queues to transient exchanges
---------------------------------------------

This used not to be permitted. Now it is. The binding is considered
transient.


Queue exclusivity enforcement
-----------------------------

In previous versions of RabbitMQ, an exclusive queue could still be
accessed by other connections for (un)binding or basic.get. This is now
not permitted.

Also, an exclusive queue would continue to exist for a short time after
the connection was closed. It's now deleted while the connection is
being closed (assuming that's happening in an orderly manner).

From matthew at rabbitmq.com  Wed Jun 16 16:48:52 2010
From: matthew at rabbitmq.com (Matthew Sackman)
Date: Wed, 16 Jun 2010 16:48:52 +0100
Subject: [rabbitmq-discuss] [rabbitmq-announce] RabbitMQ 1.8.0 release
In-Reply-To: <AANLkTikzUH2hULlCOV98dqCqy5uYw2SciA71tp7qNuR4@mail.gmail.com>
References: <20100616151743.GE27240@rabbitmq.com>
	<AANLkTikzUH2hULlCOV98dqCqy5uYw2SciA71tp7qNuR4@mail.gmail.com>
Message-ID: <20100616154851.GF27240@rabbitmq.com>

On Wed, Jun 16, 2010 at 11:46:24AM -0400, Ilya Grigorik wrote:
> Awesome. What are the available persistence backends today?

Currently, only the old one. This will be supplimented by the upcoming
"new persister" in a future release, and of course, now that the API is
reasonably stable, other people could write their own if they want to.

Matthew

From scott at beamdog.com  Wed Jun 16 16:49:19 2010
From: scott at beamdog.com (Scott Brooks)
Date: Wed, 16 Jun 2010 09:49:19 -0600
Subject: [rabbitmq-discuss] Pluggable Authentication back ends?
Message-ID: <AANLkTikQKtHNlUL0P3kF7EriQyrJ4oq3vJkIGqmEnJV6@mail.gmail.com>

First off congratulations on 1.8.0.

Secondly I was looking through the source trying to find a way to
extend the authentication code and it looks like there isn't really
any way to do it as a plugin.

Ideally such a system would operate something like this.
1: Authenticate against rabbits built in user list.
2: If the user is not found, map over a configurable list of
gen_server names calling into it with a standard set of messages the
gen_server would have to accept.
3: In that users state store which backend authorized them so it can
return to that when needing to check permissions, etc.

Then I could write a plugin that would create an auth exchange that it
could send auth requests to and the equivalent application bound do
that exchange replying with auth ok, fail, etc.

That would let me lookup and auth against my users database without
having to either share a public username and password, or try and sync
the two databases.

Thoughts?
Scott

From kevin at hypotheticalabs.com  Wed Jun 16 16:52:58 2010
From: kevin at hypotheticalabs.com (Kevin A. Smith)
Date: Wed, 16 Jun 2010 11:52:58 -0400
Subject: [rabbitmq-discuss] RabbitMQ 1.8.0 release
In-Reply-To: <20100616151011.GC27240@rabbitmq.com>
References: <20100616151011.GC27240@rabbitmq.com>
Message-ID: <9A0230F0-96B1-46ED-91A4-B9066380D79D@hypotheticalabs.com>

Congrats on 1.8.0! Very interested to dig into the pluggable persistence API now that it's stabilized.

I recently had some issues with Maven and Sonatype during the last Riak release. If you're seeing bad checksum errors when attempting to close a staging repo then you need to update Maven. There was a bug which was apparently triggered by some infrastructure updates Sonatype did recently.

--Kevin
On Jun 16, 2010, at 11:10 AM, Matthew Sackman wrote:

> The RabbitMQ team is pleased to announce the release of RabbitMQ 1.8.0.
> 
> This release introduces several APIs to extend Rabbit in a pluggable
> way, first with pluggable exchange types, and then with pluggable
> backing queues. Other improvements include optimisations for cross-node
> routing within a cluster, and more rigorous enforcement of channel.flow
> to ensure that Rabbit can stop producers who are failing to obey the
> instruction to stop sending messages to Rabbit when Rabbit comes under
> memory pressure.
> 
> There are many semantic changes to bring the behaviour of Rabbit closer
> towards the AMQP 0-9-1 specification. These are covered in detail in the
> release notes below.
> 
> Please note this release of the RabbitMQ broker requires at least Erlang
> version R12B-3.
> 
> This release does *not* contain the new persister, which is making good
> progress through QA and will appear in a future release.
> 
> Finally, due to an issue we're currently seeing with the nexus/sonatype
> maven repository, the 1.8.0 release is not yet available in maven. We
> will rectify this as soon as we can.
> 
> For details see the attached release notes.
> 
> Binary and source distributions of the new release can be found in the
> usual place, at http://www.rabbitmq.com/download.html
> 
> We recommend that all users of earlier versions of RabbitMQ upgrade to
> this latest release.
> 
> As always, we welcome any questions, bug reports, and other feedback
> on this release, as well as general suggestions for features and
> enhancements in future releases. Mail us via the RabbitMQ discussion
> list at rabbitmq-discuss at lists.rabbitmq.com, or directly at
> info at rabbitmq.com.
> 
> 
> Regards,
> 
> The RabbitMQ Team
> 
> 
> 
> Release: RabbitMQ 1.8.0
> 
> Release Highlights
> ==================
> 
> server
> ------
> bug fixes
> - prevent a change in host name from preventing RabbitMQ from being
>  restarted.
> - ensure that durable exclusive queues do not survive a restart of the
>  broker.
> - fix a race condition that could occur when concurrently declaring
>  exclusive queues.
> - ensure that queues being recovered by a node in a cluster cannot be
>  accessed via other nodes until the queue is fully initialised.
> - prevent bursts of declarations or deletions of queues or exchanges
>  from exhausting mnesia's transactional capacity.
> - prevent bursts of connections from exhausting TCP backlog buffers.
> - various corrections to documentation to correct discrepancies
>  between the website, the man pages, and the commands' usage outputs.
> 
> enhancements
> ------------
> - introduce a pluggable exchange type API permitting plugins to the
>  broker to define new exchange types which can then be used by
>  clients.
> - introduce a backing queue API permitting plugins to the broker to
>  define new ways in which messages can be stored.
> - several semantic changes to bring the behaviour inline with the AMQP
>  0-9-1 spec:
>  + honour many of the queue exclusivity requirements for AMQP 0-9-1,
>    such as queue redeclaration, basic.get, queue.bind and
>    queue.unbind.
>  + honour exchange and queue equivalence requirements for AMQP 0-9-1,
>    especially for queue and exchange redeclaration.
>  + ensure that exclusive queues are synchronously deleted before the
>    connection fully closes.
>  + permit durable queues to be bound to transient exchanges.
>  + enforce detection and raising exceptions due to invalid and reused
>    delivery-tags in basic.ack rigorously
>  + queue.purge now does not remove unacknowledged messages.
> - require clients to respond to channel.flow messages within 10
>  seconds to avoid an exception being raised and more rigorously deal
>  with clients that disobey channel.flow messages. See
>  http://www.rabbitmq.com/extensions.html#memsup
> - the server now supports the client sending channel.flow messages to
>  temporarily halt the flow of deliveries to the client.
> - optimise cross-node routing of messages in a cluster scenario whilst
>  maintaining visibility guarantees.
> - ensure that clients who present invalid credentials cannot flood the
>  broker with requests.
> - drop support for versions of Erlang older than R12B-3.
> - ensure that the minimum number of frames are used to deliver
>  messages, regardless of incoming and outgoing frame sizes.
> - display the current version of Erlang when booting Rabbit, and
>  ensure the version is sufficiently youthful.
> - work around some name resolver issues, especially under Windows.
> - introduce a Pacemaker OCF script (and then fix it, thanks to patches
>  by Florian Haas) to permit RabbitMQ to be used in basic
>  active/passive HA scenarios (see
>  http://www.rabbitmq.com/pacemaker.html).
> 
> 
> java client
> -----------
> bug fixes
> - fix a race condition when closing channels which could lead to the
>  same channel being closed twice.
> - MulticastMain could calculate negative rates, due to integer
>  wrapping.
> - be consistent about naming conventions.
> 
> enhancements
> - Java client is now available via Maven Central.
> - redesign the ConnectionFactory to be more idiomatic.
> - expose server properties in connection.start.
> - allow additional client properties to be set in connection.start_ok.
> - attempt to infer authentication failures and construct appropriate
>  exceptions.
> - MulticastMain now logs returned publishes.
> 
> 
> .net client
> -----------
> bug fixes
> - prevent memory leak due to DomainUnload event handler.
> - improvements to catching connections which are timing out.
> - ensure explicitly numbered closed channels return their channel
>  number to the pool correctly.
> - removed artificial limitation on maximum incoming message size.
> 
> enhancements
> - expose server properties in connection.start.
> - allow additional client properties to be set in connection.start_ok.
> - attempt to infer authentication failures and construct appropriate
>  exceptions.
> 
> 
> code generation
> ---------------
> enhancements
> - permit multiple specifications to easily be combined and merged.
> - permit any number of different "actions" in code generation.
> 
> 
> building & packaging
> --------------------
> bug fixes
> - stop the INSTALL file from being installed in the wrong place by the
>  Debian packages.
> 
> enhancements
> - source rpm (.src.rpm) packages are now available
> - rpm packages are now noarch, matching the debs
> 
> 
> Upgrading
> =========
> The database schema and the format in which persistent messages are
> stored have both changed since the last release (1.7.2). When
> starting, the RabbitMQ server will detect the existence of an old
> database and will move it to a backup location, before creating a
> fresh, empty database, and will log a warning. If your RabbitMQ
> installation contains important data then we recommend you contact
> support at rabbitmq.com for assistance with the upgrade.
> 
> 
> Important notes on the AMQP 0-9-1 semantic changes
> ==================================================
> 
> This release incorporates a number of semantic changes to the broker
> behaviour which bring the broker more in-line with the AMQP 0-9-1
> specification. We don't think any of these changes are going to be a
> big problem for anyone, and will probably be irrelevant for most
> people. In almost all cases they're tightening up or tidying up edge
> cases where the 0-8 spec was incomplete or specified something
> unhelpful. However, it's probably worth reading the list below to make
> absolutely sure you're not depending on any of our existing weird
> behaviour.
> 
> 
> Reuse of delivery tags
> ----------------------
> 
> In previous versions of RabbitMQ, you could ack the same message with
> the same delivery tag multiple times. In 1.8.0 this will cause a
> not-found exception. Note that if a message is redelivered for any
> reason it will get a new delivery tag so you can ack it again.
> 
> 
> Exchange equivalence
> --------------------
> 
> In previous versions of RabbitMQ you could actively declare an
> exchange with one set of durable and auto-delete parameters, then
> actively declare it again with different parameters and get the same
> exchange back. This now causes a precondition_failed exception, as it
> would if the type does not match. Note that with the old behaviour the
> exchange did not actually change to match the new parameters; you just
> got back something that was not what you asked for.
> 
> In previous versions, when passively declaring an exchange, the type
> parameter was checked (but not the durable and auto-delete
> parameters).  Now only the name is checked. Passive declaration cannot
> create an exchange, and exchanges are only identified by their
> name. Therefore it does not make sense to require the other parameters
> of exchange.declare to match the exchange declaration in the passive
> case.
> 
> 
> Queue equivalence
> -----------------
> 
> Similarly, when actively redeclaring a queue you could vary the
> durable and auto-delete parameters and get back a queue which did not
> match what you asked for. Again, this is now causes a
> precondition_failed exception.  Likewise, passive declaration of
> queues only needs to match on the queue name, not any other
> parameters.
> 
> 
> Purging unacknowledged messages
> -------------------------------
> 
> When queue.purge is called, messages which had been send but not
> acknowledged used to be purged. Now they are not. This makes much more
> sense as consumers from a queue may have no idea whether or not a
> queue has been purged by some other client.
> 
> 
> Binding durable queues to transient exchanges
> ---------------------------------------------
> 
> This used not to be permitted. Now it is. The binding is considered
> transient.
> 
> 
> Queue exclusivity enforcement
> -----------------------------
> 
> In previous versions of RabbitMQ, an exclusive queue could still be
> accessed by other connections for (un)binding or basic.get. This is now
> not permitted.
> 
> Also, an exclusive queue would continue to exist for a short time after
> the connection was closed. It's now deleted while the connection is
> being closed (assuming that's happening in an orderly manner).
> _______________________________________________
> rabbitmq-discuss mailing list
> rabbitmq-discuss at lists.rabbitmq.com
> http://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss


From matthew at rabbitmq.com  Wed Jun 16 16:55:01 2010
From: matthew at rabbitmq.com (Matthew Sackman)
Date: Wed, 16 Jun 2010 16:55:01 +0100
Subject: [rabbitmq-discuss] RabbitMQ 1.8.0 release
In-Reply-To: <9A0230F0-96B1-46ED-91A4-B9066380D79D@hypotheticalabs.com>
References: <20100616151011.GC27240@rabbitmq.com>
	<9A0230F0-96B1-46ED-91A4-B9066380D79D@hypotheticalabs.com>
Message-ID: <20100616155501.GH27240@rabbitmq.com>

On Wed, Jun 16, 2010 at 11:52:58AM -0400, Kevin A. Smith wrote:
> I recently had some issues with Maven and Sonatype during the last Riak release. If you're seeing bad checksum errors when attempting to close a staging repo then you need to update Maven. There was a bug which was apparently triggered by some infrastructure updates Sonatype did recently.

No, it's not that. It's more that we're just finding we can't upload at
all today - it's just endlessly timingout, giving gateway timeout
errors. Odd - it was working a couple of days ago when we did the stage
release. Hopefully it'll just start working again soon...

Matthew

From matthew at rabbitmq.com  Wed Jun 16 17:19:44 2010
From: matthew at rabbitmq.com (Matthew Sackman)
Date: Wed, 16 Jun 2010 17:19:44 +0100
Subject: [rabbitmq-discuss] RabbitMQ 1.8.0 release
In-Reply-To: <AANLkTinx5mTDUmcM1ggRyu-3VvSTqxPjMoydTNBwcNT5@mail.gmail.com>
References: <20100616151743.GE27240@rabbitmq.com>
	<AANLkTikzUH2hULlCOV98dqCqy5uYw2SciA71tp7qNuR4@mail.gmail.com>
	<AANLkTilaS4DF4AfPGmx1uMpX2b5oeiSp4wXM1sZpakyO@mail.gmail.com>
	<AANLkTinx5mTDUmcM1ggRyu-3VvSTqxPjMoydTNBwcNT5@mail.gmail.com>
Message-ID: <20100616161943.GA16654@rabbitmq.com>

On Wed, Jun 16, 2010 at 12:02:08PM -0400, Ilya Grigorik wrote:
> One of our rabbit servers is ~7GB RAM, and I know that if we push over 250K
> messages into it (heavy messages), and the server hits swap, the server
> starts crawling.. to the tune of being able to get only a few messages a
> second (out). Meaning, we need to nuke the entire queue to bring the server
> back to functional.

You need to be using the new persister branch - compile from source, but
set the server to use branch "bug21673". The raison d'?tre of the new
persister is to solve problems such as the one you describe.

Matthew

From alexis at rabbitmq.com  Wed Jun 16 17:22:28 2010
From: alexis at rabbitmq.com (Alexis Richardson)
Date: Wed, 16 Jun 2010 17:22:28 +0100
Subject: [rabbitmq-discuss] RabbitMQ 1.8.0 release
In-Reply-To: <20100616161943.GA16654@rabbitmq.com>
References: <20100616151743.GE27240@rabbitmq.com>
	<AANLkTikzUH2hULlCOV98dqCqy5uYw2SciA71tp7qNuR4@mail.gmail.com>
	<AANLkTilaS4DF4AfPGmx1uMpX2b5oeiSp4wXM1sZpakyO@mail.gmail.com>
	<AANLkTinx5mTDUmcM1ggRyu-3VvSTqxPjMoydTNBwcNT5@mail.gmail.com>
	<20100616161943.GA16654@rabbitmq.com>
Message-ID: <AANLkTimr_eFhao-B5cpo_abuFFZHUVZpVVjjTwc4_gC_@mail.gmail.com>

Ilya

Separately, I am very interested in your thoughts on management
support for MySQL...

alexis

On Wed, Jun 16, 2010 at 5:19 PM, Matthew Sackman <matthew at rabbitmq.com> wrote:
> On Wed, Jun 16, 2010 at 12:02:08PM -0400, Ilya Grigorik wrote:
>> One of our rabbit servers is ~7GB RAM, and I know that if we push over 250K
>> messages into it (heavy messages), and the server hits swap, the server
>> starts crawling.. to the tune of being able to get only a few messages a
>> second (out). Meaning, we need to nuke the entire queue to bring the server
>> back to functional.
>
> You need to be using the new persister branch - compile from source, but
> set the server to use branch "bug21673". The raison d'?tre of the new
> persister is to solve problems such as the one you describe.
>
> Matthew
> _______________________________________________
> rabbitmq-discuss mailing list
> rabbitmq-discuss at lists.rabbitmq.com
> http://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss
>

From matthias at rabbitmq.com  Wed Jun 16 17:23:39 2010
From: matthias at rabbitmq.com (Matthias Radestock)
Date: Wed, 16 Jun 2010 17:23:39 +0100
Subject: [rabbitmq-discuss] Pluggable Authentication back ends?
In-Reply-To: <AANLkTikQKtHNlUL0P3kF7EriQyrJ4oq3vJkIGqmEnJV6@mail.gmail.com>
References: <AANLkTikQKtHNlUL0P3kF7EriQyrJ4oq3vJkIGqmEnJV6@mail.gmail.com>
Message-ID: <4C18FA8B.4010802@rabbitmq.com>

Scott,

On 16/06/10 16:49, Scott Brooks wrote:
> First off congratulations on 1.8.0.
>
> Secondly I was looking through the source trying to find a way to
> extend the authentication code and it looks like there isn't really
> any way to do it as a plugin.
>
> Ideally such a system would operate something like this.
> 1: Authenticate against rabbits built in user list.
> 2: If the user is not found, map over a configurable list of
> gen_server names calling into it with a standard set of messages the
> gen_server would have to accept.
> 3: In that users state store which backend authorized them so it can
> return to that when needing to check permissions, etc.
>
> Then I could write a plugin that would create an auth exchange that it
> could send auth requests to and the equivalent application bound do
> that exchange replying with auth ok, fail, etc.
>
> That would let me lookup and auth against my users database without
> having to either share a public username and password, or try and sync
> the two databases.
>
> Thoughts?

Ben Hood at LShift (cc'ed) has been looking into something very much 
like this for a client project. I don't think that project has started 
yet, but he may be able to share his thoughts on this subject with you. 
I reckon the changes required to the rabbit core would be very small. So 
patches are welcome.

Caveat: I wouldn't go anywhere near permission checks just yet; things 
get very complicated very quickly if you do, so I'd just focus on 
authentication and leave authorisation as is. Also, I'd start with just 
being able to specify a single authentication module - that's how all 
the other pluggable things work, i.e. one tells rabbit which module to 
use for a certain piece of functionality.


Matthias.

From scott at beamdog.com  Wed Jun 16 17:32:16 2010
From: scott at beamdog.com (Scott Brooks)
Date: Wed, 16 Jun 2010 10:32:16 -0600
Subject: [rabbitmq-discuss] Pluggable Authentication back ends?
In-Reply-To: <4C18FA8B.4010802@rabbitmq.com>
References: <AANLkTikQKtHNlUL0P3kF7EriQyrJ4oq3vJkIGqmEnJV6@mail.gmail.com>
	<4C18FA8B.4010802@rabbitmq.com>
Message-ID: <AANLkTiky59meMpGYrpG8PQ1HAoMlRZZdCCncoJOMZ7Dt@mail.gmail.com>

Yeah, when I was poking around I noticed that it's a pretty small
number of places that it would change.

I'll play around with it a bit and see what I come up with.

Scott

On Wed, Jun 16, 2010 at 10:23 AM, Matthias Radestock
<matthias at rabbitmq.com> wrote:
> Scott,
>
> On 16/06/10 16:49, Scott Brooks wrote:
>>
>> First off congratulations on 1.8.0.
>>
>> Secondly I was looking through the source trying to find a way to
>> extend the authentication code and it looks like there isn't really
>> any way to do it as a plugin.
>>
>> Ideally such a system would operate something like this.
>> 1: Authenticate against rabbits built in user list.
>> 2: If the user is not found, map over a configurable list of
>> gen_server names calling into it with a standard set of messages the
>> gen_server would have to accept.
>> 3: In that users state store which backend authorized them so it can
>> return to that when needing to check permissions, etc.
>>
>> Then I could write a plugin that would create an auth exchange that it
>> could send auth requests to and the equivalent application bound do
>> that exchange replying with auth ok, fail, etc.
>>
>> That would let me lookup and auth against my users database without
>> having to either share a public username and password, or try and sync
>> the two databases.
>>
>> Thoughts?
>
> Ben Hood at LShift (cc'ed) has been looking into something very much like
> this for a client project. I don't think that project has started yet, but
> he may be able to share his thoughts on this subject with you. I reckon the
> changes required to the rabbit core would be very small. So patches are
> welcome.
>
> Caveat: I wouldn't go anywhere near permission checks just yet; things get
> very complicated very quickly if you do, so I'd just focus on authentication
> and leave authorisation as is. Also, I'd start with just being able to
> specify a single authentication module - that's how all the other pluggable
> things work, i.e. one tells rabbit which module to use for a certain piece
> of functionality.
>
>
> Matthias.
> _______________________________________________
> rabbitmq-discuss mailing list
> rabbitmq-discuss at lists.rabbitmq.com
> http://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss
>

From ilya at postrank.com  Wed Jun 16 17:41:17 2010
From: ilya at postrank.com (Ilya Grigorik)
Date: Wed, 16 Jun 2010 12:41:17 -0400
Subject: [rabbitmq-discuss] RabbitMQ 1.8.0 release
In-Reply-To: <20100616161943.GA16654@rabbitmq.com>
References: <20100616151743.GE27240@rabbitmq.com>
	<AANLkTikzUH2hULlCOV98dqCqy5uYw2SciA71tp7qNuR4@mail.gmail.com> 
	<AANLkTilaS4DF4AfPGmx1uMpX2b5oeiSp4wXM1sZpakyO@mail.gmail.com> 
	<AANLkTinx5mTDUmcM1ggRyu-3VvSTqxPjMoydTNBwcNT5@mail.gmail.com> 
	<20100616161943.GA16654@rabbitmq.com>
Message-ID: <AANLkTinN-E0Z-LUW6eRcu4m1m_6MuEvalyPnnDpumvLj@mail.gmail.com>

Aha, thanks for the tip Matthew.

On Wed, Jun 16, 2010 at 12:19 PM, Matthew Sackman <matthew at rabbitmq.com>wrote:

> On Wed, Jun 16, 2010 at 12:02:08PM -0400, Ilya Grigorik wrote:
> > One of our rabbit servers is ~7GB RAM, and I know that if we push over
> 250K
> > messages into it (heavy messages), and the server hits swap, the server
> > starts crawling.. to the tune of being able to get only a few messages a
> > second (out). Meaning, we need to nuke the entire queue to bring the
> server
> > back to functional.
>
> You need to be using the new persister branch - compile from source, but
> set the server to use branch "bug21673". The raison d'?tre of the new
> persister is to solve problems such as the one you describe.
>
> Matthew
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20100616/c237b847/attachment.htm>

From listuser at codeshrink.com  Wed Jun 16 22:18:02 2010
From: listuser at codeshrink.com (Roaan Vos)
Date: Wed, 16 Jun 2010 23:18:02 +0200
Subject: [rabbitmq-discuss] Config File
Message-ID: <AANLkTinFAnX3dd0VDfCI6_vKiMdorczBn4pfblwfNLMx@mail.gmail.com>

Hi,



Can someone please send me an example of a config file that I can use to
specify (customise) the location of where the log files should go?



Thanks



Roaan
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20100616/786025b5/attachment-0001.htm>

From russell at borogove.org  Thu Jun 17 01:16:59 2010
From: russell at borogove.org (Russell Borogove)
Date: Wed, 16 Jun 2010 17:16:59 -0700
Subject: [rabbitmq-discuss] running rabbitmq-server as a subprocess
Message-ID: <A92DB691-C855-490C-BA03-3660DB5A6798@borogove.org>

I'm working on a client-server system involving multiple distinct services, some of which are provided by rabbitmq, others by web2py web apps. 

For local testing, I have a python script which launches the servers, records their PIDs, and leaves them running until the script is terminated, at which time it sends SIGTERM to each of them. 

Without rabbitmq in the mix, this works fine. Starting rabbitmq with "sudo /path/to/rabbitmq-server -setcookie 123" (via python's subprocess.Popen), I get a tty message indicating the control script has been stopped:
[1]+  Stopped                 ./jazz.py -w -r

And the remaining servers that the control script is supposed to start don't get started.

Is rabbitmq-server in fact suspending its parent process? Is there a way to stop it from doing so? Is there a better way to launch rabbitmq from a script?





From raphael at rightscale.com  Thu Jun 17 02:38:31 2010
From: raphael at rightscale.com (Raphael Simon)
Date: Wed, 16 Jun 2010 18:38:31 -0700
Subject: [rabbitmq-discuss] Publish to queue fails but publish to direct
	exchange works
Message-ID: <AANLkTinEJeAHz__BkHvt6UR4fN6tn9EkIAgvD2p-o__4@mail.gmail.com>

Hi all, we just saw an interesting behavior where messages posted to a queue
did not make it to a client while publishing to the corresponding direct
exchange was working. I'm wondering what can cause this behavior to happen.
Publishing directly to the queue initially worked but "something happened"
and now it seems only messages posted to the exchange make it to the client.
The queue is durable (so is the exchange obviously) and auto-delete. Does
anyone have seen this behavior before?

Thanks!

--
Raphael.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20100616/9e7aaee4/attachment.htm>

From 0x6e6562 at gmail.com  Thu Jun 17 08:17:34 2010
From: 0x6e6562 at gmail.com (Ben Hood)
Date: Thu, 17 Jun 2010 08:17:34 +0100
Subject: [rabbitmq-discuss] Pluggable Authentication back ends?
In-Reply-To: <AANLkTiky59meMpGYrpG8PQ1HAoMlRZZdCCncoJOMZ7Dt@mail.gmail.com>
References: <AANLkTikQKtHNlUL0P3kF7EriQyrJ4oq3vJkIGqmEnJV6@mail.gmail.com>
	<4C18FA8B.4010802@rabbitmq.com>
	<AANLkTiky59meMpGYrpG8PQ1HAoMlRZZdCCncoJOMZ7Dt@mail.gmail.com>
Message-ID: <AANLkTikFDTsNIQdKwUozYFNLYZe0KlnsZCqyBJ-EFucz@mail.gmail.com>

Scott,

On Wed, Jun 16, 2010 at 5:32 PM, Scott Brooks <scott at beamdog.com> wrote:
> Yeah, when I was poking around I noticed that it's a pretty small
> number of places that it would change.
>
> I'll play around with it a bit and see what I come up with.

As Matthias pointed out, somebody who is using Rabbit asked LShift to
propose how Rabbit could be extended to provide the notion of
pluggable authentication. The use case they had in mind was to
delegate authentication to external directory server.

In conjunction with Matthias I've put together a statement of work
that outlines how this could be done, but as yet, I haven't heard any
feedback on the matter.

I shouldn't think that the details of the changes to Rabbit are a
state secret, so I guess I can paraphrase the essence of the proposal
here:

The high level mechanism involves a change to the behaviour of the
access control module in the RabbitMQ server. After this change has
been made, the flow of authentication will be as follows:

- An AMQP client will perform the standard protocol authentication challenge.
- RabbitMQ offers the client an AMQPLAIN SASL challenge, which
requires the client to provide a username and password.
- Should the supplied username match a user that is currently
configured in the RabbitMQ user database, then the authentication will
be performed against the credentials registered in the internal
database.
- Should the supplied username not match an internally configured
user, then the the access control module will delegate the
authentication to an external provider via an RPC over AMQP. If an
external provider responds positively to the username-password
challenge within a specified period of time, then the AMQP peer will
be considered to be authenticated for the duration of the connection
that the client maintains with the server.
- In all other cases the server will deny access to the client and
will terminate the handshake in a protocol compliant fashion.

There is also a low level detail implementation plan which was used to
come up with a development estimate, but as yet, the whole thing is
vaporware pending approval from the client.

Hope this is of some use to you,

Cheers,

Ben

From matthias at rabbitmq.com  Thu Jun 17 08:39:05 2010
From: matthias at rabbitmq.com (Matthias Radestock)
Date: Thu, 17 Jun 2010 08:39:05 +0100
Subject: [rabbitmq-discuss] Pluggable Authentication back ends?
In-Reply-To: <AANLkTikFDTsNIQdKwUozYFNLYZe0KlnsZCqyBJ-EFucz@mail.gmail.com>
References: <AANLkTikQKtHNlUL0P3kF7EriQyrJ4oq3vJkIGqmEnJV6@mail.gmail.com>	<4C18FA8B.4010802@rabbitmq.com>	<AANLkTiky59meMpGYrpG8PQ1HAoMlRZZdCCncoJOMZ7Dt@mail.gmail.com>
	<AANLkTikFDTsNIQdKwUozYFNLYZe0KlnsZCqyBJ-EFucz@mail.gmail.com>
Message-ID: <4C19D119.7090008@rabbitmq.com>

Ben, thanks for outlining the plan. Just to clarify a few points for 
Scott ...

Ben Hood wrote:
> The high level mechanism involves a change to the behaviour of the
> access control module in the RabbitMQ server. After this change has
> been made, the flow of authentication will be as follows:
> 
> - An AMQP client will perform the standard protocol authentication challenge.
> - RabbitMQ offers the client an AMQPLAIN SASL challenge, which
> requires the client to provide a username and password.

...which is unchanged from the current behaviour.

> - Should the supplied username match a user that is currently
> configured in the RabbitMQ user database, then the authentication will
> be performed against the credentials registered in the internal
> database.
> - Should the supplied username not match an internally configured
> user, then the the access control module [will delegate the
> authentication to an external provider via an RPC over AMQP].

More precisely, the access control module will invoke a function on a 
pluggable authentication module. It's then up to that module to do 
whatever is required to perform the required authentication, such as the 
RPC-over-AMQP mechanism mentioned.

This keeps the required changes to the server to a minimum, and allows 
different authentication mechanisms to be supplied as plug-ins.

> If an external provider responds positively to the username-password
> challenge within a specified period of time, then the AMQP peer will
> be considered to be authenticated for the duration of the connection
> that the client maintains with the server.
> - In all other cases the server will deny access to the client and
> will terminate the handshake in a protocol compliant fashion.

Yep, that would all be handled by the rabbit-auth-over-amqp plug-in, 
rather than being part of the server core.


Regards,

Matthias.

From techabc at gmail.com  Thu Jun 17 09:17:05 2010
From: techabc at gmail.com (techabc)
Date: Thu, 17 Jun 2010 16:17:05 +0800
Subject: [rabbitmq-discuss] RabbitMQ 1.8.0 release
In-Reply-To: <AANLkTinN-E0Z-LUW6eRcu4m1m_6MuEvalyPnnDpumvLj@mail.gmail.com>
References: <20100616151743.GE27240@rabbitmq.com>
	<AANLkTikzUH2hULlCOV98dqCqy5uYw2SciA71tp7qNuR4@mail.gmail.com>
	<AANLkTilaS4DF4AfPGmx1uMpX2b5oeiSp4wXM1sZpakyO@mail.gmail.com>
	<AANLkTinx5mTDUmcM1ggRyu-3VvSTqxPjMoydTNBwcNT5@mail.gmail.com>
	<20100616161943.GA16654@rabbitmq.com>
	<AANLkTinN-E0Z-LUW6eRcu4m1m_6MuEvalyPnnDpumvLj@mail.gmail.com>
Message-ID: <AANLkTimoZsm0eZQpyROhVZC_fegJmTTq52IzEOCV31vA@mail.gmail.com>

AMQP 1.0 has been voted as "Recommended"
status<http://www.amqp.org/confluence/pages/viewpage.action?pageId=4489238>
.
Dose rabbitMQ follow it? And the Roadmap?

2010/6/17 Ilya Grigorik <ilya at postrank.com>

> Aha, thanks for the tip Matthew.
>
>
> On Wed, Jun 16, 2010 at 12:19 PM, Matthew Sackman <matthew at rabbitmq.com>wrote:
>
>> On Wed, Jun 16, 2010 at 12:02:08PM -0400, Ilya Grigorik wrote:
>> > One of our rabbit servers is ~7GB RAM, and I know that if we push over
>> 250K
>> > messages into it (heavy messages), and the server hits swap, the server
>> > starts crawling.. to the tune of being able to get only a few messages a
>> > second (out). Meaning, we need to nuke the entire queue to bring the
>> server
>> > back to functional.
>>
>> You need to be using the new persister branch - compile from source, but
>> set the server to use branch "bug21673". The raison d'?tre of the new
>> persister is to solve problems such as the one you describe.
>>
>> Matthew
>>
>
>
> _______________________________________________
> rabbitmq-discuss mailing list
> rabbitmq-discuss at lists.rabbitmq.com
> http://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20100617/a45ff0fe/attachment.htm>

From alexis at rabbitmq.com  Thu Jun 17 09:20:02 2010
From: alexis at rabbitmq.com (Alexis Richardson)
Date: Thu, 17 Jun 2010 09:20:02 +0100
Subject: [rabbitmq-discuss] RabbitMQ 1.8.0 release
In-Reply-To: <AANLkTimoZsm0eZQpyROhVZC_fegJmTTq52IzEOCV31vA@mail.gmail.com>
References: <20100616151743.GE27240@rabbitmq.com>
	<AANLkTikzUH2hULlCOV98dqCqy5uYw2SciA71tp7qNuR4@mail.gmail.com>
	<AANLkTilaS4DF4AfPGmx1uMpX2b5oeiSp4wXM1sZpakyO@mail.gmail.com>
	<AANLkTinx5mTDUmcM1ggRyu-3VvSTqxPjMoydTNBwcNT5@mail.gmail.com>
	<20100616161943.GA16654@rabbitmq.com>
	<AANLkTinN-E0Z-LUW6eRcu4m1m_6MuEvalyPnnDpumvLj@mail.gmail.com>
	<AANLkTimoZsm0eZQpyROhVZC_fegJmTTq52IzEOCV31vA@mail.gmail.com>
Message-ID: <AANLkTikas9VneLaQqzWMcFQyGyOymdZ5tYyEGAefT8g9@mail.gmail.com>

On Thu, Jun 17, 2010 at 9:17 AM, techabc <techabc at gmail.com> wrote:
> AMQP 1.0 has been voted as "Recommended" status.
> Dose rabbitMQ follow it? And the Roadmap?

None of the brokers 'follow' AMQP 1.0 'Recommended Draft'.

In time, we hope all brokers will implement a GA / Final version of
AMQP 1-0.  This will take a little while.  Please be patient.

At this stage you can help by volunteering effort around the Draft
spec.  Would you like to do so?

alexis



> 2010/6/17 Ilya Grigorik <ilya at postrank.com>
>>
>> Aha, thanks for the tip Matthew.
>>
>> On Wed, Jun 16, 2010 at 12:19 PM, Matthew Sackman <matthew at rabbitmq.com>
>> wrote:
>>>
>>> On Wed, Jun 16, 2010 at 12:02:08PM -0400, Ilya Grigorik wrote:
>>> > One of our rabbit servers is ~7GB RAM, and I know that if we push over
>>> > 250K
>>> > messages into it (heavy messages), and the server hits swap, the server
>>> > starts crawling.. to the tune of being able to get only a few messages
>>> > a
>>> > second (out). Meaning, we need to nuke the entire queue to bring the
>>> > server
>>> > back to functional.
>>>
>>> You need to be using the new persister branch - compile from source, but
>>> set the server to use branch "bug21673". The raison d'?tre of the new
>>> persister is to solve problems such as the one you describe.
>>>
>>> Matthew
>>
>>
>> _______________________________________________
>> rabbitmq-discuss mailing list
>> rabbitmq-discuss at lists.rabbitmq.com
>> http://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss
>>
>
>
> _______________________________________________
> rabbitmq-discuss mailing list
> rabbitmq-discuss at lists.rabbitmq.com
> http://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss
>
>

From techabc at gmail.com  Thu Jun 17 09:52:55 2010
From: techabc at gmail.com (techabc)
Date: Thu, 17 Jun 2010 16:52:55 +0800
Subject: [rabbitmq-discuss] RabbitMQ 1.8.0 release
In-Reply-To: <AANLkTikas9VneLaQqzWMcFQyGyOymdZ5tYyEGAefT8g9@mail.gmail.com>
References: <20100616151743.GE27240@rabbitmq.com>
	<AANLkTikzUH2hULlCOV98dqCqy5uYw2SciA71tp7qNuR4@mail.gmail.com>
	<AANLkTilaS4DF4AfPGmx1uMpX2b5oeiSp4wXM1sZpakyO@mail.gmail.com>
	<AANLkTinx5mTDUmcM1ggRyu-3VvSTqxPjMoydTNBwcNT5@mail.gmail.com>
	<20100616161943.GA16654@rabbitmq.com>
	<AANLkTinN-E0Z-LUW6eRcu4m1m_6MuEvalyPnnDpumvLj@mail.gmail.com>
	<AANLkTimoZsm0eZQpyROhVZC_fegJmTTq52IzEOCV31vA@mail.gmail.com>
	<AANLkTikas9VneLaQqzWMcFQyGyOymdZ5tYyEGAefT8g9@mail.gmail.com>
Message-ID: <AANLkTinLA8M18J-bTsudlKSLY4J9muwsGTpa4d5RTLOy@mail.gmail.com>

Thanks.
I'll keep an eye on it.

2010/6/17 Alexis Richardson <alexis at rabbitmq.com>

> On Thu, Jun 17, 2010 at 9:17 AM, techabc <techabc at gmail.com> wrote:
> > AMQP 1.0 has been voted as "Recommended" status.
> > Dose rabbitMQ follow it? And the Roadmap?
>
> None of the brokers 'follow' AMQP 1.0 'Recommended Draft'.
>
> In time, we hope all brokers will implement a GA / Final version of
> AMQP 1-0.  This will take a little while.  Please be patient.
>
> At this stage you can help by volunteering effort around the Draft
> spec.  Would you like to do so?
>
> alexis
>
>
>
> > 2010/6/17 Ilya Grigorik <ilya at postrank.com>
> >>
> >> Aha, thanks for the tip Matthew.
> >>
> >> On Wed, Jun 16, 2010 at 12:19 PM, Matthew Sackman <matthew at rabbitmq.com
> >
> >> wrote:
> >>>
> >>> On Wed, Jun 16, 2010 at 12:02:08PM -0400, Ilya Grigorik wrote:
> >>> > One of our rabbit servers is ~7GB RAM, and I know that if we push
> over
> >>> > 250K
> >>> > messages into it (heavy messages), and the server hits swap, the
> server
> >>> > starts crawling.. to the tune of being able to get only a few
> messages
> >>> > a
> >>> > second (out). Meaning, we need to nuke the entire queue to bring the
> >>> > server
> >>> > back to functional.
> >>>
> >>> You need to be using the new persister branch - compile from source,
> but
> >>> set the server to use branch "bug21673". The raison d'?tre of the new
> >>> persister is to solve problems such as the one you describe.
> >>>
> >>> Matthew
> >>
> >>
> >> _______________________________________________
> >> rabbitmq-discuss mailing list
> >> rabbitmq-discuss at lists.rabbitmq.com
> >> http://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss
> >>
> >
> >
> > _______________________________________________
> > rabbitmq-discuss mailing list
> > rabbitmq-discuss at lists.rabbitmq.com
> > http://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss
> >
> >
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20100617/ace5e233/attachment-0001.htm>

From waqas.badar at panasiangroup.com  Thu Jun 17 10:34:29 2010
From: waqas.badar at panasiangroup.com (Waqas Badar)
Date: Thu, 17 Jun 2010 14:34:29 +0500
Subject: [rabbitmq-discuss] Rabbitmq Crash
Message-ID: <1276767269.2386.11.camel@waqas-desktop>

Hello,

We are using rabbitmq. When queues exceed 200000 messages then most of
the time rabbitmq crashes. Even rabbitmq denies to start untill we
delete the mnesia files. Its crash dump is attached with this mail. Has
any one also faced this issue? That is very regularly for us. Any help?

Regards,
Waqas Badar

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20100617/c94fdda8/attachment-0001.htm>
-------------- next part --------------
=erl_crash_dump:0.1
Tue Jun 15 23:30:17 2010
Slogan: init terminating in do_boot ()
System version: Erlang (BEAM) emulator version 5.6.5 [source] [smp:256] [async-threads:30] [kernel-poll:true]
Compiled: Fri Feb 20 05:05:14 2009
Atoms: 9198
=memory
total: 8605816
processes: 664984
processes_used: 640592
system: 7940832
atom: 418225
atom_used: 399729
binary: 48064
code: 3219422
ets: 154928
=hash_table:atom_tab
size: 6421
used: 4850
objs: 9198
depth: 7
=index_table:atom_tab
size: 9216
limit: 1048576
entries: 9198
=hash_table:module_code
size: 197
used: 101
objs: 137
depth: 3
=index_table:module_code
size: 1024
limit: 65536
entries: 137
=hash_table:export_list
size: 3203
used: 2263
objs: 3998
depth: 7
=index_table:export_list
size: 4096
limit: 65536
entries: 3998
=hash_table:secondary_export_table
size: 97
used: 0
objs: 0
depth: 0
=hash_table:process_reg
size: 47
used: 19
objs: 27
depth: 3
=hash_table:fun_table
size: 797
used: 512
objs: 842
depth: 5
=hash_table:node_table
size: 5
used: 2
objs: 2
depth: 1
=hash_table:dist_table
size: 5
used: 2
objs: 2
depth: 1
=allocated_areas
sys_misc: 63444
static: 483328
atom_space: 131088 112640
atom_table: 62629
module_table: 4968
export_table: 29280
register_table: 252
fun_table: 3250
module_refs: 2048
loaded_code: 2933256
dist_table: 2251
node_table: 131
bits_bufs_size: 0
bif_timer: 40100
link_lh: 0
proc: 33668 13844
atom_entry: 224508 224460
export_entry: 193628 193532
module_entry: 5684 5564
reg_proc: 1492 700
monitor_sh: 1644 364
nlink_sh: 4908 2412
proc_list: 28 28
fun_entry: 48532 47524
db_tab: 7732 2996
driver_event_data_state: 28 28
driver_select_data_state: 356 84
=allocator:sys_alloc
option e: true
option m: libc
option tt: 131072
option tp: 0
=allocator:temp_alloc[0]
versions: 2.1 2.2
option e: true
option t: false
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option mbsd: 3
option as: gf
mbcs blocks: 0 135 135
mbcs blocks size: 0 24680 24680
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 1362
temp_free calls: 1362
temp_realloc calls: 4
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[1]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 18 18
mbcs blocks size: 0 65544 65544
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 103
temp_free calls: 103
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[2]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 49 49
mbcs blocks size: 0 10576 10576
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 164
temp_free calls: 164
temp_realloc calls: 2
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[3]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 1 1
mbcs blocks size: 0 1032 1032
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 26
temp_free calls: 26
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[4]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 1 1
mbcs blocks size: 0 1032 1032
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 35
temp_free calls: 35
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[5]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 10 10
mbcs blocks size: 0 5576 5576
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 44
temp_free calls: 44
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[6]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 1 1
mbcs blocks size: 0 1032 1032
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 32
temp_free calls: 32
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[7]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 56 56
mbcs blocks size: 0 10808 10808
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 142
temp_free calls: 142
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[8]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 124 124
mbcs blocks size: 0 19752 19752
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 391
temp_free calls: 391
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[9]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 13 13
mbcs blocks size: 0 65544 65544
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 81
temp_free calls: 81
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[10]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 37 37
mbcs blocks size: 0 7248 7248
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 108
temp_free calls: 108
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[11]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 1 1
mbcs blocks size: 0 1032 1032
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 33
temp_free calls: 33
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[12]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 85 85
mbcs blocks size: 0 19232 19232
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 279
temp_free calls: 279
temp_realloc calls: 1
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[13]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 1 1
mbcs blocks size: 0 1032 1032
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 32
temp_free calls: 32
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[14]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 1 1
mbcs blocks size: 0 1032 1032
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 32
temp_free calls: 32
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[15]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 54 54
mbcs blocks size: 0 12512 12512
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 127
temp_free calls: 127
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[16]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 16 16
mbcs blocks size: 0 6040 6040
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 56
temp_free calls: 56
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[17]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 1 1
mbcs blocks size: 0 1032 1032
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 25
temp_free calls: 25
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[18]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 7 7
mbcs blocks size: 0 6264 6264
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 61
temp_free calls: 61
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[19]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 1 1
mbcs blocks size: 0 1032 1032
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 29
temp_free calls: 29
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[20]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 1 1
mbcs blocks size: 0 1032 1032
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 25
temp_free calls: 25
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[21]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 36 36
mbcs blocks size: 0 9528 9528
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 124
temp_free calls: 124
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[22]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 2 2
mbcs blocks size: 0 1032 1032
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 29
temp_free calls: 29
temp_realloc calls: 2
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[23]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 129 129
mbcs blocks size: 0 22320 22320
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 447
temp_free calls: 447
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[24]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 2 2
mbcs blocks size: 0 1032 1032
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 28
temp_free calls: 28
temp_realloc calls: 1
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[25]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 1 1
mbcs blocks size: 0 1032 1032
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 17
temp_free calls: 17
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[26]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 8 8
mbcs blocks size: 0 17896 17896
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 166
temp_free calls: 166
temp_realloc calls: 2
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[27]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 2 2
mbcs blocks size: 0 1032 1032
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 39
temp_free calls: 39
temp_realloc calls: 2
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[28]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 53 53
mbcs blocks size: 0 13648 13648
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 100
temp_free calls: 100
temp_realloc calls: 1
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[29]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 38 38
mbcs blocks size: 0 13112 13112
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 158
temp_free calls: 158
temp_realloc calls: 1
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[30]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 1 1
mbcs blocks size: 0 1032 1032
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 22
temp_free calls: 22
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[31]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 1 1
mbcs blocks size: 0 1032 1032
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 20
temp_free calls: 20
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[32]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 90 90
mbcs blocks size: 0 56168 56168
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 732
temp_free calls: 732
temp_realloc calls: 1
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[33]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 1 1
mbcs blocks size: 0 1032 1032
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 41
temp_free calls: 41
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[34]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 1 1
mbcs blocks size: 0 1032 1032
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 17
temp_free calls: 17
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[35]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 1 1
mbcs blocks size: 0 1032 1032
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 18
temp_free calls: 18
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[36]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 49 49
mbcs blocks size: 0 13208 13208
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 183
temp_free calls: 183
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[37]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 1 1
mbcs blocks size: 0 1032 1032
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 176
temp_free calls: 176
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[38]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 1 1
mbcs blocks size: 0 1032 1032
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 17
temp_free calls: 17
temp_realloc calls: 2
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[39]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 1 1
mbcs blocks size: 0 1032 1032
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 14
temp_free calls: 14
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[40]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 1 1
mbcs blocks size: 0 1032 1032
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 17
temp_free calls: 17
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[41]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 163 163
mbcs blocks size: 0 33688 33688
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 411
temp_free calls: 411
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[42]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 129 129
mbcs blocks size: 0 23384 23384
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 306
temp_free calls: 306
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[43]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 1 1
mbcs blocks size: 0 1032 1032
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 14
temp_free calls: 14
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[44]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 8 8
mbcs blocks size: 0 8440 8440
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 189
temp_free calls: 189
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[45]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 1 1
mbcs blocks size: 0 1032 1032
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 29
temp_free calls: 29
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[46]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 12 12
mbcs blocks size: 0 4192 4192
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 57
temp_free calls: 57
temp_realloc calls: 1
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[47]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 27 27
mbcs blocks size: 0 7768 7768
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 139
temp_free calls: 139
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[48]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 1 1
mbcs blocks size: 0 1032 1032
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 16
temp_free calls: 16
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[49]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 1 1
mbcs blocks size: 0 1032 1032
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 11
temp_free calls: 11
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[50]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 29 29
mbcs blocks size: 0 7288 7288
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 95
temp_free calls: 95
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[51]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 1 1
mbcs blocks size: 0 1032 1032
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 9
temp_free calls: 9
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[52]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 57 57
mbcs blocks size: 0 9792 9792
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 404
temp_free calls: 404
temp_realloc calls: 2
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[53]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 1 1
mbcs blocks size: 0 1032 1032
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 19
temp_free calls: 19
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[54]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 1 1
mbcs blocks size: 0 1032 1032
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 11
temp_free calls: 11
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[55]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 69 69
mbcs blocks size: 0 12776 12776
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 245
temp_free calls: 245
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[56]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 8 8
mbcs blocks size: 0 8136 8136
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 80
temp_free calls: 80
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[57]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 1 1
mbcs blocks size: 0 1032 1032
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 55
temp_free calls: 55
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[58]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 28 28
mbcs blocks size: 0 8944 8944
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 54
temp_free calls: 54
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[59]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 1 1
mbcs blocks size: 0 1032 1032
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 22
temp_free calls: 22
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[60]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 21 21
mbcs blocks size: 0 8704 8704
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 77
temp_free calls: 77
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[61]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 1 1
mbcs blocks size: 0 1032 1032
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 20
temp_free calls: 20
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[62]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 1 1
mbcs blocks size: 0 1032 1032
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 23
temp_free calls: 23
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[63]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 14 14
mbcs blocks size: 0 6264 6264
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 35
temp_free calls: 35
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[64]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 1 1
mbcs blocks size: 0 1032 1032
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 22
temp_free calls: 22
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[65]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 36 36
mbcs blocks size: 0 7896 7896
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 107
temp_free calls: 107
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[66]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 117 117
mbcs blocks size: 0 27272 27272
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 339
temp_free calls: 339
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[67]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 1 1
mbcs blocks size: 0 1032 1032
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 26
temp_free calls: 26
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[68]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 1 1
mbcs blocks size: 0 1032 1032
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 22
temp_free calls: 22
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[69]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 1 1
mbcs blocks size: 0 1032 1032
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 16
temp_free calls: 16
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[70]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 1 1
mbcs blocks size: 0 1032 1032
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 14
temp_free calls: 14
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[71]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 1 1
mbcs blocks size: 0 1032 1032
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 23
temp_free calls: 23
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[72]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 12 12
mbcs blocks size: 0 4192 4192
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 66
temp_free calls: 66
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[73]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 1 1
mbcs blocks size: 0 1032 1032
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 22
temp_free calls: 22
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[74]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 1 1
mbcs blocks size: 0 1032 1032
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 22
temp_free calls: 22
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[75]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 128 128
mbcs blocks size: 0 18400 18400
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 244
temp_free calls: 244
temp_realloc calls: 1
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[76]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 1 1
mbcs blocks size: 0 1032 1032
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 23
temp_free calls: 23
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[77]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 123 123
mbcs blocks size: 0 17616 17616
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 226
temp_free calls: 226
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[78]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 1 1
mbcs blocks size: 0 1032 1032
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 19
temp_free calls: 19
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[79]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 40 40
mbcs blocks size: 0 7864 7864
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 72
temp_free calls: 72
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[80]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 1 1
mbcs blocks size: 0 1032 1032
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 25
temp_free calls: 25
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[81]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 13 13
mbcs blocks size: 0 5320 5320
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 38
temp_free calls: 38
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[82]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 123 123
mbcs blocks size: 0 38512 38512
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 475
temp_free calls: 475
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[83]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 150 150
mbcs blocks size: 0 19040 19040
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 292
temp_free calls: 292
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[84]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 1 1
mbcs blocks size: 0 1032 1032
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 24
temp_free calls: 24
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[85]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 129 129
mbcs blocks size: 0 14872 14872
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 637
temp_free calls: 637
temp_realloc calls: 3
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[86]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 1 1
mbcs blocks size: 0 1032 1032
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 12
temp_free calls: 12
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[87]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 60 60
mbcs blocks size: 0 9584 9584
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 125
temp_free calls: 125
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[88]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 1 1
mbcs blocks size: 0 1032 1032
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 17
temp_free calls: 17
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[89]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 222 222
mbcs blocks size: 0 40880 40880
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 457
temp_free calls: 457
temp_realloc calls: 1
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[90]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 1 1
mbcs blocks size: 0 1032 1032
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 19
temp_free calls: 19
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[91]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 18 18
mbcs blocks size: 0 5080 5080
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 96
temp_free calls: 96
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[92]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 1 1
mbcs blocks size: 0 1032 1032
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 25
temp_free calls: 25
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[93]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 148 148
mbcs blocks size: 0 22200 22200
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 298
temp_free calls: 298
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[94]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 1 1
mbcs blocks size: 0 1032 1032
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 20
temp_free calls: 20
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[95]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 53 53
mbcs blocks size: 0 10672 10672
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 156
temp_free calls: 156
temp_realloc calls: 1
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[96]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 1 1
mbcs blocks size: 0 1032 1032
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 25
temp_free calls: 25
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[97]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 52 52
mbcs blocks size: 0 8824 8824
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 122
temp_free calls: 122
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[98]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 1 1
mbcs blocks size: 0 1032 1032
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 13
temp_free calls: 13
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[99]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 15 15
mbcs blocks size: 0 5792 5792
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 41
temp_free calls: 41
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[100]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 60 60
mbcs blocks size: 0 11768 11768
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 192
temp_free calls: 192
temp_realloc calls: 1
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[101]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 1 1
mbcs blocks size: 0 1032 1032
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 23
temp_free calls: 23
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[102]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 1 1
mbcs blocks size: 0 1032 1032
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 26
temp_free calls: 26
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[103]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 49 49
mbcs blocks size: 0 9816 9816
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 168
temp_free calls: 168
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[104]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 10 10
mbcs blocks size: 0 6696 6696
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 44
temp_free calls: 44
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[105]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 189 189
mbcs blocks size: 0 28440 28440
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 502
temp_free calls: 502
temp_realloc calls: 1
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[106]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 1 1
mbcs blocks size: 0 1032 1032
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 20
temp_free calls: 20
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[107]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 1 1
mbcs blocks size: 0 1032 1032
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 22
temp_free calls: 22
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[108]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 1 1
mbcs blocks size: 0 8200 8200
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 16
temp_free calls: 16
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[109]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 1 1
mbcs blocks size: 0 1032 1032
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 65
temp_free calls: 65
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[110]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 346 346
mbcs blocks size: 0 48296 48296
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 698
temp_free calls: 698
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[111]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 1 1
mbcs blocks size: 0 1032 1032
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 23
temp_free calls: 23
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[112]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 11 11
mbcs blocks size: 0 5512 5512
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 31
temp_free calls: 31
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[113]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 1 1
mbcs blocks size: 0 1032 1032
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 19
temp_free calls: 19
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[114]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 13 13
mbcs blocks size: 0 8200 8200
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 49
temp_free calls: 49
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[115]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 1 1
mbcs blocks size: 0 8200 8200
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 15
temp_free calls: 15
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[116]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 1 1
mbcs blocks size: 0 1032 1032
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 14
temp_free calls: 14
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[117]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 26 26
mbcs blocks size: 0 5688 5688
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 71
temp_free calls: 71
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[118]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 1 1
mbcs blocks size: 0 1032 1032
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 20
temp_free calls: 20
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[119]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 1 1
mbcs blocks size: 0 1032 1032
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 13
temp_free calls: 13
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[120]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 1 1
mbcs blocks size: 0 1032 1032
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 16
temp_free calls: 16
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[121]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 149 149
mbcs blocks size: 0 22184 22184
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 300
temp_free calls: 300
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[122]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 51 51
mbcs blocks size: 0 12984 12984
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 297
temp_free calls: 297
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[123]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 129 129
mbcs blocks size: 0 22400 22400
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 293
temp_free calls: 293
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[124]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 1 1
mbcs blocks size: 0 1032 1032
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 16
temp_free calls: 16
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[125]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 27 27
mbcs blocks size: 0 8344 8344
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 114
temp_free calls: 114
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[126]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 1 1
mbcs blocks size: 0 1032 1032
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 13
temp_free calls: 13
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[127]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 1 1
mbcs blocks size: 0 1032 1032
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 16
temp_free calls: 16
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[128]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 33 33
mbcs blocks size: 0 9480 9480
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 67
temp_free calls: 67
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[129]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 5 5
mbcs blocks size: 0 4344 4344
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 26
temp_free calls: 26
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[130]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 115 115
mbcs blocks size: 0 21376 21376
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 452
temp_free calls: 452
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[131]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 1 1
mbcs blocks size: 0 1032 1032
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 11
temp_free calls: 11
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[132]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 6 6
mbcs blocks size: 0 5280 5280
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 23
temp_free calls: 23
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[133]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 51 51
mbcs blocks size: 0 9432 9432
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 146
temp_free calls: 146
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[134]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 77 77
mbcs blocks size: 0 15704 15704
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 180
temp_free calls: 180
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[135]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 7 7
mbcs blocks size: 0 5176 5176
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 60
temp_free calls: 60
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[136]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 1 1
mbcs blocks size: 0 1032 1032
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 14
temp_free calls: 14
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[137]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 22 22
mbcs blocks size: 0 8176 8176
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 58
temp_free calls: 58
temp_realloc calls: 2
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[138]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 8 8
mbcs blocks size: 0 5072 5072
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 30
temp_free calls: 30
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[139]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 214 214
mbcs blocks size: 0 40112 40112
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 437
temp_free calls: 437
temp_realloc calls: 1
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[140]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 78 78
mbcs blocks size: 0 18120 18120
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 325
temp_free calls: 325
temp_realloc calls: 1
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[141]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 1 1
mbcs blocks size: 0 1032 1032
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 95
temp_free calls: 95
temp_realloc calls: 1
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[142]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 1 1
mbcs blocks size: 0 1032 1032
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 10
temp_free calls: 10
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[143]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 8 8
mbcs blocks size: 0 6888 6888
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 35
temp_free calls: 35
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[144]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 135 135
mbcs blocks size: 0 31832 31832
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 311
temp_free calls: 311
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[145]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 8 8
mbcs blocks size: 0 10808 10808
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 68
temp_free calls: 68
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[146]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 1 1
mbcs blocks size: 0 1032 1032
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 17
temp_free calls: 17
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[147]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 1 1
mbcs blocks size: 0 1032 1032
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 20
temp_free calls: 20
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[148]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 22 22
mbcs blocks size: 0 7656 7656
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 103
temp_free calls: 103
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[149]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 10 10
mbcs blocks size: 0 4120 4120
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 49
temp_free calls: 49
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[150]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 8 8
mbcs blocks size: 0 4744 4744
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 50
temp_free calls: 50
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[151]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 1 1
mbcs blocks size: 0 1032 1032
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 13
temp_free calls: 13
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[152]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 14 14
mbcs blocks size: 0 5232 5232
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 98
temp_free calls: 98
temp_realloc calls: 1
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[153]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 1 1
mbcs blocks size: 0 1032 1032
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 14
temp_free calls: 14
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[154]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 7 7
mbcs blocks size: 0 4456 4456
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 67
temp_free calls: 67
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[155]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 8 8
mbcs blocks size: 0 11280 11280
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 149
temp_free calls: 149
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[156]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 1 1
mbcs blocks size: 0 1032 1032
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 15
temp_free calls: 15
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[157]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 1 1
mbcs blocks size: 0 1032 1032
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 16
temp_free calls: 16
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[158]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 8 8
mbcs blocks size: 0 5776 5776
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 56
temp_free calls: 56
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[159]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 108 108
mbcs blocks size: 0 16328 16328
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 226
temp_free calls: 226
temp_realloc calls: 1
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[160]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 1 1
mbcs blocks size: 0 1032 1032
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 7
temp_free calls: 7
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[161]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 1 1
mbcs blocks size: 0 1032 1032
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 16
temp_free calls: 16
temp_realloc calls: 3
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[162]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 1 1
mbcs blocks size: 0 1032 1032
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 15
temp_free calls: 15
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[163]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 1 1
mbcs blocks size: 0 1032 1032
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 15
temp_free calls: 15
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[164]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 46 46
mbcs blocks size: 0 11136 11136
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 112
temp_free calls: 112
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[165]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 1 1
mbcs blocks size: 0 1032 1032
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 7
temp_free calls: 7
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[166]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 8 8
mbcs blocks size: 0 10984 10984
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 100
temp_free calls: 100
temp_realloc calls: 6
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[167]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 34 34
mbcs blocks size: 0 8536 8536
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 101
temp_free calls: 101
temp_realloc calls: 6
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[168]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 1 1
mbcs blocks size: 0 1032 1032
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 28
temp_free calls: 28
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[169]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 1 1
mbcs blocks size: 0 1032 1032
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 6
temp_free calls: 6
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[170]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 49 49
mbcs blocks size: 0 9208 9208
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 129
temp_free calls: 129
temp_realloc calls: 1
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[171]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 1 1
mbcs blocks size: 0 1032 1032
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 25
temp_free calls: 25
temp_realloc calls: 2
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[172]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 1 1
mbcs blocks size: 0 1032 1032
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 45
temp_free calls: 45
temp_realloc calls: 9
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[173]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 1 1
mbcs blocks size: 0 1032 1032
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 5
temp_free calls: 5
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[174]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 82 82
mbcs blocks size: 0 17472 17472
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 192
temp_free calls: 192
temp_realloc calls: 2
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[175]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 1 1
mbcs blocks size: 0 1032 1032
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 7
temp_free calls: 7
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[176]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 1 1
mbcs blocks size: 0 1032 1032
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 14
temp_free calls: 14
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[177]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 1 1
mbcs blocks size: 0 1032 1032
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 39
temp_free calls: 39
temp_realloc calls: 8
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[178]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 1 1
mbcs blocks size: 0 1032 1032
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 245
temp_free calls: 245
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[179]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 1 1
mbcs blocks size: 0 1032 1032
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 17
temp_free calls: 17
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[180]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 57 57
mbcs blocks size: 0 19568 19568
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 245
temp_free calls: 245
temp_realloc calls: 1
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[181]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 23 23
mbcs blocks size: 0 7840 7840
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 152
temp_free calls: 152
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[182]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 1 1
mbcs blocks size: 0 1032 1032
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 70
temp_free calls: 70
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[183]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 25 25
mbcs blocks size: 0 12200 12200
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 229
temp_free calls: 229
temp_realloc calls: 1
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[184]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 1 1
mbcs blocks size: 0 1032 1032
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 18
temp_free calls: 18
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[185]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 1 1
mbcs blocks size: 0 1032 1032
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 15
temp_free calls: 15
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[186]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 241 241
mbcs blocks size: 0 43656 43656
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 474
temp_free calls: 474
temp_realloc calls: 1
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[187]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 176 176
mbcs blocks size: 0 29752 29752
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 280
temp_free calls: 280
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[188]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 1 1
mbcs blocks size: 0 1032 1032
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 32
temp_free calls: 32
temp_realloc calls: 4
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[189]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 1 1
mbcs blocks size: 0 1032 1032
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 17
temp_free calls: 17
temp_realloc calls: 1
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[190]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 1 1
mbcs blocks size: 0 1032 1032
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 14
temp_free calls: 14
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[191]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 1 1
mbcs blocks size: 0 1032 1032
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 16
temp_free calls: 16
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[192]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 13 13
mbcs blocks size: 0 5664 5664
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 44
temp_free calls: 44
temp_realloc calls: 2
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[193]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 1 1
mbcs blocks size: 0 1032 1032
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 35
temp_free calls: 35
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[194]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 1 1
mbcs blocks size: 0 1032 1032
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 8
temp_free calls: 8
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[195]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 1 1
mbcs blocks size: 0 1032 1032
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 7
temp_free calls: 7
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[196]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 31 31
mbcs blocks size: 0 15272 15272
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 312
temp_free calls: 312
temp_realloc calls: 2
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[197]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 1 1
mbcs blocks size: 0 1032 1032
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 7
temp_free calls: 7
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[198]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 93 93
mbcs blocks size: 0 18128 18128
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 233
temp_free calls: 233
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[199]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 171 171
mbcs blocks size: 0 26416 26416
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 310
temp_free calls: 310
temp_realloc calls: 1
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[200]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 5 5
mbcs blocks size: 0 3920 3920
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 40
temp_free calls: 40
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[201]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 1 1
mbcs blocks size: 0 1032 1032
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 18
temp_free calls: 18
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[202]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 8 8
mbcs blocks size: 0 5176 5176
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 30
temp_free calls: 30
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[203]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 1 1
mbcs blocks size: 0 1032 1032
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 10
temp_free calls: 10
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[204]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 1 1
mbcs blocks size: 0 1032 1032
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 17
temp_free calls: 17
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[205]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 1 1
mbcs blocks size: 0 1032 1032
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 8
temp_free calls: 8
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[206]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 1 1
mbcs blocks size: 0 1032 1032
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 56
temp_free calls: 56
temp_realloc calls: 2
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[207]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 1 1
mbcs blocks size: 0 1032 1032
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 38
temp_free calls: 38
temp_realloc calls: 1
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[208]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 1 1
mbcs blocks size: 0 1032 1032
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 10
temp_free calls: 10
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[209]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 7 7
mbcs blocks size: 0 6880 6880
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 52
temp_free calls: 52
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[210]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 1 1
mbcs blocks size: 0 1032 1032
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 9
temp_free calls: 9
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[211]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 1 1
mbcs blocks size: 0 1032 1032
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 5
temp_free calls: 5
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[212]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 63 63
mbcs blocks size: 0 14144 14144
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 256
temp_free calls: 256
temp_realloc calls: 3
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[213]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 1 1
mbcs blocks size: 0 1032 1032
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 7
temp_free calls: 7
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[214]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 1 1
mbcs blocks size: 0 1032 1032
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 6
temp_free calls: 6
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[215]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 1 1
mbcs blocks size: 0 1032 1032
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 36
temp_free calls: 36
temp_realloc calls: 1
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[216]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 1 1
mbcs blocks size: 0 1032 1032
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 6
temp_free calls: 6
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[217]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 1 1
mbcs blocks size: 0 1032 1032
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 6
temp_free calls: 6
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[218]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 1 1
mbcs blocks size: 0 1032 1032
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 19
temp_free calls: 19
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[219]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 1 1
mbcs blocks size: 0 1032 1032
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 18
temp_free calls: 18
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[220]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 37 37
mbcs blocks size: 0 7872 7872
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 293
temp_free calls: 293
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[221]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 1 1
mbcs blocks size: 0 1032 1032
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 14
temp_free calls: 14
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[222]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 13 13
mbcs blocks size: 0 9680 9680
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 90
temp_free calls: 90
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[223]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 1 1
mbcs blocks size: 0 1032 1032
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 15
temp_free calls: 15
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[224]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 1 1
mbcs blocks size: 0 1032 1032
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 12
temp_free calls: 12
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[225]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 1 1
mbcs blocks size: 0 1032 1032
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 7
temp_free calls: 7
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[226]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 1 1
mbcs blocks size: 0 1032 1032
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 17
temp_free calls: 17
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[227]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 1 1
mbcs blocks size: 0 1032 1032
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 16
temp_free calls: 16
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[228]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 1 1
mbcs blocks size: 0 1032 1032
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 11
temp_free calls: 11
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[229]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 28 28
mbcs blocks size: 0 7968 7968
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 70
temp_free calls: 70
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[230]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 1 1
mbcs blocks size: 0 1032 1032
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 37
temp_free calls: 37
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[231]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 1 1
mbcs blocks size: 0 1032 1032
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 32
temp_free calls: 32
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[232]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 1 1
mbcs blocks size: 0 8200 8200
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 155
temp_free calls: 155
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[233]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 26 26
mbcs blocks size: 0 8304 8304
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 79
temp_free calls: 79
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[234]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 5 5
mbcs blocks size: 0 4328 4328
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 21
temp_free calls: 21
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[235]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 1 1
mbcs blocks size: 0 1032 1032
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 14
temp_free calls: 14
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[236]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 1 1
mbcs blocks size: 0 1032 1032
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 30
temp_free calls: 30
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[237]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 2 2
mbcs blocks size: 0 1032 1032
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 29
temp_free calls: 29
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[238]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 1 1
mbcs blocks size: 0 1032 1032
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 25
temp_free calls: 25
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[239]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 1 1
mbcs blocks size: 0 1032 1032
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 39
temp_free calls: 39
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[240]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 1 1
mbcs blocks size: 0 1032 1032
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 30
temp_free calls: 30
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[241]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 1 1
mbcs blocks size: 0 1032 1032
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 25
temp_free calls: 25
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[242]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 1 1
mbcs blocks size: 0 1032 1032
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 30
temp_free calls: 30
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[243]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 8 8
mbcs blocks size: 0 4176 4176
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 42
temp_free calls: 42
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[244]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 1 1
mbcs blocks size: 0 1032 1032
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 36
temp_free calls: 36
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[245]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 1 1
mbcs blocks size: 0 1032 1032
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 20
temp_free calls: 20
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[246]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 13 13
mbcs blocks size: 0 10112 10112
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 60
temp_free calls: 60
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[247]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 2 2
mbcs blocks size: 0 1032 1032
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 23
temp_free calls: 23
temp_realloc calls: 1
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[248]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 1 1
mbcs blocks size: 0 1032 1032
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 19
temp_free calls: 19
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[249]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 1 1
mbcs blocks size: 0 8200 8200
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 35
temp_free calls: 35
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[250]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 1 1
mbcs blocks size: 0 1032 1032
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 37
temp_free calls: 37
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[251]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 1 1
mbcs blocks size: 0 1032 1032
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 24
temp_free calls: 24
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[252]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 1 1
mbcs blocks size: 0 1032 1032
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 30
temp_free calls: 30
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[253]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 1 1
mbcs blocks size: 0 1032 1032
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 32
temp_free calls: 32
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[254]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 1 1
mbcs blocks size: 0 1032 1032
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 28
temp_free calls: 28
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[255]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 1 1
mbcs blocks size: 0 1032 1032
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 30
temp_free calls: 30
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[256]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 1 1
mbcs blocks size: 0 1032 1032
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 24
temp_free calls: 24
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:sl_alloc[1]
versions: 2.1 2.2
option e: true
option t: 16
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 80
option rsbcmt: 80
option rmbcmt: 50
option mmbcs: 32768
option mmsbc: 256
option mmmbc: 3
option lmbcs: 5242880
option smbcs: 262144
option mbcgs: 10
option mbsd: 3
option as: gf
mbcs blocks: 0 37 37
mbcs blocks size: 0 888 888
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 32792 32792 32792
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 32792
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
sl_alloc calls: 318
sl_free calls: 318
sl_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:sl_alloc[2]
versions: 2.1 2.2
option e: true
option t: 16
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 80
option rsbcmt: 80
option rmbcmt: 50
option mmbcs: 32768
option mmsbc: 256
option mmmbc: 3
option lmbcs: 5242880
option smbcs: 262144
option mbcgs: 10
option mbsd: 3
option as: gf
mbcs blocks: 0 15 15
mbcs blocks size: 0 504 504
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 32792 32792 32792
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 32792
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
sl_alloc calls: 184
sl_free calls: 184
sl_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:sl_alloc[3]
versions: 2.1 2.2
option e: true
option t: 16
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 80
option rsbcmt: 80
option rmbcmt: 50
option mmbcs: 32768
option mmsbc: 256
option mmmbc: 3
option lmbcs: 5242880
option smbcs: 262144
option mbcgs: 10
option mbsd: 3
option as: gf
mbcs blocks: 0 18 18
mbcs blocks size: 0 432 432
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 32792 32792 32792
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 32792
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
sl_alloc calls: 327
sl_free calls: 327
sl_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:sl_alloc[4]
versions: 2.1 2.2
option e: true
option t: 16
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 80
option rsbcmt: 80
option rmbcmt: 50
option mmbcs: 32768
option mmsbc: 256
option mmmbc: 3
option lmbcs: 5242880
option smbcs: 262144
option mbcgs: 10
option mbsd: 3
option as: gf
mbcs blocks: 0 21 21
mbcs blocks size: 0 504 504
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 32792 32792 32792
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 32792
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
sl_alloc calls: 330
sl_free calls: 330
sl_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:sl_alloc[5]
versions: 2.1 2.2
option e: true
option t: 16
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 80
option rsbcmt: 80
option rmbcmt: 50
option mmbcs: 32768
option mmsbc: 256
option mmmbc: 3
option lmbcs: 5242880
option smbcs: 262144
option mbcgs: 10
option mbsd: 3
option as: gf
mbcs blocks: 0 8 8
mbcs blocks size: 0 192 192
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 32792 32792 32792
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 32792
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
sl_alloc calls: 222
sl_free calls: 222
sl_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:sl_alloc[6]
versions: 2.1 2.2
option e: true
option t: 16
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 80
option rsbcmt: 80
option rmbcmt: 50
option mmbcs: 32768
option mmsbc: 256
option mmmbc: 3
option lmbcs: 5242880
option smbcs: 262144
option mbcgs: 10
option mbsd: 3
option as: gf
mbcs blocks: 0 7 7
mbcs blocks size: 0 168 168
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 32792 32792 32792
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 32792
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
sl_alloc calls: 226
sl_free calls: 226
sl_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:sl_alloc[7]
versions: 2.1 2.2
option e: true
option t: 16
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 80
option rsbcmt: 80
option rmbcmt: 50
option mmbcs: 32768
option mmsbc: 256
option mmmbc: 3
option lmbcs: 5242880
option smbcs: 262144
option mbcgs: 10
option mbsd: 3
option as: gf
mbcs blocks: 0 18 18
mbcs blocks size: 0 432 432
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 32792 32792 32792
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 32792
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
sl_alloc calls: 284
sl_free calls: 284
sl_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:sl_alloc[8]
versions: 2.1 2.2
option e: true
option t: 16
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 80
option rsbcmt: 80
option rmbcmt: 50
option mmbcs: 32768
option mmsbc: 256
option mmmbc: 3
option lmbcs: 5242880
option smbcs: 262144
option mbcgs: 10
option mbsd: 3
option as: gf
mbcs blocks: 1 5 5
mbcs blocks size: 24 128 128
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 32792 32792 32792
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 32792
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
sl_alloc calls: 222
sl_free calls: 221
sl_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:sl_alloc[9]
versions: 2.1 2.2
option e: true
option t: 16
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 80
option rsbcmt: 80
option rmbcmt: 50
option mmbcs: 32768
option mmsbc: 256
option mmmbc: 3
option lmbcs: 5242880
option smbcs: 262144
option mbcgs: 10
option mbsd: 3
option as: gf
mbcs blocks: 0 32 32
mbcs blocks size: 0 768 768
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 32792 32792 32792
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 32792
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
sl_alloc calls: 315
sl_free calls: 315
sl_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:sl_alloc[10]
versions: 2.1 2.2
option e: true
option t: 16
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 80
option rsbcmt: 80
option rmbcmt: 50
option mmbcs: 32768
option mmsbc: 256
option mmmbc: 3
option lmbcs: 5242880
option smbcs: 262144
option mbcgs: 10
option mbsd: 3
option as: gf
mbcs blocks: 0 39 39
mbcs blocks size: 0 936 936
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 32792 32792 32792
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 32792
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
sl_alloc calls: 235
sl_free calls: 235
sl_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:sl_alloc[11]
versions: 2.1 2.2
option e: true
option t: 16
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 80
option rsbcmt: 80
option rmbcmt: 50
option mmbcs: 32768
option mmsbc: 256
option mmmbc: 3
option lmbcs: 5242880
option smbcs: 262144
option mbcgs: 10
option mbsd: 3
option as: gf
mbcs blocks: 0 79 79
mbcs blocks size: 0 1896 1896
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 32792 32792 32792
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 32792
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
sl_alloc calls: 390
sl_free calls: 390
sl_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:sl_alloc[12]
versions: 2.1 2.2
option e: true
option t: 16
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 80
option rsbcmt: 80
option rmbcmt: 50
option mmbcs: 32768
option mmsbc: 256
option mmmbc: 3
option lmbcs: 5242880
option smbcs: 262144
option mbcgs: 10
option mbsd: 3
option as: gf
mbcs blocks: 0 21 21
mbcs blocks size: 0 520 520
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 32792 32792 32792
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 32792
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
sl_alloc calls: 334
sl_free calls: 334
sl_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:sl_alloc[13]
versions: 2.1 2.2
option e: true
option t: 16
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 80
option rsbcmt: 80
option rmbcmt: 50
option mmbcs: 32768
option mmsbc: 256
option mmmbc: 3
option lmbcs: 5242880
option smbcs: 262144
option mbcgs: 10
option mbsd: 3
option as: gf
mbcs blocks: 0 40 40
mbcs blocks size: 0 960 960
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 32792 32792 32792
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 32792
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
sl_alloc calls: 310
sl_free calls: 310
sl_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:sl_alloc[14]
versions: 2.1 2.2
option e: true
option t: 16
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 80
option rsbcmt: 80
option rmbcmt: 50
option mmbcs: 32768
option mmsbc: 256
option mmmbc: 3
option lmbcs: 5242880
option smbcs: 262144
option mbcgs: 10
option mbsd: 3
option as: gf
mbcs blocks: 0 16 16
mbcs blocks size: 0 384 384
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 32792 32792 32792
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 32792
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
sl_alloc calls: 281
sl_free calls: 281
sl_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:sl_alloc[15]
versions: 2.1 2.2
option e: true
option t: 16
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 80
option rsbcmt: 80
option rmbcmt: 50
option mmbcs: 32768
option mmsbc: 256
option mmmbc: 3
option lmbcs: 5242880
option smbcs: 262144
option mbcgs: 10
option mbsd: 3
option as: gf
mbcs blocks: 0 15 15
mbcs blocks size: 0 360 360
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 32792 32792 32792
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 32792
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
sl_alloc calls: 278
sl_free calls: 278
sl_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:sl_alloc[16]
versions: 2.1 2.2
option e: true
option t: 16
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 80
option rsbcmt: 80
option rmbcmt: 50
option mmbcs: 32768
option mmsbc: 256
option mmmbc: 3
option lmbcs: 5242880
option smbcs: 262144
option mbcgs: 10
option mbsd: 3
option as: gf
mbcs blocks: 0 48 48
mbcs blocks size: 0 1152 1152
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 32792 32792 32792
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 32792
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
sl_alloc calls: 385
sl_free calls: 385
sl_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:std_alloc[1]
versions: 0.9 2.2
option e: true
option t: 16
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 20
option rsbcmt: 80
option rmbcmt: 50
option mmbcs: 32768
option mmsbc: 256
option mmmbc: 3
option lmbcs: 5242880
option smbcs: 262144
option mbcgs: 10
option as: bf
mbcs blocks: 73 75 75
mbcs blocks size: 2424 2560 2560
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 32792 32792 32792
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 32792
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
std_alloc calls: 256
std_free calls: 183
std_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:std_alloc[2]
versions: 0.9 2.2
option e: true
option t: 16
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 20
option rsbcmt: 80
option rmbcmt: 50
option mmbcs: 32768
option mmsbc: 256
option mmmbc: 3
option lmbcs: 5242880
option smbcs: 262144
option mbcgs: 10
option as: bf
mbcs blocks: 336 344 344
mbcs blocks size: 14552 15840 15840
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 32792 32792 32792
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 32792
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
std_alloc calls: 540
std_free calls: 204
std_realloc calls: 1
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:std_alloc[3]
versions: 0.9 2.2
option e: true
option t: 16
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 20
option rsbcmt: 80
option rmbcmt: 50
option mmbcs: 32768
option mmsbc: 256
option mmmbc: 3
option lmbcs: 5242880
option smbcs: 262144
option mbcgs: 10
option as: bf
mbcs blocks: 66 70 70
mbcs blocks size: 2208 2368 2368
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 32792 32792 32792
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 32792
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
std_alloc calls: 241
std_free calls: 175
std_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:std_alloc[4]
versions: 0.9 2.2
option e: true
option t: 16
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 20
option rsbcmt: 80
option rmbcmt: 50
option mmbcs: 32768
option mmsbc: 256
option mmmbc: 3
option lmbcs: 5242880
option smbcs: 262144
option mbcgs: 10
option as: bf
mbcs blocks: 62 68 68
mbcs blocks size: 2072 2384 2384
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 32792 32792 32792
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 32792
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
std_alloc calls: 236
std_free calls: 174
std_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:std_alloc[5]
versions: 0.9 2.2
option e: true
option t: 16
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 20
option rsbcmt: 80
option rmbcmt: 50
option mmbcs: 32768
option mmsbc: 256
option mmmbc: 3
option lmbcs: 5242880
option smbcs: 262144
option mbcgs: 10
option as: bf
mbcs blocks: 71 81 81
mbcs blocks size: 2544 3096 3096
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 32792 32792 32792
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 32792
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
std_alloc calls: 264
std_free calls: 193
std_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:std_alloc[6]
versions: 0.9 2.2
option e: true
option t: 16
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 20
option rsbcmt: 80
option rmbcmt: 50
option mmbcs: 32768
option mmsbc: 256
option mmmbc: 3
option lmbcs: 5242880
option smbcs: 262144
option mbcgs: 10
option as: bf
mbcs blocks: 63 68 68
mbcs blocks size: 2192 2544 2544
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 32792 32792 32792
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 32792
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
std_alloc calls: 231
std_free calls: 168
std_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:std_alloc[7]
versions: 0.9 2.2
option e: true
option t: 16
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 20
option rsbcmt: 80
option rmbcmt: 50
option mmbcs: 32768
option mmsbc: 256
option mmmbc: 3
option lmbcs: 5242880
option smbcs: 262144
option mbcgs: 10
option as: bf
mbcs blocks: 64 66 66
mbcs blocks size: 2160 2256 2256
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 32792 32792 32792
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 32792
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
std_alloc calls: 225
std_free calls: 161
std_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:std_alloc[8]
versions: 0.9 2.2
option e: true
option t: 16
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 20
option rsbcmt: 80
option rmbcmt: 50
option mmbcs: 32768
option mmsbc: 256
option mmmbc: 3
option lmbcs: 5242880
option smbcs: 262144
option mbcgs: 10
option as: bf
mbcs blocks: 68 77 77
mbcs blocks size: 2344 2776 2776
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 32792 32792 32792
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 32792
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
std_alloc calls: 248
std_free calls: 180
std_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:std_alloc[9]
versions: 0.9 2.2
option e: true
option t: 16
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 20
option rsbcmt: 80
option rmbcmt: 50
option mmbcs: 32768
option mmsbc: 256
option mmmbc: 3
option lmbcs: 5242880
option smbcs: 262144
option mbcgs: 10
option as: bf
mbcs blocks: 64 74 74
mbcs blocks size: 4232 4704 4704
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 32792 32792 32792
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 32792
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
std_alloc calls: 234
std_free calls: 170
std_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:std_alloc[10]
versions: 0.9 2.2
option e: true
option t: 16
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 20
option rsbcmt: 80
option rmbcmt: 50
option mmbcs: 32768
option mmsbc: 256
option mmmbc: 3
option lmbcs: 5242880
option smbcs: 262144
option mbcgs: 10
option as: bf
mbcs blocks: 66 72 72
mbcs blocks size: 2208 2544 2544
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 32792 32792 32792
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 32792
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
std_alloc calls: 245
std_free calls: 179
std_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:std_alloc[11]
versions: 0.9 2.2
option e: true
option t: 16
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 20
option rsbcmt: 80
option rmbcmt: 50
option mmbcs: 32768
option mmsbc: 256
option mmmbc: 3
option lmbcs: 5242880
option smbcs: 262144
option mbcgs: 10
option as: bf
mbcs blocks: 76 80 80
mbcs blocks size: 2664 2888 2888
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 32792 32792 32792
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 32792
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
std_alloc calls: 280
std_free calls: 204
std_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:std_alloc[12]
versions: 0.9 2.2
option e: true
option t: 16
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 20
option rsbcmt: 80
option rmbcmt: 50
option mmbcs: 32768
option mmsbc: 256
option mmmbc: 3
option lmbcs: 5242880
option smbcs: 262144
option mbcgs: 10
option as: bf
mbcs blocks: 64 74 74
mbcs blocks size: 2192 2656 2656
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 32792 32792 32792
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 32792
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
std_alloc calls: 238
std_free calls: 174
std_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:std_alloc[13]
versions: 0.9 2.2
option e: true
option t: 16
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 20
option rsbcmt: 80
option rmbcmt: 50
option mmbcs: 32768
option mmsbc: 256
option mmmbc: 3
option lmbcs: 5242880
option smbcs: 262144
option mbcgs: 10
option as: bf
mbcs blocks: 77 82 82
mbcs blocks size: 2536 2808 2808
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 32792 32792 32792
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 32792
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
std_alloc calls: 282
std_free calls: 205
std_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:std_alloc[14]
versions: 0.9 2.2
option e: true
option t: 16
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 20
option rsbcmt: 80
option rmbcmt: 50
option mmbcs: 32768
option mmsbc: 256
option mmmbc: 3
option lmbcs: 5242880
option smbcs: 262144
option mbcgs: 10
option as: bf
mbcs blocks: 71 78 78
mbcs blocks size: 2488 2776 2776
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 32792 32792 32792
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 32792
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
std_alloc calls: 256
std_free calls: 185
std_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:std_alloc[15]
versions: 0.9 2.2
option e: true
option t: 16
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 20
option rsbcmt: 80
option rmbcmt: 50
option mmbcs: 32768
option mmsbc: 256
option mmmbc: 3
option lmbcs: 5242880
option smbcs: 262144
option mbcgs: 10
option as: bf
mbcs blocks: 59 65 65
mbcs blocks size: 3928 4248 4248
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 32792 32792 32792
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 32792
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
std_alloc calls: 231
std_free calls: 172
std_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:std_alloc[16]
versions: 0.9 2.2
option e: true
option t: 16
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 20
option rsbcmt: 80
option rmbcmt: 50
option mmbcs: 32768
option mmsbc: 256
option mmmbc: 3
option lmbcs: 5242880
option smbcs: 262144
option mbcgs: 10
option as: bf
mbcs blocks: 62 67 67
mbcs blocks size: 2104 2304 2304
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 32792 32792 32792
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 32792
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
std_alloc calls: 239
std_free calls: 177
std_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:ll_alloc
versions: 0.9 2.2
option e: true
option t: false
option ramv: false
option sbct: 4294967295
option asbcst: 0
option rsbcst: 0
option rsbcmt: 0
option rmbcmt: 0
option mmbcs: 2097152
option mmsbc: 0
option mmmbc: 0
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: aobf
mbcs blocks: 1744 1744 1744
mbcs blocks size: 7923840 7932320 7932320
mbcs carriers: 7 7 7
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 7
mbcs carriers size: 8388640 8388640 8388640
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 8388640
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
ll_alloc calls: 1754
ll_free calls: 10
ll_realloc calls: 311
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 8
sys_free calls: 1
sys_realloc calls: 0
=allocator:eheap_alloc[1]
versions: 2.1 2.2
option e: true
option t: 16
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 50
option rsbcmt: 80
option rmbcmt: 50
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 25
option lmbcs: 5242880
option smbcs: 262144
option mbcgs: 10
option mbsd: 3
option as: gf
mbcs blocks: 5 29 29
mbcs blocks size: 8880 84288 84288
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131096 131096 131096
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131096
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
eheap_alloc calls: 251
eheap_free calls: 246
eheap_realloc calls: 2
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:eheap_alloc[2]
versions: 2.1 2.2
option e: true
option t: 16
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 50
option rsbcmt: 80
option rmbcmt: 50
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 25
option lmbcs: 5242880
option smbcs: 262144
option mbcgs: 10
option mbsd: 3
option as: gf
mbcs blocks: 3 49 49
mbcs blocks size: 14312 83704 83704
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131096 131096 131096
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131096
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
eheap_alloc calls: 317
eheap_free calls: 314
eheap_realloc calls: 5
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:eheap_alloc[3]
versions: 2.1 2.2
option e: true
option t: 16
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 50
option rsbcmt: 80
option rmbcmt: 50
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 25
option lmbcs: 5242880
option smbcs: 262144
option mbcgs: 10
option mbsd: 3
option as: gf
mbcs blocks: 7 24 24
mbcs blocks size: 7760 137688 137688
mbcs carriers: 1 2 2
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131096 393240 393240
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131096
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
eheap_alloc calls: 178
eheap_free calls: 171
eheap_realloc calls: 9
mseg_alloc calls: 1
mseg_dealloc calls: 1
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:eheap_alloc[4]
versions: 2.1 2.2
option e: true
option t: 16
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 50
option rsbcmt: 80
option rmbcmt: 50
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 25
option lmbcs: 5242880
option smbcs: 262144
option mbcgs: 10
option mbsd: 3
option as: gf
mbcs blocks: 2 22 22
mbcs blocks size: 3392 67336 67336
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131096 131096 131096
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131096
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
eheap_alloc calls: 326
eheap_free calls: 324
eheap_realloc calls: 6
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:eheap_alloc[5]
versions: 2.1 2.2
option e: true
option t: 16
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 50
option rsbcmt: 80
option rmbcmt: 50
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 25
option lmbcs: 5242880
option smbcs: 262144
option mbcgs: 10
option mbsd: 3
option as: gf
mbcs blocks: 1 15 15
mbcs blocks size: 70856 198320 198320
mbcs carriers: 2 2 2
mbcs mseg carriers: 1
mbcs sys_alloc carriers: 1
mbcs carriers size: 393240 393240 393240
mbcs mseg carriers size: 262144
mbcs sys_alloc carriers size: 131096
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
eheap_alloc calls: 233
eheap_free calls: 232
eheap_realloc calls: 9
mseg_alloc calls: 2
mseg_dealloc calls: 1
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:eheap_alloc[6]
versions: 2.1 2.2
option e: true
option t: 16
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 50
option rsbcmt: 80
option rmbcmt: 50
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 25
option lmbcs: 5242880
option smbcs: 262144
option mbcgs: 10
option mbsd: 3
option as: gf
mbcs blocks: 6 18 18
mbcs blocks size: 13776 92392 92392
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131096 131096 131096
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131096
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
eheap_alloc calls: 170
eheap_free calls: 164
eheap_realloc calls: 13
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:eheap_alloc[7]
versions: 2.1 2.2
option e: true
option t: 16
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 50
option rsbcmt: 80
option rmbcmt: 50
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 25
option lmbcs: 5242880
option smbcs: 262144
option mbcgs: 10
option mbsd: 3
option as: gf
mbcs blocks: 1 20 20
mbcs blocks size: 944 96568 96568
mbcs carriers: 1 2 2
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131096 393240 393240
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131096
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
eheap_alloc calls: 478
eheap_free calls: 477
eheap_realloc calls: 11
mseg_alloc calls: 1
mseg_dealloc calls: 1
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:eheap_alloc[8]
versions: 2.1 2.2
option e: true
option t: 16
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 50
option rsbcmt: 80
option rmbcmt: 50
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 25
option lmbcs: 5242880
option smbcs: 262144
option mbcgs: 10
option mbsd: 3
option as: gf
mbcs blocks: 3 16 16
mbcs blocks size: 10368 63568 63568
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131096 131096 131096
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131096
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
eheap_alloc calls: 283
eheap_free calls: 280
eheap_realloc calls: 12
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:eheap_alloc[9]
versions: 2.1 2.2
option e: true
option t: 16
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 50
option rsbcmt: 80
option rmbcmt: 50
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 25
option lmbcs: 5242880
option smbcs: 262144
option mbcgs: 10
option mbsd: 3
option as: gf
mbcs blocks: 4 27 27
mbcs blocks size: 23728 179736 179736
mbcs carriers: 1 2 2
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131096 393240 393240
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131096
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
eheap_alloc calls: 222
eheap_free calls: 218
eheap_realloc calls: 11
mseg_alloc calls: 2
mseg_dealloc calls: 2
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:eheap_alloc[10]
versions: 2.1 2.2
option e: true
option t: 16
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 50
option rsbcmt: 80
option rmbcmt: 50
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 25
option lmbcs: 5242880
option smbcs: 262144
option mbcgs: 10
option mbsd: 3
option as: gf
mbcs blocks: 5 18 18
mbcs blocks size: 74848 101960 101960
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131096 131096 131096
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131096
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
eheap_alloc calls: 250
eheap_free calls: 245
eheap_realloc calls: 7
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:eheap_alloc[11]
versions: 2.1 2.2
option e: true
option t: 16
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 50
option rsbcmt: 80
option rmbcmt: 50
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 25
option lmbcs: 5242880
option smbcs: 262144
option mbcgs: 10
option mbsd: 3
option as: gf
mbcs blocks: 7 38 38
mbcs blocks size: 16800 74888 74888
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131096 131096 131096
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131096
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
eheap_alloc calls: 357
eheap_free calls: 350
eheap_realloc calls: 8
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:eheap_alloc[12]
versions: 2.1 2.2
option e: true
option t: 16
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 50
option rsbcmt: 80
option rmbcmt: 50
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 25
option lmbcs: 5242880
option smbcs: 262144
option mbcgs: 10
option mbsd: 3
option as: gf
mbcs blocks: 4 23 23
mbcs blocks size: 7944 79880 79880
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131096 131096 131096
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131096
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
eheap_alloc calls: 216
eheap_free calls: 212
eheap_realloc calls: 9
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:eheap_alloc[13]
versions: 2.1 2.2
option e: true
option t: 16
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 50
option rsbcmt: 80
option rmbcmt: 50
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 25
option lmbcs: 5242880
option smbcs: 262144
option mbcgs: 10
option mbsd: 3
option as: gf
mbcs blocks: 7 40 40
mbcs blocks size: 59656 179152 179152
mbcs carriers: 1 2 2
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131096 393240 393240
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131096
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
eheap_alloc calls: 420
eheap_free calls: 413
eheap_realloc calls: 6
mseg_alloc calls: 1
mseg_dealloc calls: 1
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:eheap_alloc[14]
versions: 2.1 2.2
option e: true
option t: 16
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 50
option rsbcmt: 80
option rmbcmt: 50
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 25
option lmbcs: 5242880
option smbcs: 262144
option mbcgs: 10
option mbsd: 3
option as: gf
mbcs blocks: 4 18 18
mbcs blocks size: 48704 115616 115616
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131096 131096 131096
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131096
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
eheap_alloc calls: 170
eheap_free calls: 166
eheap_realloc calls: 6
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:eheap_alloc[15]
versions: 2.1 2.2
option e: true
option t: 16
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 50
option rsbcmt: 80
option rmbcmt: 50
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 25
option lmbcs: 5242880
option smbcs: 262144
option mbcgs: 10
option mbsd: 3
option as: gf
mbcs blocks: 3 16 16
mbcs blocks size: 30112 46848 46848
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131096 131096 131096
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131096
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
eheap_alloc calls: 248
eheap_free calls: 245
eheap_realloc calls: 5
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:eheap_alloc[16]
versions: 2.1 2.2
option e: true
option t: 16
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 50
option rsbcmt: 80
option rmbcmt: 50
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 25
option lmbcs: 5242880
option smbcs: 262144
option mbcgs: 10
option mbsd: 3
option as: gf
mbcs blocks: 5 42 42
mbcs blocks size: 59992 83336 83336
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131096 131096 131096
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131096
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
eheap_alloc calls: 271
eheap_free calls: 266
eheap_realloc calls: 8
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:ets_alloc[1]
versions: 0.9 2.2
option e: true
option t: 16
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 20
option rsbcmt: 80
option rmbcmt: 50
option mmbcs: 32768
option mmsbc: 256
option mmmbc: 25
option lmbcs: 5242880
option smbcs: 262144
option mbcgs: 10
option as: bf
mbcs blocks: 14 16 16
mbcs blocks size: 5608 5760 5760
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 32792 32792 32792
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 32792
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
ets_alloc calls: 18
ets_free calls: 4
ets_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:ets_alloc[2]
versions: 0.9 2.2
option e: true
option t: 16
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 20
option rsbcmt: 80
option rmbcmt: 50
option mmbcs: 32768
option mmsbc: 256
option mmmbc: 25
option lmbcs: 5242880
option smbcs: 262144
option mbcgs: 10
option as: bf
mbcs blocks: 12 46 46
mbcs blocks size: 6016 13280 13280
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 32792 32792 32792
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 32792
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
ets_alloc calls: 114
ets_free calls: 102
ets_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:ets_alloc[3]
versions: 0.9 2.2
option e: true
option t: 16
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 20
option rsbcmt: 80
option rmbcmt: 50
option mmbcs: 32768
option mmsbc: 256
option mmmbc: 25
option lmbcs: 5242880
option smbcs: 262144
option mbcgs: 10
option as: bf
mbcs blocks: 24 406 406
mbcs blocks size: 9496 39000 39000
mbcs carriers: 2 2 2
mbcs mseg carriers: 1
mbcs sys_alloc carriers: 1
mbcs carriers size: 294936 294936 294936
mbcs mseg carriers size: 262144
mbcs sys_alloc carriers size: 32792
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
ets_alloc calls: 422
ets_free calls: 398
ets_realloc calls: 63
mseg_alloc calls: 1
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:ets_alloc[4]
versions: 0.9 2.2
option e: true
option t: 16
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 20
option rsbcmt: 80
option rmbcmt: 50
option mmbcs: 32768
option mmsbc: 256
option mmmbc: 25
option lmbcs: 5242880
option smbcs: 262144
option mbcgs: 10
option as: bf
mbcs blocks: 5 18 18
mbcs blocks size: 2168 8104 8104
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 32792 32792 32792
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 32792
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
ets_alloc calls: 40
ets_free calls: 35
ets_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:ets_alloc[5]
versions: 0.9 2.2
option e: true
option t: 16
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 20
option rsbcmt: 80
option rmbcmt: 50
option mmbcs: 32768
option mmsbc: 256
option mmmbc: 25
option lmbcs: 5242880
option smbcs: 262144
option mbcgs: 10
option as: bf
mbcs blocks: 90 133 133
mbcs blocks size: 10512 18560 18560
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 32792 32792 32792
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 32792
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
ets_alloc calls: 162
ets_free calls: 72
ets_realloc calls: 7
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:ets_alloc[6]
versions: 0.9 2.2
option e: true
option t: 16
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 20
option rsbcmt: 80
option rmbcmt: 50
option mmbcs: 32768
option mmsbc: 256
option mmmbc: 25
option lmbcs: 5242880
option smbcs: 262144
option mbcgs: 10
option as: bf
mbcs blocks: 139 167 167
mbcs blocks size: 15344 19072 19072
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 32792 32792 32792
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 32792
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
ets_alloc calls: 183
ets_free calls: 44
ets_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:ets_alloc[7]
versions: 0.9 2.2
option e: true
option t: 16
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 20
option rsbcmt: 80
option rmbcmt: 50
option mmbcs: 32768
option mmsbc: 256
option mmmbc: 25
option lmbcs: 5242880
option smbcs: 262144
option mbcgs: 10
option as: bf
mbcs blocks: 13 46 46
mbcs blocks size: 5936 14840 14840
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 32792 32792 32792
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 32792
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
ets_alloc calls: 104
ets_free calls: 91
ets_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:ets_alloc[8]
versions: 0.9 2.2
option e: true
option t: 16
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 20
option rsbcmt: 80
option rmbcmt: 50
option mmbcs: 32768
option mmsbc: 256
option mmmbc: 25
option lmbcs: 5242880
option smbcs: 262144
option mbcgs: 10
option as: bf
mbcs blocks: 14 50 50
mbcs blocks size: 6512 12112 12112
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 32792 32792 32792
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 32792
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
ets_alloc calls: 139
ets_free calls: 125
ets_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:ets_alloc[9]
versions: 0.9 2.2
option e: true
option t: 16
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 20
option rsbcmt: 80
option rmbcmt: 50
option mmbcs: 32768
option mmsbc: 256
option mmmbc: 25
option lmbcs: 5242880
option smbcs: 262144
option mbcgs: 10
option as: bf
mbcs blocks: 18 51 51
mbcs blocks size: 7664 14624 14624
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 32792 32792 32792
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 32792
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
ets_alloc calls: 53
ets_free calls: 35
ets_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:ets_alloc[10]
versions: 0.9 2.2
option e: true
option t: 16
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 20
option rsbcmt: 80
option rmbcmt: 50
option mmbcs: 32768
option mmsbc: 256
option mmmbc: 25
option lmbcs: 5242880
option smbcs: 262144
option mbcgs: 10
option as: bf
mbcs blocks: 11 37 37
mbcs blocks size: 4392 10328 10328
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 32792 32792 32792
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 32792
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
ets_alloc calls: 62
ets_free calls: 51
ets_realloc calls: 2
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:ets_alloc[11]
versions: 0.9 2.2
option e: true
option t: 16
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 20
option rsbcmt: 80
option rmbcmt: 50
option mmbcs: 32768
option mmsbc: 256
option mmmbc: 25
option lmbcs: 5242880
option smbcs: 262144
option mbcgs: 10
option as: bf
mbcs blocks: 9 26 26
mbcs blocks size: 4528 7952 7952
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 32792 32792 32792
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 32792
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
ets_alloc calls: 36
ets_free calls: 27
ets_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:ets_alloc[12]
versions: 0.9 2.2
option e: true
option t: 16
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 20
option rsbcmt: 80
option rmbcmt: 50
option mmbcs: 32768
option mmsbc: 256
option mmmbc: 25
option lmbcs: 5242880
option smbcs: 262144
option mbcgs: 10
option as: bf
mbcs blocks: 34 65 65
mbcs blocks size: 7856 15584 15584
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 32792 32792 32792
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 32792
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
ets_alloc calls: 87
ets_free calls: 53
ets_realloc calls: 4
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:ets_alloc[13]
versions: 0.9 2.2
option e: true
option t: 16
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 20
option rsbcmt: 80
option rmbcmt: 50
option mmbcs: 32768
option mmsbc: 256
option mmmbc: 25
option lmbcs: 5242880
option smbcs: 262144
option mbcgs: 10
option as: bf
mbcs blocks: 72 115 115
mbcs blocks size: 27328 35168 35168
mbcs carriers: 1 2 2
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 32792 294936 294936
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 32792
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
ets_alloc calls: 208
ets_free calls: 136
ets_realloc calls: 5
mseg_alloc calls: 1
mseg_dealloc calls: 1
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:ets_alloc[14]
versions: 0.9 2.2
option e: true
option t: 16
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 20
option rsbcmt: 80
option rmbcmt: 50
option mmbcs: 32768
option mmsbc: 256
option mmmbc: 25
option lmbcs: 5242880
option smbcs: 262144
option mbcgs: 10
option as: bf
mbcs blocks: 10 18 18
mbcs blocks size: 3952 6320 6320
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 32792 32792 32792
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 32792
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
ets_alloc calls: 27
ets_free calls: 17
ets_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:ets_alloc[15]
versions: 0.9 2.2
option e: true
option t: 16
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 20
option rsbcmt: 80
option rmbcmt: 50
option mmbcs: 32768
option mmsbc: 256
option mmmbc: 25
option lmbcs: 5242880
option smbcs: 262144
option mbcgs: 10
option as: bf
mbcs blocks: 9 68 68
mbcs blocks size: 4400 13296 13296
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 32792 32792 32792
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 32792
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
ets_alloc calls: 134
ets_free calls: 125
ets_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:ets_alloc[16]
versions: 0.9 2.2
option e: true
option t: 16
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 20
option rsbcmt: 80
option rmbcmt: 50
option mmbcs: 32768
option mmsbc: 256
option mmmbc: 25
option lmbcs: 5242880
option smbcs: 262144
option mbcgs: 10
option as: bf
mbcs blocks: 14 31 31
mbcs blocks size: 5768 8704 8704
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 32792 32792 32792
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 32792
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
ets_alloc calls: 32
ets_free calls: 18
ets_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:fix_alloc
option e: true
proc: 33668 13844
atom_entry: 224508 224460
export_entry: 193628 193532
module_entry: 5684 5564
reg_proc: 1492 700
monitor_sh: 1644 364
nlink_sh: 4908 2412
proc_list: 28 28
fun_entry: 48532 47524
db_tab: 7732 2996
driver_event_data_state: 28 28
driver_select_data_state: 356 84
=allocator:binary_alloc[1]
versions: 0.9 2.2
option e: true
option t: 16
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 20
option rsbcmt: 80
option rmbcmt: 50
option mmbcs: 32768
option mmsbc: 256
option mmmbc: 12
option lmbcs: 5242880
option smbcs: 262144
option mbcgs: 10
option as: bf
mbcs blocks: 1 4 4
mbcs blocks size: 4128 69800 69800
mbcs carriers: 1 2 2
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 32792 294936 294936
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 32792
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
binary_alloc calls: 119
binary_free calls: 118
binary_realloc calls: 1
mseg_alloc calls: 2
mseg_dealloc calls: 2
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:binary_alloc[2]
versions: 0.9 2.2
option e: true
option t: 16
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 20
option rsbcmt: 80
option rmbcmt: 50
option mmbcs: 32768
option mmsbc: 256
option mmmbc: 12
option lmbcs: 5242880
option smbcs: 262144
option mbcgs: 10
option as: bf
mbcs blocks: 0 3 3
mbcs blocks size: 0 133152 133152
mbcs carriers: 1 2 2
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 32792 294936 294936
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 32792
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
binary_alloc calls: 188
binary_free calls: 188
binary_realloc calls: 0
mseg_alloc calls: 3
mseg_dealloc calls: 3
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:binary_alloc[3]
versions: 0.9 2.2
option e: true
option t: 16
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 20
option rsbcmt: 80
option rmbcmt: 50
option mmbcs: 32768
option mmsbc: 256
option mmmbc: 12
option lmbcs: 5242880
option smbcs: 262144
option mbcgs: 10
option as: bf
mbcs blocks: 0 3 3
mbcs blocks size: 0 271192 271192
mbcs carriers: 1 2 2
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 32792 311320 311320
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 32792
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
binary_alloc calls: 121
binary_free calls: 121
binary_realloc calls: 1
mseg_alloc calls: 3
mseg_dealloc calls: 3
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:binary_alloc[4]
versions: 0.9 2.2
option e: true
option t: 16
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 20
option rsbcmt: 80
option rmbcmt: 50
option mmbcs: 32768
option mmsbc: 256
option mmmbc: 12
option lmbcs: 5242880
option smbcs: 262144
option mbcgs: 10
option as: bf
mbcs blocks: 0 10 10
mbcs blocks size: 0 67016 67016
mbcs carriers: 1 2 2
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 32792 311320 311320
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 32792
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
binary_alloc calls: 149
binary_free calls: 149
binary_realloc calls: 7
mseg_alloc calls: 7
mseg_dealloc calls: 7
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:binary_alloc[5]
versions: 0.9 2.2
option e: true
option t: 16
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 20
option rsbcmt: 80
option rmbcmt: 50
option mmbcs: 32768
option mmsbc: 256
option mmmbc: 12
option lmbcs: 5242880
option smbcs: 262144
option mbcgs: 10
option as: bf
mbcs blocks: 0 5 5
mbcs blocks size: 0 65712 65712
mbcs carriers: 1 2 2
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 32792 294936 294936
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 32792
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
binary_alloc calls: 161
binary_free calls: 161
binary_realloc calls: 3
mseg_alloc calls: 4
mseg_dealloc calls: 4
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:binary_alloc[6]
versions: 0.9 2.2
option e: true
option t: 16
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 20
option rsbcmt: 80
option rmbcmt: 50
option mmbcs: 32768
option mmsbc: 256
option mmmbc: 12
option lmbcs: 5242880
option smbcs: 262144
option mbcgs: 10
option as: bf
mbcs blocks: 8 11 11
mbcs blocks size: 1792 65968 65968
mbcs carriers: 1 2 2
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 32792 294936 294936
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 32792
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
binary_alloc calls: 139
binary_free calls: 131
binary_realloc calls: 8
mseg_alloc calls: 4
mseg_dealloc calls: 4
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:binary_alloc[7]
versions: 0.9 2.2
option e: true
option t: 16
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 20
option rsbcmt: 80
option rmbcmt: 50
option mmbcs: 32768
option mmsbc: 256
option mmmbc: 12
option lmbcs: 5242880
option smbcs: 262144
option mbcgs: 10
option as: bf
mbcs blocks: 1 4 4
mbcs blocks size: 96 71184 71184
mbcs carriers: 1 2 2
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 32792 294936 294936
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 32792
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
binary_alloc calls: 148
binary_free calls: 147
binary_realloc calls: 0
mseg_alloc calls: 4
mseg_dealloc calls: 4
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:binary_alloc[8]
versions: 0.9 2.2
option e: true
option t: 16
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 20
option rsbcmt: 80
option rmbcmt: 50
option mmbcs: 32768
option mmsbc: 256
option mmmbc: 12
option lmbcs: 5242880
option smbcs: 262144
option mbcgs: 10
option as: bf
mbcs blocks: 1 8 8
mbcs blocks size: 360 83552 83552
mbcs carriers: 1 2 2
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 32792 294936 294936
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 32792
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
binary_alloc calls: 190
binary_free calls: 189
binary_realloc calls: 7
mseg_alloc calls: 2
mseg_dealloc calls: 2
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:binary_alloc[9]
versions: 0.9 2.2
option e: true
option t: 16
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 20
option rsbcmt: 80
option rmbcmt: 50
option mmbcs: 32768
option mmsbc: 256
option mmmbc: 12
option lmbcs: 5242880
option smbcs: 262144
option mbcgs: 10
option as: bf
mbcs blocks: 0 3 3
mbcs blocks size: 0 110848 110848
mbcs carriers: 1 2 2
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 32792 294936 294936
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 32792
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
binary_alloc calls: 122
binary_free calls: 122
binary_realloc calls: 2
mseg_alloc calls: 4
mseg_dealloc calls: 4
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:binary_alloc[10]
versions: 0.9 2.2
option e: true
option t: 16
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 20
option rsbcmt: 80
option rmbcmt: 50
option mmbcs: 32768
option mmsbc: 256
option mmmbc: 12
option lmbcs: 5242880
option smbcs: 262144
option mbcgs: 10
option as: bf
mbcs blocks: 0 9 9
mbcs blocks size: 0 111184 111184
mbcs carriers: 1 2 2
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 32792 311320 311320
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 32792
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
binary_alloc calls: 132
binary_free calls: 132
binary_realloc calls: 7
mseg_alloc calls: 3
mseg_dealloc calls: 3
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:binary_alloc[11]
versions: 0.9 2.2
option e: true
option t: 16
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 20
option rsbcmt: 80
option rmbcmt: 50
option mmbcs: 32768
option mmsbc: 256
option mmmbc: 12
option lmbcs: 5242880
option smbcs: 262144
option mbcgs: 10
option as: bf
mbcs blocks: 0 7 7
mbcs blocks size: 0 66208 66208
mbcs carriers: 1 2 2
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 32792 294936 294936
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 32792
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
binary_alloc calls: 172
binary_free calls: 172
binary_realloc calls: 0
mseg_alloc calls: 1
mseg_dealloc calls: 1
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:binary_alloc[12]
versions: 0.9 2.2
option e: true
option t: 16
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 20
option rsbcmt: 80
option rmbcmt: 50
option mmbcs: 32768
option mmsbc: 256
option mmmbc: 12
option lmbcs: 5242880
option smbcs: 262144
option mbcgs: 10
option as: bf
mbcs blocks: 3 7 7
mbcs blocks size: 23056 70888 70888
mbcs carriers: 1 2 2
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 32792 311320 311320
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 32792
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
binary_alloc calls: 141
binary_free calls: 138
binary_realloc calls: 4
mseg_alloc calls: 2
mseg_dealloc calls: 2
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:binary_alloc[13]
versions: 0.9 2.2
option e: true
option t: 16
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 20
option rsbcmt: 80
option rmbcmt: 50
option mmbcs: 32768
option mmsbc: 256
option mmmbc: 12
option lmbcs: 5242880
option smbcs: 262144
option mbcgs: 10
option as: bf
mbcs blocks: 0 5 5
mbcs blocks size: 0 93336 93336
mbcs carriers: 1 2 2
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 32792 311320 311320
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 32792
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
binary_alloc calls: 203
binary_free calls: 203
binary_realloc calls: 0
mseg_alloc calls: 4
mseg_dealloc calls: 4
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:binary_alloc[14]
versions: 0.9 2.2
option e: true
option t: 16
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 20
option rsbcmt: 80
option rmbcmt: 50
option mmbcs: 32768
option mmsbc: 256
option mmmbc: 12
option lmbcs: 5242880
option smbcs: 262144
option mbcgs: 10
option as: bf
mbcs blocks: 0 4 4
mbcs blocks size: 0 66120 66120
mbcs carriers: 1 2 2
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 32792 294936 294936
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 32792
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
binary_alloc calls: 130
binary_free calls: 130
binary_realloc calls: 0
mseg_alloc calls: 1
mseg_dealloc calls: 1
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:binary_alloc[15]
versions: 0.9 2.2
option e: true
option t: 16
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 20
option rsbcmt: 80
option rmbcmt: 50
option mmbcs: 32768
option mmsbc: 256
option mmmbc: 12
option lmbcs: 5242880
option smbcs: 262144
option mbcgs: 10
option as: bf
mbcs blocks: 0 5 5
mbcs blocks size: 0 94776 94776
mbcs carriers: 1 2 2
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 32792 294936 294936
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 32792
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
binary_alloc calls: 156
binary_free calls: 156
binary_realloc calls: 2
mseg_alloc calls: 6
mseg_dealloc calls: 6
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:binary_alloc[16]
versions: 0.9 2.2
option e: true
option t: 16
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 20
option rsbcmt: 80
option rmbcmt: 50
option mmbcs: 32768
option mmsbc: 256
option mmmbc: 12
option lmbcs: 5242880
option smbcs: 262144
option mbcgs: 10
option as: bf
mbcs blocks: 1 4 4
mbcs blocks size: 18632 56992 56992
mbcs carriers: 1 2 2
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 32792 311320 311320
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 32792
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
binary_alloc calls: 136
binary_free calls: 135
binary_realloc calls: 1
mseg_alloc calls: 2
mseg_dealloc calls: 2
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:driver_alloc[1]
versions: 0.9 2.2
option e: true
option t: 16
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 20
option rsbcmt: 80
option rmbcmt: 50
option mmbcs: 32768
option mmsbc: 256
option mmmbc: 3
option lmbcs: 5242880
option smbcs: 262144
option mbcgs: 10
option as: bf
mbcs blocks: 1 5 5
mbcs blocks size: 96 8752 8752
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 32792 32792 32792
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 32792
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
driver_alloc calls: 213
driver_free calls: 212
driver_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:driver_alloc[2]
versions: 0.9 2.2
option e: true
option t: 16
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 20
option rsbcmt: 80
option rmbcmt: 50
option mmbcs: 32768
option mmsbc: 256
option mmmbc: 3
option lmbcs: 5242880
option smbcs: 262144
option mbcgs: 10
option as: bf
mbcs blocks: 1 5 5
mbcs blocks size: 48 8912 8912
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 32792 32792 32792
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 32792
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
driver_alloc calls: 225
driver_free calls: 224
driver_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:driver_alloc[3]
versions: 0.9 2.2
option e: true
option t: 16
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 20
option rsbcmt: 80
option rmbcmt: 50
option mmbcs: 32768
option mmsbc: 256
option mmmbc: 3
option lmbcs: 5242880
option smbcs: 262144
option mbcgs: 10
option as: bf
mbcs blocks: 1 5 5
mbcs blocks size: 352 9008 9008
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 32792 32792 32792
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 32792
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
driver_alloc calls: 213
driver_free calls: 212
driver_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:driver_alloc[4]
versions: 0.9 2.2
option e: true
option t: 16
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 20
option rsbcmt: 80
option rmbcmt: 50
option mmbcs: 32768
option mmsbc: 256
option mmmbc: 3
option lmbcs: 5242880
option smbcs: 262144
option mbcgs: 10
option as: bf
mbcs blocks: 2 7 7
mbcs blocks size: 448 9008 9008
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 32792 32792 32792
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 32792
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
driver_alloc calls: 214
driver_free calls: 212
driver_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:driver_alloc[5]
versions: 0.9 2.2
option e: true
option t: 16
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 20
option rsbcmt: 80
option rmbcmt: 50
option mmbcs: 32768
option mmsbc: 256
option mmmbc: 3
option lmbcs: 5242880
option smbcs: 262144
option mbcgs: 10
option as: bf
mbcs blocks: 0 4 4
mbcs blocks size: 0 8560 8560
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 32792 32792 32792
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 32792
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
driver_alloc calls: 228
driver_free calls: 228
driver_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:driver_alloc[6]
versions: 0.9 2.2
option e: true
option t: 16
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 20
option rsbcmt: 80
option rmbcmt: 50
option mmbcs: 32768
option mmsbc: 256
option mmmbc: 3
option lmbcs: 5242880
option smbcs: 262144
option mbcgs: 10
option as: bf
mbcs blocks: 0 3 3
mbcs blocks size: 0 8704 8704
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 32792 32792 32792
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 32792
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
driver_alloc calls: 205
driver_free calls: 205
driver_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:driver_alloc[7]
versions: 0.9 2.2
option e: true
option t: 16
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 20
option rsbcmt: 80
option rmbcmt: 50
option mmbcs: 32768
option mmsbc: 256
option mmmbc: 3
option lmbcs: 5242880
option smbcs: 262144
option mbcgs: 10
option as: bf
mbcs blocks: 1 4 4
mbcs blocks size: 96 8656 8656
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 32792 32792 32792
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 32792
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
driver_alloc calls: 195
driver_free calls: 194
driver_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:driver_alloc[8]
versions: 0.9 2.2
option e: true
option t: 16
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 20
option rsbcmt: 80
option rmbcmt: 50
option mmbcs: 32768
option mmsbc: 256
option mmmbc: 3
option lmbcs: 5242880
option smbcs: 262144
option mbcgs: 10
option as: bf
mbcs blocks: 0 5 5
mbcs blocks size: 0 8560 8560
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 32792 32792 32792
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 32792
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
driver_alloc calls: 211
driver_free calls: 211
driver_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:driver_alloc[9]
versions: 0.9 2.2
option e: true
option t: 16
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 20
option rsbcmt: 80
option rmbcmt: 50
option mmbcs: 32768
option mmsbc: 256
option mmmbc: 3
option lmbcs: 5242880
option smbcs: 262144
option mbcgs: 10
option as: bf
mbcs blocks: 0 5 5
mbcs blocks size: 0 8968 8968
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 32792 32792 32792
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 32792
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
driver_alloc calls: 201
driver_free calls: 201
driver_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:driver_alloc[10]
versions: 0.9 2.2
option e: true
option t: 16
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 20
option rsbcmt: 80
option rmbcmt: 50
option mmbcs: 32768
option mmsbc: 256
option mmmbc: 3
option lmbcs: 5242880
option smbcs: 262144
option mbcgs: 10
option as: bf
mbcs blocks: 0 4 4
mbcs blocks size: 0 8880 8880
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 32792 32792 32792
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 32792
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
driver_alloc calls: 204
driver_free calls: 204
driver_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:driver_alloc[11]
versions: 0.9 2.2
option e: true
option t: 16
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 20
option rsbcmt: 80
option rmbcmt: 50
option mmbcs: 32768
option mmsbc: 256
option mmmbc: 3
option lmbcs: 5242880
option smbcs: 262144
option mbcgs: 10
option as: bf
mbcs blocks: 0 4 4
mbcs blocks size: 0 8896 8896
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 32792 32792 32792
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 32792
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
driver_alloc calls: 252
driver_free calls: 252
driver_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:driver_alloc[12]
versions: 0.9 2.2
option e: true
option t: 16
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 20
option rsbcmt: 80
option rmbcmt: 50
option mmbcs: 32768
option mmsbc: 256
option mmmbc: 3
option lmbcs: 5242880
option smbcs: 262144
option mbcgs: 10
option as: bf
mbcs blocks: 0 3 3
mbcs blocks size: 0 8560 8560
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 32792 32792 32792
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 32792
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
driver_alloc calls: 200
driver_free calls: 200
driver_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:driver_alloc[13]
versions: 0.9 2.2
option e: true
option t: 16
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 20
option rsbcmt: 80
option rmbcmt: 50
option mmbcs: 32768
option mmsbc: 256
option mmmbc: 3
option lmbcs: 5242880
option smbcs: 262144
option mbcgs: 10
option as: bf
mbcs blocks: 0 3 3
mbcs blocks size: 0 8560 8560
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 32792 32792 32792
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 32792
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
driver_alloc calls: 238
driver_free calls: 238
driver_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:driver_alloc[14]
versions: 0.9 2.2
option e: true
option t: 16
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 20
option rsbcmt: 80
option rmbcmt: 50
option mmbcs: 32768
option mmsbc: 256
option mmmbc: 3
option lmbcs: 5242880
option smbcs: 262144
option mbcgs: 10
option as: bf
mbcs blocks: 1 8 8
mbcs blocks size: 96 8992 8992
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 32792 32792 32792
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 32792
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
driver_alloc calls: 222
driver_free calls: 221
driver_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:driver_alloc[15]
versions: 0.9 2.2
option e: true
option t: 16
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 20
option rsbcmt: 80
option rmbcmt: 50
option mmbcs: 32768
option mmsbc: 256
option mmmbc: 3
option lmbcs: 5242880
option smbcs: 262144
option mbcgs: 10
option as: bf
mbcs blocks: 1 4 4
mbcs blocks size: 352 8912 8912
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 32792 32792 32792
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 32792
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
driver_alloc calls: 195
driver_free calls: 194
driver_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:driver_alloc[16]
versions: 0.9 2.2
option e: true
option t: 16
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 20
option rsbcmt: 80
option rmbcmt: 50
option mmbcs: 32768
option mmsbc: 256
option mmmbc: 3
option lmbcs: 5242880
option smbcs: 262144
option mbcgs: 10
option as: bf
mbcs blocks: 0 3 3
mbcs blocks size: 0 8584 8584
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 32792 32792 32792
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 32792
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
driver_alloc calls: 208
driver_free calls: 208
driver_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:mseg_alloc
version: 0.9
option amcbf: 4194304
option rmcbf: 20
option mcs: 5
option cci: 1000
cached_segments: 3
cache_hits: 54
segments: 2 6 6
segments_size: 524288 1572864 1572864
segments_watermark: 5
mseg_alloc calls: 61
mseg_dealloc calls: 59
mseg_realloc calls: 0
mseg_create calls: 7
mseg_destroy calls: 2
mseg_recreate calls: 0
mseg_clear_cache calls: 0
mseg_check_cache calls: 2
=allocator:alloc_util
option mmc: 1024
option ycs: 1048576
=allocator:instr
option m: false
option s: false
option t: false
=proc:<0.0.0>
State: Running
Name: init
Spawned as: otp_ring0:start/2
Spawned by: []
Started: Tue Jun 15 23:30:15 2010
Message queue length: 0
Number of heap fragments: 0
Heap fragment data: 0
Link list: [<0.2.0>, <0.6.0>, <0.5.0>]
Reductions: 19051
Stack+heap: 377
OldHeap: 2584
Heap unused: 317
OldHeap unused: 2584
Program counter: 0xf58821a8 (init:boot_loop/2 + 32)
CP: 0x00000000 (invalid)
=proc:<0.2.0>
State: Waiting
Name: erl_prim_loader
Spawned as: erlang:apply/2
Spawned by: <0.1.0>
Started: Tue Jun 15 23:30:15 2010
Message queue length: 0
Number of heap fragments: 0
Heap fragment data: 0
Link list: [<0.0.0>, #Port<0.1>]
Reductions: 437783
Stack+heap: 6765
OldHeap: 6765
Heap unused: 1817
OldHeap unused: 6765
Program counter: 0xf5892198 (erl_prim_loader:loop/3 + 92)
CP: 0x00000000 (invalid)
arity = 0
=proc:<0.5.0>
State: Waiting
Name: error_logger
Spawned as: proc_lib:init_p/5
Spawned by: <0.1.0>
Started: Tue Jun 15 23:30:15 2010
Message queue length: 0
Number of heap fragments: 0
Heap fragment data: 0
Link list: [<0.0.0>, {from,<0.57.0>,#Ref<0.0.0.123>}, {to,<0.57.0>,#Ref<0.0.0.529>}, {from,<0.58.0>,#Ref<0.0.0.131>}]
Reductions: 19443
Stack+heap: 6765
OldHeap: 6765
Heap unused: 429
OldHeap unused: 6765
Program counter: 0x73f93578 (io:wait_io_mon_reply/2 + 28)
CP: 0x00000000 (invalid)
arity = 0
=proc:<0.6.0>
State: Waiting
Name: application_controller
Spawned as: erlang:apply/2
Spawned by: <0.1.0>
Started: Tue Jun 15 23:30:15 2010
Message queue length: 0
Number of heap fragments: 0
Heap fragment data: 0
Link list: [<0.0.0>, <0.37.0>, <0.8.0>]
Reductions: 27689
Stack+heap: 2584
OldHeap: 17711
Heap unused: 1154
OldHeap unused: 17711
Program counter: 0x818aa0c0 (gen_server:loop/6 + 144)
CP: 0x00000000 (invalid)
arity = 0
=proc:<0.8.0>
State: Waiting
Spawned as: proc_lib:init_p/5
Spawned by: <0.7.0>
Started: Tue Jun 15 23:30:15 2010
Message queue length: 0
Number of heap fragments: 0
Heap fragment data: 0
Link list: [<0.9.0>, <0.6.0>]
Reductions: 49
Stack+heap: 233
OldHeap: 377
Heap unused: 174
OldHeap unused: 377
Program counter: 0x818d26f0 (application_master:main_loop/2 + 28)
CP: 0x00000000 (invalid)
arity = 0
=proc:<0.9.0>
State: Waiting
Spawned as: application_master:start_it/4
Spawned by: <0.8.0>
Started: Tue Jun 15 23:30:15 2010
Message queue length: 0
Number of heap fragments: 0
Heap fragment data: 0
Link list: [<0.10.0>, <0.8.0>]
Reductions: 91
Stack+heap: 233
OldHeap: 0
Heap unused: 10
OldHeap unused: 0
Program counter: 0x818d3a90 (application_master:loop_it/4 + 40)
CP: 0x00000000 (invalid)
arity = 0
=proc:<0.10.0>
State: Waiting
Name: kernel_sup
Spawned as: proc_lib:init_p/5
Spawned by: <0.9.0>
Started: Tue Jun 15 23:30:15 2010
Message queue length: 0
Number of heap fragments: 0
Heap fragment data: 0
Link list: [<0.9.0>, <0.12.0>, <0.11.0>, <0.18.0>, <0.25.0>, <0.24.0>, <0.30.0>, <0.33.0>, <0.32.0>, <0.26.0>, <0.16.0>]
Reductions: 1303
Stack+heap: 1597
OldHeap: 377
Heap unused: 820
OldHeap unused: 377
Program counter: 0x818aa0c0 (gen_server:loop/6 + 144)
CP: 0x00000000 (invalid)
arity = 0
=proc:<0.11.0>
State: Waiting
Name: rex
Spawned as: proc_lib:init_p/5
Spawned by: <0.10.0>
Started: Tue Jun 15 23:30:15 2010
Message queue length: 0
Number of heap fragments: 0
Heap fragment data: 0
Link list: [<0.10.0>]
Reductions: 373
Stack+heap: 987
OldHeap: 377
Heap unused: 723
OldHeap unused: 377
Program counter: 0x818aa0c0 (gen_server:loop/6 + 144)
CP: 0x00000000 (invalid)
arity = 0
=proc:<0.12.0>
State: Waiting
Name: global_name_server
Spawned as: proc_lib:init_p/5
Spawned by: <0.10.0>
Started: Tue Jun 15 23:30:15 2010
Message queue length: 0
Number of heap fragments: 0
Heap fragment data: 0
Link list: [<0.10.0>, <0.15.0>, <0.14.0>, <0.13.0>]
Reductions: 430
Stack+heap: 377
OldHeap: 377
Heap unused: 316
OldHeap unused: 377
Program counter: 0x818aa0c0 (gen_server:loop/6 + 144)
CP: 0x00000000 (invalid)
arity = 0
=proc:<0.13.0>
State: Waiting
Spawned as: erlang:apply/2
Spawned by: <0.12.0>
Started: Tue Jun 15 23:30:15 2010
Message queue length: 0
Number of heap fragments: 0
Heap fragment data: 0
Link list: [<0.12.0>]
Reductions: 25
Stack+heap: 233
OldHeap: 0
Heap unused: 172
OldHeap unused: 0
Program counter: 0x819085fc (global:loop_the_locker/1 + 684)
CP: 0x00000000 (invalid)
arity = 0
=proc:<0.14.0>
State: Waiting
Spawned as: erlang:apply/2
Spawned by: <0.12.0>
Started: Tue Jun 15 23:30:15 2010
Message queue length: 0
Number of heap fragments: 0
Heap fragment data: 0
Link list: [<0.12.0>]
Reductions: 4
Stack+heap: 233
OldHeap: 0
Heap unused: 222
OldHeap unused: 0
Program counter: 0x8190ca08 (global:collect_deletions/2 + 76)
CP: 0x00000000 (invalid)
arity = 0
=proc:<0.15.0>
State: Waiting
Spawned as: erlang:apply/2
Spawned by: <0.12.0>
Started: Tue Jun 15 23:30:15 2010
Message queue length: 0
Number of heap fragments: 0
Heap fragment data: 0
Link list: [<0.12.0>]
Reductions: 3
Stack+heap: 233
OldHeap: 0
Heap unused: 223
OldHeap unused: 0
Program counter: 0x8190cb28 (global:loop_the_registrar/0 + 12)
CP: 0x00000000 (invalid)
arity = 0
=proc:<0.16.0>
State: Waiting
Name: inet_db
Spawned as: proc_lib:init_p/5
Spawned by: <0.10.0>
Started: Tue Jun 15 23:30:15 2010
Message queue length: 0
Number of heap fragments: 0
Heap fragment data: 0
Link list: [<0.10.0>]
Reductions: 161
Stack+heap: 233
OldHeap: 0
Heap unused: 134
OldHeap unused: 0
Program counter: 0x818aa0c0 (gen_server:loop/6 + 144)
CP: 0x00000000 (invalid)
arity = 0
=proc:<0.18.0>
State: Waiting
Name: net_sup
Spawned as: proc_lib:init_p/5
Spawned by: <0.10.0>
Started: Tue Jun 15 23:30:16 2010
Message queue length: 0
Number of heap fragments: 0
Heap fragment data: 0
Link list: [<0.10.0>, <0.21.0>, <0.20.0>, <0.19.0>]
Reductions: 313
Stack+heap: 377
OldHeap: 610
Heap unused: 29
OldHeap unused: 610
Program counter: 0x818aa0c0 (gen_server:loop/6 + 144)
CP: 0x00000000 (invalid)
arity = 0
=proc:<0.19.0>
State: Waiting
Name: erl_epmd
Spawned as: proc_lib:init_p/5
Spawned by: <0.18.0>
Started: Tue Jun 15 23:30:16 2010
Message queue length: 0
Number of heap fragments: 0
Heap fragment data: 0
Link list: [#Port<0.97>, <0.18.0>]
Reductions: 165
Stack+heap: 377
OldHeap: 377
Heap unused: 346
OldHeap unused: 377
Program counter: 0x818aa0c0 (gen_server:loop/6 + 144)
CP: 0x00000000 (invalid)
arity = 0
=proc:<0.20.0>
State: Waiting
Name: auth
Spawned as: proc_lib:init_p/5
Spawned by: <0.18.0>
Started: Tue Jun 15 23:30:16 2010
Message queue length: 0
Number of heap fragments: 0
Heap fragment data: 0
Link list: [<0.18.0>]
Reductions: 847
Stack+heap: 610
OldHeap: 377
Heap unused: 343
OldHeap unused: 377
Program counter: 0x818aa0c0 (gen_server:loop/6 + 144)
CP: 0x00000000 (invalid)
arity = 0
=proc:<0.21.0>
State: Waiting
Name: net_kernel
Spawned as: proc_lib:init_p/5
Spawned by: <0.18.0>
Started: Tue Jun 15 23:30:16 2010
Message queue length: 0
Number of heap fragments: 0
Heap fragment data: 0
Link list: [#Port<0.93>, <0.22.0>, <0.27.0>, <0.23.0>, <0.18.0>]
Reductions: 542
Stack+heap: 610
OldHeap: 377
Heap unused: 259
OldHeap unused: 377
Program counter: 0x818aa0c0 (gen_server:loop/6 + 144)
CP: 0x00000000 (invalid)
arity = 0
=proc:<0.22.0>
State: Waiting
Spawned as: inet_tcp_dist:accept_loop/2
Spawned by: <0.21.0>
Started: Tue Jun 15 23:30:16 2010
Message queue length: 0
Number of heap fragments: 0
Heap fragment data: 0
Link list: [<0.21.0>, {from,#Port<0.93>,#Ref<0.0.0.21>}]
Reductions: 276
Stack+heap: 233
OldHeap: 0
Heap unused: 38
OldHeap unused: 0
Program counter: 0xf589c1c8 (prim_inet:accept0/2 + 92)
CP: 0x00000000 (invalid)
arity = 0
=proc:<0.23.0>
State: Waiting
Spawned as: net_kernel:ticker/2
Spawned by: <0.21.0>
Started: Tue Jun 15 23:30:16 2010
Message queue length: 0
Number of heap fragments: 0
Heap fragment data: 0
Link list: [<0.21.0>]
Reductions: 3
Stack+heap: 233
OldHeap: 0
Heap unused: 229
OldHeap unused: 0
Program counter: 0x73ec3f24 (net_kernel:ticker_loop/2 + 28)
CP: 0x00000000 (invalid)
arity = 0
=proc:<0.24.0>
State: Waiting
Name: global_group
Spawned as: proc_lib:init_p/5
Spawned by: <0.10.0>
Started: Tue Jun 15 23:30:16 2010
Message queue length: 0
Number of heap fragments: 0
Heap fragment data: 0
Link list: [<0.10.0>]
Reductions: 80
Stack+heap: 233
OldHeap: 0
Heap unused: 105
OldHeap unused: 0
Program counter: 0x818aa0c0 (gen_server:loop/6 + 144)
CP: 0x00000000 (invalid)
arity = 0
=proc:<0.25.0>
State: Waiting
Name: file_server_2
Spawned as: proc_lib:init_p/5
Spawned by: <0.10.0>
Started: Tue Jun 15 23:30:16 2010
Message queue length: 0
Number of heap fragments: 0
Heap fragment data: 0
Link list: [#Port<0.102>, <0.57.0>, <0.58.0>, <0.10.0>]
Reductions: 9529
Stack+heap: 610
OldHeap: 377
Heap unused: 160
OldHeap unused: 377
Program counter: 0x818aa0c0 (gen_server:loop/6 + 144)
CP: 0x00000000 (invalid)
arity = 0
=proc:<0.26.0>
State: Waiting
Name: code_server
Spawned as: erlang:apply/2
Spawned by: <0.10.0>
Started: Tue Jun 15 23:30:16 2010
Message queue length: 0
Number of heap fragments: 0
Heap fragment data: 0
Link list: [<0.10.0>]
Reductions: 121147
Stack+heap: 4181
OldHeap: 10946
Heap unused: 617
OldHeap unused: 10946
Program counter: 0x73ef1f0c (code_server:loop/1 + 64)
CP: 0x00000000 (invalid)
arity = 0
=proc:<0.27.0>
State: Waiting
Spawned as: inet_tcp_dist:do_accept/6
Spawned by: <0.21.0>
Started: Tue Jun 15 23:30:16 2010
Message queue length: 0
Number of heap fragments: 0
Heap fragment data: 0
Link list: [#Port<0.210>, <0.21.0>]
Reductions: 467
Stack+heap: 377
OldHeap: 377
Heap unused: 215
OldHeap unused: 377
Program counter: 0x73efcc78 (dist_util:con_loop/9 + 72)
CP: 0x00000000 (invalid)
arity = 0
=proc:<0.30.0>
State: Waiting
Spawned as: proc_lib:init_p/5
Spawned by: <0.10.0>
Started: Tue Jun 15 23:30:16 2010
Message queue length: 0
Number of heap fragments: 0
Heap fragment data: 0
Link list: [<0.31.0>, <0.10.0>]
Reductions: 197
Stack+heap: 1597
OldHeap: 0
Heap unused: 484
OldHeap unused: 0
Program counter: 0x818aa0c0 (gen_server:loop/6 + 144)
CP: 0x00000000 (invalid)
arity = 0
=proc:<0.31.0>
State: Waiting
Name: user
Spawned as: user:server/2
Spawned by: <0.30.0>
Started: Tue Jun 15 23:30:16 2010
Message queue length: 0
Number of heap fragments: 0
Heap fragment data: 0
Link list: [#Port<0.358>, <0.30.0>]
Reductions: 2915
Stack+heap: 610
OldHeap: 2584
Heap unused: 75
OldHeap unused: 2584
Program counter: 0x73f2c870 (user:server_loop/2 + 32)
CP: 0x00000000 (invalid)
arity = 0
=proc:<0.32.0>
State: Waiting
Spawned as: proc_lib:init_p/5
Spawned by: <0.10.0>
Started: Tue Jun 15 23:30:16 2010
Message queue length: 0
Number of heap fragments: 0
Heap fragment data: 0
Link list: [<0.10.0>]
Reductions: 55
Stack+heap: 233
OldHeap: 0
Heap unused: 155
OldHeap unused: 0
Program counter: 0x818aa0c0 (gen_server:loop/6 + 144)
CP: 0x00000000 (invalid)
arity = 0
=proc:<0.33.0>
State: Waiting
Name: kernel_safe_sup
Spawned as: proc_lib:init_p/5
Spawned by: <0.10.0>
Started: Tue Jun 15 23:30:16 2010
Message queue length: 0
Number of heap fragments: 0
Heap fragment data: 0
Link list: [<0.10.0>, <0.47.0>, <0.46.0>, <0.95.0>, <0.81.0>, <0.80.0>]
Reductions: 441
Stack+heap: 610
OldHeap: 377
Heap unused: 383
OldHeap unused: 377
Program counter: 0x818aa0c0 (gen_server:loop/6 + 144)
CP: 0x00000000 (invalid)
arity = 0
=proc:<0.37.0>
State: Waiting
Spawned as: proc_lib:init_p/5
Spawned by: <0.36.0>
Started: Tue Jun 15 23:30:16 2010
Message queue length: 0
Number of heap fragments: 0
Heap fragment data: 0
Link list: [<0.38.0>, <0.6.0>]
Reductions: 27
Stack+heap: 233
OldHeap: 0
Heap unused: 97
OldHeap unused: 0
Program counter: 0x818d26f0 (application_master:main_loop/2 + 28)
CP: 0x00000000 (invalid)
arity = 0
=proc:<0.38.0>
State: Waiting
Spawned as: application_master:start_it/4
Spawned by: <0.37.0>
Started: Tue Jun 15 23:30:16 2010
Message queue length: 0
Number of heap fragments: 0
Heap fragment data: 0
Link list: [<0.40.0>, <0.37.0>]
Reductions: 91
Stack+heap: 233
OldHeap: 0
Heap unused: 61
OldHeap unused: 0
Program counter: 0x818d3a90 (application_master:loop_it/4 + 40)
CP: 0x00000000 (invalid)
arity = 0
=proc:<0.40.0>
State: Waiting
Name: sasl_sup
Spawned as: proc_lib:init_p/5
Spawned by: <0.38.0>
Started: Tue Jun 15 23:30:16 2010
Message queue length: 0
Number of heap fragments: 0
Heap fragment data: 0
Link list: [<0.38.0>, <0.44.0>, <0.41.0>]
Reductions: 185
Stack+heap: 233
OldHeap: 377
Heap unused: 124
OldHeap unused: 377
Program counter: 0x818aa0c0 (gen_server:loop/6 + 144)
CP: 0x00000000 (invalid)
arity = 0
=proc:<0.41.0>
State: Waiting
Name: sasl_safe_sup
Spawned as: proc_lib:init_p/5
Spawned by: <0.40.0>
Started: Tue Jun 15 23:30:16 2010
Message queue length: 0
Number of heap fragments: 0
Heap fragment data: 0
Link list: [<0.40.0>, <0.43.0>, <0.42.0>]
Reductions: 200
Stack+heap: 377
OldHeap: 0
Heap unused: 66
OldHeap unused: 0
Program counter: 0x818aa0c0 (gen_server:loop/6 + 144)
CP: 0x00000000 (invalid)
arity = 0
=proc:<0.42.0>
State: Waiting
Name: alarm_handler
Spawned as: proc_lib:init_p/5
Spawned by: <0.41.0>
Started: Tue Jun 15 23:30:16 2010
Message queue length: 0
Number of heap fragments: 0
Heap fragment data: 0
Link list: [<0.41.0>]
Reductions: 50
Stack+heap: 233
OldHeap: 0
Heap unused: 96
OldHeap unused: 0
Program counter: 0x8187cb7c (gen_event:fetch_msg/5 + 44)
CP: 0x00000000 (invalid)
arity = 0
=proc:<0.43.0>
State: Waiting
Name: overload
Spawned as: proc_lib:init_p/5
Spawned by: <0.41.0>
Started: Tue Jun 15 23:30:16 2010
Message queue length: 0
Number of heap fragments: 0
Heap fragment data: 0
Link list: [<0.41.0>]
Reductions: 47
Stack+heap: 233
OldHeap: 0
Heap unused: 151
OldHeap unused: 0
Program counter: 0x818aa0c0 (gen_server:loop/6 + 144)
CP: 0x00000000 (invalid)
arity = 0
=proc:<0.44.0>
State: Waiting
Name: release_handler
Spawned as: proc_lib:init_p/5
Spawned by: <0.40.0>
Started: Tue Jun 15 23:30:16 2010
Message queue length: 0
Number of heap fragments: 0
Heap fragment data: 0
Link list: [<0.40.0>]
Reductions: 1408
Stack+heap: 987
OldHeap: 610
Heap unused: 118
OldHeap unused: 610
Program counter: 0x818aa0c0 (gen_server:loop/6 + 144)
CP: 0x00000000 (invalid)
arity = 0
=proc:<0.46.0>
State: Waiting
Name: dets_sup
Spawned as: proc_lib:init_p/5
Spawned by: <0.33.0>
Started: Tue Jun 15 23:30:16 2010
Message queue length: 0
Number of heap fragments: 0
Heap fragment data: 0
Link list: [<0.33.0>]
Reductions: 391
Stack+heap: 377
OldHeap: 610
Heap unused: 242
OldHeap unused: 610
Program counter: 0x818aa0c0 (gen_server:loop/6 + 144)
CP: 0x00000000 (invalid)
arity = 0
=proc:<0.47.0>
State: Waiting
Name: dets
Spawned as: proc_lib:init_p/5
Spawned by: <0.33.0>
Started: Tue Jun 15 23:30:16 2010
Message queue length: 0
Number of heap fragments: 0
Heap fragment data: 0
Link list: [<0.33.0>]
Reductions: 573
Stack+heap: 610
OldHeap: 377
Heap unused: 142
OldHeap unused: 377
Program counter: 0x818aa0c0 (gen_server:loop/6 + 144)
CP: 0x00000000 (invalid)
arity = 0
=proc:<0.57.0>
State: Scheduled
Spawned as: erlang:apply/2
Spawned by: <0.25.0>
Started: Tue Jun 15 23:30:16 2010
Message queue length: 1
Number of heap fragments: 0
Heap fragment data: 0
Link list: [#Port<0.594>, <0.25.0>, {from,<0.5.0>,#Ref<0.0.0.529>}, {to,<0.5.0>,#Ref<0.0.0.123>}]
Reductions: 1861
Stack+heap: 987
OldHeap: 987
Heap unused: 140
OldHeap unused: 987
Program counter: 0xf587cb80 (prim_file:drv_get_response/1 + 36)
CP: 0x00000000 (invalid)
arity = 0
=proc:<0.58.0>
State: Waiting
Spawned as: erlang:apply/2
Spawned by: <0.25.0>
Started: Tue Jun 15 23:30:16 2010
Message queue length: 0
Number of heap fragments: 0
Heap fragment data: 0
Link list: [#Port<0.597>, <0.25.0>, {to,<0.5.0>,#Ref<0.0.0.131>}]
Reductions: 4539
Stack+heap: 10946
OldHeap: 6765
Heap unused: 3740
OldHeap unused: 6765
Program counter: 0x73f2ef04 (file_io_server:server_loop/1 + 76)
CP: 0x00000000 (invalid)
arity = 0
=proc:<0.80.0>
State: Waiting
Name: disk_log_sup
Spawned as: proc_lib:init_p/5
Spawned by: <0.33.0>
Started: Tue Jun 15 23:30:17 2010
Message queue length: 0
Number of heap fragments: 0
Heap fragment data: 0
Link list: [<0.33.0>]
Reductions: 1087
Stack+heap: 987
OldHeap: 610
Heap unused: 690
OldHeap unused: 610
Program counter: 0x818aa0c0 (gen_server:loop/6 + 144)
CP: 0x00000000 (invalid)
arity = 0
=proc:<0.81.0>
State: Waiting
Name: disk_log_server
Spawned as: proc_lib:init_p/5
Spawned by: <0.33.0>
Started: Tue Jun 15 23:30:17 2010
Message queue length: 0
Number of heap fragments: 0
Heap fragment data: 0
Link list: [<0.33.0>]
Reductions: 1332
Stack+heap: 987
OldHeap: 987
Heap unused: 553
OldHeap unused: 987
Program counter: 0x818aa0c0 (gen_server:loop/6 + 144)
CP: 0x00000000 (invalid)
arity = 0
=proc:<0.95.0>
State: Waiting
Name: timer_server
Spawned as: proc_lib:init_p/5
Spawned by: <0.33.0>
Started: Tue Jun 15 23:30:17 2010
Message queue length: 0
Number of heap fragments: 0
Heap fragment data: 0
Link list: [<0.33.0>]
Reductions: 190
Stack+heap: 233
OldHeap: 377
Heap unused: 140
OldHeap unused: 377
Program counter: 0x818aa0c0 (gen_server:loop/6 + 144)
CP: 0x00000000 (invalid)
arity = 0
=port:#Port<0.1>
Slot: 1
Connected: <0.2.0>
Links: <0.2.0>
Port controls linked-in driver: efile
=port:#Port<0.93>
Slot: 93
Connected: <0.21.0>
Links: <0.21.0>
Monitors: (<0.22.0>,#Ref<0.0.0.21>)
Port controls linked-in driver: tcp_inet
=port:#Port<0.97>
Slot: 97
Connected: <0.19.0>
Links: <0.19.0>
Port controls linked-in driver: tcp_inet
=port:#Port<0.102>
Slot: 102
Connected: <0.25.0>
Links: <0.25.0>
Port controls linked-in driver: efile
=port:#Port<0.210>
Slot: 210
Connected: <0.27.0>
Links: <0.27.0>
Port controls linked-in driver: tcp_inet
=port:#Port<0.358>
Slot: 358
Connected: <0.31.0>
Links: <0.31.0>
Port is UNIX fd not opened by emulator: 0/1
=port:#Port<0.594>
Slot: 594
Connected: <0.57.0>
Links: <0.57.0>
Port controls linked-in driver: efile
=port:#Port<0.597>
Slot: 597
Connected: <0.58.0>
Links: <0.58.0>
Port controls linked-in driver: efile
=ets:<0.6.0>
Slot: 0
Table: ac_tab
Name: ac_tab
Buckets: 256 
Objects: 32
Words: 2045
=ets:<0.12.0>
Slot: 1
Table: global_locks
Name: global_locks
Buckets: 256 
Objects: 0
Words: 288
=ets:<0.12.0>
Slot: 2
Table: global_names
Name: global_names
Buckets: 256 
Objects: 0
Words: 288
=ets:<0.12.0>
Slot: 3
Table: global_names_ext
Name: global_names_ext
Buckets: 256 
Objects: 0
Words: 288
=ets:<0.12.0>
Slot: 4
Table: global_pid_names
Name: global_pid_names
Buckets: 256 
Objects: 0
Words: 288
=ets:<0.12.0>
Slot: 5
Table: global_pid_ids
Name: global_pid_ids
Buckets: 256 
Objects: 0
Words: 288
=ets:<0.16.0>
Slot: 6
Table: inet_db
Name: inet_db
Buckets: 256 
Objects: 21
Words: 556
=ets:<0.16.0>
Slot: 7
Table: inet_cache
Name: inet_cache
Buckets: 256 
Objects: 0
Words: 288
=ets:<0.16.0>
Slot: 8
Table: inet_hosts
Name: inet_hosts
Buckets: 256 
Objects: 0
Words: 288
=ets:<0.20.0>
Slot: 9
Table: 9
Name: cookies
Buckets: 256 
Objects: 0
Words: 288
=ets:<0.21.0>
Slot: 10
Table: sys_dist
Name: sys_dist
Buckets: 256 
Objects: 1
Words: 326
=ets:<0.25.0>
Slot: 11
Table: file_io_servers
Name: file_io_servers
Buckets: 256 
Objects: 2
Words: 430
=ets:<0.26.0>
Slot: 12
Table: 4108
Name: code
Buckets: 256 
Objects: 325
Words: 18838
=ets:<0.26.0>
Slot: 13
Table: 8205
Name: code_names
Buckets: 256 
Objects: 41
Words: 4163
=ets:<0.47.0>
Slot: 15
Table: dets_registry
Name: dets_registry
Buckets: 256 
Objects: 0
Words: 288
=ets:<0.47.0>
Slot: 16
Table: dets_owners
Name: dets_owners
Buckets: 256 
Objects: 0
Words: 288
=ets:<0.47.0>
Slot: 17
Table: 16401
Name: dets
Buckets: 256 
Objects: 0
Words: 288
=ets:<0.81.0>
Slot: 27
Table: disk_log_names
Name: disk_log_names
Buckets: 256 
Objects: 0
Words: 288
=ets:<0.81.0>
Slot: 28
Table: disk_log_pids
Name: disk_log_pids
Buckets: 256 
Objects: 0
Words: 288
=ets:<0.95.0>
Slot: 29
Table: timer_tab
Name: timer_tab
Ordered set (AVL tree), Elements: 0
Objects: 0
Words: 81
=ets:<0.95.0>
Slot: 30
Table: timer_interval_tab
Name: timer_interval_tab
Buckets: 256 
Objects: 0
Words: 288
=timer:<0.16.0>
Message: refresh_timeout
Time left: 3597896 ms
=node:'rabbit at mail'
=hidden_node:4641
Name: 'rabbitmq_multi11504 at mail'
Controller: #Port<0.210>
Creation: 3
=loaded_modules
Current code: 2933256
Old code: 0
=mod:otp_ring0
Current size: 620
=mod:init
Current size: 34500
=mod:prim_inet
Current size: 49900
=mod:prim_file
Current size: 21777
=mod:zlib
Current size: 6940
=mod:prim_zip
Current size: 14356
=mod:erl_prim_loader
Current size: 39024
=mod:erlang
Current size: 13332
=mod:error_handler
Current size: 3091
Current attributes: 836C00000001680264000376736E6C000000016E1000D23B39A357B2A7F911CFF385E91260E86A6A
Current compilation info
=mod:heart
Current size: 6735
Current attributes: 836C00000001680264000376736E6C000000016E1000BC29771F25E73FAD2B29973D0520F8F06A6A
Current compilation info
=mod:error_logger
Current size: 6546
Current attributes: 836C00000001680264000376736E6C000000016E1000C8781D336BA5F74C47B1D4EE4476A6046A6A
Current compilation info
=mod:gen_event
Current size: 24644
Current attributes: 836C00000001680264000376736E6C000000016E1000FBD6FF7C787BAE5AA3D9525E25316DCB6A6A
Current compilation info
=mod:gen
Current size: 6702
Current attributes: 836C00000001680264000376736E6C000000016E10001FD7BEC4AA9DF013FB48BC75305F4FF16A6A
Current compilation info
=mod:proc_lib
Current size: 14483
Current attributes: 836C00000001680264000376736E6C000000016E100029C4BAD7843D735E8C575AFEBB695D1F6A6A
Current compilation info
=mod:application_controller
Current size: 56704
Current attributes: 836C00000001680264000376736E6C000000016E1000902D3C59E381591605A211EB2EE3A9926A6A
Current compilation info
=mod:lists
Current size: 58292
Current attributes: 836C00000001680264000376736E6C000000016E10000B6E445B1819F75CA0775775CB030B546A6A
Current compilation info
=mod:erl_scan
Current size: 22111
Current attributes: 836C00000001680264000376736E6C000000016E1000564FF0CCF7E455FC19A99C19BDDB4B836A6A
Current compilation info
=mod:erl_parse
Current size: 118794
Current attributes: 836C00000001680264000376736E6C000000016E10006ADE09A5DF38A070F66821BD914A47076A6A
Current compilation info
=mod:gen_server
Current size: 21873
Current attributes: 836C00000001680264000376736E6C000000016E10008A986F50365FCAFB0B5B6368FB2789896A6A
Current compilation info
=mod:application
Current size: 2917
Current attributes: 836C00000001680264000376736E6C000000016E1000726170026687466698C15C3BD0F932706A6A
Current compilation info
=mod:sys
Current size: 12082
Current attributes: 836C00000001680264000376736E6C000000016E10005D3F4A743C151748C5FFB8EB641D38886A6A
Current compilation info
=mod:application_master
Current size: 10392
Current attributes: 836C00000001680264000376736E6C000000016E100036D36567444B98D8FB52C75E55F120F96A6A
Current compilation info
=mod:kernel
Current size: 8081
Current attributes: 836C00000002680264000376736E6C000000016E1000E3AF5CAA88DC0FDD1C8A97A8539EE2B76A68026400096265686176696F75726C0000000164000A73757065727669736F726A6A
Current compilation info
=mod:supervisor
Current size: 27858
Current attributes: 836C00000002680264000376736E6C000000016E1000A3C8FC556F75E24CD42464B047E567026A68026400096265686176696F75726C0000000164000A67656E5F7365727665726A6A
Current compilation info
=mod:dict
Current size: 16847
Current attributes: 836C00000001680264000376736E6C000000016E1000F2500C87EF1FCBEB3B0A2F29864288476A6A
Current compilation info
=mod:rpc
Current size: 12909
Current attributes: 836C00000003680264000376736E6C000000016E100011FC8F079CB4F57BB9470F027C2E9EF46A68026400096265686176696F75726C0000000164000A67656E5F7365727665726A680264000A646570726563617465646C000000026802640016736166655F6D756C74695F7365727665725F63616C6C61026802640016736166655F6D756C74695F7365727665725F63616C6C61036A6A
Current compilation info
=mod:gb_trees
Current size: 8267
Current attributes: 836C00000001680264000376736E6C000000016E10001D5FE72F8EB19DB9C1B88336CF1871026A6A
Current compilation info
=mod:global
Current size: 61145
Current attributes: 836C00000002680264000376736E6C000000016E1000B0293D0FFA8E31A4B98627A2AB63465F6A68026400096265686176696F75726C0000000164000A67656E5F7365727665726A6A
Current compilation info
=mod:inet_db
Current size: 36817
Current attributes: 836C00000001680264000376736E6C000000016E1000F08ECFFAD77E23146DC939ADF89A77416A6A
Current compilation info
=mod:inet_config
Current size: 18149
Current attributes: 836C00000001680264000376736E6C000000016E10009D8A7ECB5569593C41AE1E2EBC77F1576A6A
Current compilation info
=mod:os
Current size: 6332
Current attributes: 836C00000001680264000376736E6C000000016E100024C7119F916ABBD2394420D71FA9E1BC6A6A
Current compilation info
=mod:inet_udp
Current size: 2554
Current attributes: 836C00000001680264000376736E6C000000016E1000C5477F1B546C33C5BB5FCC2E89D5E72B6A6A
Current compilation info
=mod:inet
Current size: 29014
Current attributes: 836C00000001680264000376736E6C000000016E100066CD8B3904E2A19B7FC1F8BF5910F6686A6A
Current compilation info
=mod:inet_parse
Current size: 22684
Current attributes: 836C00000001680264000376736E6C000000016E1000A11277805A759EAB5601A16A9C315A5B6A6A
Current compilation info
=mod:inet_gethost_native
Current size: 16357
Current attributes: 836C00000002680264000376736E6C000000016E10006CAC3F1AD4215BADB73D69F65CE317596A68026400096265686176696F75726C0000000164001173757065727669736F725F6272696467656A6A
Current compilation info
=mod:erl_distribution
Current size: 2487
Current attributes: 836C00000002680264000376736E6C000000016E10001AAD366E7B81593E4AF26A0CF5D1673B6A68026400096265686176696F75726C0000000164000A73757065727669736F726A6A
Current compilation info
=mod:net_kernel
Current size: 41533
Current attributes: 836C00000002680264000376736E6C000000016E10006372854AAAE5F38ABA181F096F383AC96A68026400096265686176696F75726C0000000164000A67656E5F7365727665726A6A
Current compilation info
=mod:inet_tcp_dist
Current size: 11563
Current attributes: 836C00000001680264000376736E6C000000016E100085248D2EBC8B66C274D5B7B82F85EA166A6A
Current compilation info
=mod:erl_epmd
Current size: 14375
Current attributes: 836C00000002680264000376736E6C000000016E10000C8E73A62BE40030322791BA2570D32E6A68026400096265686176696F75726C0000000164000A67656E5F7365727665726A6A
Current compilation info
=mod:auth
Current size: 11981
Current attributes: 836C00000003680264000376736E6C000000016E1000913D09043A0A2E5D6411B876A0FADC176A68026400096265686176696F75726C0000000164000A67656E5F7365727665726A680264000A646570726563617465646C00000003680264000769735F6175746861016802640006636F6F6B69656400015F680264000B6E6F64655F636F6F6B69656400015F6A6A
Current compilation info
=mod:filename
Current size: 16431
Current attributes: 836C00000001680264000376736E6C000000016E10006E2DAFCD53ADF66A79FD2773BA00BCE46A6A
Current compilation info
=mod:file
Current size: 20298
Current attributes: 836C00000002680264000376736E6C000000016E100066EF5E833471F43BC51FE251564E99736A680264000A646570726563617465646C0000000168036400077261776F70656E61026400126E6578745F6D616A6F725F72656C656173656A6A
Current compilation info
=mod:inet_tcp
Current size: 2878
Current attributes: 836C00000001680264000376736E6C000000016E1000AE1C009DE38594DD1B4745C5751BD8F76A6A
Current compilation info: 836C0000000468026400076F7074696F6E736C0000000568026400036377646B002F2F6275696C642F6275696C64642F65726C616E672D31322E622E352D646673672F6C69622F6B65726E656C2F73726368026400066F75746469726B00372F6275696C642F6275696C64642F65726C616E672D31322E622E352D646673672F6C69622F6B65726E656C2F7372632F2E2E2F6562696E6802640001696B003A2F6275696C642F6275696C64642F65726C616E672D31322E622E352D646673672F6C69622F6B65726E656C2F7372632F2E2E2F696E636C7564656400137761726E5F6F62736F6C6574655F677561726464000A64656275675F696E666F6A680264000776657273696F6E6B0005342E352E35680264000474696D65680662000007D96102611461056111610A6802640006736F757263656B003C2F6275696C642F6275696C64642F65726C616E672D31322E622E352D646673672F6C69622F6B65726E656C2F7372632F696E65745F7463702E65726C6A
=mod:gen_tcp
Current size: 3453
Current attributes: 836C00000001680264000376736E6C000000016E10003CCB5DA1BCBF83F8ADBA01E91A8554496A6A
Current compilation info
=mod:global_group
Current size: 32083
Current attributes: 836C00000002680264000376736E6C000000016E100056BFC5CFE9A76A2F7E287C2B661EA3BD6A68026400096265686176696F75726C0000000164000A67656E5F7365727665726A6A
Current compilation info
=mod:file_server
Current size: 7958
Current attributes: 836C00000002680264000376736E6C000000016E1000651D689B0650F7652654DA8EC5A65D206A68026400096265686176696F75726C0000000164000A67656E5F7365727665726A6A
Current compilation info: 836C0000000468026400076F7074696F6E736C0000000568026400036377646B002F2F6275696C642F6275696C64642F65726C616E672D31322E622E352D646673672F6C69622F6B65726E656C2F73726368026400066F75746469726B00372F6275696C642F6275696C64642F65726C616E672D31322E622E352D646673672F6C69622F6B65726E656C2F7372632F2E2E2F6562696E6802640001696B003A2F6275696C642F6275696C64642F65726C616E672D31322E622E352D646673672F6C69622F6B65726E656C2F7372632F2E2E2F696E636C7564656400137761726E5F6F62736F6C6574655F677561726464000A64656275675F696E666F6A680264000776657273696F6E6B0005342E352E35680264000474696D65680662000007D96102611461056110613A6802640006736F757263656B003F2F6275696C642F6275696C64642F65726C616E672D31322E622E352D646673672F6C69622F6B65726E656C2F7372632F66696C655F7365727665722E65726C6A
=mod:code
Current size: 9882
Current attributes: 836C00000001680264000376736E6C000000016E10004B94A88D42E5DB306778C34B4FD091E66A6A
Current compilation info
=mod:code_server
Current size: 39957
Current attributes: 836C00000001680264000376736E6C000000016E1000161A9AF291E8E1A80320D14C373000886A6A
Current compilation info: 836C0000000468026400076F7074696F6E736C0000000568026400036377646B002F2F6275696C642F6275696C64642F65726C616E672D31322E622E352D646673672F6C69622F6B65726E656C2F73726368026400066F75746469726B00372F6275696C642F6275696C64642F65726C616E672D31322E622E352D646673672F6C69622F6B65726E656C2F7372632F2E2E2F6562696E6802640001696B003A2F6275696C642F6275696C64642F65726C616E672D31322E622E352D646673672F6C69622F6B65726E656C2F7372632F2E2E2F696E636C7564656400137761726E5F6F62736F6C6574655F677561726464000A64656275675F696E666F6A680264000776657273696F6E6B0005342E352E35680264000474696D65680662000007D96102611461056110612F6802640006736F757263656B003F2F6275696C642F6275696C64642F65726C616E672D31322E622E352D646673672F6C69622F6B65726E656C2F7372632F636F64655F7365727665722E65726C6A
=mod:packages
Current size: 3198
Current attributes: 836C00000001680264000376736E6C000000016E1000BEAD647E2F6FF604BE3AC18D834A3D246A6A
Current compilation info: 836C0000000468026400076F7074696F6E736C0000000568026400036377646B002F2F6275696C642F6275696C64642F65726C616E672D31322E622E352D646673672F6C69622F6B65726E656C2F73726368026400066F75746469726B00372F6275696C642F6275696C64642F65726C616E672D31322E622E352D646673672F6C69622F6B65726E656C2F7372632F2E2E2F6562696E6802640001696B003A2F6275696C642F6275696C64642F65726C616E672D31322E622E352D646673672F6C69622F6B65726E656C2F7372632F2E2E2F696E636C7564656400137761726E5F6F62736F6C6574655F677561726464000A64656275675F696E666F6A680264000776657273696F6E6B0005342E352E35680264000474696D65680662000007D96102611461056111610F6802640006736F757263656B003C2F6275696C642F6275696C64642F65726C616E672D31322E622E352D646673672F6C69622F6B65726E656C2F7372632F7061636B616765732E65726C6A
=mod:hipe_unified_loader
Current size: 20441
Current attributes: 836C00000001680264000376736E6C000000016E1000698C5D775D4C628BDA83EB64F392AC3F6A6A
Current compilation info
=mod:gb_sets
Current size: 13042
Current attributes: 836C00000001680264000376736E6C000000016E1000990386ADBD6283AA0B998FB15FA798426A6A
Current compilation info
=mod:ets
Current size: 32738
Current attributes: 836C00000001680264000376736E6C000000016E100071FC49C1CFC6965A3F0035E9C0A3C8C86A6A
Current compilation info
=mod:dist_util
Current size: 21603
Current attributes: 836C00000001680264000376736E6C000000016E10007F59F7035B2E280F0EB776AFA88A50656A6A
Current compilation info
=mod:rabbit
Current size: 9364
Current attributes: 836C00000002680264000376736E6C000000016E1000BEF485FB4BB76020508DE6B03074DC2D6A68026400096265686176696F75726C0000000164000B6170706C69636174696F6E6A6A
Current compilation info
=mod:rabbit_mnesia
Current size: 11333
Current attributes: 836C00000001680264000376736E6C000000016E1000F849BBADCDBAC29388A3D6B1B18050F16A6A
Current compilation info
=mod:mnesia
Current size: 75753
Current attributes: 836C00000001680264000376736E6B000C6D6E657369615F342E342E376A
Current compilation info
=mod:mnesia_schema
Current size: 102780
Current attributes: 836C00000001680264000376736E6B000C6D6E657369615F342E342E376A
Current compilation info
=mod:user_sup
Current size: 2562
Current attributes: 836C00000002680264000376736E6C000000016E10008BA7996379188F9E5F5EA3DA01FDC1D96A68026400096265686176696F75726C0000000164001173757065727669736F725F6272696467656A6A
Current compilation info
=mod:mnesia_lib
Current size: 40513
Current attributes: 836C00000001680264000376736E6B000C6D6E657369615F342E342E376A
Current compilation info: 836C0000000468026400076F7074696F6E736C0000000668026400036377646B002F2F6275696C642F6275696C64642F65726C616E672D31322E622E352D646673672F6C69622F6D6E657369612F73726368026400066F75746469726B00372F6275696C642F6275696C64642F65726C616E672D31322E622E352D646673672F6C69622F6D6E657369612F7372632F2E2E2F6562696E6804640009617474726962757465640006696E7365727464000376736E6B000C6D6E657369615F342E342E37680264000F70617273655F7472616E73666F726D6400127379735F7072655F617474726962757465736400107761726E5F756E757365645F7661727364000A64656275675F696E666F6A680264000776657273696F6E6B0005342E352E35680264000474696D65680662000007D9610261146105613561116802640006736F757263656B003E2F6275696C642F6275696C64642F65726C616E672D31322E622E352D646673672F6C69622F6D6E657369612F7372632F6D6E657369615F6C69622E65726C6A
=mod:supervisor_bridge
Current size: 3121
Current attributes: 836C00000002680264000376736E6C000000016E1000D8EC7E85CC056881779DB0ED3DD989296A68026400096265686176696F75726C0000000164000A67656E5F7365727665726A6A
Current compilation info
=mod:user
Current size: 10574
Current attributes: 836C00000001680264000376736E6C000000016E100022CC25D020FE46F9A1462992ACCCF5FE6A6A
Current compilation info
=mod:queue
Current size: 11198
Current attributes: 836C00000001680264000376736E6C000000016E1000ED34FF61B831579D5BF597118C3DA8BE6A6A
Current compilation info
=mod:kernel_config
Current size: 3596
Current attributes: 836C00000002680264000376736E6C000000016E1000FF8CF8C34792DEE22724DDE1006314476A68026400096265686176696F75726C0000000164000A67656E5F7365727665726A6A
Current compilation info
=mod:error_logger_file_h
Current size: 9346
Current attributes: 836C00000002680264000376736E6C000000016E1000379683114D0E84DEB8A2BCE0399604FA6A68026400096265686176696F75726C0000000164000967656E5F6576656E746A6A
Current compilation info
=mod:file_io_server
Current size: 11868
Current attributes: 836C00000001680264000376736E6C000000016E1000E884DF41A3BEBB3A16392511884FC5606A6A
Current compilation info
=mod:mnesia_monitor
Current size: 25798
Current attributes: 836C00000002680264000376736E6B000C6D6E657369615F342E342E3768026400096265686176696F75726C0000000164000A67656E5F7365727665726A6A
Current compilation info
=mod:sasl
Current size: 3966
Current attributes: 836C00000002680264000376736E6C000000016E1000E96CB389515C9500608AE3E263FA73296A68026400096265686176696F75726C0000000164000B6170706C69636174696F6E6A6A
Current compilation info
=mod:mnesia_bup
Current size: 44857
Current attributes: 836C00000001680264000376736E6B000C6D6E657369615F342E342E376A
Current compilation info
=mod:sasl_report_file_h
Current size: 1518
Current attributes: 836C00000001680264000376736E6C000000016E10003E2B8585A6A8046772649361772033906A6A
Current compilation info
=mod:alarm_handler
Current size: 1889
Current attributes: 836C00000001680264000376736E6C000000016E10003A9031E94DF7AE014425E094E2C1DE556A6A
Current compilation info
=mod:dets
Current size: 100847
Current attributes: 836C00000001680264000376736E6C000000016E1000C24B798CC2B515F1A7A98E8FA62CC1336A6A
Current compilation info
=mod:overload
Current size: 6256
Current attributes: 836C00000001680264000376736E6C000000016E1000DA1D37BCC1744A31F4CC42DAE693FA3F6A6A
Current compilation info
=mod:calendar
Current size: 8291
Current attributes: 836C00000002680264000376736E6C000000016E1000F0DA2E1AC227DA8EF60083F543C7BB2B6A680264000A646570726563617465646C00000001680264001C6C6F63616C5F74696D655F746F5F756E6976657273616C5F74696D6561016A6A
Current compilation info
=mod:timer
Current size: 7752
Current attributes: 836C00000001680264000376736E6C000000016E100098424A9CE3F7E0204C677AAE3D6E97A96A6A
Current compilation info
=mod:release_handler
Current size: 48756
Current attributes: 836C00000002680264000376736E6C000000016E100062161B4A568A367186AAC705894B7B646A68026400096265686176696F75726C0000000164000A67656E5F7365727665726A6A
Current compilation info
=mod:sasl_report
Current size: 7319
Current attributes: 836C00000001680264000376736E6C000000016E1000E9AF0FDD3BDF8CC564E8ECA18851249E6A6A
Current compilation info
=mod:dets_server
Current size: 10599
Current attributes: 836C00000002680264000376736E6C000000016E10009688A62300311E15DCFEB067647745BC6A68026400096265686176696F75726C0000000164000A67656E5F7365727665726A6A
Current compilation info
=mod:io
Current size: 7873
Current attributes: 836C00000001680264000376736E6C000000016E1000FF9425731BC79DA917711641F37CE2206A6A
Current compilation info
=mod:dets_sup
Current size: 900
Current attributes: 836C00000002680264000376736E6C000000016E1000331297F2859514929EB42259990AA9326A68026400096265686176696F75726C0000000164000A73757065727669736F726A6A
Current compilation info
=mod:io_lib
Current size: 11386
Current attributes: 836C00000001680264000376736E6C000000016E100095EAE0D61EF6AF53A61AC16E68C606616A6A
Current compilation info
=mod:dets_utils
Current size: 51699
Current attributes: 836C00000001680264000376736E6C000000016E1000F6FC6AE1EF704CA290FA2E5519A56F886A6A
Current compilation info
=mod:c
Current size: 33584
Current attributes: 836C00000001680264000376736E6C000000016E1000356121C6CB563546DAD26051F594CAF96A6A
Current compilation info
=mod:erl_eval
Current size: 38219
Current attributes: 836C00000001680264000376736E6C000000016E1000CEC08C4C9017B2B8FEE8D9EC59AC4CD56A6A
Current compilation info
=mod:dets_v9
Current size: 98238
Current attributes: 836C00000001680264000376736E6C000000016E1000ECA1B9178C2B3C5B4747B99A9F9E74146A6A
Current compilation info
=mod:orddict
Current size: 4962
Current attributes: 836C00000001680264000376736E6C000000016E10004FE2C50A75613AB2917D8D0FE2C8598F6A6A
Current compilation info
=mod:rabbit_error_logger_file_h
Current size: 1513
Current attributes: 836C00000002680264000376736E6C000000016E1000E2D78F00BBAFDC32081A8204D2DFFEC76A68026400096265686176696F75726C0000000164000967656E5F6576656E746A6A
Current compilation info
=mod:rabbit_misc
Current size: 13129
Current attributes: 836C00000001680264000376736E6C000000016E10001884727EA84B2673EDEF4104843F7F866A6A
Current compilation info: 836C0000000468026400076F7074696F6E736C0000000468026400036377646B00682F7661722F746D702F7261626269742D6275696C642E363431372F7261626269746D712D756D6272656C6C612F7261626269746D712D7365727665722F7061636B6167696E672F646562732F44656269616E2F7261626269746D712D7365727665722D312E372E3168026400066F75746469726B006D2F7661722F746D702F7261626269742D6275696C642E363431372F7261626269746D712D756D6272656C6C612F7261626269746D712D7365727665722F7061636B6167696E672F646562732F44656269616E2F7261626269746D712D7365727665722D312E372E312F6562696E6802640001696B00702F7661722F746D702F7261626269742D6275696C642E363431372F7261626269746D712D756D6272656C6C612F7261626269746D712D7365727665722F7061636B6167696E672F646562732F44656269616E2F7261626269746D712D7365727665722D312E372E312F696E636C75646564000A64656275675F696E666F6A680264000776657273696F6E6B0005342E342E35680264000474696D65680662000007DA61016116610E6114611A6802640006736F757263656B007C2F7661722F746D702F7261626269742D6275696C642E363431372F7261626269746D712D756D6272656C6C612F7261626269746D712D7365727665722F7061636B6167696E672F646562732F44656269616E2F7261626269746D712D7365727665722D312E372E312F7372632F7261626269745F6D6973632E65726C6A
=mod:filelib
Current size: 8682
Current attributes: 836C00000001680264000376736E6C000000016E1000BB08B3BBEE791FE444682221D083C4086A6A
Current compilation info: 836C0000000468026400076F7074696F6E736C0000000668026400036377646B002F2F6275696C642F6275696C64642F65726C616E672D31322E622E352D646673672F6C69622F7374646C69622F73726368026400066F75746469726B00372F6275696C642F6275696C64642F65726C616E672D31322E622E352D646673672F6C69622F7374646C69622F7372632F2E2E2F6562696E6802640001696B003A2F6275696C642F6275696C64642F65726C616E672D31322E622E352D646673672F6C69622F7374646C69622F7372632F2E2E2F696E636C7564656802640001696B00442F6275696C642F6275696C64642F65726C616E672D31322E622E352D646673672F6C69622F7374646C69622F7372632F2E2E2F2E2E2F6B65726E656C2F696E636C7564656400137761726E5F6F62736F6C6574655F677561726464000A64656275675F696E666F6A680264000776657273696F6E6B0005342E352E35680264000474696D65680662000007D96102611461056110610E6802640006736F757263656B003B2F6275696C642F6275696C64642F65726C616E672D31322E622E352D646673672F6C69622F7374646C69622F7372632F66696C656C69622E65726C6A
=mod:rabbit_sasl_report_file_h
Current size: 1813
Current attributes: 836C00000002680264000376736E6C000000016E10004D2C6BDBFB7E3124C0617A078BD8486A6A68026400096265686176696F75726C0000000164000967656E5F6576656E746A6A
Current compilation info
=mod:os_mon
Current size: 5011
Current attributes: 836C00000003680264000376736E6C000000016E100019A0FEBD95506EE08859AAEB1D85494F6A68026400096265686176696F75726C0000000164000B6170706C69636174696F6E6A68026400096265686176696F75726C0000000164000A73757065727669736F726A6A
Current compilation info
=mod:cpu_sup
Current size: 24085
Current attributes: 836C00000001680264000376736E6C000000016E100000DF0EAA8369F08D118EDFAC89EE8A666A6A
Current compilation info
=mod:mnesia_sup
Current size: 2528
Current attributes: 836C00000003680264000376736E6B000C6D6E657369615F342E342E3768026400096265686176696F75726C0000000164000B6170706C69636174696F6E6A68026400096265686176696F75726C0000000164000A73757065727669736F726A6A
Current compilation info: 836C0000000468026400076F7074696F6E736C0000000668026400036377646B002F2F6275696C642F6275696C64642F65726C616E672D31322E622E352D646673672F6C69622F6D6E657369612F73726368026400066F75746469726B00372F6275696C642F6275696C64642F65726C616E672D31322E622E352D646673672F6C69622F6D6E657369612F7372632F2E2E2F6562696E6804640009617474726962757465640006696E7365727464000376736E6B000C6D6E657369615F342E342E37680264000F70617273655F7472616E73666F726D6400127379735F7072655F617474726962757465736400107761726E5F756E757365645F7661727364000A64656275675F696E666F6A680264000776657273696F6E6B0005342E352E35680264000474696D65680662000007D9610261146105613561196802640006736F757263656B003E2F6275696C642F6275696C64642F65726C616E672D31322E622E352D646673672F6C69622F6D6E657369612F7372632F6D6E657369615F7375702E65726C6A
=mod:mnesia_kernel_sup
Current size: 1673
Current attributes: 836C00000002680264000376736E6B000C6D6E657369615F342E342E3768026400096265686176696F75726C0000000164000A73757065727669736F726A6A
Current compilation info
=mod:mnesia_event
Current size: 9811
Current attributes: 836C00000002680264000376736E6B000C6D6E657369615F342E342E3768026400096265686176696F75726C0000000164000967656E5F6576656E746A6A
Current compilation info
=mod:mnesia_subscr
Current size: 14133
Current attributes: 836C00000002680264000376736E6B000C6D6E657369615F342E342E3768026400096265686176696F75726C0000000164000A67656E5F7365727665726A6A
Current compilation info: 836C0000000468026400076F7074696F6E736C0000000668026400036377646B002F2F6275696C642F6275696C64642F65726C616E672D31322E622E352D646673672F6C69622F6D6E657369612F73726368026400066F75746469726B00372F6275696C642F6275696C64642F65726C616E672D31322E622E352D646673672F6C69622F6D6E657369612F7372632F2E2E2F6562696E6804640009617474726962757465640006696E7365727464000376736E6B000C6D6E657369615F342E342E37680264000F70617273655F7472616E73666F726D6400127379735F7072655F617474726962757465736400107761726E5F756E757365645F7661727364000A64656275675F696E666F6A680264000776657273696F6E6B0005342E352E35680264000474696D65680662000007D9610261146105613561186802640006736F757263656B00412F6275696C642F6275696C64642F65726C616E672D31322E622E352D646673672F6C69622F6D6E657369612F7372632F6D6E657369615F7375627363722E65726C6A
=mod:mnesia_locker
Current size: 32608
Current attributes: 836C00000001680264000376736E6B000C6D6E657369615F342E342E376A
Current compilation info: 836C0000000468026400076F7074696F6E736C0000000668026400036377646B002F2F6275696C642F6275696C64642F65726C616E672D31322E622E352D646673672F6C69622F6D6E657369612F73726368026400066F75746469726B00372F6275696C642F6275696C64642F65726C616E672D31322E622E352D646673672F6C69622F6D6E657369612F7372632F2E2E2F6562696E6804640009617474726962757465640006696E7365727464000376736E6B000C6D6E657369615F342E342E37680264000F70617273655F7472616E73666F726D6400127379735F7072655F617474726962757465736400107761726E5F756E757365645F7661727364000A64656275675F696E666F6A680264000776657273696F6E6B0005342E352E35680264000474696D65680662000007D9610261146105613561136802640006736F757263656B00412F6275696C642F6275696C64642F65726C616E672D31322E622E352D646673672F6C69622F6D6E657369612F7372632F6D6E657369615F6C6F636B65722E65726C6A
=mod:mnesia_sp
Current size: 1000
Current attributes: 836C00000001680264000376736E6B000C6D6E657369615F342E342E376A
Current compilation info
=mod:mnesia_recover
Current size: 34822
Current attributes: 836C00000002680264000376736E6B000C6D6E657369615F342E342E3768026400096265686176696F75726C0000000164000A67656E5F7365727665726A6A
Current compilation info
=mod:mnesia_tm
Current size: 76180
Current attributes: 836C00000001680264000376736E6B000C6D6E657369615F342E342E376A
Current compilation info
=mod:mnesia_frag
Current size: 45538
Current attributes: 836C00000001680264000376736E6B000C6D6E657369615F342E342E376A
Current compilation info
=mod:mnesia_controller
Current size: 61545
Current attributes: 836C00000002680264000376736E6B000C6D6E657369615F342E342E3768026400096265686176696F75726C0000000164000A67656E5F7365727665726A6A
Current compilation info
=mod:mnesia_log
Current size: 30601
Current attributes: 836C00000001680264000376736E6B000C6D6E657369615F342E342E376A
Current compilation info: 836C0000000468026400076F7074696F6E736C0000000668026400036377646B002F2F6275696C642F6275696C64642F65726C616E672D31322E622E352D646673672F6C69622F6D6E657369612F73726368026400066F75746469726B00372F6275696C642F6275696C64642F65726C616E672D31322E622E352D646673672F6C69622F6D6E657369612F7372632F2E2E2F6562696E6804640009617474726962757465640006696E7365727464000376736E6B000C6D6E657369615F342E342E37680264000F70617273655F7472616E73666F726D6400127379735F7072655F617474726962757465736400107761726E5F756E757365645F7661727364000A64656275675F696E666F6A680264000776657273696F6E6B0005342E352E35680264000474696D65680662000007D9610261146105613561136802640006736F757263656B003E2F6275696C642F6275696C64642F65726C616E672D31322E622E352D646673672F6C69622F6D6E657369612F7372632F6D6E657369615F6C6F672E65726C6A
=mod:disk_log
Current size: 94324
Current attributes: 836C00000001680264000376736E6C000000016E10004EA198A9A79A0D24A7B684D6B48810E46A6A
Current compilation info
=mod:disk_log_server
Current size: 9092
Current attributes: 836C00000002680264000376736E6C000000016E100083E2E70496E0B6B72F743649692F093A6A68026400096265686176696F75726C0000000164000A67656E5F7365727665726A6A
Current compilation info
=mod:disk_log_sup
Current size: 827
Current attributes: 836C00000002680264000376736E6C000000016E10007B0BB4AE96CBF359AB336B429244BF156A68026400096265686176696F75726C0000000164000A73757065727669736F726A6A
Current compilation info
=mod:disk_log_1
Current size: 48544
Current attributes: 836C00000001680264000376736E6C000000016E1000AD775A0DA20F4C3DF51C9B7C50D1820A6A6A
Current compilation info
=mod:mnesia_dumper
Current size: 30580
Current attributes: 836C00000001680264000376736E6B000C6D6E657369615F342E342E376A
Current compilation info
=mod:mnesia_checkpoint_sup
Current size: 973
Current attributes: 836C00000002680264000376736E6B000C6D6E657369615F342E342E3768026400096265686176696F75726C0000000164000A73757065727669736F726A6A
Current compilation info
=mod:mnesia_snmp_sup
Current size: 967
Current attributes: 836C00000002680264000376736E6B000C6D6E657369615F342E342E3768026400096265686176696F75726C0000000164000A73757065727669736F726A6A
Current compilation info
=mod:mnesia_late_loader
Current size: 2689
Current attributes: 836C00000001680264000376736E6B000C6D6E657369615F342E342E376A
Current compilation info
=mod:mnesia_checkpoint
Current size: 45972
Current attributes: 836C00000001680264000376736E6B000C6D6E657369615F342E342E376A
Current compilation info: 836C0000000468026400076F7074696F6E736C0000000668026400036377646B002F2F6275696C642F6275696C64642F65726C616E672D31322E622E352D646673672F6C69622F6D6E657369612F73726368026400066F75746469726B00372F6275696C642F6275696C64642F65726C616E672D31322E622E352D646673672F6C69622F6D6E657369612F7372632F2E2E2F6562696E6804640009617474726962757465640006696E7365727464000376736E6B000C6D6E657369615F342E342E37680264000F70617273655F7472616E73666F726D6400127379735F7072655F617474726962757465736400107761726E5F756E757365645F7661727364000A64656275675F696E666F6A680264000776657273696F6E6B0005342E352E35680264000474696D65680662000007D96102611461056135610A6802640006736F757263656B00452F6275696C642F6275696C64642F65726C616E672D31322E622E352D646673672F6C69622F6D6E657369612F7372632F6D6E657369615F636865636B706F696E742E65726C6A
=mod:mnesia_loader
Current size: 26180
Current attributes: 836C00000001680264000376736E6B000C6D6E657369615F342E342E376A
Current compilation info
=mod:eval_bits
Current size: 14802
Current attributes: 836C00000001680264000376736E6C000000016E1000C491740B6F19B589B90D0D05185D2F1A6A6A
Current compilation info
=mod:rabbit_sup
Current size: 1017
Current attributes: 836C00000002680264000376736E6C000000016E1000939CCC06D45CCC355233A773F6C38DE46A68026400096265686176696F75726C0000000164000A73757065727669736F726A6A
Current compilation info
=mod:string
Current size: 8225
Current attributes: 836C00000001680264000376736E6C000000016E10003F8E4DE423CB4FEC0FD5AECF40CDBBAD6A6A
Current compilation info
=mod:mnesia_index
Current size: 10907
Current attributes: 836C00000001680264000376736E6B000C6D6E657369615F342E342E376A
Current compilation info
=mod:io_lib_format
Current size: 22824
Current attributes: 836C00000001680264000376736E6C000000016E10006725F35F08E74F1938493F15F6A8B4BE6A6A
Current compilation info: 836C0000000468026400076F7074696F6E736C0000000668026400036377646B002F2F6275696C642F6275696C64642F65726C616E672D31322E622E352D646673672F6C69622F7374646C69622F73726368026400066F75746469726B00372F6275696C642F6275696C64642F65726C616E672D31322E622E352D646673672F6C69622F7374646C69622F7372632F2E2E2F6562696E6802640001696B003A2F6275696C642F6275696C64642F65726C616E672D31322E622E352D646673672F6C69622F7374646C69622F7372632F2E2E2F696E636C7564656802640001696B00442F6275696C642F6275696C64642F65726C616E672D31322E622E352D646673672F6C69622F7374646C69622F7372632F2E2E2F2E2E2F6B65726E656C2F696E636C7564656400137761726E5F6F62736F6C6574655F677561726464000A64656275675F696E666F6A680264000776657273696F6E6B0005342E352E35680264000474696D65680662000007D9610261146105611061146802640006736F757263656B00412F6275696C642F6275696C64642F65726C616E672D31322E622E352D646673672F6C69622F7374646C69622F7372632F696F5F6C69625F666F726D61742E65726C6A
=mod:io_lib_pretty
Current size: 26408
Current attributes: 836C00000001680264000376736E6C000000016E100013650053D550A977E3A146A01EDF30BC6A6A
Current compilation info
=mod:base64
Current size: 6997
Current attributes: 836C00000001680264000376736E6C000000016E1000A23BE7DC0294668E6B056B5B1619BB6D6A6A
Current compilation info
=mod:rabbit_log
Current size: 3351
Current attributes: 836C00000002680264000376736E6C000000016E100043621CEC2AF6FBD33D05C67A391F6E9F6A68026400096265686176696F75726C0000000164000A67656E5F7365727665726A6A
Current compilation info
=mod:rabbit_hooks
Current size: 1782
Current attributes: 836C00000001680264000376736E6C000000016E10006C5289682E10C58A822C126ECD6C10236A6A
Current compilation info
=mod:rabbit_binary_generator
Current size: 6838
Current attributes: 836C00000001680264000376736E6C000000016E100009C9C1FCA67FAB4C93D2430E23A1D6E56A6A
Current compilation info
=mod:rabbit_alarm
Current size: 3258
Current attributes: 836C00000002680264000376736E6C000000016E1000F486C04685EC1E3B25AE1F98F7F915876A68026400096265686176696F75726C0000000164000967656E5F6576656E746A6A
Current compilation info
=mod:vm_memory_monitor
Current size: 11061
Current attributes: 836C00000002680264000376736E6C000000016E1000EBB09B16EE237278610F6E315296C1B96A68026400096265686176696F75726C0000000164000A67656E5F7365727665726A6A
Current compilation info
=mod:rabbit_amqqueue
Current size: 15627
Current attributes: 836C00000001680264000376736E6C000000016E100004C018D29B176C746F241107CC40F65C6A6A
Current compilation info
=mod:rabbit_amqqueue_sup
Current size: 1134
Current attributes: 836C00000002680264000376736E6C000000016E1000C1B6D144BD6FA407AA846C5DDFBB6DD86A68026400096265686176696F75726C0000000164000A73757065727669736F726A6A
Current compilation info
=mod:rabbit_router
Current size: 2397
Current attributes: 836C00000002680264000376736E6C000000016E1000062826F51CE35C10AB0912F23F5393796A68026400096265686176696F75726C0000000164000B67656E5F736572766572326A6A
Current compilation info: 836C0000000468026400076F7074696F6E736C0000000468026400036377646B00682F7661722F746D702F7261626269742D6275696C642E363431372F7261626269746D712D756D6272656C6C612F7261626269746D712D7365727665722F7061636B6167696E672F646562732F44656269616E2F7261626269746D712D7365727665722D312E372E3168026400066F75746469726B006D2F7661722F746D702F7261626269742D6275696C642E363431372F7261626269746D712D756D6272656C6C612F7261626269746D712D7365727665722F7061636B6167696E672F646562732F44656269616E2F7261626269746D712D7365727665722D312E372E312F6562696E6802640001696B00702F7661722F746D702F7261626269742D6275696C642E363431372F7261626269746D712D756D6272656C6C612F7261626269746D712D7365727665722F7061636B6167696E672F646562732F44656269616E2F7261626269746D712D7365727665722D312E372E312F696E636C75646564000A64656275675F696E666F6A680264000776657273696F6E6B0005342E342E35680264000474696D65680662000007DA61016116610E6114611D6802640006736F757263656B007E2F7661722F746D702F7261626269742D6275696C642E363431372F7261626269746D712D756D6272656C6C612F7261626269746D712D7365727665722F7061636B6167696E672F646562732F44656269616E2F7261626269746D712D7365727665722D312E372E312F7372632F7261626269745F726F757465722E65726C6A
=mod:gen_server2
Current size: 25436
Current attributes: 836C00000001680264000376736E6C000000016E1000E5A17F0A6AC164535FC6898B7055B0BA6A6A
Current compilation info: 836C0000000468026400076F7074696F6E736C0000000468026400036377646B00682F7661722F746D702F7261626269742D6275696C642E363431372F7261626269746D712D756D6272656C6C612F7261626269746D712D7365727665722F7061636B6167696E672F646562732F44656269616E2F7261626269746D712D7365727665722D312E372E3168026400066F75746469726B006D2F7661722F746D702F7261626269742D6275696C642E363431372F7261626269746D712D756D6272656C6C612F7261626269746D712D7365727665722F7061636B6167696E672F646562732F44656269616E2F7261626269746D712D7365727665722D312E372E312F6562696E6802640001696B00702F7661722F746D702F7261626269742D6275696C642E363431372F7261626269746D712D756D6272656C6C612F7261626269746D712D7365727665722F7061636B6167696E672F646562732F44656269616E2F7261626269746D712D7365727665722D312E372E312F696E636C75646564000A64656275675F696E666F6A680264000776657273696F6E6B0005342E342E35680264000474696D65680662000007DA61016116610E611461136802640006736F757263656B007C2F7661722F746D702F7261626269742D6275696C642E363431372F7261626269746D712D756D6272656C6C612F7261626269746D712D7365727665722F7061636B6167696E672F646562732F44656269616E2F7261626269746D712D7365727665722D312E372E312F7372632F67656E5F736572766572322E65726C6A
=mod:priority_queue
Current size: 7076
Current attributes: 836C00000001680264000376736E6C000000016E1000B5437CDAD7D73AE431A2014E3ABC62EB6A6A
Current compilation info
=mod:rabbit_node_monitor
Current size: 1648
Current attributes: 836C00000002680264000376736E6C000000016E10008982F5E89201D1445099F8B786BBB5F96A68026400096265686176696F75726C0000000164000A67656E5F7365727665726A6A
Current compilation info
=mod:rabbit_exchange
Current size: 20932
Current attributes: 836C00000001680264000376736E6C000000016E10006BEDC74FE68BBDB40830F20E9C8007F86A6A
Current compilation info: 836C0000000468026400076F7074696F6E736C0000000468026400036377646B00682F7661722F746D702F7261626269742D6275696C642E363431372F7261626269746D712D756D6272656C6C612F7261626269746D712D7365727665722F7061636B6167696E672F646562732F44656269616E2F7261626269746D712D7365727665722D312E372E3168026400066F75746469726B006D2F7661722F746D702F7261626269742D6275696C642E363431372F7261626269746D712D756D6272656C6C612F7261626269746D712D7365727665722F7061636B6167696E672F646562732F44656269616E2F7261626269746D712D7365727665722D312E372E312F6562696E6802640001696B00702F7661722F746D702F7261626269742D6275696C642E363431372F7261626269746D712D756D6272656C6C612F7261626269746D712D7365727665722F7061636B6167696E672F646562732F44656269616E2F7261626269746D712D7365727665722D312E372E312F696E636C75646564000A64656275675F696E666F6A680264000776657273696F6E6B0005342E342E35680264000474696D65680662000007DA61016116610E611461186802640006736F757263656B00802F7661722F746D702F7261626269742D6275696C642E363431372F7261626269746D712D756D6272656C6C612F7261626269746D712D7365727665722F7061636B6167696E672F646562732F44656269616E2F7261626269746D712D7365727665722D312E372E312F7372632F7261626269745F65786368616E67652E65726C6A
=mod:qlc
Current size: 115505
Current attributes: 836C00000001680264000376736E6C000000016E10006737CC0B2705768DE5C60059C928696A6A6A
Current compilation info
=mod:rabbit_amqqueue_process
Current size: 26769
Current attributes: 836C00000002680264000376736E6C000000016E10005898CE3FC1CAB25D78F064EDA6A75A4D6A68026400096265686176696F75726C0000000164000B67656E5F736572766572326A6A
Current compilation info
=mod:rabbit_persister
Current size: 16077
Current attributes: 836C00000002680264000376736E6C000000016E100022AACCD52E601EA4A61ABBB8212B1E936A68026400096265686176696F75726C0000000164000A67656E5F7365727665726A6A
Current compilation info
=mod:sets
Current size: 12711
Current attributes: 836C00000001680264000376736E6C000000016E10001C76B14BA15E3063C4652045EFCDF9BA6A6A
Current compilation info
=mod:lib
Current size: 15512
Current attributes: 836C00000001680264000376736E6C000000016E10005D3B5DFD2C905F33E4D532526C3952646A6A
Current compilation info
=mod:erl_internal
Current size: 4695
Current attributes: 836C00000001680264000376736E6C000000016E10000020C7B4424EE59FA1104C93633A37916A6A
Current compilation info
=fun
Module: mnesia_locker
Uniq: 99140082
Index: 1
Address: 0x73e2a97c
Refc: 1
=fun
Module: application_controller
Uniq: 68409630
Index: 4
Address: 0x818a74e8
Refc: 1
=fun
Module: application_controller
Uniq: 85284388
Index: 11
Address: 0x818a7110
Refc: 1
=fun
Module: rabbit_exchange
Uniq: 131353064
Index: 22
Address: 0x73c20644
Refc: 1
=fun
Module: rabbit_amqqueue
Uniq: 73872646
Index: 1
Address: 0x73c1b29c
Refc: 1
=fun
Module: rabbit_amqqueue_process
Uniq: 130562572
Index: 7
Address: 0x73c57e10
Refc: 1
=fun
Module: mnesia_subscr
Uniq: 102630427
Index: 2
Address: 0x73dffb88
Refc: 1
=fun
Module: disk_log_server
Uniq: 5346999
Index: 4
Address: 0x73e4accc
Refc: 1
=fun
Module: code_server
Uniq: 130177122
Index: 13
Address: 0x73ef9c34
Refc: 1
=fun
Module: mnesia_schema
Uniq: 19002230
Index: 36
Address: 0x73f5bca0
Refc: 1
=fun
Module: rabbit_amqqueue
Uniq: 53883961
Index: 49
Address: 0x73c1b6ec
Refc: 1
=fun
Module: gen_event
Uniq: 14457010
Index: 4
Address: 0x81880ec4
Refc: 1
=fun
Module: rabbit_amqqueue
Uniq: 53883961
Index: 48
Address: 0x73c1b760
Refc: 1
=fun
Module: erl_parse
Uniq: 33616870
Index: 2
Address: 0x818ce704
Refc: 1
=fun
Module: mnesia_monitor
Uniq: 30104375
Index: 0
Address: 0x73f6c494
Refc: 1
=fun
Module: ets
Uniq: 127205342
Index: 2
Address: 0x73f0ce48
Refc: 1
=fun
Module: erl_prim_loader
Uniq: 129380664
Index: 4
Address: 0xf5899e4c
Refc: 1
=fun
Module: packages
Uniq: 21879463
Index: 0
Address: 0x73ed6354
Refc: 1
=fun
Module: global
Uniq: 77884565
Index: 2
Address: 0x8190e108
Refc: 1
=fun
Module: mnesia_schema
Uniq: 87199680
Index: 6
Address: 0x73f5cc7c
Refc: 1
=fun
Module: erl_scan
Uniq: 60864725
Index: 30
Address: 0x818b43e8
Refc: 1
=fun
Module: rabbit_amqqueue_process
Uniq: 58789785
Index: 1
Address: 0x73c58808
Refc: 1
=fun
Module: rabbit
Uniq: 92867836
Index: 7
Address: 0x73ee83c4
Refc: 1
=fun
Module: mnesia_late_loader
Uniq: 7762744
Index: 0
Address: 0x73f2b058
Refc: 1
=fun
Module: mnesia_schema
Uniq: 111926619
Index: 12
Address: 0x73f5c9e4
Refc: 1
=fun
Module: erl_prim_loader
Uniq: 87958366
Index: 2
Address: 0xf5899fdc
Refc: 10
=fun
Module: qlc
Uniq: 53236585
Index: 13
Address: 0x73c48434
Refc: 1
=fun
Module: erl_prim_loader
Uniq: 11964527
Index: 13
Address: 0xf5899714
Refc: 1
=fun
Module: release_handler
Uniq: 67949545
Index: 3
Address: 0x73d9cd74
Refc: 1
=fun
Module: qlc
Uniq: 100914385
Index: 53
Address: 0x73c45e7c
Refc: 1
=fun
Module: qlc
Uniq: 29565751
Index: 35
Address: 0x73c463ac
Refc: 1
=fun
Module: mnesia_frag
Uniq: 46357834
Index: 7
Address: 0x73e47328
Refc: 1
=fun
Module: inet_tcp_dist
Uniq: 52679599
Index: 2
Address: 0x73ead5ac
Refc: 2
=fun
Module: inet_config
Uniq: 99271538
Index: 5
Address: 0x81916b08
Refc: 1
=fun
Module: mnesia_tm
Uniq: 26458934
Index: 5
Address: 0x73e3ac44
Refc: 1
=fun
Module: qlc
Uniq: 96476682
Index: 6
Address: 0x73c4998c
Refc: 1
=fun
Module: mnesia_schema
Uniq: 54213680
Index: 7
Address: 0x73f5cc60
Refc: 1
=fun
Module: qlc
Uniq: 66634467
Index: 52
Address: 0x73c45eac
Refc: 1
=fun
Module: rabbit_amqqueue
Uniq: 86666154
Index: 28
Address: 0x73c1a418
Refc: 1
=fun
Module: code_server
Uniq: 1755104
Index: 7
Address: 0x73efa264
Refc: 1
=fun
Module: dets
Uniq: 11223395
Index: 1
Address: 0x73dc49ac
Refc: 1
=fun
Module: init
Uniq: 54206684
Index: 0
Address: 0xf5888dbc
Refc: 1
=fun
Module: dets_v9
Uniq: 1820173
Index: 5
Address: 0x73e1711c
Refc: 1
=fun
Module: erl_scan
Uniq: 26393468
Index: 29
Address: 0x818b4420
Refc: 1
=fun
Module: vm_memory_monitor
Uniq: 124776235
Index: 0
Address: 0x73c0bed0
Refc: 1
=fun
Module: rabbit_amqqueue
Uniq: 49927068
Index: 40
Address: 0x73c1b914
Refc: 1
=fun
Module: net_kernel
Uniq: 17641893
Index: 7
Address: 0x73ec6cb4
Refc: 1
=fun
Module: erl_scan
Uniq: 133535912
Index: 22
Address: 0x818b44ac
Refc: 1
=fun
Module: init
Uniq: 97019924
Index: 7
Address: 0xf58888f0
Refc: 1
=fun
Module: mnesia_lib
Uniq: 52941657
Index: 1
Address: 0x73f3de40
Refc: 1
=fun
Module: rabbit_persister
Uniq: 130231971
Index: 9
Address: 0x73c60220
Refc: 1
=fun
Module: disk_log
Uniq: 20890379
Index: 6
Address: 0x73e7c78c
Refc: 1
=fun
Module: rabbit_exchange
Uniq: 10409393
Index: 3
Address: 0x73c20f2c
Refc: 1
=fun
Module: mnesia_loader
Uniq: 84807297
Index: 1
Address: 0x73bee3c4
Refc: 1
=fun
Module: qlc
Uniq: 106796086
Index: 48
Address: 0x73c45f64
Refc: 1
=fun
Module: mnesia_bup
Uniq: 2444437
Index: 12
Address: 0x73f766ec
Refc: 1
=fun
Module: mnesia
Uniq: 33297568
Index: 27
Address: 0x73f20cb4
Refc: 1
=fun
Module: mnesia_bup
Uniq: 90935326
Index: 10
Address: 0x73f76bf0
Refc: 1
=fun
Module: mnesia_controller
Uniq: 112733957
Index: 15
Address: 0x73e667dc
Refc: 1
=fun
Module: mnesia
Uniq: 88126301
Index: 23
Address: 0x73f20c14
Refc: 1
=fun
Module: mnesia_schema
Uniq: 87315063
Index: 8
Address: 0x73f5cc44
Refc: 1
=fun
Module: dets_v9
Uniq: 4582445
Index: 18
Address: 0x73e1620c
Refc: 1
=fun
Module: mnesia_loader
Uniq: 57346273
Index: 9
Address: 0x73bedee8
Refc: 1
=fun
Module: file_server
Uniq: 11064192
Index: 1
Address: 0x73ecbf60
Refc: 1
=fun
Module: mnesia_controller
Uniq: 42061604
Index: 17
Address: 0x73e66824
Refc: 1
=fun
Module: rabbit_amqqueue
Uniq: 416675
Index: 34
Address: 0x73c1a5c8
Refc: 1
=fun
Module: dets
Uniq: 41808391
Index: 12
Address: 0x73dc42fc
Refc: 1
=fun
Module: rabbit_amqqueue
Uniq: 130243002
Index: 44
Address: 0x73c1b7d4
Refc: 1
=fun
Module: qlc
Uniq: 43615501
Index: 31
Address: 0x73c4668c
Refc: 1
=fun
Module: priority_queue
Uniq: 77334640
Index: 0
Address: 0x73f429cc
Refc: 1
=fun
Module: io_lib_pretty
Uniq: 33716311
Index: 1
Address: 0x73c13740
Refc: 1
=fun
Module: rabbit_alarm
Uniq: 81926000
Index: 0
Address: 0x73bf4fdc
Refc: 1
=fun
Module: erl_scan
Uniq: 117584883
Index: 27
Address: 0x818b4490
Refc: 1
=fun
Module: qlc
Uniq: 133095982
Index: 79
Address: 0x73c45714
Refc: 1
=fun
Module: rabbit_exchange
Uniq: 32617598
Index: 16
Address: 0x73c1f4c4
Refc: 1
=fun
Module: mnesia_frag
Uniq: 68923177
Index: 13
Address: 0x73e46ab8
Refc: 1
=fun
Module: dets_v9
Uniq: 50621133
Index: 20
Address: 0x73e1617c
Refc: 1
=fun
Module: erl_scan
Uniq: 46680772
Index: 19
Address: 0x818b4538
Refc: 1
=fun
Module: inet_config
Uniq: 103133738
Index: 3
Address: 0x81916b84
Refc: 1
=fun
Module: inet_parse
Uniq: 56617403
Index: 10
Address: 0x73eaa348
Refc: 1
=fun
Module: sets
Uniq: 92536145
Index: 5
Address: 0x73c5bac4
Refc: 1
=fun
Module: rabbit_misc
Uniq: 57754015
Index: 7
Address: 0x73deb1ac
Refc: 1
=fun
Module: mnesia_lib
Uniq: 121369790
Index: 11
Address: 0x73f3d4b8
Refc: 1
=fun
Module: inet
Uniq: 7496878
Index: 3
Address: 0x73e9e490
Refc: 1
=fun
Module: rabbit_amqqueue
Uniq: 41884547
Index: 43
Address: 0x73c1b8d8
Refc: 1
=fun
Module: qlc
Uniq: 51094567
Index: 34
Address: 0x73c465bc
Refc: 1
=fun
Module: mnesia_frag
Uniq: 108512084
Index: 8
Address: 0x73e4720c
Refc: 1
=fun
Module: mnesia
Uniq: 43644619
Index: 16
Address: 0x73f20e70
Refc: 1
=fun
Module: mnesia_schema
Uniq: 22191210
Index: 14
Address: 0x73f5c908
Refc: 1
=fun
Module: rabbit_amqqueue
Uniq: 37649323
Index: 14
Address: 0x73c1aecc
Refc: 1
=fun
Module: mnesia_schema
Uniq: 47105912
Index: 41
Address: 0x73f5ce7c
Refc: 1
=fun
Module: rabbit_persister
Uniq: 17556149
Index: 2
Address: 0x73c60734
Refc: 1
=fun
Module: priority_queue
Uniq: 37722873
Index: 2
Address: 0x73f426bc
Refc: 1
=fun
Module: mnesia_checkpoint
Uniq: 22174020
Index: 8
Address: 0x73be0d9c
Refc: 1
=fun
Module: vm_memory_monitor
Uniq: 35657592
Index: 2
Address: 0x73c0beec
Refc: 1
=fun
Module: rabbit_persister
Uniq: 97773149
Index: 7
Address: 0x73c604bc
Refc: 1
=fun
Module: qlc
Uniq: 47755927
Index: 60
Address: 0x73c45bc8
Refc: 1
=fun
Module: mnesia_controller
Uniq: 45399476
Index: 10
Address: 0x73e66cf4
Refc: 1
=fun
Module: mnesia_lib
Uniq: 32425183
Index: 14
Address: 0x73f3d464
Refc: 1
=fun
Module: mnesia_bup
Uniq: 41048196
Index: 13
Address: 0x73f75eec
Refc: 1
=fun
Module: ets
Uniq: 113878006
Index: 7
Address: 0x73f0cc10
Refc: 1
=fun
Module: release_handler
Uniq: 71116205
Index: 9
Address: 0x73d9c730
Refc: 1
=fun
Module: erl_eval
Uniq: 45552384
Index: 14
Address: 0x73dcf454
Refc: 1
=fun
Module: rabbit_amqqueue_process
Uniq: 73816081
Index: 0
Address: 0x73c58948
Refc: 1
=fun
Module: mnesia_schema
Uniq: 55227613
Index: 13
Address: 0x73f5c938
Refc: 1
=fun
Module: release_handler
Uniq: 26121703
Index: 11
Address: 0x73d9c444
Refc: 1
=fun
Module: erl_scan
Uniq: 100160098
Index: 28
Address: 0x818b4404
Refc: 1
=fun
Module: erl_eval
Uniq: 69317895
Index: 30
Address: 0x73dcedb0
Refc: 1
=fun
Module: qlc
Uniq: 43596287
Index: 65
Address: 0x73c45ab8
Refc: 1
=fun
Module: application_controller
Uniq: 88907784
Index: 2
Address: 0x818a7760
Refc: 1
=fun
Module: inet
Uniq: 121154270
Index: 1
Address: 0x73e9e4e0
Refc: 1
=fun
Module: mnesia_schema
Uniq: 42917002
Index: 19
Address: 0x73f5c818
Refc: 1
=fun
Module: rabbit_persister
Uniq: 15707135
Index: 3
Address: 0x73c6070c
Refc: 1
=fun
Module: qlc
Uniq: 73903127
Index: 29
Address: 0x73c4680c
Refc: 1
=fun
Module: rabbit_amqqueue
Uniq: 45918932
Index: 46
Address: 0x73c1b65c
Refc: 1
=fun
Module: rabbit_exchange
Uniq: 124646403
Index: 1
Address: 0x73c21104
Refc: 1
=fun
Module: mnesia
Uniq: 54017344
Index: 12
Address: 0x73f21384
Refc: 1
=fun
Module: sets
Uniq: 121707227
Index: 1
Address: 0x73c5bb64
Refc: 1
=fun
Module: dets_server
Uniq: 48664851
Index: 0
Address: 0x73f91c40
Refc: 1
=fun
Module: application_controller
Uniq: 76715200
Index: 0
Address: 0x818a78c0
Refc: 1
=fun
Module: mnesia_schema
Uniq: 21184862
Index: 9
Address: 0x73f5cbcc
Refc: 1
=fun
Module: mnesia_checkpoint
Uniq: 63364235
Index: 1
Address: 0x73be1724
Refc: 1
=fun
Module: inet
Uniq: 88685746
Index: 8
Address: 0x73e9ddbc
Refc: 1
=fun
Module: mnesia_bup
Uniq: 96967062
Index: 5
Address: 0x73f76570
Refc: 1
=fun
Module: mnesia_schema
Uniq: 48232901
Index: 33
Address: 0x73f5bdd8
Refc: 1
=fun
Module: mnesia_tm
Uniq: 63787604
Index: 4
Address: 0x73e3ac84
Refc: 1
=fun
Module: erl_eval
Uniq: 117080903
Index: 5
Address: 0x73dcf994
Refc: 1
=fun
Module: erl_scan
Uniq: 60828813
Index: 17
Address: 0x818b4554
Refc: 1
=fun
Module: rabbit_amqqueue
Uniq: 15702177
Index: 45
Address: 0x73c1b698
Refc: 1
=fun
Module: rabbit
Uniq: 122821252
Index: 3
Address: 0x73ee8550
Refc: 1
=fun
Module: inet_parse
Uniq: 113704917
Index: 0
Address: 0x73eaaf94
Refc: 1
=fun
Module: mnesia_schema
Uniq: 79614902
Index: 15
Address: 0x73f5c8d8
Refc: 1
=fun
Module: erl_eval
Uniq: 81922965
Index: 13
Address: 0x73dcf510
Refc: 1
=fun
Module: dets_server
Uniq: 126315774
Index: 2
Address: 0x73f91b8c
Refc: 1
=fun
Module: qlc
Uniq: 56360841
Index: 5
Address: 0x73c499a8
Refc: 1
=fun
Module: mnesia_frag
Uniq: 61850684
Index: 17
Address: 0x73e46ff8
Refc: 1
=fun
Module: qlc
Uniq: 109903914
Index: 84
Address: 0x73c4540c
Refc: 1
=fun
Module: mnesia_loader
Uniq: 26617715
Index: 7
Address: 0x73bee128
Refc: 1
=fun
Module: mnesia_tm
Uniq: 94525820
Index: 0
Address: 0x73e3b150
Refc: 1
=fun
Module: rpc
Uniq: 69165610
Index: 0
Address: 0x818ef678
Refc: 1
=fun
Module: c
Uniq: 11213131
Index: 7
Address: 0x73da8af4
Refc: 1
=fun
Module: global
Uniq: 77325978
Index: 19
Address: 0x8190d054
Refc: 1
=fun
Module: rabbit_exchange
Uniq: 57722122
Index: 11
Address: 0x73c1fd5c
Refc: 1
=fun
Module: erl_eval
Uniq: 97196398
Index: 26
Address: 0x73dceebc
Refc: 1
=fun
Module: erl_prim_loader
Uniq: 14602659
Index: 16
Address: 0xf5899210
Refc: 1
=fun
Module: rabbit_exchange
Uniq: 117248157
Index: 25
Address: 0x73c20554
Refc: 1
=fun
Module: mnesia_schema
Uniq: 75252331
Index: 3
Address: 0x73f5ced0
Refc: 1
=fun
Module: qlc
Uniq: 63902363
Index: 85
Address: 0x73c454e4
Refc: 1
=fun
Module: qlc
Uniq: 31633125
Index: 8
Address: 0x73c49148
Refc: 1
=fun
Module: rabbit_misc
Uniq: 59966671
Index: 9
Address: 0x73deb1f4
Refc: 1
=fun
Module: global
Uniq: 131639227
Index: 14
Address: 0x8190d494
Refc: 2
=fun
Module: c
Uniq: 59481600
Index: 6
Address: 0x73da8c14
Refc: 1
=fun
Module: mnesia_loader
Uniq: 106820403
Index: 5
Address: 0x73bee184
Refc: 1
=fun
Module: mnesia
Uniq: 35397315
Index: 25
Address: 0x73f20ba8
Refc: 1
=fun
Module: rabbit_persister
Uniq: 36538890
Index: 1
Address: 0x73c60870
Refc: 1
=fun
Module: dets_v9
Uniq: 119381788
Index: 13
Address: 0x73e1665c
Refc: 1
=fun
Module: qlc
Uniq: 96086572
Index: 86
Address: 0x73c45350
Refc: 1
=fun
Module: rabbit
Uniq: 95362703
Index: 2
Address: 0x73ee8694
Refc: 1
=fun
Module: release_handler
Uniq: 29644323
Index: 12
Address: 0x73d9c3fc
Refc: 1
=fun
Module: rabbit_router
Uniq: 120859376
Index: 0
Address: 0x73c077b0
Refc: 1
=fun
Module: mnesia_loader
Uniq: 132838894
Index: 4
Address: 0x73bee1c0
Refc: 1
=fun
Module: proc_lib
Uniq: 52062498
Index: 0
Address: 0x81889524
Refc: 2
=fun
Module: rabbit_exchange
Uniq: 130463752
Index: 4
Address: 0x73c20f10
Refc: 1
=fun
Module: erl_scan
Uniq: 19747201
Index: 5
Address: 0x818b4688
Refc: 1
=fun
Module: dict
Uniq: 80801710
Index: 0
Address: 0x818e8384
Refc: 1
=fun
Module: qlc
Uniq: 58841221
Index: 39
Address: 0x73c46118
Refc: 1
=fun
Module: erl_prim_loader
Uniq: 75066605
Index: 3
Address: 0xf5899f10
Refc: 1
=fun
Module: global_group
Uniq: 62829447
Index: 4
Address: 0x73ee60a4
Refc: 1
=fun
Module: dets
Uniq: 83733461
Index: 2
Address: 0x73dc4a38
Refc: 1
=fun
Module: application_controller
Uniq: 124678115
Index: 16
Address: 0x818a6e58
Refc: 1
=fun
Module: inet_parse
Uniq: 8832142
Index: 7
Address: 0x73eaa63c
Refc: 1
=fun
Module: rabbit_amqqueue
Uniq: 120884587
Index: 24
Address: 0x73c1a734
Refc: 1
=fun
Module: qlc
Uniq: 38381097
Index: 1
Address: 0x73c49bd8
Refc: 1
=fun
Module: mnesia_frag
Uniq: 444583
Index: 15
Address: 0x73e46894
Refc: 1
=fun
Module: code_server
Uniq: 41143059
Index: 5
Address: 0x73efa464
Refc: 1
=fun
Module: prim_zip
Uniq: 129835438
Index: 4
Address: 0xf5890bc8
Refc: 1
=fun
Module: rabbit_amqqueue
Uniq: 52184832
Index: 42
Address: 0x73c1b504
Refc: 1
=fun
Module: c
Uniq: 94945198
Index: 3
Address: 0x73da8cac
Refc: 1
=fun
Module: application_controller
Uniq: 12768760
Index: 14
Address: 0x818a6f2c
Refc: 1
=fun
Module: net_kernel
Uniq: 4245271
Index: 2
Address: 0x73ec6e10
Refc: 1
=fun
Module: mnesia_schema
Uniq: 3186944
Index: 35
Address: 0x73f5bcbc
Refc: 1
=fun
Module: rabbit_exchange
Uniq: 50367125
Index: 14
Address: 0x73c1f690
Refc: 1
=fun
Module: init
Uniq: 43183525
Index: 3
Address: 0xf5888d50
Refc: 1
=fun
Module: application_controller
Uniq: 98117994
Index: 15
Address: 0x818a6e9c
Refc: 1
=fun
Module: qlc
Uniq: 8328636
Index: 75
Address: 0x73c45814
Refc: 1
=fun
Module: qlc
Uniq: 113638449
Index: 55
Address: 0x73c45dd0
Refc: 1
=fun
Module: erl_scan
Uniq: 17983511
Index: 31
Address: 0x818b43cc
Refc: 1
=fun
Module: mnesia_subscr
Uniq: 64065282
Index: 1
Address: 0x73dffbbc
Refc: 1
=fun
Module: inet_parse
Uniq: 88083515
Index: 9
Address: 0x73eaa43c
Refc: 1
=fun
Module: qlc
Uniq: 7110057
Index: 14
Address: 0x73c47a9c
Refc: 1
=fun
Module: erl_eval
Uniq: 95120463
Index: 23
Address: 0x73dcefac
Refc: 1
=fun
Module: qlc
Uniq: 110399762
Index: 19
Address: 0x73c474e0
Refc: 1
=fun
Module: ets
Uniq: 101023778
Index: 4
Address: 0x73f0cbe0
Refc: 1
=fun
Module: inet_db
Uniq: 124245057
Index: 0
Address: 0x81900474
Refc: 1
=fun
Module: global
Uniq: 107360249
Index: 0
Address: 0x8190e27c
Refc: 1
=fun
Module: mnesia
Uniq: 79489111
Index: 17
Address: 0x73f20dcc
Refc: 1
=fun
Module: qlc
Uniq: 19476315
Index: 0
Address: 0x73c49e14
Refc: 1
=fun
Module: rabbit_amqqueue
Uniq: 34828761
Index: 21
Address: 0x73c1a07c
Refc: 1
=fun
Module: global
Uniq: 123123040
Index: 24
Address: 0x8190ce50
Refc: 1
=fun
Module: erl_eval
Uniq: 111050249
Index: 34
Address: 0x73dceccc
Refc: 1
=fun
Module: mnesia_schema
Uniq: 85251607
Index: 38
Address: 0x73f5b7f0
Refc: 1
=fun
Module: dets
Uniq: 66573516
Index: 6
Address: 0x73dc4924
Refc: 1
=fun
Module: mnesia_loader
Uniq: 100947738
Index: 3
Address: 0x73bee294
Refc: 1
=fun
Module: c
Uniq: 23445671
Index: 1
Address: 0x73da8df8
Refc: 1
=fun
Module: rabbit_amqqueue_process
Uniq: 88101200
Index: 2
Address: 0x73c587c8
Refc: 1
=fun
Module: dets
Uniq: 42316477
Index: 8
Address: 0x73dc44fc
Refc: 1
=fun
Module: global
Uniq: 79383632
Index: 17
Address: 0x8190d0bc
Refc: 1
=fun
Module: mnesia_lib
Uniq: 70033809
Index: 10
Address: 0x73f3d4e0
Refc: 1
=fun
Module: qlc
Uniq: 98466779
Index: 22
Address: 0x73c4726c
Refc: 1
=fun
Module: rabbit_exchange
Uniq: 44955458
Index: 21
Address: 0x73c20438
Refc: 1
=fun
Module: dets
Uniq: 107401663
Index: 5
Address: 0x73dc4954
Refc: 1
=fun
Module: erl_scan
Uniq: 105353412
Index: 26
Address: 0x818b443c
Refc: 1
=fun
Module: mnesia_lib
Uniq: 41965535
Index: 0
Address: 0x73f3dec8
Refc: 1
=fun
Module: qlc
Uniq: 61189452
Index: 57
Address: 0x73c45d24
Refc: 1
=fun
Module: inet_tcp_dist
Uniq: 112081944
Index: 5
Address: 0x73ead4fc
Refc: 2
=fun
Module: mnesia
Uniq: 15695408
Index: 24
Address: 0x73f20bd8
Refc: 1
=fun
Module: mnesia_schema
Uniq: 30019937
Index: 34
Address: 0x73f5bdbc
Refc: 1
=fun
Module: mnesia_bup
Uniq: 102999544
Index: 0
Address: 0x73f773f8
Refc: 1
=fun
Module: qlc
Uniq: 101602207
Index: 27
Address: 0x73c4686c
Refc: 1
=fun
Module: qlc
Uniq: 117780158
Index: 18
Address: 0x73c475d8
Refc: 1
=fun
Module: net_kernel
Uniq: 101380746
Index: 0
Address: 0x73ec6f10
Refc: 1
=fun
Module: inet_db
Uniq: 109216523
Index: 3
Address: 0x819000a8
Refc: 1
=fun
Module: qlc
Uniq: 43970627
Index: 7
Address: 0x73c4979c
Refc: 1
=fun
Module: rabbit_amqqueue
Uniq: 113497359
Index: 23
Address: 0x73c1a21c
Refc: 1
=fun
Module: mnesia_frag
Uniq: 40792144
Index: 14
Address: 0x73e468e0
Refc: 1
=fun
Module: rabbit_amqqueue
Uniq: 112323356
Index: 47
Address: 0x73c1b60c
Refc: 1
=fun
Module: rabbit_exchange
Uniq: 68300479
Index: 15
Address: 0x73c1f5e4
Refc: 1
=fun
Module: erl_prim_loader
Uniq: 88016544
Index: 12
Address: 0xf58998b8
Refc: 1
=fun
Module: application_controller
Uniq: 10227174
Index: 9
Address: 0x818a7200
Refc: 1
=fun
Module: mnesia_schema
Uniq: 130033387
Index: 40
Address: 0x73f5bf98
Refc: 1
=fun
Module: rabbit_misc
Uniq: 18359369
Index: 5
Address: 0x73deb4dc
Refc: 1
=fun
Module: lists
Uniq: 126820281
Index: 0
Address: 0x818978e8
Refc: 1
=fun
Module: rabbit_amqqueue
Uniq: 94136558
Index: 32
Address: 0x73c1a564
Refc: 1
=fun
Module: mnesia_lib
Uniq: 126615567
Index: 13
Address: 0x73f3d480
Refc: 1
=fun
Module: erl_eval
Uniq: 12529234
Index: 3
Address: 0x73dcfadc
Refc: 1
=fun
Module: rabbit_exchange
Uniq: 124562874
Index: 10
Address: 0x73c1ffc4
Refc: 1
=fun
Module: dets
Uniq: 38788140
Index: 16
Address: 0x73dc41c4
Refc: 1
=fun
Module: rabbit_misc
Uniq: 54976736
Index: 8
Address: 0x73deafcc
Refc: 1
=fun
Module: erl_eval
Uniq: 67506443
Index: 22
Address: 0x73dcf034
Refc: 1
=fun
Module: erl_eval
Uniq: 42666164
Index: 7
Address: 0x73dcf878
Refc: 1
=fun
Module: dets_v9
Uniq: 16792432
Index: 2
Address: 0x73e17a14
Refc: 1
=fun
Module: qlc
Uniq: 88893897
Index: 91
Address: 0x73c46430
Refc: 1
=fun
Module: release_handler
Uniq: 91216337
Index: 4
Address: 0x73d9cbd4
Refc: 1
=fun
Module: supervisor
Uniq: 73471270
Index: 0
Address: 0x818e3e78
Refc: 1
=fun
Module: rabbit
Uniq: 14508031
Index: 10
Address: 0x73ee7fe4
Refc: 1
=fun
Module: ets
Uniq: 80865327
Index: 5
Address: 0x73f0cc9c
Refc: 1
=fun
Module: rabbit_amqqueue
Uniq: 17856546
Index: 6
Address: 0x73c1b098
Refc: 1
=fun
Module: dets
Uniq: 115899887
Index: 20
Address: 0x73dc40b8
Refc: 1
=fun
Module: dets
Uniq: 33264331
Index: 10
Address: 0x73dc4470
Refc: 1
=fun
Module: dets_utils
Uniq: 9956930
Index: 4
Address: 0x73de3ee8
Refc: 1
=fun
Module: rabbit_exchange
Uniq: 109811660
Index: 23
Address: 0x73c2062c
Refc: 1
=fun
Module: code_server
Uniq: 111717940
Index: 10
Address: 0x73ef9dc4
Refc: 1
=fun
Module: global
Uniq: 45404475
Index: 12
Address: 0x8190d7a8
Refc: 1
=fun
Module: erl_prim_loader
Uniq: 49999988
Index: 11
Address: 0xf5899908
Refc: 1
=fun
Module: mnesia_controller
Uniq: 44028490
Index: 9
Address: 0x73e66d10
Refc: 1
=fun
Module: inet_db
Uniq: 86612957
Index: 9
Address: 0x818ffacc
Refc: 1
=fun
Module: qlc
Uniq: 35572124
Index: 56
Address: 0x73c45d6c
Refc: 1
=fun
Module: release_handler
Uniq: 127190220
Index: 1
Address: 0x73d9ce50
Refc: 1
=fun
Module: qlc
Uniq: 8975952
Index: 87
Address: 0x73c4531c
Refc: 1
=fun
Module: erl_eval
Uniq: 104545203
Index: 10
Address: 0x73dcf6a4
Refc: 1
=fun
Module: ets
Uniq: 54643254
Index: 17
Address: 0x73f0caf4
Refc: 1
=fun
Module: global
Uniq: 33599240
Index: 27
Address: 0x8190deb4
Refc: 1
=fun
Module: release_handler
Uniq: 53931675
Index: 6
Address: 0x73d9cad8
Refc: 1
=fun
Module: mnesia
Uniq: 121953690
Index: 15
Address: 0x73f2102c
Refc: 1
=fun
Module: mnesia_frag
Uniq: 16064164
Index: 16
Address: 0x73e467b4
Refc: 1
=fun
Module: disk_log
Uniq: 29528510
Index: 4
Address: 0x73e7c810
Refc: 1
=fun
Module: rabbit_amqqueue
Uniq: 62221348
Index: 7
Address: 0x73c1b07c
Refc: 1
=fun
Module: global
Uniq: 78823480
Index: 26
Address: 0x8190d778
Refc: 1
=fun
Module: rabbit_amqqueue
Uniq: 51050952
Index: 12
Address: 0x73c1af3c
Refc: 1
=fun
Module: dict
Uniq: 3686529
Index: 13
Address: 0x818e8158
Refc: 1
=fun
Module: global
Uniq: 44333536
Index: 6
Address: 0x8190de54
Refc: 1
=fun
Module: dets_v9
Uniq: 51593031
Index: 0
Address: 0x73e17ea8
Refc: 1
=fun
Module: dets
Uniq: 119155077
Index: 15
Address: 0x73dc41f0
Refc: 1
=fun
Module: inet_parse
Uniq: 130814477
Index: 8
Address: 0x73eaa508
Refc: 1
=fun
Module: c
Uniq: 95068043
Index: 8
Address: 0x73da8aac
Refc: 1
=fun
Module: mnesia
Uniq: 111364283
Index: 19
Address: 0x73f20db0
Refc: 1
=fun
Module: cpu_sup
Uniq: 67634433
Index: 4
Address: 0x73df7c3c
Refc: 1
=fun
Module: code_server
Uniq: 100109699
Index: 2
Address: 0x73efa63c
Refc: 1
=fun
Module: file_server
Uniq: 90254642
Index: 0
Address: 0x73ecbf94
Refc: 1
=fun
Module: prim_zip
Uniq: 36346675
Index: 1
Address: 0xf5890c50
Refc: 1
=fun
Module: mnesia_lib
Uniq: 55449016
Index: 5
Address: 0x73f3d898
Refc: 1
=fun
Module: prim_zip
Uniq: 88765944
Index: 3
Address: 0xf5890bf8
Refc: 1
=fun
Module: erl_prim_loader
Uniq: 3809279
Index: 9
Address: 0xf5899a90
Refc: 1
=fun
Module: erl_scan
Uniq: 45590999
Index: 20
Address: 0x818b44e4
Refc: 1
=fun
Module: erl_prim_loader
Uniq: 81251680
Index: 7
Address: 0xf5899c18
Refc: 1
=fun
Module: inet_config
Uniq: 116484306
Index: 4
Address: 0x81916b68
Refc: 1
=fun
Module: global
Uniq: 18668340
Index: 4
Address: 0x8190dfec
Refc: 1
=fun
Module: dets_v9
Uniq: 116841982
Index: 1
Address: 0x73e17dcc
Refc: 1
=fun
Module: qlc
Uniq: 72973499
Index: 36
Address: 0x73c462a8
Refc: 1
=fun
Module: rabbit_persister
Uniq: 98129045
Index: 11
Address: 0x73c601c0
Refc: 1
=fun
Module: mnesia_frag
Uniq: 84626649
Index: 6
Address: 0x73e47424
Refc: 1
=fun
Module: rabbit_mnesia
Uniq: 29844429
Index: 1
Address: 0x73f02c4c
Refc: 1
=fun
Module: inet_parse
Uniq: 71765042
Index: 5
Address: 0x73eaa780
Refc: 1
=fun
Module: mnesia_frag
Uniq: 95055958
Index: 9
Address: 0x73e46ea0
Refc: 1
=fun
Module: mnesia_dumper
Uniq: 104426922
Index: 0
Address: 0x73bd650c
Refc: 1
=fun
Module: erl_scan
Uniq: 87892338
Index: 35
Address: 0x818b435c
Refc: 1
=fun
Module: dets_server
Uniq: 127963778
Index: 3
Address: 0x73f9199c
Refc: 4
=fun
Module: rabbit_exchange
Uniq: 66334102
Index: 0
Address: 0x73c211c4
Refc: 1
=fun
Module: rabbit_exchange
Uniq: 82146266
Index: 17
Address: 0x73c1f4a8
Refc: 1
=fun
Module: dets_v9
Uniq: 26980114
Index: 19
Address: 0x73e161d0
Refc: 1
=fun
Module: rabbit_exchange
Uniq: 127235742
Index: 28
Address: 0x73c205b8
Refc: 1
=fun
Module: erl_scan
Uniq: 31129467
Index: 13
Address: 0x818b45a8
Refc: 1
=fun
Module: inet
Uniq: 65052819
Index: 4
Address: 0x73e9e2bc
Refc: 1
=fun
Module: cpu_sup
Uniq: 63246064
Index: 3
Address: 0x73df7c84
Refc: 1
=fun
Module: qlc
Uniq: 65777636
Index: 95
Address: 0x73c4742c
Refc: 1
=fun
Module: rabbit_amqqueue
Uniq: 5377090
Index: 17
Address: 0x73c1ad28
Refc: 1
=fun
Module: code_server
Uniq: 12280860
Index: 6
Address: 0x73efa30c
Refc: 5
=fun
Module: qlc
Uniq: 51311803
Index: 17
Address: 0x73c47600
Refc: 1
=fun
Module: gen_event
Uniq: 42517447
Index: 1
Address: 0x81881244
Refc: 1
=fun
Module: prim_zip
Uniq: 22533001
Index: 0
Address: 0xf5890c6c
Refc: 1
=fun
Module: rabbit_binary_generator
Uniq: 130182802
Index: 1
Address: 0x73bf4380
Refc: 1
=fun
Module: rabbit_persister
Uniq: 62121186
Index: 4
Address: 0x73c606c0
Refc: 1
=fun
Module: global_group
Uniq: 25932926
Index: 3
Address: 0x73ee6124
Refc: 1
=fun
Module: cpu_sup
Uniq: 118427788
Index: 1
Address: 0x73df7e44
Refc: 1
=fun
Module: rabbit_amqqueue
Uniq: 54369586
Index: 19
Address: 0x73c19fa0
Refc: 1
=fun
Module: global
Uniq: 129057541
Index: 10
Address: 0x8190db20
Refc: 1
=fun
Module: mnesia_bup
Uniq: 76133909
Index: 15
Address: 0x73f75e98
Refc: 1
=fun
Module: mnesia_tm
Uniq: 104980783
Index: 1
Address: 0x73e3b090
Refc: 1
=fun
Module: mnesia_schema
Uniq: 74505759
Index: 17
Address: 0x73f5c878
Refc: 1
=fun
Module: erl_eval
Uniq: 67289768
Index: 20
Address: 0x73dcf138
Refc: 1
=fun
Module: dict
Uniq: 63958379
Index: 4
Address: 0x818e82b0
Refc: 1
=fun
Module: mnesia_tm
Uniq: 114209721
Index: 3
Address: 0x73e3acb4
Refc: 1
=fun
Module: qlc
Uniq: 60244196
Index: 90
Address: 0x73c46090
Refc: 1
=fun
Module: global
Uniq: 108284074
Index: 1
Address: 0x8190e17c
Refc: 1
=fun
Module: qlc
Uniq: 42830770
Index: 33
Address: 0x73c46604
Refc: 1
=fun
Module: rabbit_amqqueue
Uniq: 90245516
Index: 50
Address: 0x73c1ba54
Refc: 1
=fun
Module: dets
Uniq: 61442007
Index: 21
Address: 0x73dc4034
Refc: 1
=fun
Module: rabbit_amqqueue_process
Uniq: 9609617
Index: 6
Address: 0x73c57ea0
Refc: 1
=fun
Module: mnesia_locker
Uniq: 69991318
Index: 0
Address: 0x73e2aa34
Refc: 1
=fun
Module: application_controller
Uniq: 48568865
Index: 1
Address: 0x818a77c8
Refc: 1
=fun
Module: rpc
Uniq: 48216782
Index: 4
Address: 0x818ef48c
Refc: 1
=fun
Module: mnesia
Uniq: 56199182
Index: 14
Address: 0x73f2110c
Refc: 1
=fun
Module: erl_eval
Uniq: 111717094
Index: 15
Address: 0x73dcf3b0
Refc: 1
=fun
Module: qlc
Uniq: 69450356
Index: 69
Address: 0x73c459d0
Refc: 1
=fun
Module: global
Uniq: 74500805
Index: 21
Address: 0x8190d000
Refc: 2
=fun
Module: dets_v9
Uniq: 91636669
Index: 10
Address: 0x73e167c0
Refc: 1
=fun
Module: mnesia_schema
Uniq: 58011654
Index: 32
Address: 0x73f5c11c
Refc: 1
=fun
Module: global
Uniq: 2895738
Index: 22
Address: 0x8190cf38
Refc: 1
=fun
Module: mnesia
Uniq: 114820947
Index: 18
Address: 0x73f20e14
Refc: 1
=fun
Module: mnesia_controller
Uniq: 66188670
Index: 2
Address: 0x73e67228
Refc: 1
=fun
Module: rabbit_exchange
Uniq: 90758204
Index: 29
Address: 0x73c207ec
Refc: 1
=fun
Module: inet_db
Uniq: 9289184
Index: 8
Address: 0x818ffca8
Refc: 1
=fun
Module: release_handler
Uniq: 93773640
Index: 10
Address: 0x73d9c640
Refc: 2
=fun
Module: supervisor
Uniq: 19520856
Index: 1
Address: 0x818e3df8
Refc: 1
=fun
Module: dets_server
Uniq: 44084634
Index: 1
Address: 0x73f91b5c
Refc: 1
=fun
Module: erl_eval
Uniq: 61929595
Index: 35
Address: 0x73dceb98
Refc: 1
=fun
Module: rabbit_exchange
Uniq: 99126738
Index: 24
Address: 0x73c20580
Refc: 1
=fun
Module: mnesia_controller
Uniq: 51885182
Index: 16
Address: 0x73e66584
Refc: 1
=fun
Module: mnesia_lib
Uniq: 92217297
Index: 8
Address: 0x73f3d6b4
Refc: 1
=fun
Module: global_group
Uniq: 106196531
Index: 5
Address: 0x73ee6064
Refc: 1
=fun
Module: rabbit_amqqueue_process
Uniq: 24865344
Index: 4
Address: 0x73c5840c
Refc: 1
=fun
Module: qlc
Uniq: 91020957
Index: 66
Address: 0x73c45a68
Refc: 1
=fun
Module: mnesia_controller
Uniq: 131739807
Index: 18
Address: 0x73e66854
Refc: 1
=fun
Module: erl_eval
Uniq: 24079196
Index: 11
Address: 0x73dcf638
Refc: 1
=fun
Module: disk_log_server
Uniq: 102978919
Index: 1
Address: 0x73e4ae58
Refc: 1
=fun
Module: init
Uniq: 52978875
Index: 1
Address: 0xf5888da0
Refc: 1
=fun
Module: mnesia_frag
Uniq: 107792674
Index: 4
Address: 0x73e474c4
Refc: 1
=fun
Module: file_io_server
Uniq: 18290749
Index: 0
Address: 0x73f31408
Refc: 1
=fun
Module: application_controller
Uniq: 111252405
Index: 5
Address: 0x818a7628
Refc: 2
=fun
Module: qlc
Uniq: 47351793
Index: 12
Address: 0x73c489d8
Refc: 1
=fun
Module: inet_config
Uniq: 47398
Index: 1
Address: 0x81916c70
Refc: 1
=fun
Module: cpu_sup
Uniq: 97772561
Index: 0
Address: 0x73df7ea8
Refc: 1
=fun
Module: inet_gethost_native
Uniq: 81893892
Index: 0
Address: 0x73eb3224
Refc: 1
=fun
Module: rabbit_misc
Uniq: 16155648
Index: 0
Address: 0x73deba20
Refc: 1
=fun
Module: rabbit_amqqueue
Uniq: 52173060
Index: 41
Address: 0x73c1b440
Refc: 1
=fun
Module: rabbit
Uniq: 67992916
Index: 1
Address: 0x73ee86d4
Refc: 1
=fun
Module: mnesia_event
Uniq: 82571779
Index: 0
Address: 0x73defc04
Refc: 1
=fun
Module: global
Uniq: 57205986
Index: 25
Address: 0x8190cf7c
Refc: 1
=fun
Module: application_controller
Uniq: 26912726
Index: 8
Address: 0x818a72b0
Refc: 1
=fun
Module: mnesia_schema
Uniq: 67902346
Index: 26
Address: 0x73f5c4ec
Refc: 1
=fun
Module: mnesia_subscr
Uniq: 14629168
Index: 3
Address: 0x73dffb54
Refc: 1
=fun
Module: erl_parse
Uniq: 20793614
Index: 0
Address: 0x818ce8f0
Refc: 1
=fun
Module: qlc
Uniq: 120830562
Index: 89
Address: 0x73c45284
Refc: 1
=fun
Module: rabbit_exchange
Uniq: 90271011
Index: 5
Address: 0x73c20e70
Refc: 1
=fun
Module: mnesia_controller
Uniq: 91643284
Index: 5
Address: 0x73e66fc0
Refc: 1
=fun
Module: gen_event
Uniq: 112168427
Index: 2
Address: 0x81881080
Refc: 1
=fun
Module: c
Uniq: 123195706
Index: 5
Address: 0x73da8c30
Refc: 1
=fun
Module: qlc
Uniq: 73299485
Index: 28
Address: 0x73c46834
Refc: 1
=fun
Module: inet_gethost_native
Uniq: 109774182
Index: 1
Address: 0x73eb3068
Refc: 1
=fun
Module: erl_eval
Uniq: 59896125
Index: 28
Address: 0x73dcee1c
Refc: 1
=fun
Module: dets
Uniq: 23603521
Index: 0
Address: 0x73dc4a7c
Refc: 1
=fun
Module: erl_scan
Uniq: 12042434
Index: 1
Address: 0x818b46a4
Refc: 1
=fun
Module: mnesia_log
Uniq: 28386126
Index: 0
Address: 0x73e574a8
Refc: 1
=fun
Module: dets
Uniq: 101583926
Index: 7
Address: 0x73dc48d0
Refc: 1
=fun
Module: mnesia_lib
Uniq: 110435161
Index: 3
Address: 0x73f3dc74
Refc: 1
=fun
Module: dets
Uniq: 66534275
Index: 9
Address: 0x73dc44a0
Refc: 1
=fun
Module: application_controller
Uniq: 7393523
Index: 12
Address: 0x818a7058
Refc: 1
=fun
Module: release_handler
Uniq: 46119
Index: 2
Address: 0x73d9cdd8
Refc: 1
=fun
Module: disk_log
Uniq: 117741255
Index: 0
Address: 0x73e7cb9c
Refc: 1
=fun
Module: qlc
Uniq: 94673727
Index: 64
Address: 0x73c45b18
Refc: 1
=fun
Module: erl_eval
Uniq: 113037538
Index: 12
Address: 0x73dcf5e4
Refc: 1
=fun
Module: mnesia_controller
Uniq: 9324908
Index: 19
Address: 0x73e6680c
Refc: 1
=fun
Module: net_kernel
Uniq: 15440390
Index: 3
Address: 0x73ec6da0
Refc: 1
=fun
Module: mnesia
Uniq: 75490051
Index: 21
Address: 0x73f20d64
Refc: 1
=fun
Module: dets_v9
Uniq: 74678693
Index: 14
Address: 0x73e165c0
Refc: 1
=fun
Module: inet_db
Uniq: 116334385
Index: 7
Address: 0x818ffcc4
Refc: 1
=fun
Module: vm_memory_monitor
Uniq: 38763529
Index: 1
Address: 0x73c0bf94
Refc: 1
=fun
Module: rpc
Uniq: 42921910
Index: 1
Address: 0x818ef624
Refc: 1
=fun
Module: erl_scan
Uniq: 114637756
Index: 12
Address: 0x818b45c4
Refc: 1
=fun
Module: mnesia_checkpoint
Uniq: 89349471
Index: 5
Address: 0x73be1610
Refc: 1
=fun
Module: qlc
Uniq: 132940205
Index: 49
Address: 0x73c45f90
Refc: 1
=fun
Module: mnesia_index
Uniq: 93822267
Index: 1
Address: 0x73bf1e64
Refc: 1
=fun
Module: net_kernel
Uniq: 72770210
Index: 1
Address: 0x73ec6e9c
Refc: 1
=fun
Module: init
Uniq: 116626438
Index: 6
Address: 0xf5888ae0
Refc: 1
=fun
Module: erl_scan
Uniq: 45252965
Index: 15
Address: 0x818b4570
Refc: 1
=fun
Module: mnesia
Uniq: 32364046
Index: 11
Address: 0x73f215f4
Refc: 1
=fun
Module: init
Uniq: 106655460
Index: 5
Address: 0xf5888bdc
Refc: 1
=fun
Module: qlc
Uniq: 11882167
Index: 4
Address: 0x73c499c0
Refc: 1
=fun
Module: mnesia_bup
Uniq: 7373276
Index: 9
Address: 0x73f76e50
Refc: 1
=fun
Module: code_server
Uniq: 98520816
Index: 11
Address: 0x73ef9d00
Refc: 1
=fun
Module: erl_eval
Uniq: 68528436
Index: 2
Address: 0x73dcfb58
Refc: 1
=fun
Module: os
Uniq: 70583073
Index: 0
Address: 0x73e97af4
Refc: 1
=fun
Module: mnesia_schema
Uniq: 123079070
Index: 20
Address: 0x73f5c7e8
Refc: 1
=fun
Module: disk_log
Uniq: 35107615
Index: 2
Address: 0x73e7ca48
Refc: 1
=fun
Module: inet_tcp_dist
Uniq: 11559673
Index: 3
Address: 0x73ead534
Refc: 2
=fun
Module: mnesia
Uniq: 109941107
Index: 8
Address: 0x73f21884
Refc: 1
=fun
Module: mnesia_log
Uniq: 57054875
Index: 3
Address: 0x73e57424
Refc: 1
=fun
Module: application_controller
Uniq: 42372705
Index: 17
Address: 0x818a6b94
Refc: 1
=fun
Module: qlc
Uniq: 46378448
Index: 47
Address: 0x73c45fd0
Refc: 1
=fun
Module: inet_db
Uniq: 11614433
Index: 4
Address: 0x818ffd38
Refc: 1
=fun
Module: ets
Uniq: 35346458
Index: 8
Address: 0x73f0cba0
Refc: 1
=fun
Module: inet_db
Uniq: 107800056
Index: 1
Address: 0x81900128
Refc: 1
=fun
Module: rabbit_amqqueue
Uniq: 101633203
Index: 33
Address: 0x73c1a520
Refc: 1
=fun
Module: dict
Uniq: 117755170
Index: 8
Address: 0x818e81d8
Refc: 1
=fun
Module: inet_parse
Uniq: 47356870
Index: 11
Address: 0x73eaa2bc
Refc: 1
=fun
Module: qlc
Uniq: 115014023
Index: 44
Address: 0x73c46220
Refc: 1
=fun
Module: qlc
Uniq: 86716198
Index: 2
Address: 0x73c499dc
Refc: 1
=fun
Module: erl_scan
Uniq: 78224618
Index: 0
Address: 0x818b4730
Refc: 1
=fun
Module: rabbit_exchange
Uniq: 44205511
Index: 30
Address: 0x73c20dcc
Refc: 1
=fun
Module: erl_parse
Uniq: 123118389
Index: 1
Address: 0x818ce758
Refc: 1
=fun
Module: inet
Uniq: 44118929
Index: 7
Address: 0x73e9e078
Refc: 1
=fun
Module: mnesia_loader
Uniq: 52586886
Index: 2
Address: 0x73bee37c
Refc: 1
=fun
Module: dict
Uniq: 7618830
Index: 5
Address: 0x818e8280
Refc: 1
=fun
Module: mnesia_schema
Uniq: 66993242
Index: 31
Address: 0x73f5c1d4
Refc: 1
=fun
Module: rabbit_misc
Uniq: 56667354
Index: 6
Address: 0x73deb26c
Refc: 1
=fun
Module: erl_scan
Uniq: 108931174
Index: 8
Address: 0x818b4618
Refc: 1
=fun
Module: rabbit_mnesia
Uniq: 40056606
Index: 0
Address: 0x73f02d3c
Refc: 1
=fun
Module: mnesia_checkpoint
Uniq: 60380905
Index: 2
Address: 0x73be16d4
Refc: 1
=fun
Module: erl_eval
Uniq: 10400016
Index: 33
Address: 0x73dced14
Refc: 1
=fun
Module: mnesia_controller
Uniq: 32003269
Index: 8
Address: 0x73e66e0c
Refc: 1
=fun
Module: rabbit_amqqueue
Uniq: 13264371
Index: 35
Address: 0x73c1a7c4
Refc: 1
=fun
Module: erl_eval
Uniq: 51509793
Index: 32
Address: 0x73dced54
Refc: 1
=fun
Module: qlc
Uniq: 3027524
Index: 40
Address: 0x73c460c8
Refc: 1
=fun
Module: mnesia_controller
Uniq: 28860142
Index: 0
Address: 0x73e675a0
Refc: 1
=fun
Module: erl_scan
Uniq: 121559432
Index: 3
Address: 0x818b46dc
Refc: 1
=fun
Module: c
Uniq: 119274085
Index: 0
Address: 0x73da8fc0
Refc: 1
=fun
Module: application_controller
Uniq: 10792426
Index: 18
Address: 0x818a6b14
Refc: 2
=fun
Module: inet_db
Uniq: 42702732
Index: 11
Address: 0x81900458
Refc: 1
=fun
Module: mnesia_frag
Uniq: 66797359
Index: 2
Address: 0x73e47820
Refc: 1
=fun
Module: erl_eval
Uniq: 118379185
Index: 0
Address: 0x73dcfc98
Refc: 1
=fun
Module: rabbit_amqqueue
Uniq: 93375614
Index: 0
Address: 0x73c1bf30
Refc: 1
=fun
Module: mnesia_schema
Uniq: 69617962
Index: 22
Address: 0x73f5c784
Refc: 1
=fun
Module: mnesia_controller
Uniq: 108949395
Index: 14
Address: 0x73e66714
Refc: 1
=fun
Module: sets
Uniq: 77103967
Index: 7
Address: 0x73c5ba8c
Refc: 1
=fun
Module: dets_utils
Uniq: 124924938
Index: 1
Address: 0x73de41c8
Refc: 1
=fun
Module: rabbit_persister
Uniq: 99496810
Index: 5
Address: 0x73c606a4
Refc: 1
=fun
Module: rabbit_amqqueue
Uniq: 106280042
Index: 27
Address: 0x73c1a354
Refc: 1
=fun
Module: rabbit_amqqueue
Uniq: 87414464
Index: 10
Address: 0x73c1afc8
Refc: 1
=fun
Module: mnesia
Uniq: 79514171
Index: 0
Address: 0x73f21b80
Refc: 1
=fun
Module: qlc
Uniq: 121729538
Index: 32
Address: 0x73c4664c
Refc: 1
=fun
Module: mnesia_loader
Uniq: 89220703
Index: 0
Address: 0x73bee4b0
Refc: 1
=fun
Module: rabbit_amqqueue
Uniq: 59920054
Index: 52
Address: 0x73c1c034
Refc: 1
=fun
Module: inet_db
Uniq: 21401377
Index: 2
Address: 0x819000c4
Refc: 1
=fun
Module: erl_scan
Uniq: 128777368
Index: 11
Address: 0x818b45e0
Refc: 1
=fun
Module: rpc
Uniq: 133190634
Index: 2
Address: 0x818ef558
Refc: 1
=fun
Module: mnesia_schema
Uniq: 55817931
Index: 5
Address: 0x73f5ccf4
Refc: 1
=fun
Module: rabbit_persister
Uniq: 98763126
Index: 8
Address: 0x73c60254
Refc: 1
=fun
Module: mnesia
Uniq: 115675768
Index: 20
Address: 0x73f20d94
Refc: 1
=fun
Module: mnesia_log
Uniq: 12650918
Index: 6
Address: 0x73e57194
Refc: 1
=fun
Module: qlc
Uniq: 47209499
Index: 62
Address: 0x73c45b34
Refc: 1
=fun
Module: rabbit_amqqueue
Uniq: 14451731
Index: 39
Address: 0x73c1b934
Refc: 1
=fun
Module: erl_eval
Uniq: 58436961
Index: 27
Address: 0x73dcee6c
Refc: 1
=fun
Module: erl_eval
Uniq: 10531915
Index: 17
Address: 0x73dcf2b0
Refc: 1
=fun
Module: mnesia_schema
Uniq: 65047490
Index: 4
Address: 0x73f5cdcc
Refc: 1
=fun
Module: erl_prim_loader
Uniq: 81938612
Index: 8
Address: 0xf5899b54
Refc: 1
=fun
Module: rabbit_amqqueue
Uniq: 56198827
Index: 13
Address: 0x73c1af20
Refc: 1
=fun
Module: sets
Uniq: 81077016
Index: 8
Address: 0x73c5ba50
Refc: 1
=fun
Module: rabbit_exchange
Uniq: 50684370
Index: 8
Address: 0x73c200d0
Refc: 1
=fun
Module: mnesia_bup
Uniq: 50961067
Index: 11
Address: 0x73f76b08
Refc: 1
=fun
Module: gen_event
Uniq: 99987390
Index: 3
Address: 0x81880f1c
Refc: 1
=fun
Module: qlc
Uniq: 45431550
Index: 73
Address: 0x73c45898
Refc: 1
=fun
Module: ets
Uniq: 126391248
Index: 3
Address: 0x73f0cce0
Refc: 1
=fun
Module: mnesia_controller
Uniq: 90516986
Index: 1
Address: 0x73e6728c
Refc: 1
=fun
Module: erl_prim_loader
Uniq: 18867649
Index: 18
Address: 0xf589901c
Refc: 1
=fun
Module: qlc
Uniq: 93038246
Index: 70
Address: 0x73c4596c
Refc: 1
=fun
Module: dets_v9
Uniq: 44995456
Index: 9
Address: 0x73e16820
Refc: 1
=fun
Module: dets_v9
Uniq: 94032547
Index: 21
Address: 0x73e15e4c
Refc: 1
=fun
Module: sets
Uniq: 112901484
Index: 2
Address: 0x73c5bb2c
Refc: 1
=fun
Module: mnesia
Uniq: 49872753
Index: 6
Address: 0x73f2197c
Refc: 1
=fun
Module: rabbit_mnesia
Uniq: 41203651
Index: 2
Address: 0x73f02940
Refc: 1
=fun
Module: mnesia_frag
Uniq: 124617875
Index: 5
Address: 0x73e47478
Refc: 1
=fun
Module: mnesia_lib
Uniq: 76508394
Index: 7
Address: 0x73f3d6e8
Refc: 1
=fun
Module: rabbit_amqqueue
Uniq: 25068795
Index: 38
Address: 0x73c1b9c4
Refc: 1
=fun
Module: sets
Uniq: 16341513
Index: 0
Address: 0x73c5bb80
Refc: 1
=fun
Module: inet_parse
Uniq: 29214351
Index: 2
Address: 0x73eaae6c
Refc: 1
=fun
Module: application_controller
Uniq: 124112560
Index: 7
Address: 0x818a7348
Refc: 1
=fun
Module: erl_scan
Uniq: 88043334
Index: 14
Address: 0x818b458c
Refc: 1
=fun
Module: inet_config
Uniq: 57616428
Index: 0
Address: 0x81916ca0
Refc: 1
=fun
Module: rabbit_amqqueue
Uniq: 133707255
Index: 3
Address: 0x73c1b108
Refc: 1
=fun
Module: inet_db
Uniq: 116363178
Index: 10
Address: 0x818ff9b0
Refc: 1
=fun
Module: qlc
Uniq: 81595264
Index: 74
Address: 0x73c45878
Refc: 1
=fun
Module: rabbit_amqqueue
Uniq: 7996288
Index: 2
Address: 0x73c1b148
Refc: 1
=fun
Module: qlc
Uniq: 62755644
Index: 15
Address: 0x73c47a70
Refc: 1
=fun
Module: mnesia_bup
Uniq: 92582319
Index: 14
Address: 0x73f75eb4
Refc: 1
=fun
Module: kernel_config
Uniq: 32750002
Index: 0
Address: 0x73f475fc
Refc: 1
=fun
Module: rpc
Uniq: 62336909
Index: 5
Address: 0x818ef470
Refc: 1
=fun
Module: rpc
Uniq: 90773186
Index: 3
Address: 0x818ef52c
Refc: 1
=fun
Module: net_kernel
Uniq: 17349051
Index: 5
Address: 0x73ec6d00
Refc: 1
=fun
Module: dets_v9
Uniq: 5420961
Index: 12
Address: 0x73e166ac
Refc: 1
=fun
Module: qlc
Uniq: 88792755
Index: 58
Address: 0x73c45cdc
Refc: 1
=fun
Module: qlc
Uniq: 38882980
Index: 3
Address: 0x73c49aec
Refc: 1
=fun
Module: rabbit_exchange
Uniq: 129938278
Index: 6
Address: 0x73c20ec0
Refc: 1
=fun
Module: mnesia_bup
Uniq: 115488223
Index: 3
Address: 0x73f77178
Refc: 1
=fun
Module: mnesia_schema
Uniq: 73426598
Index: 27
Address: 0x73f5c4bc
Refc: 1
=fun
Module: dets
Uniq: 44041544
Index: 18
Address: 0x73dc413c
Refc: 1
=fun
Module: erl_scan
Uniq: 115530048
Index: 21
Address: 0x818b4500
Refc: 1
=fun
Module: mnesia_log
Uniq: 34843847
Index: 4
Address: 0x73e5722c
Refc: 1
=fun
Module: erl_prim_loader
Uniq: 125948878
Index: 10
Address: 0xf58999cc
Refc: 4
=fun
Module: rabbit_amqqueue
Uniq: 28866133
Index: 29
Address: 0x73c1a654
Refc: 1
=fun
Module: disk_log
Uniq: 104174135
Index: 3
Address: 0x73e7c88c
Refc: 1
=fun
Module: dets_v9
Uniq: 86738836
Index: 22
Address: 0x73e15df0
Refc: 1
=fun
Module: global
Uniq: 38406150
Index: 9
Address: 0x8190dd64
Refc: 1
=fun
Module: erl_prim_loader
Uniq: 37900046
Index: 17
Address: 0xf58990dc
Refc: 1
=fun
Module: inet_parse
Uniq: 105698088
Index: 3
Address: 0x73eaadc0
Refc: 1
=fun
Module: release_handler
Uniq: 132458969
Index: 7
Address: 0x73d9caa8
Refc: 1
=fun
Module: rabbit_amqqueue_process
Uniq: 106665719
Index: 5
Address: 0x73c5829c
Refc: 1
=fun
Module: net_kernel
Uniq: 33683044
Index: 4
Address: 0x73ec6d30
Refc: 1
=fun
Module: mnesia_loader
Uniq: 87247798
Index: 8
Address: 0x73bee0f8
Refc: 1
=fun
Module: mnesia_sup
Uniq: 47901635
Index: 1
Address: 0x73de567c
Refc: 1
=fun
Module: rabbit
Uniq: 50323054
Index: 5
Address: 0x73ee84a4
Refc: 1
=fun
Module: gen_server
Uniq: 14774588
Index: 0
Address: 0x818ad7b8
Refc: 1
=fun
Module: sets
Uniq: 9616702
Index: 4
Address: 0x73c5bae0
Refc: 1
=fun
Module: qlc
Uniq: 52355428
Index: 82
Address: 0x73c45574
Refc: 1
=fun
Module: qlc
Uniq: 27588840
Index: 20
Address: 0x73c4758c
Refc: 1
=fun
Module: mnesia_dumper
Uniq: 25640803
Index: 1
Address: 0x73bd66e4
Refc: 1
=fun
Module: sets
Uniq: 117584232
Index: 9
Address: 0x73c5ba00
Refc: 1
=fun
Module: dets
Uniq: 114100858
Index: 17
Address: 0x73dc417c
Refc: 1
=fun
Module: mnesia_lib
Uniq: 19988910
Index: 12
Address: 0x73f3d49c
Refc: 1
=fun
Module: mnesia
Uniq: 32947125
Index: 10
Address: 0x73f21610
Refc: 1
=fun
Module: dets
Uniq: 9814223
Index: 3
Address: 0x73dc49f4
Refc: 1
=fun
Module: mnesia_lib
Uniq: 125764640
Index: 6
Address: 0x73f3d704
Refc: 1
=fun
Module: rabbit_misc
Uniq: 5301611
Index: 1
Address: 0x73deb7f4
Refc: 1
=fun
Module: rabbit_amqqueue
Uniq: 107437219
Index: 5
Address: 0x73c1b0b4
Refc: 1
=fun
Module: gen_server2
Uniq: 59853626
Index: 0
Address: 0x73c28c00
Refc: 1
=fun
Module: mnesia_bup
Uniq: 53641767
Index: 4
Address: 0x73f76f90
Refc: 1
=fun
Module: rabbit_amqqueue
Uniq: 61465489
Index: 16
Address: 0x73c1ae60
Refc: 1
=fun
Module: dets
Uniq: 119826431
Index: 14
Address: 0x73dc4298
Refc: 1
=fun
Module: mnesia_schema
Uniq: 68068852
Index: 16
Address: 0x73f5c8a8
Refc: 1
=fun
Module: erl_eval
Uniq: 60779537
Index: 9
Address: 0x73dcf728
Refc: 1
=fun
Module: mnesia_index
Uniq: 32180016
Index: 0
Address: 0x73bf1ef4
Refc: 1
=fun
Module: dets
Uniq: 116168731
Index: 11
Address: 0x73dc440c
Refc: 1
=fun
Module: qlc
Uniq: 99121136
Index: 43
Address: 0x73c461f0
Refc: 1
=fun
Module: rabbit_exchange
Uniq: 111916343
Index: 18
Address: 0x73c20748
Refc: 1
=fun
Module: mnesia_schema
Uniq: 71459092
Index: 28
Address: 0x73f5c48c
Refc: 1
=fun
Module: inet_parse
Uniq: 113649451
Index: 4
Address: 0x73eaa8ac
Refc: 1
=fun
Module: rabbit_misc
Uniq: 119734964
Index: 2
Address: 0x73deb7c8
Refc: 1
=fun
Module: qlc
Uniq: 27778019
Index: 51
Address: 0x73c45ee4
Refc: 1
=fun
Module: rabbit_persister
Uniq: 78444983
Index: 6
Address: 0x73c6065c
Refc: 1
=fun
Module: rabbit_amqqueue
Uniq: 24760479
Index: 22
Address: 0x73c1ac98
Refc: 1
=fun
Module: code_server
Uniq: 81711762
Index: 12
Address: 0x73ef9c90
Refc: 1
=fun
Module: rabbit_amqqueue
Uniq: 9688607
Index: 51
Address: 0x73c1bea4
Refc: 1
=fun
Module: dict
Uniq: 105315937
Index: 7
Address: 0x818e8220
Refc: 1
=fun
Module: erl_prim_loader
Uniq: 18748191
Index: 6
Address: 0xf5899cdc
Refc: 1
=fun
Module: qlc
Uniq: 53006724
Index: 67
Address: 0x73c45a50
Refc: 1
=fun
Module: rabbit_amqqueue
Uniq: 30608255
Index: 36
Address: 0x73c1ac0c
Refc: 1
=fun
Module: application_controller
Uniq: 49204737
Index: 3
Address: 0x818a758c
Refc: 1
=fun
Module: mnesia_checkpoint
Uniq: 7809621
Index: 4
Address: 0x73be162c
Refc: 1
=fun
Module: qlc
Uniq: 28066242
Index: 61
Address: 0x73c45bac
Refc: 1
=fun
Module: global
Uniq: 40853000
Index: 11
Address: 0x8190d87c
Refc: 1
=fun
Module: inet_parse
Uniq: 90563105
Index: 1
Address: 0x73eaaf14
Refc: 1
=fun
Module: mnesia_checkpoint
Uniq: 114905411
Index: 3
Address: 0x73be1684
Refc: 1
=fun
Module: application_controller
Uniq: 58736097
Index: 6
Address: 0x818a7420
Refc: 1
=fun
Module: application_controller
Uniq: 2803673
Index: 13
Address: 0x818a6f70
Refc: 1
=fun
Module: mnesia_frag
Uniq: 44735289
Index: 11
Address: 0x73e46d84
Refc: 1
=fun
Module: dict
Uniq: 48744357
Index: 12
Address: 0x818e809c
Refc: 1
=fun
Module: mnesia_bup
Uniq: 94576446
Index: 7
Address: 0x73f762a8
Refc: 1
=fun
Module: erl_prim_loader
Uniq: 39920865
Index: 5
Address: 0xf5899da0
Refc: 1
=fun
Module: mnesia_schema
Uniq: 77132772
Index: 25
Address: 0x73f5c51c
Refc: 1
=fun
Module: code_server
Uniq: 3292535
Index: 8
Address: 0x73ef9fd0
Refc: 1
=fun
Module: mnesia_controller
Uniq: 63004046
Index: 13
Address: 0x73e666fc
Refc: 1
=fun
Module: mnesia_bup
Uniq: 54777839
Index: 1
Address: 0x73f77348
Refc: 1
=fun
Module: dict
Uniq: 19374269
Index: 3
Address: 0x818e82e0
Refc: 4
=fun
Module: qlc
Uniq: 78311206
Index: 41
Address: 0x73c460ac
Refc: 1
=fun
Module: dets_utils
Uniq: 103697995
Index: 3
Address: 0x73de3f40
Refc: 1
=fun
Module: supervisor
Uniq: 89349409
Index: 3
Address: 0x818e3b44
Refc: 2
=fun
Module: rabbit_exchange
Uniq: 61138706
Index: 19
Address: 0x73c20694
Refc: 1
=fun
Module: mnesia
Uniq: 36851440
Index: 26
Address: 0x73f20ce4
Refc: 1
=fun
Module: inet_parse
Uniq: 84502526
Index: 14
Address: 0x73eaa268
Refc: 1
=fun
Module: erl_scan
Uniq: 104417191
Index: 7
Address: 0x818b4634
Refc: 1
=fun
Module: rabbit_mnesia
Uniq: 100658130
Index: 3
Address: 0x73f027a8
Refc: 1
=fun
Module: qlc
Uniq: 10318672
Index: 23
Address: 0x73c473a0
Refc: 1
=fun
Module: erl_prim_loader
Uniq: 32895759
Index: 1
Address: 0xf589a0a8
Refc: 1
=fun
Module: qlc
Uniq: 40684669
Index: 80
Address: 0x73c456b8
Refc: 1
=fun
Module: rabbit_exchange
Uniq: 113830768
Index: 20
Address: 0x73c20674
Refc: 1
=fun
Module: qlc
Uniq: 132407877
Index: 37
Address: 0x73c46190
Refc: 1
=fun
Module: qlc
Uniq: 44304296
Index: 54
Address: 0x73c45e18
Refc: 1
=fun
Module: inet
Uniq: 66588872
Index: 0
Address: 0x73e9e514
Refc: 1
=fun
Module: dets
Uniq: 49144976
Index: 19
Address: 0x73dc4110
Refc: 1
=fun
Module: mnesia_schema
Uniq: 31191939
Index: 11
Address: 0x73f5caa8
Refc: 1
=fun
Module: inet_parse
Uniq: 36900786
Index: 6
Address: 0x73eaa748
Refc: 1
=fun
Module: qlc
Uniq: 21015738
Index: 9
Address: 0x73c4903c
Refc: 1
=fun
Module: rabbit_amqqueue
Uniq: 81153840
Index: 25
Address: 0x73c1a6a4
Refc: 1
=fun
Module: rabbit_amqqueue
Uniq: 8038415
Index: 8
Address: 0x73c1b060
Refc: 1
=fun
Module: rabbit_misc
Uniq: 3316640
Index: 4
Address: 0x73deb508
Refc: 1
=fun
Module: sets
Uniq: 128770449
Index: 3
Address: 0x73c5bafc
Refc: 1
=fun
Module: rabbit
Uniq: 91820821
Index: 4
Address: 0x73ee84e8
Refc: 1
=fun
Module: ets
Uniq: 112493251
Index: 6
Address: 0x73f0cc58
Refc: 1
=fun
Module: rabbit_misc
Uniq: 131978083
Index: 3
Address: 0x73deb5c4
Refc: 1
=fun
Module: erl_scan
Uniq: 89461118
Index: 32
Address: 0x818b43b0
Refc: 1
=fun
Module: ets
Uniq: 22973415
Index: 9
Address: 0x73f0cb68
Refc: 1
=fun
Module: ets
Uniq: 17345538
Index: 12
Address: 0x73f0c68c
Refc: 1
=fun
Module: mnesia_lib
Uniq: 117525270
Index: 2
Address: 0x73f3ddd4
Refc: 1
=fun
Module: ets
Uniq: 109179334
Index: 0
Address: 0x73f0cff0
Refc: 1
=fun
Module: mnesia_log
Uniq: 33945241
Index: 5
Address: 0x73e571e4
Refc: 1
=fun
Module: global_group
Uniq: 100765251
Index: 1
Address: 0x73ee6168
Refc: 1
=fun
Module: global_group
Uniq: 80829628
Index: 2
Address: 0x73ee62e0
Refc: 1
=fun
Module: erl_eval
Uniq: 57169421
Index: 25
Address: 0x73dcef0c
Refc: 1
=fun
Module: erl_eval
Uniq: 13229925
Index: 6
Address: 0x73dcf944
Refc: 1
=fun
Module: application_master
Uniq: 5503001
Index: 0
Address: 0x818d4358
Refc: 1
=fun
Module: mnesia_lib
Uniq: 126026936
Index: 16
Address: 0x73f3dd0c
Refc: 1
=fun
Module: rabbit_binary_generator
Uniq: 116332023
Index: 0
Address: 0x73bf43c0
Refc: 1
=fun
Module: qlc
Uniq: 25781959
Index: 42
Address: 0x73c461b8
Refc: 1
=fun
Module: qlc
Uniq: 88599778
Index: 71
Address: 0x73c45914
Refc: 1
=fun
Module: prim_zip
Uniq: 81916975
Index: 2
Address: 0xf5890c34
Refc: 1
=fun
Module: disk_log
Uniq: 126253549
Index: 1
Address: 0x73e7cb5c
Refc: 1
=fun
Module: erl_prim_loader
Uniq: 3482243
Index: 15
Address: 0xf5899360
Refc: 1
=fun
Module: erl_eval
Uniq: 16065596
Index: 1
Address: 0x73dcfbec
Refc: 1
=fun
Module: inet_db
Uniq: 38783362
Index: 6
Address: 0x818ffce0
Refc: 1
=fun
Module: rabbit_amqqueue
Uniq: 93138291
Index: 37
Address: 0x73c1b308
Refc: 1
=fun
Module: mnesia_checkpoint
Uniq: 113466055
Index: 0
Address: 0x73be176c
Refc: 1
=fun
Module: qlc
Uniq: 90044950
Index: 92
Address: 0x73c46530
Refc: 1
=fun
Module: rabbit_router
Uniq: 23555197
Index: 1
Address: 0x73c0766c
Refc: 1
=fun
Module: inet_tcp_dist
Uniq: 128104957
Index: 4
Address: 0x73ead518
Refc: 2
=fun
Module: rabbit_mnesia
Uniq: 11097777
Index: 4
Address: 0x73f02670
Refc: 1
=fun
Module: inet_db
Uniq: 126815893
Index: 5
Address: 0x818ffcfc
Refc: 1
=fun
Module: mnesia_schema
Uniq: 70122984
Index: 23
Address: 0x73f5c744
Refc: 1
=fun
Module: mnesia_log
Uniq: 48805704
Index: 1
Address: 0x73e57474
Refc: 1
=fun
Module: rabbit
Uniq: 62693321
Index: 0
Address: 0x73ee8818
Refc: 1
=fun
Module: disk_log
Uniq: 10284908
Index: 5
Address: 0x73e7c7e8
Refc: 1
=fun
Module: rabbit_amqqueue
Uniq: 29925676
Index: 30
Address: 0x73c1a63c
Refc: 1
=fun
Module: application_controller
Uniq: 29662384
Index: 10
Address: 0x818a7150
Refc: 1
=fun
Module: qlc
Uniq: 4041561
Index: 25
Address: 0x73c46b40
Refc: 1
=fun
Module: erl_eval
Uniq: 89632933
Index: 19
Address: 0x73dcf180
Refc: 1
=fun
Module: erl_scan
Uniq: 48137620
Index: 34
Address: 0x818b4378
Refc: 1
=fun
Module: mnesia
Uniq: 48112873
Index: 13
Address: 0x73f2131c
Refc: 1
=fun
Module: qlc
Uniq: 65788606
Index: 30
Address: 0x73c466e8
Refc: 1
=fun
Module: c
Uniq: 123152271
Index: 4
Address: 0x73da8c70
Refc: 1
=fun
Module: disk_log_server
Uniq: 103069352
Index: 3
Address: 0x73e4ad0c
Refc: 1
=fun
Module: rabbit
Uniq: 127423914
Index: 9
Address: 0x73ee80e4
Refc: 1
=fun
Module: erl_prim_loader
Uniq: 116972459
Index: 0
Address: 0xf589a184
Refc: 1
=fun
Module: qlc
Uniq: 63840482
Index: 11
Address: 0x73c48dec
Refc: 1
=fun
Module: mnesia_lib
Uniq: 59582664
Index: 4
Address: 0x73f3da20
Refc: 1
=fun
Module: io_lib_pretty
Uniq: 47893287
Index: 0
Address: 0x73c137a8
Refc: 1
=fun
Module: qlc
Uniq: 32093959
Index: 68
Address: 0x73c459f0
Refc: 1
=fun
Module: mnesia_frag
Uniq: 79595860
Index: 10
Address: 0x73e46e54
Refc: 1
=fun
Module: release_handler
Uniq: 86534358
Index: 8
Address: 0x73d9c778
Refc: 1
=fun
Module: qlc
Uniq: 5416974
Index: 26
Address: 0x73c46b14
Refc: 1
=fun
Module: disk_log_server
Uniq: 56429184
Index: 2
Address: 0x73e4ad34
Refc: 2
=fun
Module: dict
Uniq: 479602
Index: 11
Address: 0x818e8028
Refc: 1
=fun
Module: mnesia_tm
Uniq: 54252494
Index: 6
Address: 0x73e3abb8
Refc: 1
=fun
Module: mnesia_bup
Uniq: 132487708
Index: 2
Address: 0x73f77228
Refc: 1
=fun
Module: gen_event
Uniq: 113052338
Index: 0
Address: 0x818813f0
Refc: 1
=fun
Module: mnesia_controller
Uniq: 28287370
Index: 6
Address: 0x73e66e4c
Refc: 1
=fun
Module: qlc
Uniq: 67787455
Index: 78
Address: 0x73c45760
Refc: 1
=fun
Module: inet
Uniq: 46387045
Index: 6
Address: 0x73e9e174
Refc: 1
=fun
Module: mnesia_frag
Uniq: 41338695
Index: 1
Address: 0x73e47868
Refc: 1
=fun
Module: erl_eval
Uniq: 13739716
Index: 31
Address: 0x73dced70
Refc: 1
=fun
Module: inet_tcp_dist
Uniq: 118757716
Index: 1
Address: 0x73ead618
Refc: 2
=fun
Module: disk_log_server
Uniq: 16542648
Index: 0
Address: 0x73e4ae94
Refc: 1
=fun
Module: mnesia_bup
Uniq: 97458652
Index: 8
Address: 0x73f7600c
Refc: 1
=fun
Module: dets_utils
Uniq: 87297674
Index: 2
Address: 0x73de3f5c
Refc: 1
=fun
Module: dets
Uniq: 70654158
Index: 13
Address: 0x73dc42b4
Refc: 1
=fun
Module: dets_v9
Uniq: 41929904
Index: 15
Address: 0x73e16568
Refc: 1
=fun
Module: erl_eval
Uniq: 105910772
Index: 18
Address: 0x73dcf25c
Refc: 1
=fun
Module: sets
Uniq: 96453982
Index: 6
Address: 0x73c5baa8
Refc: 1
=fun
Module: erl_eval
Uniq: 18666380
Index: 16
Address: 0x73dcf324
Refc: 1
=fun
Module: mnesia_frag
Uniq: 123046744
Index: 0
Address: 0x73e478bc
Refc: 1
=fun
Module: rabbit_amqqueue
Uniq: 11875458
Index: 4
Address: 0x73c1b0d0
Refc: 1
=fun
Module: inet_config
Uniq: 64173300
Index: 2
Address: 0x81916c10
Refc: 1
=fun
Module: erl_eval
Uniq: 55710257
Index: 24
Address: 0x73dcef5c
Refc: 1
=fun
Module: release_handler
Uniq: 71531855
Index: 13
Address: 0x73d9c39c
Refc: 1
=fun
Module: qlc
Uniq: 86595574
Index: 16
Address: 0x73c478e8
Refc: 1
=fun
Module: proc_lib
Uniq: 76772
Index: 1
Address: 0x818894a4
Refc: 2
=fun
Module: global
Uniq: 58918003
Index: 5
Address: 0x8190dee4
Refc: 1
=fun
Module: mnesia_checkpoint
Uniq: 30432934
Index: 7
Address: 0x73be0eac
Refc: 1
=fun
Module: c
Uniq: 49302980
Index: 2
Address: 0x73da8cdc
Refc: 1
=fun
Module: dict
Uniq: 103247086
Index: 9
Address: 0x818e81a8
Refc: 1
=fun
Module: mnesia_schema
Uniq: 83196603
Index: 37
Address: 0x73f5b9bc
Refc: 1
=fun
Module: dets_v9
Uniq: 12504610
Index: 6
Address: 0x73e17068
Refc: 1
=fun
Module: inet
Uniq: 13402804
Index: 2
Address: 0x73e9e4ac
Refc: 1
=fun
Module: erl_eval
Uniq: 42291535
Index: 8
Address: 0x73dcf7c4
Refc: 1
=fun
Module: rabbit_amqqueue_process
Uniq: 90155148
Index: 8
Address: 0x73c57b70
Refc: 1
=fun
Module: dets_v9
Uniq: 86191074
Index: 16
Address: 0x73e16510
Refc: 1
=fun
Module: rabbit_exchange
Uniq: 121964496
Index: 7
Address: 0x73c202e8
Refc: 1
=fun
Module: dets_v9
Uniq: 108340702
Index: 4
Address: 0x73e171b8
Refc: 1
=fun
Module: qlc
Uniq: 122240477
Index: 76
Address: 0x73c457bc
Refc: 1
=fun
Module: qlc
Uniq: 61965410
Index: 21
Address: 0x73c47530
Refc: 1
=fun
Module: mnesia_controller
Uniq: 17654930
Index: 20
Address: 0x73e66dd4
Refc: 1
=fun
Module: erl_scan
Uniq: 120240397
Index: 4
Address: 0x818b46f8
Refc: 1
=fun
Module: release_handler
Uniq: 24204405
Index: 5
Address: 0x73d9cb34
Refc: 1
=fun
Module: erl_scan
Uniq: 79576805
Index: 18
Address: 0x818b451c
Refc: 1
=fun
Module: rabbit_amqqueue
Uniq: 100911459
Index: 9
Address: 0x73c1b01c
Refc: 1
=fun
Module: erlang
Uniq: 18099081
Index: 0
Address: 0xf58add60
Refc: 1
=fun
Module: mnesia
Uniq: 62464088
Index: 4
Address: 0x73f21a10
Refc: 1
=fun
Module: mnesia
Uniq: 64946623
Index: 2
Address: 0x73f21a88
Refc: 1
=fun
Module: supervisor
Uniq: 34187018
Index: 2
Address: 0x818e3b98
Refc: 1
=fun
Module: rabbit_exchange
Uniq: 52751179
Index: 26
Address: 0x73c20510
Refc: 1
=fun
Module: mnesia
Uniq: 29705107
Index: 1
Address: 0x73f21b04
Refc: 1
=fun
Module: mnesia_checkpoint
Uniq: 3972957
Index: 6
Address: 0x73be1190
Refc: 1
=fun
Module: rabbit
Uniq: 9411188
Index: 8
Address: 0x73ee82c4
Refc: 1
=fun
Module: mnesia_loader
Uniq: 75379246
Index: 6
Address: 0x73bee150
Refc: 1
=fun
Module: qlc
Uniq: 24510172
Index: 94
Address: 0x73c47340
Refc: 1
=fun
Module: ets
Uniq: 23061186
Index: 10
Address: 0x73f0cb38
Refc: 1
=fun
Module: qlc
Uniq: 123176125
Index: 63
Address: 0x73c45b8c
Refc: 1
=fun
Module: inet_parse
Uniq: 50966298
Index: 13
Address: 0x73eaa284
Refc: 1
=fun
Module: ets
Uniq: 68878098
Index: 14
Address: 0x73f0c5d4
Refc: 1
=fun
Module: mnesia_schema
Uniq: 88169112
Index: 39
Address: 0x73f5b7d4
Refc: 1
=fun
Module: mnesia_controller
Uniq: 6967415
Index: 11
Address: 0x73e66b34
Refc: 1
=fun
Module: mnesia_lib
Uniq: 125014267
Index: 9
Address: 0x73f3d5bc
Refc: 1
=fun
Module: erl_scan
Uniq: 97978210
Index: 23
Address: 0x818b44c8
Refc: 1
=fun
Module: mnesia_schema
Uniq: 129417372
Index: 2
Address: 0x73f5d108
Refc: 1
=fun
Module: dets_v9
Uniq: 27882245
Index: 7
Address: 0x73e16da4
Refc: 1
=fun
Module: mnesia_schema
Uniq: 91146277
Index: 21
Address: 0x73f5c7cc
Refc: 1
=fun
Module: cpu_sup
Uniq: 110247813
Index: 2
Address: 0x73df7d20
Refc: 1
=fun
Module: mnesia_controller
Uniq: 51573323
Index: 3
Address: 0x73e671d8
Refc: 1
=fun
Module: erl_eval
Uniq: 47796680
Index: 29
Address: 0x73dcedcc
Refc: 1
=fun
Module: inet_tcp_dist
Uniq: 108315805
Index: 6
Address: 0x73ead490
Refc: 1
=fun
Module: erl_scan
Uniq: 2104839
Index: 33
Address: 0x818b4394
Refc: 1
=fun
Module: rabbit_exchange
Uniq: 106630000
Index: 13
Address: 0x73c1f80c
Refc: 1
=fun
Module: rabbit_misc
Uniq: 121380136
Index: 12
Address: 0x73deb770
Refc: 1
=fun
Module: mnesia_controller
Uniq: 60303712
Index: 12
Address: 0x73e66a3c
Refc: 1
=fun
Module: erl_scan
Uniq: 49289894
Index: 24
Address: 0x818b4458
Refc: 1
=fun
Module: qlc
Uniq: 54172366
Index: 46
Address: 0x73c46038
Refc: 1
=fun
Module: ets
Uniq: 38404268
Index: 16
Address: 0x73f0c588
Refc: 1
=fun
Module: timer
Uniq: 68148054
Index: 0
Address: 0x73f8a87c
Refc: 2
=fun
Module: ets
Uniq: 95357108
Index: 1
Address: 0x73f0cfb8
Refc: 1
=fun
Module: mnesia_frag
Uniq: 62831237
Index: 12
Address: 0x73e46c64
Refc: 1
=fun
Module: rabbit_misc
Uniq: 29258461
Index: 10
Address: 0x73deb394
Refc: 1
=fun
Module: mnesia_controller
Uniq: 111400421
Index: 7
Address: 0x73e66e28
Refc: 1
=fun
Module: mnesia_controller
Uniq: 42012290
Index: 4
Address: 0x73e67154
Refc: 1
=fun
Module: global
Uniq: 93687139
Index: 7
Address: 0x8190ddd4
Refc: 1
=fun
Module: qlc
Uniq: 133262620
Index: 93
Address: 0x73c467cc
Refc: 1
=fun
Module: erl_scan
Uniq: 100514258
Index: 6
Address: 0x818b466c
Refc: 1
=fun
Module: mnesia_schema
Uniq: 121350974
Index: 18
Address: 0x73f5c848
Refc: 1
=fun
Module: dets_v9
Uniq: 49677115
Index: 17
Address: 0x73e1623c
Refc: 1
=fun
Module: dets_v9
Uniq: 17072581
Index: 11
Address: 0x73e16704
Refc: 1
=fun
Module: global
Uniq: 6604025
Index: 3
Address: 0x8190e03c
Refc: 1
=fun
Module: inet_tcp_dist
Uniq: 69770501
Index: 7
Address: 0x73ead418
Refc: 1
=fun
Module: init
Uniq: 30540612
Index: 4
Address: 0xf5888c50
Refc: 1
=fun
Module: global
Uniq: 4731785
Index: 8
Address: 0x8190dd94
Refc: 1
=fun
Module: inet
Uniq: 46756954
Index: 5
Address: 0x73e9e28c
Refc: 1
=fun
Module: erl_scan
Uniq: 74835078
Index: 9
Address: 0x818b4650
Refc: 1
=fun
Module: erl_prim_loader
Uniq: 54617620
Index: 14
Address: 0xf5899650
Refc: 1
=fun
Module: rabbit_exchange
Uniq: 103654866
Index: 27
Address: 0x73c204f4
Refc: 1
=fun
Module: mnesia
Uniq: 21098081
Index: 9
Address: 0x73f217d4
Refc: 1
=fun
Module: mnesia_tm
Uniq: 26806630
Index: 2
Address: 0x73e3adec
Refc: 1
=fun
Module: global
Uniq: 4028057
Index: 18
Address: 0x8190d08c
Refc: 1
=fun
Module: qlc
Uniq: 66899184
Index: 45
Address: 0x73c46270
Refc: 1
=fun
Module: dict
Uniq: 123576538
Index: 10
Address: 0x818e80e4
Refc: 1
=fun
Module: mnesia_sup
Uniq: 93277780
Index: 0
Address: 0x73de5698
Refc: 1
=fun
Module: inet_parse
Uniq: 92306672
Index: 12
Address: 0x73eaa2a0
Refc: 1
=fun
Module: global
Uniq: 7285385
Index: 13
Address: 0x8190d738
Refc: 1
=fun
Module: global
Uniq: 119167271
Index: 16
Address: 0x8190d1f8
Refc: 1
=fun
Module: mnesia_locker
Uniq: 72207228
Index: 2
Address: 0x73e2a508
Refc: 1
=fun
Module: lib
Uniq: 49069447
Index: 0
Address: 0x73c67dfc
Refc: 1
=fun
Module: qlc
Uniq: 23383938
Index: 59
Address: 0x73c45bf8
Refc: 1
=fun
Module: rabbit_exchange
Uniq: 94611275
Index: 9
Address: 0x73c1ffe0
Refc: 1
=fun
Module: qlc
Uniq: 39969817
Index: 77
Address: 0x73c457a0
Refc: 1
=fun
Module: mnesia_frag
Uniq: 51594236
Index: 3
Address: 0x73e477d8
Refc: 1
=fun
Module: ets
Uniq: 58018481
Index: 11
Address: 0x73f0ca60
Refc: 1
=fun
Module: dets_v9
Uniq: 123843999
Index: 8
Address: 0x73e16a94
Refc: 1
=fun
Module: mnesia_schema
Uniq: 117484199
Index: 29
Address: 0x73f5c234
Refc: 1
=fun
Module: qlc
Uniq: 73874047
Index: 10
Address: 0x73c48e54
Refc: 1
=fun
Module: dict
Uniq: 131899596
Index: 2
Address: 0x818e8310
Refc: 1
=fun
Module: rabbit_exchange
Uniq: 79171036
Index: 2
Address: 0x73c20ff8
Refc: 1
=fun
Module: mnesia_lib
Uniq: 104305292
Index: 15
Address: 0x73f3d448
Refc: 1
=fun
Module: cpu_sup
Uniq: 106198991
Index: 6
Address: 0x73df7c00
Refc: 1
=fun
Module: erl_scan
Uniq: 117856421
Index: 16
Address: 0x818b4714
Refc: 1
=fun
Module: erl_eval
Uniq: 105156089
Index: 4
Address: 0x73dcfa78
Refc: 1
=fun
Module: mnesia_subscr
Uniq: 111063352
Index: 0
Address: 0x73dffc08
Refc: 1
=fun
Module: rabbit_amqqueue
Uniq: 59937996
Index: 18
Address: 0x73c1a168
Refc: 1
=fun
Module: global
Uniq: 73982365
Index: 23
Address: 0x8190cf1c
Refc: 2
=fun
Module: hipe_unified_loader
Uniq: 114889458
Index: 0
Address: 0x73edcadc
Refc: 1
=fun
Module: dets_utils
Uniq: 54550583
Index: 0
Address: 0x73de4230
Refc: 1
=fun
Module: qlc
Uniq: 100740512
Index: 88
Address: 0x73c452d8
Refc: 1
=fun
Module: rabbit_persister
Uniq: 30042360
Index: 0
Address: 0x73c608ac
Refc: 1
=fun
Module: code_server
Uniq: 82255742
Index: 4
Address: 0x73efa594
Refc: 1
=fun
Module: release_handler
Uniq: 117009433
Index: 0
Address: 0x73d9ce90
Refc: 1
=fun
Module: rabbit_amqqueue
Uniq: 59268387
Index: 31
Address: 0x73c1a590
Refc: 1
=fun
Module: global_group
Uniq: 17247846
Index: 0
Address: 0x73ee6348
Refc: 1
=fun
Module: qlc
Uniq: 93505335
Index: 81
Address: 0x73c45660
Refc: 1
=fun
Module: ets
Uniq: 58012915
Index: 15
Address: 0x73f0c5a4
Refc: 1
=fun
Module: ets
Uniq: 1906265
Index: 13
Address: 0x73f0c630
Refc: 1
=fun
Module: qlc
Uniq: 122934310
Index: 72
Address: 0x73c458f8
Refc: 1
=fun
Module: erl_scan
Uniq: 113334594
Index: 2
Address: 0x818b46c0
Refc: 1
=fun
Module: mnesia_schema
Uniq: 69976578
Index: 30
Address: 0x73f5c204
Refc: 1
=fun
Module: mnesia_log
Uniq: 2275340
Index: 2
Address: 0x73e57440
Refc: 1
=fun
Module: erl_eval
Uniq: 45073094
Index: 21
Address: 0x73dcf074
Refc: 1
=fun
Module: mnesia_checkpoint
Uniq: 89533394
Index: 9
Address: 0x73be0d28
Refc: 1
=fun
Module: mnesia
Uniq: 27307328
Index: 3
Address: 0x73f21a58
Refc: 1
=fun
Module: rabbit_amqqueue
Uniq: 42079492
Index: 20
Address: 0x73c1a0bc
Refc: 1
=fun
Module: mnesia
Uniq: 24246299
Index: 5
Address: 0x73f219b0
Refc: 1
=fun
Module: code_server
Uniq: 46981671
Index: 0
Address: 0x73efa870
Refc: 1
=fun
Module: mnesia_schema
Uniq: 23479469
Index: 0
Address: 0x73f5d3c4
Refc: 1
=fun
Module: dets
Uniq: 43633763
Index: 4
Address: 0x73dc497c
Refc: 1
=fun
Module: net_kernel
Uniq: 6561140
Index: 6
Address: 0x73ec6cd0
Refc: 1
=fun
Module: orddict
Uniq: 13732439
Index: 0
Address: 0x73dd6f60
Refc: 1
=fun
Module: rabbit
Uniq: 15983238
Index: 11
Address: 0x73ee8354
Refc: 1
=fun
Module: inet_tcp_dist
Uniq: 71885569
Index: 0
Address: 0x73ead634
Refc: 2
=fun
Module: rabbit_amqqueue
Uniq: 64010781
Index: 26
Address: 0x73c1a684
Refc: 1
=fun
Module: mnesia_schema
Uniq: 119419533
Index: 1
Address: 0x73f5d210
Refc: 1
=fun
Module: mnesia_schema
Uniq: 114134161
Index: 10
Address: 0x73f5cac4
Refc: 1
=fun
Module: mnesia
Uniq: 23584775
Index: 7
Address: 0x73f218f0
Refc: 1
=fun
Module: cpu_sup
Uniq: 79687729
Index: 5
Address: 0x73df7c20
Refc: 1
=fun
Module: priority_queue
Uniq: 85691477
Index: 1
Address: 0x73f42700
Refc: 1
=fun
Module: dets_v9
Uniq: 56796208
Index: 3
Address: 0x73e17764
Refc: 1
=fun
Module: code_server
Uniq: 74665158
Index: 9
Address: 0x73ef9f8c
Refc: 1
=fun
Module: rabbit
Uniq: 74113049
Index: 6
Address: 0x73ee8460
Refc: 1
=fun
Module: qlc
Uniq: 68024859
Index: 38
Address: 0x73c46140
Refc: 1
=fun
Module: erl_scan
Uniq: 65917434
Index: 10
Address: 0x818b45fc
Refc: 1
=fun
Module: mnesia_bup
Uniq: 50394842
Index: 6
Address: 0x73f76378
Refc: 1
=fun
Module: code_server
Uniq: 71013094
Index: 3
Address: 0x73efa5e8
Refc: 1
=fun
Module: rabbit_misc
Uniq: 57868794
Index: 11
Address: 0x73deb7b0
Refc: 1
=fun
Module: qlc
Uniq: 54620060
Index: 24
Address: 0x73c46cd4
Refc: 1
=fun
Module: rabbit_amqqueue
Uniq: 52109690
Index: 11
Address: 0x73c1af84
Refc: 1
=fun
Module: dict
Uniq: 11560009
Index: 6
Address: 0x818e8250
Refc: 1
=fun
Module: rabbit_amqqueue
Uniq: 11363729
Index: 15
Address: 0x73c1aeb0
Refc: 1
=fun
Module: global
Uniq: 4203485
Index: 15
Address: 0x8190d244
Refc: 1
=fun
Module: dict
Uniq: 77789721
Index: 1
Address: 0x818e833c
Refc: 1
=fun
Module: sys
Uniq: 34313837
Index: 0
Address: 0x818d8b20
Refc: 1
=fun
Module: rabbit_amqqueue_process
Uniq: 44235982
Index: 3
Address: 0x73c58788
Refc: 1
=fun
Module: mnesia
Uniq: 6513056
Index: 22
Address: 0x73f20d14
Refc: 1
=fun
Module: init
Uniq: 42050205
Index: 2
Address: 0xf5888d84
Refc: 1
=fun
Module: rabbit_exchange
Uniq: 82467668
Index: 12
Address: 0x73c1fb9c
Refc: 1
=fun
Module: erl_scan
Uniq: 54511862
Index: 25
Address: 0x818b4474
Refc: 1
=fun
Module: rabbit_persister
Uniq: 34029442
Index: 10
Address: 0x73c601f4
Refc: 1
=fun
Module: qlc
Uniq: 104114939
Index: 50
Address: 0x73c45f24
Refc: 1
=fun
Module: mnesia_schema
Uniq: 22740183
Index: 24
Address: 0x73f5c638
Refc: 1
=fun
Module: qlc
Uniq: 21687738
Index: 83
Address: 0x73c4552c
Refc: 1
=fun
Module: inet_tcp_dist
Uniq: 25491099
Index: 8
Address: 0x73ead3b4
Refc: 1
=fun
Module: code_server
Uniq: 98478302
Index: 1
Address: 0x73efa814
Refc: 1
=fun
Module: global
Uniq: 129744524
Index: 20
Address: 0x8190d01c
Refc: 1
=proc_stack:<0.0.0>
0xf5571808:SReturn addr 0x1CC8E0 (<terminate process normally>)
=proc_heap:<0.0.0>
=proc_stack:<0.2.0>
0xf55501fc:SReturn addr 0x1CC8E0 (<terminate process normally>)
y0:N
y1:HF55B04A0
y2:P<0.1.0>
y3:HF554E570
y4:A8:infinity
=proc_heap:<0.2.0>
F55B04A0:lHF55B04BC|HF55B04C4
F55B04BC:lI47|HF55B04CC
F55B04CC:lI117|HF55B04E4
F55B04E4:lI115|HF55B0504
F55B0504:lI114|HF55B0524
F55B0524:lI47|HF55B0544
F55B0544:lI108|HF55B0564
F55B0564:lI105|HF55B0584
F55B0584:lI98|HF55B05A4
F55B05A4:lI47|HF55B05C4
F55B05C4:lI114|HF55B05E4
F55B05E4:lI97|HF55B0604
F55B0604:lI98|HF55B0624
F55B0624:lI98|HF55B0644
F55B0644:lI105|HF55B0664
F55B0664:lI116|HF55B0684
F55B0684:lI109|HF55B06A4
F55B06A4:lI113|HF55B06C4
F55B06C4:lI47|HF55B06E4
F55B06E4:lI108|HF55B0704
F55B0704:lI105|HF55B0724
F55B0724:lI98|HF55B0744
F55B0744:lI47|HF55B0764
F55B0764:lI114|HF55B0784
F55B0784:lI97|HF55B07A4
F55B07A4:lI98|HF55B07C4
F55B07C4:lI98|HF55B07E4
F55B07E4:lI105|HF55B0804
F55B0804:lI116|HF55B0824
F55B0824:lI109|HF55B0844
F55B0844:lI113|HF55B0864
F55B0864:lI95|HF55B0884
F55B0884:lI115|HF55B08A4
F55B08A4:lI101|HF55B08C4
F55B08C4:lI114|HF55B08E4
F55B08E4:lI118|HF55B0904
F55B0904:lI101|HF55B0924
F55B0924:lI114|HF55B0944
F55B0944:lI45|HF55B0964
F55B0964:lI49|HF55B0984
F55B0984:lI46|HF55B099C
F55B099C:lI55|HF55B09A4
F55B09A4:lI46|HF55B09AC
F55B09AC:lI49|HF55B09B4
F55B09B4:lI47|HF55B09BC
F55B09BC:lI115|HF55B09C4
F55B09C4:lI98|HF55B09CC
F55B09CC:lI105|HF55B09D4
F55B09D4:lI110|HF55B09DC
F55B09DC:lI47|HF55B09E4
F55B09E4:lI46|HF55B09EC
F55B09EC:lI46|HF55B09F4
F55B09F4:lI47|HF55B09FC
F55B09FC:lI101|HF55B0A04
F55B0A04:lI98|HF55B0A0C
F55B0A0C:lI105|HF55B0A14
F55B0A14:lI110|N
F55B04C4:lHF55B04D4|HF55B04DC
F55B04D4:lI47|HF55B04EC
F55B04EC:lI117|HF55B050C
F55B050C:lI115|HF55B052C
F55B052C:lI114|HF55B054C
F55B054C:lI47|HF55B056C
F55B056C:lI108|HF55B058C
F55B058C:lI105|HF55B05AC
F55B05AC:lI98|HF55B05CC
F55B05CC:lI47|HF55B05EC
F55B05EC:lI101|HF55B060C
F55B060C:lI114|HF55B062C
F55B062C:lI108|HF55B064C
F55B064C:lI97|HF55B066C
F55B066C:lI110|HF55B068C
F55B068C:lI103|HF55B06AC
F55B06AC:lI47|HF55B06CC
F55B06CC:lI108|HF55B06EC
F55B06EC:lI105|HF55B070C
F55B070C:lI98|HF55B072C
F55B072C:lI47|HF55B074C
F55B074C:lI107|HF55B076C
F55B076C:lI101|HF55B078C
F55B078C:lI114|HF55B07AC
F55B07AC:lI110|HF55B07CC
F55B07CC:lI101|HF55B07EC
F55B07EC:lI108|HF55B080C
F55B080C:lI45|HF55B082C
F55B082C:lI50|HF55B084C
F55B084C:lI46|HF55B086C
F55B086C:lI49|HF55B088C
F55B088C:lI50|HF55B08AC
F55B08AC:lI46|HF55B08CC
F55B08CC:lI53|HF55B08EC
F55B08EC:lI47|HF55B090C
F55B090C:lI101|HF55B092C
F55B092C:lI98|HF55B094C
F55B094C:lI105|HF55B096C
F55B096C:lI110|N
F55B04DC:lHF55B04F4|HF55B04FC
F55B04F4:lI47|HF55B0514
F55B0514:lI117|HF55B0534
F55B0534:lI115|HF55B0554
F55B0554:lI114|HF55B0574
F55B0574:lI47|HF55B0594
F55B0594:lI108|HF55B05B4
F55B05B4:lI105|HF55B05D4
F55B05D4:lI98|HF55B05F4
F55B05F4:lI47|HF55B0614
F55B0614:lI101|HF55B0634
F55B0634:lI114|HF55B0654
F55B0654:lI108|HF55B0674
F55B0674:lI97|HF55B0694
F55B0694:lI110|HF55B06B4
F55B06B4:lI103|HF55B06D4
F55B06D4:lI47|HF55B06F4
F55B06F4:lI108|HF55B0714
F55B0714:lI105|HF55B0734
F55B0734:lI98|HF55B0754
F55B0754:lI47|HF55B0774
F55B0774:lI115|HF55B0794
F55B0794:lI116|HF55B07B4
F55B07B4:lI100|HF55B07D4
F55B07D4:lI108|HF55B07F4
F55B07F4:lI105|HF55B0814
F55B0814:lI98|HF55B0834
F55B0834:lI45|HF55B0854
F55B0854:lI49|HF55B0874
F55B0874:lI46|HF55B0894
F55B0894:lI49|HF55B08B4
F55B08B4:lI53|HF55B08D4
F55B08D4:lI46|HF55B08F4
F55B08F4:lI53|HF55B0914
F55B0914:lI47|HF55B0934
F55B0934:lI101|HF55B0954
F55B0954:lI98|HF55B0974
F55B0974:lI105|HF55B098C
F55B098C:lI110|N
F55B04FC:lHF55B051C|N
F55B051C:lI47|HF55B053C
F55B053C:lI117|HF55B055C
F55B055C:lI115|HF55B057C
F55B057C:lI114|HF55B059C
F55B059C:lI47|HF55B05BC
F55B05BC:lI108|HF55B05DC
F55B05DC:lI105|HF55B05FC
F55B05FC:lI98|HF55B061C
F55B061C:lI47|HF55B063C
F55B063C:lI101|HF55B065C
F55B065C:lI114|HF55B067C
F55B067C:lI108|HF55B069C
F55B069C:lI97|HF55B06BC
F55B06BC:lI110|HF55B06DC
F55B06DC:lI103|HF55B06FC
F55B06FC:lI47|HF55B071C
F55B071C:lI108|HF55B073C
F55B073C:lI105|HF55B075C
F55B075C:lI98|HF55B077C
F55B077C:lI47|HF55B079C
F55B079C:lI115|HF55B07BC
F55B07BC:lI97|HF55B07DC
F55B07DC:lI115|HF55B07FC
F55B07FC:lI108|HF55B081C
F55B081C:lI45|HF55B083C
F55B083C:lI50|HF55B085C
F55B085C:lI46|HF55B087C
F55B087C:lI49|HF55B089C
F55B089C:lI46|HF55B08BC
F55B08BC:lI53|HF55B08DC
F55B08DC:lI46|HF55B08FC
F55B08FC:lI52|HF55B091C
F55B091C:lI47|HF55B093C
F55B093C:lI101|HF55B095C
F55B095C:lI98|HF55B097C
F55B097C:lI105|HF55B0994
F55B0994:lI110|N
F554E570:t9:A5:state,A5:efile,N,A4:none,p<0.1>,A8:infinity,A9:undefined,A4:true,HF55B04A8
F55B04A8:t4:AA:prim_state,A5:false,A9:undefined,A9:undefined
=proc_dictionary:<0.5.0>
HF5550270
HF555027C
=proc_stack:<0.5.0>
0xf556cf40:SReturn addr 0x73F92138 (io:o_request/2 + 36)
y0:HF556C8C8
y1:P<0.57.0>
0xf556cf4c:SReturn addr 0x73F43E48 (error_logger_file_h:handle_event/2 + 192)
y0:N
y1:N
y2:N
y3:HF556C8B8
y4:P<0.57.0>
0xf556cf64:SReturn addr 0x8187EC30 (gen_event:server_update/4 + 148)
y0:N
y1:HF55504F4
y2:P<0.57.0>
0xf556cf74:SReturn addr 0x8187E9EC (gen_event:server_notify/4 + 76)
y0:AC:error_logger
y1:HF556B548
y2:HF556ABA0
y3:HF556AB84
y4:A1A:rabbit_error_logger_file_h
y5:SCatch 0x8187EC30 (gen_event:server_update/4 + 148)
0xf556cf90:SReturn addr 0x8187EA64 (gen_event:server_notify/4 + 196)
y0:AC:error_logger
y1:AC:handle_event
y2:HF556B548
y3:HF556ABF4
0xf556cfa4:SReturn addr 0x8187CDCC (gen_event:handle_msg/5 + 152)
y0:HF556B5B8
0xf556cfac:SReturn addr 0x81887014 (proc_lib:init_p_do_apply/3 + 28)
y0:N
y1:AC:error_logger
y2:P<0.1.0>
0xf556cfbc:SReturn addr 0x1CC8E0 (<terminate process normally>)
y0:SCatch 0x81887024 (proc_lib:init_p_do_apply/3 + 44)
=proc_heap:<0.5.0>
F556C8C8:E1F:8372000364000B726162626974406D61696C03000002110000000000000000
F556C8B8:t3:A6:format,HF556C7F0,N
F556C7F0:lH73BFE800|HF556C7F8
73BFE800:lI10|N
F556C7F8:lI61|HF556C800
F556C800:lHF556BC98|HF556C808
F556BC98:lI69|HF556BC90
F556BC90:lI82|HF556BC88
F556BC88:lI82|HF556BC80
F556BC80:lI79|HF556BC78
F556BC78:lI82|HF556BC70
F556BC70:lI32|HF556BC68
F556BC68:lI82|HF556BC60
F556BC60:lI69|HF556BC58
F556BC58:lI80|HF556BC50
F556BC50:lI79|HF556BC48
F556BC48:lI82|HF556BC40
F556BC40:lI84|N
F556C808:lI61|HF556C810
F556C810:lI61|HF556C818
F556C818:lI61|HF556C820
F556C820:lI61|HF556C828
F556C828:lI32|HF556C830
F556C830:lHF556BCA8|HF556C838
F556BCA8:lI49|HF556BCA0
F556BCA0:lI53|N
F556C838:lI45|HF556C840
F556C840:lHF556BCC0|HF556C848
F556BCC0:lI74|HF556BCB8
F556BCB8:lI117|HF556BCB0
F556BCB0:lI110|N
F556C848:lI45|HF556C850
F556C850:lHF556BCE0|HF556C858
F556BCE0:lI50|HF556BCD8
F556BCD8:lI48|HF556BCD0
F556BCD0:lI49|HF556BCC8
F556BCC8:lI48|N
F556C858:lI58|HF556C860
F556C860:lI58|HF556C868
F556C868:lHF556BCF0|HF556C870
F556BCF0:lI50|HF556BCE8
F556BCE8:lI51|N
F556C870:lI58|HF556C878
F556C878:lHF556BD00|HF556C880
F556BD00:lI51|HF556BCF8
F556BCF8:lI48|N
F556C880:lI58|HF556C888
F556C888:lHF556BD10|HF556C890
F556BD10:lI49|HF556BD08
F556BD08:lI55|N
F556C890:lI32|HF556C898
F556C898:lI61|HF556C8A0
F556C8A0:lI61|HF556C8A8
F556C8A8:lI61|HF556C8B0
F556C8B0:lH73BFE800|HF556C7E8
F556C7E8:lHF556C7D8|HF556C7E0
F556C7D8:lI69|HF556C7D0
F556C7D0:lI114|HF556C7C8
F556C7C8:lI114|HF556C7C0
F556C7C0:lI111|HF556C7B8
F556C7B8:lI114|HF556C7B0
F556C7B0:lI32|HF556C7A8
F556C7A8:lI105|HF556C7A0
F556C7A0:lI110|HF556C798
F556C798:lI32|HF556C790
F556C790:lI112|HF556C788
F556C788:lI114|HF556C780
F556C780:lI111|HF556C778
F556C778:lI99|HF556C770
F556C770:lI101|HF556C768
F556C768:lI115|HF556C760
F556C760:lI115|HF556C758
F556C758:lI32|HF556C750
F556C750:lI60|HF556C748
F556C748:lI48|HF556C740
F556C740:lI46|HF556C738
F556C738:lI49|HF556C730
F556C730:lI46|HF556C728
F556C728:lI48|HF556C720
F556C720:lI62|HF556C718
F556C718:lI32|HF556C710
F556C710:lI111|HF556C708
F556C708:lI110|HF556C700
F556C700:lI32|HF556C6F8
F556C6F8:lI110|HF556C6F0
F556C6F0:lI111|HF556C6E8
F556C6E8:lI100|HF556C6E0
F556C6E0:lI101|HF556C6D8
F556C6D8:lI32|HF556C6D0
F556C6D0:lI39|HF556C6C8
F556C6C8:lI114|HF556C6C0
F556C6C0:lI97|HF556C6B8
F556C6B8:lI98|HF556C6B0
F556C6B0:lI98|HF556C6A8
F556C6A8:lI105|HF556C6A0
F556C6A0:lI116|HF556C698
F556C698:lI64|HF556C690
F556C690:lI109|HF556C688
F556C688:lI97|HF556C680
F556C680:lI105|HF556C678
F556C678:lI108|HF556C670
F556C670:lI39|HF556C668
F556C668:lI32|HF556C660
F556C660:lI119|HF556C658
F556C658:lI105|HF556C650
F556C650:lI116|HF556C648
F556C648:lI104|HF556C640
F556C640:lI32|HF556C638
F556C638:lI101|HF556C630
F556C630:lI120|HF556C628
F556C628:lI105|HF556C620
F556C620:lI116|HF556C618
F556C618:lI32|HF556C610
F556C610:lI118|HF556C608
F556C608:lI97|HF556C600
F556C600:lI108|HF556C5F8
F556C5F8:lI117|HF556C5F0
F556C5F0:lI101|HF556C5E8
F556C5E8:lI58|HF556C5E0
F556C5E0:lI32|HF556C5D8
F556C5D8:lI123|HF556C5D0
F556C5D0:lI123|HF556C5C8
F556C5C8:lI110|HF556C5C0
F556C5C0:lI111|HF556C5B8
F556C5B8:lI99|HF556C5B0
F556C5B0:lI97|HF556C5A8
F556C5A8:lI116|HF556C5A0
F556C5A0:lI99|HF556C598
F556C598:lI104|HF556C590
F556C590:lI44|HF556C588
F556C588:lI123|HF556C580
F556C580:lI101|HF556C578
F556C578:lI114|HF556C570
F556C570:lI114|HF556C568
F556C568:lI111|HF556C560
F556C560:lI114|HF556C558
F556C558:lI44|HF556C550
F556C550:lI123|HF556C548
F556C548:lI99|HF556C540
F556C540:lI97|HF556C538
F556C538:lI110|HF556C530
F556C530:lI110|HF556C528
F556C528:lI111|HF556C520
F556C520:lI116|HF556C518
F556C518:lI95|HF556C510
F556C510:lI115|HF556C508
F556C508:lI116|HF556C500
F556C500:lI97|HF556C4F8
F556C4F8:lI114|HF556C4F0
F556C4F0:lI116|HF556C4E8
F556C4E8:lI95|HF556C4E0
F556C4E0:lI97|HF556C4D8
F556C4D8:lI112|HF556C4D0
F556C4D0:lI112|HF556C4C8
F556C4C8:lI108|HF556C4C0
F556C4C0:lI105|HF556C4B8
F556C4B8:lI99|HF556C4B0
F556C4B0:lI97|HF556C4A8
F556C4A8:lI116|HF556C4A0
F556C4A0:lI105|HF556C498
F556C498:lI111|HF556C490
F556C490:lI110|HF556C488
F556C488:lI44|HF556C480
F556C480:lI114|HF556C478
F556C478:lI97|HF556C470
F556C470:lI98|HF556C468
F556C468:lI98|HF556C460
F556C460:lI105|HF556C458
F556C458:lI116|HF556C450
F556C450:lI44|HF556C448
F556C448:lI123|HF556C440
F556C440:lI98|HF556C438
F556C438:lI97|HF556C430
F556C430:lI100|HF556C428
F556C428:lI95|HF556C420
F556C420:lI114|HF556C418
F556C418:lI101|HF556C410
F556C410:lI116|HF556C408
F556C408:lI117|HF556C400
F556C400:lI114|HF556C3F8
F556C3F8:lI110|HF556C3F0
F556C3F0:lI44|HF556C3E8
F556C3E8:lI123|HF556C3E0
F556C3E0:lI123|HF556C3D8
F556C3D8:lI114|HF556C3D0
F556C3D0:lI97|HF556C3C8
F556C3C8:lI98|HF556C3C0
F556C3C0:lI98|HF556C3B8
F556C3B8:lI105|HF556C3B0
F556C3B0:lI116|HF556C3A8
F556C3A8:lI44|HF556C3A0
F556C3A0:lI115|HF556C398
F556C398:lI116|HF556C390
F556C390:lI97|HF556C388
F556C388:lI114|HF556C380
F556C380:lI116|HF556C378
F556C378:lI44|HF556C370
F556C370:lI91|HF556C368
F556C368:lI110|HF556C360
F556C360:lI111|HF556C358
F556C358:lI114|HF556C350
F556C350:lI109|HF556C348
F556C348:lI97|HF556C340
F556C340:lI108|HF556C338
F556C338:lI44|HF556C330
F556C330:lI91|HF556C328
F556C328:lI93|HF556C320
F556C320:lI93|HF556C318
F556C318:lI125|HF556C310
F556C310:lI44|HF556C308
F556C308:lI123|HF556C300
F556C300:lI39|HF556C2F8
F556C2F8:lI69|HF556C2F0
F556C2F0:lI88|HF556C2E8
F556C2E8:lI73|HF556C2E0
F556C2E0:lI84|HF556C2D8
F556C2D8:lI39|HF556C2D0
F556C2D0:lI44|HF556C2C8
F556C2C8:lI123|HF556C2C0
F556C2C0:lI123|HF556C2B8
F556C2B8:lI98|HF556C2B0
F556C2B0:lI97|HF556C2A8
F556C2A8:lI100|HF556C2A0
F556C2A0:lI109|HF556C298
F556C298:lI97|HF556C290
F556C290:lI116|HF556C288
F556C288:lI99|HF556C280
F556C280:lI104|HF556C278
F556C278:lI44|HF556C270
F556C270:lI123|HF556C268
F556C268:lI101|HF556C260
F556C260:lI114|HF556C258
F556C258:lI114|HF556C250
F556C250:lI111|HF556C248
F556C248:lI114|HF556C240
F556C240:lI44|HF556C238
F556C238:lI123|HF556C230
F556C230:lI123|HF556C228
F556C228:lI123|HF556C220
F556C220:lI98|HF556C218
F556C218:lI97|HF556C210
F556C210:lI100|HF556C208
F556C208:lI109|HF556C200
F556C200:lI97|HF556C1F8
F556C1F8:lI116|HF556C1F0
F556C1F0:lI99|HF556C1E8
F556C1E8:lI104|HF556C1E0
F556C1E0:lI44|HF556C1D8
F556C1D8:lI101|HF556C1D0
F556C1D0:lI111|HF556C1C8
F556C1C8:lI102|HF556C1C0
F556C1C0:lI125|HF556C1B8
F556C1B8:lI44|HF556C1B0
F556C1B0:lI91|HF556C1A8
F556C1A8:lI123|HF556C1A0
F556C1A0:lI114|HF556C198
F556C198:lI97|HF556C190
F556C190:lI98|HF556C188
F556C188:lI98|HF556C180
F556C180:lI105|HF556C178
F556C178:lI116|HF556C170
F556C170:lI95|HF556C168
F556C168:lI112|HF556C160
F556C160:lI101|HF556C158
F556C158:lI114|HF556C150
F556C150:lI115|HF556C148
F556C148:lI105|HF556C140
F556C140:lI115|HF556C138
F556C138:lI116|HF556C130
F556C130:lI101|HF556C128
F556C128:lI114|HF556C120
F556C120:lI44|HF556C118
F556C118:lI105|HF556C110
F556C110:lI110|HF556C108
F556C108:lI116|HF556C100
F556C100:lI101|HF556C0F8
F556C0F8:lI114|HF556C0F0
F556C0F0:lI110|HF556C0E8
F556C0E8:lI97|HF556C0E0
F556C0E0:lI108|HF556C0D8
F556C0D8:lI95|HF556C0D0
F556C0D0:lI108|HF556C0C8
F556C0C8:lI111|HF556C0C0
F556C0C0:lI97|HF556C0B8
F556C0B8:lI100|HF556C0B0
F556C0B0:lI95|HF556C0A8
F556C0A8:lI115|HF556C0A0
F556C0A0:lI110|HF556C098
F556C098:lI97|HF556C090
F556C090:lI112|HF556C088
F556C088:lI115|HF556C080
F556C080:lI104|HF556C078
F556C078:lI111|HF556C070
F556C070:lI116|HF556C068
F556C068:lI44|HF556C060
F556C060:lI50|HF556C058
F556C058:lI125|HF556C050
F556C050:lI44|HF556C048
F556C048:lI123|HF556C040
F556C040:lI114|HF556C038
F556C038:lI97|HF556C030
F556C030:lI98|HF556C028
F556C028:lI98|HF556C020
F556C020:lI105|HF556C018
F556C018:lI116|HF556C010
F556C010:lI95|HF556C008
F556C008:lI112|HF556C000
F556C000:lI101|HF556BFF8
F556BFF8:lI114|HF556BFF0
F556BFF0:lI115|HF556BFE8
F556BFE8:lI105|HF556BFE0
F556BFE0:lI115|HF556BFD8
F556BFD8:lI116|HF556BFD0
F556BFD0:lI101|HF556BFC8
F556BFC8:lI114|HF556BFC0
F556BFC0:lI44|HF556BFB8
F556BFB8:lI105|HF556BFB0
F556BFB0:lI110|HF556BFA8
F556BFA8:lI105|HF556BFA0
F556BFA0:lI116|HF556BF98
F556BF98:lI44|HF556BF90
F556BF90:lI49|HF556BF88
F556BF88:lI125|HF556BF80
F556BF80:lI44|HF556BF78
F556BF78:lI123|HF556BF70
F556BF70:lI103|HF556BF68
F556BF68:lI101|HF556BF60
F556BF60:lI110|HF556BF58
F556BF58:lI95|HF556BF50
F556BF50:lI115|HF556BF48
F556BF48:lI101|HF556BF40
F556BF40:lI114|HF556BF38
F556BF38:lI118|HF556BF30
F556BF30:lI101|HF556BF28
F556BF28:lI114|HF556BF20
F556BF20:lI46|HF556BF18
F556BF18:lI46|HF556BF10
F556BF10:lI46|HF556BF08
F556BF08:lI32|HF556BF00
F556BF00:lI10|N
F556C7E0:lH73BFE800|N
F55504F4:lI47|HF55505A0
F55505A0:lI118|HF5550670
F5550670:lI97|HF555077C
F555077C:lI114|HF5550894
F5550894:lI47|HF55509AC
F55509AC:lI108|HF5550B34
F5550B34:lI111|HF5550C84
F5550C84:lI103|HF5550DCC
F5550DCC:lI47|HF5550F44
F5550F44:lI114|HF55510AC
F55510AC:lI97|HF5551210
F5551210:lI98|HF5551350
F5551350:lI98|HF555148C
F555148C:lI105|HF55515D0
F55515D0:lI116|HF5551708
F5551708:lI109|HF5551818
F5551818:lI113|HF55518D8
F55518D8:lI47|HF5551968
F5551968:lI114|HF55519E0
F55519E0:lI97|HF5551A40
F5551A40:lI98|HF5551AB8
F5551AB8:lI98|HF5551B20
F5551B20:lI105|HF5551BB0
F5551BB0:lI116|HF5551C50
F5551C50:lI46|HF5551CC8
F5551CC8:lI108|HF5551D38
F5551D38:lI111|HF5551DC8
F5551DC8:lI103|N
F556B548:t3:A5:error,P<0.31.0>,HF556B538
F556B538:t3:A8:emulator,HF556B530,HF556B510
F556B510:lHF556B508|N
F556B508:lI69|HF556B500
F556B500:lI114|HF556B4F8
F556B4F8:lI114|HF556B4F0
F556B4F0:lI111|HF556B4E8
F556B4E8:lI114|HF556B4E0
F556B4E0:lI32|HF556B4D8
F556B4D8:lI105|HF556B4D0
F556B4D0:lI110|HF556B4C8
F556B4C8:lI32|HF556B4C0
F556B4C0:lI112|HF556B4B8
F556B4B8:lI114|HF556B4B0
F556B4B0:lI111|HF556B4A8
F556B4A8:lI99|HF556B4A0
F556B4A0:lI101|HF556B498
F556B498:lI115|HF556B490
F556B490:lI115|HF556B488
F556B488:lI32|HF556B480
F556B480:lI60|HF556B478
F556B478:lI48|HF556B470
F556B470:lI46|HF556B468
F556B468:lI49|HF556B460
F556B460:lI46|HF556B458
F556B458:lI48|HF556B450
F556B450:lI62|HF556B448
F556B448:lI32|HF556B440
F556B440:lI111|HF556B438
F556B438:lI110|HF556B430
F556B430:lI32|HF556B428
F556B428:lI110|HF556B420
F556B420:lI111|HF556B418
F556B418:lI100|HF556B410
F556B410:lI101|HF556B408
F556B408:lI32|HF556B400
F556B400:lI39|HF556B3F8
F556B3F8:lI114|HF556B3F0
F556B3F0:lI97|HF556B3E8
F556B3E8:lI98|HF556B3E0
F556B3E0:lI98|HF556B3D8
F556B3D8:lI105|HF556B3D0
F556B3D0:lI116|HF556B3C8
F556B3C8:lI64|HF556B3C0
F556B3C0:lI109|HF556B3B8
F556B3B8:lI97|HF556B3B0
F556B3B0:lI105|HF556B3A8
F556B3A8:lI108|HF556B3A0
F556B3A0:lI39|HF556B398
F556B398:lI32|HF556B390
F556B390:lI119|HF556B388
F556B388:lI105|HF556B380
F556B380:lI116|HF556B378
F556B378:lI104|HF556B370
F556B370:lI32|HF556B368
F556B368:lI101|HF556B360
F556B360:lI120|HF556B358
F556B358:lI105|HF556B350
F556B350:lI116|HF556B348
F556B348:lI32|HF556B340
F556B340:lI118|HF556B338
F556B338:lI97|HF556B330
F556B330:lI108|HF556B328
F556B328:lI117|HF556B320
F556B320:lI101|HF556B318
F556B318:lI58|HF556B310
F556B310:lI32|HF556B308
F556B308:lI123|HF556B300
F556B300:lI123|HF556B2F8
F556B2F8:lI110|HF556B2F0
F556B2F0:lI111|HF556B2E8
F556B2E8:lI99|HF556B2E0
F556B2E0:lI97|HF556B2D8
F556B2D8:lI116|HF556B2D0
F556B2D0:lI99|HF556B2C8
F556B2C8:lI104|HF556B2C0
F556B2C0:lI44|HF556B2B8
F556B2B8:lI123|HF556B2B0
F556B2B0:lI101|HF556B2A8
F556B2A8:lI114|HF556B2A0
F556B2A0:lI114|HF556B298
F556B298:lI111|HF556B290
F556B290:lI114|HF556B288
F556B288:lI44|HF556B280
F556B280:lI123|HF556B278
F556B278:lI99|HF556B270
F556B270:lI97|HF556B268
F556B268:lI110|HF556B260
F556B260:lI110|HF556B258
F556B258:lI111|HF556B250
F556B250:lI116|HF556B248
F556B248:lI95|HF556B240
F556B240:lI115|HF556B238
F556B238:lI116|HF556B230
F556B230:lI97|HF556B228
F556B228:lI114|HF556B220
F556B220:lI116|HF556B218
F556B218:lI95|HF556B210
F556B210:lI97|HF556B208
F556B208:lI112|HF556B200
F556B200:lI112|HF556B1F8
F556B1F8:lI108|HF556B1F0
F556B1F0:lI105|HF556B1E8
F556B1E8:lI99|HF556B1E0
F556B1E0:lI97|HF556B1D8
F556B1D8:lI116|HF556B1D0
F556B1D0:lI105|HF556B1C8
F556B1C8:lI111|HF556B1C0
F556B1C0:lI110|HF556B1B8
F556B1B8:lI44|HF556B1B0
F556B1B0:lI114|HF556B1A8
F556B1A8:lI97|HF556B1A0
F556B1A0:lI98|HF556B198
F556B198:lI98|HF556B190
F556B190:lI105|HF556B188
F556B188:lI116|HF556B180
F556B180:lI44|HF556B178
F556B178:lI123|HF556B170
F556B170:lI98|HF556B168
F556B168:lI97|HF556B160
F556B160:lI100|HF556B158
F556B158:lI95|HF556B150
F556B150:lI114|HF556B148
F556B148:lI101|HF556B140
F556B140:lI116|HF556B138
F556B138:lI117|HF556B130
F556B130:lI114|HF556B128
F556B128:lI110|HF556B120
F556B120:lI44|HF556B118
F556B118:lI123|HF556B110
F556B110:lI123|HF556B108
F556B108:lI114|HF556B100
F556B100:lI97|HF556B0F8
F556B0F8:lI98|HF556B0F0
F556B0F0:lI98|HF556B0E8
F556B0E8:lI105|HF556B0E0
F556B0E0:lI116|HF556B0D8
F556B0D8:lI44|HF556B0D0
F556B0D0:lI115|HF556B0C8
F556B0C8:lI116|HF556B0C0
F556B0C0:lI97|HF556B0B8
F556B0B8:lI114|HF556B0B0
F556B0B0:lI116|HF556B0A8
F556B0A8:lI44|HF556B0A0
F556B0A0:lI91|HF556B098
F556B098:lI110|HF556B090
F556B090:lI111|HF556B088
F556B088:lI114|HF556B080
F556B080:lI109|HF556B078
F556B078:lI97|HF556B070
F556B070:lI108|HF556B068
F556B068:lI44|HF556B060
F556B060:lI91|HF556B058
F556B058:lI93|HF556B050
F556B050:lI93|HF556B048
F556B048:lI125|HF556B040
F556B040:lI44|HF556B038
F556B038:lI123|HF556B030
F556B030:lI39|HF556B028
F556B028:lI69|HF556B020
F556B020:lI88|HF556B018
F556B018:lI73|HF556B010
F556B010:lI84|HF556B008
F556B008:lI39|HF556B000
F556B000:lI44|HF556AFF8
F556AFF8:lI123|HF556AFF0
F556AFF0:lI123|HF556AFE8
F556AFE8:lI98|HF556AFE0
F556AFE0:lI97|HF556AFD8
F556AFD8:lI100|HF556AFD0
F556AFD0:lI109|HF556AFC8
F556AFC8:lI97|HF556AFC0
F556AFC0:lI116|HF556AFB8
F556AFB8:lI99|HF556AFB0
F556AFB0:lI104|HF556AFA8
F556AFA8:lI44|HF556AFA0
F556AFA0:lI123|HF556AF98
F556AF98:lI101|HF556AF90
F556AF90:lI114|HF556AF88
F556AF88:lI114|HF556AF80
F556AF80:lI111|HF556AF78
F556AF78:lI114|HF556AF70
F556AF70:lI44|HF556AF68
F556AF68:lI123|HF556AF60
F556AF60:lI123|HF556AF58
F556AF58:lI123|HF556AF50
F556AF50:lI98|HF556AF48
F556AF48:lI97|HF556AF40
F556AF40:lI100|HF556AF38
F556AF38:lI109|HF556AF30
F556AF30:lI97|HF556AF28
F556AF28:lI116|HF556AF20
F556AF20:lI99|HF556AF18
F556AF18:lI104|HF556AF10
F556AF10:lI44|HF556AF08
F556AF08:lI101|HF556AF00
F556AF00:lI111|HF556AEF8
F556AEF8:lI102|HF556AEF0
F556AEF0:lI125|HF556AEE8
F556AEE8:lI44|HF556AEE0
F556AEE0:lI91|HF556AED8
F556AED8:lI123|HF556AED0
F556AED0:lI114|HF556AEC8
F556AEC8:lI97|HF556AEC0
F556AEC0:lI98|HF556AEB8
F556AEB8:lI98|HF556AEB0
F556AEB0:lI105|HF556AEA8
F556AEA8:lI116|HF556AEA0
F556AEA0:lI95|HF556AE98
F556AE98:lI112|HF556AE90
F556AE90:lI101|HF556AE88
F556AE88:lI114|HF556AE80
F556AE80:lI115|HF556AE78
F556AE78:lI105|HF556AE70
F556AE70:lI115|HF556AE68
F556AE68:lI116|HF556AE60
F556AE60:lI101|HF556AE58
F556AE58:lI114|HF556AE50
F556AE50:lI44|HF556AE48
F556AE48:lI105|HF556AE40
F556AE40:lI110|HF556AE38
F556AE38:lI116|HF556AE30
F556AE30:lI101|HF556AE28
F556AE28:lI114|HF556AE20
F556AE20:lI110|HF556AE18
F556AE18:lI97|HF556AE10
F556AE10:lI108|HF556AE08
F556AE08:lI95|HF556AE00
F556AE00:lI108|HF556ADF8
F556ADF8:lI111|HF556ADF0
F556ADF0:lI97|HF556ADE8
F556ADE8:lI100|HF556ADE0
F556ADE0:lI95|HF556ADD8
F556ADD8:lI115|HF556ADD0
F556ADD0:lI110|HF556ADC8
F556ADC8:lI97|HF556ADC0
F556ADC0:lI112|HF556ADB8
F556ADB8:lI115|HF556ADB0
F556ADB0:lI104|HF556ADA8
F556ADA8:lI111|HF556ADA0
F556ADA0:lI116|HF556AD98
F556AD98:lI44|HF556AD90
F556AD90:lI50|HF556AD88
F556AD88:lI125|HF556AD80
F556AD80:lI44|HF556AD78
F556AD78:lI123|HF556AD70
F556AD70:lI114|HF556AD68
F556AD68:lI97|HF556AD60
F556AD60:lI98|HF556AD58
F556AD58:lI98|HF556AD50
F556AD50:lI105|HF556AD48
F556AD48:lI116|HF556AD40
F556AD40:lI95|HF556AD38
F556AD38:lI112|HF556AD30
F556AD30:lI101|HF556AD28
F556AD28:lI114|HF556AD20
F556AD20:lI115|HF556AD18
F556AD18:lI105|HF556AD10
F556AD10:lI115|HF556AD08
F556AD08:lI116|HF556AD00
F556AD00:lI101|HF556ACF8
F556ACF8:lI114|HF556ACF0
F556ACF0:lI44|HF556ACE8
F556ACE8:lI105|HF556ACE0
F556ACE0:lI110|HF556ACD8
F556ACD8:lI105|HF556ACD0
F556ACD0:lI116|HF556ACC8
F556ACC8:lI44|HF556ACC0
F556ACC0:lI49|HF556ACB8
F556ACB8:lI125|HF556ACB0
F556ACB0:lI44|HF556ACA8
F556ACA8:lI123|HF556ACA0
F556ACA0:lI103|HF556AC98
F556AC98:lI101|HF556AC90
F556AC90:lI110|HF556AC88
F556AC88:lI95|HF556AC80
F556AC80:lI115|HF556AC78
F556AC78:lI101|HF556AC70
F556AC70:lI114|HF556AC68
F556AC68:lI118|HF556AC60
F556AC60:lI101|HF556AC58
F556AC58:lI114|HF556AC50
F556AC50:lI46|HF556AC48
F556AC48:lI46|HF556AC40
F556AC40:lI46|HF556AC38
F556AC38:lI32|HF556AC30
F556AC30:lI10|N
F556B530:lI126|HF556B528
F556B528:lI115|HF556B520
F556B520:lI126|HF556B518
F556B518:lI110|N
F556ABA0:t5:A7:handler,A1A:rabbit_error_logger_file_h,A5:false,HF556AB84,A5:false
F556AB84:t3:P<0.57.0>,HF55504F4,N
F556ABF4:lHF556ABD0|N
F556ABD0:t5:A7:handler,AC:error_logger,A5:false,N,A5:false
F556B5B8:t5:A7:handler,A19:rabbit_sasl_report_file_h,A5:false,HF556B59C,A5:false
F556B59C:t3:P<0.58.0>,HF5550228,A5:error
F5550228:lI47|HF5550314
F5550314:lI118|HF5550414
F5550414:lI97|HF55504DC
F55504DC:lI114|HF5550584
F5550584:lI47|HF5550654
F5550654:lI108|HF5550760
F5550760:lI111|HF5550868
F5550868:lI103|HF555096C
F555096C:lI47|HF5550ADC
F5550ADC:lI114|HF5550C38
F5550C38:lI97|HF5550D90
F5550D90:lI98|HF5550F08
F5550F08:lI98|HF5551080
F5551080:lI105|HF55511F4
F55511F4:lI116|HF5551334
F5551334:lI109|HF5551478
F5551478:lI113|HF55515C8
F55515C8:lI47|HF5551700
F5551700:lI114|HF5551810
F5551810:lI97|HF55518D0
F55518D0:lI98|HF5551960
F5551960:lI98|HF55519D8
F55519D8:lI105|HF5551A38
F5551A38:lI116|HF5551AB0
F5551AB0:lI45|HF5551B18
F5551B18:lI115|HF5551BA8
F5551BA8:lI97|HF5551C48
F5551C48:lI115|HF5551CC0
F5551CC0:lI108|HF5551D30
F5551D30:lI46|HF5551DC0
F5551DC0:lI108|HF5551E60
F5551E60:lI111|HF5551EC8
F5551EC8:lI103|N
F5550270:t2:AD:$initial_call,H818895D4
818895D4:t3:A9:gen_event,A7:init_it,I6
F555027C:t2:AA:$ancestors,HF555034C
F555034C:lP<0.1.0>|N
=proc_dictionary:<0.6.0>
H73FDA070
H73FDA07C
=proc_stack:<0.6.0>
0xf5635444:SReturn addr 0x1CC8E0 (<terminate process normally>)
y0:N
y1:A8:infinity
y2:A16:application_controller
y3:HF5634214
y4:A16:application_controller
y5:P<0.1.0>
=proc_heap:<0.6.0>
F5634214:t9:A5:state,N,N,N,H73FDBE7C,N,H73FDBE84,N,N
73FDBE84:lH73FDBEF8|H73FDBF04
73FDBEF8:t2:A4:sasl,A9:permanent
73FDBF04:lH73FDBF28|H73FDBF34
73FDBF28:t2:A6:stdlib,A9:permanent
73FDBF34:lH73FDBF50|N
73FDBF50:t2:A6:kernel,A9:permanent
73FDBE7C:lH73FDBEE4|H73FDBEF0
73FDBEE4:t2:A4:sasl,P<0.37.0>
73FDBEF0:lH73FDBF14|H73FDBF20
73FDBF14:t2:A6:stdlib,A9:undefined
73FDBF20:lH73FDBF44|N
73FDBF44:t2:A6:kernel,P<0.8.0>
73FDA070:t2:AD:$initial_call,H818A7AC0
818A7AC0:t3:A16:application_controller,A5:start,I1
73FDA07C:t2:AA:$ancestors,H73FDA0DC
73FDA0DC:lP<0.1.0>|N
=proc_dictionary:<0.8.0>
HF56FE020
HF56FE02C
=proc_stack:<0.8.0>
0xf56fe3a0:SReturn addr 0x81887014 (proc_lib:init_p_do_apply/3 + 28)
y0:N
y1:N
y2:N
y3:N
y4:HF56FE0F0
y5:P<0.6.0>
0xf56fe3bc:SReturn addr 0x1CC8E0 (<terminate process normally>)
y0:SCatch 0x81887024 (proc_lib:init_p_do_apply/3 + 44)
=proc_heap:<0.8.0>
F56FE0F0:t6:A5:state,P<0.9.0>,HF56FE780,N,I0,P<0.0.0>
F56FE780:t9:A9:appl_data,A6:kernel,HF56FE7B0,A9:undefined,HF56FE7B8,HF56FE7C4,N,A8:infinity,A8:infinity
F56FE7C4:lAB:application|HF56FE7D4
F56FE7D4:lA16:application_controller|HF56FE7E4
F56FE7E4:lA12:application_master|HF56FE7F4
F56FE7F4:lA13:application_starter|HF56FE804
F56FE804:lA4:auth|HF56FE814
F56FE814:lA4:code|HF56FE824
F56FE824:lA8:packages|HF56FE834
F56FE834:lAB:code_server|HF56FE844
F56FE844:lA9:dist_util|HF56FE854
F56FE854:lAF:erl_boot_server|HF56FE864
F56FE864:lA10:erl_distribution|HF56FE874
F56FE874:lAF:erl_prim_loader|HF56FE884
F56FE884:lA9:erl_reply|HF56FE894
F56FE894:lA6:erlang|HF56FE8A4
F56FE8A4:lAD:error_handler|HF56FE8B4
F56FE8B4:lAC:error_logger|HF56FE8C4
F56FE8C4:lA4:file|HF56FE8D4
F56FE8D4:lAB:file_server|HF56FE8E4
F56FE8E4:lAE:file_io_server|HF56FE8F4
F56FE8F4:lA9:prim_file|HF56FE904
F56FE904:lA8:prim_zip|HF56FE914
F56FE914:lA6:global|HF56FE924
F56FE924:lAC:global_group|HF56FE934
F56FE934:lAD:global_search|HF56FE944
F56FE944:lA5:group|HF56FE954
F56FE954:lA5:heart|HF56FE95C
F56FE95C:lA13:hipe_unified_loader|HF56FE964
F56FE964:lA9:inet6_tcp|HF56FE96C
F56FE96C:lAE:inet6_tcp_dist|HF56FE974
F56FE974:lA9:inet6_udp|HF56FE97C
F56FE97C:lAB:inet_config|HF56FE984
F56FE984:lAA:inet_hosts|HF56FE98C
F56FE98C:lA13:inet_gethost_native|HF56FE994
F56FE994:lAD:inet_tcp_dist|HF56FE99C
F56FE99C:lA4:init|HF56FE9A4
F56FE9A4:lA6:kernel|HF56FE9AC
F56FE9AC:lAD:kernel_config|HF56FE9B4
F56FE9B4:lA3:net|HF56FE9BC
F56FE9BC:lA7:net_adm|HF56FE9C4
F56FE9C4:lAA:net_kernel|HF56FE9CC
F56FE9CC:lA2:os|HF56FE9D4
F56FE9D4:lA8:ram_file|HF56FE9DC
F56FE9DC:lA3:rpc|HF56FE9E4
F56FE9E4:lA4:user|HF56FE9EC
F56FE9EC:lA8:user_drv|HF56FE9F4
F56FE9F4:lA8:user_sup|HF56FE9FC
F56FE9FC:lA8:disk_log|HF56FEA04
F56FEA04:lAA:disk_log_1|HF56FEA0C
F56FEA0C:lAF:disk_log_server|HF56FEA14
F56FEA14:lAC:disk_log_sup|HF56FEA1C
F56FEA1C:lA7:dist_ac|HF56FEA24
F56FEA24:lA8:erl_ddll|HF56FEA2C
F56FEA2C:lA8:erl_epmd|HF56FEA34
F56FEA34:lAA:erts_debug|HF56FEA3C
F56FEA3C:lA7:gen_tcp|HF56FEA44
F56FEA44:lA7:gen_udp|HF56FEA4C
F56FEA4C:lA8:gen_sctp|HF56FEA54
F56FEA54:lA9:prim_inet|HF56FEA5C
F56FEA5C:lA4:inet|HF56FEA64
F56FEA64:lA7:inet_db|HF56FEA6C
F56FEA6C:lA8:inet_dns|HF56FEA74
F56FEA74:lAA:inet_parse|HF56FEA7C
F56FEA7C:lA8:inet_res|HF56FEA84
F56FEA84:lA8:inet_tcp|HF56FEA8C
F56FEA8C:lA8:inet_udp|HF56FEA94
F56FEA94:lA9:inet_sctp|HF56FEA9C
F56FEA9C:lA3:pg2|HF56FEAA4
F56FEAA4:lA9:seq_trace|HF56FEAAC
F56FEAAC:lAF:wrap_log_reader|HF56FEAB4
F56FEAB4:lA4:zlib|HF56FEABC
F56FEABC:lA9:otp_ring0|N
F56FE7B8:t2:A6:kernel,N
F56FE7B0:lA16:application_controller|HF56FE7CC
F56FE7CC:lA9:erl_reply|HF56FE7DC
F56FE7DC:lA4:auth|HF56FE7EC
F56FE7EC:lAB:boot_server|HF56FE7FC
F56FE7FC:lAB:code_server|HF56FE80C
F56FE80C:lAF:disk_log_server|HF56FE81C
F56FE81C:lAC:disk_log_sup|HF56FE82C
F56FE82C:lAF:erl_prim_loader|HF56FE83C
F56FE83C:lAC:error_logger|HF56FE84C
F56FE84C:lAD:file_server_2|HF56FE85C
F56FE85C:lAF:fixtable_server|HF56FE86C
F56FE86C:lAC:global_group|HF56FE87C
F56FE87C:lA12:global_name_server|HF56FE88C
F56FE88C:lA5:heart|HF56FE89C
F56FE89C:lA4:init|HF56FE8AC
F56FE8AC:lAD:kernel_config|HF56FE8BC
F56FE8BC:lAA:kernel_sup|HF56FE8CC
F56FE8CC:lAA:net_kernel|HF56FE8DC
F56FE8DC:lA7:net_sup|HF56FE8EC
F56FE8EC:lA3:rex|HF56FE8FC
F56FE8FC:lA4:user|HF56FE90C
F56FE90C:lA9:os_server|HF56FE91C
F56FE91C:lAB:ddll_server|HF56FE92C
F56FE92C:lA8:erl_epmd|HF56FE93C
F56FE93C:lA7:inet_db|HF56FE94C
F56FE94C:lA3:pg2|N
F56FE020:t2:AD:$initial_call,HF56FE038
F56FE038:t3:A12:application_master,A4:init,I4
F56FE02C:t2:AA:$ancestors,HF56FE7A8
F56FE7A8:lP<0.7.0>|N
=proc_stack:<0.9.0>
0xf56ff100:SReturn addr 0x1CC8E0 (<terminate process normally>)
y0:N
y1:A6:kernel
y2:P<0.10.0>
y3:P<0.8.0>
=proc_heap:<0.9.0>
=proc_dictionary:<0.10.0>
HF55EE410
HF55EE41C
=proc_stack:<0.10.0>
0xf55ad380:SReturn addr 0x81887014 (proc_lib:init_p_do_apply/3 + 28)
y0:N
y1:A8:infinity
y2:AA:supervisor
y3:HF55AC680
y4:AA:kernel_sup
y5:P<0.9.0>
0xf55ad39c:SReturn addr 0x1CC8E0 (<terminate process normally>)
y0:SCatch 0x81887024 (proc_lib:init_p_do_apply/3 + 44)
=proc_heap:<0.10.0>
F55AC680:tA:A5:state,HF55EE404,AB:one_for_all,HF55AC66C,HF55EE440,I0,I1,N,A6:kernel,N
F55EE440:t9:A4:dict,I0,I16,I16,I8,I80,I48,H818E83D4,HF55EE4AC
F55EE4AC:t1:H818E83D4
818E83D4:t10:N,N,N,N,N,N,N,N,N,N,N,N,N,N,N,N
F55AC66C:lHF55AC648|HF55AC480
F55AC648:t8:A5:child,P<0.33.0>,AF:kernel_safe_sup,H818DC8F0,A9:permanent,A8:infinity,AA:supervisor,H818DC924
818DC924:lA6:kernel|N
818DC8F0:t3:AA:supervisor,AA:start_link,H818DC900
818DC900:lH818DC918|H818DC908
818DC918:t2:A5:local,AF:kernel_safe_sup
818DC908:lA6:kernel|H818DC910
818DC910:lA4:safe|N
F55AC480:lHF55AC45C|HF55AC278
F55AC45C:t8:A5:child,P<0.32.0>,AD:kernel_config,H818DC948,A9:permanent,I2000,A6:worker,H818DC958
818DC958:lAD:kernel_config|N
818DC948:t3:AD:kernel_config,AA:start_link,N
F55AC278:lHF55AC254|HF55AC01C
F55AC254:t8:A5:child,P<0.30.0>,A4:user,H818DC97C,A9:temporary,I2000,AA:supervisor,H818DC98C
818DC98C:lA8:user_sup|N
818DC97C:t3:A8:user_sup,A5:start,N
F55AC01C:lHF55ABFF8|HF55ABBB8
F55ABFF8:t8:A5:child,P<0.26.0>,AB:code_server,HF55EE428,A9:permanent,I2000,A6:worker,H818DC798
818DC798:lA4:code|N
F55EE428:t3:A4:code,AA:start_link,N
F55ABBB8:lHF55ABBC8|HF55ABBEC
F55ABBC8:t8:A5:child,P<0.25.0>,AD:file_server_2,H818DC894,A9:permanent,I2000,A6:worker,H818DC8A4
818DC8A4:lA4:file|H818DC8AC
818DC8AC:lAB:file_server|H818DC8B4
818DC8B4:lAE:file_io_server|H818DC8BC
818DC8BC:lA9:prim_file|N
818DC894:t3:AB:file_server,AA:start_link,N
F55ABBEC:lHF55ABBF4|HF55ABC18
F55ABBF4:t8:A5:child,P<0.24.0>,AC:global_group,H818DC9B0,A9:permanent,I2000,A6:worker,H818DC9C0
818DC9C0:lAC:global_group|N
818DC9B0:t3:AC:global_group,AA:start_link,N
F55ABC18:lHF55ABC20|HF55EE6A4
F55ABC20:t8:A5:child,P<0.18.0>,A7:net_sup,H818DC9E4,A9:permanent,A8:infinity,AA:supervisor,H818DC9F4
818DC9F4:lA10:erl_distribution|N
818DC9E4:t3:A10:erl_distribution,AA:start_link,N
F55EE6A4:lHF55EE6E8|HF55EE638
F55EE6E8:t8:A5:child,P<0.16.0>,A7:inet_db,H818DCA18,A9:permanent,I2000,A6:worker,H818DCA28
818DCA28:lA7:inet_db|N
818DCA18:t3:A7:inet_db,AA:start_link,N
F55EE638:lHF55EE640|HF55EE664
F55EE640:t8:A5:child,P<0.12.0>,A12:global_name_server,H818DCA4C,A9:permanent,I2000,A6:worker,H818DCA5C
818DCA5C:lA6:global|N
818DCA4C:t3:A6:global,AA:start_link,N
F55EE664:lHF55EE66C|N
F55EE66C:t8:A5:child,P<0.11.0>,A3:rex,H818DCA80,A9:permanent,I2000,A6:worker,H818DCA90
818DCA90:lA3:rpc|N
818DCA80:t3:A3:rpc,AA:start_link,N
F55EE404:t2:A5:local,AA:kernel_sup
F55EE410:t2:AD:$initial_call,HF55EE468
F55EE468:t3:AA:supervisor,A6:kernel,I1
F55EE41C:t2:AA:$ancestors,HF55EE478
F55EE478:lP<0.9.0>|N
=proc_dictionary:<0.11.0>
HF5610780
HF561078C
=proc_stack:<0.11.0>
0xf55ae2f8:SReturn addr 0x81887014 (proc_lib:init_p_do_apply/3 + 28)
y0:N
y1:A8:infinity
y2:A3:rpc
y3:HF55AD7B8
y4:A3:rex
y5:P<0.10.0>
0xf55ae314:SReturn addr 0x1CC8E0 (<terminate process normally>)
y0:SCatch 0x81887024 (proc_lib:init_p_do_apply/3 + 44)
=proc_heap:<0.11.0>
F55AD7B8:t2:I0,A3:nil
F5610780:t2:AD:$initial_call,HF5610798
F5610798:t3:A3:rpc,A4:init,I1
F561078C:t2:AA:$ancestors,HF56107A8
F56107A8:lAA:kernel_sup|HF56107B0
F56107B0:lP<0.9.0>|N
=proc_dictionary:<0.12.0>
HF561641C
HF5616428
=proc_stack:<0.12.0>
0xf55ab320:SReturn addr 0x81887014 (proc_lib:init_p_do_apply/3 + 28)
y0:N
y1:A8:infinity
y2:A6:global
y3:HF56163E8
y4:A12:global_name_server
y5:P<0.10.0>
0xf55ab33c:SReturn addr 0x1CC8E0 (<terminate process normally>)
y0:SCatch 0x81887024 (proc_lib:init_p_do_apply/3 + 44)
=proc_heap:<0.12.0>
F56163E8:tC:A5:state,A4:true,N,N,N,N,AD:nonode at nohost,P<0.13.0>,P<0.14.0>,P<0.15.0>,A8:no_trace,A5:false
F561641C:t2:AD:$initial_call,HF5616434
F5616434:t3:A6:global,A4:init,I1
F5616428:t2:AA:$ancestors,HF5616444
F5616444:lAA:kernel_sup|HF561644C
F561644C:lP<0.9.0>|N
=proc_stack:<0.13.0>
0xf56ff864:SReturn addr 0x81908330 (global:init_the_locker/1 + 192)
y0:HF56FF5A4
y1:A8:infinity
0xf56ff870:SReturn addr 0x1CC8E0 (<terminate process normally>)
=proc_heap:<0.13.0>
F56FF5A4:t7:A5:multi,N,N,N,AD:nonode at nohost,A5:false,A5:false
=proc_stack:<0.14.0>
0xf56ffc0c:SReturn addr 0x8190C988 (global:loop_the_deleter/1 + 36)
y0:A8:infinity
y1:N
y2:P<0.12.0>
0xf56ffc1c:SReturn addr 0x1CC8E0 (<terminate process normally>)
y0:P<0.12.0>
=proc_heap:<0.14.0>
=proc_stack:<0.15.0>
0xf56fffcc:SReturn addr 0x1CC8E0 (<terminate process normally>)
y0:N
=proc_heap:<0.15.0>
=proc_dictionary:<0.16.0>
HF5698A64
HF5698A70
=proc_stack:<0.16.0>
0xf5698d98:SReturn addr 0x81887014 (proc_lib:init_p_do_apply/3 + 28)
y0:N
y1:A8:infinity
y2:A7:inet_db
y3:HF5698A2C
y4:A7:inet_db
y5:P<0.10.0>
0xf5698db4:SReturn addr 0x1CC8E0 (<terminate process normally>)
y0:SCatch 0x81887024 (proc_lib:init_p_do_apply/3 + 44)
=proc_heap:<0.16.0>
F5698A2C:t5:A5:state,A7:inet_db,AA:inet_cache,AA:inet_hosts,HF5698A7C
F5698A7C:E1F:8372000364000B726162626974406D61696C03000000090000000000000000
F5698A64:t2:AD:$initial_call,HF5698AA4
F5698AA4:t3:A7:inet_db,A4:init,I1
F5698A70:t2:AA:$ancestors,HF5698AB4
F5698AB4:lAA:kernel_sup|HF5698AC4
F5698AC4:lP<0.9.0>|N
=proc_dictionary:<0.18.0>
HF57203DC
HF57203E8
=proc_stack:<0.18.0>
0xf5721320:SReturn addr 0x81887014 (proc_lib:init_p_do_apply/3 + 28)
y0:N
y1:A8:infinity
y2:AA:supervisor
y3:HF572127C
y4:A7:net_sup
y5:P<0.10.0>
0xf572133c:SReturn addr 0x1CC8E0 (<terminate process normally>)
y0:SCatch 0x81887024 (proc_lib:init_p_do_apply/3 + 44)
=proc_heap:<0.18.0>
F572127C:tA:A5:state,HF57203D0,AB:one_for_all,HF5721268,HF5720E10,I0,I1,N,A10:erl_distribution,HF57203F4
F57203F4:lA6:rabbit|HF5720454
F5720454:lAA:shortnames|N
F5720E10:t9:A4:dict,I0,I16,I16,I8,I80,I48,H818E83D4,HF5720E54
F5720E54:t1:H818E83D4
F5721268:lHF5721244|HF5721060
F5721244:t8:A5:child,P<0.21.0>,AA:net_kernel,HF5720414,A9:permanent,I2000,A6:worker,H73EA5890
73EA5890:lAA:net_kernel|N
F5720414:t3:AA:net_kernel,AA:start_link,HF572045C
F572045C:lHF57203F4|N
F5721060:lHF572103C|HF5720D60
F572103C:t8:A5:child,P<0.20.0>,A4:auth,H73EA58B4,A9:permanent,I2000,A6:worker,H73EA58C4
73EA58C4:lA4:auth|N
73EA58B4:t3:A4:auth,AA:start_link,N
F5720D60:lHF5720DC8|N
F5720DC8:t8:A5:child,P<0.19.0>,A8:erl_epmd,HF57203FC,A9:permanent,I2000,A6:worker,HF572040C
F572040C:lA8:erl_epmd|N
F57203FC:t3:A8:erl_epmd,AA:start_link,N
F57203D0:t2:A5:local,A7:net_sup
F57203DC:t2:AD:$initial_call,HF572043C
F572043C:t3:AA:supervisor,A10:erl_distribution,I1
F57203E8:t2:AA:$ancestors,HF572044C
F572044C:lAA:kernel_sup|HF572047C
F572047C:lP<0.9.0>|N
=proc_dictionary:<0.19.0>
HF574DD1C
HF574DD28
=proc_stack:<0.19.0>
0xf574e8b0:SReturn addr 0x81887014 (proc_lib:init_p_do_apply/3 + 28)
y0:N
y1:A8:infinity
y2:A8:erl_epmd
y3:HF574E330
y4:A8:erl_epmd
y5:P<0.18.0>
0xf574e8cc:SReturn addr 0x1CC8E0 (<terminate process normally>)
y0:SCatch 0x81887024 (proc_lib:init_p_do_apply/3 + 44)
=proc_heap:<0.19.0>
F574E330:t4:A5:state,p<0.97>,I39137,A6:rabbit
F574DD1C:t2:AD:$initial_call,HF574DD44
F574DD44:t3:A8:erl_epmd,A4:init,I1
F574DD28:t2:AA:$ancestors,HF574DD54
F574DD54:lA7:net_sup|HF574DD5C
F574DD5C:lAA:kernel_sup|HF574DD64
F574DD64:lP<0.9.0>|N
=proc_dictionary:<0.20.0>
HF55EE9C8
HF55EE9D4
=proc_stack:<0.20.0>
0xf55aad34:SReturn addr 0x81887014 (proc_lib:init_p_do_apply/3 + 28)
y0:N
y1:A8:infinity
y2:A4:auth
y3:HF55AA680
y4:A4:auth
y5:P<0.18.0>
0xf55aad50:SReturn addr 0x1CC8E0 (<terminate process normally>)
y0:SCatch 0x81887024 (proc_lib:init_p_do_apply/3 + 44)
=proc_heap:<0.20.0>
F55AA680:t3:A5:state,A14:ZKTGFBRYQMLMYZWGNZEZ,I9
F55EE9C8:t2:AD:$initial_call,HF55EE9E8
F55EE9E8:t3:A4:auth,A4:init,I1
F55EE9D4:t2:AA:$ancestors,HF55EE9F8
F55EE9F8:lA7:net_sup|HF55EEA08
F55EEA08:lAA:kernel_sup|HF55EEA18
F55EEA18:lP<0.9.0>|N
=proc_dictionary:<0.21.0>
HF5566020
HF556602C
HF5566038
=proc_stack:<0.21.0>
0xf574f5f4:SReturn addr 0x81887014 (proc_lib:init_p_do_apply/3 + 28)
y0:N
y1:A8:infinity
y2:AA:net_kernel
y3:HF574F08C
y4:AA:net_kernel
y5:P<0.18.0>
0xf574f610:SReturn addr 0x1CC8E0 (<terminate process normally>)
y0:SCatch 0x81887024 (proc_lib:init_p_do_apply/3 + 44)
=proc_heap:<0.21.0>
F574F08C:tD:A5:state,A6:rabbit,AB:rabbit at mail,AA:shortnames,HF574EDF8,I7000,A8:sys_dist,HF574F084,N,HF574ED54,N,I0,A3:all
F574ED54:lHF574ED3C|N
F574ED3C:t5:A6:listen,p<0.93>,P<0.22.0>,HF574ECA0,AD:inet_tcp_dist
F574ECA0:t5:AB:net_address,HF574ECB8,HF574ECC4,A3:tcp,A4:inet
F574ECC4:lI109|HF574ECE0
F574ECE0:lI97|HF574ECE8
F574ECE8:lI105|HF574ECF0
F574ECF0:lI108|N
F574ECB8:t2:HF574ECCC,I39137
F574ECCC:t4:I0,I0,I0,I0
F574F084:lHF574F078|N
F574F078:t2:P<0.27.0>,A18:rabbitmq_multi11504 at mail
F574EDF8:t3:A4:tick,P<0.23.0>,I15000
F5566020:t2:AD:$initial_call,HF5566044
F5566044:t3:AA:net_kernel,A4:init,I1
F556602C:t2:A9:longnames,A5:false
F5566038:t2:AA:$ancestors,HF5566054
F5566054:lA7:net_sup|HF556605C
F556605C:lAA:kernel_sup|HF5566064
F5566064:lP<0.9.0>|N
=proc_stack:<0.22.0>
0xf56dc3a0:SReturn addr 0x73EA07C8 (inet_tcp:accept/1 + 20)
y0:I2
y1:p<0.93>
0xf56dc3ac:SReturn addr 0x73EABAD8 (inet_tcp_dist:accept_loop/2 + 48)
y0:N
0xf56dc3b4:SReturn addr 0x1CC8E0 (<terminate process normally>)
y0:N
y1:p<0.93>
y2:P<0.21.0>
=proc_heap:<0.22.0>
=proc_stack:<0.23.0>
0xf56983b8:SReturn addr 0x1CC8E0 (<terminate process normally>)
y0:I15000
y1:P<0.21.0>
=proc_heap:<0.23.0>
=proc_dictionary:<0.24.0>
HF55EE0B8
HF55EE0E8
HF55EE09C
HF55EE0F4
HF55EE100
=proc_stack:<0.24.0>
0xf55ee3a0:SReturn addr 0x81887014 (proc_lib:init_p_do_apply/3 + 28)
y0:N
y1:A8:infinity
y2:AC:global_group
y3:HF55EE1C4
y4:AC:global_group
y5:P<0.10.0>
0xf55ee3bc:SReturn addr 0x1CC8E0 (<terminate process normally>)
y0:SCatch 0x81887024 (proc_lib:init_p_do_apply/3 + 44)
=proc_heap:<0.24.0>
F55EE1C4:tC:A5:state,A7:no_conf,A4:true,N,N,N,N,N,AB:rabbit at mail,N,A6:normal,A6:normal
F55EE0B8:t2:AD:$initial_call,HF55EE0A8
F55EE0A8:t3:AC:global_group,A4:init,I1
F55EE0E8:t2:A10:registered_names,H73EE6394
73EE6394:lA9:undefined|N
F55EE09C:t2:AA:$ancestors,HF55EE094
F55EE094:lAA:kernel_sup|HF55EE074
F55EE074:lP<0.9.0>|N
F55EE0F4:t2:A4:send,H73EE6394
F55EE100:t2:AC:whereis_name,H73EE6394
=proc_dictionary:<0.25.0>
HF5698DC8
HF5698DD4
=proc_stack:<0.25.0>
0xf5742984:SReturn addr 0x81887014 (proc_lib:init_p_do_apply/3 + 28)
y0:N
y1:A8:infinity
y2:AB:file_server
y3:p<0.102>
y4:AD:file_server_2
y5:P<0.10.0>
0xf57429a0:SReturn addr 0x1CC8E0 (<terminate process normally>)
y0:SCatch 0x81887024 (proc_lib:init_p_do_apply/3 + 44)
=proc_heap:<0.25.0>
F5698DC8:t2:AD:$initial_call,HF5698DE0
F5698DE0:t3:AB:file_server,A4:init,I1
F5698DD4:t2:AA:$ancestors,HF5698DF0
F5698DF0:lAA:kernel_sup|HF5698DF8
F5698DF8:lP<0.9.0>|N
=proc_stack:<0.26.0>
0xf55c1968:SReturn addr 0x1CC8E0 (<terminate process normally>)
y0:HF5590F14
y1:P<0.10.0>
=proc_heap:<0.26.0>
F5590F14:t8:A5:state,P<0.10.0>,HF558C530,HF5590AD0,I4108,I8205,A8:no_cache,AB:interactive
F5590AD0:lHF5590AF0|HF5590AF8
F5590AF0:lI47|HF5590B14
F5590B14:lI117|HF5590B2C
F5590B2C:lI115|HF5590B44
F5590B44:lI114|HF5590B5C
F5590B5C:lI47|HF5590B74
F5590B74:lI108|HF5590B8C
F5590B8C:lI105|HF5590BA4
F5590BA4:lI98|HF5590BBC
F5590BBC:lI47|HF5590BD4
F5590BD4:lI114|HF5590BEC
F5590BEC:lI97|HF5590C04
F5590C04:lI98|HF5590C1C
F5590C1C:lI98|HF5590C34
F5590C34:lI105|HF5590C4C
F5590C4C:lI116|HF5590C64
F5590C64:lI109|HF5590C7C
F5590C7C:lI113|HF5590C94
F5590C94:lI47|HF5590CAC
F5590CAC:lI108|HF5590CC4
F5590CC4:lI105|HF5590CDC
F5590CDC:lI98|HF5590CF4
F5590CF4:lI47|HF5590D0C
F5590D0C:lI114|HF5590D24
F5590D24:lI97|HF5590D3C
F5590D3C:lI98|HF5590D54
F5590D54:lI98|HF5590D6C
F5590D6C:lI105|HF5590D84
F5590D84:lI116|HF5590D9C
F5590D9C:lI109|HF5590DB4
F5590DB4:lI113|HF5590DCC
F5590DCC:lI95|HF5590DE4
F5590DE4:lI115|HF5590DFC
F5590DFC:lI101|HF5590E14
F5590E14:lI114|HF5590E2C
F5590E2C:lI118|HF5590E3C
F5590E3C:lI101|HF5590E4C
F5590E4C:lI114|HF5590E5C
F5590E5C:lI45|HF5590E6C
F5590E6C:lI49|HF5590E7C
F5590E7C:lI46|HF5590E8C
F5590E8C:lI55|HF5590E9C
F5590E9C:lI46|HF5590EA4
F5590EA4:lI49|HF5590EAC
F5590EAC:lI47|HF5590EB4
F5590EB4:lI115|HF5590EBC
F5590EBC:lI98|HF5590EC4
F5590EC4:lI105|HF5590ECC
F5590ECC:lI110|HF5590ED4
F5590ED4:lI47|HF5590EDC
F5590EDC:lI46|HF5590EE4
F5590EE4:lI46|HF5590EEC
F5590EEC:lI47|HF5590EF4
F5590EF4:lI101|HF5590EFC
F5590EFC:lI98|HF5590F04
F5590F04:lI105|HF5590F0C
F5590F0C:lI110|N
F5590AF8:lH73EFA8B0|HF5590B1C
73EFA8B0:lI46|N
F5590B1C:lHF558EA58|HF5590B34
F558EA58:lI47|HF558EAF8
F558EAF8:lI117|HF558EBA8
F558EBA8:lI115|HF558EC60
F558EC60:lI114|HF558ED20
F558ED20:lI47|HF558EDE8
F558EDE8:lI108|HF558EEB8
F558EEB8:lI105|HF558EF90
F558EF90:lI98|HF558F070
F558F070:lI47|HF558F158
F558F158:lI101|HF558F240
F558F240:lI114|HF558F328
F558F328:lI108|HF558F410
F558F410:lI97|HF558F4F8
F558F4F8:lI110|HF558F5E0
F558F5E0:lI103|HF558F6C8
F558F6C8:lI47|HF558F7B0
F558F7B0:lI108|HF558F898
F558F898:lI105|HF558F980
F558F980:lI98|HF558FA68
F558FA68:lI47|HF558FB50
F558FB50:lI107|HF558FC38
F558FC38:lI101|HF558FD20
F558FD20:lI114|HF558FE08
F558FE08:lI110|HF558FEF0
F558FEF0:lI101|HF558FFD0
F558FFD0:lI108|HF55900B0
F55900B0:lI45|HF5590190
F5590190:lI50|HF5590270
F5590270:lI46|HF5590350
F5590350:lI49|HF5590428
F5590428:lI50|HF55904F0
F55904F0:lI46|HF55905B8
F55905B8:lI53|HF5590678
F5590678:lI47|HF5590720
F5590720:lI101|HF55907A8
F55907A8:lI98|HF5590828
F5590828:lI105|HF5590898
F5590898:lI110|N
F5590B34:lHF558EB90|HF5590B4C
F558EB90:lI47|HF558EC48
F558EC48:lI117|HF558ED08
F558ED08:lI115|HF558EDD0
F558EDD0:lI114|HF558EEA0
F558EEA0:lI47|HF558EF78
F558EF78:lI108|HF558F058
F558F058:lI105|HF558F140
F558F140:lI98|HF558F228
F558F228:lI47|HF558F310
F558F310:lI101|HF558F3F8
F558F3F8:lI114|HF558F4E0
F558F4E0:lI108|HF558F5C8
F558F5C8:lI97|HF558F6B0
F558F6B0:lI110|HF558F798
F558F798:lI103|HF558F880
F558F880:lI47|HF558F968
F558F968:lI108|HF558FA50
F558FA50:lI105|HF558FB38
F558FB38:lI98|HF558FC20
F558FC20:lI47|HF558FD08
F558FD08:lI115|HF558FDF0
F558FDF0:lI116|HF558FED8
F558FED8:lI100|HF558FFB8
F558FFB8:lI108|HF5590098
F5590098:lI105|HF5590178
F5590178:lI98|HF5590258
F5590258:lI45|HF5590338
F5590338:lI49|HF5590410
F5590410:lI46|HF55904D8
F55904D8:lI49|HF55905A0
F55905A0:lI53|HF5590660
F5590660:lI46|HF5590708
F5590708:lI53|HF5590790
F5590790:lI47|HF5590810
F5590810:lI101|HF5590880
F5590880:lI98|HF55908D8
F55908D8:lI105|HF5590918
F5590918:lI110|N
F5590B4C:lHF558EC50|HF5590B64
F558EC50:lI47|HF558ED10
F558ED10:lI117|HF558EDD8
F558EDD8:lI115|HF558EEA8
F558EEA8:lI114|HF558EF80
F558EF80:lI47|HF558F060
F558F060:lI108|HF558F148
F558F148:lI105|HF558F230
F558F230:lI98|HF558F318
F558F318:lI47|HF558F400
F558F400:lI101|HF558F4E8
F558F4E8:lI114|HF558F5D0
F558F5D0:lI108|HF558F6B8
F558F6B8:lI97|HF558F7A0
F558F7A0:lI110|HF558F888
F558F888:lI103|HF558F970
F558F970:lI47|HF558FA58
F558FA58:lI108|HF558FB40
F558FB40:lI105|HF558FC28
F558FC28:lI98|HF558FD10
F558FD10:lI47|HF558FDF8
F558FDF8:lI115|HF558FEE0
F558FEE0:lI97|HF558FFC0
F558FFC0:lI115|HF55900A0
F55900A0:lI108|HF5590180
F5590180:lI45|HF5590260
F5590260:lI50|HF5590340
F5590340:lI46|HF5590418
F5590418:lI49|HF55904E0
F55904E0:lI46|HF55905A8
F55905A8:lI53|HF5590668
F5590668:lI46|HF5590710
F5590710:lI52|HF5590798
F5590798:lI47|HF5590818
F5590818:lI101|HF5590888
F5590888:lI98|HF55908E0
F55908E0:lI105|HF5590920
F5590920:lI110|N
F5590B64:lHF558EAE0|HF5590B7C
F558EAE0:lI47|HF558EB88
F558EB88:lI117|HF558EC40
F558EC40:lI115|HF558ED00
F558ED00:lI114|HF558EDC8
F558EDC8:lI47|HF558EE98
F558EE98:lI108|HF558EF70
F558EF70:lI105|HF558F050
F558F050:lI98|HF558F138
F558F138:lI47|HF558F220
F558F220:lI101|HF558F308
F558F308:lI114|HF558F3F0
F558F3F0:lI108|HF558F4D8
F558F4D8:lI97|HF558F5C0
F558F5C0:lI110|HF558F6A8
F558F6A8:lI103|HF558F790
F558F790:lI47|HF558F878
F558F878:lI108|HF558F960
F558F960:lI105|HF558FA48
F558FA48:lI98|HF558FB30
F558FB30:lI47|HF558FC18
F558FC18:lI120|HF558FD00
F558FD00:lI109|HF558FDE8
F558FDE8:lI101|HF558FED0
F558FED0:lI114|HF558FFB0
F558FFB0:lI108|HF5590090
F5590090:lI45|HF5590170
F5590170:lI49|HF5590250
F5590250:lI46|HF5590330
F5590330:lI49|HF5590408
F5590408:lI46|HF55904D0
F55904D0:lI49|HF5590598
F5590598:lI48|HF5590658
F5590658:lI47|H73EFAA68
73EFAA68:lI101|H73EFAA70
73EFAA70:lI98|H73EFAA78
73EFAA78:lI105|H73EFAA80
73EFAA80:lI110|N
F5590B7C:lHF558EAD8|HF5590B94
F558EAD8:lI47|HF558EB80
F558EB80:lI117|HF558EC38
F558EC38:lI115|HF558ECF8
F558ECF8:lI114|HF558EDC0
F558EDC0:lI47|HF558EE90
F558EE90:lI108|HF558EF68
F558EF68:lI105|HF558F048
F558F048:lI98|HF558F130
F558F130:lI47|HF558F218
F558F218:lI101|HF558F300
F558F300:lI114|HF558F3E8
F558F3E8:lI108|HF558F4D0
F558F4D0:lI97|HF558F5B8
F558F5B8:lI110|HF558F6A0
F558F6A0:lI103|HF558F788
F558F788:lI47|HF558F870
F558F870:lI108|HF558F958
F558F958:lI105|HF558FA40
F558FA40:lI98|HF558FB28
F558FB28:lI47|HF558FC10
F558FC10:lI119|HF558FCF8
F558FCF8:lI101|HF558FDE0
F558FDE0:lI98|HF558FEC8
F558FEC8:lI116|HF558FFA8
F558FFA8:lI111|HF5590088
F5590088:lI111|HF5590168
F5590168:lI108|HF5590248
F5590248:lI45|HF5590328
F5590328:lI48|HF5590400
F5590400:lI46|HF55904C8
F55904C8:lI56|HF5590590
F5590590:lI46|HF5590650
F5590650:lI51|HF5590700
F5590700:lI46|HF5590788
F5590788:lI50|HF5590808
F5590808:lI47|H73EFAA68
F5590B94:lHF558EAD0|HF5590BAC
F558EAD0:lI47|HF558EB78
F558EB78:lI117|HF558EC30
F558EC30:lI115|HF558ECF0
F558ECF0:lI114|HF558EDB8
F558EDB8:lI47|HF558EE88
F558EE88:lI108|HF558EF60
F558EF60:lI105|HF558F040
F558F040:lI98|HF558F128
F558F128:lI47|HF558F210
F558F210:lI101|HF558F2F8
F558F2F8:lI114|HF558F3E0
F558F3E0:lI108|HF558F4C8
F558F4C8:lI97|HF558F5B0
F558F5B0:lI110|HF558F698
F558F698:lI103|HF558F780
F558F780:lI47|HF558F868
F558F868:lI108|HF558F950
F558F950:lI105|HF558FA38
F558FA38:lI98|HF558FB20
F558FB20:lI47|HF558FC08
F558FC08:lI116|HF558FCF0
F558FCF0:lI111|HF558FDD8
F558FDD8:lI111|HF558FEC0
F558FEC0:lI108|HF558FFA0
F558FFA0:lI115|HF5590080
F5590080:lI45|HF5590160
F5590160:lI50|HF5590240
F5590240:lI46|HF5590320
F5590320:lI54|HF55903F8
F55903F8:lI46|HF55904C0
F55904C0:lI50|HF5590588
F5590588:lI47|H73EFAA68
F5590BAC:lHF558EAC8|HF5590BC4
F558EAC8:lI47|HF558EB70
F558EB70:lI117|HF558EC28
F558EC28:lI115|HF558ECE8
F558ECE8:lI114|HF558EDB0
F558EDB0:lI47|HF558EE80
F558EE80:lI108|HF558EF58
F558EF58:lI105|HF558F038
F558F038:lI98|HF558F120
F558F120:lI47|HF558F208
F558F208:lI101|HF558F2F0
F558F2F0:lI114|HF558F3D8
F558F3D8:lI108|HF558F4C0
F558F4C0:lI97|HF558F5A8
F558F5A8:lI110|HF558F690
F558F690:lI103|HF558F778
F558F778:lI47|HF558F860
F558F860:lI108|HF558F948
F558F948:lI105|HF558FA30
F558FA30:lI98|HF558FB18
F558FB18:lI47|HF558FC00
F558FC00:lI116|HF558FCE8
F558FCE8:lI101|HF558FDD0
F558FDD0:lI115|HF558FEB8
F558FEB8:lI116|HF558FF98
F558FF98:lI95|HF5590078
F5590078:lI115|HF5590158
F5590158:lI101|HF5590238
F5590238:lI114|HF5590318
F5590318:lI118|HF55903F0
F55903F0:lI101|HF55904B8
F55904B8:lI114|HF5590580
F5590580:lI45|HF5590648
F5590648:lI51|HF55906F8
F55906F8:lI46|HF5590780
F5590780:lI50|HF5590800
F5590800:lI46|HF5590878
F5590878:lI52|HF55908D0
F55908D0:lI47|H73EFAA68
F5590BC4:lHF558EAC0|HF5590BDC
F558EAC0:lI47|HF558EB68
F558EB68:lI117|HF558EC20
F558EC20:lI115|HF558ECE0
F558ECE0:lI114|HF558EDA8
F558EDA8:lI47|HF558EE78
F558EE78:lI108|HF558EF50
F558EF50:lI105|HF558F030
F558F030:lI98|HF558F118
F558F118:lI47|HF558F200
F558F200:lI101|HF558F2E8
F558F2E8:lI114|HF558F3D0
F558F3D0:lI108|HF558F4B8
F558F4B8:lI97|HF558F5A0
F558F5A0:lI110|HF558F688
F558F688:lI103|HF558F770
F558F770:lI47|HF558F858
F558F858:lI108|HF558F940
F558F940:lI105|HF558FA28
F558FA28:lI98|HF558FB10
F558FB10:lI47|HF558FBF8
F558FBF8:lI115|HF558FCE0
F558FCE0:lI121|HF558FDC8
F558FDC8:lI110|HF558FEB0
F558FEB0:lI116|HF558FF90
F558FF90:lI97|HF5590070
F5590070:lI120|HF5590150
F5590150:lI95|HF5590230
F5590230:lI116|HF5590310
F5590310:lI111|HF55903E8
F55903E8:lI111|HF55904B0
F55904B0:lI108|HF5590578
F5590578:lI115|HF5590640
F5590640:lI45|HF55906F0
F55906F0:lI49|HF5590778
F5590778:lI46|HF55907F8
F55907F8:lI53|HF5590870
F5590870:lI46|HF55908C8
F55908C8:lI54|HF5590910
F5590910:lI47|H73EFAA68
F5590BDC:lHF558EAB0|HF5590BF4
F558EAB0:lI47|HF558EB58
F558EB58:lI117|HF558EC10
F558EC10:lI115|HF558ECD0
F558ECD0:lI114|HF558ED98
F558ED98:lI47|HF558EE68
F558EE68:lI108|HF558EF40
F558EF40:lI105|HF558F020
F558F020:lI98|HF558F108
F558F108:lI47|HF558F1F0
F558F1F0:lI101|HF558F2D8
F558F2D8:lI114|HF558F3C0
F558F3C0:lI108|HF558F4A8
F558F4A8:lI97|HF558F590
F558F590:lI110|HF558F678
F558F678:lI103|HF558F760
F558F760:lI47|HF558F848
F558F848:lI108|HF558F930
F558F930:lI105|HF558FA18
F558FA18:lI98|HF558FB00
F558FB00:lI47|HF558FBE8
F558FBE8:lI115|HF558FCD0
F558FCD0:lI115|HF558FDB8
F558FDB8:lI108|HF558FEA0
F558FEA0:lI45|HF558FF80
F558FF80:lI51|HF5590060
F5590060:lI46|HF5590140
F5590140:lI49|HF5590220
F5590220:lI48|HF5590300
F5590300:lI47|H73EFAA68
F5590BF4:lHF558EAA8|HF5590C0C
F558EAA8:lI47|HF558EB50
F558EB50:lI117|HF558EC08
F558EC08:lI115|HF558ECC8
F558ECC8:lI114|HF558ED90
F558ED90:lI47|HF558EE60
F558EE60:lI108|HF558EF38
F558EF38:lI105|HF558F018
F558F018:lI98|HF558F100
F558F100:lI47|HF558F1E8
F558F1E8:lI101|HF558F2D0
F558F2D0:lI114|HF558F3B8
F558F3B8:lI108|HF558F4A0
F558F4A0:lI97|HF558F588
F558F588:lI110|HF558F670
F558F670:lI103|HF558F758
F558F758:lI47|HF558F840
F558F840:lI108|HF558F928
F558F928:lI105|HF558FA10
F558FA10:lI98|HF558FAF8
F558FAF8:lI47|HF558FBE0
F558FBE0:lI115|HF558FCC8
F558FCC8:lI115|HF558FDB0
F558FDB0:lI104|HF558FE98
F558FE98:lI45|HF558FF78
F558FF78:lI49|HF5590058
F5590058:lI46|HF5590138
F5590138:lI48|HF5590218
F5590218:lI46|HF55902F8
F55902F8:lI50|HF55903D8
F55903D8:lI47|H73EFAA68
F5590C0C:lHF558EAA0|HF5590C24
F558EAA0:lI47|HF558EB48
F558EB48:lI117|HF558EC00
F558EC00:lI115|HF558ECC0
F558ECC0:lI114|HF558ED88
F558ED88:lI47|HF558EE58
F558EE58:lI108|HF558EF30
F558EF30:lI105|HF558F010
F558F010:lI98|HF558F0F8
F558F0F8:lI47|HF558F1E0
F558F1E0:lI101|HF558F2C8
F558F2C8:lI114|HF558F3B0
F558F3B0:lI108|HF558F498
F558F498:lI97|HF558F580
F558F580:lI110|HF558F668
F558F668:lI103|HF558F750
F558F750:lI47|HF558F838
F558F838:lI108|HF558F920
F558F920:lI105|HF558FA08
F558FA08:lI98|HF558FAF0
F558FAF0:lI47|HF558FBD8
F558FBD8:lI115|HF558FCC0
F558FCC0:lI110|HF558FDA8
F558FDA8:lI109|HF558FE90
F558FE90:lI112|HF558FF70
F558FF70:lI45|HF5590050
F5590050:lI52|HF5590130
F5590130:lI46|HF5590210
F5590210:lI49|HF55902F0
F55902F0:lI50|HF55903D0
F55903D0:lI47|H73EFAA68
F5590C24:lHF558EA90|HF5590C3C
F558EA90:lI47|HF558EB38
F558EB38:lI117|HF558EBF0
F558EBF0:lI115|HF558ECB0
F558ECB0:lI114|HF558ED78
F558ED78:lI47|HF558EE48
F558EE48:lI108|HF558EF20
F558EF20:lI105|HF558F000
F558F000:lI98|HF558F0E8
F558F0E8:lI47|HF558F1D0
F558F1D0:lI101|HF558F2B8
F558F2B8:lI114|HF558F3A0
F558F3A0:lI108|HF558F488
F558F488:lI97|HF558F570
F558F570:lI110|HF558F658
F558F658:lI103|HF558F740
F558F740:lI47|HF558F828
F558F828:lI108|HF558F910
F558F910:lI105|HF558F9F8
F558F9F8:lI98|HF558FAE0
F558FAE0:lI47|HF558FBC8
F558FBC8:lI114|HF558FCB0
F558FCB0:lI117|HF558FD98
F558FD98:lI110|HF558FE80
F558FE80:lI116|HF558FF60
F558FF60:lI105|HF5590040
F5590040:lI109|HF5590120
F5590120:lI101|HF5590200
F5590200:lI95|HF55902E0
F55902E0:lI116|HF55903C0
F55903C0:lI111|HF5590498
F5590498:lI111|HF5590560
F5590560:lI108|HF5590628
F5590628:lI115|HF55906E0
F55906E0:lI45|HF5590770
F5590770:lI49|HF55907F0
F55907F0:lI46|HF5590868
F5590868:lI55|HF55908C0
F55908C0:lI46|HF5590908
F5590908:lI51|HF5590938
F5590938:lI47|H73EFAA68
F5590C3C:lHF558EA88|HF5590C54
F558EA88:lI47|HF558EB30
F558EB30:lI117|HF558EBE8
F558EBE8:lI115|HF558ECA8
F558ECA8:lI114|HF558ED70
F558ED70:lI47|HF558EE40
F558EE40:lI108|HF558EF18
F558EF18:lI105|HF558EFF8
F558EFF8:lI98|HF558F0E0
F558F0E0:lI47|HF558F1C8
F558F1C8:lI101|HF558F2B0
F558F2B0:lI114|HF558F398
F558F398:lI108|HF558F480
F558F480:lI97|HF558F568
F558F568:lI110|HF558F650
F558F650:lI103|HF558F738
F558F738:lI47|HF558F820
F558F820:lI108|HF558F908
F558F908:lI105|HF558F9F0
F558F9F0:lI98|HF558FAD8
F558FAD8:lI47|HF558FBC0
F558FBC0:lI112|HF558FCA8
F558FCA8:lI117|HF558FD90
F558FD90:lI98|HF558FE78
F558FE78:lI108|HF558FF58
F558FF58:lI105|HF5590038
F5590038:lI99|HF5590118
F5590118:lI95|HF55901F8
F55901F8:lI107|HF55902D8
F55902D8:lI101|HF55903B8
F55903B8:lI121|HF5590490
F5590490:lI45|HF5590558
F5590558:lI48|HF5590620
F5590620:lI46|HF55906D8
F55906D8:lI49|HF5590768
F5590768:lI47|H73EFAA68
F5590C54:lHF558EA80|HF5590C6C
F558EA80:lI47|HF558EB28
F558EB28:lI117|HF558EBE0
F558EBE0:lI115|HF558ECA0
F558ECA0:lI114|HF558ED68
F558ED68:lI47|HF558EE38
F558EE38:lI108|HF558EF10
F558EF10:lI105|HF558EFF0
F558EFF0:lI98|HF558F0D8
F558F0D8:lI47|HF558F1C0
F558F1C0:lI101|HF558F2A8
F558F2A8:lI114|HF558F390
F558F390:lI108|HF558F478
F558F478:lI97|HF558F560
F558F560:lI110|HF558F648
F558F648:lI103|HF558F730
F558F730:lI47|HF558F818
F558F818:lI108|HF558F900
F558F900:lI105|HF558F9E8
F558F9E8:lI98|HF558FAD0
F558FAD0:lI47|HF558FBB8
F558FBB8:lI112|HF558FCA0
F558FCA0:lI101|HF558FD88
F558FD88:lI114|HF558FE70
F558FE70:lI99|HF558FF50
F558FF50:lI101|HF5590030
F5590030:lI112|HF5590110
F5590110:lI116|HF55901F0
F55901F0:lI45|HF55902D0
F55902D0:lI48|HF55903B0
F55903B0:lI46|HF5590488
F5590488:lI55|HF5590550
F5590550:lI46|HF5590618
F5590618:lI51|HF55906D0
F55906D0:lI47|H73EFAA68
F5590C6C:lHF558EA78|HF5590C84
F558EA78:lI47|HF558EB20
F558EB20:lI117|HF558EBD8
F558EBD8:lI115|HF558EC98
F558EC98:lI114|HF558ED60
F558ED60:lI47|HF558EE30
F558EE30:lI108|HF558EF08
F558EF08:lI105|HF558EFE8
F558EFE8:lI98|HF558F0D0
F558F0D0:lI47|HF558F1B8
F558F1B8:lI101|HF558F2A0
F558F2A0:lI114|HF558F388
F558F388:lI108|HF558F470
F558F470:lI97|HF558F558
F558F558:lI110|HF558F640
F558F640:lI103|HF558F728
F558F728:lI47|HF558F810
F558F810:lI108|HF558F8F8
F558F8F8:lI105|HF558F9E0
F558F9E0:lI98|HF558FAC8
F558FAC8:lI47|HF558FBB0
F558FBB0:lI112|HF558FC98
F558FC98:lI97|HF558FD80
F558FD80:lI114|HF558FE68
F558FE68:lI115|HF558FF48
F558FF48:lI101|HF5590028
F5590028:lI116|HF5590108
F5590108:lI111|HF55901E8
F55901E8:lI111|HF55902C8
F55902C8:lI108|HF55903A8
F55903A8:lI115|HF5590480
F5590480:lI45|HF5590548
F5590548:lI49|HF5590610
F5590610:lI46|HF55906C8
F55906C8:lI52|HF5590760
F5590760:lI46|HF55907E8
F55907E8:lI53|HF5590860
F5590860:lI47|H73EFAA68
F5590C84:lHF558EA70|HF5590C9C
F558EA70:lI47|HF558EB18
F558EB18:lI117|HF558EBD0
F558EBD0:lI115|HF558EC90
F558EC90:lI114|HF558ED58
F558ED58:lI47|HF558EE28
F558EE28:lI108|HF558EF00
F558EF00:lI105|HF558EFE0
F558EFE0:lI98|HF558F0C8
F558F0C8:lI47|HF558F1B0
F558F1B0:lI101|HF558F298
F558F298:lI114|HF558F380
F558F380:lI108|HF558F468
F558F468:lI97|HF558F550
F558F550:lI110|HF558F638
F558F638:lI103|HF558F720
F558F720:lI47|HF558F808
F558F808:lI108|HF558F8F0
F558F8F0:lI105|HF558F9D8
F558F9D8:lI98|HF558FAC0
F558FAC0:lI47|HF558FBA8
F558FBA8:lI111|HF558FC90
F558FC90:lI116|HF558FD78
F558FD78:lI112|HF558FE60
F558FE60:lI95|HF558FF40
F558FF40:lI109|HF5590020
F5590020:lI105|HF5590100
F5590100:lI98|HF55901E0
F55901E0:lI115|HF55902C0
F55902C0:lI45|HF55903A0
F55903A0:lI49|HF5590478
F5590478:lI46|HF5590540
F5590540:lI48|HF5590608
F5590608:lI46|HF55906C0
F55906C0:lI52|HF5590758
F5590758:lI46|HF55907E0
F55907E0:lI49|HF5590858
F5590858:lI47|H73EFAA68
F5590C9C:lHF558EA68|HF5590CB4
F558EA68:lI47|HF558EB10
F558EB10:lI117|HF558EBC8
F558EBC8:lI115|HF558EC88
F558EC88:lI114|HF558ED50
F558ED50:lI47|HF558EE20
F558EE20:lI108|HF558EEF8
F558EEF8:lI105|HF558EFD8
F558EFD8:lI98|HF558F0C0
F558F0C0:lI47|HF558F1A8
F558F1A8:lI101|HF558F290
F558F290:lI114|HF558F378
F558F378:lI108|HF558F460
F558F460:lI97|HF558F548
F558F548:lI110|HF558F630
F558F630:lI103|HF558F718
F558F718:lI47|HF558F800
F558F800:lI108|HF558F8E8
F558F8E8:lI105|HF558F9D0
F558F9D0:lI98|HF558FAB8
F558FAB8:lI47|HF558FBA0
F558FBA0:lI111|HF558FC88
F558FC88:lI115|HF558FD70
F558FD70:lI95|HF558FE58
F558FE58:lI109|HF558FF38
F558FF38:lI111|HF5590018
F5590018:lI110|HF55900F8
F55900F8:lI45|HF55901D8
F55901D8:lI50|HF55902B8
F55902B8:lI46|HF5590398
F5590398:lI49|HF5590470
F5590470:lI46|HF5590538
F5590538:lI56|HF5590600
F5590600:lI47|H73EFAA68
F5590CB4:lHF558EB00|HF5590CCC
F558EB00:lI47|HF558EBB0
F558EBB0:lI117|HF558EC68
F558EC68:lI115|HF558ED28
F558ED28:lI114|HF558EDF0
F558EDF0:lI47|HF558EEC0
F558EEC0:lI108|HF558EF98
F558EF98:lI105|HF558F078
F558F078:lI98|HF558F160
F558F160:lI47|HF558F248
F558F248:lI101|HF558F330
F558F330:lI114|HF558F418
F558F418:lI108|HF558F500
F558F500:lI97|HF558F5E8
F558F5E8:lI110|HF558F6D0
F558F6D0:lI103|HF558F7B8
F558F7B8:lI47|HF558F8A0
F558F8A0:lI108|HF558F988
F558F988:lI105|HF558FA70
F558FA70:lI98|HF558FB58
F558FB58:lI47|HF558FC40
F558FC40:lI111|HF558FD28
F558FD28:lI114|HF558FE10
F558FE10:lI98|HF558FEF8
F558FEF8:lI101|HF558FFD8
F558FFD8:lI114|HF55900B8
F55900B8:lI45|HF5590198
F5590198:lI51|HF5590278
F5590278:lI46|HF5590358
F5590358:lI54|HF5590430
F5590430:lI46|HF55904F8
F55904F8:lI49|HF55905C0
F55905C0:lI48|HF5590680
F5590680:lI47|H73EFAA68
F5590CCC:lHF558EBB8|HF5590CE4
F558EBB8:lI47|HF558EC70
F558EC70:lI117|HF558ED30
F558ED30:lI115|HF558EDF8
F558EDF8:lI114|HF558EEC8
F558EEC8:lI47|HF558EFA0
F558EFA0:lI108|HF558F080
F558F080:lI105|HF558F168
F558F168:lI98|HF558F250
F558F250:lI47|HF558F338
F558F338:lI101|HF558F420
F558F420:lI114|HF558F508
F558F508:lI108|HF558F5F0
F558F5F0:lI97|HF558F6D8
F558F6D8:lI110|HF558F7C0
F558F7C0:lI103|HF558F8A8
F558F8A8:lI47|HF558F990
F558F990:lI108|HF558FA78
F558FA78:lI105|HF558FB60
F558FB60:lI98|HF558FC48
F558FC48:lI47|HF558FD30
F558FD30:lI111|HF558FE18
F558FE18:lI100|HF558FF00
F558FF00:lI98|HF558FFE0
F558FFE0:lI99|HF55900C0
F55900C0:lI45|HF55901A0
F55901A0:lI50|HF5590280
F5590280:lI46|HF5590360
F5590360:lI49|HF5590438
F5590438:lI48|HF5590500
F5590500:lI46|HF55905C8
F55905C8:lI51|HF5590688
F5590688:lI47|H73EFAA68
F5590CE4:lHF558EC78|HF5590CFC
F558EC78:lI47|HF558ED38
F558ED38:lI117|HF558EE00
F558EE00:lI115|HF558EED0
F558EED0:lI114|HF558EFA8
F558EFA8:lI47|HF558F088
F558F088:lI108|HF558F170
F558F170:lI105|HF558F258
F558F258:lI98|HF558F340
F558F340:lI47|HF558F428
F558F428:lI101|HF558F510
F558F510:lI114|HF558F5F8
F558F5F8:lI108|HF558F6E0
F558F6E0:lI97|HF558F7C8
F558F7C8:lI110|HF558F8B0
F558F8B0:lI103|HF558F998
F558F998:lI47|HF558FA80
F558FA80:lI108|HF558FB68
F558FB68:lI105|HF558FC50
F558FC50:lI98|HF558FD38
F558FD38:lI47|HF558FE20
F558FE20:lI109|HF558FF08
F558FF08:lI110|HF558FFE8
F558FFE8:lI101|HF55900C8
F55900C8:lI115|HF55901A8
F55901A8:lI105|HF5590288
F5590288:lI97|HF5590368
F5590368:lI45|HF5590440
F5590440:lI52|HF5590508
F5590508:lI46|HF55905D0
F55905D0:lI52|HF5590690
F5590690:lI46|HF5590728
F5590728:lI55|HF55907B0
F55907B0:lI47|H73EFAA68
F5590CFC:lHF558ED40|HF5590D14
F558ED40:lI47|HF558EE08
F558EE08:lI117|HF558EED8
F558EED8:lI115|HF558EFB0
F558EFB0:lI114|HF558F090
F558F090:lI47|HF558F178
F558F178:lI108|HF558F260
F558F260:lI105|HF558F348
F558F348:lI98|HF558F430
F558F430:lI47|HF558F518
F558F518:lI101|HF558F600
F558F600:lI114|HF558F6E8
F558F6E8:lI108|HF558F7D0
F558F7D0:lI97|HF558F8B8
F558F8B8:lI110|HF558F9A0
F558F9A0:lI103|HF558FA88
F558FA88:lI47|HF558FB70
F558FB70:lI108|HF558FC58
F558FC58:lI105|HF558FD40
F558FD40:lI98|HF558FE28
F558FE28:lI47|HF558FF10
F558FF10:lI109|HF558FFF0
F558FFF0:lI101|HF55900D0
F55900D0:lI103|HF55901B0
F55901B0:lI97|HF5590290
F5590290:lI99|HF5590370
F5590370:lI111|HF5590448
F5590448:lI45|HF5590510
F5590510:lI51|HF55905D8
F55905D8:lI46|HF5590698
F5590698:lI57|HF5590730
F5590730:lI46|HF55907B8
F55907B8:lI49|HF5590830
F5590830:lI46|HF55908A0
F55908A0:lI49|HF55908F0
F55908F0:lI47|H73EFAA68
F5590D14:lHF558EEE8|HF5590D2C
F558EEE8:lI47|HF558EFC0
F558EFC0:lI117|HF558F0A0
F558F0A0:lI115|HF558F188
F558F188:lI114|HF558F270
F558F270:lI47|HF558F358
F558F358:lI108|HF558F440
F558F440:lI105|HF558F528
F558F528:lI98|HF558F610
F558F610:lI47|HF558F6F8
F558F6F8:lI101|HF558F7E0
F558F7E0:lI114|HF558F8C8
F558F8C8:lI108|HF558F9B0
F558F9B0:lI97|HF558FA98
F558FA98:lI110|HF558FB80
F558FB80:lI103|HF558FC68
F558FC68:lI47|HF558FD50
F558FD50:lI108|HF558FE38
F558FE38:lI105|HF558FF20
F558FF20:lI98|HF5590000
F5590000:lI47|HF55900E0
F55900E0:lI105|HF55901C0
F55901C0:lI110|HF55902A0
F55902A0:lI118|HF5590380
F5590380:lI105|HF5590458
F5590458:lI115|HF5590520
F5590520:lI111|HF55905E8
F55905E8:lI45|HF55906A8
F55906A8:lI48|HF5590740
F5590740:lI46|HF55907C8
F55907C8:lI54|HF5590840
F5590840:lI47|H73EFAA68
F5590D2C:lHF558EFC8|HF5590D44
F558EFC8:lI47|HF558F0A8
F558F0A8:lI117|HF558F190
F558F190:lI115|HF558F278
F558F278:lI114|HF558F360
F558F360:lI47|HF558F448
F558F448:lI108|HF558F530
F558F530:lI105|HF558F618
F558F618:lI98|HF558F700
F558F700:lI47|HF558F7E8
F558F7E8:lI101|HF558F8D0
F558F8D0:lI114|HF558F9B8
F558F9B8:lI108|HF558FAA0
F558FAA0:lI97|HF558FB88
F558FB88:lI110|HF558FC70
F558FC70:lI103|HF558FD58
F558FD58:lI47|HF558FE40
F558FE40:lI108|HF558FF28
F558FF28:lI105|HF5590008
F5590008:lI98|HF55900E8
F55900E8:lI47|HF55901C8
F55901C8:lI105|HF55902A8
F55902A8:lI110|HF5590388
F5590388:lI101|HF5590460
F5590460:lI116|HF5590528
F5590528:lI115|HF55905F0
F55905F0:lI45|HF55906B0
F55906B0:lI53|HF5590748
F5590748:lI46|HF55907D0
F55907D0:lI48|HF5590848
F5590848:lI46|HF55908B0
F55908B0:lI49|HF5590900
F5590900:lI50|HF5590930
F5590930:lI47|H73EFAA68
F5590D44:lHF558F0B0|HF5590D5C
F558F0B0:lI47|HF558F198
F558F198:lI117|HF558F280
F558F280:lI115|HF558F368
F558F368:lI114|HF558F450
F558F450:lI47|HF558F538
F558F538:lI108|HF558F620
F558F620:lI105|HF558F708
F558F708:lI98|HF558F7F0
F558F7F0:lI47|HF558F8D8
F558F8D8:lI101|HF558F9C0
F558F9C0:lI114|HF558FAA8
F558FAA8:lI108|HF558FB90
F558FB90:lI97|HF558FC78
F558FC78:lI110|HF558FD60
F558FD60:lI103|HF558FE48
F558FE48:lI47|HF558FF30
F558FF30:lI108|HF5590010
F5590010:lI105|HF55900F0
F55900F0:lI98|HF55901D0
F55901D0:lI47|HF55902B0
F55902B0:lI105|HF5590390
F5590390:lI99|HF5590468
F5590468:lI45|HF5590530
F5590530:lI52|HF55905F8
F55905F8:lI46|HF55906B8
F55906B8:lI50|HF5590750
F5590750:lI46|HF55907D8
F55907D8:lI49|HF5590850
F5590850:lI57|HF55908B8
F55908B8:lI47|H73EFAA68
F5590D5C:lHF558D7A0|HF5590D74
F558D7A0:lI47|HF558D7C0
F558D7C0:lI117|HF558D7E8
F558D7E8:lI115|HF558D818
F558D818:lI114|HF558D850
F558D850:lI47|HF558D890
F558D890:lI108|HF558D8D8
F558D8D8:lI105|HF558D920
F558D920:lI98|HF558D970
F558D970:lI47|HF558D9C8
F558D9C8:lI101|HF558DA28
F558DA28:lI114|HF558DA90
F558DA90:lI108|HF558DB00
F558DB00:lI97|HF558DB78
F558DB78:lI110|HF558DBF8
F558DBF8:lI103|HF558DC78
F558DC78:lI47|HF558DCF8
F558DCF8:lI108|HF558DD78
F558DD78:lI105|HF558DDF8
F558DDF8:lI98|HF558DE78
F558DE78:lI47|HF558DEF8
F558DEF8:lI104|HF558DF78
F558DF78:lI105|HF558DFF8
F558DFF8:lI112|HF558E070
F558E070:lI101|HF558E0E8
F558E0E8:lI45|HF558E160
F558E160:lI51|HF558E1D8
F558E1D8:lI46|HF558E250
F558E250:lI54|HF558E2C8
F558E2C8:lI46|HF558E340
F558E340:lI57|HF558E3B8
F558E3B8:lI47|H73EFAA68
F5590D74:lHF558D7C8|HF5590D8C
F558D7C8:lI47|HF558D7F0
F558D7F0:lI117|HF558D820
F558D820:lI115|HF558D858
F558D858:lI114|HF558D898
F558D898:lI47|HF558D8E0
F558D8E0:lI108|HF558D928
F558D928:lI105|HF558D978
F558D978:lI98|HF558D9D0
F558D9D0:lI47|HF558DA30
F558DA30:lI101|HF558DA98
F558DA98:lI114|HF558DB08
F558DB08:lI108|HF558DB80
F558DB80:lI97|HF558DC00
F558DC00:lI110|HF558DC80
F558DC80:lI103|HF558DD00
F558DD00:lI47|HF558DD80
F558DD80:lI108|HF558DE00
F558DE00:lI105|HF558DE80
F558DE80:lI98|HF558DF00
F558DF00:lI47|HF558DF80
F558DF80:lI101|HF558E000
F558E000:lI117|HF558E078
F558E078:lI110|HF558E0F0
F558E0F0:lI105|HF558E168
F558E168:lI116|HF558E1E0
F558E1E0:lI45|HF558E258
F558E258:lI50|HF558E2D0
F558E2D0:lI46|HF558E348
F558E348:lI48|HF558E3C0
F558E3C0:lI47|H73EFAA68
F5590D8C:lHF558D7F8|HF5590DA4
F558D7F8:lI47|HF558D828
F558D828:lI117|HF558D860
F558D860:lI115|HF558D8A0
F558D8A0:lI114|HF558D8E8
F558D8E8:lI47|HF558D930
F558D930:lI108|HF558D980
F558D980:lI105|HF558D9D8
F558D9D8:lI98|HF558DA38
F558DA38:lI47|HF558DAA0
F558DAA0:lI101|HF558DB10
F558DB10:lI114|HF558DB88
F558DB88:lI108|HF558DC08
F558DC08:lI97|HF558DC88
F558DC88:lI110|HF558DD08
F558DD08:lI103|HF558DD88
F558DD88:lI47|HF558DE08
F558DE08:lI108|HF558DE88
F558DE88:lI105|HF558DF08
F558DF08:lI98|HF558DF88
F558DF88:lI47|HF558C628
F558C628:lI101|HF558C770
F558C770:lI114|HF558C8B8
F558C8B8:lI108|HF558CA00
F558CA00:lI95|HF558CB48
F558CB48:lI105|HF558CC90
F558CC90:lI110|HF558CDD8
F558CDD8:lI116|HF558CF20
F558CF20:lI101|HF558D068
F558D068:lI114|HF558D1A8
F558D1A8:lI102|HF558D2C0
F558D2C0:lI97|HF558D3C8
F558D3C8:lI99|HF558D4B0
F558D4B0:lI101|HF558D560
F558D560:lI45|HF558D5E8
F558D5E8:lI51|HF558D660
F558D660:lI46|HF558D6C8
F558D6C8:lI53|HF558D710
F558D710:lI46|HF558D748
F558D748:lI57|N
F5590DA4:lHF558D830|HF5590DBC
F558D830:lI47|HF558D868
F558D868:lI117|HF558D8A8
F558D8A8:lI115|HF558D8F0
F558D8F0:lI114|HF558D938
F558D938:lI47|HF558D988
F558D988:lI108|HF558D9E0
F558D9E0:lI105|HF558DA40
F558DA40:lI98|HF558DAA8
F558DAA8:lI47|HF558DB18
F558DB18:lI101|HF558DB90
F558DB90:lI114|HF558DC10
F558DC10:lI108|HF558DC90
F558DC90:lI97|HF558DD10
F558DD10:lI110|HF558DD90
F558DD90:lI103|HF558DE10
F558DE10:lI47|HF558DE90
F558DE90:lI108|HF558DF10
F558DF10:lI105|HF558DF90
F558DF90:lI98|HF558E008
F558E008:lI47|HF558E080
F558E080:lI101|HF558E0F8
F558E0F8:lI100|HF558E170
F558E170:lI111|HF558E1E8
F558E1E8:lI99|HF558E260
F558E260:lI45|HF558E2D8
F558E2D8:lI48|HF558E350
F558E350:lI46|HF558E3C8
F558E3C8:lI55|HF558E430
F558E430:lI46|HF558E498
F558E498:lI54|HF558E500
F558E500:lI46|HF558E568
F558E568:lI50|HF558E5D0
F558E5D0:lI47|H73EFAA68
F5590DBC:lHF558D870|HF5590DD4
F558D870:lI47|HF558D8B0
F558D8B0:lI117|HF558D8F8
F558D8F8:lI115|HF558D940
F558D940:lI114|HF558D990
F558D990:lI47|HF558D9E8
F558D9E8:lI108|HF558DA48
F558DA48:lI105|HF558DAB0
F558DAB0:lI98|HF558DB20
F558DB20:lI47|HF558DB98
F558DB98:lI101|HF558DC18
F558DC18:lI114|HF558DC98
F558DC98:lI108|HF558DD18
F558DD18:lI97|HF558DD98
F558DD98:lI110|HF558DE18
F558DE18:lI103|HF558DE98
F558DE98:lI47|HF558DF18
F558DF18:lI108|HF558DF98
F558DF98:lI105|HF558E010
F558E010:lI98|HF558E088
F558E088:lI47|HF558E100
F558E100:lI100|HF558E178
F558E178:lI111|HF558E1F0
F558E1F0:lI99|HF558E268
F558E268:lI98|HF558E2E0
F558E2E0:lI117|HF558E358
F558E358:lI105|HF558E3D0
F558E3D0:lI108|HF558E438
F558E438:lI100|HF558E4A0
F558E4A0:lI101|HF558E508
F558E508:lI114|HF558E570
F558E570:lI45|HF558E5D8
F558E5D8:lI48|HF558E638
F558E638:lI46|HF558E698
F558E698:lI57|HF558E6F8
F558E6F8:lI46|HF558E750
F558E750:lI56|HF558E7A8
F558E7A8:lI46|HF558E800
F558E800:lI52|HF558E850
F558E850:lI47|H73EFAA68
F5590DD4:lHF558D8B8|HF5590DEC
F558D8B8:lI47|HF558D900
F558D900:lI117|HF558D948
F558D948:lI115|HF558D998
F558D998:lI114|HF558D9F0
F558D9F0:lI47|HF558DA50
F558DA50:lI108|HF558DAB8
F558DAB8:lI105|HF558DB28
F558DB28:lI98|HF558DBA0
F558DBA0:lI47|HF558DC20
F558DC20:lI101|HF558DCA0
F558DCA0:lI114|HF558DD20
F558DD20:lI108|HF558DDA0
F558DDA0:lI97|HF558DE20
F558DE20:lI110|HF558DEA0
F558DEA0:lI103|HF558DF20
F558DF20:lI47|HF558DFA0
F558DFA0:lI108|HF558E018
F558E018:lI105|HF558E090
F558E090:lI98|HF558E108
F558E108:lI47|HF558E180
F558E180:lI99|HF558E1F8
F558E1F8:lI114|HF558E270
F558E270:lI121|HF558E2E8
F558E2E8:lI112|HF558E360
F558E360:lI116|HF558E3D8
F558E3D8:lI111|HF558E440
F558E440:lI45|HF558E4A8
F558E4A8:lI49|HF558E510
F558E510:lI46|HF558E578
F558E578:lI53|HF558E5E0
F558E5E0:lI46|HF558E640
F558E640:lI51|HF558E6A0
F558E6A0:lI47|H73EFAA68
F5590DEC:lHF558D908|HF5590E04
F558D908:lI47|HF558D950
F558D950:lI117|HF558D9A0
F558D9A0:lI115|HF558D9F8
F558D9F8:lI114|HF558DA58
F558DA58:lI47|HF558DAC0
F558DAC0:lI108|HF558DB30
F558DB30:lI105|HF558DBA8
F558DBA8:lI98|HF558DC28
F558DC28:lI47|HF558DCA8
F558DCA8:lI101|HF558DD28
F558DD28:lI114|HF558DDA8
F558DDA8:lI108|HF558DE28
F558DE28:lI97|HF558DEA8
F558DEA8:lI110|HF558DF28
F558DF28:lI103|HF558DFA8
F558DFA8:lI47|HF558E020
F558E020:lI108|HF558E098
F558E098:lI105|HF558E110
F558E110:lI98|HF558E188
F558E188:lI47|HF558E200
F558E200:lI99|HF558E278
F558E278:lI111|HF558E2F0
F558E2F0:lI115|HF558E368
F558E368:lI84|HF558E3E0
F558E3E0:lI114|HF558E448
F558E448:lI97|HF558E4B0
F558E4B0:lI110|HF558E518
F558E518:lI115|HF558E580
F558E580:lI97|HF558E5E8
F558E5E8:lI99|HF558E648
F558E648:lI116|HF558E6A8
F558E6A8:lI105|HF558E700
F558E700:lI111|HF558E758
F558E758:lI110|HF558E7B0
F558E7B0:lI115|HF558E808
F558E808:lI45|HF558E858
F558E858:lI49|HF558E8A0
F558E8A0:lI46|HF558E8E8
F558E8E8:lI50|HF558E930
F558E930:lI46|HF558E978
F558E978:lI53|HF558E9B0
F558E9B0:lI47|H73EFAA68
F5590E04:lHF558D958|HF5590E1C
F558D958:lI47|HF558D9A8
F558D9A8:lI117|HF558DA00
F558DA00:lI115|HF558DA60
F558DA60:lI114|HF558DAC8
F558DAC8:lI47|HF558DB38
F558DB38:lI108|HF558DBB0
F558DBB0:lI105|HF558DC30
F558DC30:lI98|HF558DCB0
F558DCB0:lI47|HF558DD30
F558DD30:lI101|HF558DDB0
F558DDB0:lI114|HF558DE30
F558DE30:lI108|HF558DEB0
F558DEB0:lI97|HF558DF30
F558DF30:lI110|HF558DFB0
F558DFB0:lI103|HF558E028
F558E028:lI47|HF558E0A0
F558E0A0:lI108|HF558E118
F558E118:lI105|HF558E190
F558E190:lI98|HF558E208
F558E208:lI47|HF558E280
F558E280:lI99|HF558E2F8
F558E2F8:lI111|HF558E370
F558E370:lI115|HF558E3E8
F558E3E8:lI84|HF558E450
F558E450:lI105|HF558E4B8
F558E4B8:lI109|HF558E520
F558E520:lI101|HF558E588
F558E588:lI45|HF558E5F0
F558E5F0:lI49|HF558E650
F558E650:lI46|HF558E6B0
F558E6B0:lI49|HF558E708
F558E708:lI46|HF558E760
F558E760:lI52|HF558E7B8
F558E7B8:lI47|H73EFAA68
F5590E1C:lHF558D9B0|HF5590E34
F558D9B0:lI47|HF558DA08
F558DA08:lI117|HF558DA68
F558DA68:lI115|HF558DAD0
F558DAD0:lI114|HF558DB40
F558DB40:lI47|HF558DBB8
F558DBB8:lI108|HF558DC38
F558DC38:lI105|HF558DCB8
F558DCB8:lI98|HF558DD38
F558DD38:lI47|HF558DDB8
F558DDB8:lI101|HF558DE38
F558DE38:lI114|HF558DEB8
F558DEB8:lI108|HF558DF38
F558DF38:lI97|HF558DFB8
F558DFB8:lI110|HF558E030
F558E030:lI103|HF558E0A8
F558E0A8:lI47|HF558E120
F558E120:lI108|HF558E198
F558E198:lI105|HF558E210
F558E210:lI98|HF558E288
F558E288:lI47|HF558E300
F558E300:lI99|HF558E378
F558E378:lI111|HF558E3F0
F558E3F0:lI115|HF558E458
F558E458:lI80|HF558E4C0
F558E4C0:lI114|HF558E528
F558E528:lI111|HF558E590
F558E590:lI112|HF558E5F8
F558E5F8:lI101|HF558E658
F558E658:lI114|HF558E6B8
F558E6B8:lI116|HF558E710
F558E710:lI121|HF558E768
F558E768:lI45|HF558E7C0
F558E7C0:lI49|HF558E810
F558E810:lI46|HF558E860
F558E860:lI49|HF558E8A8
F558E8A8:lI46|HF558E8F0
F558E8F0:lI55|HF558E938
F558E938:lI47|H73EFAA68
F5590E34:lHF558DA10|HF5590E44
F558DA10:lI47|HF558DA70
F558DA70:lI117|HF558DAD8
F558DAD8:lI115|HF558DB48
F558DB48:lI114|HF558DBC0
F558DBC0:lI47|HF558DC40
F558DC40:lI108|HF558DCC0
F558DCC0:lI105|HF558DD40
F558DD40:lI98|HF558DDC0
F558DDC0:lI47|HF558DE40
F558DE40:lI101|HF558DEC0
F558DEC0:lI114|HF558DF40
F558DF40:lI108|HF558DFC0
F558DFC0:lI97|HF558E038
F558E038:lI110|HF558E0B0
F558E0B0:lI103|HF558E128
F558E128:lI47|HF558E1A0
F558E1A0:lI108|HF558E218
F558E218:lI105|HF558E290
F558E290:lI98|HF558E308
F558E308:lI47|HF558E380
F558E380:lI99|HF558E3F8
F558E3F8:lI111|HF558E460
F558E460:lI115|HF558E4C8
F558E4C8:lI78|HF558E530
F558E530:lI111|HF558E598
F558E598:lI116|HF558E600
F558E600:lI105|HF558E660
F558E660:lI102|HF558E6C0
F558E6C0:lI105|HF558E718
F558E718:lI99|HF558E770
F558E770:lI97|HF558E7C8
F558E7C8:lI116|HF558E818
F558E818:lI105|HF558E868
F558E868:lI111|HF558E8B0
F558E8B0:lI110|HF558E8F8
F558E8F8:lI45|HF558E940
F558E940:lI49|HF558E980
F558E980:lI46|HF558E9B8
F558E9B8:lI49|HF558E9E0
F558E9E0:lI46|HF558EA00
F558EA00:lI57|HF558EA20
F558EA20:lI47|H73EFAA68
F5590E44:lHF558DA78|HF5590E54
F558DA78:lI47|HF558DAE0
F558DAE0:lI117|HF558DB50
F558DB50:lI115|HF558DBC8
F558DBC8:lI114|HF558DC48
F558DC48:lI47|HF558DCC8
F558DCC8:lI108|HF558DD48
F558DD48:lI105|HF558DDC8
F558DDC8:lI98|HF558DE48
F558DE48:lI47|HF558DEC8
F558DEC8:lI101|HF558DF48
F558DF48:lI114|HF558DFC8
F558DFC8:lI108|HF558E040
F558E040:lI97|HF558E0B8
F558E0B8:lI110|HF558E130
F558E130:lI103|HF558E1A8
F558E1A8:lI47|HF558E220
F558E220:lI108|HF558E298
F558E298:lI105|HF558E310
F558E310:lI98|HF558E388
F558E388:lI47|HF558E400
F558E400:lI99|HF558E468
F558E468:lI111|HF558E4D0
F558E4D0:lI115|HF558E538
F558E538:lI70|HF558E5A0
F558E5A0:lI105|HF558E608
F558E608:lI108|HF558E668
F558E668:lI101|HF558E6C8
F558E6C8:lI84|HF558E720
F558E720:lI114|HF558E778
F558E778:lI97|HF558E7D0
F558E7D0:lI110|HF558E820
F558E820:lI115|HF558E870
F558E870:lI102|HF558E8B8
F558E8B8:lI101|HF558E900
F558E900:lI114|HF558E948
F558E948:lI45|HF558E988
F558E988:lI49|HF558E9C0
F558E9C0:lI46|HF558E9E8
F558E9E8:lI49|HF558EA08
F558EA08:lI46|HF558EA28
F558EA28:lI54|HF558EA40
F558EA40:lI47|H73EFAA68
F5590E54:lHF558DAE8|HF5590E64
F558DAE8:lI47|HF558DB58
F558DB58:lI117|HF558DBD0
F558DBD0:lI115|HF558DC50
F558DC50:lI114|HF558DCD0
F558DCD0:lI47|HF558DD50
F558DD50:lI108|HF558DDD0
F558DDD0:lI105|HF558DE50
F558DE50:lI98|HF558DED0
F558DED0:lI47|HF558DF50
F558DF50:lI101|HF558DFD0
F558DFD0:lI114|HF558E048
F558E048:lI108|HF558E0C0
F558E0C0:lI97|HF558E138
F558E138:lI110|HF558E1B0
F558E1B0:lI103|HF558E228
F558E228:lI47|HF558E2A0
F558E2A0:lI108|HF558E318
F558E318:lI105|HF558E390
F558E390:lI98|HF558E408
F558E408:lI47|HF558E470
F558E470:lI99|HF558E4D8
F558E4D8:lI111|HF558E540
F558E540:lI115|HF558E5A8
F558E5A8:lI69|HF558E610
F558E610:lI118|HF558E670
F558E670:lI101|HF558E6D0
F558E6D0:lI110|HF558E728
F558E728:lI116|HF558E780
F558E780:lI68|HF558E7D8
F558E7D8:lI111|HF558E828
F558E828:lI109|HF558E878
F558E878:lI97|HF558E8C0
F558E8C0:lI105|HF558E908
F558E908:lI110|HF558E950
F558E950:lI45|HF558E990
F558E990:lI49|HF558E9C8
F558E9C8:lI46|HF558E9F0
F558E9F0:lI49|HF558EA10
F558EA10:lI46|HF558EA30
F558EA30:lI52|HF558EA48
F558EA48:lI47|H73EFAA68
F5590E64:lHF558DB60|HF5590E74
F558DB60:lI47|HF558DBD8
F558DBD8:lI117|HF558DC58
F558DC58:lI115|HF558DCD8
F558DCD8:lI114|HF558DD58
F558DD58:lI47|HF558DDD8
F558DDD8:lI108|HF558DE58
F558DE58:lI105|HF558DED8
F558DED8:lI98|HF558DF58
F558DF58:lI47|HF558DFD8
F558DFD8:lI101|HF558E050
F558E050:lI114|HF558E0C8
F558E0C8:lI108|HF558E140
F558E140:lI97|HF558E1B8
F558E1B8:lI110|HF558E230
F558E230:lI103|HF558E2A8
F558E2A8:lI47|HF558E320
F558E320:lI108|HF558E398
F558E398:lI105|HF558E410
F558E410:lI98|HF558E478
F558E478:lI47|HF558E4E0
F558E4E0:lI99|HF558E548
F558E548:lI111|HF558E5B0
F558E5B0:lI115|HF558E618
F558E618:lI69|HF558E678
F558E678:lI118|HF558E6D8
F558E6D8:lI101|HF558E730
F558E730:lI110|HF558E788
F558E788:lI116|HF558E7E0
F558E7E0:lI45|HF558E830
F558E830:lI50|HF558E880
F558E880:lI46|HF558E8C8
F558E8C8:lI49|HF558E910
F558E910:lI46|HF558E958
F558E958:lI52|HF558E998
F558E998:lI47|H73EFAA68
F5590E74:lHF558DBE0|HF5590E84
F558DBE0:lI47|HF558DC60
F558DC60:lI117|HF558DCE0
F558DCE0:lI115|HF558DD60
F558DD60:lI114|HF558DDE0
F558DDE0:lI47|HF558DE60
F558DE60:lI108|HF558DEE0
F558DEE0:lI105|HF558DF60
F558DF60:lI98|HF558DFE0
F558DFE0:lI47|HF558E058
F558E058:lI101|HF558E0D0
F558E0D0:lI114|HF558E148
F558E148:lI108|HF558E1C0
F558E1C0:lI97|HF558E238
F558E238:lI110|HF558E2B0
F558E2B0:lI103|HF558E328
F558E328:lI47|HF558E3A0
F558E3A0:lI108|HF558E418
F558E418:lI105|HF558E480
F558E480:lI98|HF558E4E8
F558E4E8:lI47|HF558E550
F558E550:lI99|HF558E5B8
F558E5B8:lI111|HF558E620
F558E620:lI109|HF558E680
F558E680:lI112|HF558E6E0
F558E6E0:lI105|HF558E738
F558E738:lI108|HF558E790
F558E790:lI101|HF558E7E8
F558E7E8:lI114|HF558E838
F558E838:lI45|HF558E888
F558E888:lI52|HF558E8D0
F558E8D0:lI46|HF558E918
F558E918:lI53|HF558E960
F558E960:lI46|HF558E9A0
F558E9A0:lI53|HF558E9D0
F558E9D0:lI47|H73EFAA68
F5590E84:lHF558DC68|HF5590E94
F558DC68:lI47|HF558DCE8
F558DCE8:lI117|HF558DD68
F558DD68:lI115|HF558DDE8
F558DDE8:lI114|HF558DE68
F558DE68:lI47|HF558DEE8
F558DEE8:lI108|HF558DF68
F558DF68:lI105|HF558DFE8
F558DFE8:lI98|HF558E060
F558E060:lI47|HF558E0D8
F558E0D8:lI101|HF558E150
F558E150:lI114|HF558E1C8
F558E1C8:lI108|HF558E240
F558E240:lI97|HF558E2B8
F558E2B8:lI110|HF558E330
F558E330:lI103|HF558E3A8
F558E3A8:lI47|HF558E420
F558E420:lI108|HF558E488
F558E488:lI105|HF558E4F0
F558E4F0:lI98|HF558E558
F558E558:lI47|HF558E5C0
F558E5C0:lI99|HF558E628
F558E628:lI111|HF558E688
F558E688:lI109|HF558E6E8
F558E6E8:lI109|HF558E740
F558E740:lI111|HF558E798
F558E798:lI110|HF558E7F0
F558E7F0:lI95|HF558E840
F558E840:lI116|HF558E890
F558E890:lI101|HF558E8D8
F558E8D8:lI115|HF558E920
F558E920:lI116|HF558E968
F558E968:lI45|HF558E9A8
F558E9A8:lI49|HF558E9D8
F558E9D8:lI46|HF558E9F8
F558E9F8:lI51|HF558EA18
F558EA18:lI46|HF558EA38
F558EA38:lI52|HF558EA50
F558EA50:lI47|H73EFAA68
F5590E94:lHF558DCF0|N
F558DCF0:lI47|HF558DD70
F558DD70:lI117|HF558DDF0
F558DDF0:lI115|HF558DE70
F558DE70:lI114|HF558DEF0
F558DEF0:lI47|HF558DF70
F558DF70:lI108|HF558DFF0
F558DFF0:lI105|HF558E068
F558E068:lI98|HF558E0E0
F558E0E0:lI47|HF558E158
F558E158:lI101|HF558E1D0
F558E1D0:lI114|HF558E248
F558E248:lI108|HF558E2C0
F558E2C0:lI97|HF558E338
F558E338:lI110|HF558E3B0
F558E3B0:lI103|HF558E428
F558E428:lI47|HF558E490
F558E490:lI108|HF558E4F8
F558E4F8:lI105|HF558E560
F558E560:lI98|HF558E5C8
F558E5C8:lI47|HF558E630
F558E630:lI97|HF558E690
F558E690:lI115|HF558E6F0
F558E6F0:lI110|HF558E748
F558E748:lI49|HF558E7A0
F558E7A0:lI45|HF558E7F8
F558E7F8:lI49|HF558E848
F558E848:lI46|HF558E898
F558E898:lI54|HF558E8E0
F558E8E0:lI46|HF558E928
F558E928:lI50|HF558E970
F558E970:lI47|H73EFAA68
F558C530:lI47|HF558C548
F558C548:lI117|HF558C550
F558C550:lI115|HF558C558
F558C558:lI114|HF558C560
F558C560:lI47|HF558C568
F558C568:lI108|HF558C570
F558C570:lI105|HF558C578
F558C578:lI98|HF558C580
F558C580:lI47|HF558C588
F558C588:lI101|HF558C590
F558C590:lI114|HF558C598
F558C598:lI108|HF558C5A0
F558C5A0:lI97|HF558C5A8
F558C5A8:lI110|HF558C5B0
F558C5B0:lI103|N
=proc_stack:<0.27.0>
0xf5632bc8:SReturn addr 0x1CC8E0 (<terminate process normally>)
y0:N
y1:HF55AB558
y2:HF55AB550
y3:H73EFF6D4
y4:A6:hidden
y5:AB:rabbit at mail
y6:HF5632718
y7:p<0.210>
y8:A18:rabbitmq_multi11504 at mail
y9:P<0.21.0>
=proc_heap:<0.27.0>
F55AB558:E1E:837164000D696E65745F7463705F64697374640007676574737461746101
F55AB550:E1B:837164000D696E65745F7463705F646973746400047469636B6101
73EFF6D4:t5:A4:tick,I0,I0,I0,I0
F5632718:t5:AB:net_address,HF5632618,HF5632700,A3:tcp,A4:inet
F5632700:lI109|HF56326F8
F56326F8:lI97|HF56326F0
F56326F0:lI105|HF56326E8
F56326E8:lI108|N
F5632618:t2:HF5632644,I56554
F5632644:t4:I124,I109,I44,I154
=proc_dictionary:<0.30.0>
HF55F1944
HF55F1950
=proc_stack:<0.30.0>
0xf55f3208:SReturn addr 0x81887014 (proc_lib:init_p_do_apply/3 + 28)
y0:N
y1:A8:infinity
y2:A11:supervisor_bridge
y3:HF55F2A5C
y4:P<0.30.0>
y5:P<0.10.0>
0xf55f3224:SReturn addr 0x1CC8E0 (<terminate process normally>)
y0:SCatch 0x81887024 (proc_lib:init_p_do_apply/3 + 44)
=proc_heap:<0.30.0>
F55F2A5C:t5:A5:state,A8:user_sup,P<0.31.0>,P<0.31.0>,HF55F1938
F55F1938:t2:P<0.30.0>,A8:user_sup
F55F1944:t2:AD:$initial_call,HF55F195C
F55F195C:t3:A11:supervisor_bridge,A8:user_sup,I1
F55F1950:t2:AA:$ancestors,HF55F196C
F55F196C:lAA:kernel_sup|HF55F1974
F55F1974:lP<0.9.0>|N
=proc_dictionary:<0.31.0>
HF57260B0
HF57260BC
=proc_stack:<0.31.0>
0xf55f91b8:SReturn addr 0x1CC8E0 (<terminate process normally>)
y0:N
y1:H73F35478
y2:p<0.358>
=proc_heap:<0.31.0>
73F35478:t2:N,N
F57260B0:t2:A5:shell,A7:noshell
F57260BC:t2:A9:read_mode,A4:list
=proc_dictionary:<0.32.0>
HF574E964
HF574E948
=proc_stack:<0.32.0>
0xf574ec60:SReturn addr 0x81887014 (proc_lib:init_p_do_apply/3 + 28)
y0:N
y1:A8:infinity
y2:AD:kernel_config
y3:N
y4:P<0.32.0>
y5:P<0.10.0>
0xf574ec7c:SReturn addr 0x1CC8E0 (<terminate process normally>)
y0:SCatch 0x81887024 (proc_lib:init_p_do_apply/3 + 44)
=proc_heap:<0.32.0>
F574E964:t2:AD:$initial_call,HF574E954
F574E954:t3:AD:kernel_config,A4:init,I1
F574E948:t2:AA:$ancestors,HF574E940
F574E940:lAA:kernel_sup|HF574E920
F574E920:lP<0.9.0>|N
=proc_dictionary:<0.33.0>
HF5635468
HF5635474
=proc_stack:<0.33.0>
0xf569f1c4:SReturn addr 0x81887014 (proc_lib:init_p_do_apply/3 + 28)
y0:N
y1:A8:infinity
y2:AA:supervisor
y3:HF569EB8C
y4:AF:kernel_safe_sup
y5:P<0.10.0>
0xf569f1e0:SReturn addr 0x1CC8E0 (<terminate process normally>)
y0:SCatch 0x81887024 (proc_lib:init_p_do_apply/3 + 44)
=proc_heap:<0.33.0>
F569EB8C:tA:A5:state,HF5635480,AB:one_for_one,HF569EB84,HF563548C,I4,I3600,N,A6:kernel,A4:safe
F563548C:t9:A4:dict,I0,I16,I16,I8,I80,I48,H818E83D4,HF56354E4
F56354E4:t1:H818E83D4
F569EB84:lHF569EB60|HF569E88C
F569EB60:t8:A5:child,P<0.95.0>,AC:timer_server,HF569E940,A9:permanent,I1000,A6:worker,HF569E950
F569E950:lA5:timer|N
F569E940:t3:A5:timer,AA:start_link,N
F569E88C:lHF569E894|HF569E8B8
F569E894:t8:A5:child,P<0.81.0>,AF:disk_log_server,HF569E8C0,A9:permanent,I2000,A6:worker,HF569E8D0
F569E8D0:lAF:disk_log_server|N
F569E8C0:t3:AF:disk_log_server,AA:start_link,N
F569E8B8:lHF569E8D8|HF56354F4
F569E8D8:t8:A5:child,P<0.80.0>,AC:disk_log_sup,HF56354FC,A9:permanent,I1000,AA:supervisor,HF563550C
F563550C:lAC:disk_log_sup|N
F56354FC:t3:AC:disk_log_sup,AA:start_link,N
F56354F4:lHF5635514|HF5635538
F5635514:t8:A5:child,P<0.47.0>,A4:dets,HF5635540,A9:permanent,I2000,A6:worker,HF5635550
F5635550:lAB:dets_server|N
F5635540:t3:AB:dets_server,AA:start_link,N
F5635538:lHF5635558|N
F5635558:t8:A5:child,P<0.46.0>,A8:dets_sup,HF56354B4,A9:permanent,I1000,AA:supervisor,HF56354C4
F56354C4:lA8:dets_sup|N
F56354B4:t3:A8:dets_sup,AA:start_link,N
F5635480:t2:A5:local,AF:kernel_safe_sup
F5635468:t2:AD:$initial_call,HF56354CC
F56354CC:t3:AA:supervisor,A6:kernel,I1
F5635474:t2:AA:$ancestors,HF56354DC
F56354DC:lAA:kernel_sup|HF56354EC
F56354EC:lP<0.9.0>|N
=proc_dictionary:<0.37.0>
HF5610520
HF5610504
=proc_stack:<0.37.0>
0xf5610750:SReturn addr 0x81887014 (proc_lib:init_p_do_apply/3 + 28)
y0:N
y1:N
y2:N
y3:N
y4:HF56105D4
y5:P<0.6.0>
0xf561076c:SReturn addr 0x1CC8E0 (<terminate process normally>)
y0:SCatch 0x81887024 (proc_lib:init_p_do_apply/3 + 44)
=proc_heap:<0.37.0>
F56105D4:t6:A5:state,P<0.38.0>,HF56103E0,N,I0,P<0.31.0>
F56103E0:t9:A9:appl_data,A4:sasl,HF56104BC,A9:undefined,HF5610408,HF561049C,N,A8:infinity,A8:infinity
F561049C:lA4:sasl|HF5610494
F5610494:lAD:alarm_handler|HF561048C
F561048C:lAF:format_lib_supp|HF5610484
F5610484:lA9:misc_supp|HF561047C
F561047C:lA8:overload|HF5610474
F5610474:lA2:rb|HF561046C
F561046C:lAE:rb_format_supp|HF5610464
F5610464:lAF:release_handler|HF561045C
F561045C:lA11:release_handler_1|HF5610454
F5610454:lA6:erlsrv|HF561044C
F561044C:lAB:sasl_report|HF5610444
F5610444:lA11:sasl_report_tty_h|HF561043C
F561043C:lA12:sasl_report_file_h|HF5610434
F5610434:lA8:systools|HF561042C
F561042C:lAD:systools_make|HF5610424
F5610424:lAB:systools_rc|HF561041C
F561041C:lAE:systools_relup|HF5610414
F5610414:lAC:systools_lib|N
F5610408:t2:A4:sasl,N
F56104BC:lA8:sasl_sup|HF56104B4
F56104B4:lAD:alarm_handler|HF56104AC
F56104AC:lA8:overload|HF56104A4
F56104A4:lAF:release_handler|N
F5610520:t2:AD:$initial_call,HF5610510
F5610510:t3:A12:application_master,A4:init,I4
F5610504:t2:AA:$ancestors,HF56104FC
F56104FC:lP<0.36.0>|N
=proc_stack:<0.38.0>
0xf55443b0:SReturn addr 0x1CC8E0 (<terminate process normally>)
y0:HF55441F0
y1:A4:sasl
y2:P<0.40.0>
y3:P<0.37.0>
=proc_heap:<0.38.0>
F55441F0:t3:A5:state,HF5544020,A9:undefined
F5544020:t2:A4:file,HF5544054
F5544054:lI47|HF554409C
F554409C:lI118|HF55440A4
F55440A4:lI97|HF55440AC
F55440AC:lI114|HF55440B4
F55440B4:lI47|HF55440BC
F55440BC:lI108|HF55440C4
F55440C4:lI111|HF55440CC
F55440CC:lI103|HF55440D4
F55440D4:lI47|HF55440DC
F55440DC:lI114|HF55440E4
F55440E4:lI97|HF55440EC
F55440EC:lI98|HF55440F4
F55440F4:lI98|HF55440FC
F55440FC:lI105|HF5544104
F5544104:lI116|HF554410C
F554410C:lI109|HF5544114
F5544114:lI113|HF554411C
F554411C:lI47|HF5544124
F5544124:lI114|HF554412C
F554412C:lI97|HF5544134
F5544134:lI98|HF554413C
F554413C:lI98|HF5544144
F5544144:lI105|HF554414C
F554414C:lI116|HF5544154
F5544154:lI45|HF554415C
F554415C:lI115|HF5544164
F5544164:lI97|HF554416C
F554416C:lI115|HF5544174
F5544174:lI108|HF554417C
F554417C:lI46|HF5544184
F5544184:lI108|HF554418C
F554418C:lI111|HF5544194
F5544194:lI103|N
=proc_dictionary:<0.40.0>
HF55CC07C
HF55CC088
=proc_stack:<0.40.0>
0xf55cc990:SReturn addr 0x81887014 (proc_lib:init_p_do_apply/3 + 28)
y0:N
y1:A8:infinity
y2:AA:supervisor
y3:HF55CC770
y4:A8:sasl_sup
y5:P<0.38.0>
0xf55cc9ac:SReturn addr 0x1CC8E0 (<terminate process normally>)
y0:SCatch 0x81887024 (proc_lib:init_p_do_apply/3 + 44)
=proc_heap:<0.40.0>
F55CC770:tA:A5:state,HF55CC020,AB:one_for_one,HF55CC75C,HF55CC094,I0,I1,N,A4:sasl,N
F55CC094:t9:A4:dict,I0,I16,I16,I8,I80,I48,H818E83D4,HF55CC0D4
F55CC0D4:t1:H818E83D4
F55CC75C:lHF55CC738|HF55CC610
F55CC738:t8:A5:child,P<0.44.0>,AF:release_handler,H73F647A8,A9:permanent,I2000,A6:worker,N
73F647A8:t3:AF:release_handler,AA:start_link,N
F55CC610:lHF55CC63C|N
F55CC63C:t8:A5:child,P<0.41.0>,AD:sasl_safe_sup,H73F64750,A9:permanent,A8:infinity,AA:supervisor,H73F64784
73F64784:lA4:sasl|N
73F64750:t3:AA:supervisor,AA:start_link,H73F64760
73F64760:lH73F64778|H73F64768
73F64778:t2:A5:local,AD:sasl_safe_sup
73F64768:lA4:sasl|H73F64770
73F64770:lA4:safe|N
F55CC020:t2:A5:local,A8:sasl_sup
F55CC07C:t2:AD:$initial_call,HF55CC0BC
F55CC0BC:t3:AA:supervisor,A4:sasl,I1
F55CC088:t2:AA:$ancestors,HF55CC0CC
F55CC0CC:lP<0.38.0>|N
=proc_dictionary:<0.41.0>
HF5588484
HF5588490
=proc_stack:<0.41.0>
0xf55889d0:SReturn addr 0x81887014 (proc_lib:init_p_do_apply/3 + 28)
y0:N
y1:A8:infinity
y2:AA:supervisor
y3:HF5588898
y4:AD:sasl_safe_sup
y5:P<0.40.0>
0xf55889ec:SReturn addr 0x1CC8E0 (<terminate process normally>)
y0:SCatch 0x81887024 (proc_lib:init_p_do_apply/3 + 44)
=proc_heap:<0.41.0>
F5588898:tA:A5:state,HF5588444,AB:one_for_one,HF5588884,HF55884C0,I4,I3600,N,A4:sasl,A4:safe
F55884C0:t9:A4:dict,I0,I16,I16,I8,I80,I48,H818E83D4,HF5588500
F5588500:t1:H818E83D4
F5588884:lHF5588860|HF5588674
F5588860:t8:A5:child,P<0.43.0>,A8:overload,H73F646E4,A9:permanent,I2000,A6:worker,H73F646F4
73F646F4:lA8:overload|N
73F646E4:t3:A8:overload,AA:start_link,N
F5588674:lHF5588650|N
F5588650:t8:A5:child,P<0.42.0>,AD:alarm_handler,H73F646B8,A9:permanent,I2000,A6:worker,A7:dynamic
73F646B8:t3:AD:alarm_handler,AA:start_link,N
F5588444:t2:A5:local,AD:sasl_safe_sup
F5588484:t2:AD:$initial_call,HF55884E8
F55884E8:t3:AA:supervisor,A4:sasl,I1
F5588490:t2:AA:$ancestors,HF55884F8
F55884F8:lA8:sasl_sup|HF5588508
F5588508:lP<0.38.0>|N
=proc_dictionary:<0.42.0>
HF55880B0
HF55880A4
=proc_stack:<0.42.0>
0xf55883a4:SReturn addr 0x81887014 (proc_lib:init_p_do_apply/3 + 28)
y0:A5:false
y1:N
y2:HF5588220
y3:AD:alarm_handler
y4:P<0.41.0>
0xf55883bc:SReturn addr 0x1CC8E0 (<terminate process normally>)
y0:SCatch 0x81887024 (proc_lib:init_p_do_apply/3 + 44)
=proc_heap:<0.42.0>
F5588220:lHF5588208|HF5588144
F5588208:t5:A7:handler,AC:rabbit_alarm,A5:false,HF55881EC,A5:false
F55881EC:t3:A6:alarms,HF55881C4,A5:false
F55881C4:t9:A4:dict,I0,I16,I16,I8,I80,I48,H818E83D4,HF55881BC
F55881BC:t1:H818E83D4
F5588144:lHF558812C|N
F558812C:t5:A7:handler,AD:alarm_handler,A5:false,N,A5:false
F55880B0:t2:AD:$initial_call,H818895D4
F55880A4:t2:AA:$ancestors,HF558809C
F558809C:lAD:sasl_safe_sup|HF558807C
F558807C:lA8:sasl_sup|HF5588074
F5588074:lP<0.38.0>|N
=proc_dictionary:<0.43.0>
HF5549550
HF5549534
=proc_stack:<0.43.0>
0xf5549830:SReturn addr 0x81887014 (proc_lib:init_p_do_apply/3 + 28)
y0:N
y1:A8:infinity
y2:A8:overload
y3:HF55495AC
y4:A8:overload
y5:P<0.41.0>
0xf554984c:SReturn addr 0x1CC8E0 (<terminate process normally>)
y0:SCatch 0x81887024 (proc_lib:init_p_do_apply/3 + 44)
=proc_heap:<0.43.0>
F55495AC:t8:A5:state,I0,I0,H73F852E4,I1119,H73F852F0,H73F85020,A5:clear
73F85020:t2:I0,I0
73F852F0:F1A:1.00000000000000005551e-01
73F852E4:F1A:8.00000000000000044409e-01
F5549550:t2:AD:$initial_call,HF5549540
F5549540:t3:A8:overload,A4:init,I1
F5549534:t2:AA:$ancestors,HF554952C
F554952C:lAD:sasl_safe_sup|HF554950C
F554950C:lA8:sasl_sup|HF5549504
F5549504:lP<0.38.0>|N
=proc_dictionary:<0.44.0>
HF55F0ED0
HF55F0EDC
=proc_stack:<0.44.0>
0xf5546880:SReturn addr 0x81887014 (proc_lib:init_p_do_apply/3 + 28)
y0:N
y1:A8:infinity
y2:AF:release_handler
y3:HF5546674
y4:AF:release_handler
y5:P<0.40.0>
0xf554689c:SReturn addr 0x1CC8E0 (<terminate process normally>)
y0:SCatch 0x81887024 (proc_lib:init_p_do_apply/3 + 44)
=proc_heap:<0.44.0>
F5546674:tB:A5:state,N,HF55F0EC8,HF55F0F78,HF5546164,A9:undefined,HF554663C,A5:false,A5:false,A5:false,N
F554663C:t2:A8:no_check,HF5546634
F5546634:lI47|HF554662C
F554662C:lI117|HF5546624
F5546624:lI115|HF554661C
F554661C:lI114|HF5546614
F5546614:lI47|HF554660C
F554660C:lI108|HF5546604
F5546604:lI105|HF55465FC
F55465FC:lI98|HF55465F4
F55465F4:lI47|HF55465EC
F55465EC:lI101|HF55465E4
F55465E4:lI114|HF55465DC
F55465DC:lI108|HF55465D4
F55465D4:lI97|HF55465CC
F55465CC:lI110|HF55465C4
F55465C4:lI103|HF55465BC
F55465BC:lI47|HF55465B4
F55465B4:lI98|HF55465AC
F55465AC:lI105|HF55465A4
F55465A4:lI110|HF554659C
F554659C:lI47|HF5546594
F5546594:lI115|HF554658C
F554658C:lI116|HF5546584
F5546584:lI97|HF554657C
F554657C:lI114|HF5546574
F5546574:lI116|N
F5546164:lHF5546030|N
F5546030:t6:A7:release,HF554597C,HF5545974,HF554596C,HF5545FF8,A9:permanent
F5545FF8:lHF5545954|HF5545FF0
F5545954:t3:A6:kernel,HF55459BC,HF55459C4
F55459C4:lI47|HF5545A34
F5545A34:lI117|HF5545A8C
F5545A8C:lI115|HF5545AF4
F5545AF4:lI114|HF5545B4C
F5545B4C:lI47|HF5545B9C
F5545B9C:lI108|HF5545BDC
F5545BDC:lI105|HF5545C18
F5545C18:lI98|HF5545C64
F5545C64:lI47|HF5545CB8
F5545CB8:lI101|HF5545D08
F5545D08:lI114|HF5545D58
F5545D58:lI108|HF5545DA0
F5545DA0:lI97|HF5545DD0
F5545DD0:lI110|HF5545DF0
F5545DF0:lI103|HF5545E08
F5545E08:lI47|HF5545E20
F5545E20:lI108|HF5545E38
F5545E38:lI105|HF5545E50
F5545E50:lI98|HF5545E68
F5545E68:lI47|HF5545E80
F5545E80:lI107|HF5545E98
F5545E98:lI101|HF5545EB0
F5545EB0:lI114|HF5545EC8
F5545EC8:lI110|HF5545EE0
F5545EE0:lI101|HF5545EF8
F5545EF8:lI108|HF5545F10
F5545F10:lI45|HF5545F28
F5545F28:lI50|HF5545F40
F5545F40:lI46|HF5545F58
F5545F58:lI49|HF5545F70
F5545F70:lI50|HF5545F88
F5545F88:lI46|HF5545FA0
F5545FA0:lI53|N
F55459BC:lI50|HF5545A2C
F5545A2C:lI46|HF5545A84
F5545A84:lI49|HF5545AEC
F5545AEC:lI50|HF5545B44
F5545B44:lI46|HF5545B94
F5545B94:lI53|N
F5545FF0:lHF5545944|HF5545FE8
F5545944:t3:A6:stdlib,HF55459AC,HF55459B4
F55459B4:lI47|HF5545A24
F5545A24:lI117|HF5545A7C
F5545A7C:lI115|HF5545AE4
F5545AE4:lI114|HF5545B3C
F5545B3C:lI47|HF5545B8C
F5545B8C:lI108|HF5545BD4
F5545BD4:lI105|HF5545C10
F5545C10:lI98|HF5545C5C
F5545C5C:lI47|HF5545CB0
F5545CB0:lI101|HF5545D00
F5545D00:lI114|HF5545D50
F5545D50:lI108|HF5545D98
F5545D98:lI97|HF5545DC8
F5545DC8:lI110|HF5545DE8
F5545DE8:lI103|HF5545E00
F5545E00:lI47|HF5545E18
F5545E18:lI108|HF5545E30
F5545E30:lI105|HF5545E48
F5545E48:lI98|HF5545E60
F5545E60:lI47|HF5545E78
F5545E78:lI115|HF5545E90
F5545E90:lI116|HF5545EA8
F5545EA8:lI100|HF5545EC0
F5545EC0:lI108|HF5545ED8
F5545ED8:lI105|HF5545EF0
F5545EF0:lI98|HF5545F08
F5545F08:lI45|HF5545F20
F5545F20:lI49|HF5545F38
F5545F38:lI46|HF5545F50
F5545F50:lI49|HF5545F68
F5545F68:lI53|HF5545F80
F5545F80:lI46|HF5545F98
F5545F98:lI53|N
F55459AC:lI49|HF5545A1C
F5545A1C:lI46|HF5545A74
F5545A74:lI49|HF5545ADC
F5545ADC:lI53|HF5545B34
F5545B34:lI46|HF5545B84
F5545B84:lI53|N
F5545FE8:lHF5545FD8|N
F5545FD8:t3:A4:sasl,HF5545AC4,HF5545B2C
F5545B2C:lI47|HF5545B7C
F5545B7C:lI117|HF5545BCC
F5545BCC:lI115|HF5545C08
F5545C08:lI114|HF5545C54
F5545C54:lI47|HF5545CA8
F5545CA8:lI108|HF5545CF8
F5545CF8:lI105|HF5545D48
F5545D48:lI98|HF5545D90
F5545D90:lI47|HF5545DC0
F5545DC0:lI101|HF5545DE0
F5545DE0:lI114|HF5545DF8
F5545DF8:lI108|HF5545E10
F5545E10:lI97|HF5545E28
F5545E28:lI110|HF5545E40
F5545E40:lI103|HF5545E58
F5545E58:lI47|HF5545E70
F5545E70:lI108|HF5545E88
F5545E88:lI105|HF5545EA0
F5545EA0:lI98|HF5545EB8
F5545EB8:lI47|HF5545ED0
F5545ED0:lI115|HF5545EE8
F5545EE8:lI97|HF5545F00
F5545F00:lI115|HF5545F18
F5545F18:lI108|HF5545F30
F5545F30:lI45|HF5545F48
F5545F48:lI50|HF5545F60
F5545F60:lI46|HF5545F78
F5545F78:lI49|HF5545F90
F5545F90:lI46|HF5545FA8
F5545FA8:lI53|HF5545FB0
F5545FB0:lI46|HF5545FB8
F5545FB8:lI52|N
F5545AC4:lI50|HF5545B24
F5545B24:lI46|HF5545B74
F5545B74:lI49|HF5545BC4
F5545BC4:lI46|HF5545C00
F5545C00:lI53|HF5545C4C
F5545C4C:lI46|HF5545CA0
F5545CA0:lI52|N
F554596C:lI53|HF55459DC
F55459DC:lI46|HF5545A3C
F5545A3C:lI54|HF5545A94
F5545A94:lI46|HF5545AFC
F5545AFC:lI53|N
F5545974:lI82|HF55459E4
F55459E4:lI49|HF5545A44
F5545A44:lI50|HF5545A9C
F5545A9C:lI66|N
F554597C:lI79|HF55459EC
F55459EC:lI84|HF5545A4C
F5545A4C:lI80|HF5545AA4
F5545AA4:lI32|HF5545B04
F5545B04:lI32|HF5545B54
F5545B54:lI65|HF5545BA4
F5545BA4:lI80|HF5545BE4
F5545BE4:lI78|HF5545C20
F5545C20:lI32|HF5545C6C
F5545C6C:lI49|HF5545CC0
F5545CC0:lI56|HF5545D10
F5545D10:lI49|HF5545D60
F5545D60:lI32|HF5545DA8
F5545DA8:lI48|HF5545DD8
F5545DD8:lI49|N
F55F0F78:lI47|HF55F0F80
F55F0F80:lI117|HF55F0F88
F55F0F88:lI115|HF55F0F90
F55F0F90:lI114|HF55F0F98
F55F0F98:lI47|HF55F0FA0
F55F0FA0:lI108|HF55F0FA8
F55F0FA8:lI105|HF55F0FB0
F55F0FB0:lI98|HF55F0FB8
F55F0FB8:lI47|HF55F0FC0
F55F0FC0:lI101|HF55F0FC8
F55F0FC8:lI114|HF55F0FD0
F55F0FD0:lI108|HF55F0FD8
F55F0FD8:lI97|HF55F0FE0
F55F0FE0:lI110|HF55F0FE8
F55F0FE8:lI103|HF55F0FF0
F55F0FF0:lI47|HF55F0FF8
F55F0FF8:lI114|HF55F1000
F55F1000:lI101|HF55F1008
F55F1008:lI108|HF55F1010
F55F1010:lI101|HF55F1018
F55F1018:lI97|HF55F1020
F55F1020:lI115|HF55F1028
F55F1028:lI101|HF55F1030
F55F1030:lI115|N
F55F0EC8:lI47|HF55F0EE8
F55F0EE8:lI117|HF55F0F08
F55F0F08:lI115|HF55F0F18
F55F0F18:lI114|HF55F0F20
F55F0F20:lI47|HF55F0F28
F55F0F28:lI108|HF55F0F30
F55F0F30:lI105|HF55F0F38
F55F0F38:lI98|HF55F0F40
F55F0F40:lI47|HF55F0F48
F55F0F48:lI101|HF55F0F50
F55F0F50:lI114|HF55F0F58
F55F0F58:lI108|HF55F0F60
F55F0F60:lI97|HF55F0F68
F55F0F68:lI110|HF55F0F70
F55F0F70:lI103|N
F55F0ED0:t2:AD:$initial_call,HF55F0EF0
F55F0EF0:t3:AF:release_handler,A4:init,I1
F55F0EDC:t2:AA:$ancestors,HF55F0F00
F55F0F00:lA8:sasl_sup|HF55F0F10
F55F0F10:lP<0.38.0>|N
=proc_dictionary:<0.46.0>
HF56549C0
HF56549CC
=proc_stack:<0.46.0>
0xf55cdef8:SReturn addr 0x81887014 (proc_lib:init_p_do_apply/3 + 28)
y0:N
y1:A8:infinity
y2:AA:supervisor
y3:HF55CDB10
y4:A8:dets_sup
y5:P<0.33.0>
0xf55cdf14:SReturn addr 0x1CC8E0 (<terminate process normally>)
y0:SCatch 0x81887024 (proc_lib:init_p_do_apply/3 + 44)
=proc_heap:<0.46.0>
F55CDB10:tA:A5:state,HF56549D8,A12:simple_one_for_one,HF56549E4,HF55CDAE8,I4,I3600,N,A8:dets_sup,N
F55CDAE8:t9:A4:dict,I0,I16,I16,I8,I80,I48,H818E83D4,HF55CDAAC
F55CDAAC:t1:HF55CDA68
F55CDA68:t10:N,N,N,N,N,N,N,N,N,N,N,N,N,N,N,N
F56549E4:lHF5654A04|N
F5654A04:t8:A5:child,A9:undefined,A4:dets,H73F884D0,A9:temporary,I30000,A6:worker,H73F884E0
73F884E0:lA4:dets|N
73F884D0:t3:A4:dets,AB:istart_link,N
F56549D8:t2:A5:local,A8:dets_sup
F56549C0:t2:AD:$initial_call,HF56549EC
F56549EC:t3:AA:supervisor,A8:dets_sup,I1
F56549CC:t2:AA:$ancestors,HF56549FC
F56549FC:lAF:kernel_safe_sup|HF5654A28
F5654A28:lAA:kernel_sup|HF5654A30
F5654A30:lP<0.9.0>|N
=proc_dictionary:<0.47.0>
HF55F08B0
HF55F08BC
=proc_stack:<0.47.0>
0xf56dd6fc:SReturn addr 0x81887014 (proc_lib:init_p_do_apply/3 + 28)
y0:N
y1:A8:infinity
y2:AB:dets_server
y3:HF56DD4C8
y4:A4:dets
y5:P<0.33.0>
0xf56dd718:SReturn addr 0x1CC8E0 (<terminate process normally>)
y0:SCatch 0x81887024 (proc_lib:init_p_do_apply/3 + 44)
=proc_heap:<0.47.0>
F56DD4C8:t4:A5:state,I16401,HF55F08C8,N
F55F08C8:lP<0.33.0>|N
F55F08B0:t2:AD:$initial_call,HF55F08DC
F55F08DC:t3:AB:dets_server,A4:init,I1
F55F08BC:t2:AA:$ancestors,HF55F08EC
F55F08EC:lAF:kernel_safe_sup|HF55F0904
F55F0904:lAA:kernel_sup|HF55F090C
F55F090C:lP<0.9.0>|N
=proc_messages:<0.57.0>
HF5656B80:A9:undefined
=proc_stack:<0.57.0>
0xf5656d98:SReturn addr 0xF587A378 (prim_file:write/2 + 128)
y0:N
y1:p<0.594>
0xf5656da4:SReturn addr 0x73F3025C (file_io_server:put_chars/2 + 84)
0xf5656da8:SReturn addr 0x73F2F114 (file_io_server:server_loop/1 + 604)
y0:HF55CC9C0
0xf5656db0:SReturn addr 0x1CC8E0 (<terminate process normally>)
y0:P<0.57.0>
y1:P<0.5.0>
=proc_heap:<0.57.0>
F55CC9C0:t6:A5:state,HF55CC9EC,P<0.5.0>,HF55CC9DC,H73F3160C,A4:list
73F3160C:Yh0:
F55CC9DC:E1F:8372000364000B726162626974406D61696C030000007B0000000000000000
F55CC9EC:t3:AF:file_descriptor,A9:prim_file,HF55CC9FC
F55CC9FC:t2:p<0.594>,I13
F5656B80:t2:p<0.594>,HF5656B74
F5656B74:t2:A4:data,HF5656B6C
F5656B6C:lI3|HF5656B64
F5656B64:lI0|HF5656B5C
F5656B5C:lI0|HF5656B54
F5656B54:lI0|HF5656B4C
F5656B4C:lI0|HF5656B44
F5656B44:lI0|HF5656B3C
F5656B3C:lI0|HF5656B34
F5656B34:lI1|HF5656B2C
F5656B2C:lI74|N
=proc_stack:<0.58.0>
0xf5628824:SReturn addr 0x1CC8E0 (<terminate process normally>)
y0:HF5617368
y1:HF5617384
=proc_heap:<0.58.0>
F5617368:t6:A5:state,HF5617394,P<0.5.0>,HF5617384,H73F3160C,A4:list
F5617384:E1F:8372000364000B726162626974406D61696C03000000830000000000000000
F5617394:t3:AF:file_descriptor,A9:prim_file,HF56173A4
F56173A4:t2:p<0.597>,I14
=proc_dictionary:<0.80.0>
HF5588A00
HF5588A0C
=proc_stack:<0.80.0>
0xf569d168:SReturn addr 0x81887014 (proc_lib:init_p_do_apply/3 + 28)
y0:N
y1:A8:infinity
y2:AA:supervisor
y3:HF569C680
y4:AC:disk_log_sup
y5:P<0.33.0>
0xf569d184:SReturn addr 0x1CC8E0 (<terminate process normally>)
y0:SCatch 0x81887024 (proc_lib:init_p_do_apply/3 + 44)
=proc_heap:<0.80.0>
F569C680:tA:A5:state,HF5588A18,A12:simple_one_for_one,HF5588A24,HF569C658,I4,I3600,N,AC:disk_log_sup,N
F569C658:t9:A4:dict,I0,I16,I16,I8,I80,I48,H818E83D4,HF569C61C
F569C61C:t1:HF569C5D8
F569C5D8:t10:N,N,N,N,N,N,N,N,N,N,N,N,N,N,N,N
F5588A24:lHF5588A44|N
F5588A44:t8:A5:child,A9:undefined,A8:disk_log,H73E4B308,A9:temporary,I1000,A6:worker,H73E4B318
73E4B318:lA8:disk_log|N
73E4B308:t3:A8:disk_log,AB:istart_link,N
F5588A18:t2:A5:local,AC:disk_log_sup
F5588A00:t2:AD:$initial_call,HF5588A2C
F5588A2C:t3:AA:supervisor,AC:disk_log_sup,I1
F5588A0C:t2:AA:$ancestors,HF5588A3C
F5588A3C:lAF:kernel_safe_sup|HF5588A68
F5588A68:lAA:kernel_sup|HF5588A70
F5588A70:lP<0.9.0>|N
=proc_dictionary:<0.81.0>
HF5657E38
HF5657E44
=proc_stack:<0.81.0>
0xf569c1f0:SReturn addr 0x81887014 (proc_lib:init_p_do_apply/3 + 28)
y0:N
y1:A8:infinity
y2:AF:disk_log_server
y3:HF569B86C
y4:AF:disk_log_server
y5:P<0.33.0>
0xf569c20c:SReturn addr 0x1CC8E0 (<terminate process normally>)
y0:SCatch 0x81887024 (proc_lib:init_p_do_apply/3 + 44)
=proc_heap:<0.81.0>
F569B86C:t2:A5:state,N
F5657E38:t2:AD:$initial_call,HF5657E50
F5657E50:t3:AF:disk_log_server,A4:init,I1
F5657E44:t2:AA:$ancestors,HF5657E60
F5657E60:lAF:kernel_safe_sup|HF5657E68
F5657E68:lAA:kernel_sup|HF5657E70
F5657E70:lP<0.9.0>|N
=proc_dictionary:<0.95.0>
HF5702848
HF5702854
=proc_stack:<0.95.0>
0xf5678650:SReturn addr 0x81887014 (proc_lib:init_p_do_apply/3 + 28)
y0:N
y1:A8:infinity
y2:A5:timer
y3:N
y4:AC:timer_server
y5:P<0.33.0>
0xf567866c:SReturn addr 0x1CC8E0 (<terminate process normally>)
y0:SCatch 0x81887024 (proc_lib:init_p_do_apply/3 + 44)
=proc_heap:<0.95.0>
F5702848:t2:AD:$initial_call,HF5702860
F5702860:t3:A5:timer,A4:init,I1
F5702854:t2:AA:$ancestors,HF5702870
F5702870:lAF:kernel_safe_sup|HF5702878
F5702878:lAA:kernel_sup|HF5702880
F5702880:lP<0.9.0>|N
=atoms
'Argument__5'
'Argument__6'
bitsize
is_bitstr
comp
arith
send_op
list_op
comp_op
bool_op
arith_op
old_type_test
new_type_test
guard_bif
behaviour
b2345
a2345
'-format_stacktrace1/4-fun-0-'
exited_size
op_type
is_op
n_spaces
count_nl
format_value
mf_to_string
mfa_to_string
brackets_to_parens
pp_arguments
format_op
format_errstr_call
origin
sep
format_stacktrace2
format_stacktrace1
argss
n_args
restricted_shell_started
restricted_shell_stopped
shell_undef
restricted_shell_bad_return
restricted_shell_disallowed
explain_reason
is_stacktrace
analyze_exception
format_call
all_white
'"'
'\''
eval_str
sendw
no_prog_name
error_message
flush_receive
'Argument__3'
'Argument__4'
'-add_element/2-fun-0-'
'-del_element/2-fun-0-'
'-union/2-fun-0-'
'-union/2-fun-1-'
'-intersection/2-fun-0-'
'-intersection/2-fun-1-'
'-subtract/2-fun-0-'
'-is_subset/2-fun-0-'
filter_set
fold_set
intersection1
union1
del_bkt_el
add_bkt_el
'-internal_extend/3-fun-0-'
'-internal_dirty_work/2-fun-0-'
'-log_work/3-fun-0-'
'-flush/2-fun-0-'
'-current_snapshot/1-fun-0-'
'-requeue_messages/1-fun-0-'
'-requeue_messages/1-fun-1-'
'-requeue_messages/1-lc$^0/1-0-'
'-requeue_messages/1-lc$^1/1-1-'
'-accumulate_requeues/2-fun-0-'
'-requeue/3-lc$^1/1-1-'
'-requeue/3-lc$^0/1-0-'
'-requeue/3-lc$^2/1-2-'
'-internal_integrate_messages/2-fun-0-'
'-internal_integrate1/2-fun-1-'
'-internal_integrate1/2-fun-0-'
'-perform_work/3-fun-0-'
tied
perform_work_item
perform_work
internal_integrate1
internal_integrate_messages
replay
accumulate_requeues
requeue_messages
unrecognised_persister_log_format
unsupported_persister_log_format
check_version
internal_load_snapshot
prune_table
persist_snapshot
txns
current_snapshot
do_reply
do_noreply
compute_timeout
compute_deadline
time_diff
later_ms
maybe_take_snapshot
take_snapshot_and_save_old
take_snapshot
base_filename
log_work
complete
internal_rollback
internal_commit
internal_dirty_work
internal_extend
pstate
psnapshot
queues
force_snapshot
guid
'-all_ch_record/0-lc$^0/1-0-'
'-remove_consumer/3-fun-0-'
'-remove_consumers/2-fun-0-'
'-move_consumers/3-fun-0-'
'-handle_ch_down/2-lc$^0/1-0-'
'-persist_acks/3-lc$^0/1-0-'
'-all_tx_record/0-lc$^0/1-0-'
'-all_tx/0-lc$^0/1-0-'
'-collect_messages/2-fun-0-'
'-purge_message_buffer/2-lc$^0/1-0-'
'-purge_message_buffer/2-lc$^1/1-1-'
'-purge_message_buffer/2-fun-0-'
'-i/2-lc$^0/1-3-'
'-i/2-lc$^1/1-2-'
'-i/2-lc$^3/1-1-'
'-i/2-lc$^2/1-0-'
unhandled_info
exclusive_consume_unavailable
queue_owned_by_another_connection
not_empty
messages_unacknowledged
acks_uncommitted
messages_uncommitted
consumers
messages_ready
purge_message_buffer
collect_messages
process_pending
record_pending_acks
record_pending_message
is_tx_persistent
mark_tx_persistent
all_tx
all_tx_record
erase_tx
store_tx
tx
txn
lookup_tx
do_if_persistent
rollback_transaction
rollback_work
commit_transaction
extend_transaction
persist_work
dirty_work
persist_auto_ack
persist_acks
persist_delivery
clear_decoded_content
persist_message
qname
send_command
maybe_send_reply
is_unused
run_poke_burst
check_exclusive_access
mismatch
check_queue_owner
cancel_holder
handle_ch_down
should_auto_delete
possibly_unblock
move_consumers
remove_consumers
remove_consumer
add_consumer
deliver_or_enqueue_n
deliver_or_enqueue
attempt_delivery
not_offered
offered
can_send
consumer
record_current_channel_tx
ch_record_state_transition
is_ch_blocked
all_ch_record
store_ch_record
ch_record
ch
lookup_ch
'G2'
'G1'
'$FUN'
'$MOD'
'-append/1-lc$^0/1-0-'
'-append/2-lc$^0/1-0-'
'-info/2-fun-0-'
'-cursor_process/7-fun-0-'
'-abstract/3-fun-0-'
'-abstract/3-lc$^0/1-0-'
'-abstract/3-fun-1-'
'-depth/2-fun-0-'
'-depth_fun/1-fun-0-'
'-depth_fun/1-fun-1-'
'-abstr_term/2-lc$^0/1-0-'
'-flatten_abstr/4-fun-0-'
'-le_info/2-lc$^1/1-1-'
'-le_info/2-lc$^0/1-0-'
'-join_merge_info/5-lc$^1/1-1-'
'-join_merge_info/5-lc$^0/1-0-'
'-opt_info/1-lc$^0/1-0-'
'-opt_info/1-lc$^1/1-1-'
'-prep_le/2-fun-0-'
'-prep_le/2-lc$^0/1-0-'
'-prep_le/2-fun-1-'
'-prep_qlc_lc/4-fun-0-'
'-prep_qlc_lc/4-fun-1-'
'-qlc_sort_info/2-lc$^1/1-1-'
'-qlc_sort_info/2-lc$^0/1-0-'
'-qlc_sort_info/2-fun-0-'
'-qlc_sort_info/2-lc$^3/1-3-'
'-qlc_sort_info/2-lc$^2/1-2-'
'-sort_info/3-lc$^0/1-0-'
'-sort_info/3-lc$^2/1-2-'
'-sort_info/3-lc$^1/1-1-'
'-sort_info/3-lc$^4/1-4-'
'-sort_info/3-lc$^3/1-3-'
'-pjoin/4-fun-0-'
'-pref_join/5-lc$^1/1-1-'
'-pref_join/5-lc$^0/1-0-'
'-pref_join/5-lc$^3/1-3-'
'-pref_join/5-lc$^2/1-2-'
'-pref_join/5-lc$^5/1-5-'
'-pref_join/5-lc$^4/1-4-'
'-pref_merge/7-lc$^0/1-0-'
'-pref_merge/7-lc$^1/1-1-'
'-opt_le/2-lc$^0/1-0-'
'-opt_le/2-fun-0-'
'-opt_le/2-fun-1-'
'-opt_le/2-fun-2-'
'-maybe_sort/4-lc$^0/1-0-'
'-skip_lookup_filters/2-lc$^0/1-0-'
'-setup_le/3-fun-1-'
'-setup_le/3-fun-2-'
'-setup_le/3-fun-3-'
'-setup_le/3-fun-4-'
'-setup_le/3-fun-0-'
'-setup_quals/4-fun-0-'
'-setup_quals/4-fun-1-'
'-setup_quals/4-fun-2-'
'-setup_quals/4-fun-3-'
'-setup_join/6-lc$^0/1-0-'
'-setup_join/6-lc$^1/1-1-'
'-setup_join/6-lc$^2/1-2-'
'-setup_join/6-lc$^3/1-3-'
'-setup_join/6-lc$^4/1-4-'
'-setup_join/6-fun-0-'
'-setup_join/6-fun-1-'
'-flat_goto/1-fun-0-'
'-find_join_data/3-lc$^0/1-0-'
'-table_handle/3-fun-0-'
'-table_handle/3-fun-1-'
'-table_handle/3-fun-2-'
'-open_file/3-fun-0-'
'-open_file/3-fun-1-'
'-file_loop/4-fun-0-'
'-file_loop/4-fun-1-'
'-file_loop_read/4-fun-0-'
'-sort_cursor_input/2-fun-0-'
'-sort_cursor_list_output/3-fun-0-'
'-sort_cursor_list_output/3-fun-1-'
'-sort_cursor_list_output/3-fun-2-'
'-write_terms/2-fun-0-'
'-unique_cache/4-fun-1-'
'-unique_cache/4-fun-3-'
'-unique_cache/4-fun-0-'
'-unique_cache/4-fun-2-'
'-unique_cache/4-fun-4-'
'-unique_cache/4-fun-5-'
'-unique_cache/4-fun-6-'
'-unique_cache/4-fun-7-'
'-unique_cache/4-fun-8-'
'-sort_list/6-fun-0-'
'-sort_list/6-fun-1-'
'-sort_list_output/1-fun-0-'
'-file_sort_handle/7-fun-0-'
'-file_sort_handle/7-fun-1-'
'-del_table/1-fun-0-'
'-empty_table/1-fun-0-'
'-append_loop/3-fun-0-'
'-no_dups/2-fun-0-'
'-cache/4-fun-0-'
'-cache_recall/2-fun-0-'
'-ucache3/7-fun-0-'
'-ucache_recall/3-fun-0-'
'-lcache2/4-fun-0-'
'-del_lcache/1-fun-0-'
'-tag_objects2/2-fun-0-'
'-untag_objects2/1-fun-0-'
'-same_keys2/8-fun-0-'
'-same_keys2/8-fun-1-'
'-same_keys2/8-fun-2-'
'-same_loop1/7-fun-0-'
'-same_keys1/9-fun-0-'
'-same_keys1/9-fun-1-'
'-same_keys/7-fun-0-'
'-same_keys_cache/9-fun-0-'
'-same_keys_cache/9-fun-1-'
'-same_keys_cache/9-fun-2-'
'-same_keys_cache/9-fun-3-'
'-loop_same_keys/7-fun-0-'
'-same_keys_file/9-fun-0-'
'-same_keys_file/9-fun-1-'
'-same_keys_file/9-fun-2-'
'-same_keys_file/9-fun-3-'
'-same_keys_file_write/7-fun-0-'
'-loop_keys_file/5-fun-0-'
'-read_merge_join/3-fun-0-'
'-end_all_merge_joins/0-fun-0-'
'-end_all_merge_joins/0-lc$^0/1-0-'
'-lookup_join/5-fun-0-'
'-lookup_join/5-fun-1-'
'-lookup_join/5-fun-3-'
'-lookup_join/5-lc$^1/1-1-'
'-lookup_join/5-fun-2-'
'-lookup_join/5-lc$^0/1-0-'
'-maybe_error_logger/2-fun-0-'
'-maybe_error_logger/2-fun-1-'
'-expand_stacktrace/1-fun-0-'
'-local_post/1-fun-0-'
throw_reason
throw_file_error
family_union
relation_to_family
relation
grd
local_post
post_funs
write_binary_terms
expand_stacktrace
format_stacktrace
maybe_error_logger
lookup_join
decr_list_size
tmp_merge_file
merge_join_id
end_all_merge_joins
join_read_terms
read_merge_join
write_merge_join
'$_qlc_merge_join_tmpfiles_'
joining
init_merge_join
end_merge_join
loop_keys_file
write_same_keys
same_keys_file_write
same_keys_file
loop_keys
loop_same
loop_same_keys
same_keys_cache
same_keys
same_keys1
same_loop1
same_keys2
merge_join2
merge_join1
merge_join
untag_objects2
untag_objects
tag_objects2
tag_objects
del_lcache
t2b
lcache_write
lcache2
lcache1
'$_qlc_cache_tmpfiles_'
lcache
ucache_recall
ucache3
ucache
cache_recall
no_dups
append_loop
empty_table
del_table
file_sort_handle
sort_cache2
sort_cache
sort_handle
sort_list_output
sort_list
unique_list
unique_sort_list
unique_cache_post
caching
unique_cache
sort_cursor_input_read
size_bin
write_terms
tmp_filename
sort_options_global_tmp
sort_cursor_file
sort_cursor_list_output
sort_cursor_input
file_loop_read
file_loop2
terms
file_loop
table_handle
find_join_data
next_state
next_after
flat_goto
join_unique_cache
setup_join
setup_quals
sorting
setup_le
setup_qlc
cannot_carry_out_join
not_a_qnum
opt_join
activate_join_lookup_filter
skip_lookup_filters
maybe_sort
no_cache_of_first_generator
opt_le
size_of_qualifier
join_opt
size_of_constant_prefix
eq_template_columns
equal_template_columns
no_lookup_to_carry_out
check_lookup_option
no_join_to_carry_out
check_join_option
sort_order
sort_sort_info
table_sort_info
join_indices
join_qual_data
pref_merge
pref_lookup
pref_join
pjoin
prep_join
pos_vals_max
usort_needed
pos_vals
find_const_position_idx
find_const_positions
short_list
sort_tmpdir
sort_unique
orders
sort_info
qlc_sort_info
prep_qlc
prep_sort
prep_simple_qlc
'SQV'
may_create_simple
prep_gen
prep_generator
simple_v1
prep_qlc_lc
eval_le
unsupported_qlc_handle
prep_le
prepare_qlc
opt_info
join_lookup_info
list2op
'P'
join_merge_info
join_info
qual_info
qlc_join
optz
simple_qlc
qlc_list
prepared
le_info
template_state
stop_cursor
qlc_cursor_pid_no_longer_exists
next_loop
fold_loop
vars
aux_name1
'V'
flatten_abstr
abstr_list
abstr_term
abstract_term
depth_tuple
depth_list
depth1
depth_fun
'...'
special
wait_for_request
answer
caught
parent_fun_caught
cursor_process
is_keyposs
is_keypos
is_proper_list
atom_option
nested_loop
descending
spawn_options
n_elements
flat
unique
unique_all
cache_all
order
no_files
max_list_size
max_lookup
no_match_spec
qlc_table
transform_expression
string_to_handle
all_remaining
next_answers
qlc_sort
abstract_code
not_a_query_list_comprehension
binary_generator
too_complex_join
too_many_joins
nomatch_filter
nomatch_pattern
used_generator_variable
tmpdir_usage
throw_error
not_cursor_owner
delete_cursor
qlc_cursor
cursor
qlc_append
allowed
qlc_opt
qlc_handle
get_handle
'-recover/0-fun-0-'
'-recover/0-fun-1-'
'-declare/5-fun-0-'
'-infos/2-lc$^0/1-0-'
'-route/3-fun-0-'
'-route/3-fun-1-'
'-match_bindings/2-fun-0-'
'-match_bindings/2-fun-1-'
'-match_bindings/2-fun-2-'
'-match_bindings/2-fun-3-'
'-match_bindings/2-fun-4-'
'-match_bindings/2-fun-5-'
'-match_bindings/2-fun-6-'
'-match_bindings/2-fun-7-'
'-match_bindings/2-fun-8-'
'-match_bindings/2-fun-9-'
'-match_bindings/2-fun-10-'
'-match_bindings/2-fun-11-'
'-match_bindings/2-fun-12-'
'-match_bindings/2-fun-13-'
'-match_bindings/2-lc$^0/1-0-'
'-lookup_qpids/1-fun-0-'
'-delete_exchange_bindings/1-lc$^0/1-0-'
'-delete_queue_bindings/1-fun-0-'
'-delete_transient_queue_bindings/1-fun-0-'
'-delete_queue_bindings/2-lc$^0/1-0-'
'-delete_queue_bindings/2-lc$^1/1-1-'
'-call_with_exchange/2-fun-0-'
exchange_and_queue_not_found
exchange_not_found
queue_not_found
'-call_with_exchange_and_queue/3-fun-0-'
durability_settings_incompatible
'-add_binding/4-fun-0-'
binding_not_found
'-delete_binding/4-fun-0-'
'-binding_action/5-fun-0-'
'-list_bindings/1-lc$^0/1-0-'
'-delete/2-fun-0-'
'-delete/2-fun-1-'
'-list_exchange_bindings/1-lc$^0/1-0-'
'-list_queue_bindings/1-lc$^0/1-0-'
list_queue_bindings
list_exchange_bindings
unconditional_delete
in_use
conditional_delete
maybe_auto_delete
last_topic_match
topic_matches1
topic_matches
split_topic_key
headers_match
parse_x_match
default_headers_match_kind
route_with_reverse
list_bindings
sync_binding
binding_action
delete_binding
call_with_exchange_and_queue
call_with_exchange
contains
exchanges_for_queue
delete_transient_forward_routes
delete_forward_routes
delete_exchange_bindings
lookup_qpids
match_routing_key
match_bindings
sort_arguments
'P_basic'
basic_message
publish
bad_argument
infos
lookup_or_die
assert_type
command_invalid
'-is_queue/1-fun-0-'
'-len/1-lc$^0/1-0-'
'-to_list/1-lc$^2/1-2-'
'-to_list/1-lc$^1/1-1-'
'-to_list/1-lc$^0/1-0-'
'-join/2-fun-1-'
'-join/2-fun-0-'
r2f
pqueue
handle_common_termination
process_msg
uniform_s
adjust_timeout_state
handle_post_hibernate
post_hibernate
handle_pre_hibernate
pre_hibernate
process_next_msg
drain
extend_backoff
backoff
'$gen_pcast'
'$gen_pcall'
'-run_bindings/2-fun-0-'
routed
not_delivered
unroutable
check_delivery
run_bindings
no_state
'-recover_durable_queues/0-fun-0-'
'-recover_durable_queues/0-fun-1-'
'-recover_durable_queues/0-fun-2-'
'-recover_durable_queues/0-fun-3-'
'-recover_durable_queues/0-fun-4-'
'-recover_durable_queues/0-fun-5-'
'-recover_durable_queues/0-fun-6-'
'-recover_durable_queues/0-fun-7-'
'-recover_durable_queues/0-fun-8-'
'-recover_durable_queues/0-fun-10-'
'-recover_durable_queues/0-fun-9-'
'-recover_durable_queues/0-fun-11-'
'-recover_durable_queues/0-fun-12-'
'-recover_durable_queues/0-fun-13-'
'-recover_durable_queues/0-fun-14-'
'-recover_durable_queues/0-fun-15-'
'-recover_durable_queues/0-fun-16-'
e
'-recover_durable_queues/0-fun-17-'
'-internal_declare/2-fun-0-'
'-with/3-fun-0-'
'-with/2-fun-0-'
'-with_or_die/2-fun-0-'
'-info_all/1-fun-0-'
'-info_all/2-fun-0-'
'-stat_all/0-fun-0-'
'-commit_all/2-fun-0-'
'-commit_all/2-fun-1-'
queue_disappeared
'-rollback_all/2-fun-0-'
rollback
'-rollback_all/2-fun-1-'
'-notify_down_all/2-fun-0-'
notify_down
'-notify_down_all/2-fun-1-'
'-limit_all/3-fun-0-'
limit
'-limit_all/3-fun-1-'
delete_queue_bindings
'-internal_delete/1-fun-0-'
delete_transient_queue_bindings
'-on_node_down/1-fun-0-'
'-on_node_down/1-fun-1-'
'-on_node_down/1-fun-2-'
'-on_node_down/1-fun-3-'
'-on_node_down/1-fun-4-'
'-on_node_down/1-fun-5-'
'-on_node_down/1-fun-6-'
'-on_node_down/1-fun-7-'
some
'-on_node_down/1-fun-8-'
no_column_fun
'-on_node_down/1-fun-9-'
'-on_node_down/1-fun-10-'
'-on_node_down/1-fun-11-'
'-on_node_down/1-fun-12-'
constant_columns
n_leading_constant_columns
template
match_specs
'-on_node_down/1-fun-13-'
qlc_v1
fil
'-on_node_down/1-fun-14-'
qlc_lc
'-on_node_down/1-fun-15-'
'-safe_pmap_ok/3-lc$^0/1-0-'
'-safe_pmap_ok/3-fun-0-'
'-safe_pmap_ok/3-fun-1-'
'-safe_pmap_ok/3-fun-2-'
safe_pmap_ok
pseudo_queue
internal_delete
notify_sent
basic_cancel
basic_consume
basic_get
claim_queue
limit_all
notify_down_all
rollback_all
commit_all
pcast
requeue
redeliver
deliver_immediately
delivery
stat_all
info_all
pcall
with_or_die
add_default_binding
start_queue_process
store_queue
internal_declare
declare
recover_durable_queues
'Hugepagesize'
'HugePages_Surp'
'HugePages_Rsvd'
'HugePages_Free'
'HugePages_Total'
'VmallocChunk'
'VmallocUsed'
'VmallocTotal'
'Committed_AS'
'CommitLimit'
'WritebackTmp'
'Bounce'
'NFS_Unstable'
'Quicklists'
'PageTables'
'SUnreclaim'
'SReclaimable'
'Slab'
'Mapped'
'AnonPages'
'Writeback'
'Dirty'
'SwapFree'
'SwapTotal'
'Mlocked'
'Unevictable'
'Inactive(file)'
'Active(file)'
'Inactive(anon)'
'Active(anon)'
'Inactive'
'Active'
'SwapCached'
'Cached'
'Buffers'
'MemFree'
'-get_total_memory/1-fun-0-'
'-get_total_memory/1-lc$^0/1-0-'
'-get_total_memory/1-fun-1-'
'-get_total_memory/1-fun-2-'
read_proc_file
freebsd_sysctl
parse_line_sunos
parse_line_linux
parse_line_mach
get_mem_info
'MemTotal'
page_size
'Pages inactive'
'Pages active'
'Pages free'
'Pages wired down'
'Memory size'
command_not_found
get_mem_limit
get_vm_limit
emit_update_info
internal_update
set_vm_memory_high_watermark
get_vm_memory_high_watermark
set_check_interval
get_check_interval
get_total_memory
'-alert/2-fun-0-'
alert
not_understood
alarms
'-generate_table/1-fun-0-'
'-generate_array/1-fun-0-'
incorrect_empty_content_body_frame_size
octet
shortint
longint
longlongint
shortstr
encode_property
content_properties_illegal_bit_value
content_properties_values_overflow
bit
long_string_to_binary
short_string_to_binary
generate_array
generate_table
array_to_binary
table_to_binary
void
decimal
byte
signedint
double
field_value_to_binary
table_field_to_binary
create_frame
build_heartbeat_frame
build_content_frames
encode_properties
maybe_encode_properties
content
build_simple_content_frames
method_id
encode_method_fields
build_simple_method_frame
'-trigger/2-lc$^0/1-0-'
rabbitmq_hook
notify_remote
trigger
b64d_ok
b64d
b64e
decode_tuple
encode_tuple
strip_illegal
strip_spaces
mime_decode_to_string
decode_to_string
mime_decode_l
decode_l
mime_decode
encode_l
encode
'-print/6-fun-0-'
'-print/6-fun-1-'
indent
while_fail
last_depth
cind_element
cind_tail
cind_list
cind_rec
cind_field
cind_fields_tail
cind_record
no_good
cind_tag_tuple
cind
printable_list1
printable_bin1
printable_bin
list_length_tail
list_length
print_length_list1
print_length_list
print_length_field
print_length_fields
print_length_record
print_length_tuple
print_length
write_list
write_field
write_fields_tail
write_fields
pp_binary
pp_element
pp_tail
pp_list
rec_indent
field
pp_field
pp_fields_tail
pp_record
pp_tag_tuple
pp
max_cs
'-fwrite_g/1-lc$^0/1-0-'
'-fwrite_g/1-lc$^1/1-1-'
lowercase
cond_lowercase
flat_trunc
adjust
prefixed_integer
unprefixed_integer
iolist_to_chars
log2floor
int_pow
int_ceil
insert_exp
insert_decimal
fixup
scale
fwrite_g_1
mantissa_exponent
float_data
float_f
fwrite_f
float_exp
float_man
float_e
fwrite_e
decr_pc
pcount
collect_cc
pad_char
field_value
precision
field_width
collect_cseq
'-del_object_bag/6-lc$^0/1-0-'
'-dirty_select/3-lc$^0/1-0-'
'-create_fun/3-lc$^0/1-0-'
'-create_fun/3-fun-0-'
'-add_ram_index/2-fun-0-'
db_match
del_index_info
add_index_info
add_ram_index
make_ram_index
create_fun
init_disc_index
delete_transient_index
tab2tmp_filename
tab2filename
r_keys
dirty_read2
realkeys
clear_index2
del_object_bag
del_object_index2
del_ixes
delete_index2
add_index2
'-to_lower/1-lc$^0/1-0-'
'-to_upper/1-lc$^0/1-0-'
'-join/2-lc$^0/1-0-'
to_upper
to_lower
to_upper_char
to_lower_char
sub_string
centre
r_pad
l_pad
strip_right
strip_left
s_word
sub_word
w_count
both
words
copies
tokens2
tokens1
substr2
substr1
cspan
span
rstr
str
rchr
chr
headers
topic
fanout
direct
'-convert_list/1-lbc$^0/2-0-'
match_check_size
as_list
set_bit_type
make_bit_type
get_float
get_integer
get_value_utf16_le
get_value_utf16_be
unsupported_utf8
utf8_to_int
utf8_size
add_bin_binding
coerce_to_float
match_field_1
match_bits_1
bin_gen_field
int_to_utf16_le
int_to_utf16_be
int_to_utf8
signed
unsigned
utf32
utf16
eval_exp_field
eval_exp_field1
unit
eval_field
convert_list
rabbit_tcp_client_sup
tcp_listener_sup
tcp_listener
tcp_client_sup
tcp_acceptor_sup
tcp_acceptor
rabbit_writer
rabbit_tracer
rabbit_tests
rabbit_reader
rabbit_plugin_activator
rabbit_net
rabbit_multi
rabbit_load
rabbit_limiter
rabbit_heartbeat
rabbit_framing_channel
rabbit_framing
rabbit_dialyzer
rabbit_control
rabbit_channel
rabbit_binary_parser
rabbit_basic
rabbit_amqqueue_sup
rabbit_amqqueue_process
priority_queue
gen_server2
none_active
mnesia_real_loader
'-init_receiver/5-fun-0-'
'-table_init_fun/1-fun-0-'
'-make_table_fun/2-fun-0-'
'-send_table/3-fun-0-'
'-prepare_copy/3-fun-0-'
'-reader_funcs/4-fun-0-'
'-reader_funcs/4-fun-1-'
'-reader_funcs/4-fun-2-'
'-reader_funcs/4-fun-3-'
'-finish_copy/4-fun-0-'
dat2bin
cleanup_tab_copier
send_packet
dets_bchunk
reader_funcs
send_more
tab_copier_prepare
prepare_copy
receiver_died
mnesia_table_sender
calc_nokeys
flush_subcrs
nobin
subscr_receiver
finish_copy
old_node_init_table
old_protocol
make_table_fun
actual_tabrec
old_init_table_complete
mnesia_table_receiver
do_init_table
wait_on_load_complete
spawned_receiver
start_receiver
table_init_fun
mnesia_table_sender_node
init_receiver
do_snmpify
snmpify
do_get_network_copy
try_net_load_table
init_index
do_get_disc_copy2
'-stop/0-fun-0-'
'-tm_mnesia_down/1-fun-0-'
'-tm_add_copy/2-fun-0-'
'-tm_del_copy/2-fun-0-'
'-tm_change_table_copy_type/3-fun-0-'
'-args2cp/1-fun-0-'
'-check_tables/1-lc$^0/1-0-'
'-check_tables/1-lc$^1/1-1-'
'-check_tables/1-lc$^2/1-2-'
'-arrange_retainers/3-lc$^0/1-0-'
'-writers/1-fun-0-'
'-send_activate/5-lc$^0/1-0-'
'-init/1-lc$^0/1-0-'
'-prepare_ram_tab/5-fun-0-'
'-retainer_loop/1-lc$^0/1-0-'
'-do_stop/1-fun-1-'
'-do_del_retainers/2-lc$^0/1-0-'
convert_cp_record
get_checkpoint_val
get_latest_val
get_val
get_records
stop_iteration
init_tabs
check_iter
do_change_copy
send_retainer2
send_retainer
find_retainer
do_add_retainer
tm_remote_prepare
do_add_copy
do_del_copy
do_del_retainer
do_del_retainer2
do_del_retainers
del_chkp_info
deactivate_tab
maybe_activate
no_parent
deactivated
change_copy
add_retainer
del_retainer
del_copy
add_copy
iter_end
iter_begin
retainer_loop
retainer_delete
retainer_fixtable
retainer_next
retainer_first
retainer_put
retainer_get
traverse_dcd
prepare_ram_tab
mnesia_retainer
retainer_create
tab2retainer
add_chkp_info
prepare_tab
mnesia_pending_checkpoint
start_retainer
activated
send_activate
add_pending_node
add_pending
compute_union
mnesia_union
collect_pending
do_activate
writers
filter_remote
select_writers
arrange_retainers
check_tables
allow_remote
ignore_new
args2cp
remote_deactivate
get_checkpoint
map_call
tm_add_copy
send_retain
send_group_retain
retain
enter_still_pending
exit_pending
checkpoint_args
'-loop/1-fun-0-'
'-insert_op/5-lc$^0/1-0-'
'-insert_op/5-fun-0-'
'-insert_op/5-fun-1-'
'-temp_set_master_nodes/0-lc$^0/1-0-'
regulated
regulate
regulator_loop
regulator_init
raw_dump_table
temp_set_master_nodes
rename_failed
ensure_rename
del_opened_tab
prepare_open
open_dcl
open_disc_copies
open_files
init_indecies
del_index_table
temp
insert_op
disc_delete_indecies
dcl
opened_dumper
disc_delete_table
dets_cleared
dets_incr_counter
cleared
dets_updated
dets_insert
disc_insert
insert_ops
fast_schema_update
schema_update
perform_update
do_insert_rec
insert_rec
insert_recs
mnesia_dumper_dets
do_perform_dump
perform_dump
write_threshold
mnesia_adjust_log_writes
adjust_log_writes
write_cache_close
truncate_at_close2
position_close2
position2
pwrite_close2
fwrite_close2
fsync
fwrite_header
open_truncate
open_update
inc
inc_wrap
int_split_bins
ext_split_bins
fff
find_first_file
read_size_file
write_size_file
loop_index
print_index_file
truncate_index_file
index_file_trunc
to_8_bytes
write_index_file
parse_index
ext_file_open
int_file_open
wrap_ext_log
wrap_int_log
is_head
repair_err
done_scan
scan_f
scan_f_read
lh
mark
ext_log_head
new_ext_file
int_log_head
new_int_file
existed
yes_not_closed
read_chunk_ro
handle_chunk_ro
do_handle_chunk_ro
do_chunk_read_only
read_chunk
handle_chunk
do_handle_chunk
write_cache_timer_is_running
'-do_open/3-fun-0-'
'-open_distr_rpc/3-fun-0-'
'-find_old_nodes/3-lc$^0/1-0-'
'-do_internal_open/6-fun-0-'
'-do_accessible_logs/0-fun-0-'
'-do_accessible_logs/0-fun-1-'
dist_pids
get_local_pid
which_groups
do_accessible_logs
leave
erase_log
result
start_log
find_old_nodes
open_distr_rpc
get_members
disk_log_names
distr
dist_open
disk_log_stopped
repair_read_only
'-ichunk_bad_end/6-fun-0-'
'-close_disk_log/1-fun-0-'
'-do_info/2-lc$^0/1-0-'
'-multi_req/2-fun-0-'
'-multi_req/2-fun-1-'
'-wrap_file_extensions/1-fun-0-'
'-notify/2-fun-0-'
'-notify_owners/1-fun-0-'
error_status
state_err
state_ok
cache_error
notify_owners
notify_owners_wrap
add_ext
read_index_file
wrap_file_extensions
merge_head
req2
monitor_request
get_near_pid
nearby_pid
lreq
sreq
multi_req
send_reply
mf_int_chunk_step
do_chunk_step
chunk_read_only
mf_int_chunk
mf_int_chunk_read_only
do_chunk
trunc_wrap
truncate_at
do_trunc
mf_sync
do_sync
mf_write_cache
do_write_cache
halt_write
halt_write_full
xsz
logl
bsize
mf_ext_log
mf_int_log
do_log
do_unblock
do_block
owners
no_current_bytes
no_current_items
no_items
current_file
no_overflows
no_written_items
get_log_pids
get_wrap_size
do_info
end_of_log
no_such_log
nonode
need_repair
invalid_header
node_already_open
not_a_log_file
not_internal_wrap
invalid_index_file
do_format_error
mf_ext_close
mf_int_close
close_disk_log2
close_disk_log
wrap_ext
mf_ext_open
halt_ext
ext_open
wrap_int
mf_int_open
halt_int
int_open
do_open2
mf_ext_inc
mf_int_inc
do_inc_wrap_file
check_size
check_head
change_size_wrap
do_change_size
check_bytes
check_bytes_list
terms2bins
mk_head
name_already_open
open_read_only
open_read_write
compare_arg
rename_file
is_owner
unblock_pid
arg_mismatch
add_pid
opening_pid
proc_q
do_fast_exit
do_exit
do_close2
close_user
close_owner
do_close
do_change_notify
rflat
log_end
log_loop
not_blocked_by_pid
not_blocked
halt_log
same_file_name
failed
is_full
new_size_too_small
blocked_log
format_external
handle
size_mismatch
check_wrap_arg
read_size_file_version
wrap
head_func
linkto
check_arg
ll_open
accessible_logs
no_continuation
chunk_info
ichunk_step
chunk_step
bichunk_end
bichunk
corrupt_log_file
ichunk_bad_end
bins2terms
ichunk_end
continuation
ichunk
disk_log_pids
change_header
change_notify
change_size
inc_wrap_file
breopen
btruncate
lclose
balog_terms
remote_tab_sender
ram_overrides_dump
'-view/0-fun-0-'
'-view_file/2-fun-1-'
'-view_file/2-fun-0-'
'-do_backup_master/1-fun-0-'
'-select_tables/2-lc$^0/1-0-'
'-backup_schema/2-lc$^0/1-0-'
'-iterate/8-fun-0-'
'-iterate/8-fun-1-'
'-rec_filter/4-lc$^0/1-0-'
add_recs
insert_logchunk
load_dcl
insert_dcdchunk
dcd2ets
alog_terms
dcd
rec_filter
tab_receiver
send_records_unexpected_msg
send_records
copy_records
handle_last
checkpoint
latest
really_retain
handle_more
retainer
select_source
tab_copier
most_local_node
backup_tab
backup_schema
safe_write
select_tables
tables_and_cookie
do_backup_master
incremental
check_backup_arg_type
check_backup_args
backup_master
backup_args
view_file
nolog
view_only
previous_decision_log
confirm_log_dump
chunk_log
init_log_dump
needs_dump
prepare_prev
already_dumped
prepare_log_dump
read_only_mode
write_header
previous_log
verify_no_exists
decision_tab_name
decision_log_name
latest_log_name
previous_log_file
incr_log_writes
blog
sappend
alog
balog
dcd_version
dcl_version
dcd_log
dcl_log
decision_tab_header
decision_log_header
backup_log
trans_log
trans_log_header
schema_not_merged
time_threshold
mnesia_late_disc_load
'-try_schedule_late_disc_load/3-fun-0-'
'-multicall/2-lc$^0/1-0-'
'-late_disc_load/5-fun-0-'
'-handle_cast/2-fun-1-'
'-handle_cast/2-fun-2-'
'-handle_cast/2-lc$^0/1-0-'
maybe_async_late_disc_load
'-handle_cast/2-fun-3-'
'-code_change/3-lc$^0/1-0-'
'-code_change/3-lc$^1/1-1-'
'-maybe_log_mnesia_down/1-fun-0-'
'-initial_safe_loads/0-fun-0-'
'-initial_safe_loads/0-fun-1-'
'-change_table_access_mode/1-fun-0-'
'-change_table_access_mode/1-fun-1-'
'-user_sync_tab/1-fun-0-'
'-sync_and_block_table_whereabouts/4-lc$^0/1-0-'
'-sync_del_table_copy_whereabouts/2-lc$^0/1-0-'
'-opt_start_sender2/4-fun-0-'
'-load_and_reply/2-fun-0-'
storage_unknown
'-load_table_fun/1-fun-5-'
'-load_table_fun/1-fun-4-'
'-load_table_fun/1-fun-6-'
'-load_table_fun/1-fun-2-'
load_local_content
'-load_table_fun/1-fun-1-'
'-load_table_fun/1-fun-0-'
net_load_table
'-load_table_fun/1-fun-3-'
do_filter_active
filter_active
load_table_fun
load_and_reply
start_remote_sender
already_loading2
already_loading
opt_start_loader
copier_done
send_and_reply
opt_start_sender2
opt_start_sender
dump_and_reply
opt_start_worker
add_loader
add_worker
info_format
sync_del_table_copy_whereabouts
sync_and_block_table_whereabouts
user_sync_tab
mark_blocked_tab
is_tab_blocked
last_loader_down
drop_loaders
remove_early_messages
remove_loaders
reconfigure_tables
ram_only
local_master
local_only
last_consistent_replica
initial_safe_loads
active_remote
update_whereabouts
node_has_tabs
orphan_tables
inactive_copy_holders
log_later
maybe_log_mnesia_down
select_best
pick_next
sync_tab_timeout
get_state
sender_done
dumper_done
sync_tab
handle_sync_tabs
adopt_orphan
i_have_tab
adopt_orphans
tm_mnesia_down
late_load_filter
late_load
disc_load
late_loaders
block_table
schema_commit_lock
disc_load_intents
late_merge
deleted
update_where_to_write
start_regulator
remote_call
im_running
try_merge_schema
merging_schema
merge_schema_failed
connect_nodes2
schema_is_merged
try_schedule_late_disc_load
late_disc_load
schedule_late_disc_load
async_late_disc_load
forced_by_user
do_force_load_table
force_load_updated
get_disc_copy
disc_load_table
loader_done
del_other
net_load
add_other
unblock_controller
block_controller
mnesia_stopped
wait_for_tables_timeout
rec_tabs
tab_synced
sync_reply
sync_tabs
wait_for_init
reply_wait
wait_for_tables_init
do_wait_for_tables
async_dump_log
max_loaders
get_loaders
get_senders
'-lock/4-lc$^0/1-0-'
'-all_keys/4-lc$^0/1-0-'
'-index_match_object/6-lc$^0/1-0-'
'-index_read/6-lc$^0/1-0-'
'-foldl/6-fun-0-'
'-foldr/6-fun-0-'
'-table_info2/5-fun-1-'
'-table_info2/5-fun-0-'
'-frag_size/3-lc$^0/1-0-'
'-frag_memory/3-lc$^0/1-0-'
'-init_select/6-fun-0-'
'-init_select/6-fun-1-'
'-select_cont/3-fun-0-'
'-do_select/5-fun-0-'
'-do_select/5-lc$^0/1-0-'
'-do_select/5-fun-1-'
'-do_select/5-lc$^1/1-1-'
'-do_select/5-lc$^2/1-2-'
'-do_select/5-fun-2-'
'-do_select/5-fun-3-'
'-verify_numbers/2-fun-0-'
'-local_select/4-lc$^0/1-0-'
'-expand_cstruct/2-fun-0-'
'-expand_cstruct/2-lc$^0/1-0-'
'-expand_cstruct/2-fun-1-'
'-make_multi_add_frag/2-lc$^0/1-0-'
'-make_frag_names_and_acquire_locks/4-fun-0-'
'-replace_frag_hash/2-fun-0-'
'-adjust_before_split/1-fun-0-'
'-make_multi_del_frag/1-lc$^0/1-0-'
'-adjust_before_merge/1-fun-0-'
'-make_multi_add_node/2-lc$^0/1-0-'
'-make_multi_del_node/2-lc$^0/1-0-'
'-lookup_foreigners/1-lc$^0/1-0-'
good
'-frag_dist/1-lc$^0/1-0-'
shallow_dist
pick_count
deep_dist
sort_dist
bad
incr_node
incr_nodes
count_frag
key_to_n
key_to_frag_number
n_to_frag_name
key_to_frag_name
key_pos
record_to_frag_name
lookup_prop
n_doubles
next_n_to_split
props_to_frag_hash
no_hash
make_del_node
make_multi_del_node
make_add_node
make_multi_add_node
do_merge
adjust_before_merge
make_del_frag
make_multi_del_frag
do_split
adjust_before_split
replace_frag_hash
make_add_frag
make_frag_names_and_acquire_locks
verify_multi
make_multi_add_frag
make_deactivate
make_activate
del_frag
add_frag
list_pos
node_diff
insert_dist
rearrange_dist
set_frag_node
set_frag_nodes
expand_frag_cstructs
pick_props
verify_n_fragments
do_expand_cstruct
hash_state
hash_module
remote_collect
local_collect
do_remote_select
remote_select
local_select
match_spec_to_frag_numbers
verify_numbers
do_select
frag_sel_cont
frag_cont
init_select
remote_table_info
search_next
search_prev
search_last
search_first
frag_state
frag_size
frag_memory
n_fragments
foreign_key
n_disc_copies
n_disc_only_copies
n_ram_copies
base_table
node_pool
foreigners
frag_dist
table_info2
nomore
'-clear_fixtable/1-fun-0-'
'-clear_fixtable/2-fun-0-'
'-get_elements/2-lc$^0/1-0-'
'-do_arrange/5-fun-0-'
schema_ops
'-prepare_schema_items/3-lc$^0/1-0-'
'-get_transactions/0-fun-0-'
'-display_info/2-fun-0-'
'-display_info/2-fun-1-'
'-do_stop/1-fun-0-'
'-system_code_change/4-lc$^0/1-0-'
downgrade
tell_outcome
reconfigure_participants
send_to_pids
send_mnesia_down
reconfigure_coordinators
pformat
display_pid_info
search_pr_participant
search_pr_coordinator
pr_tid
pr_participant
coordinator
tr_status
rec_all
opt_term_to_binary
no_local
get_dirty_reply
rec_dirty
async_send_dirty
sync_send_dirty
ram_only_ops
commit_decision
commit_nodes
do_snmp
clear_index
commit_clear
del_object_index
commit_del_object
delete_index
commit_delete
commit_update
do_update_op
do_update
do_dirty
vote_no
tell_participants
schema_commit
sync_schema_commit
waiting_for_commit_ack
prepare_sync_schema_commit
acc_pre_commit
rec_acc_pre_commit
multi_commit
prepare_node
pick_node
prepare_nodes
check_prep
do_prepare_items
prepare_items
prepare_schema_items
do_arrange
prep_recs
t_commit
bad_activity
my_process_is_alive
wait_for_best_friend
activity_ended
intercept_best_friend
intercept_friends
propagate_store
opt_propagate_store
get_elements
erase_activity_id
friends
flushed
flush_downs
return_abort
decr
get_restarted
maybe_restart
do_commit_nested
apply_fun
nested_atomic
execute_transaction
insert_objs
do_copy_ets
copy_ets
execute_inner
execute_outer
mNeSia_nOn_TrAnSacTioN
tm_exit_pending
transaction_terminated
pid_search_delete
manage_fixtable
clear_fixtable
erase_ets_tabs
del_coord_store
add_coord_store
restore_stores
prep
recover_coordinator
prepare_pending_participants
prepare_pending_coordinators
process_dirty_queue
do_async_dirty
dirty_res
do_sync_dirty
tm_prepare
unblock_table
unblocked
unblock_me
sync_trans_serial
delete_transaction
new_tid
slog
sym_trans
start_outer
simple_commit
do_commit
vote_yes
commit_participant
tm_enter_pending
ask_commit
store_erased
del_store
restarted
new_store
mnesia_trans_store
sync_sym_trans
participant
add_store
do_abort
doit_loop
unblock_tab
block_tab
prepare_checkpoint
tmpid
tmlink
original_nodes
'-do_allow_garb/0-lc$^0/1-0-'
'-do_garb_decisions/0-lc$^0/1-0-'
'-get_mnesia_downs/0-lc$^0/1-0-'
'-get_master_node_tables/0-lc$^0/1-0-'
add_decision
arrange
send_decisions
announce
add_remote_decision
add_remote_decisions
bad_decision
merge_decisions
filter_aborted
filter_outcome
outcome
handle_early_msg
do_handle_early_msgs
handle_early_msgs
no_decision
decisions
do_log_master_nodes
do_log_mnesia_down
do_log_mnesia_up
starting_partitioned_network
announce_all
force_decision
what_decision
opt_dump_log
scan_decisions
decision_tab_file
mnesia_transient_decision
create_transient_decision
sync_trans_tid_serial
incr_trans_tid_serial
set_trans_tid_serial
trans_tid_serial
decision_tab_version
decision_tab
decision_log_version
decision_log
trans_tid
pre_commit
note_log_decision
note_log_decisions
save_decision_tab
decision_list
dump_decision_tab
confirm_decision_log_dump
chunk_decision_log
perform_dump_decision_log
prepare_decision_log_dump
dump_decision_log
close_decision_log
open_decision_log
decision_log_file
previous_decision_log_file
convert_old
chunk_decision_tab
close_decision_tab
open_decision_tab
load_decision_tab
still_pending
startup
presume_abort
presume_commit
wait_for_decision
check_what_happened
what_happened_remotely
asym_trans
what_happened
master_nodes_updated
log_master_nodes2
write_trans_log_header
badbytes
recovered
latest_log_file
get_mnesia_downs
log_mnesia_down
im_certain
tell_im_certain
latest_log
committed
do_log_decision
decision
note_outcome
note_master_nodes
note_down
note_up
transient_decision
note_decision
log_decision
do_garb_decisions
previous_transient_decisions
latest_transient_decision
do_allow_garb
allow_garb
check_overload
garb_decisions
start_garb
'-sort_queue/1-fun-0-'
'-sort_queue/1-fun-1-'
'-release_remote_non_pending/2-lc$^0/1-0-'
'-do_sticky_lock/4-lc$^0/1-1-'
'-do_sticky_lock/4-lc$^1/1-0-'
'-receive_wlocks/4-lc$^0/1-0-'
'-rlock_get_reply/4-fun-0-'
'-get_lock_queue/0-lc$^0/1-0-'
bytes2int
pid_to_pid_info
pid_info
cmp_pid_info
cmp_tid
rec_requests
send_requests
ixrlock
rlock_get_reply
return_granted_or_nodes
lookup_in_client
opt_lookup_in_client
flush_remaining
sticky_flush
receive_wlocks
get_rwlocks_on_nodes
get_wlocks_on_nodes
del_debug
mnesia_wlock_nodes
add_debug
need_lock
dirty_sticky_lock
'______STICK_____'
do_sticky_lock
sticky_lock
w_nodes
locks
key_delete_all
locked
removed
try_waiter
try_waiters_tab
try_waiters_obj
rearrange_queue
release_lock
release_locks
keyunique
do_release_tid
do_release_tids
set_read_lock_on_all_keys
sort_queue
check_queue
allowed_to_be_queued
bad_luck
check_lock
can_lock
granted
'______GLOBAL_____'
'______WHOLETABLE_____'
grant_lock
queued
cyclic
try_lock
try_sticky_lock
release_remote_non_pending
switch
get_index_table
ix_read
unstick
not_stuck
stuck_elsewhere
test_set_sticky
tid_released
receive_release_tid_acc
sync_release_tid
send_release_tid
async_release_tid
release_tid
not_granted
l_req_rec
l_request
'-set_debug_level/2-fun-0-'
'-set_debug_level/2-fun-1-'
'-do_change/2-fun-0-'
'-do_change/2-fun-1-'
do_prepare_stop
prepare_stop
del_subscr
add_subscr
not_active_local
do_change
what
patch_record
change_subscr
change
deactivate_table
unsubscribe_table
simple
'-core_file/4-fun-0-'
'-core_file/4-lc$^0/1-0-'
report_warning
mnesia_global_logger
report_info
mnesia_up
mnesia_overload
mnesia_checkpoint_deactivated
mnesia_checkpoint_activated
handle_system_event
handle_table_event
mnesia_table_event
handle_any_event
supervisor_spec
worker_spec
mnemosyne_sup
'-kill/0-fun-0-'
'-kill/0-fun-1-'
ensure_dead
add_event_handler
mnemosyne_procs
kernel_procs
supervisor_timeout
event_procs
per_cpu
detailed
'-util/1-fun-0-'
'-cpu_util_diff/3-fun-0-'
'-cpu_util_rel/3-fun-0-'
'-mk_rel_states/2-fun-0-'
'-state_list_sum/1-fun-0-'
'-measurement_server_start/0-fun-0-'
'-port_server_start/0-fun-0-'
data_mismatch
unexpected_type_id
hard_irq
nice_user
idle
steal
soft_irq
port_receive_cpu_util_entries
port_receive_cpu_util_entries_exit
port_receive_cpu_util
timeout_util
port_receive_util
port_garbage
timeout_uint32
port_exit
port_receive_uint32
port_server_flush_messages
port_server_handle_reply
port_server_loop
port_server_init
port_server_start
port_server_call
measurement_server_loop
unsupported_os
measurement_server_init
measurement_server_start
measurement_server_restart
measurement_server_call
negative_diff
ensure_positive_diff
val_diff2
val_diff
one_step_backwards
state_list_add
state_list_diff
state_list_sum
mk_rel_states
cpu_util_rel_det_pcpu
cpu_util_rel_det
cpu_util_rel_pcpu
cpu_util_rel
cpu_util
cpu_util_diff
sunify
get_util_measurement
irix
irix64
openbsd
darwin
internal
get_uint32_measurement
server_died
util
avg15
avg5
avg1
nprocs
start_param
server_name
startp
childspec
sysinfo
param_default
param_type
dummy_reply
start_os_sup
start_memsup
start_disksup
start_cpu_sup
os_sup_server
os_mon_sup
nteventlog
os_mon_sysinfo
cpu_sup
memsup
disksup
os_sup
os_mon_mib
wrong_errlog_type
sasl_error_logger_type
'-wildcard_comp/2-lc$^0/1-0-'
'-compile_alt/2-lc$^0/1-0-'
compile_alt
compile_range
compile_charset1
compile_charset
missing_delimiter
compile_part_to_sep
compile_part
compile_wildcard_3
compile_wildcard_2
compile_wildcard_1
compile_wildcard
do_alt
do_star
star
question
one_of
wildcard_5
wildcard_4
wildcard_3
wildcard_2
wildcard_1
last_modified
fold_files2
fold_files1
fold_files
is_regular
is_file
is_dir
compiled_wildcard
wildcard_comp
badpattern
'-report_cover/1-fun-0-'
analyze_to_file
html
analyze
'-report_cover/1-fun-1-'
'-filter_exit_map/2-fun-0-'
'-filter_exit_map/2-fun-1-'
'-filter_exit_map/2-fun-2-'
'-filter_exit_map/2-lc$^0/1-0-'
no_such_user
'-with_user/2-fun-0-'
no_such_vhost
'-with_vhost/2-fun-0-'
'-nodeparts/1-fun-0-'
'-upmap/2-lc$^0/1-0-'
'-upmap/2-fun-0-'
'-upmap/2-lc$^1/1-1-'
'-map_in_order/2-fun-0-'
'-table_foreach/2-fun-0-'
'-table_foreach/2-fun-1-'
'-write_term_file/2-lc$^0/1-0-'
'-manage_applications/6-fun-0-'
queue_fold
ceil
unfold
cannot_stop_application
cannot_start_application
manage_applications
format_stderr
cannot_create_parent_dirs
dirty_dump_log1
dirty_dump_log
dirty_foreach_key1
dirty_foreach_key
dirty_read_all
table_foreach
map_in_order
upmap
intersperse
tcp_name
encode_to_string
nodeparts
makenode
execute_mnesia_transaction
with_user_and_vhost
with_vhost
with_user
filter_exit_map
with_exit_handler
throw_on_error
report_coverage_percentage
'TOTAL'
report_cover
compile_beam_directory
cover
enable_cover
rs
longstr
r_arg
resource
set_config
get_config
protocol_error
amqp_error
frame_error
die
polite_pause
method_record_type
ensure_parent_dirs_exist
append_file
'Argument__1'
'Argument__2'
invalid_objects_list
bad_hash_bif
bad_version
invalid_type_code
'-init_file/17-fun-0-'
'-read_file_header/2-fun-0-'
'-bulk_input/4-fun-0-'
'-output_objs/4-fun-0-'
'-output_objs2/8-fun-0-'
'-compact_input/5-fun-0-'
'-bchunk_init/2-fun-0-'
'-bchunk_input/6-fun-0-'
'-fast_output/5-fun-0-'
'-fast_output2/6-fun-0-'
'-fast_output_end/2-fun-0-'
'-prepare_file_init/5-fun-0-'
'-prepare_file_init/5-fun-1-'
'-prepare_file_init/5-fun-2-'
'-prepare_file_init/5-fun-3-'
'-segment_file/4-fun-0-'
'-segment_file/4-fun-1-'
'-fsck_input/5-fun-0-'
'-file_header/3-fun-0-'
'-file_header/3-fun-1-'
'-file_header/3-fun-2-'
'-free_list_to_file/6-fun-0-'
'-table_parameters/1-fun-0-'
bin2keybins2
bin2keybins
bin2objs2
bin2objs
binobjs2terms
per_bag_key
per_set_key
read_bucket
v_segment
v_parts
closed_properly
slot_end
bins_bag
bins_set
bin2bins
scan_skip
arrpart_cache
check_pread_arg
check_pread2_arg
slot_position
update_no_keys
dup_object
old_dup_object
eval_dupbag
bag_object
eval_bag
get_objects
make_bins
same_terms
eval_end
eval_comms
eval_key1
eval_key
eval_slot
one_bucket_removed
one_bucket_added
eval_bucket_keys
eval_buckets
read_buckets
remove_slot_tag
tag_with_slot
eval_work_list
slot_objects
seg_zero
hash_invars
grow
may_grow1
re_hash_split
bar
re_hash_slots
re_hash_write
split_bins
re_hash
code_to_hash_method
hash_method_to_code
bin_to_tree1
bin_to_tree
bad_freelists
free_lists_from_file
free_list_to_file
free_lists_to_file
file_header
failed_to_save_free_lists
sz2pos
make_objects
fsck_objs
read_more_bytes
fsck_read
count_input1
count_input
temp_file
seg_file_item
seg_file
segment_file
prep_set_slot
prep_slot
output_slot
not_a_tuple
output_slots
write_sizes
all_sizes
write_all_sizes
foo
bin2term_v8
bin2term1
bin2term
allocate_all
free_hole
alloc_hole
allocate_all_objects
write_loop
prepare_file_init
fast_write_sizes
fast_write_all_sizes
write_segment_file
fast_output_end
fast_output2
fast_output
make_slots
do_make_slots
bchunk_input
init_fun
bchunks
compact_objs
compact_read
compact_input
dets_compact
output_objs2
bulk_objects
no_segs
no_parts
cache_segps1
cache_arrparts
max_objsize
alloc_seg
alloc_part
allocate_segment
init_segments
init_parts
slots2
init_file
'$hash2'
badexpr
binary_comprehension
bitlevel_binaries
'-expr/5-fun-0-'
'-expr/5-fun-14-'
'-expr/5-fun-11-'
'-expr/5-fun-8-'
'-expr/5-fun-5-'
'-expr/5-fun-21-'
'-expr/5-fun-2-'
'-expr/5-fun-18-'
'-expr/5-fun-15-'
'-expr/5-fun-12-'
'-expr/5-fun-9-'
'-expr/5-fun-6-'
'-expr/5-fun-3-'
'-expr/5-fun-19-'
'-expr/5-fun-16-'
'-expr/5-fun-13-'
'-expr/5-fun-10-'
'-expr/5-fun-7-'
'-expr/5-fun-4-'
'-expr/5-fun-20-'
'-expr/5-fun-1-'
'-expr/5-fun-17-'
'-expr/5-fun-22-'
'-find_maxline/1-fun-0-'
'-eval_lc1/6-fun-0-'
'-eval_lc1/6-fun-1-'
'-eval_lc1/6-fun-2-'
'-eval_bc1/6-fun-0-'
'-eval_bc1/6-fun-1-'
'-eval_bc1/6-fun-2-'
'-eval_b_generate/7-fun-0-'
'-eval_b_generate/7-fun-1-'
'-match1/4-fun-0-'
'-match1/4-fun-1-'
'-add_bindings/2-fun-0-'
'-merge_bindings/2-fun-0-'
'-ev_expr/1-lc$^0/1-0-'
stacktrace
bad_module_name
expand_module_name
ev_expr
partial_eval
eval_expr
is_constant_expr
merge_bindings
add_bindings
del_binding
add_binding
match_list
match_tuple
match_bits
match1
string_to_conses
illegal_pattern
number
reference
type_test
guard_test
guard_expr
guard0
guard1
guard
match_clause
recv_all
merge_queue
receive_clauses
case_clauses
try_clauses
if_clauses
eval_op
expr_list
'-inside-an-interpreted-fun-'
eval_fun
ret_expr
bad_filter
is_guard_test
eval_filter
bin_gen
eval_b_generate
bad_generator
eval_generate
eval_bc1
eval_bc
eval_lc1
eval_lc
no_env
local_func2
local_func
unhide_calls
hide_calls
modify_line
'$erl_eval_max_line'
find_maxline
undef_record
transform_from_evaluator
bif
unbound
argument_limit
used_vars
exprs_opt
check_command
expr
'-lc/1-fun-0-'
'-lc_batch/1-lc$^0/1-0-'
'-i/2-fun-0-'
'-paged_i/4-fun-0-'
'-paged_i/4-fun-1-'
'-all_procs/0-fun-0-'
'-m/0-fun-0-'
'-nregs/0-fun-0-'
'-all_regs/0-lc$^0/1-0-'
'-print_node_regs/1-fun-0-'
'-print_node_regs/1-fun-1-'
appcall
parsetools
yecc
y
tools
xref
xm
w
lengths
ls_print
ls
pwd
portformat
portline
procformat
procline
portinfo
pwhereis
pids_and_ports
print_node_regs
all_regs
regs
nregs
print_time
split_print_exports
print_exports
get_compile_info
get_compile_options
notime
get_compile_time
print_object_file
bi
f_p_e
mformat
m
bt
q
all_procs
iformat
mfa_string
'(c)ontinue (q)uit -->'
paged_i
ni
nc
split_def
'@d'
'@i'
'@o'
lc_batch
check_load
output_generated
machine_load
report_errors
report_warnings
help
'-msort/1-fun-0-'
'-mkeysort/2-fun-0-'
'-disk_map_segment/2-lc$^0/1-0-'
'-disk_map/1-lc$^0/1-0-'
'-list_to_tree/1-fun-0-'
'-leafs_to_nodes/4-fun-0-'
'-mk_node/1-fun-0-'
bplus_put_rkey
bplus_put_lkey
bplus_extend_tree_3
bplus_extend_tree_2
bplus_extend_tree
bplus_put_subtree
bplus_leaf_to_list
bplus_mk_leaf
bplus_node_to_list
bplus_mk_node
bplus_join_tree_3
bplus_join_tree_2
bplus_joinright_tree
bplus_joinleft_tree
bplus_split_node_3
bplus_split_node_2
bplus_split_node
bplus_split_leaf_3
bplus_split_leaf_2
bplus_split_leaf
bplus_reorganize_tree_jr
bplus_reorganize_tree_jl
bplus_reorganize_tree_s
bplus_reorganize_tree_r
bplus_reorganize_tree_l
bplus_reorganize_tree_del
bplus_reorganize_tree_ins
bplus_select_sub_tree_2
bplus_select_sub_tree
bplus_delete_in_leaf_3
bplus_delete_in_leaf_2
bplus_delete_in_leaf
join_right
join_left
bplus_delete_in
bplus_insert_in_leaf_3
bplus_insert_in_leaf_2
bplus_insert_in_leaf
left
bplus_insert_in
bplus_delete
bplus_insert
lookup_next_leaf_2
lookup_next_leaf
bplus_lookup_next
bplus_lookup_first
bplus_lookup_leaf_2
bplus_lookup_leaf
bplus_lookup
bplus_empty_tree
collect_node_interval
collect_leaf_interval
collect_interval2
collect_interval
get_first_key
split_list
mk_node
leafs_to_nodes
list_to_tree
leaf_to_bin
node_to_bin
tree_to_bin2
tree_to_bin
collect_node
collect_leaf
l
n
collect_tree2
v
collect_tree
segment_fragment_to_pointers
segment
pointer
disk_map_pread
disk_map_segment
disk_map_segment_p
get_disk_map
collect_all_interval
find_next_free
allocated1
all_allocated_as_list
my_buddy
make_zeros
log2
set_freelists
free_in_pos
move_down
reserve_buddy
undo_free
no_more_space_on_file
find_first_free
alloc
alloc_many2
alloc_many1
alloc_many
empty_free_lists
init_alloc
init_slot
init_slots_from_old_file
is_empty_cache
reset_cache
type_to_code
badtype
code_to_type
no_disk_map
read_n
file_error_close
position_close
disk_map
ipread
bad_object_header
per_key
mkeysearch2
mkeysearch
mkeysort
msort
tcmp
binrev
collect_line_list
collect_line_bin
collect_line1
collect_chars_list
collect_chars1
char_list
string_char
write_string1
name_chars
quote_atom
write_atom
write_binary_body
write_binary
write_ref
write_port
write_tail
fwrite_g
indentation
wait_io_mon_reply
default_output
default_input
parse_erl_form
scan_erl_form
scan_erl_exprs
fread
ebadf
conv_reason
get_password
o_request
to_tuple
notag
'-handle_close/4-lc$^0/1-0-'
'-pending_call/7-fun-0-'
check_pending
pending_call
do_link
handle_close
do_internal_open
verbose_flag
pending_reply
dets_owners
dets_registry
write_head1
write_head
sup_get
format_key_val
write_report2
is_my_info_report
is_my_error_report
service_name_missmatch
client_node
'-resend_sync_nodes/1-fun-0-'
'-soft_purge/1-fun-0-'
'-brutal_purge/1-fun-0-'
'-check_rel_data/3-fun-0-'
'-do_check_install_release/4-fun-0-'
'-do_remove_release/4-fun-0-'
'-do_remove_release/4-fun-1-'
'-set_status/3-fun-0-'
'-remove_file/1-fun-0-'
'-transform_release/3-fun-0-'
'-transform_release/3-fun-1-'
'-make_dir/2-fun-0-'
'-takewhile/5-fun-0-'
copy_start_config
backup_start_config
set_static_files
move_start_erl
write_start_erl
backup_start_erl
write_start_m
write_start
read_master
remove_files
consult_master
at_all_masters
bad_masters
all_masters
do_remove_files
do_rename_files
do_copy_file1
do_copy_file
copy_file_m
do_ensure_RELEASES
ensure_RELEASES_exists
move_releases
update_releases
backup_releases
do_copy_files
write_releases_m
do_write_release
write_releases
cannot_extract_file
keep_old_files
extract_tar
extract
files
extract_rel_file
do_check_file
check_file_masters
check_file
check_opt_file
transform_release
write_new_start_erl
check_start_prg
prepare_restart_new_emulator
prepare_restart_nt
mon_nodes
get_appls
change_appl_data
do_write_file
no_such_file
remove_file
memlib
diff_dir
get_latest_release
set_status
try_downgrade
bad_relup_file
try_upgrade
no_matching_relup
get_rh_script
do_set_removed
do_set_unpacked
do_remove_release
do_remove_service
set_permanent_files
do_reboot_old_release
'heart:set_cmd() error'
do_back_service
bad_status
old
do_make_permanent
service_rename_failed
remove_service
enable_service
disable_service
store_service
new_service
rename_service
get_service
do_make_services_permanent
tmp_current
do_install_release
already_installed
do_check_install_release
not_a_directory
no_such_directory
bad_rel_data
unpacking
erts
check_rel_data
bad_rel_file
check_rel
clean_release
unpacked
existing_release
do_unpack_release
brutal_purge
resend_sync_nodes
bad_parameter
client_directory
masters
is_client
mk_lib_name
restart_new_emulator
no_such_release
static_emulator
no_check
do_check
start_prg
releases_dir
read_appspec
no_app_found
read_application
read_app
no_appup_found
version_not_in_appup
find_script
app_not_running
ensure_running
eval_appup_script
dn
downgrade_script
translate_scripts
upgrade_script
unknown_version
downgrade_app
upgrade_app
create_RELEASES
check_script
which_releases
install_file
set_removed
set_unpacked
remove_release
reboot_old_release
check_timeout
suspend_timeout
code_change_timeout
update_paths
install_option
illegal_option
error_action
check_install_options
install_release
check_install_release
unpack_release
'-pid_delete/1-fun-0-'
system_time
positive
next_timeout
pid_delete
delete_ref
timer_timeout
repeat
interval
timer_interval_tab
timer_tab
hms
hours
seconds
now_diff
send_interval
apply_interval
kill_after
apply_after
df
dm
dy
year_day_to_date2
year_day_to_date
dty
day_to_year
valid_date1
valid_date
universal_time_to_local_time
universal_time
time_to_seconds
time_difference
seconds_to_time
seconds_to_daystime
now_to_local_time
now_to_universal_time
now_to_datetime
local_time_to_universal_time_dst
last_day_of_the_month1
last_day_of_the_month
is_leap_year1
is_leap_year
gregorian_seconds_to_datetime
gregorian_days_to_date
day_of_the_week
datetime_to_gregorian_seconds
date_to_gregorian_days
format_pdict
get_now
new_intensity
fetch_default_data
fetch_config_data
total_intensity
accept_intensity
max_intensity
weight
total_requests
accepted_requests
get_overload_info
set_config_data
overload_weight
overload_max_intensity
premature_eof
nopid
old_version
incompatible_arguments
'-from_ets_fun/2-fun-0-'
'-to_ets/2-fun-0-'
'-traverse/2-fun-0-'
'-verbose/1-fun-0-'
'-defaults/2-fun-0-'
'-stream_end/5-fun-0-'
'-finsert_new/2-fun-0-'
'-finsert_new/2-fun-1-'
'-unlink_fixing_procs/1-fun-0-'
'-flookup_keys/2-fun-0-'
'-fsck_copy/4-fun-0-'
'-close_files/3-fun-0-'
all_free
v_free_list
v_segments
read_4
get_head_field
err
pread_n
find_allocated
scan_read
scan_objs
check_safe_fixtable
find_next_allocated
init_scan
cache_obj_op
cache_key_op
cache_lookup
cache_binary
write_cache
file_no_things
no_things
check_objects
find_object
where_is_object
try_update_tuple2
try_update_tuple
do_update_counter
fslot
close_tmp
close_files
free_n_objects
repair_failed
initialization_failed
fsck_copy1
fsck_copy
tmpdir
output_objs
do_sort
fsck_input
dets_repair
fsck_try_est
eacces
tempfile
fsck_try
choose_no_slots
cannot_repair
try_again
compact_init
prep_table_copy
module2version
version2module
init_disk_map
fopen_init_file
init_freelist
cache_segps
new_cache
open_final
do_repair
version_mismatch
keypos_mismatch
type_mismatch
need_compacting
compact
needs_repair
force
version_bump
fopen_existing_file
fopen3
fopen2
beyond_key2
cmp
beyond_key
fnext_slot
fnext_search
db_hash
fnext
fmember
do_delete
do_fmatch_delete
filter_terms
filter_binary_terms
do_fmatch_constant_keys
do_fmatch_delete_var_keys
fmatch_delete
fmatch_delete_init
contains_variable
find_all_keys
fmatch
scan_error
fmatch_init
flookup_keys
not_used
bulk_init
bulk_input
dets_init
do_finit
fixed_table
finit
maybe_put
do_open_file
try_bchunk_header
test_bchunk_format
no_keys
bchunk_format
no_slots
no_objects
safe_fixed
file_size
finfo
check_growth
unlink_fixing_procs
remove_fix
get_freelists
do_safe_fixtable
finsert_new
finsert
slot_objs
ffirst1
ffirst
fdelete_object
fdelete_key
initiate_file
do_delete_all_objects
fdelete_all_objects
finished
read_bchunks
do_bchunk
all_allocated
table_parameters
do_bchunk_init
corrupt_file
ensure_written
do_perform_save
perform_save
stop_disk_map
fclose
pread_close
read_file_header
constants
family
lookup_replies
penalty
stream_end2
stream_end1
stream_end
no_more
stream_loop
stream_op
start_auto_save_timer
mark_dirty
new_dirty
vformat
many_times
saved
may_grow
corrupt_reason
set_verbose
apply_op
dets_bug
debug_mode
do_apply_op
open_file_loop2
open_file_loop
'$dets_call'
req
treq
is_version
is_comp_min_max
is_max_no_slots
is_min_no_slots
min_no_slots
max_no_slots
access
estimated_no_objects
auto_save
repl
defaults
compile_match_spec
foldl_bins
do_foldl_bins
chunk_match
init_chunk_match
do_safe_match
safe_match
corrupt
bad_object
do_trav_bins
match_init
do_trav
do_traverse
istart_link
remove_user
open_args
file_error
dets_process_died
object
cont
do_match_delete
match_delete_init
bindings
lookup_keys
tooshort
not_a_dets_file
is_dets_file
is_compatible_bchunk_format
internal_open
internal_close
users
get_pid
from_ets_fun
thrown
initialize
not_closed
check_file_header
fileheader
fsck
fixed
delete_key
bchunk_init
dets_cont
delete_alarm_handler
add_alarm_handler
get_alarms
clear_alarm
set_alarm
write_report
'-safe_apply/3-fun-0-'
'-mk_str/0-lc$^0/1-0-'
'-install_fallback_master/2-fun-0-'
'-restore_recs/4-lc$^0/1-0-'
'-send_fallback/2-fun-0-'
'-fallback_receiver_loop/4-lc$^0/1-0-'
'-do_fallback_start/2-fun-0-'
'-do_fallback_start/2-lc$^0/1-0-'
'-create_dat_files/2-fun-0-'
dcl_log_header
'-create_dat_files/2-fun-5-'
'-create_dat_files/2-fun-6-'
'-create_dat_files/2-fun-7-'
fallback_tab
dcd_log_header
'-create_dat_files/2-fun-8-'
'-create_dat_files/2-fun-1-'
'-create_dat_files/2-fun-2-'
'-create_dat_files/2-fun-3-'
'-create_dat_files/2-fun-4-'
'-do_uninstall/3-lc$^0/1-0-'
'-do_uninstall/5-fun-0-'
'-do_uninstall/5-fun-1-'
'-do_traverse_backup/7-fun-0-'
filter_foldl
trav_apply
iter_done
do_traverse_backup
rec_uninstall
local_uninstall_fallback
do_uninstall
uninstall_fallback_master
do_uninstall_fallback
create_dat_files
init_dat_files
not_local
local_tab
restore_tables
mnesia_local_tables
do_fallback_start
tm_fallback_start
throw_bad_res
abort_write
fallback_receiver_loop
check_fallback_dir_arg
check_fallback_dir
local_fallback_error
fallback_receiver
fallback_tmp_name
fallback_name
active_fallback
rec_answers
send_fallback
get_fallback_nodes
records
restore_recs
install_fallback_master
atom_list
scope
check_fallback_arg_type
check_fallback_args
fallback_args
do_install_fallback
do_apply
commit_write
open_write
make_initial_backup
mk_str
schema2bup
lookup_schema
convert_0_1
convert_schema
refresh_cookie
backup_log_header
verify_header
open_read
do_read_schema_section
log_header
read_schema_section
fallback
abort_restore
safe_apply
iter
close_read
sasl_safe_sup
pred
delete_error_logger_mf
add_error_logger_mf
args
delete_sasl_error_logger
add_sasl_error_logger
error_logger_mf_maxfiles
get_mf_maxf
error_logger_mf_maxbytes
get_mf_maxb
error_logger_mf_dir
get_mf_dir
get_mf
get_error_logger_mf
get_sasl_error_logger_type
get_sasl_error_logger
'-do_check_type/2-fun-0-'
'-detect_inconcistency/2-lc$^0/1-0-'
report_inconsistency
has_remote_mnesia_down
detect_inconcistency
running_partitioned_network
media
r9b_plain
standard
do_check_type
check_type
minutes
pid_sort_order
default_env
process_config_args
process_q
detect_partitioned_network
has_mnesia_down
truncated
inconsistent_database
accept_protocol
reopen
uninitialized
fallback_bup
non_empty_dir
pending_checkpoint_pids
pending_checkpoints
mnesia_lock_counter
mnesia_lock_queue
mnesia_sticky_locks
mnesia_held_locks
trans_log_writes_prev
trans_log_writes_left
trans_log_writes
trans_aborts
terminate_proc
init_proc
start_proc
unsafe_call
needs_protocol_conversion
acceptable_protocol_versions
reject
check_protocol
protocol_negotiated
negotiate_protocol_impl
negotiate_protocol
close_log
reopen_log
open_dets
'-do_start/4-fun-0-'
read_size
cast_binary
cat
get_chars_empty
io_request_loop
std_reply
mnesia_substr
mnesia_fallback
mnesia_dumper_load_regulator
mnesia_sp
month
t1
t
write_time
string_p1
string_p
local_time_to_universal_time
utc_log
maybe_utc
write_event
write_events1
write_events
install_prev
'-wait_nodes/2-fun-0-'
sync_nodes_optional
get_sync_optional_nodes
sync_nodes_mandatory
get_sync_mandatory_nodes
sync_nodes_timeout
get_sync_timeout
get_sync_data
check_up
mandatory_nodes_down
wait_nodes
sync_nodes
'__not_used'
dist_ac_took_control
go
lait
liat
daeh
filter_r
filter_f
split_r1_to_f2
split_f1_to_r2
drop_r
drop
peek_r
peek
get_r
out_r
in_r
is_queue
enotsup
contains_ctrl_g_or_ctrl_c
err_func
format_prompt
prompt
get_chars_more
tail
head
get_chars_apply
get_chars_bytes
get_chars_req
substitute_negations
io_reply
send_port
put_port
io_requests
get_until
collect_chars
rows
columns
requests
get_geometry
do_io_request
get_fd_geometry
snoc
server_loop
start_new_shell
start_init_shell
link_and_save_shell
new_shell
unknown_exit
catch_loop
read_mode
interfaces
badcall
terminate_pid
current_pos
'-running_nodes/1-lc$^0/1-0-'
'-local_active_tables/0-fun-0-'
'-active_tables/0-fun-0-'
'-core_file/0-fun-0-'
'-core_file/0-lc$^0/1-0-'
'-procs/0-fun-0-'
'-procs/0-fun-1-'
'-read_log_files/0-lc$^0/1-0-'
mnesia_file
'-dir_info/0-lc$^0/1-0-'
'-relatives/0-fun-0-'
send_table
'-workers/1-fun-0-'
'-locking_procs/1-lc$^0/1-0-'
'-locking_procs/1-fun-0-'
'-suffix/2-fun-0-'
'-vcore/0-fun-0-'
'-vcore/1-fun-0-'
'-vcore_elem/1-fun-0-'
'-report_system_event/1-fun-0-'
'-mkfuns/1-fun-2-'
'-mkfuns/1-fun-3-'
'-mkfuns/1-fun-0-'
'-mkfuns/1-fun-1-'
is_debug_compiled
eval_debug_fun
deactivate_debug_fun
update_debug_info
debug_info
activate_debug_fun
mnesia_debug
scratch_debug_fun
readable_indecies
dets_sync_close
mnesia_table_lock
dets_sync_open
mkfuns
trav_ret
db_erase_tab
db_update_counter
db_match_erase
db_erase
catch_select
catch_match_object
db_put
db_chunk
db_init_chunk
copy_file_loop
copy_file
'$$$_report'
save2
save
mnesia_error
mnesia_warning
mnesia_info
important
start_event
catch_notify
mnesia_system_event
random_time
mnesia_fatal
report_fatal
no_variable
not_a_db_node
bad_index
index_exists
truncated_binary_file
last_error
fix_error
crashinfo
vcore_elem
nocore
vcore
dat
core
view
senders
dumper
mk_info_tuple
ets_info
cwd
mnesia_dir
log_files
read_log_files
code_path
code_loaded
etsinfo
gvar
relatives
workers
locking_procs
tid_locks
load_info
trans_info
schema_file
dir_info
get_workers
get_master_node_info
get_node_number
mnesia_tid_locks
mkcore
core_file
coredump
dist_coredump
incr_counter
set_counter
create_counter
set_local_content_whereabouts
remote_copy_holders
othertype
active_tables
local_active_tables
application_load_error
lsort_add
add_lsort
add_list
pr_other
search_key
tab2dcl
tab2tmp
active_here
pad_name
show
mnesia_status
is_running_remote
uniq1
is_string
sort_commit2
sort_commit
elems
key_search_all
key_search_delete
search_delete
start_out
oldshell
get_user
wait_for_user_p
start_user
relay1
relay
start_slave
nouser
create
key
nested_transaction
'-do_set_schema/2-lc$^0/1-0-'
'-delete_cstruct/2-fun-0-'
'-delete_schema/1-lc$^0/1-0-'
continue
'-read_cstructs_from_disc/0-fun-0-'
'-list2cs/1-lc$^0/1-0-'
'-verify_cstruct/1-fun-0-'
'-verify_cstruct/1-fun-1-'
'-verify_cstruct/1-fun-2-'
'-verify_cstruct/1-fun-3-'
'-verify_nodes/1-fun-0-'
'-create_table/1-fun-0-'
'-do_multi_create_table/1-fun-0-'
'-unsafe_make_create_table/1-fun-0-'
'-check_if_exists/1-fun-0-'
'-delete_table/1-fun-0-'
'-make_delete_table/2-lc$^0/1-0-'
'-change_table_frag/2-fun-0-'
'-do_change_table_frag/2-lc$^0/1-0-'
'-clear_table/1-fun-0-'
'-add_table_copy/3-fun-0-'
'-del_table_copy/2-fun-0-'
'-move_table/3-fun-0-'
'-change_table_copy_type/3-fun-0-'
'-add_table_index/2-fun-0-'
'-del_table_index/2-fun-0-'
'-add_snmp/2-fun-0-'
'-del_snmp/1-fun-0-'
'-transform_table/4-fun-0-'
'-transform_table/4-fun-1-'
'-make_transform/4-fun-0-'
'-make_transform/4-fun-1-'
'-change_table_access_mode/2-fun-0-'
'-change_table_load_order/2-fun-0-'
'-write_table_property/2-fun-0-'
'-change_prop_in_existing_op/4-lc$^0/1-0-'
'-do_read_table_property/2-fun-0-'
'-delete_table_property/2-fun-0-'
'-prepare_op/3-fun-0-'
'-prepare_op/3-lc$^0/1-1-'
log_mnesia_up
'-prepare_op/3-fun-1-'
'-prepare_op/3-lc$^1/1-0-'
'-lock_del_table/4-fun-0-'
'-lock_del_table/4-fun-1-'
'-get_table_properties/1-lc$^0/1-0-'
'-restore/3-fun-0-'
'-restore/3-fun-1-'
'-check_restore_arg/2-lc$^0/1-3-'
'-check_restore_arg/2-lc$^1/1-2-'
'-check_restore_arg/2-lc$^2/1-1-'
'-check_restore_arg/2-lc$^3/1-0-'
'-do_restore/2-lc$^0/1-0-'
'-arrange_restore/3-fun-0-'
'-where_to_commit/2-lc$^0/1-0-'
'-where_to_commit/2-lc$^1/1-1-'
'-where_to_commit/2-lc$^2/1-2-'
'-dump_tables/1-fun-0-'
'-merge_schema/0-fun-0-'
'-do_merge_schema/0-lc$^0/1-0-'
del_active_replica
unannounce_im_running
merge_error
verify_merge
do_merge_versions
merge_versions
change_storage_type
compare_storage_type
merge_storage_type
do_merge_cstructs
merge_cstructs
do_make_merge_schema
make_merge_schema
not_merged
merged
cstructs
get_cstructs
missing_lock
do_merge_schema
make_dump_tables
do_dump_tables
skip_tab_items
restore_tab_items
restore_recreate
restore_schema
restore_func
restore_items
iterate
arrange_restore
do_restore
bad_default_op
default_op
skip_tables
keep_tables
recreate_tables
check_restore_arg
error_recs
error_fun
clear_tables
r
info2
tmp_suffixes
real_suffixes
known_suffixes
has_known_suffix
purge_known_files
purge_tmp_files
purge_dir
del_transient
ram_delete_table
purge_some_logs
close_dets
unannounce_add_table_copy
tm_del_copy
unsafe_close_dets
unset
undo_prepare_op
restore_op
undo_prepare_ops
release_schema_commit_lock
undo_prepare_commit
transform_obj
transform_objs
set_remote_where_to_read
set_where_to_read
lock_del_table
receive_sync
unsafe_open_dets
disk_type
create_disc_only_table
unsafe_close_log
open_log
create_disc_table
unsafe_mktab
create_ram_table
tm_change_table_copy_type
raw_named_dump_table
purge_all_logs
not_active_here
announce_im_running
updated
mnesia_lock
tab2dcd
get_network_copy
ets2dcd
dmp
prepare_snmp
dump_table
rec
bad_commit
cs_to_storage_type
merge_schema
mnesia_down
coord
part
sync_trans
prepare_op
prepare_ops
wait_for_schema_commit_lock
dumped
schema_prepare
mandatory
optional
commit
prepare_commit
make_delete_table_properties
do_delete_table_property
merge_with_previous
replace_props
find_props
insert_prop
do_read_table_property
delete_property
update_existing_op
change_prop_in_existing_op
make_write_table_properties
write_property
do_write_table_property
make_change_table_load_order
do_change_table_load_order
make_change_table_access_mode
do_change_table_access_mode
transform
make_transform
do_transform_table
make_del_snmp
do_del_snmp
make_add_snmp
do_add_snmp
del_index
make_del_table_index
do_del_table_index
add_index
make_add_table_index
do_add_table_index
incompatible
diff
make_change_table_copy_type
do_change_table_copy_type
make_move_table
do_move_table
opt_add
new_cs
del_node
remove_node_from_tabs
dbg_out
make_del_table_copy
do_del_table_copy
make_add_table_copy
do_add_table_copy
make_clear_table
do_clear_table
do_change_table_frag
make_delete_table2
frag_names
lookup_foreigners
lookup_frag_hash
single_frag
make_delete_table
whole_table
do_delete_table
existed_before
check_if_exists
wlock_no_exist
unsafe_make_create_table
make_create_table
do_create_table
expand_cstruct
do_multi_create_table
check_active
ensure_not_active
ensure_non_empty
is_remote_member
not_active
ensure_active
ensure_writable
alt
do_verify
verify_nodes
check_ustruct
not_supported
verify_cstruct
has_duplicates
check_duplicates
check_keys
attr_to_pos
pick
etype
must
list2cs
rec2list
cs2list
do_insert_schema_ops
insert_schema_ops
transaction_crashed
transaction_done
schema_coordinator
schema_transaction
get_tid_ts_and_lock
repair
get_initial_schema
dets_to_ets
do_read_disc_schema
tab2dmp
exists
tab2dat
fallback_to_schema
read_disc_schema
mktab
read_schema
unlock_schema
lock_schema
check_can_write
has_no_disc
opt_create_dir
dir_exists
opt_disc
already_exists
remote_read_schema
ensure_no_schema
delete_schema2
delete_cstruct
load_reason
load_node
load_by_force
where_to_write
commit_work
clear_whereabouts
report_table_event
tm_retain
insert_cstruct
incr_version
wild
cs_to_nodes
schema_cs_to_storage_type
set_frag_hash
frag_properties
user_properties
load_order
do_set_schema
get_create_list
set_schema
exit_on_error
add_active_replica
initial
current
unclear
mnesia_event
mnesia_snmp_sup
mnesia_registry
mnesia_late_loader
mnesia_kernel_sup
mnesia_frag_old_hash
mnesia_frag_hash
mnesia_frag
mnesia_loader
mnesia_checkpoint_sup
mnesia_backup
'-get_next_tskey/3-fun-0-'
'-do_foldl/8-fun-0-'
'-do_foldr/8-fun-0-'
'-select/5-fun-0-'
'-select/6-fun-0-'
'-any_table_info/2-fun-0-'
'-info/0-fun-0-'
'-info/0-fun-1-'
'-info/0-fun-2-'
'-display_system_info/4-lc$^0/1-0-'
'-display_system_info/4-fun-0-'
'-display_system_info/4-lc$^1/1-1-'
'-display_system_info/4-fun-1-'
'-display_tab_info/0-fun-0-'
'-display_tab_info/0-lc$^0/1-0-'
where_to_commit
active_replicas
access_mode
'-display_tab_info/0-fun-1-'
'-display_tab_info/0-fun-2-'
'-system_info2/1-lc$^0/1-0-'
'-set_master_nodes/1-lc$^0/1-0-'
'-log_valid_master_nodes/4-fun-0-'
'-snmp_get_row/2-fun-0-'
'-snmp_order_keys/4-lc$^0/1-0-'
key_to_oid
'-snmp_filter_key/4-fun-0-'
put_activity_id
get_activity_id
do_fixtable
qlc_format
ascending
frag_hash
is_unique_keys
is_sorted_objects
indices
qlc_info
qlc_opts
post_qlc
stop_fun
mnesia_activity
parent_value
pre_qlc
parent_fun
dump_to_textfile
mnesia_text
load_textfile
snmp_filter_key
oid_to_key
snmp_oid_to_mnesia_key
get_mnesia_key
snmp_get_mnesia_key
get_ordered_snmp_key
snmp_order_keys
endOfTable
get_next_index
snmp_get_next_index
mnesia_snmp_hook
get_row
snmp
snmp_get_row
del_snmp
snmp_close_table
add_snmp
snmp_open_table
report_system_event
mnesia_user
report_event
unsubscribe
sync_dump_log
dump_log
copy_holders
cstruct
log_master_nodes
log_valid_master_nodes
unlock_table
read_cstructs_from_disc
set_master_nodes
change_table_load_order
change_table_access_mode
force_load_table
dump_tables
change_table_frag
delete_table_property
write_table_property
user_property
read_table_property
transform_table
del_table_index
add_table_index
move_table
move_table_copy
delete_table
restore
backup_checkpoint
deactivate
deactivate_checkpoint
activate
activate_checkpoint
uninstall_fallback
install_fallback
traverse_backup
backup
load_mnesia_or_abort
system_info_items
mnesia_checkpoint
get_log_writes
mnesia_dumper
get_held_locks
get_lock_queue
mnesia_log
get_transactions
fallback_exists
mnesia_bup
mnesia_not_loaded
read_nodes
trans_commits
trans_failures
read_counter
trans_restarts
checkpoints
transaction_log_writes
log_version
protocol_version
master_node_tables
schema_version
subscribers
transactions
auto_repair
backup_module
core_dir
dump_log_load_regulation
dump_log_time_threshold
dump_log_update_in_place
dump_log_write_threshold
embedded_mnemosyne
event_module
fallback_error_function
ignore_fallback_at_startup
max_wait_for_decision
no_table_loaders
transaction_commits
transaction_failures
transaction_restarts
local_tables
system_info2
storage_count
tables
get_master_node_tables
display_tab_info
display_system_info
all_nodes
fallback_activated
schema_location
mini_info
mnesia_decision
lock_queue
held_locks
get_info
error_desc
error_description
bad_info_reply
info_reply
raw_table_info
get_master_nodes
mnesia_recover
get_table_properties
master_nodes
any_table_info
node_not_running
dirty_rpc_error_tag
check_w2r
nowhere
do_dirty_rpc
dirty_rpc
db_prev_key
dirty_prev
db_next_key
dirty_next
db_last
dirty_last
db_first
db_slot
dirty_slot
dirty_index_read
dirty_index_match_object
dirty_all_keys
dirty_sel_cont
dirty_sel_init
remote_dirty_select
dirty_select
remote_dirty_match_object
dirty_match_object
dirty_read
combine_error
do_dirty_update_counter
dirty_update_counter
do_dirty_delete_object
dirty_delete_object
do_dirty_delete
dirty_delete
dirty
do_dirty_write
dirty_write
mnesia_index
index_read
attr_tab_to_pos
mnesia_schema
index_match_object
wild_pattern
all_keys
get_record_pattern
select_state
trans_select
wrong_transaction
db_select_cont
select_cont
db_select_init
mnesia_select
storage_type_at_node
where_to_read
select_lock
db_select
fun_select
deloid
add_sel_ordered_match
add_sel_match
add_ordered_match
add_match
find_ops
add_written_match
db_match_object
add_written_to_bag
add_written_to_set
add_written
add_previous
close_iteration
db_fixtable
init_iteration
ts_keys_1
ts_keys
get_next_tskey
get_ordered_tskey
stored_keys
rwlock
sticky_rwlock
wread
setorbag
do_delete_object
s_delete_object
s_delete
no_exists
record_validation
write_to_store
s_write
intersect
recover_nodes
good_global_nodes
global_lock
rlock_table
sticky_wlock_table
wlock_table
lock_table
rlock
sticky_wlock
wlock
mnesia_locker
sticky_write
tidstore
lock_record
write_lock_table
read_lock_table
no_transaction
wrap_trans
access_module
activity
sync_dirty
async_dirty
non_transaction
mnesia_tm
sync_transaction
async
transaction
tid
mnesia_activity_state
is_transaction
ms
mnesia_sup
lkill
mnesia_subscr
set_debug_level
connect_nodes
mnesia_controller
dc_dump_limit
bad_type
patch_env
mnesia_monitor
patched_start
tc
e_has_var
has_var
is_digits
is_dollar_digits
other_val
mnesia_lib
mnesia_gvar
val
dirty_first
'-is_db_empty/0-fun-0-'
clear_table
'-empty_ram_only_tables/0-fun-0-'
'-table_names/0-lc$^0/1-0-'
'-replicated_table_names/0-lc$^0/1-0-'
'-check_schema_integrity/0-lc$^0/1-0-'
table_creation_failed
create_table
'-create_tables/0-fun-0-'
ram_copies
get_bool
local_content
disc_only_copies
'-create_local_table_copies/1-fun-0-'
failed_to_leave_cluster
del_table_copy
'-leave_cluster/2-fun-0-'
no_running_cluster_nodes
leave_cluster
wildcard
cannot_delete_schema
delete_schema
failed_waiting_for_tables
timeout_waiting_for_tables
schema_integrity_check_failed
wait_for_tables
wait_for_replicated_tables
atomic
change_table_copy_type
add_table_copy
unknown
storage_type
create_local_table_copy
create_local_table_copies
get_value
table_has_copy_type
create_tables
cannot_backup_mnesia
move_db
cannot_create_schema
create_schema
unable_to_join_cluster
use_dir
disc
schema
change_config
extra_db_nodes
init_db
cannot_delete_cluster_nodes_config
delete_cluster_nodes_config
cannot_read_cluster_nodes_config
cluster_config
read_term_file
read_cluster_nodes_config
cannot_create_cluster_nodes_config
write_term_file
create_cluster_nodes_config
cluster_nodes_config_filename
check_schema_integrity
mnesia_unexpectedly_running
ensure_mnesia_not_running
mnesia_not_running
is_running
ensure_mnesia_running
cannot_create_mnesia_dir
ensure_dir
replicated_table_names
table_names
rabbit_user
rabbit_user_permission
rabbit_vhost
rabbit_config
rabbit_listener
rabbit_durable_route
rabbit_route
rabbit_reverse_route
rabbit_durable_exchange
rabbit_durable_queue
rabbit_queue
amqqueue
durable
auto_delete
arguments
reverse_route
reverse_binding
route
binding
listener
protocol
vhost
virtual_host
dummy
user_permission
user_vhost
permission
record_name
disc_copies
username
password
table_definitions
force_reset
ensure_ok
cannot_start_mnesia
cluster
running_nodes
running_db_nodes
db_nodes
'-stop_and_halt/0-fun-0-'
'-start/2-fun-0-'
'-start/2-fun-1-'
rabbit_node_monitor
rabbit_router
vm_memory_monitor
vm_memory_high_watermark
check_empty_content_body_frame_size
rabbit_binary_generator
rabbit_hooks
rabbit_log
'-start/2-fun-2-'
recover
rabbit_exchange
'-start/2-fun-3-'
rabbit_persister
'-start/2-fun-4-'
rabbit_guid
'-start/2-fun-5-'
'-start/2-fun-6-'
start_tcp_listener
'-start/2-fun-7-'
tcp_listeners
'-start/2-fun-8-'
start_ssl_listener
rabbit_networking
'-start/2-lc$^0/1-0-'
ssl_options
crypto
ssl_listeners
'-start/2-fun-9-'
'-print_banner/0-lc$^0/1-0-'
'-print_banner/0-fun-0-'
cannot_rotate_sasl_logs
cannot_rotate_main_logs
log_rotation_result
start_builtin_amq_applications
set_permissions
add_user
add_vhost
rabbit_access_control
default_permissions
default_vhost
default_pass
default_user
insert_default_data
is_db_empty
maybe_insert_default_data
not_installed
cannot_log_to_tty
ensure_working_log_handler
ensure_working_log_handlers
cookie_hash
len
print_banner
home_dir
app_location
cannot_log_to_file
log_location
empty_ram_only_tables
on_node_down
rabbit_amqqueue
is_clustered
rabbit_alarm
terminated_ok
rabbit_error_logger
rabbit_sup
rabbit_sasl_report_file_h
rabbit_error_logger_file_h
rotate_logs
running_applications
stop_and_halt
stop_applications
start_applications
rabbit_misc
ensure_mnesia_dir
rabbit_mnesia
prepare
core_parse
rec_env
sys_pre_expand
v3_kernel_pp
sys_core_fold
v3_life
erl_bifs
beam_utils
core_pp
beam_listing
beam_flatten
cerl_inline
v3_codegen
sys_pre_attributes
core_lint
beam_opcodes
v3_core
beam_block
beam_clean
beam_type
beam_jump
cerl_clauses
beam_bool
sys_core_dsetel
beam_asm
core_scan
cerl_trees
beam_validator
v3_kernel
beam_dead
beam_trim
sys_core_inline
beam_disasm
beam_dict
beam_bsm
core_lib
sys_expand_pmod
cerl
'rabbitmq_multi11504 at mail'
setup_timer
send_tick
send_status
recv_status
recv_challenge_ack
recv_challenge_reply
recv_challenge
recv_name
send_challenge_ack
send_challenge_reply
send_challenge
send_name
get_status_failed
disconnected
send_net_tick_failed
net_tick_timeout
not_responding
con_loop
mark_nodeup
do_setnode
get_cookies
gen_challenge
gen_digest
connection_setup_failed
flush_down
do_mark_pending
do_alive
wait_pending
nok
ok_simultaneous
mark_pending
check_dflag_xnc
is_allowed
make_this_flags
publish_flag
adjust_flags
remove_flag
read_only
the
generated
transformed
be
should
real
with
called
transform_error
blog_terms
'-tab2file/3-fun-0-'
log_terms
'-tab2file/3-fun-1-'
'-file2tab/2-fun-0-'
'-file2tab/2-fun-1-'
'-table/2-fun-1-'
'-table/2-fun-0-'
'-table/2-fun-2-'
'-table/2-fun-3-'
'-table/2-fun-4-'
'-table/2-fun-5-'
'-table/2-fun-6-'
'-table/2-fun-7-'
'-table/2-fun-8-'
'-table/2-lc$^1/1-1-'
'-table/2-lc$^0/1-0-'
'-table/2-fun-9-'
'-qlc_next/2-fun-0-'
'-qlc_prev/2-fun-0-'
'-qlc_select/1-fun-0-'
'-i/0-fun-0-'
'-hform/6-lc$^0/1-0-'
re_match
print_re_num
re_display
re_search
do_display_item
do_display_items
do_display
print_number
strip
right
nonl
quit
choice
'(c)ontinue (q)uit (p)Digits (k)ill /Regexp -->'
'EOT  (q)uit (p)Digits (k)ill /Regexp -->'
kernel_match_error
pad_right
hform
is_reg
prinfo2
prinfo
tabs
mem
default_option
n_objects
traverse
qlc_select
qlc_prev
qlc_next
is_unique_objects
is_sorted_key
num_of_objects
table_info
pre_fun
post_fun
info_fun
format_fun
lookup_fun
first_next
last_prev
tabfile_info
cannot_create_table
create_tab
load_table
scan_for_endinfo
md5_and_convert
major_version
minor
major
get_header_data
chunk
wrap_chunk
bchunk
wrap_bchunk
verify_header_mandatory
count_mandatory
verify
parse_f2t_opts
invalid_object_count
checksum_error
do_read_and_verify
read_error
unsupported_file_version
repaired
file2tab
object_count
md5sum
parse_ft_info_options
malformed_option
unknown_option
parse_ft_options
md5terms
ft_options_to_list
dump_file
eaccess
filetab_options
extended_info
badtab
tab2file
do_filter
init_table_sub
end_of_input
init_table_continue
init_table
test_ms
from_ets
to_dets
to_ets
from_dets
do_foldr
transform_from_shell
fun_data
fun2ms
repair_continuation
match_spec_run
is_set
is_subset_2
is_subset_1
is_subset
difference_2
difference_1
intersection_list
intersection_2
intersection_1
union_list
balance_revlist_1
balance_revlist
push
union_2
union_1
del_element
from_ordset
is_member_1
is_member
singleton
local_address_not_found
assertion_failed
'-calculate_addresses/3-lc$^0/1-0-'
load_fe
'-offsets_to_addresses/2-lc$^0/1-0-'
'-export_funs/4-lc$^0/1-0-'
'-patch_consts/3-lc$^0/1-0-'
'-sort_and_write/4-fun-0-'
'-sort_on_representation/1-lc$^0/1-0-'
'-enter_datum/3-lc$^0/1-1-'
'-enter_datum/3-lc$^1/1-0-'
'-patch_to_emu_step1/1-lc$^0/1-0-'
update_code_size
enter_code
hipe_assert_code_area
assert_local_patch
mfa_to_address
find_na_or_make_stub
get_native_address
remove_refs_from
redirect_referred_from
redirect
mark_referred_from
get_refs_from
emu_make_stubs
patch_to_emu_step2
invalidate_funinfo_native_addresses
patch_to_emu_step1
patch_to_emu
address_to_mfa
add_ref
constant_not_found
find_const
write_u8
write_bytes
write_words
bytes_to_32
term_to_word
merge_term
enter_datum
enter_data
alloc_data
create_data_segment
primop_address
bif_address
write_u32
write_u64
write_word
patch_insn
patch_instr
sort_on_representation
sort_and_write
sorted
patch_label_or_labels
patch_consts
load_mfa
patch_load_mfa
make_fe
fun_to_address
patch_closure
c_const
constant
local_function
remote_function
patch_load_address
enter_sdesc
patch_sdesc
atom_to_word
patch_atom
patch_offset
patch_all_offsets
patch_all
patch_call_insn
patch_mfa_call_list
patch_bif_call_list
patch_call
load_address
load_atom
sdesc
x86_abs_pcrel
patch
set_native_address
set_funinfo_native_address
export_funs
closure
find_closure_refs
find_closure_patches
offsets_to_addresses
calculate_addresses
fundef
trampoline_map_lookup
trampoline_map_get
mk_trampoline_map
add_callee_mfas
find_callee_mfas
check_crc
hipe_bifs
load_common
hipe_patch_closures
version_check
bad_crc
amd64
arm
ppc64
powerpc
ultrasparc
x86
chunk_name
'-find_modules/4-lc$^0/1-0-'
add_element
'-find_modules/4-fun-0-'
find_modules
strip_last
first_1
last_1
is_segmented_1
is_segmented
is_valid_1
is_valid
concat_1
sticky_directory
bad_name
bad_directory
'-start_link/1-fun-0-'
'-init/3-fun-0-'
'-get_user_lib_dirs_1/1-lc$^0/1-0-'
'-handle_call/3-fun-5-'
'-handle_call/3-lc$^0/1-0-'
'-choose_bundles/1-lc$^0/1-0-'
'-choose_bundles/1-lc$^1/1-1-'
'-vsn_to_num/1-lc$^0/1-0-'
'-is_vsn/1-fun-0-'
'-is_numstr/1-fun-0-'
'-exclude/2-lc$^0/1-0-'
'-archive_subdirs/1-fun-0-'
'-all_archive_subdirs/1-fun-0-'
'-stick_dir/3-fun-0-'
'-stick_dir/3-fun-1-'
to_atom
strip_mod_info
all_l
do_soft_purge
do_purge
mod_to_bin
int_list
post_beam_load
hipe_result_to_status
load_native_code
no_native
try_load_module
modp
do_load_binary
get_mods
sticky
'bad request to code'
priv
do_dir
lookup_name
delete_name_dir
replace_name
del_ebin
check_pars
replace_path1
insert_old_shadowed
del_path1
all_archive_subdirs
archive_subdirs
insert_name
code_names
init_namedb
maybe_update
do_add
do_check_path
check_path
get_name2
get_name1
get_name
exclude
get_arg
add_pa_pz
add1
strip_path
excl
exclude_pa_pz
pz
add_loader_path
choose
split2
split1
is_numstr
is_vsn
vsn_to_num
create_bundle
choose_bundles
filter_mods
locate_mods
update_cache
rehash_cache
code_cache
create_cache
do_mod_call
app
obj
do_sys_cmd
gen_reply
code_call
split_paths
get_user_lib_dirs_1
get_user_lib_dirs
code_path_cache
no_cache
'-set_primary_archive/2-lc$^0/1-0-'
to_path
has_ext
filter2
decorate
build
clash
is_cached
which2
minimal
get_mode
do_s
compiler
do_stick_dirs
stick
interactive
load_hipe_modules
replace_path
del_path
add_pathsa
add_pathsz
add_paths
add_patha
add_pathz
add_path
is_sticky
unstick_mod
stick_mod
unstick_dir
stick_dir
priv_dir
compiler_dir
dir
lib_dir
root_dir
all_loaded
get_object_code
soft_purge
load_native_sticky
load_native_partial
load_binary
load_abs
'-do_start_slave/3-fun-0-'
'-do_start_slave/3-fun-1-'
relay_loop
relay_start
do_start_slave
no_master
master
illegal_function_call
global_group_not_runnig
not_boolean
'-init/1-fun-0-'
'-sync_check_init/8-fun-0-'
'-disconnect_nodes/1-fun-0-'
'-force_nodedown/1-fun-0-'
no_group
own_group
publish_arg
force_nodedown
disconnect_nodes
kill_global_group_check
check_exit_where
check_exit_send
not_found_ignored
check_exit_reg
check_exit
safesend_nc
not_own_group
safesend
send_monitor
delete_all
no_global_group_configuration
sync_check
sync_check_init
sync_check_node
grp_tuple
'node defined twice'
no_name
original
config_scan
config_ok
conf_check
send_res
find_name_res
find_name
registered_names_res
illegal_message
global_group_check
own_group_name
own_group_nodes
synced_nodes
sync_error
no_contact
other_groups
monitoring
not_agreed
agreed
whereis_test
names_test
test3844zty
'invalid global_groups definition'
publish_type
no_conf
whereis_name_test
send_test
registered_names_test
ng_add_check
own_nodes
try_connect
connect1
'rabbit at mail'
'ZKTGFBRYQMLMYZWGNZEZ'
file_reply
wait_file_reply
file_request
check_args
check_and_call
character
mode_list
make_binary
file_name_1
file_name
path_open_first
eval_stream2
parse_erl_exprs
eval_stream
consult_stream
change_time
change_group
change_owner
change_mode
path_open
path_script
path_eval
new_bindings
path_consult
ipread_s32bu_p32bu_2
ipread_s32bu_p32bu_int
copy_opened_int
copy_int
put_chars
get_chars
rawopen
raw_files
ram
file_io_servers
pid2name
terminated
undefined_script
source_file_not_found
vxworks_first2
vxworks_first
major_os_type
make_abs_path
readable_file
try_rule
source_by_rules
source_file
get_source_file
parse_transform
d
fast
export_all
outdir
filter_options
which
try_file
source_search_rules
find_src
separators
win32_nativename
nativename
win32_split
unix_split
vxworks_split
rootname2
rootname
win32_pathtype
unix_pathtype
maybe_remove_dirsep
join1
extension
skip_prefix1
not_device
skip_prefix
basename1
absname_pretty
absname_join
next_random
make_info
random_cookie
raw_write_file_info
create_cookie
check_cookie1
check_cookie
check_attributes
make_error
raw_read_file_info
read_cookie
cookies
setcookie
init_cookie
auth_reply
ddd_server
hello
echo
distribution_not_started
node_cookie
cookie
pang
pong
ping
no_reg_reply_from_epmd
already_registered
parse_name
parse_line
scan_line
scan_names
names_loop
do_get_names
cstring
wait_for_close
select_best_version
best_version
wait_for_port_reply_name
wait_for_port_reply_cont2
wait_for_port_reply_cont
wait_for_port_reply
wait_for_port_reply_v0
get_port
get_port_v0
wait_for_reg_reply_v0
garbage_from_epmd
wait_for_reg_reply
epmd_dist_low
epmd_dist_high
epmd_close
do_register_node
do_register_node_v0
r4
client_info_req
alive
names1
names
port_please1
'-do_accept/6-fun-0-'
'-do_accept/6-fun-1-'
'-do_accept/6-fun-2-'
'-do_accept/6-fun-3-'
'-do_accept/6-fun-4-'
'-do_accept/6-fun-5-'
'-do_setup/6-fun-0-'
'-do_setup/6-fun-1-'
'-do_setup/6-fun-2-'
split_stat
is_node_name
mask
get_ifs
check_ip
get_tcp_address
splitnode
handshake_we_started
reset_timer
port_please
do_setup
get_remote_id
dist_nodelay
handshake_other_started
hs_data
no_node
do_accept
flush_controller
accept_loop
eaddrinuse
inet_dist_use_interface
inet_dist_listen_max
inet_dist_listen_min
do_listen
register_node
invalid_key
short
bad_node
ok_pending
nok_pending
already_pending
'-terminate/2-fun-1-'
'-terminate/2-fun-2-'
'-handle_info/2-fun-0-'
'-handle_info/2-fun-1-'
'-init_node/2-fun-0-'
'-create_hostpart/2-fun-0-'
'-print_info/0-fun-0-'
getnode
nformat
fmt_address
display_info
print_info
restart_ticker
all_atoms
reply_waiting1
reply_waiting
get_nodes_info
get_node_info
net_setuptime
connecttime
set_node
duplicate_name
sync_cookie
start_protos
childspecs
proto_dist
create_hostpart
long
create_name
init_node
get_proto_mod
unsupported_address_type
select_mod
net_address
setup
spawn_func
bye
aux_ticker1
aux_ticker
start_aux_ticker
ticker_loop
get_up_nodes
get_nodes
disconnect_pid
do_disconnect
mk_monitor_nodes_error
bad_option_value
options_not_a_list
unknown_options
check_options
option_value_mismatch
check_opt
mark_sys_dist_nodedown
up_nodedown
up_pending_nodedown
pending_nodedown
get_conn
ticker_exit
pending_own_exit
conn_own_exit
accept_exit
listen_exit
do_handle_exit
aux_tick
transition_period_end
unsupported_protocol
controller
accept_connection
registered_send
badcookie
remarked
bad_request
inserted
accept_pending
is_pending
change_initiated
shorter
longer
unchanged
ongoing_change_to
tick_change
up_pending
publish_on_nodes
is_auth
not_implemented
bad_cookie
tick
ticker
nodistribution
connection
never
dist_auto_connect
passive_connect_monitor
barred_connection
sys_dist
do_connect
hidden_connect_node
connect_node
update_publish_nodes
publish_on_node
hidden_connect
ticktime_res
get_net_ticktime
new_ticktime
set_net_ticktime
verbose
nodes_info
node_info
kernel_apply
net_sup_dynamic
net_ticktime
ticktime
lname
start_p
protocol_childspecs
epmd_module
no_epmd
could_not_start_server
inet_gethost_native_sup
'-handle_message/2-fun-0-'
'-restart_port/1-fun-0-'
pick_names
ndx
pick_addresses_v6
pick_addresses_v4
listify
malformed_response
parse_address
ensure_started
getit
soft_restart
debug_level
gethost_poolsize
get_poolsize
gethost_extra_args
gethost_prioritize
get_extra_args
do_open_port
get_rid
pick_client
pick_request
find_request
do_handle_call
restart_port
handle_message
ign_req_index
ign_requests
num_requests
rid
run_once
start_raw
server_init
'-services/2-fun-0-'
'-rpc/2-fun-0-'
'-hosts/2-fun-0-'
'-hosts_vxworks/1-fun-0-'
'-resolv/2-fun-0-'
'-host_conf_linux/2-fun-0-'
'-host_conf_freebsd/2-fun-0-'
'-host_conf_bsdos/2-fun-0-'
'-nsswitch_conf/2-fun-0-'
'-protocols/2-fun-0-'
'-netmasks/2-fun-0-'
'-networks/2-fun-0-'
'-ntoa_done/2-fun-0-'
'-ntoa_done/2-fun-1-'
'-ntoa_done/1-fun-0-'
split_mid_comma
split_comma
split_end
split_mid
dig_to_hex
dig_to_dec
ntoa_done
dup
tox
x4
ipv6_addr_done
ipv6_addr
tod
d3
is_dom2
is_dom_ldh
is_dom1
is_vis1
port_proto
collect_line
read_line
get_line
parse_cs
skip
parse_fd
networks
netmasks
protocols
delete_options
noname
services
not_owner
'-getiflist/0-fun-0-'
'-ifget/2-fun-0-'
'-ifset/2-fun-0-'
'-getif/0-fun-0-'
'-getif/1-fun-0-'
'-gethostname/0-fun-0-'
'-open/7-lc$^0/1-0-'
'-ii/3-fun-0-'
'-ii/3-lc$^0/1-0-'
'-ii/3-fun-1-'
'-info_lines/3-lc$^0/1-0-'
'-i_line/3-lc$^0/1-0-'
'-h_line/1-lc$^0/1-0-'
'-port_list/1-fun-0-'
udp_sync_input
tcp_sync_input
tcp_controlling_process
tcp_close
exbadseq
exbadport
port_list
udp_sockets
tcp_sockets
fmt_port
ntoa
enotconn
fmt_addr
listening
fmt_status
sent
foreign_address
local_address
upper
hh_field
h_field
h_line
i_line
info_lines
smax
ii
i
ipv6_address
no_default
wins
getaddrs_tm
add_opt
sctp_opt_ifaddr
sctp_opt
translate_ip
sctp_opts
sctp_options
udp_add
udp_opt
list_add
backlog
list_opt
listen_opts
listen_options
con_add
ifaddr
con_opt
connect_opts
connect_options
stats
options
getaddrs
getll
gethostbyaddr_tm
gethostbyname_tm
popf
pushf
withsocket
getif
udp_closed
optuniquify
udp_controlling_process
controlling_process
udp_close
udp_opts
getaddr_tm
getaddr
getserv
'-unix_cmd/1-fun-0-'
validate1
validate
mk_cmd
eot
unix_get_data
start_port
unix_cmd
extensions
reverse_element
split_path
verify_executable
find_executable1
find_executable
'-init/0-fun-0-'
'-set_hostname/1-fun-0-'
'-load_hosts/2-fun-0-'
'-win32_load1/3-fun-0-'
'-win32_load1/3-fun-1-'
'-vxworks_load_hosts/0-fun-0-'
scan_inetrc
more_chars
parse_inetrc_skip_line
parse_inetrc
inet_warnings
try_get_rc
inetrc
read_inetrc
valid_type
extract_cfg_files1
registry
extract_cfg_files
read_rc
next_line
check_hostShow
hosts_vxworks
cmd
vxworks_load_hosts
win32_get_strings
split_line
win32_split_line
expand
win32_load1
change_key
windows
nt
win32_load_from_registry
load_hosts
chars
load_resolv
set_search_dom
inet_dns_when_nis
add_dns_lookup
standalone_host
no_ERLRESCONF
no_hosts_file
'Warning: No HOSTSFILE specified!'
address
'Warning: No NAMESERVER or RESOLVFILE specified!'
nsswitch_conf
host_conf_linux
host_conf_freebsd
host_conf_bsdos
sunos
netbsd
freebsd
'bsd/os'
do_load_resolv
nonames
longnames
shortnames
erl_dist_mode
gethostbyname
ose_inet_port
loader
ose
formerr
nxdomain
'-add_hosts/1-fun-0-'
'-add_rc_list_int/1-fun-0-'
badopt
clear_search
clear_ns
'-add_rc_list_int/1-fun-1-'
host
'-get_rc_hosts/2-fun-0-'
'-res_cache_answer/1-fun-0-'
'-lookup_type/2-lc$^0/1-0-'
'-lookup_cname/1-lc$^0/1-0-'
'-res_lookup_type/3-lc$^0/1-0-'
'-handle_call/3-fun-3-'
'-handle_call/3-fun-4-'
'-do_refresh_cache/4-fun-0-'
'-delete_older/5-fun-0-'
delete_older
delete_n_oldest
alloc_entry
do_refresh_cache
stop_timer
init_timer
stripdot_1
stripdot
hex
dnib
dn_in_addr_arpa
dn_ip6_int
tolower
lower_rr
filter_rr
match_rr
do_lookup_rr
times
cache_rr
do_add_rr
refresh_timeout
visible_string
reset_db
inet_cache
lookup_socket
unregister_socket
register_socket
dnt
dnip
ent_gethostbyaddr
res_gethostbyaddr
ptr
gethostbyaddr
res_lookup_type
res_hostent_by_domain
lookup_rr
cname
lookup_cname
lookup_type
hostent_by_domain
hostent
a
aaaa
make_hostent
get_searchlist
getbysearch
dots
getbyname
dns_rec
res_cache_answer
del_rr
dns_rr
add_rr
db_get
hostname
methods
noproxy
server
socks_option
res_id
res_recurse
next_id
recurse
res_option
get_rc_hosts
get_rc_ns
get_rc_noproxy
res_domain
res_search
res_inet6
res_usevc
res_alt_ns
res_ns
res_retry
res_timeout
cache_refresh_interval
res_lookup
domain
socks5_server
usevc
alt_nameserver
nameserver
socks5_noproxy
retry
cache_size
socks5_port
cache_refresh
socks5_methods
get_rc
dns
yp
nis
nisplus
native
translate_lookup
add_rc_list_int
add_rc_list
add_rc_bin
consult
add_rc
sctp_module
set_sctp_module
udp_module
set_udp_module
tcp_module
set_tcp_module
set_cache_refresh
set_cache_size
del_socks_noproxy
add_socks_noproxy
del_socks_methods
add_socks_methods
set_socks_port
set_socks_server
set_usevc
set_inet6
set_retry
set_timeout
set_recurse
set_lookup
set_domain
set_hostname
del_search
ins_search
add_search
del_alt_ns
ins_alt_ns
add_alt_ns
del_ns
ins_ns
add_ns
clear_hosts
del_host
add_host
hosts
add_hosts
resolv
add_resolv
'$5'
'$4'
'$3'
'-register_name/3-fun-0-'
'-check_dupname/2-lc$^0/1-0-'
'-unregister_name/1-fun-0-'
'-re_register_name/3-fun-0-'
'-register_name_external/3-fun-0-'
'-check_replies/3-lc$^0/1-0-'
'-resolved/5-fun-0-'
'-resolved/5-fun-1-'
'-resolved/5-fun-2-'
'-resolved/5-fun-3-'
'-resolved/5-fun-4-'
'-start_resolver/2-fun-0-'
'-do_ops/5-lc$^1/1-1-'
'-do_ops/5-lc$^0/1-0-'
'-do_ops/5-fun-0-'
'-do_ops/5-lc$^2/1-2-'
'-do_ops/5-lc$^3/1-3-'
'-do_ops/5-fun-1-'
'-do_ops/5-lc$^4/1-4-'
'-do_ops/5-fun-2-'
'-sync_others/1-fun-0-'
'-sync_others/1-fun-1-'
'-lock_still_set_old/3-lc$^0/1-0-'
'-del_name/2-lc$^1/1-1-'
'-del_name/2-lc$^0/1-0-'
'-start_the_locker/1-fun-0-'
'-exclude_known/2-lc$^0/1-0-'
'-delete_lock/2-fun-0-'
'-pid_locks/1-fun-0-'
'-pid_locks/1-lc$^0/1-0-'
'-send_again/1-fun-0-'
'-start_sync/2-fun-0-'
'-sync_init/2-fun-0-'
'-sync_loop/2-fun-0-'
'-start_the_deleter/1-fun-0-'
'-loop_the_deleter/1-fun-0-'
'-loop_the_deleter/1-fun-1-'
'-start_the_registrar/0-fun-0-'
'-do_monitor/1-fun-0-'
intersection
do_monitor
unexpected_message
loop_the_registrar
start_the_registrar
deleter
collect_deletions
loop_the_deleter
start_the_deleter
get_own_nodes_with_errors
get_own_nodes
check_sync_nodes
synced
sync_loop
sync_init
start_sync
new_node_name
change_our_node_name
send_again
uniform
seed
random_seed
random_sleep
tab2list
get_names
handle_nodedown
del_locks
rpid_is_locking
pid_locks
delete_lock
pid_is_locking
unlink_pid
dounlink_ext
dolink_ext
notify_all_name
global_name_conflict
random_notify_name
random_exit_name
minmax
resolve_it
exchange_names
reset_node_state
kill_resolver
cancel_locker
split_node
is_node_local
remove_node2
remove_node
find_node_tag2
find_node_tag
the_boss
delete_global_lock
call_fun
reject_lock_set
lock_set_loop
exclude_known
random_element
update_locker_known
lock_rejected
locker_failed
locker_succeeded
rejected
locker_trace
delete_nonode
not_ok
lock_nodes_safely
locker_lock_id
select_node
him
no_fun
lock_set
remove_from_known
do_trace
the_locker_message
loop_the_locker
locker_exited
multi
init_the_locker
start_the_locker
delete_global_name
delete_global_name2
delete_global_name_keep_pid
delete_name
del_names
del_name
extra_info
lock_still_set_old
lock_still_set
insert_global_name
sync_other
global_connect_retries
sync_others
do_ops
kill_monitor_proc
rem_lock
remove_lock
handle_del_lock
is_lock_set
is_global_lock_set
ins_lock
insert_lock
can_set_lock
handle_set_lock
ins_name_ext
ins_name
resend_pre_connect
resolver
start_resolver
do_whereis
cancel_resolved_locker
ops
added
add_to_known
lock
resolve
wait_lock
lock_id
pre_connect
his_locker_new
his_the_locker
prot_vsn
check_replies
local_lock_check
set_lock_on_nodes
lock_on_known_nodes
set_lock_known
send_high_level_trace
wait_high_level_trace
nodes_changed
to_external
symmetric_partition
high_level_trace
registrar_died
locker_died
deleter_died
new_resolver
no_longer_a_pid
locker
trace_message
extra_nodedown
new_nodes
sync_tag_his
exit_resolver
exchange
exchange_ops
save_ops
resolved
lock_is_set
init_connect
sync_tag_my
in_sync
async_del_name
async_del_lock
get_names_ext
high_level_trace_start
high_level_trace_stop
get_protocol_version
high_level_trace_get
get_synced
get_known
register_ext
trans_all_known
connect_all
no_trace
global_pid_ids
global_names_ext
global_locks
trans
del_lock
set_lock
unregister_name_external
register_name_external
global_names
registered_names
re_register_name
unregister_name
allow
global_multi_name_action
global_pid_names
check_dupname
registrar
node_disconnected
whereis_name
iterator_1
iterator
keys
to_list_1
largest_1
largest
take_largest1
take_largest
smallest_1
smallest
take_smallest1
take_smallest
delete_1
delete_any
from_orddict
balance_list_1
balance_list
balance
count
enter
key_exists
insert_1
update_1
get_1
is_defined_1
is_defined
lookup_1
is_empty
'-handle_cast/2-fun-0-'
'-do_call/3-fun-0-'
'-do_multicall/5-fun-0-'
'-async_call/4-fun-0-'
'-parallel_eval/1-fun-0-'
pinfo
build_args
pmap
map_nodes
parallel_eval
promise_reply
do_yield
nb_yield
async_call
safe_multi_server_call
multi_server_call
do_multicall
multicall
eval_everywhere
rpc_check
rpc_check_t
local_call
nonexisting_name
sbcast
block_call
empty
'-to_list/1-fun-0-'
'-from_list/1-fun-0-'
'-fetch_keys/1-fun-0-'
'-erase/2-fun-0-'
'-store/3-fun-0-'
'-append/3-fun-0-'
'-append_list/3-fun-0-'
'-update/3-fun-0-'
'-update/4-fun-0-'
'-update_counter/3-fun-0-'
'-merge/3-fun-0-'
'-merge/3-fun-1-'
'-merge/3-fun-2-'
'-merge/3-fun-3-'
contract_segs
expand_segs
mk_seg
rehash
maybe_contract_segs
maybe_contract
maybe_expand_segs
maybe_expand_aux
maybe_expand
put_bucket_s
get_bucket_s
filter_bucket
filter_bkt_list
filter_seg_list
filter_dict
map_bucket
map_bkt_list
map_seg_list
map_dict
fold_bucket
fold_seg
fold_segs
fold_dict
on_bucket
get_bucket
get_slot
fold
counter_bkt
update_bkt
app_list_bkt
append_list
append_bkt
store_bkt_val
erase_key
fetch_keys
find_val
fetch_val
fetch
find_key
already_present
'-update_chsp/2-fun-0-'
invalid_module
'-validMods/1-fun-0-'
report_progress
restart_type
child_type
extract_child
supervisor_report
errorContext
reason
offender
difference
inPeriod
add_restart
invalid_modules
dynamic
validMods
invalid_shutdown
validShutdown
invalid_mfa
validFunc
validName
invalid_child_type
validChildType
invalid_child_spec
check_childspec
duplicate_child_name
check_startspec
supname
invalid_period
validPeriod
invalid_intensity
validIntensity
invalid_strategy
validStrategy
invalid_type
init_state1
init_state
remove_child
do_replace_child
replace_child
split_child
del_child
state_del_child
monitor_child
brutal_kill
terminate_children
rest_for_one
reached_max_restart_intensity
child_terminated
do_restart
find
handle_start_child
update_chsp
update_childspec1
update_childspec
bad_flags
check_flags
null
store
do_start_child_i
do_start_child
child
start_children
bad_start_spec
init_dynamic
start_spec
init_children
supervisor_data
simple_one_for_one
check_childspecs
which_children
delete_child
restart_child
start_child
distribution_not_changed
one_for_all
kernel_safe_sup
one_for_one
global_groups
is_gg_changed
global_groups_removed
global_groups_added
global_groups_changed
do_global_groups_change
is_dist_changed
distribution_changed
do_distribution_change
start_pg2
start_disk_log
boot_server_slaves
get_boot_args
start_boot_server
start_dist_ac
nostick
get_code_args
worker
safe
bad_config
get_error_logger_type
shutdown_error
'-kill_children/1-fun-0-'
exit_after
set_timer
kill_all_procs_1
kill_all_procs
kill_children
terminate_child
terminate_child_i
get_child_i
prep_stop
loop_it
start_supervisor
start_the_app
start_it_new
bad_return
start_it_old
bad_keys
terminate_loop
main_loop
io_request
init_loop
get_child
'-print_log/1-fun-0-'
close_log_file
remove_debug
install_debug
trim
stat
no_statistics
start_time
current_time
messages_in
messages_out
get_stat
init_stat
standard_io
do_change_code
unknown_debug
debug_cmd
unknown_system_msg
do_cmd
suspend_loop_hib
suspend_loop
mfa
send_system_msg
install
no_debug
log_to_file
change_code
resume
permit_only_loaded_application
permit
takeover_application
'-do_multi_call/4-fun-0-'
get_debug
could_not_find_registerd_name
name_to_pid
process_was_not_started_by_proc_lib
get_parent
process_not_registered_globally
process_not_registered
get_proc_name
dbg_opts
generic_debug
dbg_options
print_log
handle_common_reply
dispatch
unmonitor
start_monitor
rec_nodes_rest
rec_nodes
send_nodes
do_multi_call
do_send
decode_msg
bad_return_value
multi_call
do_abcast
abcast
'$gen_cast'
cast_msg
do_cast
'$gen_call'
inet_default_connect_options
'-build_typed_attribute/2-fun-0-'
'-attribute_farity_list/1-lc$^0/1-0-'
'-check_clauses/3-fun-0-'
'-normalise/1-fun-0-'
'-abstract/1-lc$^0/1-0-'
'-abstract/2-lc$^0/1-0-'
yeccgoto_typed_record_fields
yeccgoto_typed_exprs
yeccgoto_typed_expr
yeccgoto_typed_attr_val
yeccgoto_type_spec
yeccgoto_type_sigs
yeccgoto_type_sig
yeccgoto_type_guards
yeccgoto_type_guard
yeccgoto_type
yeccgoto_tuple
yeccgoto_try_expr
yeccgoto_try_clauses
yeccgoto_try_clause
yeccgoto_try_catch
yeccgoto_top_types
yeccgoto_top_type_100
yeccgoto_top_type
yeccgoto_tail
yeccgoto_strings
yeccgoto_spec_fun
yeccgoto_rule_clauses
yeccgoto_rule_clause
yeccgoto_rule_body
yeccgoto_rule
yeccgoto_record_tuple
yeccgoto_record_fields
yeccgoto_record_field
yeccgoto_record_expr
yeccgoto_receive_expr
yeccgoto_query_expr
yeccgoto_prefix_op
yeccgoto_opt_bit_type_list
yeccgoto_opt_bit_size_expr
yeccgoto_mult_op
yeccgoto_list_op
yeccgoto_list_comprehension
yeccgoto_list
yeccgoto_lc_exprs
yeccgoto_lc_expr
yeccgoto_int_type
yeccgoto_if_expr
yeccgoto_if_clauses
yeccgoto_if_clause
yeccgoto_guard
yeccgoto_function_clauses
yeccgoto_function_clause
yeccgoto_function_call
yeccgoto_function
yeccgoto_fun_type_100
yeccgoto_fun_type
yeccgoto_fun_expr
yeccgoto_fun_clauses
yeccgoto_fun_clause
yeccgoto_form
yeccgoto_field_types
yeccgoto_field_type
yeccgoto_exprs
yeccgoto_expr_max
yeccgoto_expr_900
yeccgoto_expr_800
yeccgoto_expr_700
yeccgoto_expr_600
yeccgoto_expr_500
yeccgoto_expr_400
yeccgoto_expr_300
yeccgoto_expr_200
yeccgoto_expr_160
yeccgoto_expr_150
yeccgoto_expr_100
yeccgoto_expr
yeccgoto_cr_clauses
yeccgoto_cr_clause
yeccgoto_comp_op
yeccgoto_clause_guard
yeccgoto_clause_body
yeccgoto_clause_args
yeccgoto_case_expr
yeccgoto_bit_type_list
yeccgoto_bit_type
yeccgoto_bit_size_expr
yeccgoto_bit_expr
yeccgoto_binary_type
yeccgoto_binary_comprehension
yeccgoto_binary
yeccgoto_bin_unit_type
yeccgoto_bin_elements
yeccgoto_bin_element
yeccgoto_bin_base_type
yeccgoto_attribute
yeccgoto_attr_val
yeccgoto_atomic
yeccgoto_atom1
yeccgoto_argument_list
yeccgoto_add_op
yeccpars2_455
yeccpars2_454
yeccpars2_452
yeccpars2_450
yeccpars2_448
yeccpars2_446
yeccpars2_444
yeccpars2_443
yeccpars2_442
yeccpars2_440
yeccpars2_439
yeccpars2_438
yeccpars2_437
yeccpars2_436
yeccpars2_435
yeccpars2_434
yeccpars2_432
yeccpars2_431
yeccpars2_429
remote
yeccpars2_428
yeccpars2_425
yeccpars2_424
yeccpars2_423
yeccpars2_422
yeccpars2_421
yeccpars2_420
yeccpars2_419
yeccpars2_418
yeccpars2_417
yeccpars2_415
yeccpars2_414
yeccpars2_413
yeccpars2_412
yeccpars2_411
yeccpars2_410
yeccpars2_409
yeccpars2_408
yeccpars2_407
yeccpars2_406
yeccpars2_405
yeccpars2_402
yeccpars2_401
yeccpars2_400
yeccpars2_399
yeccpars2_398
yeccpars2_397
yeccpars2_396
yeccpars2_395
yeccpars2_394
yeccpars2_392
yeccpars2_390
yeccpars2_388
yeccpars2_387
yeccpars2_385
yeccpars2_384
record_index
yeccpars2_382
yeccpars2_381
yeccpars2_380
yeccpars2_379
yeccpars2_378
yeccpars2_376
yeccpars2_374
yeccpars2_373
yeccpars2_372
yeccpars2_371
yeccpars2_370
yeccpars2_369
yeccpars2_367
yeccpars2_366
yeccpars2_365
yeccpars2_364
yeccpars2_363
yeccpars2_362
yeccpars2_361
yeccpars2_359
yeccpars2_358
yeccpars2_355
yeccpars2_354
yeccpars2_353
yeccpars2_351
yeccpars2_350
yeccpars2_349
yeccpars2_347
yeccpars2_346
yeccpars2_345
yeccpars2_344
yeccpars2_343
yeccpars2_342
yeccpars2_340
yeccpars2_339
yeccpars2_338
yeccpars2_337
yeccpars2_336
yeccpars2_334
yeccpars2_333
yeccpars2_332
yeccpars2_330
bc
yeccpars2_329
yeccpars2_328
yeccpars2_326
yeccpars2_325
yeccpars2_324
yeccpars2_323
yeccpars2_322
yeccpars2_321
yeccpars2_320
yeccpars2_319
yeccpars2_318
yeccpars2_317
yeccpars2_316
yeccpars2_315
yeccpars2_314
yeccpars2_313
yeccpars2_311
yeccpars2_309
yeccpars2_308
yeccpars2_307
yeccpars2_306
yeccpars2_305
yeccpars2_304
yeccpars2_303
yeccpars2_301
yeccpars2_300
yeccpars2_299
yeccpars2_298
yeccpars2_296
yeccpars2_295
yeccpars2_294
yeccpars2_293
yeccpars2_291
yeccpars2_290
yeccpars2_288
yeccpars2_287
yeccpars2_286
yeccpars2_285
yeccpars2_284
yeccpars2_283
yeccpars2_282
yeccpars2_281
yeccpars2_280
yeccpars2_279
yeccpars2_277
yeccpars2_275
yeccpars2_274
yeccpars2_273
lc
yeccpars2_272
yeccpars2_271
generate
yeccpars2_269
b_generate
yeccpars2_267
yeccpars2_265
yeccpars2_264
yeccpars2_263
yeccpars2_262
yeccpars2_260
yeccpars2_258
yeccpars2_257
yeccpars2_256
yeccpars2_254
yeccpars2_252
yeccpars2_251
yeccpars2_248
yeccpars2_247
yeccpars2_246
yeccpars2_245
yeccpars2_244
yeccpars2_243
yeccpars2_242
yeccpars2_240
yeccpars2_238
yeccpars2_236
yeccpars2_234
yeccpars2_232
yeccpars2_230
yeccpars2_228
yeccpars2_227
yeccpars2_226
yeccpars2_225
yeccpars2_224
yeccpars2_223
yeccpars2_221
yeccpars2_220
yeccpars2_218
yeccpars2_217
yeccpars2_215
yeccpars2_214
yeccpars2_213
yeccpars2_211
yeccpars2_210
yeccpars2_209
yeccpars2_207
yeccpars2_205
yeccpars2_204
yeccpars2_203
yeccpars2_202
yeccpars2_200
yeccpars2_199
yeccpars2_198
yeccpars2_196
yeccpars2_195
yeccpars2_194
yeccpars2_193
yeccpars2_191
yeccpars2_190
yeccpars2_189
yeccpars2_188
yeccpars2_187
yeccpars2_185
yeccpars2_184
yeccpars2_183
yeccpars2_180
yeccpars2_178
yeccpars2_177
yeccpars2_175
yeccpars2_174
yeccpars2_173
yeccpars2_171
yeccpars2_170
yeccpars2_169
yeccpars2_168
yeccpars2_167
yeccpars2_166
yeccpars2_165
yeccpars2_164
yeccpars2_163
yeccpars2_162
yeccpars2_161
yeccpars2_160
yeccpars2_159
yeccpars2_158
yeccpars2_157
yeccpars2_156
yeccpars2_155
yeccpars2_154
yeccpars2_153
yeccpars2_152
yeccpars2_151
yeccpars2_150
yeccpars2_149
yeccpars2_148
yeccpars2_147
yeccpars2_146
yeccpars2_145
yeccpars2_144
yeccpars2_143
yeccpars2_142
yeccpars2_141
yeccpars2_140
yeccpars2_139
yeccpars2_138
yeccpars2_137
yeccpars2_136
yeccpars2_135
yeccpars2_134
yeccpars2_133
yeccpars2_131
yeccpars2_130
yeccpars2_129
yeccpars2_127
constraint
yeccpars2_125
yeccpars2_124
yeccpars2_122
yeccpars2_121
yeccpars2_120
yeccpars2_118
yeccpars2_116
yeccpars2_114
yeccpars2_113
range
yeccpars2_111
yeccpars2_110
yeccpars2_109
yeccpars2_108
yeccpars2_107
yeccpars2_106
yeccpars2_105
remote_type
yeccpars2_104
yeccpars2_103
yeccpars2_102
yeccpars2_101
yeccpars2_99
yeccpars2_98
yeccpars2_97
field_type
yeccpars2_95
yeccpars2_93
yeccpars2_92
yeccpars2_91
yeccpars2_90
yeccpars2_89
yeccpars2_88
paren_type
yeccpars2_87
yeccpars2_86
yeccpars2_85
yeccpars2_83
yeccpars2_82
yeccpars2_81
yeccpars2_80
yeccpars2_79
yeccpars2_78
yeccpars2_77
yeccpars2_76
yeccpars2_75
yeccpars2_74
yeccpars2_73
yeccpars2_72
yeccpars2_71
yeccpars2_70
yeccpars2_69
yeccpars2_68
yeccpars2_67
nonempty_list
yeccpars2_66
yeccpars2_65
yeccpars2_64
yeccpars2_63
yeccpars2_62
yeccpars2_61
yeccpars2_60
yeccpars2_59
yeccpars2_58
yeccpars2_57
yeccpars2_55
yeccpars2_54
yeccpars2_53
yeccpars2_52
yeccpars2_51
yeccpars2_50
yeccpars2_49
yeccpars2_48
yeccpars2_47
yeccpars2_46
ann_type
yeccpars2_45
yeccpars2_44
yeccpars2_43
yeccpars2_42
yeccpars2_41
yeccpars2_40
yeccpars2_39
yeccpars2_38
yeccpars2_37
yeccpars2_36
yeccpars2_35
yeccpars2_34
yeccpars2_33
yeccpars2_32
yeccpars2_30
yeccpars2_29
yeccpars2_28
yeccpars2_27
yeccpars2_26
yeccpars2_25
yeccpars2_24
yeccpars2_cont_23
yeccpars2_23
yeccpars2_22
yeccpars2_21
')'
yeccpars2_20
yeccpars2_18
yeccpars2_17
yeccpars2_16
yeccpars2_15
yeccpars2_14
yeccpars2_cont_13
yeccpars2_13
yeccpars2_12
yeccpars2_11
yeccpars2_10
'('
yeccpars2_9
yeccpars2_8
yeccpars2_7
yeccpars2_6
yeccpars2_5
yeccpars2_4
yeccpars2_3
';'
yeccpars2_2
yeccpars2_1
yeccpars2_0
missing_state_in_action_table
write_char
yecctoken2string
yeccerror
'$end'
yeccpars1
yeccpars2
yecc_error_type
yecc_bug
syntax_error
missing_in_goto_table
yeccpars0
return_error
deep_char_list
parse_and_scan
parse
max_prec
func_prec
preop_prec
'='
'#'
':'
inop_prec
tokens_tuple
'|'
','
tokens_tail
'}'
'{'
'['
']'
bin_element
abstract_byte
abstract_list
not_string
abstract_string
normalise_list
expr_grp
bin
normalise
mapl
build_try
check_clauses
clauses
build_fun
rule
build_rule
build_function
package_segments
typed_record_field
typed
record_field
record_fields
record_tuple
farity_list
error_bad_decl
attribute_farity_list
op
attribute_farity
nil
var_list
export
import
build_attribute
build_bin_type
build_gen_type
union
lift_unions
product
bounded_fun
find_arity_from_specs
build_type_spec
type_def
attribute
typed_record
build_typed_attribute
clause
f
parse_form
inet_default_listen_options
'-tokens/3-fun-0-'
'-scan/6-fun-15-'
'-scan/6-fun-3-'
'-scan/6-fun-2-'
'-scan/6-fun-1-'
'-scan/6-fun-0-'
'-scan/6-fun-4-'
'-scan/6-fun-7-'
'-scan/6-fun-11-'
'-scan/6-fun-9-'
'-scan/6-fun-10-'
'-scan/6-fun-14-'
'-scan/6-fun-6-'
'-scan/6-fun-8-'
'-scan/6-fun-12-'
'-scan/6-fun-5-'
'-scan/6-fun-13-'
'-sub_scan_name/6-fun-0-'
'-scan_char/6-fun-1-'
'-scan_char/6-fun-0-'
'-scan_string/6-fun-1-'
'-scan_string/6-fun-0-'
'-scan_qatom/6-fun-1-'
'-scan_qatom/6-fun-0-'
'-sub_scan_escape/6-fun-3-'
'-sub_scan_escape/6-fun-1-'
'-sub_scan_escape/6-fun-0-'
'-sub_scan_escape/6-fun-2-'
'-scan_number/6-fun-1-'
'-scan_number/6-fun-0-'
'-scan_based_int/6-fun-0-'
'-scan_fraction/6-fun-0-'
'-scan_exponent_sign/6-fun-0-'
'-scan_exponent/6-fun-0-'
'-scan_comment/6-fun-0-'
'-scan_dot/6-fun-0-'
after
spec
let
end
cond
case
of
if
catch
query
try
when
begin
reserved_word
'.'
scan_dot
scan_comment
scan_exponent
scan_exponent_sign
scan_fraction
scan_based_int
integer
scan_number
escape_char
sub_scan_escape
scan_qatom_escape
scan_qatom
scan_string_escape
substr
scan_string
nl
scan_char_escape
scan_char
name_char
sub_scan_name
var
scan_variable
scan_atom
'||'
'<-'
'<<'
'<='
'>>'
':-'
'::'
'->'
badstate
eos
string_thing
scan
char
write_string
fwrite
base
illegal
'-concat/1-fun-0-'
'-filter/2-lc$^0/1-0-'
rufmerge2_2
rufmerge2_1
ufmerge2_2
ufmerge2_1
rufmergel
ufmergel
ufsplit_2
ufsplit_1_1
ufsplit_1
rfmerge2_2
rfmerge2_1
fmerge2_2
fmerge2_1
rfmergel
fmergel
fsplit_2_1
fsplit_2
fsplit_1_1
fsplit_1
rukeymerge2_2
rukeymerge2_1
ukeymerge2_2
ukeymerge2_1
rukeymerge3_21_3
rukeymerge3_12_3
rukeymerge3_2
rukeymerge3_1
ukeymerge3_21_3
ukeymerge3_12_3
ukeymerge3_2
ukeymerge3_1
rukeymergel
ukeymergel
ukeysplit_2
ukeysplit_1_1
ukeysplit_1
rkeymerge2_2
rkeymerge2_1
keymerge2_2
keymerge2_1
rkeymerge3_21_3
rkeymerge3_12_3
rkeymerge3_2
rkeymerge3_1
keymerge3_21_3
keymerge3_12_3
keymerge3_2
keymerge3_1
rkeymergel
keymergel
keysplit_2_1
keysplit_2
keysplit_1_1
keysplit_1
rumerge2_2
rumerge2_1
umerge2_2
umerge2_1
rumerge3_21_3
rumerge3_12_3
rumerge3_2
rumerge3_1
umerge3_21_3
umerge3_12_3
umerge3_2
umerge3_1
rumergel
umergel
usplit_2_1
desc
usplit_2
usplit_1_1
asc
usplit_1
rmerge2_2
rmerge2_1
merge2_2
merge2_1
rmerge3_21_3
rmerge3_12_3
rmerge3_2
rmerge3_1
merge3_21_3
merge3_12_3
merge3_2
merge3_1
rmergel
mergel
split_2_1
split_2
split_1_1
split_1
dropwhile
takewhile
mapfoldr
mapfoldl
partition
foldr
flatmap
rumerge3
umerge3
rumerge
umerge
usort_1
usort
keymap
rukeymerge
ukeymerge
ukeysort_1
ukeysort
rkeymerge
keymerge
keysort_1
keystore2
keystore
keytake
keyreplace3
keydelete3
flatlength
flat_length
do_flatten
thing_to_list
rmerge
rmerge3
merge3
sort_1
zipwith3
zipwith
unzip3
zip3
sublist_2
sublist
duplicate
seq
suffix
prefix
nthtail
nth
open_file
only_loaded
'configuration must be a list ended by <dot><whitespace>'
'-start/1-fun-0-'
'-loaded_applications/0-fun-0-'
'-get_all_env/1-fun-0-'
'-handle_call/3-fun-2-'
'-handle_call/3-fun-0-'
'-handle_call/3-fun-1-'
'-terminate/2-fun-0-'
'-load/2-fun-0-'
'-unload/2-fun-0-'
'-check_start_cond/4-fun-0-'
'-start_appl/3-fun-0-'
'-prim_parse/2-fun-0-'
'-do_change_apps/3-fun-0-'
'-do_change_apps/3-fun-1-'
'-get_cmd_env/1-fun-0-'
'-add_env/2-fun-0-'
'-do_config_diff/3-fun-0-'
'-check_conf/0-fun-0-'
'-reply_to_requester/3-fun-0-'
test_make_apps
test_do_change_appl
test_change_apps
update_permissions
reply_to_requester
exited
info_exited
started_at
info_started
config_error
strip_comment
only_ws
parse_file
done
tokens
scan_file
load_file
dirname
basename
check_conf_sys
config
check_conf
do_config_diff
application_not_found
module_not_defined
sort
do_config_change
do_prep_config_change
check_user
del_env
add_env
get_env_key
merge_app_env
merge_env
get_env_i
make_term
conv
get_cmd_env
get_opt
do_change_appl
is_loaded_app
do_change_apps
invalid_options
badstartspec
invalid_name
make_appl_i
parse_term
splitwith
prim_parse
prim_consult
format_error
non_existing
where_is_file
make_appl
bad_application
get_appl_name
get_restart_type
nd
invalid_restart_type
validRestartType
keyreplaceadd
ksd
keysearchdelete
stopped
stop_appl
start_appl
cast
init_starter
spawn_starter
do_start
check_start_cond
do_load_application
get_loaded
del_cntrl
ac_application_run
notify_cntrl_started
cntrl
shutdown_func
application_terminated
match_delete
keyreplace
ac_application_not_run
not_running
stop_it
failover
takeover
ac_load_application_reply
ac_start_application_reply
ac_change_application_req
application_start_failure
transient
temporary
handle_application_started
application_started
handle_cast
loading
start_p_false
permissions
ac_start_application_req
distributed_application
ac_application_unloaded
noreply
ac_load_application_req
not_started
ac_application_stopped
keydelete
check_para
check_distributed
distributed
check_para_kernel
check_conf_data
'load error'
enter_loop
unset_env
set_env
permit_application
in_modules
get_application_module
get_application
get_master
start_type
get_all_key
get_pid_all_key
appl_data
appl
get_key
get_pid_key
'$2'
'$1'
get_all_env
get_pid_all_env
get_env
get_pid_env
config_change
prep_config_change
change_application_data
control_application
ac_tab
loaded_applications
which_applications
stop_application
bad_environment_value
start_boot_application
start_application
unload_application
load_application
'-format_exception/3-fun-0-'
'-pp_fun/0-fun-0-'
format_tag
pp_fun
format_mfa
format_exception
format_rep
format_report
badrpc
proc_info
get_my_name
translate_process_info
get_process_info
no_trap
adjacents
visit
neighbours
max_neighbours
get_initial_call
make_neighbour_report
neighbour
make_neighbour_reports1
linked_info
get_dictionary
clean_dict
get_cleaned_dictionary
ancestors
get_ancestors
my_info
crash_report
trans_init
raw_init_call
raw_initial_call
translate_initial_call
make_dummy_args
ack
sync_wait
exit_p
init_p_do_apply
'$initial_call'
'$ancestors'
ensure_link
wake_up
check_for_monitor
init_p
opt
spawn_opts
register_name
name_register
safe_whereis_name
where
reply
wait_resp
wait_resp_mon
do_call
init_it2
do_spawn
already_started
bad_module
module_not_found
'-do_unlink/2-fun-0-'
parent_terminated
'-terminate_supervised/4-fun-0-'
code_change
'-system_code_change/4-fun-0-'
'-the_handlers/1-fun-0-'
'-get_modules/1-fun-0-'
items
format_status
the_handlers
stop_handlers
'function not exported'
'module could not be loaded'
report_error
gen_event_EXIT
report_terminate
do_terminate
server_call_update
replace
server_call
new_handler
do_swap
remove_handler
server_update
server_notify
swapped
split_and_terminate
s_s_h
server_swap_handler
server_delete_handler
server_add_sup_handler
handler
server_add_handler
print_event
zf
system_code_change
system_terminate
system_continue
filter
terminate_supervised
do_unlink
terminate_server
get_modules
handle_debug
handle_system_msg
fetch_msg
wake_hib
call1
swap_sup_handler
sync_notify
add_sup_handler
debug_options
init_it
nolink
callbacks
behaviour_info
bad_query
no_log_file
allready_have_logfile
display2
add_node
tag_event
handle_event2
lost_messages
swap
handle_call
handle_info
handle_event
go_back
which_handlers
simple_logger
delete_report_handler
add_handler
add_report_handler
delete_handler
logfile
swap_handler
error_info
info_report
std_info
std_warning
warning_report
format
error_msg
stop_error
report_problem
send_shutdown
get_heart_cmd
send_heart_cmd
send_heart_beat
do_cycle_port_program
no_reboot_shutdown
port_terminated
bad_cmd
wait_ack
bad_heart_flag
check_start_heart
get_heart_timeouts
port_problem
start_portprogram
wait
cycle
clear_cmd
get_cmd
set_cmd
start_error
no_heart
wait_for_init_ack
abstract
extends
check_inheritance
stub_function
'no -init_debug flag'
'no -mode flag'
erlangrc
start_boot
applications_loaded
errlog_type
sasl_error_logger
sasl_sup
pool_master
take_over_monitor
rsh_starter
timer_server
stdlib
init_kernel_started
mod
maxP
maxT
start_phases
tty
included_applications
applications
ddll_server
os_server
rex
net_sup
kernel_sup
global_name_server
fixtable_server
file_server_2
boot_server
modules
vsn
description
start_link
modules_loaded
alarm_handler
erlsrv
format_lib_supp
misc_supp
overload
rb
rb_format_supp
release_handler
release_handler_1
sasl_report
sasl_report_file_h
sasl_report_tty_h
systools
systools_lib
systools_make
systools_rc
systools_relup
array
base64
beam_lib
c
dets
dets_server
dets_sup
dets_utils
dets_v8
dets_v9
dict
digraph
digraph_utils
edlin
edlin_expand
epp
erl_bits
erl_compile
erl_expand_records
erl_internal
erl_lint
erl_posix_msg
erl_pp
erl_tar
error_logger_file_h
error_logger_tty_h
escript
eval_bits
file_sorter
filelib
gb_sets
gb_trees
gen
gen_event
gen_fsm
io_lib
io_lib_format
io_lib_fread
io_lib_pretty
lib
log_mf_h
ms_transform
orddict
ordsets
otp_internal
pg
pool
proc_lib
proplists
qlc
qlc_pt
queue
random
regexp
sets
shell
shell_default
slave
sofs
supervisor
supervisor_bridge
sys
win32reg
application
application_controller
application_master
application_starter
code_server
disk_log
disk_log_1
disk_log_server
disk_log_sup
dist_ac
dist_util
erl_boot_server
erl_distribution
erl_epmd
erl_reply
file_io_server
file_server
gen_sctp
gen_tcp
gen_udp
global_group
global_search
group
hipe_unified_loader
inet6_tcp
inet6_tcp_dist
inet6_udp
inet_config
inet_db
inet_dns
inet_gethost_native
inet_hosts
inet_parse
inet_res
inet_sctp
inet_tcp
inet_tcp_dist
inet_udp
kernel_config
net
net_adm
packages
pg2
ram_file
rpc
user_drv
user_sup
wrap_log_reader
linux
unix
mnesia
os_mon
sasl
kernel
sname
noinput
noshell
pa
home
progname
root
'no -path flag'
'no -id flag'
'no -hosts flag'
'no -loader flag'
'-mnesia'
'-os_mon'
'-sasl'
'-kernel'
'-sname'
'-noinput'
'-noshell'
'-home'
'-progname'
rabbit
'-spawn_opt/5-fun-0-'
get_demonitor_opts
list_to_integer_sign
concat_binary
get_cookie
auth
set_cookie
ignored
passive_cnct
send_nosuspend
fun_info_1
disconnect
disconnect_node
is_well_formed_list
crasher
remote_spawn_error
no_link
gen_server
spawn_monitor
einal
clean
file_not_found
'no server found'
ebusy
no_multi_get
ose_inet
'-start/3-fun-0-'
'-handle_get_files/4-fun-0-'
'-handle_get_file/3-fun-0-'
'-handle_get_file/3-fun-1-'
'-handle_set_primary_archive/3-fun-0-'
'-handle_release_archives/1-fun-0-'
'-handle_list_dir/2-fun-0-'
'-handle_list_dir/2-fun-1-'
'-handle_read_file_info/2-fun-0-'
'-handle_read_file_info/2-fun-1-'
'-handle_get_cwd/2-fun-0-'
'-handle_get_cwd/2-fun-1-'
'-efile_multi_get_file_from_port2/8-fun-0-'
'-prim_set_primary_archive/3-fun-0-'
'-prim_get_file/2-fun-0-'
'-prim_list_dir/2-fun-0-'
'-prim_read_file_info/2-fun-0-'
'-open_archive/3-fun-0-'
'-foldl_archive/3-fun-0-'
normalize
pathtype
absname_vr
volumerelative
relative
absolute
ipv4_addr
ipv4_address
ipv4_list
string_split2
string_split
string_match
no_match
no_split
do_name_split
name_split
to_strs
min
keyins
keysort
send_all
win32
is_basename
clear_cache
cache_new
foldl_archive
open_archive
apply_archive
prim_get_cwd
archive_read_file_info
prim_read_file_info
archive_list_dir
prim_list_dir
archive_get_file
archive
prim_get_file
prim_set_primary_archive
cache
release
primary
prim_do_release_archives
prim_release_archives
loader_debug
prim_init
port_error
ll_close
ll_open_set_bind
ll_udp_open
ll_tcp_connect
udp_options
tcp_timeout
tcp_options
inet_stop_port
inet_get_cwd
inet_read_file_info
inet_list_dir
inet_send_and_rcv
inet_get_file_from_port1
inet_get_file_from_port
inet_timeout_handler
inet_exit_port
find_collect
find_loop
connect_master
find_master
efile_timeout_handler
fail
efile_exit_port
noport
efile_stop_port
efile_get_cwd
efile_read_file_info
efile_list_dir
efile_release_archives
efile_set_primary_archive
efile_get_file_from_port3
'prim_load port died'
efile_get_file_from_port2
efile_get_file_from_port
efile_par_get_file
emfile
efile_multi_get_file_from_port2
efile_multi_get_file_from_port
handle_timeout
handle_exit
handle_stop
handle_get_cwd
handle_read_file_info
handle_list_dir
handle_release_archives
handle_set_primary_archive
handle_get_file
handle_get_files
bad_state
error_report
std_error
enotdir
enoent
check_file_result
release_archives
set_primary_archive
get_path
init_ack
prim_state
'-filter_fun/0-fun-0-'
'-get_zip_input/1-fun-0-'
'-get_zip_input/1-fun-1-'
'-get_cd_loop/11-fun-0-'
'-get_cd_loop/11-fun-1-'
pwrite_binary
pwrite_iolist
skipper
skip_iolist
splitter
split_iolist
local_file_header_from_bin
bad_cd_file_header
cd_file_header_from_bin
dos_date_time_to_datetime
add_extra_info
cd_file_header_to_file_info
eocd_and_comment_from_bin
local_time
calendar
binary_io
set_file_info
prim_file_io
find_eocd_header
seek
bad_eocd
get_end_of_central_dir
get_filename_from_b2
bad_central_directory
cd_file_header
get_file_header
get_cd_loop
eocd
get_central_dir
offset_over_z_data_descriptor
unsupported_compression
get_z_all
bad_local_file_header
bad_local_file_offset
local_file_header
get_z_file
get_zip_input
illegal_filter
primzip_file
do_foldl
foldl
primzip
do_open
filter_fun
prim_zip
zlib_drv
need_dictionary
arg_mem
arg_bitsz
arg_method
filtered
huffman_only
arg_strategy
best_speed
best_compression
arg_level
full
arg_flush
collect
gunzip
gzip
unzip
deflated
zip
data_error
uncompress
finish
default
compress
getQSize
getBufSize
setBufSize
inflateEnd
inflate
inflateReset
inflateSync
inflateSetDictionary
inflateInit
deflateEnd
deflate
deflateParams
deflateReset
deflateSetDictionary
deflateInit
zlib
premature_end_of_list
lists_split
transform_ldata
get_uint32s
get_uint32
get_uint64
date_to_bytes
int_to_bytes
file_access
other
device
regular
symlink
file_type
transform_info_ints
translate_response
cur
bof
lseek_position
delayed_write
read_ahead
open_mode
port_died
bad_response_from_port
drv_get_response
drv_command
drv_command_raw
drv_close
drv_open
list_dir_int
list_dir
read_link_info_int
read_link_info
read_link_int
read_link
make_symlink_int
make_symlink
make_link_int
make_link
write_file_info_int
write_file_info
altname_int
altname
read_file_info_int
del_dir_int
del_dir
make_dir_int
make_dir
rename_int
delete_int
absname
filename
vxworks
set_cwd_int
set_cwd
get_cwd_int
get_cwd
write_file
read_file
ipread_s32bu_p32bu
copy_opened
file
truncate
position
pread_int
pread
enomem
sync
pwrite_int
pwrite
file_descriptor
open_int_setopts
open_int
efile
prim_file
bound
connecting
accepting
busy
multicast
no_pointtopoint
pointtopoint
no_broadcast
down
up
ssl
off
on
term
sctp_setadaptation
sctp_assoc_value
sctp_prim
sctp_setpeerprim
sctp_assocparams
sackdelay_disable
sackdelay_enable
pmtud_disable
pmtud_enable
hb_demand
hb_disable
hb_enable
sctp_paddrparams
sctp_event_subscribe
abort
addr_over
unordered
sctp_paddrinfo
'-bindx/3-lc$^0/1-0-'
ctl_cmd
get_ip6
get_ip4
get_ip
ip6_to_bytes
ip4_to_bytes
ip_to_bytes
rev
build_iflist
encode_ifname
enc_time
dec_status
dec_stats
decode_stats
recv_cnt
recv_max
recv_avg
recv_dvi
send_cnt
send_max
send_avg
recv_oct
send_oct
enc_stats
encode_stats
dec_subs
decode_subs
enc_subs
encode_subs
encode_ifopt_val
encode_ifopts
decode_ifopts
dec_ifopt
enc_ifopt
hwaddr
mtu
dstaddr
broadaddr
netmask
type_ifopt
merge_fields
merge
merge_options
need_template
dec
dec_opt_val
decode_opt_val
einval
enc_opts
encode_opts
once
enc_opt_val
encode_opt_val
enum_name
enum_val
enum_names
enum_vals
borlist
dec_value_tuple
decode
dec_value
loopback
enc_value_2
enc_value_tuple
enc_value_1
enc_value_default
enc_value
binary_or_uint
ether
addr
uint8
uint16
uint24
uint32
sctp_assoc_id
enum
bitenumlist
type_value_2
type_value_record
type_value_tuple
type_value_1
type_value_default
record
type_value
bool
int
ip
uint
type_opt_1
type_opt
dec_opt
reuseaddr
keepalive
dontroute
linger
broadcast
sndbuf
recbuf
tos
nodelay
multicast_if
multicast_ttl
multicast_loop
add_membership
drop_membership
buffer
header
mode
deliver
exit_on_close
high_watermark
low_watermark
bit8
send_timeout
delay_send
read_packets
sctp_rtoinfo
sctp_associnfo
sctp_initmsg
sctp_autoclose
sctp_nodelay
sctp_disable_fragments
sctp_i_want_mapped_v4_addr
sctp_maxseg
sctp_set_peer_primary_addr
sctp_primary_addr
sctp_adaptation_layer
sctp_peer_addr_params
sctp_events
sctp_delayed_ack_time
sctp_status
sctp_get_peer_addr_info
enc_opt
is_sockopt_val
attach
detach
unrecv
getservbyport1
getservbyport
getservbyname1
getservbyname
gethostname
getstatus
getprotocol
dgram
seqpacket
gettype
getindex
getfd
getstat
subscribe
ifset
ifget
getiflist
chgopts
chgopt
sctp_reply
getopts
getopt
setopts
setopt
setsockname
sockname
setpeername
peername
recvfrom0
recvfrom
async_recv
recv0
recv
sctp_default_send_param
sctp_sndrcvinfo
sendmsg
sendto
bool8
listen
async_accept
accept_opts
accept0
accept
async_connect
connect0
bindx
remove
add
bind
close_pend_loop
send_pend
shutdown_pend_loop
shutdown_2
subs_empty_out_q
shutdown_1
write
read_write
drv2protocol
eprotonosupport
sctp_inet
tcp_inet
udp_inet
sctp
protocol2drv
open0
fdopen1
open1
fdopen
inet
inet6
prim_inet
shutdown_timeout
not_allowed
badrecord
starting
'-bs2as/1-fun-0-'
'-bs2ss/1-fun-0-'
'-boot/1-fun-0-'
'-notify/1-fun-0-'
'-alive_processes/0-lc$^0/1-0-'
'-do_boot/2-fun-0-'
'-par_load_modules/2-fun-0-'
'-par_load_modules/2-fun-1-'
'-patch_path/2-lc$^0/1-0-'
'-patch_dir/2-lc$^0/1-1-'
'-patch_dir/2-lc$^1/1-0-'
'-shutdown_timer/1-fun-0-'
archive_extension
objfile_extension
concat
set_argument
get_argument1
to_strings
get_flag_args
get_flag_list
get_flag
get_args
check
start_arg2
eval_arg
start_arg
flag
start_extra_arg
end_args
arg
parse_boot_args
timer
flush_timout
'-shutdown_time'
shutdown_timer
load_mod_code
load_mod
exprs
erl_eval
parse_exprs
erl_parse
dot
erl_scan
start_it
start_em
start_in_kernel
join
funny_splitwith
funny_split
directory
file_info
read_file_info
patch_dir
patch_path
get_var_val
get_var_value
extract_var
add_var
fix_path
make_path
'cannot load'
get_files
par_load_modules
load_modules
'unexpected command in bootfile'
kernelProcess
preLoaded
primLoad
path
embedded
kernel_load_completed
eval_script
script
get_file
'bootfile format error'
'cannot get bootfile'
not_found
get_boot
'-pz'
'-pa'
path_flags
bootfile
'-boot_var'
'-init_debug'
'-mode'
'-root'
do_boot
'-path'
'-id'
'-hosts'
'-loader'
prim_load_flags
add_to_kernel
set_path
erl_prim_loader
start_prim_loader
sleep
kernel_pid
terminate
del
sub
do_unload
unload
kill_all_ports
kill_em
get_pids
alive_processes
kill_all_pids
resend
shutdown_loop
shutdown_kernel_pid
shutdown
heart
get_heart
shutdown_pids
stop_heart
clear_system
do_stop
stopping
'-config'
'-boot'
user
do_handle_msg
new_state
handle_msg
loop
ignore
new_kernelpid
garb_boot_loop
foreach
progress
boot_loop
crash
first198
halt_string
things_to_string
flatten
printable_list
state
relaxed
strict
code_path_choice
flags_to_atoms_again
map
b2s
b2a
s
eval
prepare_run_args
reboot
request
started
wait_until_started
notify_when_started
make_permanent
ensure_loaded
fetch_loaded
get_status
bs2ss
bs2as
script_id
get_argument
get_plain_arguments
get_arguments
debug
fatal
boot
otp_ring0
'TRACE'
'DELETE'
'PUT'
'POST'
'HEAD'
'GET'
'OPTIONS'
'Proxy-Connection'
'Keep-Alive'
'Cookie'
'X-Forwarded-For'
'Set-Cookie2'
'Set-Cookie'
'Accept-Ranges'
'Last-Modified'
'Expires'
'Etag'
'Content-Type'
'Content-Range'
'Content-Md5'
'Content-Location'
'Content-Length'
'Content-Language'
'Content-Encoding'
'Content-Base'
'Allow'
'Www-Authenticate'
'Warning'
'Vary'
'Server'
'Retry-After'
'Public'
'Proxy-Authenticate'
'Location'
'Age'
'User-Agent'
'Referer'
'Range'
'Proxy-Authorization'
'Max-Forwards'
'If-Unmodified-Since'
'If-Range'
'If-None-Match'
'If-Match'
'If-Modified-Since'
'Host'
'From'
'Authorization'
'Accept-Language'
'Accept-Encoding'
'Accept-Charset'
'Accept'
'Via'
'Upgrade'
'Transfer-Encoding'
'Pragma'
'Date'
'Connection'
'Cache-Control'
characters_to_list_trap_4
characters_to_list_trap_3
characters_to_list_trap_2
characters_to_list_trap_1
characters_to_utf8_trap
md5_trap
empty_out_q
udp_error
tcp_error
tcp_closed
inet_reply
inet_async
udp
tcp
select_trap
'count_trap\000'
delete_trap
characters_to_list
characters_to_binary
decode_packet
update_element
bitstring_to_list
list_to_bitstring
bit_size
byte_size
tuple_size
is_bitstring
list_to_existing_atom
iolist_to_binary
iolist_size
make_fun
to_integer
string
is_boolean
get_module_info
warning_map
hibernate
blocking_read_file
is_native
is_module_native
make_stub_module
module_md5
get_chunk
lock_counters
dump_links
dump_monitors
set_internal_state
get_internal_state
flat_size
same
disassemble
erts_debug
search
keysearch
'erl.lang.list.keylist'
keymember
reverse
is_element
lists
run
format_error_int
loaded_drivers
try_unload
try_load
erl_ddll
getpid
setenv
'erl.system.os'
putenv
os
match_spec_run_r
match_spec_compile
select_delete
select_reverse
select_count
select
update_counter
slot
fixtable
safe_fixtable
rename
insert_new
insert
prev
is_key
member
match_object
last
lookup_element
lookup
is_compiled_ms
delete_object
delete_all_objects
'erl.lang.ets'
match_spec_test
is_record
is_function
is_binary
is_reference
is_port
is_pid
is_number
is_integer
is_float
is_constant
is_tuple
is_list
is_atom
subtract
'--'
append
'++'
send
'!'
divide
multiply
minus
plus
not_arith_equal
not_equal
arith_equal
equal
less_or_equal
less
greater_or_equal
greater
'erl.lang.bool'
is_builtin
get_stacktrace
raise
fault
is_process_alive
demonitor
fun_to_list
port_to_list
ref_to_list
system_profile
system_monitor
system_info
system_flag
append_element
make
make_tuple
read
read_timer
cancel
cancel_timer
send_after
'erl.lang.timer'
start_timer
pow
atan2
sqrt
log10
log
exp
erfc
erf
atanh
atan
asinh
asin
acosh
acos
tanh
tan
sinh
sin
cosh
'erl.lang.math'
cos
math
bump_reductions
process_display
resume_process
suspend_process
seq_trace_print
seq_trace_info
seq_trace
trace_delivered
trace_info
trace_pattern
get_data
port_get_data
set_data
port_set_data
port_connect
port_close
control
port_control
port_command
port_call
dist_exit
setnode
spawn_opt
whereis
unlink
utc_to_local
universaltime_to_localtime
utc
universaltime
tuple_to_list
trunc
tl
time_of_day
time
from_term
term_to_binary
statistics
split
split_binary
spawn_link
spawn
setelement
self
round
registered
put
purge
purge_module
process_info
set_flag
process_flag
preloaded
pre_loaded
port_info
pid_to_string
pid_to_list
'erl.lang.port'
open_port
now
nodes
monitor_node
function_exported
is_loaded
module_loaded
final
md5_final
update
md5_update
init
md5_init
digest
'erl.util.crypt.md5'
md5
'erl.lang.ref'
make_ref
local_to_utc
localtime_to_universaltime
localtime
load
load_module
list_to_tuple
string_to_pid
list_to_pid
list_to_integer
list_to_float
from_list
list_to_binary
from_string
list_to_atom
link
length
'erl.lang.node'
is_alive
'erl.lang.integer'
integer_to_list
'erl.lang.list'
hd
hash
phash2
phash
'erl.lang.system'
halt
set_group_leader
group_leader
get_keys
get
garbage_collect_message_area
'erl.system'
garbage_collect
'erl.lang.function'
fun_info
'erl.lang.float'
float_to_list
to_float
float
'erl.lang.term'
external_size
signal
'erl.lang.proc'
'erl.lang.proc.pdict'
erase
'erl.lang.tuple'
element
display_nl
display_string
'erl.system.debug'
display
delete
delete_module
today
'erl.util.date'
date
crc32_combine
'erl.util.crypt.crc32'
crc32
check_process
'erl.system.code'
check_process_code
to_term
binary_to_term
to_list
'erl.lang.binary'
binary_to_list
to_string
'erl.lang.atom'
atom_to_list
'erl.lang'
apply
combine
adler32_combine
sum
'erl.util.crypt.adler32'
adler32
'erl.lang.number'
abs
yield
yes
xor
wordsize
warning_msg
warning
wall_clock
waiting
visible
version
values
value
unload_cancelled
unloaded_only
unloading
unloaded
unless_suspending
uniq
unblock
utf8
used
use_stdio
unregister
unicode
ungreedy
undef
type
tuple
try_clause
trap_exit
tracer
trace_control_word
traced
trace_ts
trace
tpkt
total_heap_size
total
timestamp
'*'
timeout_value
threads
thread_pool_size
this
table
'SYSTEM'
system_architecture
system_version
system_limit
system_error
system
sys_misc
suspending
suspended
suspend
sunrm
stream
stop
stderr_to_stdout
static
status
start
stack_size
ssl_tls
sl_alloc
size
silent
shared
separate
set_tcw_fake
set_tcw
set_seq_token
set_on_spawn
set_on_link
set_on_first_spawn
set_on_first_link
set
serial
sequential_trace_token
sequential_tracer
sensitive
scheme
scheduler_id
scheduler
save_calls
runtime
running_procs
running_ports
running
runnable_procs
runnable_ports
runnable
run_queue
return_trace
return_to
return_from
restart
reset
rem
reload
registered_name
register
refc
reductions
recent_size
receive
ready_async
ready_output
ready_input
re_run_trap
re_pattern
re
raw
queue_size
quantify
purify
public
protection
protected
profile
procs
process_dump
process_limit
process_count
processes_used
processes_trap
processes
process
private
priority
print
port_count
ports
port
pid
permanent
pending_reload
pending_process
pending_driver
pending
pause
'+'
packet_size
packet
owner
output
out_exiting
out_exited
out
ose_ti_proc
ose_process_type
ose_process_prio
ose_pri_proc
ose_phantom
ose_int_proc
ose_bg_proc
os_version
os_type
orelse
ordered_set
or
open_error
open
on_load
old_heap_size
old_heap_block_size
ok
offset
objects
nouse_stdio
notify
notempty
noteol
notbol
notalive
not_purged
not_pending
not_loaded_by_this_process
not_loaded
not_a_list
not
no_network
no_integer
no_float
nosuspend
noproc
nofile
noeol
nodeup
nodedown_reason
nodedown
node_type
node
nocookie
noconnection
noconnect
no_auto_capture
none
nomatch
no
next
newline
new_uniq
new_index
new
net_kernel_terminated
net_kernel
'/='
'=/='
native_addresses
named_table
name
multiline
multi_scheduling
more
monitors
monitor_nodes
monitor
monitored_by
module_info
module
'-'
minor_version
min_heap_size
meta_match_spec
meta
messages
message_queue_len
message_binary
message
memory_types
memory
mbuf_size
max_processes
max_tables
maximum
max
match_spec
match
machine
'<'
low
long_gc
local
load_failure
load_cancelled
loaded
little
list
links
linked_in_driver
line_length
line
lf
'=<'
latin1
last_calls
large_heap
label
known
kill_ports
killed
kill
keypos
io
is_seq_trace
invalid
instruction_counts
internal_status
internal_error
input
initial_call
info_msg
info
index
inconsistent
incomplete
inactive
in_exiting
in
imports
if_clause
id
hybrid
http_error
http_eoh
http_header
http_request
http_response
https
httph
http
hipe_architecture
high
hide
hidden
heap_type
heap_sizes
heap_size
heap_block_size
grun
'>'
global_heaps_size
global
getting_unlinked
getting_linked
getenv
get_tcw
get_seq_token
generational
'>='
gc_start
gc_end
garbage_collection
garbage_collecting
function_clause
functions
function
fullsweep_if_old_binaries
fullsweep_after
free
flush
flags
firstline
first
fd
fcgi
external
exports
exiting
existing
exit_status
exclusive
exact_reductions
event
ets
error_logger
error_handler
'ERROR'
erlang
'=='
'=:='
extended
exception_trace
exception_from
eol
eof
env
endian
enabled
enable_trace
emulator
elib_malloc
dupnames
duplicate_bag
dunlink
dsend
driver_options
driver
dotall
dollar_endonly
'$_'
'$$'
dmonitor_p
dmonitor_node
dlink
div
'/'
dist
display_items
disabled
disable_trace
dictionary
dgroup_leader
depth
dexit
delay_trap
debug_flags
data
current_function
creation
crlf
cr
cpu_timestamp
copy
context_switches
const
cons
connection_closed
connected
connect
compressed
compile
compat_rel
command
code
closed
close
clear
cdr
cd
catchlevel
caseless
case_clause
capture
caller
call_count
busy_port
busy_dist_port
bsr_unicode
bsr_anycrlf
bsr
bsl
breakpoint
break_ignored
bxor
bor
bnot
blocked
block
binary
big
band
bag
badfun
badsig
badmatch
badfile
badarity
badarith
badarg
backtrace_depth
backtrace
awaiting_unload
awaiting_load
attributes
atom_used
atom
asynchronous
asn1
arity
anycrlf
any
andthen
andalso
and
anchored
already_loaded
allow_passive_connect
alloc_util_allocators
allocator_sizes
allocator
allocated_areas
allocated
all_but_first
all
active
absoluteURI
abs_path
aborted
'EXIT'
'UP'
'DOWN'
undefined_lambda
undefined_function
nocatch
undefined
exit
error
throw
return
call
normal
timeout
infinity
fun
''
'$end_of_table'
'nonode at nohost'
'_'
true
false
=end

From romary.kremer at gmail.com  Thu Jun 17 10:51:16 2010
From: romary.kremer at gmail.com (romary.kremer at gmail.com)
Date: Thu, 17 Jun 2010 11:51:16 +0200
Subject: [rabbitmq-discuss] Strange behavior with SSL configuration
Message-ID: <9C264785-21FE-459D-A647-3B2542D702DB@gmail.com>

Hi,
we are facing stange behavior while testing SSL connections.

One month ago, we start experimenting the SSL features as described in  
the rabbitMQ SSL web page.

	- We had set up a broker (1.7.2) on an Ubuntu with latest Erlang  
distribution R13B04 (built from sources)
	
	- We wrote down a simple Java client exemple that both presents a  
certificate and verify the broker certificate, based on the second  
Java example of the documentation.

	- On the broker side, we have experimented both fail_if_no_peer_cert   
with value true and false.

Everything seemed to work perfectly at this time, and we stated that  
SSL support was good enough and we paused our work on that part right  
after that.


Today, we are back on using SSL, and so we tried to start from the  
previous successful achievement we got, but strange things start to  
happened now :

Runnning against the "apparently" same configuration, the Java client  
almost never manage to connect.

The most disturbing thing is that it sometimes manage to !!!! amongst  
20 executions,  we have observed 2 successful executions.

All the others led to stack trace at the client side
	
	javax.net.ssl.SSLHandshakeException: Remote host closed connection  
during handshake
	at  
com 
.sun.net.ssl.internal.ssl.SSLSocketImpl.readRecord(SSLSocketImpl.java: 
742)
	at  
com 
.sun 
.net 
.ssl 
.internal.ssl.SSLSocketImpl.performInitialHandshake(SSLSocketImpl.java: 
1030)
	at  
com 
.sun.net.ssl.internal.ssl.SSLSocketImpl.writeRecord(SSLSocketImpl.java: 
622)
	at  
com 
.sun.net.ssl.internal.ssl.AppOutputStream.write(AppOutputStream.java:59)
	at java.io.BufferedOutputStream.flushBuffer(BufferedOutputStream.java: 
65)
	at java.io.BufferedOutputStream.flush(BufferedOutputStream.java:123)
	at java.io.DataOutputStream.flush(DataOutputStream.java:106)
	at  
com 
.rabbitmq 
.client.impl.SocketFrameHandler.sendHeader(SocketFrameHandler.java:109)
	at  
com 
.rabbitmq 
.client.impl.SocketFrameHandler.sendHeader(SocketFrameHandler.java:122)
	at com.rabbitmq.client.impl.AMQConnection.start(AMQConnection.java:230)
	at  
com 
.rabbitmq 
.client.ConnectionFactory.newConnection(ConnectionFactory.java:201)
	at  
com 
.rabbitmq 
.client.ConnectionFactory.newConnection(ConnectionFactory.java:251)
	at  
com 
.rabbitmq 
.client.ConnectionFactory.newConnection(ConnectionFactory.java:265)
	at  
com 
.rabbitmq 
.client.ConnectionFactory.newConnection(ConnectionFactory.java:276)
	at  
com 
.schneider 
.middleware 
.rabbitmq.osgi.hc.HCSimulator.createConnections(HCSimulator.java:174)
	at  
com 
.schneider 
.middleware.rabbitmq.osgi.hc.HCSimulator.main(HCSimulator.java:373)
2010-06-17 11:19:57,234 ERROR - Exception while creating connection  
for hc_1. Remote host closed connection during handshake
2010-06-17 11:19:57,234  INFO - Canceling the simulation.
Caused by: java.io.EOFException: SSL peer shut down incorrectly
	at com.sun.net.ssl.internal.ssl.InputRecord.read(InputRecord.java:333)
	at  
com 
.sun.net.ssl.internal.ssl.SSLSocketImpl.readRecord(SSLSocketImpl.java: 
723)
	... 15 more

and on the broker side, we get

=INFO REPORT==== 17-Jun-2010::11:12:07 ===
started TCP Listener on 0.0.0.0:5672

=INFO REPORT==== 17-Jun-2010::11:12:07 ===
started SSL Listener on 0.0.0.0:5671

=INFO REPORT==== 17-Jun-2010::11:12:17 ===
Rolling persister log to "/var/lib/rabbitmq/mnesia/rabbit/ 
rabbit_persister.LOG.previous"

=INFO REPORT==== 17-Jun-2010::11:12:18 ===
accepted TCP connection on 0.0.0.0:5671 from 192.168.0.71:2693

=INFO REPORT==== 17-Jun-2010::11:12:18 ===
starting TCP connection <0.234.0> from 192.168.0.71:2693

=ERROR REPORT==== 17-Jun-2010::11:12:23 ===
** State machine <0.235.0> terminating
** Last event in was {ssl_tls,undefined,22,
                               {3,1},
                                
<<1,0,0,97,3,1,0,57,0,0,0,32,0,0,4,1,0,128,0,0,
                                  
5,0,0,47,0,0,51,0,0,50,0,0,10,7,0,192,0,0,22,
                                  
0,0,19,0,0,9,6,0,64,0,0,21,0,0,18,0,0,3,2,0,
                                  
128,0,0,8,0,0,20,0,0,17,76,25,232,184,7,237,
                                  
210,174,78,125,57,168,183,15,57,152,10,189,
                                  
188,145,39,117,76,117,95,107,98,71,33,64,209,
                                 53>>} (for all states)
** When State == hello
**      Data  == {state,server,
                      {#Ref<0.0.0.764>,<0.234.0>},
                      gen_tcp,tcp,tcp_closed,"localhost", 
5671,#Port<0.2741>,
                      {ssl_options,[],verify_peer,#Fun<ssl. 
2.93623501>,true,
                          false,1,
                          "/home/komak/rabbitmq-ssl-scripts/simple/ 
server/cert.pem",
                          "/home/komak/rabbitmq-ssl-scripts/simple/ 
server/key.pem",
                          undefined,undefined,
                          "/home/komak/rabbitmq-ssl-scripts/simple/ 
testca/cacert.pem",
                          [<<0,10>>,<<0,47>>,<<0,5>>,<<0,4>>,<<0,9>>],
                          #Fun<ssl.0.126056736>,true,[]},
                      {socket_options,binary,0,0,0,false},
                      {connection_states,
                          {connection_state,
                              {security_parameters,undefined, 
0,0,0,undefined,
                                  undefined,undefined,undefined, 
0,undefined,0,
                                   
undefined,undefined,undefined,undefined},
                              undefined,undefined,undefined,1},
                          {connection_state,
                              {security_parameters,undefined, 
0,undefined,
                                   
undefined,undefined,undefined,undefined,
                                   
undefined,undefined,undefined,undefined,
                                  undefined,undefined,
                                   
<<76,25,230,243,171,3,214,49,238,15,225,242,
                                     
21,64,243,210,229,226,75,36,29,18,98,226,56,
                                    156,175,67,146,121,66,231>>,
                                  undefined},
                              undefined,undefined,undefined,undefined},
                          {connection_state,
                              {security_parameters,undefined, 
0,0,0,undefined,
                                  undefined,undefined,undefined, 
0,undefined,0,
                                   
undefined,undefined,undefined,undefined},
                              undefined,undefined,undefined,0},
                          {connection_state,
                              {security_parameters,undefined, 
0,undefined,
                                   
undefined,undefined,undefined,undefined,
                                   
undefined,undefined,undefined,undefined,
                                  undefined,undefined,
                                   
<<76,25,230,243,171,3,214,49,238,15,225,242,
                                     
21,64,243,210,229,226,75,36,29,18,98,226,56,
                                    156,175,67,146,121,66,231>>,
                                  undefined},
                              undefined,undefined,undefined,undefined}},
                      <<>>,<<>>,
                       
{{<<1,35,69,103,137,171,205,239,254,220,186,152,118,84,50,
                           
16,0,0,0,0,0,0,0,0,105,98,47,115,115,108,45,51,46,49,
                           
48,46,56,47,101,98,105,110,47,115,115,108,95,104,97,
                           
110,100,115,104,97,107,101,46,98,101,97,109,116,105,
                           
111,110,46,98,101,33,0,0,0,3,0,0,0,180,210,66,183,0,0,
                          0,0,0,0,0,0,0,0,0,0>>,
                         
<<1,35,69,103,137,171,205,239,254,220,186,152,118,84,
                           
50,16,240,225,210,195,0,0,0,0,0,0,0,0,115,108,45,51,
                           
46,49,48,46,56,47,101,98,105,110,47,115,115,108,95,
                           
99,111,110,110,101,99,116,105,111,110,46,98,101,97,
                           
109,0,0,0,0,0,0,113,7,0,0,3,0,0,0,156,157,68,183,0,0,
                          0,0,0,0,0,0,0,0,0,0,0,0,0,0>>},
                        
{<<1,35,69,103,137,171,205,239,254,220,186,152,118,84,50,
                           
16,0,0,0,0,0,0,0,0,105,98,47,115,115,108,45,51,46,49,
                           
48,46,56,47,101,98,105,110,47,115,115,108,95,104,97,
                           
110,100,115,104,97,107,101,46,98,101,97,109,116,105,
                           
111,110,46,98,101,33,0,0,0,3,0,0,0,180,210,66,183,0,0,
                          0,0,0,0,0,0,0,0,0,0>>,
                         
<<1,35,69,103,137,171,205,239,254,220,186,152,118,84,
                           
50,16,240,225,210,195,0,0,0,0,0,0,0,0,115,108,45,51,
                           
46,49,48,46,56,47,101,98,105,110,47,115,115,108,95,
                           
99,111,110,110,101,99,116,105,111,110,46,98,101,97,
                           
109,0,0,0,0,0,0,113,7,0,0,3,0,0,0,156,157,68,183,0,
                          0,0,0,0,0,0,0,0,0,0,0,0,0,0,0>>}},
                      [],
                       
<<48,130,2,229,48,130,1,205,160,3,2,1,2,2,1,1,48,13,6,9,
                         
42,134,72,134,247,13,1,1,5,5,0,48,19,49,17,48,15,6,3,85,
                         
4,3,19,8,77,121,84,101,115,116,67,65,48,30,23,13,49,48,
                         
48,54,49,55,48,56,52,51,52,57,90,23,13,49,49,48,54,49,
                         
55,48,56,52,51,52,57,90,48,40,49,21,48,19,6,3,85,4,3,19,
                         
12,109,121,115,116,105,99,45,98,117,110,116,117,49,15,
                         
48,13,6,3,85,4,10,19,6,115,101,114,118,101,114,48,130,1,
                         
34,48,13,6,9,42,134,72,134,247,13,1,1,1,5,0,3,130,1,15,
                         
0,48,130,1,10,2,130,1,1,0,183,13,146,242,20,154,134,161,
                         
178,135,188,88,74,200,203,154,206,75,148,73,181,170,132,
                         
162,80,149,96,158,178,155,135,78,201,18,87,248,83,86,45,
                         
72,160,93,201,238,178,140,231,197,155,96,233,76,54,157,
                         
93,98,232,83,79,156,215,58,165,212,6,74,93,164,69,143,
                         
215,240,148,220,233,108,55,102,185,62,89,229,151,249,
                         
232,147,230,65,54,196,49,187,159,168,132,140,228,58,244,
                         
151,49,183,151,33,207,154,250,139,127,96,178,195,152,
                         
200,65,3,187,27,187,42,247,76,175,10,6,252,46,3,14,208,
                         
128,201,153,146,22,108,216,107,76,117,33,218,75,11,20,
                         
135,72,133,45,27,113,182,94,33,107,253,8,173,123,136,
                         
141,204,75,156,254,41,33,102,59,109,58,169,72,62,214,
                         
190,18,57,194,191,54,199,156,49,201,201,188,24,11,211,
                         
101,13,85,118,194,129,1,152,238,214,3,10,74,243,95,88,
                         
110,162,28,195,200,197,243,63,200,150,245,16,21,149,134,
                         
186,65,210,105,31,70,29,12,189,223,115,109,242,181,241,
                         
2,140,177,84,117,239,23,246,54,214,27,63,195,190,206,
                         
179,80,162,173,43,2,3,1,0,1,163,47,48,45,48,9,6,3,85,29,
                         
19,4,2,48,0,48,11,6,3,85,29,15,4,4,3,2,5,32,48,19,6,3,
                         
85,29,37,4,12,48,10,6,8,43,6,1,5,5,7,3,1,48,13,6,9,42,
                         
134,72,134,247,13,1,1,5,5,0,3,130,1,1,0,30,153,203,32,
                         
43,26,226,164,59,215,1,229,141,35,10,88,189,68,95,246,
                         
223,182,162,206,213,46,214,177,75,253,187,217,194,206,
                         
31,215,40,174,253,2,76,78,177,121,208,242,11,200,227,
                         
167,123,195,205,28,163,14,10,40,221,162,23,140,126,39,
                         
203,187,21,140,126,56,158,47,72,176,229,51,153,195,55,
                         
41,2,47,236,211,123,178,252,225,164,247,138,243,42,205,
                         
74,68,174,208,122,28,210,207,23,47,235,143,101,79,158,
                         
254,3,108,44,237,10,209,187,131,82,68,230,67,203,196,
                         
216,28,27,205,3,2,140,200,216,112,249,87,108,227,69,220,
                         
243,50,152,250,160,61,245,146,191,191,148,40,150,201,53,
                         
154,119,221,179,94,232,161,80,97,211,31,161,147,3,210,4,
                         
217,145,36,10,253,110,226,8,245,97,227,99,167,18,20,55,
                         
15,38,23,32,73,60,91,4,108,117,199,99,154,112,232,123,
                         
102,253,26,146,190,33,39,191,189,33,202,1,41,44,36,214,
                         
125,205,192,67,33,143,224,20,120,120,162,124,155,43,146,
                         
201,155,98,160,199,53,167,157,4,87,218,210,5,111,102,
                        194,229,19,173,30,87,114>>,
                      {session,undefined,undefined,undefined,undefined,
                          undefined,false,undefined},
                       
217142,ssl_session_cache,undefined,undefined,false,
                      undefined,undefined,
                      {'RSAPrivateKey','two-prime',
                           
23108303400795980946580897607740805964637076898699380796207226519526125534587738491695252811020543441024556194006460906767821548775329768232168126348535701046836297823880142435369663292641876769025238599905446381094783070506873924567016846636672807406641689524958805551783880020565959080266735022473560286521556204861516355220678119047287321058685267163713568264033159664072921927888564457619200600254426883553065038860474015930782999320845123886931905279423910931093743768836935138203525402774305196802643907357698764164346149737799934470864302449992811127514207460970301049940664333139184489189062646293731007966507,
                          65537,
                           
20071717824897557339886134493807244450264211093862432699453688292476382746485298589190110414992209521038846168482197645875738005463107054894428652400787261883991581146899875003943086850689516381231391539124731605716168367313178786883400735382953134284802144989979401041172122162606118996050839848548261582163087653365293290807672326674835257901335368888348022820746913783138357781855960931947807083868427593491763241631650299467134910847641402828400573317722777264407351203132834977775597195884146761297079752399058680875386106138694729040994851112154129305484862612716995779116049982282978617961236399572513695211873,
                           
155564147011531111744542449428558048705480843387887695987762112701917645812591345229711614061998685580028658714091361441355226315417981898604389423176894224970634129268319682821602163084958161002104973032020461023155866344423285444271238717676755030418453297404830066757570266871731826244142282802070198054449,
                           
148545174738001102127757128580268550957984461113306890341568151185873777912703694786266625973102081246296150602009080907036545034906727106203872930931291566422370495085231951851324848355849867682370893342329883843339089049737888250841117182693830848197002454305326013908986596985422453277365687711532043234843,
                           
85811060601093446765597358580524009624362390242390223807217116076216867018188042196000801989033896614181546930331214542417760753905053078664682271652164473914176639259945143257758820173097982489083981263722350526391316725166641623752224710968344158332812077978577166232096719680180314182095421907893857360977,
                           
115899552391060749747482079021368876889170658323814555605623477466751144541071314359841885538071651470895942214064304791192863478873317116264535124437198269030341530672570465934748993634557992188692696647187028402967804133074403433457584052060154517169011756693906349012346012943109872680849246615522216439117,
                           
120404330973009648632995051456199271210062511487765196947914865904545696851042870348806399525675792384776341194670905662882223236326485243094092276576841947094379853384825519718974030983114946877025268437726384149009550737876777399999401663924597468849868432098321761757578135112204559332037284625076740919909,
                          asn1_NOVALUE},
                      undefined,undefined,#Ref<0.0.0.767>,
                      {<0.234.0>,#Ref<0.0.0.773>},
                      0,<<>>,true}
** Reason for termination =
** {{case_clause,{{file,"/home/komak/rabbitmq-ssl-scripts/simple/ 
server/key.pem"},
                    
[{rsa_private_key,<<48,130,4,165,2,1,0,2,130,1,1,0,183,13,
                                        
146,242,20,154,134,161,178,135,188,88,74,
                                        
200,203,154,206,75,148,73,181,170,132,
                                        
162,80,149,96,158,178,155,135,78,201,18,
                                        
87,248,83,86,45,72,160,93,201,238,178,
                                        
140,231,197,155,96,233,76,54,157,93,98,
                                        
232,83,79,156,215,58,165,212,6,74,93,164,
                                        
69,143,215,240,148,220,233,108,55,102,
                                        
185,62,89,229,151,249,232,147,230,65,54,
                                        
196,49,187,159,168,132,140,228,58,244,
                                        
151,49,183,151,33,207,154,250,139,127,96,
                                        
178,195,152,200,65,3,187,27,187,42,247,
                                        
76,175,10,6,252,46,3,14,208,128,201,153,
                                        
146,22,108,216,107,76,117,33,218,75,11,
                                        
20,135,72,133,45,27,113,182,94,33,107,
                                        
253,8,173,123,136,141,204,75,156,254,41,
                                        
33,102,59,109,58,169,72,62,214,190,18,57,
                                        
194,191,54,199,156,49,201,201,188,24,11,
                                        
211,101,13,85,118,194,129,1,152,238,214,
                                        
3,10,74,243,95,88,110,162,28,195,200,197,
                                        
243,63,200,150,245,16,21,149,134,186,65,
                                        
210,105,31,70,29,12,189,223,115,109,242,
                                        
181,241,2,140,177,84,117,239,23,246,54,
                                        
214,27,63,195,190,206,179,80,162,173,43,
                                        
2,3,1,0,1,2,130,1,1,0,158,255,166,92,169,
                                        
114,211,112,78,31,66,132,186,104,145,25,
                                        
165,8,215,3,243,76,234,170,6,46,201,222,
                                        
238,170,211,43,166,209,77,34,0,89,1,58,
                                        
109,57,41,246,48,150,221,150,177,240,202,
                                        
148,13,120,64,174,113,184,51,149,187,9,
                                        
81,18,202,103,251,208,125,47,133,84,142,
                                        
41,24,131,139,215,169,29,180,126,13,180,
                                        
223,196,223,162,83,140,180,218,16,195,18,
                                        
103,66,178,198,211,49,55,19,138,37,198,
                                        
170,203,82,87,206,206,192,189,104,99,114,
                                        
57,147,40,173,231,168,190,159,244,153,
                                        
141,76,61,232,85,49,36,166,7,36,45,175,
                                        
74,17,181,30,119,12,89,45,73,62,73,7,132,
                                        
161,84,80,17,221,18,187,136,108,159,234,
                                        
41,168,180,88,233,182,132,191,232,207,24,
                                        
175,102,76,98,51,109,84,18,108,57,125,
                                        
178,134,32,45,246,10,177,255,249,100,237,
                                        
126,27,20,50,64,207,93,193,152,134,92,72,
                                        
6,204,41,132,58,249,159,64,206,85,107,
                                        
177,173,238,209,156,108,197,127,33,161,
                                        
236,193,66,144,205,110,232,28,148,248,34,
                                        
26,96,107,144,142,28,64,247,60,45,192,90,
                                        
108,160,33,97,2,129,129,0,221,135,219,
                                        
223,251,186,130,95,181,157,17,157,180,24,
                                        
117,72,226,212,115,156,236,236,252,90,20,
                                        
237,195,33,108,211,193,171,28,77,234,163,
                                        
138,204,3,148,40,179,23,162,26,162,206,
                                        
186,82,220,104,163,2,166,181,91,228,122,
                                        
119,14,28,175,104,52,97,74,112,1,1,186,
                                        
242,218,93,32,106,51,216,173,129,216,72,
                                        
145,94,72,1,2,44,68,235,226,106,0,62,240,
                                        
30,68,138,85,132,206,158,5,13,128,60,23,
                                        
201,229,65,25,31,97,242,70,24,105,143,
                                        
241,160,248,158,157,158,98,195,222,110,
                                        
49,2,129,129,0,211,137,12,186,141,67,8,
                                        
71,238,67,0,40,204,211,115,20,218,61,215,
                                        
15,57,146,238,23,166,180,234,45,151,82,
                                        
220,231,243,212,18,167,111,209,232,184,
                                        
247,216,119,216,159,169,243,197,231,92,
                                        
42,100,160,190,164,105,191,173,110,132,
                                        
110,118,119,133,58,57,48,100,231,110,123,
                                        
16,251,135,7,50,235,233,127,197,119,96,0,
                                        
139,228,233,107,37,144,192,184,231,57,
                                        
126,212,236,204,125,84,191,203,218,2,26,
                                        
157,207,36,14,47,185,191,212,212,178,68,
                                        
98,1,199,217,53,224,22,235,90,201,20,110,
                                        
27,2,129,128,122,50,242,23,168,173,38,51,
                                        
147,99,244,14,177,4,120,213,222,193,224,
                                        
144,100,165,9,66,203,158,167,239,173,47,
                                        
85,250,132,95,122,154,1,251,45,210,49,
                                        
109,49,17,43,110,57,104,208,66,98,185,
                                        
224,193,130,243,16,162,121,63,224,148,
                                        
229,127,87,87,143,87,14,212,72,24,42,28,
                                        
178,88,173,34,112,168,148,199,19,97,214,
                                        
164,147,52,229,133,124,129,108,54,90,11,
                                        
230,222,235,166,105,198,81,191,53,230,
                                        
205,104,215,178,250,251,181,127,243,1,
                                        
111,244,146,157,242,40,241,240,123,41,28,
                                        
81,2,129,129,0,165,11,227,144,146,179,96,
                                        
124,175,28,59,189,153,194,201,161,213,
                                        
126,54,148,60,121,181,167,98,124,249,210,
                                        
68,165,116,146,206,30,3,199,252,105,45,
                                        
73,84,167,227,42,115,185,40,232,154,209,
                                        
192,137,239,25,144,50,170,73,105,87,142,
                                        
208,132,4,193,30,233,241,112,217,52,208,
                                        
85,80,79,127,157,173,251,241,88,104,225,
                                        
68,69,129,18,6,167,96,151,100,97,233,225,
                                        
188,56,248,248,237,4,226,190,141,129,223,
                                        
162,228,38,188,169,62,40,14,71,104,168,
                                        
183,3,117,19,185,14,61,49,114,237,77,2,
                                        
129,129,0,171,118,34,41,37,204,142,158,
                                        
139,48,2,92,50,252,254,77,243,18,75,206,
                                        
23,147,103,195,177,152,72,80,137,87,168,
                                        
65,111,21,82,107,171,31,157,156,21,246,4,
                                        
113,134,33,242,4,189,168,60,72,44,145,17,
                                        
233,7,31,81,159,58,166,69,64,233,174,112,
                                        
229,63,254,92,162,202,37,51,75,129,216,
                                        
85,163,207,58,44,218,125,186,64,177,249,
                                        
64,40,92,67,193,106,11,225,138,191,242,
                                        
152,235,61,211,241,156,229,112,233,247,0,
                                        
251,65,102,221,37,233,218,98,195,68,187,
                                       8,97,41,67,146,101>>,
                                     not_encrypted}]}},
     [{ssl_certificate,find_issuer,2},
      {ssl_certificate,certificate_chain,4},
      {ssl_handshake,certificate,3},
      {ssl_connection,certify_server,1},
      {ssl_connection,server_certify_and_key_exchange,1},
      {ssl_connection,do_server_hello,2},
      {lists,foldl,3},
      {ssl_connection,handle_event,3}]}

=ERROR REPORT==== 17-Jun-2010::11:12:23 ===
error on TCP connection <0.234.0>:{ssl_upgrade_failure,
                                    {{{case_clause,
                                       {{file,
                                         "/home/komak/rabbitmq-ssl- 
scripts/simple/server/key.pem"},
                                        [{rsa_private_key,
                                           
<<48,130,4,165,2,1,0,2,130,1,1,0,183,
                                             
13,146,242,20,154,134,161,178,135,
                                             
188,88,74,200,203,154,206,75,148,73,
                                             
181,170,132,162,80,149,96,158,178,
                                             
155,135,78,201,18,87,248,83,86,45,
                                             
72,160,93,201,238,178,140,231,197,
                                             
155,96,233,76,54,157,93,98,232,83,
                                             
79,156,215,58,165,212,6,74,93,164,
                                             
69,143,215,240,148,220,233,108,55,
                                             
102,185,62,89,229,151,249,232,147,
                                             
230,65,54,196,49,187,159,168,132,
                                             
140,228,58,244,151,49,183,151,33,
                                             
207,154,250,139,127,96,178,195,152,
                                             
200,65,3,187,27,187,42,247,76,175,
                                             
10,6,252,46,3,14,208,128,201,153,
                                             
146,22,108,216,107,76,117,33,218,75,
                                             
11,20,135,72,133,45,27,113,182,94,
                                             
33,107,253,8,173,123,136,141,204,75,
                                             
156,254,41,33,102,59,109,58,169,72,
                                             
62,214,190,18,57,194,191,54,199,156,
                                             
49,201,201,188,24,11,211,101,13,85,
                                             
118,194,129,1,152,238,214,3,10,74,
                                             
243,95,88,110,162,28,195,200,197,
                                             
243,63,200,150,245,16,21,149,134,
                                             
186,65,210,105,31,70,29,12,189,223,
                                             
115,109,242,181,241,2,140,177,84,
                                             
117,239,23,246,54,214,27,63,195,190,
                                             
206,179,80,162,173,43,2,3,1,0,1,2,
                                             
130,1,1,0,158,255,166,92,169,114,
                                             
211,112,78,31,66,132,186,104,145,25,
                                             
165,8,215,3,243,76,234,170,6,46,201,
                                             
222,238,170,211,43,166,209,77,34,0,
                                             
89,1,58,109,57,41,246,48,150,221,
                                             
150,177,240,202,148,13,120,64,174,
                                             
113,184,51,149,187,9,81,18,202,103,
                                             
251,208,125,47,133,84,142,41,24,131,
                                             
139,215,169,29,180,126,13,180,223,
                                             
196,223,162,83,140,180,218,16,195,
                                             
18,103,66,178,198,211,49,55,19,138,
                                             
37,198,170,203,82,87,206,206,192,
                                             
189,104,99,114,57,147,40,173,231,
                                             
168,190,159,244,153,141,76,61,232,
                                             
85,49,36,166,7,36,45,175,74,17,181,
                                             
30,119,12,89,45,73,62,73,7,132,161,
                                             
84,80,17,221,18,187,136,108,159,234,
                                             
41,168,180,88,233,182,132,191,232,
                                             
207,24,175,102,76,98,51,109,84,18,
                                             
108,57,125,178,134,32,45,246,10,177,
                                             
255,249,100,237,126,27,20,50,64,207,
                                             
93,193,152,134,92,72,6,204,41,132,
                                             
58,249,159,64,206,85,107,177,173,
                                             
238,209,156,108,197,127,33,161,236,
                                             
193,66,144,205,110,232,28,148,248,
                                             
34,26,96,107,144,142,28,64,247,60,
                                             
45,192,90,108,160,33,97,2,129,129,0,
                                             
221,135,219,223,251,186,130,95,181,
                                             
157,17,157,180,24,117,72,226,212,
                                             
115,156,236,236,252,90,20,237,195,
                                             
33,108,211,193,171,28,77,234,163,
                                             
138,204,3,148,40,179,23,162,26,162,
                                             
206,186,82,220,104,163,2,166,181,91,
                                             
228,122,119,14,28,175,104,52,97,74,
                                             
112,1,1,186,242,218,93,32,106,51,
                                             
216,173,129,216,72,145,94,72,1,2,44,
                                             
68,235,226,106,0,62,240,30,68,138,
                                             
85,132,206,158,5,13,128,60,23,201,
                                             
229,65,25,31,97,242,70,24,105,143,
                                             
241,160,248,158,157,158,98,195,222,
                                             
110,49,2,129,129,0,211,137,12,186,
                                             
141,67,8,71,238,67,0,40,204,211,115,
                                             
20,218,61,215,15,57,146,238,23,166,
                                             
180,234,45,151,82,220,231,243,212,
                                             
18,167,111,209,232,184,247,216,119,
                                             
216,159,169,243,197,231,92,42,100,
                                             
160,190,164,105,191,173,110,132,110,
                                             
118,119,133,58,57,48,100,231,110,
                                             
123,16,251,135,7,50,235,233,127,197,
                                             
119,96,0,139,228,233,107,37,144,192,
                                             
184,231,57,126,212,236,204,125,84,
                                             
191,203,218,2,26,157,207,36,14,47,
                                             
185,191,212,212,178,68,98,1,199,217,
                                             
53,224,22,235,90,201,20,110,27,2,
                                             
129,128,122,50,242,23,168,173,38,51,
                                             
147,99,244,14,177,4,120,213,222,193,
                                             
224,144,100,165,9,66,203,158,167,
                                             
239,173,47,85,250,132,95,122,154,1,
                                             
251,45,210,49,109,49,17,43,110,57,
                                             
104,208,66,98,185,224,193,130,243,
                                             
16,162,121,63,224,148,229,127,87,87,
                                             
143,87,14,212,72,24,42,28,178,88,
                                             
173,34,112,168,148,199,19,97,214,
                                             
164,147,52,229,133,124,129,108,54,
                                             
90,11,230,222,235,166,105,198,81,
                                             
191,53,230,205,104,215,178,250,251,
                                             
181,127,243,1,111,244,146,157,242,
                                             
40,241,240,123,41,28,81,2,129,129,0,
                                             
165,11,227,144,146,179,96,124,175,
                                             
28,59,189,153,194,201,161,213,126,
                                             
54,148,60,121,181,167,98,124,249,
                                             
210,68,165,116,146,206,30,3,199,252,
                                             
105,45,73,84,167,227,42,115,185,40,
                                             
232,154,209,192,137,239,25,144,50,
                                             
170,73,105,87,142,208,132,4,193,30,
                                             
233,241,112,217,52,208,85,80,79,127,
                                             
157,173,251,241,88,104,225,68,69,
                                             
129,18,6,167,96,151,100,97,233,225,
                                             
188,56,248,248,237,4,226,190,141,
                                             
129,223,162,228,38,188,169,62,40,14,
                                             
71,104,168,183,3,117,19,185,14,61,
                                             
49,114,237,77,2,129,129,0,171,118,
                                             
34,41,37,204,142,158,139,48,2,92,50,
                                             
252,254,77,243,18,75,206,23,147,103,
                                             
195,177,152,72,80,137,87,168,65,111,
                                             
21,82,107,171,31,157,156,21,246,4,
                                             
113,134,33,242,4,189,168,60,72,44,
                                             
145,17,233,7,31,81,159,58,166,69,64,
                                             
233,174,112,229,63,254,92,162,202,
                                             
37,51,75,129,216,85,163,207,58,44,
                                             
218,125,186,64,177,249,64,40,92,67,
                                             
193,106,11,225,138,191,242,152,235,
                                             
61,211,241,156,229,112,233,247,0,
                                             
251,65,102,221,37,233,218,98,195,68,
                                            187,8,97,41,67,146,101>>,
                                          not_encrypted}]}},
                                      [{ssl_certificate,find_issuer,2},
                                        
{ssl_certificate,certificate_chain,4},
                                       {ssl_handshake,certificate,3},
                                       {ssl_connection,certify_server, 
1},
                                       {ssl_connection,
                                         
server_certify_and_key_exchange,1},
                                       {ssl_connection,do_server_hello, 
2},
                                       {lists,foldl,3},
                                       {ssl_connection,handle_event, 
3}]},
                                     {gen_fsm,sync_send_all_state_event,
                                      [<0.235.0>,started,5000]}}}

=INFO REPORT==== 17-Jun-2010::11:12:23 ===
closing TCP connection <0.234.0>


We do not have the skills to interpret the error at the Erlang/SSL  
level, and so we are not able to find out what s wrong with that !


We would realy enjoy if someone can tell what the problem is.

Best regards.


From matthew at rabbitmq.com  Thu Jun 17 10:54:23 2010
From: matthew at rabbitmq.com (Matthew Sackman)
Date: Thu, 17 Jun 2010 10:54:23 +0100
Subject: [rabbitmq-discuss] RabbitMQ 1.8.0 release
In-Reply-To: <20100616151011.GC27240@rabbitmq.com>
References: <20100616151011.GC27240@rabbitmq.com>
Message-ID: <20100617095422.GA17204@rabbitmq.com>

On Wed, Jun 16, 2010 at 04:10:12PM +0100, Matthew Sackman wrote:
> Finally, due to an issue we're currently seeing with the nexus/sonatype
> maven repository, the 1.8.0 release is not yet available in maven. We
> will rectify this as soon as we can.

Please note this has now been fixed. The Java client for RabbitMQ v1.8.0
is now available in maven central.

Matthew

From matthew at rabbitmq.com  Thu Jun 17 11:12:51 2010
From: matthew at rabbitmq.com (Matthew Sackman)
Date: Thu, 17 Jun 2010 11:12:51 +0100
Subject: [rabbitmq-discuss] Strange behavior with SSL configuration
In-Reply-To: <9C264785-21FE-459D-A647-3B2542D702DB@gmail.com>
References: <9C264785-21FE-459D-A647-3B2542D702DB@gmail.com>
Message-ID: <20100617101251.GB17204@rabbitmq.com>

Hi,

On Thu, Jun 17, 2010 at 11:51:16AM +0200, romary.kremer at gmail.com wrote:
> One month ago, we start experimenting the SSL features as described
> in the rabbitMQ SSL web page.
> 
> 	- We had set up a broker (1.7.2) on an Ubuntu with latest Erlang
> distribution R13B04 (built from sources)
> 	
> 	- We wrote down a simple Java client exemple that both presents a
> certificate and verify the broker certificate, based on the second
> Java example of the documentation.
> 
> 	- On the broker side, we have experimented both
> fail_if_no_peer_cert  with value true and false.
> 
> Everything seemed to work perfectly at this time, and we stated that
> SSL support was good enough and we paused our work on that part
> right after that.
> 
> The most disturbing thing is that it sometimes manage to !!!!
> amongst 20 executions,  we have observed 2 successful executions.

Yes, that's about right. To quote from the SSL page at
http://www.rabbitmq.com/ssl.html

"Note there are major bugs SSL in Erlang release R13B04 which renders
using SSL with cerificates broken. As of this writing, if you're wishing
to use SSL with certificates with RabbitMQ, we recommend R13B03 as the
least buggy implementation of SSL in Erlang"

I reported several bugs about the SSL module to the Erlang developers
and there should be fixes in the R14A which got released today. However,
that is an alpha release so you may not wish to use it - I've not had a
chance to investigate it yet.

I had the most success with R13B03 wrt SSL.

Matthew

From matthias at rabbitmq.com  Thu Jun 17 11:48:53 2010
From: matthias at rabbitmq.com (Matthias Radestock)
Date: Thu, 17 Jun 2010 11:48:53 +0100
Subject: [rabbitmq-discuss] resources for designing messaging systems
In-Reply-To: <8b952eea-c55b-4a24-a035-f899a7cf9b0f@5g2000yqz.googlegroups.com>
References: <205cdab3-6363-4097-9b16-5921216001fc@d8g2000yqf.googlegroups.com>	<AANLkTilDiDzSpR-RhKOR0u2mv9Ecit1nia3IQZzYpqoY@mail.gmail.com>
	<8b952eea-c55b-4a24-a035-f899a7cf9b0f@5g2000yqz.googlegroups.com>
Message-ID: <4C19FD95.9020006@rabbitmq.com>

Shane,

On 10/06/10 15:41, Shane wrote:
> I guess what I'm looking for are code examples for complete apps so I
> can get a better idea of the best way to apply exchanges/queues.
>
> I'm working to port a legacy system of batches to use RabbitMQ. The
> batches run in a continuous loop and use a database as a state machine
> to determine what jobs to run and which data to use. There are
> dependencies between some of the batches (one cannot run until one or
> more others complete).

Have you looked at celery (http://celeryproject.org/)? Not only is it an 
example of a complete rabbit app, it also is in a domain similar to what 
you are trying to accomplish.


Regards,

Matthias.

From matthew at rabbitmq.com  Thu Jun 17 12:00:41 2010
From: matthew at rabbitmq.com (Matthew Sackman)
Date: Thu, 17 Jun 2010 12:00:41 +0100
Subject: [rabbitmq-discuss] Strange behavior with SSL configuration
In-Reply-To: <9A275073-64CF-4E87-B7C7-4C7FD26B2FD9@gmail.com>
References: <9C264785-21FE-459D-A647-3B2542D702DB@gmail.com>
	<20100617101251.GB17204@rabbitmq.com>
	<9A275073-64CF-4E87-B7C7-4C7FD26B2FD9@gmail.com>
Message-ID: <20100617110040.GC17204@rabbitmq.com>

Hi Romary,

Please try to keep the mailing list CC'd.

On Thu, Jun 17, 2010 at 12:45:34PM +0200, romary.kremer at gmail.com wrote:
> It still sounds strange to me that the same application behaved
> perfectly good one month ago !

Yeah, it's a racy behaviour within the Erlang ssl module.

> Furthermore, do you have any idea about what has gone bad, with
> regard to the error log at the broker side ?

Yes. It's a programming error in the Erlang ssl module. I traced it
through and my full report is at
http://www.erlang.org/cgi-bin/ezmlm-cgi/2/1791

Tbh, SSL is a horrendous protocol and really needs to die. Almost no one
implements it correctly, largely because it's so ambiguous in many
areas. Also, people make very different decisions about what to
implement. For example, an SSL certificate has a "usage" field. Firefox
chooses to ignore this, so a website can happily use an SSL certificate
which is not meant to be used on a server, whereas Google Chrome rejects
such certificates. Mono makes all sorts of other requirements about SSL
certificates to be used, and I've also come across many bugs in
Dovecot's use of SSL. A lot of the time, this seems to be due to the
extreme lack of documentation of the OpenSSL libraries, and the fact
that they tend to change a lot, even between minor versions. It wouldn't
surprise me to find there are bugs in all applications that support SSL.

In short, SSL is very hard to get right, people choose to interpret it
very differently, and the situation isn't eased by the way the OpenSSL
folks go about development and documentation.

Matthew

From matthew at rabbitmq.com  Thu Jun 17 12:11:44 2010
From: matthew at rabbitmq.com (Matthew Sackman)
Date: Thu, 17 Jun 2010 12:11:44 +0100
Subject: [rabbitmq-discuss] Rabbitmq Crash
In-Reply-To: <1276767269.2386.11.camel@waqas-desktop>
References: <1276767269.2386.11.camel@waqas-desktop>
Message-ID: <20100617111143.GE17204@rabbitmq.com>

Hi Waqas,

On Thu, Jun 17, 2010 at 02:34:29PM +0500, Waqas Badar wrote:
> We are using rabbitmq. When queues exceed 200000 messages then most of
> the time rabbitmq crashes. Even rabbitmq denies to start untill we
> delete the mnesia files. Its crash dump is attached with this mail. Has
> any one also faced this issue? That is very regularly for us. Any help?

More useful to us is the rabbit logs and the rabbit-sasl logs. I suspect
you've run out of memory. This is a well known issue with the current
version of RabbitMQ and is caused by the fact that Rabbit always keeps
all messages in RAM.

This is being solved by the "new persister" which is frequently
mentioned on list. The "new persister" is currently towards the end of
its path through QA and is widely used by the community. It is however
still unreleased, and you have to compile from source. The new persister
allows Rabbit to push messages to disk and release them from RAM when it
starts to run out of RAM, thus solving the problem I suspect you're
suffering from.

Matthew

From matthew at rabbitmq.com  Thu Jun 17 12:15:42 2010
From: matthew at rabbitmq.com (Matthew Sackman)
Date: Thu, 17 Jun 2010 12:15:42 +0100
Subject: [rabbitmq-discuss] Rabbitmq Crash
In-Reply-To: <20100617111143.GE17204@rabbitmq.com>
References: <1276767269.2386.11.camel@waqas-desktop>
	<20100617111143.GE17204@rabbitmq.com>
Message-ID: <20100617111541.GG17204@rabbitmq.com>

On Thu, Jun 17, 2010 at 12:11:44PM +0100, Matthew Sackman wrote:
> On Thu, Jun 17, 2010 at 02:34:29PM +0500, Waqas Badar wrote:
> > We are using rabbitmq. When queues exceed 200000 messages then most of
> > the time rabbitmq crashes. Even rabbitmq denies to start untill we
> > delete the mnesia files. Its crash dump is attached with this mail. Has
> > any one also faced this issue? That is very regularly for us. Any help?
> 
> More useful to us is the rabbit logs and the rabbit-sasl logs. I suspect
> you've run out of memory. This is a well known issue with the current
> version of RabbitMQ and is caused by the fact that Rabbit always keeps
> all messages in RAM.

Also, which version of RabbitMQ are you using, and what clients are you
using? The last couple of releases of RabbitMQ have used "channel.flow"
to stop publishers from publishing messages when the broker starts to
run out of memory. However, some clients (some of the python ones) don't
support this and still continue to publish messages. The current release
(1.8.0 - released yesterday) takes a much sterner line with such clients
and closes their channels if they do not respond to channel.flow
messages in a timely manner.

Matthew

From majek04 at gmail.com  Thu Jun 17 12:20:58 2010
From: majek04 at gmail.com (Marek Majkowski)
Date: Thu, 17 Jun 2010 12:20:58 +0100
Subject: [rabbitmq-discuss]  Config File
In-Reply-To: <AANLkTik8trnzyaQ2w8dSFPI1I903RaMOyVL437NsZ7lG@mail.gmail.com>
References: <AANLkTinFAnX3dd0VDfCI6_vKiMdorczBn4pfblwfNLMx@mail.gmail.com>
	<AANLkTik8trnzyaQ2w8dSFPI1I903RaMOyVL437NsZ7lG@mail.gmail.com>
Message-ID: <AANLkTinwneFxQ4h5hYUyZI2HtvA6Q04zr8H0VPWxnJaQ@mail.gmail.com>

On Wed, Jun 16, 2010 at 22:18, Roaan Vos <listuser at codeshrink.com> wrote:
> Can someone please send me an example of a config file that I can use to
> specify (customise) the location of where the log files should go?

Roaan,

there are two configuration files, on my ubuntu ?machine one lives in:
? ?/etc/rabbitmq/rabbitmq.config
Docs:
? ?http://www.rabbitmq.com/install.html#configfile
It contains erlang settings. That's the config I use:
[
? ? ? ? ? ? ? ?{kernel,
? ? ? ? ? ? ? ? ? ? ? ?[{inet_dist_listen_min, 45001},
? ? ? ? ? ? ? ? ? ? ? ? {inet_dist_listen_max, 45001},
? ? ? ? ? ? ? ? ? ? ? ? {inet_default_listen_options, [{nodelay,true}]},
? ? ? ? ? ? ? ? ? ? ? ? {inet_default_connect_options, [{nodelay,true}]}
? ? ? ? ? ? ? ? ? ? ? ?]
? ? ? ? ? ? ? ?},
? ? ? ? ? ? ? ?{rabbit,
? ? ? ? ? ? ? ? ? ? ? ?[{vm_memory_high_watermark, 0.1}]
? ? ? ? ? ? ? ?},
? ? ? ? ? ? ? ?{rabbit_mochiweb,
? ? ? ? ? ? ? ? ? ? ? ?[{port, 30001}]
? ? ? ? ? ? ? ?}
].


The other config has a pretty confusing name and lives in
? /etc/rabbitmq/rabbitmq.conf
Docs:
? ?http://www.rabbitmq.com/rabbitmq.conf.5.man.html

It's responsible for setting env variables for the server
Available env variables are listed here, please don't use the
"RABBITMQ_" in that file.
? ?http://www.rabbitmq.com/install.html#generic-unix

For example, this config may look like:
MNESIA_BASE="/tmp/mnesia"
LOG_BASE="/tmp/logs"
NODENAME="myrabbit"


Cheers,
?Marek Majkowski

From tjgillies at gmail.com  Thu Jun 17 12:40:36 2010
From: tjgillies at gmail.com (tyler gillies)
Date: Thu, 17 Jun 2010 04:40:36 -0700
Subject: [rabbitmq-discuss] Rabbitmq Crash
In-Reply-To: <20100617111541.GG17204@rabbitmq.com>
References: <1276767269.2386.11.camel@waqas-desktop>
	<20100617111143.GE17204@rabbitmq.com>
	<20100617111541.GG17204@rabbitmq.com>
Message-ID: <AANLkTik0pl6eiiaF94QPh3lz27EPnbLCeIO6j8j-qQjI@mail.gmail.com>

like

On Thu, Jun 17, 2010 at 4:15 AM, Matthew Sackman <matthew at rabbitmq.com>wrote:

> On Thu, Jun 17, 2010 at 12:11:44PM +0100, Matthew Sackman wrote:
> > On Thu, Jun 17, 2010 at 02:34:29PM +0500, Waqas Badar wrote:
> > > We are using rabbitmq. When queues exceed 200000 messages then most of
> > > the time rabbitmq crashes. Even rabbitmq denies to start untill we
> > > delete the mnesia files. Its crash dump is attached with this mail. Has
> > > any one also faced this issue? That is very regularly for us. Any help?
> >
> > More useful to us is the rabbit logs and the rabbit-sasl logs. I suspect
> > you've run out of memory. This is a well known issue with the current
> > version of RabbitMQ and is caused by the fact that Rabbit always keeps
> > all messages in RAM.
>
> Also, which version of RabbitMQ are you using, and what clients are you
> using? The last couple of releases of RabbitMQ have used "channel.flow"
> to stop publishers from publishing messages when the broker starts to
> run out of memory. However, some clients (some of the python ones) don't
> support this and still continue to publish messages. The current release
> (1.8.0 - released yesterday) takes a much sterner line with such clients
> and closes their channels if they do not respond to channel.flow
> messages in a timely manner.
>
> Matthew
> _______________________________________________
> rabbitmq-discuss mailing list
> rabbitmq-discuss at lists.rabbitmq.com
> http://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss
>



-- 
http://tyler.nostat.us/
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20100617/343a50df/attachment.htm>

From matthew at rabbitmq.com  Thu Jun 17 12:41:38 2010
From: matthew at rabbitmq.com (Matthew Sackman)
Date: Thu, 17 Jun 2010 12:41:38 +0100
Subject: [rabbitmq-discuss] Highly Dynamic Bindings?
In-Reply-To: <4F273699-9CEC-4E98-A73F-106370E094D8@gmail.com>
References: <4F273699-9CEC-4E98-A73F-106370E094D8@gmail.com>
Message-ID: <20100617114138.GH17204@rabbitmq.com>

Hi Michael,

On Wed, Jun 16, 2010 at 01:39:09AM -0400, Michael Artz wrote:
> We're trying to push some of our application's routing logic into RabbitMQ/AMQP but had a couple of questions before we get too far along.  We currently have a 4-node Rabbit cluster using only a single disk node.  The nodes are underpowered (and under-RAMed), but the message volume is currently only ~10 messages/sec (1K messages), although expected to grow.  We're planning on implementing a chat-like system that would perform a lot of binding operations on a limited number of queues and were wondering:
> 
>  - Are there any issues having a large (30K+) number of non-wildcarded bindings for a single queue?

Yup. Are these bindings all to a single exchange or to lots of
exchanges. What's the average number of bindings per exchange? If you're
using topic exchanges then the matching of bindings is not as efficient
as it could be, even for bindings without wildcards. Using direct
exchanges are more efficient.

>  - Are there any issues with a large amount of binding "churn" (~10 binding adds/drops per second per queue)

Yup.

Both of these will cause significant pain for Rabbit as soon as you get
to a decent number of queues. It's certainly worth doing some testing
for your expected use cases, but I would expect this to not scale very
well. All binding create/delete operations will result in traffic
between every node in the cluster.

What kind of chat are you trying to do - just p2p or with chat rooms
etc? Are you doing presence notification etc too?

Matthew

From majek04 at gmail.com  Thu Jun 17 12:47:32 2010
From: majek04 at gmail.com (Marek Majkowski)
Date: Thu, 17 Jun 2010 12:47:32 +0100
Subject: [rabbitmq-discuss] RabbitMQ+STOMP: how to trigger events upon
	connect/subscribe to stomp destinations?
In-Reply-To: <4C14CB8C.8020008@gmx.net>
References: <4C14CB8C.8020008@gmx.net>
Message-ID: <AANLkTin7JaASsj7R3RQrGbdJ-xaFFEy1dJfIAKLhjyEz@mail.gmail.com>

Willi,

On Sun, Jun 13, 2010 at 13:14, Willi Richert <w.richert at gmx.net> wrote:
> I am using RabbitMQ+STOMP as a MorbidQ replacement in the Orbited orbit.
> With MorbidQ I had the possibility to use a custom RestQ listener
> (http://www.morbidq.com/trac/wiki/RestQ ) for doing auth and other stuff. As
> auth is perfectly handled by RabbitMQ I am looking now for ways to handle
> the "other stuff":

Just out of interest, can I ask is there any particular reason why
RabbitMQ+STOMP
might be better for you than MorbidQ?

> When a user surfs on some web page, it connects to Orbited via stomp and
> subscribes to a secret destination where it listens for updates. At the
> point when the browser subscribes, my RestQ listener signaled all the other
> browsers visiting the same page that a new user arrived (via STOMP messges).

What I understand:

[browser] ---(http)---> [RestQ--->MorbidQ] ---(stomp)---> [orbited]
---(http)---> [browsers]

> What is the preferred way for this in RabbitMQ. Is there some similar
> restful service?

We do have an attempt to create some sort of restful interface for rabbitmq
   http://hg.rabbitmq.com/rabbitmq-jsonrpc-channel/
but it's experimental and _not_ supported.

On the other hand I can't see a reason why you just won't publish a
stomp message
from your normal web server. Something like:

[browser] ---(http)---> [your-web-server] ---(stomp)---> [orbited]
---(http)---> [browsers]


Cheers!
   Marek Majkowski

From matthew at rabbitmq.com  Thu Jun 17 12:51:40 2010
From: matthew at rabbitmq.com (Matthew Sackman)
Date: Thu, 17 Jun 2010 12:51:40 +0100
Subject: [rabbitmq-discuss] running rabbitmq-server as a subprocess
In-Reply-To: <A92DB691-C855-490C-BA03-3660DB5A6798@borogove.org>
References: <A92DB691-C855-490C-BA03-3660DB5A6798@borogove.org>
Message-ID: <20100617115140.GI17204@rabbitmq.com>

Hi Russell,

On Wed, Jun 16, 2010 at 05:16:59PM -0700, Russell Borogove wrote:
> Is rabbitmq-server in fact suspending its parent process? Is there a way to stop it from doing so? Is there a better way to launch rabbitmq from a script?

Hmm, that's interesting. The shell scripts that you call to start Rabbit
will create new processes as necessary, and there will be a few. We're
doing nothing fancy to the parent process at all - the shell scripts
will exit and there should be a beam process running. This isn't
something we've come across so I'm afraid I've nothing concrete to
suggest. You could try starting rabbit directly with the rabbitmq-multi
script (which is really all the init.d script calls), but I'm not sure
whether that'll behave any differently - I certainly see no reason why
it should.

Matthew

From matthew at rabbitmq.com  Thu Jun 17 13:27:58 2010
From: matthew at rabbitmq.com (Matthew Sackman)
Date: Thu, 17 Jun 2010 13:27:58 +0100
Subject: [rabbitmq-discuss] Rabbitmq Crash
In-Reply-To: <1276776804.2386.27.camel@waqas-desktop>
References: <1276767269.2386.11.camel@waqas-desktop>
	<20100617111143.GE17204@rabbitmq.com>
	<20100617111541.GG17204@rabbitmq.com>
	<1276776804.2386.27.camel@waqas-desktop>
Message-ID: <20100617122757.GJ17204@rabbitmq.com>

Hi Waqas,

Please try and keep the mailing list CC'd.

On Thu, Jun 17, 2010 at 05:13:23PM +0500, Waqas Badar wrote:
> We are using RabbitMQ 1.7.1 and we are
> using Java client 1.7.1 and for python pyamqp 0.6.1 and txamqp 0.3.

Ok. 1.7.1 was less capable about dealing with situations in which it was
running out of memory. I'd recommend upgrading to 1.8.0, though be aware
that none of your queues, exchanges, bindings or messages will be
retained when you upgrade.

> Please note that most of the time it crashes after 200000 messages.
> Following crash reports are found in rabbit-sasl.log file.
> 
> =CRASH REPORT==== 15-Jun-2010::22:41:10 ===
>   crasher:
>     pid: <0.155.0>
>     registered_name: rabbit_persister
>     exception exit: {{badmatch,eof},
>                      [{rabbit_persister,internal_load_snapshot,2},
>                       {rabbit_persister,init,1},
>                       {gen_server,init_it,6},
>                       {proc_lib,init_p_do_apply,3}]}
>       in function  gen_server:init_it/6
>     initial call: rabbit_persister:init/1
>     ancestors: [rabbit_sup,<0.109.0>]
>     messages: []
>     links: [<0.112.0>,<support at rabbitmq.com 0.156.0>]
>     dictionary: []
>     trap_exit: true
>     status: running
>     heap_size: 987
>     stack_size: 23
>     reductions: 431
>   neighbours:

Err, this looks like it crashing when it's starting up, not it crashing
when it's just run out of memory. The eof is interesting though. This
could just be an old bug where you needed to move the old persister log
out of the way:

In /var/lib/rabbitmq/mnesia/$NODENAME/ you should find a
rabbit_persister.LOG and a rabbit_persister.LOG.previous file. It's
likely the .previous version is much bigger than the non .previous
version. You could try moving the rabbit_persister.LOG out of the way,
and then renaming rabbit_persister.LOG.previous to rabbit_persister.LOG
and see if it starts up.

Again, I *think* this was a bug that was reported quite often with 1.7.1
and older and something that we've subsequently fixed, so again, you
might have better luck after upgrading Rabbit to 1.8.0.

I am still curious to see the logs of rabbit as it crashes on you if you
can find/produce those. What platform are you running on, and how much
RAM is available in the machine?

Matthew

From w.richert at gmx.net  Thu Jun 17 13:39:45 2010
From: w.richert at gmx.net (Willi Richert)
Date: Thu, 17 Jun 2010 14:39:45 +0200
Subject: [rabbitmq-discuss] RabbitMQ+STOMP: how to trigger events upon
	connect/subscribe to stomp destinations?
In-Reply-To: <AANLkTin7JaASsj7R3RQrGbdJ-xaFFEy1dJfIAKLhjyEz@mail.gmail.com>
References: <4C14CB8C.8020008@gmx.net>
	<AANLkTin7JaASsj7R3RQrGbdJ-xaFFEy1dJfIAKLhjyEz@mail.gmail.com>
Message-ID: <201006171439.45458.w.richert@gmx.net>

Am Donnerstag, 17. Juni 2010 13:47:32 schrieb Marek Majkowski:
> Just out of interest, can I ask is there any particular reason why
> RabbitMQ+STOMP
> might be better for you than MorbidQ?

MorbidQ works well for very small installations. Its web page says that for 
production you would rather want to rely on e.g. rabbitmq.  
http://www.morbidq.com 

It indeed seems that I will switch back to MorbidQ if this point is not easily 
solvable (and returning back if I have more in-depth knowledge of rabbitmq and 
its plugin system).

> 
> > When a user surfs on some web page, it connects to Orbited via stomp and
> > subscribes to a secret destination where it listens for updates. At the
> > point when the browser subscribes, my RestQ listener signaled all the
> > other browsers visiting the same page that a new user arrived (via STOMP
> > messges).
> 
> What I understand:
> 
> [browser] ---(http)---> [RestQ--->MorbidQ] ---(stomp)---> [orbited]
> ---(http)---> [browsers]
> 
> > What is the preferred way for this in RabbitMQ. Is there some similar
> > restful service?
> 
> We do have an attempt to create some sort of restful interface for rabbitmq
>    http://hg.rabbitmq.com/rabbitmq-jsonrpc-channel/
> but it's experimental and _not_ supported.
> 
> On the other hand I can't see a reason why you just won't publish a
> stomp message
> from your normal web server. Something like:
> 
> [browser] ---(http)---> [your-web-server] ---(stomp)---> [orbited]
> ---(http)---> [browsers]

The point is that if a user closes its browser, the javascript on that page 
(if the user is visiting my site) has no change to signal any away messages 
(like STOMP's unsubscribe). The only sure way to handle that is within the 
broker.


Regards,
wr

From waqas.badar at panasiangroup.com  Thu Jun 17 13:54:23 2010
From: waqas.badar at panasiangroup.com (Waqas Badar)
Date: Thu, 17 Jun 2010 17:54:23 +0500
Subject: [rabbitmq-discuss] Rabbitmq Crash
In-Reply-To: <20100617122757.GJ17204@rabbitmq.com>
References: <1276767269.2386.11.camel@waqas-desktop>
	<20100617111143.GE17204@rabbitmq.com>
	<20100617111541.GG17204@rabbitmq.com>
	<1276776804.2386.27.camel@waqas-desktop>
	<20100617122757.GJ17204@rabbitmq.com>
Message-ID: <1276779263.2386.49.camel@waqas-desktop>

Our server has 32GB ram. And most of the time 25GB is free. Please note
that it is occurring on production system. We try to reproduce it on
different machines but unable to do so. Ubuntu Server 9.04 is installed
on server. Please note that if we delete mnesia files then we are able
to start rabbitmq server. We suspect that mnesia files get corrupted due
to which rabbitmq server does not start. Can you please guide us on
exactly what log files do you need us to provide you?

On Thu, 2010-06-17 at 13:27 +0100, Matthew Sackman wrote:

> Hi Waqas,
> 
> Please try and keep the mailing list CC'd.
> 
> On Thu, Jun 17, 2010 at 05:13:23PM +0500, Waqas Badar wrote:
> > We are using RabbitMQ 1.7.1 and we are
> > using Java client 1.7.1 and for python pyamqp 0.6.1 and txamqp 0.3.
> 
> Ok. 1.7.1 was less capable about dealing with situations in which it was
> running out of memory. I'd recommend upgrading to 1.8.0, though be aware
> that none of your queues, exchanges, bindings or messages will be
> retained when you upgrade.
> 
> > Please note that most of the time it crashes after 200000 messages.
> > Following crash reports are found in rabbit-sasl.log file.
> > 
> > =CRASH REPORT==== 15-Jun-2010::22:41:10 ===
> >   crasher:
> >     pid: <0.155.0>
> >     registered_name: rabbit_persister
> >     exception exit: {{badmatch,eof},
> >                      [{rabbit_persister,internal_load_snapshot,2},
> >                       {rabbit_persister,init,1},
> >                       {gen_server,init_it,6},
> >                       {proc_lib,init_p_do_apply,3}]}
> >       in function  gen_server:init_it/6
> >     initial call: rabbit_persister:init/1
> >     ancestors: [rabbit_sup,<0.109.0>]
> >     messages: []
> >     links: [<0.112.0>,<support at rabbitmq.com 0.156.0>]
> >     dictionary: []
> >     trap_exit: true
> >     status: running
> >     heap_size: 987
> >     stack_size: 23
> >     reductions: 431
> >   neighbours:
> 
> Err, this looks like it crashing when it's starting up, not it crashing
> when it's just run out of memory. The eof is interesting though. This
> could just be an old bug where you needed to move the old persister log
> out of the way:
> 
> In /var/lib/rabbitmq/mnesia/$NODENAME/ you should find a
> rabbit_persister.LOG and a rabbit_persister.LOG.previous file. It's
> likely the .previous version is much bigger than the non .previous
> version. You could try moving the rabbit_persister.LOG out of the way,
> and then renaming rabbit_persister.LOG.previous to rabbit_persister.LOG
> and see if it starts up.
> 
> Again, I *think* this was a bug that was reported quite often with 1.7.1
> and older and something that we've subsequently fixed, so again, you
> might have better luck after upgrading Rabbit to 1.8.0.
> 
> I am still curious to see the logs of rabbit as it crashes on you if you
> can find/produce those. What platform are you running on, and how much
> RAM is available in the machine?
> 
> Matthew
> 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20100617/32ca0c66/attachment.htm>

From matthew at rabbitmq.com  Thu Jun 17 14:41:37 2010
From: matthew at rabbitmq.com (Matthew Sackman)
Date: Thu, 17 Jun 2010 14:41:37 +0100
Subject: [rabbitmq-discuss] Rabbitmq Crash
In-Reply-To: <1276779263.2386.49.camel@waqas-desktop>
References: <1276767269.2386.11.camel@waqas-desktop>
	<20100617111143.GE17204@rabbitmq.com>
	<20100617111541.GG17204@rabbitmq.com>
	<1276776804.2386.27.camel@waqas-desktop>
	<20100617122757.GJ17204@rabbitmq.com>
	<1276779263.2386.49.camel@waqas-desktop>
Message-ID: <20100617134136.GK17204@rabbitmq.com>

Hi Waqas,

On Thu, Jun 17, 2010 at 05:54:23PM +0500, Waqas Badar wrote:
> Our server has 32GB ram. And most of the time 25GB is free. Please note
> that it is occurring on production system. We try to reproduce it on
> different machines but unable to do so. Ubuntu Server 9.04 is installed
> on server. Please note that if we delete mnesia files then we are able
> to start rabbitmq server. We suspect that mnesia files get corrupted due
> to which rabbitmq server does not start. Can you please guide us on
> exactly what log files do you need us to provide you?

Wow, that's a lot of RAM. I assume it's a 64-bit installation and you're
running a 64-bit erlang? You say it crashes sometime after 200k msgs,
but what are the message sizes?

Basically, it looked to me like that log file was documenting Rabbit
failing to start up. I'm also interested in the log entries when it
crashes. So, the next time you get it to crash because it's been sent
200k+ msgs, before restarting it, if you could take a copy of the
rabbit.log and the rabbit-sasl.log, I'd be interested in seeing them.

Matthew

From majek04 at gmail.com  Thu Jun 17 14:53:56 2010
From: majek04 at gmail.com (Marek Majkowski)
Date: Thu, 17 Jun 2010 14:53:56 +0100
Subject: [rabbitmq-discuss] RabbitMQ+STOMP: how to trigger events upon
	connect/subscribe to stomp destinations?
In-Reply-To: <201006171439.45458.w.richert@gmx.net>
References: <4C14CB8C.8020008@gmx.net>
	<AANLkTin7JaASsj7R3RQrGbdJ-xaFFEy1dJfIAKLhjyEz@mail.gmail.com>
	<201006171439.45458.w.richert@gmx.net>
Message-ID: <AANLkTim5dyr3JRp7p6DNQslOiFi5xuagWtB3U0BQByc0@mail.gmail.com>

On Thu, Jun 17, 2010 at 13:39, Willi Richert <w.richert at gmx.net> wrote:
> Am Donnerstag, 17. Juni 2010 13:47:32 schrieb Marek Majkowski:
>> Just out of interest, can I ask is there any particular reason why
>> RabbitMQ+STOMP
>> might be better for you than MorbidQ?
>
> MorbidQ works well for very small installations. Its web page says that for
> production you would rather want to rely on e.g. rabbitmq.
> http://www.morbidq.com

Thanks.

> The point is that if a user closes its browser, the javascript on that page
> (if the user is visiting my site) has no change to signal any away messages
> (like STOMP's unsubscribe). The only sure way to handle that is within the
> broker.

Ok. Now I get it. We call it "presence". Like always, Tony did some experiments:
  http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/2010-May/007254.html
but again, it's experimental, not supported, blah, blah blah.

I had similar issue in the past, but I assumed that I don't want the
"unsubscribe"
message to be send when user does F5/page reload. What I wanted was
to send the "unsubscribe" notification when user disappears for more
than 5 seconds.

Implementing that isn't trivial. I'd probably go for hacking orbited
or bridging stomp
with your web app via some asynchronous server, like node.js or tornadoweb.

We don't have a consistent story for this problem, but we'd like to have!
If you find any better solution or have any thoughts on Tony's presence plugin,
please let us know.

Marek

From w.richert at gmx.net  Thu Jun 17 14:56:55 2010
From: w.richert at gmx.net (Willi Richert)
Date: Thu, 17 Jun 2010 15:56:55 +0200
Subject: [rabbitmq-discuss] RabbitMQ+STOMP: how to trigger events upon
	connect/subscribe to stomp destinations?
In-Reply-To: <AANLkTim5dyr3JRp7p6DNQslOiFi5xuagWtB3U0BQByc0@mail.gmail.com>
References: <4C14CB8C.8020008@gmx.net> <201006171439.45458.w.richert@gmx.net>
	<AANLkTim5dyr3JRp7p6DNQslOiFi5xuagWtB3U0BQByc0@mail.gmail.com>
Message-ID: <201006171556.55252.w.richert@gmx.net>

Hi Marek,

exactly what I was looking for. Thank you!

Am Donnerstag, 17. Juni 2010 15:53:56 schrieben Sie:
> Ok. Now I get it. We call it "presence". Like always, Tony did some
> experiments:
> http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/2010-May/007254.html
> but again, it's experimental, not supported, blah, blah blah.
> 
> I had similar issue in the past, but I assumed that I don't want the
> "unsubscribe"
> message to be send when user does F5/page reload. What I wanted was
> to send the "unsubscribe" notification when user disappears for more
> than 5 seconds.
> 
> Implementing that isn't trivial. I'd probably go for hacking orbited
> or bridging stomp
> with your web app via some asynchronous server, like node.js or tornadoweb.
> 
> We don't have a consistent story for this problem, but we'd like to have!
> If you find any better solution or have any thoughts on Tony's presence
> plugin, please let us know.
> 
> Marek



wr

From waqas.badar at panasiangroup.com  Thu Jun 17 16:55:20 2010
From: waqas.badar at panasiangroup.com (Waqas Badar)
Date: Thu, 17 Jun 2010 20:55:20 +0500
Subject: [rabbitmq-discuss] Rabbitmq Crash
In-Reply-To: <20100617134136.GK17204@rabbitmq.com>
References: <1276767269.2386.11.camel@waqas-desktop>
	<20100617111143.GE17204@rabbitmq.com>
	<20100617111541.GG17204@rabbitmq.com>
	<1276776804.2386.27.camel@waqas-desktop>
	<20100617122757.GJ17204@rabbitmq.com>
	<1276779263.2386.49.camel@waqas-desktop>
	<20100617134136.GK17204@rabbitmq.com>
Message-ID: <1276790120.2386.62.camel@waqas-desktop>


Erlang is 32 bit install. Message length doest not exceed 512 Bytes. We
will take the backup of the specified log files and will share them with
you when rabbitmq crashes.

Waqas badar
On Thu, 2010-06-17 at 14:41 +0100, Matthew Sackman wrote:

> Hi Waqas,
> 
> On Thu, Jun 17, 2010 at 05:54:23PM +0500, Waqas Badar wrote:
> > Our server has 32GB ram. And most of the time 25GB is free. Please note
> > that it is occurring on production system. We try to reproduce it on
> > different machines but unable to do so. Ubuntu Server 9.04 is installed
> > on server. Please note that if we delete mnesia files then we are able
> > to start rabbitmq server. We suspect that mnesia files get corrupted due
> > to which rabbitmq server does not start. Can you please guide us on
> > exactly what log files do you need us to provide you?
> 
> Wow, that's a lot of RAM. I assume it's a 64-bit installation and you're
> running a 64-bit erlang? You say it crashes sometime after 200k msgs,
> but what are the message sizes?
> 
> Basically, it looked to me like that log file was documenting Rabbit
> failing to start up. I'm also interested in the log entries when it
> crashes. So, the next time you get it to crash because it's been sent
> 200k+ msgs, before restarting it, if you could take a copy of the
> rabbit.log and the rabbit-sasl.log, I'd be interested in seeing them.
> 
> Matthew
> _______________________________________________
> rabbitmq-discuss mailing list
> rabbitmq-discuss at lists.rabbitmq.com
> http://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss
> 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20100617/549806ed/attachment.htm>

From matthew at rabbitmq.com  Thu Jun 17 16:58:17 2010
From: matthew at rabbitmq.com (Matthew Sackman)
Date: Thu, 17 Jun 2010 16:58:17 +0100
Subject: [rabbitmq-discuss] Rabbitmq Crash
In-Reply-To: <1276790120.2386.62.camel@waqas-desktop>
References: <1276767269.2386.11.camel@waqas-desktop>
	<20100617111143.GE17204@rabbitmq.com>
	<20100617111541.GG17204@rabbitmq.com>
	<1276776804.2386.27.camel@waqas-desktop>
	<20100617122757.GJ17204@rabbitmq.com>
	<1276779263.2386.49.camel@waqas-desktop>
	<20100617134136.GK17204@rabbitmq.com>
	<1276790120.2386.62.camel@waqas-desktop>
Message-ID: <20100617155816.GA11857@rabbitmq.com>

Hi Waqas,

On Thu, Jun 17, 2010 at 08:55:20PM +0500, Waqas Badar wrote:
> Erlang is 32 bit install. Message length doest not exceed 512 Bytes. We
> will take the backup of the specified log files and will share them with
> you when rabbitmq crashes.

Right, so all 32-bit applications are limited to 4GB RAM maximum,
regardless of how much you have installed. (In fact, under Windows, it's
frequently only 2GB.) Please use a 64-bit Erlang, and please upgrade to
RabbitMQ 1.8.0.

Matthew

From shane at digitalsanctum.com  Thu Jun 17 18:29:57 2010
From: shane at digitalsanctum.com (Shane)
Date: Thu, 17 Jun 2010 10:29:57 -0700 (PDT)
Subject: [rabbitmq-discuss] resources for designing messaging systems
In-Reply-To: <4C19FD95.9020006@rabbitmq.com>
References: <205cdab3-6363-4097-9b16-5921216001fc@d8g2000yqf.googlegroups.com>
	<AANLkTilDiDzSpR-RhKOR0u2mv9Ecit1nia3IQZzYpqoY@mail.gmail.com> 
	<8b952eea-c55b-4a24-a035-f899a7cf9b0f@5g2000yqz.googlegroups.com> 
	<4C19FD95.9020006@rabbitmq.com>
Message-ID: <521f7849-1d4f-4f45-bb14-6fcce12b46d2@w12g2000yqj.googlegroups.com>

Matthias,

No one on my team is familiar with Python (we're a Ruby/Java shop), so
Celery doesn't seem like a good fit. Since I initially asked the
question, I've found some additional resources that have helped me
including the "Enterprise Integration Patterns" book and the examples
in the Java client library. The book does a good job of describing the
theory of messaging solutions but I'm still looking for some real-
world RabbitMQ implementations.

Is there a list somewhere of open source projects that use RabbitMQ?

Thanks,
Shane

On Jun 17, 6:48?am, Matthias Radestock <matth... at rabbitmq.com> wrote:
> Shane,
>
> On 10/06/10 15:41, Shane wrote:
>
> > I guess what I'm looking for are code examples for complete apps so I
> > can get a better idea of the best way to apply exchanges/queues.
>
> > I'm working to port a legacy system of batches to use RabbitMQ. The
> > batches run in a continuous loop and use a database as a state machine
> > to determine what jobs to run and which data to use. There are
> > dependencies between some of the batches (one cannot run until one or
> > more others complete).
>
> Have you looked at celery (http://celeryproject.org/)?Not only is it an
> example of a complete rabbit app, it also is in a domain similar to what
> you are trying to accomplish.
>
> Regards,
>
> Matthias.
> _______________________________________________
> rabbitmq-discuss mailing list
> rabbitmq-disc... at lists.rabbitmq.comhttp://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss

From shane at digitalsanctum.com  Thu Jun 17 18:33:26 2010
From: shane at digitalsanctum.com (Shane)
Date: Thu, 17 Jun 2010 10:33:26 -0700 (PDT)
Subject: [rabbitmq-discuss] best practices for managing multiple consumer
	instances
Message-ID: <6fa8c9df-a314-4fdd-af14-dfe4f6ef2934@5g2000yqz.googlegroups.com>

Anyone have any suggestions on how best to best to manage multiple
consumers instances?

From shane at digitalsanctum.com  Thu Jun 17 18:38:35 2010
From: shane at digitalsanctum.com (Shane)
Date: Thu, 17 Jun 2010 10:38:35 -0700 (PDT)
Subject: [rabbitmq-discuss] revoking or removing queued messages
Message-ID: <dd9eaf9e-47f3-48e2-af2e-f210ae80c474@x21g2000yqa.googlegroups.com>

In our current system, we have a function that essentially revokes a
unit of work before it's acted on. In RabbitMQ, is there a way to
revoke or remove a message from a queue assuming it hasn't been acted
on?

Thanks,
Shane

From scott at beamdog.com  Thu Jun 17 19:04:53 2010
From: scott at beamdog.com (Scott Brooks)
Date: Thu, 17 Jun 2010 12:04:53 -0600
Subject: [rabbitmq-discuss] revoking or removing queued messages
In-Reply-To: <dd9eaf9e-47f3-48e2-af2e-f210ae80c474@x21g2000yqa.googlegroups.com>
References: <dd9eaf9e-47f3-48e2-af2e-f210ae80c474@x21g2000yqa.googlegroups.com>
Message-ID: <AANLkTilQoCoZenhoIMZZoHjwcQr29cAFlxf-G-pw3tCO@mail.gmail.com>

I'm pretty sure there is no way to remove a message(besides a full
purge of a queue) since publishing is async so you never really have a
way to refer to that message.

Some times changes your approach can solve the problem though.
I'm not sure what your needs are, but lets assume your are processing
PDF files or something like that.

One approach would be to send a message containing all the text to be
processed as the message, which then the consumer grabs and works
with.
Another approach would be to send a message saying "document X is
ready to be processed", and the consumer then grabs
http://my.pdf.processor.com/documents/X, and does the work.

The second approach lets you respond with a "job canceled" message
when you request the actual document.

Scott

On Thu, Jun 17, 2010 at 11:38 AM, Shane <shane at digitalsanctum.com> wrote:
> In our current system, we have a function that essentially revokes a
> unit of work before it's acted on. In RabbitMQ, is there a way to
> revoke or remove a message from a queue assuming it hasn't been acted
> on?
>
> Thanks,
> Shane
> _______________________________________________
> rabbitmq-discuss mailing list
> rabbitmq-discuss at lists.rabbitmq.com
> http://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss
>

From russell at borogove.org  Thu Jun 17 20:36:44 2010
From: russell at borogove.org (Russell Borogove)
Date: Thu, 17 Jun 2010 12:36:44 -0700
Subject: [rabbitmq-discuss] running rabbitmq-server as a subprocess
In-Reply-To: <20100617115140.GI17204@rabbitmq.com>
References: <A92DB691-C855-490C-BA03-3660DB5A6798@borogove.org>
	<20100617115140.GI17204@rabbitmq.com>
Message-ID: <30F70700-CE8A-4DBF-9CA3-3C53C834CDFF@borogove.org>


On Jun 17, 2010, at 4:51 AM, Matthew Sackman wrote:

> Hi Russell,
> 
> On Wed, Jun 16, 2010 at 05:16:59PM -0700, Russell Borogove wrote:
>> Is rabbitmq-server in fact suspending its parent process? Is there a way to stop it from doing so? Is there a better way to launch rabbitmq from a script?
> 
> Hmm, that's interesting. The shell scripts that you call to start Rabbit
> will create new processes as necessary, and there will be a few. We're
> doing nothing fancy to the parent process at all - the shell scripts
> will exit and there should be a beam process running. This isn't
> something we've come across so I'm afraid I've nothing concrete to
> suggest. 

Paring down our script, it appears that the root of the problem may be 
that we're doing some funky termios stuff in the script after launching 
rabbit, to let us do character-by-character input polling on that script 
(in the service of "press Q to quit"). If I launch rmq in such a way that 
it doesn't share stdout with the script, there's no problem.
 

From shane at digitalsanctum.com  Thu Jun 17 20:57:29 2010
From: shane at digitalsanctum.com (Shane)
Date: Thu, 17 Jun 2010 12:57:29 -0700 (PDT)
Subject: [rabbitmq-discuss] revoking or removing queued messages
In-Reply-To: <AANLkTilQoCoZenhoIMZZoHjwcQr29cAFlxf-G-pw3tCO@mail.gmail.com>
References: <dd9eaf9e-47f3-48e2-af2e-f210ae80c474@x21g2000yqa.googlegroups.com>
	<AANLkTilQoCoZenhoIMZZoHjwcQr29cAFlxf-G-pw3tCO@mail.gmail.com>
Message-ID: <65cbf038-8aa1-49fb-b976-19ca5a991697@j8g2000yqd.googlegroups.com>

Thanks, Scott. Something along the lines of the second approach you
outlined seems like the way to go.

On Jun 17, 2:04?pm, Scott Brooks <sc... at beamdog.com> wrote:
> I'm pretty sure there is no way to remove a message(besides a full
> purge of a queue) since publishing is async so you never really have a
> way to refer to that message.
>
> Some times changes your approach can solve the problem though.
> I'm not sure what your needs are, but lets assume your are processing
> PDF files or something like that.
>
> One approach would be to send a message containing all the text to be
> processed as the message, which then the consumer grabs and works
> with.
> Another approach would be to send a message saying "document X is
> ready to be processed", and the consumer then grabshttp://my.pdf.processor.com/documents/X, and does the work.
>
> The second approach lets you respond with a "job canceled" message
> when you request the actual document.
>
> Scott
>
> On Thu, Jun 17, 2010 at 11:38 AM, Shane <sh... at digitalsanctum.com> wrote:
> > In our current system, we have a function that essentially revokes a
> > unit of work before it's acted on. In RabbitMQ, is there a way to
> > revoke or remove a message from a queue assuming it hasn't been acted
> > on?
>
> > Thanks,
> > Shane
> > _______________________________________________
> > rabbitmq-discuss mailing list
> > rabbitmq-disc... at lists.rabbitmq.com
> >http://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss
>
> _______________________________________________
> rabbitmq-discuss mailing list
> rabbitmq-disc... at lists.rabbitmq.comhttp://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss

From raphael at rightscale.com  Thu Jun 17 22:39:22 2010
From: raphael at rightscale.com (Raphael Simon)
Date: Thu, 17 Jun 2010 14:39:22 -0700
Subject: [rabbitmq-discuss] Publish to queue fails but publish to direct
	exchange works
In-Reply-To: <AANLkTinEJeAHz__BkHvt6UR4fN6tn9EkIAgvD2p-o__4@mail.gmail.com>
References: <AANLkTinEJeAHz__BkHvt6UR4fN6tn9EkIAgvD2p-o__4@mail.gmail.com>
Message-ID: <AANLkTinKVp5dg94vximXUT36RvXdHSJ7VIjAXPqVRnbG@mail.gmail.com>

More information on this: the successful case (message actually ends up in
the queue) uses:

[:sending,
 #<AMQP::Protocol::Basic::Publish:0xac16128
  @debug=1,
  @exchange=
   "my_queue",
  @immediate=nil,
  @mandatory=nil,
  @routing_key=nil,
  @ticket=1>]

while the error case (message does not make it to the queue, i.e.
rabbitmqctl list_queues shows 0 message in the queue) uses:

[:sending,
 #<AMQP::Protocol::Basic::Publish:0xa2b47d8
  @debug=1,
  @exchange="",
  @immediate=nil,
  @mandatory=nil,
  @routing_key=
   "my_queue",
  @ticket=1>]

I'm still wondering what are the steps that would recreate this state.

--
Raphael.

On Wed, Jun 16, 2010 at 6:38 PM, Raphael Simon <raphael at rightscale.com>wrote:

> Hi all, we just saw an interesting behavior where messages posted to a
> queue did not make it to a client while publishing to the corresponding
> direct exchange was working. I'm wondering what can cause this behavior to
> happen. Publishing directly to the queue initially worked but "something
> happened" and now it seems only messages posted to the exchange make it to
> the client. The queue is durable (so is the exchange obviously) and
> auto-delete. Does anyone have seen this behavior before?
>
> Thanks!
>
> --
> Raphael.
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20100617/d93315a3/attachment.htm>

From tim.cole at canonical.com  Thu Jun 17 22:47:49 2010
From: tim.cole at canonical.com (Tim Cole)
Date: Thu, 17 Jun 2010 17:47:49 -0400
Subject: [rabbitmq-discuss] txamqp not sending channel.close? (Was:
 message availability after close without ack)
In-Reply-To: <4C17D2F2.5070602@rabbitmq.com>
References: <1276622622.10343.17.camel@bede>
	<20100615174918.GJ16440@rabbitmq.com> <4C17C003.6000404@rabbitmq.com>
	<1276627188.10343.35.camel@bede>  <4C17D2F2.5070602@rabbitmq.com>
Message-ID: <1276811269.10343.42.camel@bede>

On Tue, 2010-06-15 at 20:22 +0100, Matthias Radestock wrote:
> sending a channel.close method is definitely the correct way to close a 
> channel, but I do not know how that is exposed in the txamqp API.

It's kind of weird.  As it turns out, txamqp exposes two methods on
channel objects, one which sends channel.close to the server, and one
which marks the channel as closed locally.  To properly close a channel,
you end up having to call both individually.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 198 bytes
Desc: This is a digitally signed message part
URL: <http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20100617/e34f6847/attachment.pgp>

From matthias at rabbitmq.com  Thu Jun 17 22:49:53 2010
From: matthias at rabbitmq.com (Matthias Radestock)
Date: Thu, 17 Jun 2010 22:49:53 +0100
Subject: [rabbitmq-discuss] txamqp not sending channel.close? (Was:
 message availability after close without ack)
In-Reply-To: <1276811269.10343.42.camel@bede>
References: <1276622622.10343.17.camel@bede>	
	<20100615174918.GJ16440@rabbitmq.com>
	<4C17C003.6000404@rabbitmq.com>	 <1276627188.10343.35.camel@bede>
	<4C17D2F2.5070602@rabbitmq.com> <1276811269.10343.42.camel@bede>
Message-ID: <4C1A9881.60600@rabbitmq.com>

Tim,

Tim Cole wrote:
> As it turns out, txamqp exposes two methods on channel objects, one
> which sends channel.close to the server, and one which marks the
> channel as closed locally.  To properly close a channel, you end up
> having to call both individually.

I suggest you report that to the txamqp authors.


Regards,

Matthias.

From mlartz at gmail.com  Fri Jun 18 03:07:03 2010
From: mlartz at gmail.com (Michael Artz)
Date: Thu, 17 Jun 2010 22:07:03 -0400
Subject: [rabbitmq-discuss] Highly Dynamic Bindings?
In-Reply-To: <20100617114138.GH17204@rabbitmq.com>
References: <4F273699-9CEC-4E98-A73F-106370E094D8@gmail.com>
	<20100617114138.GH17204@rabbitmq.com>
Message-ID: <AANLkTikqxo6xPnxyZdYnpQlFHpe3qj_1o_EbAhsjVsKw@mail.gmail.com>

>> ?- Are there any issues having a large (30K+) number of non-wildcarded bindings for a single queue?
>
> Yup. Are these bindings all to a single exchange or to lots of
> exchanges. What's the average number of bindings per exchange? If you're
> using topic exchanges then the matching of bindings is not as efficient
> as it could be, even for bindings without wildcards. Using direct
> exchanges are more efficient.

We have been using a single topic exchange for all of our traffic.  We
currently have between 15-50 queues on the exchange at any given time,
and plan to have each queue bind to between 10 and 1,000 routing keys.

> What kind of chat are you trying to do - just p2p or with chat rooms
> etc? Are you doing presence notification etc too?

Its a bit more complicated than chat, but IRC is the closest network
analogy that I could think of.  We have a distributed computing system
whereby a number of distributed workers connect to a number of servers
(but only one at any given time) to get their jobs.  The workers
remain connected to the server for a minute or two and then disconnect
if they do not get a job.  If they do get a job, they process the job
and return the results.

We have a very basic notion of presence in that when a worker
connects, the server sends a connection message to a particular
routing key.  Disconnects are inferred.  We have a series of control
nodes that have a queues bound to this connection routing key, and
will give the worker a job based on a series of metrics.  The problem
is that the control nodes should route the job message to the correct
server, which will then pass the message on to the worker.

Our current proposal is to create a routing key for each worker
(worker.a, worker.b, etc).  Each server will bind its queue to a given
worker's routing key upon connect, and unbind the routing key upon
worker disconnect.  This will allow the control nodes to send job
messages to the worker's routing key, and it will end up in the queue
of the server to which the worker is connected.

So I guess that is a long-winded way of saying "yes", we are
interested in having a notion of presence.

-Mike

From raphael at rightscale.com  Fri Jun 18 06:17:13 2010
From: raphael at rightscale.com (Raphael Simon)
Date: Thu, 17 Jun 2010 22:17:13 -0700
Subject: [rabbitmq-discuss] Publish to queue fails but publish to direct
	exchange works
In-Reply-To: <AANLkTinKVp5dg94vximXUT36RvXdHSJ7VIjAXPqVRnbG@mail.gmail.com>
References: <AANLkTinEJeAHz__BkHvt6UR4fN6tn9EkIAgvD2p-o__4@mail.gmail.com>
	<AANLkTinKVp5dg94vximXUT36RvXdHSJ7VIjAXPqVRnbG@mail.gmail.com>
Message-ID: <AANLkTin-tQYGacgo8FC3c7jYxhgvkDFbxUxS16PlBJ1B@mail.gmail.com>

Running some queries on the broker shows that the queue route is indeed gone
from mnesia while the exchange route still exists:

(rabbit at ip-10-194-206-32)17> mnesia:transaction(fun() ->
qlc:eval(qlc:q([{route,{binding,{resource,<<"/right_net">>,exchange,<<>>},A,{resource,<<"/right_net">>,queue,Queue},B},C}
||
{route,{binding,{resource,<<"/right_net">>,exchange,<<>>},A,{resource,<<"/right_net">>,queue,Queue},B},C}
<- mnesia:table(rabbit_route),
Queue=:=<<"nanite-rs-instance-1adc9b7647af742d57916134ec5e4d488016d864-1098629">>]))
end).
*{atomic,[]}*

(rabbit at ip-10-194-206-32)18> mnesia:transaction(fun() ->
qlc:eval(qlc:q([{route,{binding,{resource,<<"/right_net">>,exchange,Exchange},A,{resource,<<"/right_net">>,queue,B},C},D}
||
{route,{binding,{resource,<<"/right_net">>,exchange,Exchange},A,{resource,<<"/right_net">>,queue,B},C},D}
<- mnesia:table(rabbit_route),
Exchange=:=<<"nanite-rs-instance-1adc9b7647af742d57916134ec5e4d488016d864-1098629">>]))
end).
*{atomic,[{route,{binding,{resource,<<"/right_net">>,*
*                                   exchange,*
*
<<"nanite-rs-instance-1adc9b7647af742d57916134ec5e4d488016d864-1098629">>},*
*                         <<>>,*
*                         {resource,<<"/right_net">>,queue,*
*
<<"nanite-rs-instance-1adc9b7647af742d57916134ec5e4d488016d864-1098"...>>},*
*                         []},*
*                const}]}*

I still don't understand what scenario could cause this to happen though
especially since the exchange is auto-delete (and no other queue is ever
bound to it). We are seeing this on our production system and as a result
have consumers that can't be accessed anymore. Any insight would be greatly
appreciated.

Thanks!

--
Raphael.


On Thu, Jun 17, 2010 at 2:39 PM, Raphael Simon <raphael at rightscale.com>wrote:

> More information on this: the successful case (message actually ends up in
> the queue) uses:
>
> [:sending,
>  #<AMQP::Protocol::Basic::Publish:0xac16128
>   @debug=1,
>   @exchange=
>    "my_queue",
>   @immediate=nil,
>   @mandatory=nil,
>   @routing_key=nil,
>   @ticket=1>]
>
> while the error case (message does not make it to the queue, i.e.
> rabbitmqctl list_queues shows 0 message in the queue) uses:
>
> [:sending,
>  #<AMQP::Protocol::Basic::Publish:0xa2b47d8
>   @debug=1,
>   @exchange="",
>   @immediate=nil,
>   @mandatory=nil,
>   @routing_key=
>    "my_queue",
>   @ticket=1>]
>
> I'm still wondering what are the steps that would recreate this state.
>
> --
> Raphael.
>
> On Wed, Jun 16, 2010 at 6:38 PM, Raphael Simon <raphael at rightscale.com>wrote:
>
>> Hi all, we just saw an interesting behavior where messages posted to a
>> queue did not make it to a client while publishing to the corresponding
>> direct exchange was working. I'm wondering what can cause this behavior to
>> happen. Publishing directly to the queue initially worked but "something
>> happened" and now it seems only messages posted to the exchange make it to
>> the client. The queue is durable (so is the exchange obviously) and
>> auto-delete. Does anyone have seen this behavior before?
>>
>> Thanks!
>>
>> --
>> Raphael.
>>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20100617/33be5886/attachment-0001.htm>

From matthias at rabbitmq.com  Fri Jun 18 06:52:33 2010
From: matthias at rabbitmq.com (Matthias Radestock)
Date: Fri, 18 Jun 2010 06:52:33 +0100
Subject: [rabbitmq-discuss] Publish to queue fails but publish to direct
 exchange works
In-Reply-To: <AANLkTin-tQYGacgo8FC3c7jYxhgvkDFbxUxS16PlBJ1B@mail.gmail.com>
References: <AANLkTinEJeAHz__BkHvt6UR4fN6tn9EkIAgvD2p-o__4@mail.gmail.com>	<AANLkTinKVp5dg94vximXUT36RvXdHSJ7VIjAXPqVRnbG@mail.gmail.com>
	<AANLkTin-tQYGacgo8FC3c7jYxhgvkDFbxUxS16PlBJ1B@mail.gmail.com>
Message-ID: <4C1B09A1.7060103@rabbitmq.com>

Raphael,

Raphael Simon wrote:
> Running some queries on the broker shows that the queue route is indeed 
> gone from mnesia while the exchange route still exists:  [...]

Simply running 'rabbitmqctl list_bindings' should give the same results. 
Please do that, just to check.

It looks like the binding to the default exchange has vanished. That 
really should only ever happen if the queue is deleted or that binding 
is removed explicitly. Could the latter have happened? It's actually a 
grey area of the spec; imo it should not be allowed, but rabbit does 
currently permit it.

Is the default exchange itself still there? Check with 'rabbitmqctl 
list_exchanges'.

Is this reproducible at all? I suspect not :(

What version of rabbit are you running?

> I still don't understand what scenario could cause this to happen though 
> especially since the exchange is auto-delete

Interesting. auto-delete exchanges are very rare. In fact I do not know 
of anybody else using them. So it's possible there is a bug in that code 
that has laid dormant for years. Can you explain your use-case for 
auto-delete exchanges?

Also, what version of rabbit are you running?


Regards,

Matthias.

From raphael at rightscale.com  Fri Jun 18 07:34:03 2010
From: raphael at rightscale.com (Raphael Simon)
Date: Thu, 17 Jun 2010 23:34:03 -0700
Subject: [rabbitmq-discuss] Publish to queue fails but publish to direct
	exchange works
In-Reply-To: <4C1B09A1.7060103@rabbitmq.com>
References: <AANLkTinEJeAHz__BkHvt6UR4fN6tn9EkIAgvD2p-o__4@mail.gmail.com>
	<AANLkTinKVp5dg94vximXUT36RvXdHSJ7VIjAXPqVRnbG@mail.gmail.com>
	<AANLkTin-tQYGacgo8FC3c7jYxhgvkDFbxUxS16PlBJ1B@mail.gmail.com>
	<4C1B09A1.7060103@rabbitmq.com>
Message-ID: <AANLkTimwPk2WFnDAXaNF01ljp7DuAZ9B_WKA_95eiVte@mail.gmail.com>

Matthias, thanks for following up.  Please see my answers inline.

On Thu, Jun 17, 2010 at 10:52 PM, Matthias Radestock
<matthias at rabbitmq.com>wrote:

> Raphael,
>
> Raphael Simon wrote:
>
>> Running some queries on the broker shows that the queue route is indeed
>> gone from mnesia while the exchange route still exists:  [...]
>>
>
> Simply running 'rabbitmqctl list_bindings' should give the same results.
> Please do that, just to check.
>

Yes indeed but where is the fun in doing that? OK more seriously I did not
understand the subtlety of the empty spaces, now I do (as a side note it
would be nice to have something rather than blank in this case maybe *** or
---).


>
> It looks like the binding to the default exchange has vanished. That really
> should only ever happen if the queue is deleted or that binding is removed
> explicitly. Could the latter have happened? It's actually a grey area of the
> spec; imo it should not be allowed, but rabbit does currently permit it.
>

No I can't think of a place where we would delete a binding. We only ever
delete queues.


>
> Is the default exchange itself still there? Check with 'rabbitmqctl
> list_exchanges'.
>

Yes the exchange still exists.


>
> Is this reproducible at all? I suspect not :(
>

No it has only happens about 15 times on the course of two days. During
these two days our system was having issues and weird things could have
happened on the broker (e.g. the queue could have been deleted and
recreated).


>
> What version of rabbit are you running?


1.7.2


>
>
>  I still don't understand what scenario could cause this to happen though
>> especially since the exchange is auto-delete
>>
>
> Interesting. auto-delete exchanges are very rare. In fact I do not know of
> anybody else using them. So it's possible there is a bug in that code that
> has laid dormant for years. Can you explain your use-case for auto-delete
> exchanges?
>

Embarrassingly enough, I can't :) The fact that we are using direct
exchanges for these queues was a bug we introduced, we will be removing
them.


>
> Also, what version of rabbit are you running?
>

1.7.2


>
>
> Regards,
>
> Matthias.
>

I recreated some bindings from within the broker (directly in mnesia) and
now things started working again. Is there a better way to re-create the
binding to the default exchange without having to re-create the queue?

Obviously I'm still very much interested in finding out what could have
caused the binding to be deleted in the first place.

Thanks,

--
Raphael.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20100617/bc131267/attachment.htm>

From raphael at rightscale.com  Fri Jun 18 07:58:38 2010
From: raphael at rightscale.com (Raphael Simon)
Date: Thu, 17 Jun 2010 23:58:38 -0700
Subject: [rabbitmq-discuss] Publish to queue fails but publish to direct
	exchange works
In-Reply-To: <AANLkTimwPk2WFnDAXaNF01ljp7DuAZ9B_WKA_95eiVte@mail.gmail.com>
References: <AANLkTinEJeAHz__BkHvt6UR4fN6tn9EkIAgvD2p-o__4@mail.gmail.com>
	<AANLkTinKVp5dg94vximXUT36RvXdHSJ7VIjAXPqVRnbG@mail.gmail.com>
	<AANLkTin-tQYGacgo8FC3c7jYxhgvkDFbxUxS16PlBJ1B@mail.gmail.com>
	<4C1B09A1.7060103@rabbitmq.com>
	<AANLkTimwPk2WFnDAXaNF01ljp7DuAZ9B_WKA_95eiVte@mail.gmail.com>
Message-ID: <AANLkTikNLJ_qJ1gWdecSCA2Af4-H4rxIm4aE5sY6M0IJ@mail.gmail.com>

Regarding:

"I recreated some bindings from within the broker (directly in mnesia) and
now things started working again. Is there a better way to re-create the
binding to the default exchange without having to re-create the queue?"

I should probably mention that sending the following queue.bind packet
didn't seem to help (rabbitmqctl list_bindings still shows the binding
missing).

[:sending,
 #<AMQP::Protocol::Queue::Bind:0x9b26778
  @arguments=nil,
  @debug=1,
  @exchange=
   "nanite-rs-instance-fd0416fe31d7b019112c2c0adce9b4e4a261bab1-1094976",
  @nowait=true,
  @queue="nanite-rs-instance-fd0416fe31d7b019112c2c0adce9b4e4a261bab1-1094976",
  @routing_key=nil,
  @ticket=1>]

--
Raphael


On Thu, Jun 17, 2010 at 11:34 PM, Raphael Simon <raphael at rightscale.com>wrote:

> Matthias, thanks for following up.  Please see my answers inline.
>
> On Thu, Jun 17, 2010 at 10:52 PM, Matthias Radestock <
> matthias at rabbitmq.com> wrote:
>
>> Raphael,
>>
>> Raphael Simon wrote:
>>
>>> Running some queries on the broker shows that the queue route is indeed
>>> gone from mnesia while the exchange route still exists:  [...]
>>>
>>
>> Simply running 'rabbitmqctl list_bindings' should give the same results.
>> Please do that, just to check.
>>
>
> Yes indeed but where is the fun in doing that? OK more seriously I did not
> understand the subtlety of the empty spaces, now I do (as a side note it
> would be nice to have something rather than blank in this case maybe *** or
> ---).
>
>
>>
>> It looks like the binding to the default exchange has vanished. That
>> really should only ever happen if the queue is deleted or that binding is
>> removed explicitly. Could the latter have happened? It's actually a grey
>> area of the spec; imo it should not be allowed, but rabbit does currently
>> permit it.
>>
>
> No I can't think of a place where we would delete a binding. We only ever
> delete queues.
>
>
>>
>> Is the default exchange itself still there? Check with 'rabbitmqctl
>> list_exchanges'.
>>
>
> Yes the exchange still exists.
>
>
>>
>> Is this reproducible at all? I suspect not :(
>>
>
> No it has only happens about 15 times on the course of two days. During
> these two days our system was having issues and weird things could have
> happened on the broker (e.g. the queue could have been deleted and
> recreated).
>
>
>>
>> What version of rabbit are you running?
>
>
> 1.7.2
>
>
>>
>>
>>  I still don't understand what scenario could cause this to happen though
>>> especially since the exchange is auto-delete
>>>
>>
>> Interesting. auto-delete exchanges are very rare. In fact I do not know of
>> anybody else using them. So it's possible there is a bug in that code that
>> has laid dormant for years. Can you explain your use-case for auto-delete
>> exchanges?
>>
>
> Embarrassingly enough, I can't :) The fact that we are using direct
> exchanges for these queues was a bug we introduced, we will be removing
> them.
>
>
>>
>> Also, what version of rabbit are you running?
>>
>
> 1.7.2
>
>
>>
>>
>> Regards,
>>
>> Matthias.
>>
>
> I recreated some bindings from within the broker (directly in mnesia) and
> now things started working again. Is there a better way to re-create the
> binding to the default exchange without having to re-create the queue?
>
> Obviously I'm still very much interested in finding out what could have
> caused the binding to be deleted in the first place.
>
> Thanks,
>
> --
> Raphael.
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20100617/623e60fe/attachment.htm>

From waqas.badar at panasiangroup.com  Fri Jun 18 08:04:53 2010
From: waqas.badar at panasiangroup.com (Waqas Badar)
Date: Fri, 18 Jun 2010 12:04:53 +0500
Subject: [rabbitmq-discuss] Rabbitmq Crash
In-Reply-To: <20100617155816.GA11857@rabbitmq.com>
References: <1276767269.2386.11.camel@waqas-desktop>
	<20100617111143.GE17204@rabbitmq.com>
	<20100617111541.GG17204@rabbitmq.com>
	<1276776804.2386.27.camel@waqas-desktop>
	<20100617122757.GJ17204@rabbitmq.com>
	<1276779263.2386.49.camel@waqas-desktop>
	<20100617134136.GK17204@rabbitmq.com>
	<1276790120.2386.62.camel@waqas-desktop>
	<20100617155816.GA11857@rabbitmq.com>
Message-ID: <1276844693.2432.19.camel@waqas-desktop>

Yesterday again rabbitmq was crashed. Please find rabbit.log,
rabbit-sasl.log and erl_crash.dump file attached with this mail. Please
note that it was crash on rabbitmq 1.7.1. We are upgrading the rabbitmq
to 1.8.0. Can you please check the files and let us know that these bugs
have been fixed in 1.8.0 version? 

On Thu, 2010-06-17 at 16:58 +0100, Matthew Sackman wrote:

> Hi Waqas,
> 
> On Thu, Jun 17, 2010 at 08:55:20PM +0500, Waqas Badar wrote:
> > Erlang is 32 bit install. Message length doest not exceed 512 Bytes. We
> > will take the backup of the specified log files and will share them with
> > you when rabbitmq crashes.
> 
> Right, so all 32-bit applications are limited to 4GB RAM maximum,
> regardless of how much you have installed. (In fact, under Windows, it's
> frequently only 2GB.) Please use a 64-bit Erlang, and please upgrade to
> RabbitMQ 1.8.0.
> 
> Matthew
> 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20100618/b0fdd80b/attachment-0001.htm>
-------------- next part --------------
=erl_crash_dump:0.1
Fri Jun 18 10:56:46 2010
Slogan: init terminating in do_boot ()
System version: Erlang (BEAM) emulator version 5.6.5 [source] [smp:256] [async-threads:30] [kernel-poll:true]
Compiled: Fri Feb 20 05:05:14 2009
Atoms: 9198
=memory
total: 8581232
processes: 668352
processes_used: 643960
system: 7912880
atom: 418225
atom_used: 399728
binary: 15880
code: 3219422
ets: 154952
=hash_table:atom_tab
size: 6421
used: 4850
objs: 9198
depth: 7
=index_table:atom_tab
size: 9216
limit: 1048576
entries: 9198
=hash_table:module_code
size: 197
used: 106
objs: 137
depth: 3
=index_table:module_code
size: 1024
limit: 65536
entries: 137
=hash_table:export_list
size: 3203
used: 2262
objs: 3998
depth: 6
=index_table:export_list
size: 4096
limit: 65536
entries: 3998
=hash_table:secondary_export_table
size: 97
used: 0
objs: 0
depth: 0
=hash_table:process_reg
size: 47
used: 19
objs: 27
depth: 3
=hash_table:fun_table
size: 797
used: 516
objs: 842
depth: 5
=hash_table:node_table
size: 5
used: 2
objs: 2
depth: 1
=hash_table:dist_table
size: 5
used: 1
objs: 2
depth: 2
=allocated_areas
sys_misc: 63444
static: 483328
atom_space: 131088 112639
atom_table: 62629
module_table: 4968
export_table: 29280
register_table: 252
fun_table: 3250
module_refs: 2048
loaded_code: 2933256
dist_table: 2251
node_table: 131
bits_bufs_size: 0
bif_timer: 40100
link_lh: 0
proc: 33668 13844
atom_entry: 224508 224460
export_entry: 193628 193532
module_entry: 5684 5564
reg_proc: 1492 700
monitor_sh: 1644 364
nlink_sh: 4908 2412
proc_list: 28 28
fun_entry: 48532 47524
db_tab: 7732 2996
driver_event_data_state: 28 28
driver_select_data_state: 356 84
=allocator:sys_alloc
option e: true
option m: libc
option tt: 131072
option tp: 0
=allocator:temp_alloc[0]
versions: 2.1 2.2
option e: true
option t: false
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option mbsd: 3
option as: gf
mbcs blocks: 0 135 135
mbcs blocks size: 0 24680 24680
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 1362
temp_free calls: 1362
temp_realloc calls: 4
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[1]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 1 1
mbcs blocks size: 0 65544 65544
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 67
temp_free calls: 67
temp_realloc calls: 3
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[2]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 18 18
mbcs blocks size: 0 5768 5768
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 54
temp_free calls: 54
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[3]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 149 149
mbcs blocks size: 0 22184 22184
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 533
temp_free calls: 533
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[4]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 1 1
mbcs blocks size: 0 1032 1032
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 21
temp_free calls: 21
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[5]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 1 1
mbcs blocks size: 0 1032 1032
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 38
temp_free calls: 38
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[6]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 129 129
mbcs blocks size: 0 22400 22400
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 295
temp_free calls: 295
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[7]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 10 10
mbcs blocks size: 0 5576 5576
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 38
temp_free calls: 38
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[8]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 1 1
mbcs blocks size: 0 1032 1032
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 16
temp_free calls: 16
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[9]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 1 1
mbcs blocks size: 0 1032 1032
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 17
temp_free calls: 17
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[10]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 1 1
mbcs blocks size: 0 1032 1032
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 14
temp_free calls: 14
temp_realloc calls: 2
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[11]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 163 163
mbcs blocks size: 0 33688 33688
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 410
temp_free calls: 410
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[12]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 1 1
mbcs blocks size: 0 1032 1032
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 18
temp_free calls: 18
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[13]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 1 1
mbcs blocks size: 0 1032 1032
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 28
temp_free calls: 28
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[14]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 2 2
mbcs blocks size: 0 1032 1032
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 17
temp_free calls: 17
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[15]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 1 1
mbcs blocks size: 0 1032 1032
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 28
temp_free calls: 28
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[16]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 1 1
mbcs blocks size: 0 1032 1032
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 11
temp_free calls: 11
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[17]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 90 90
mbcs blocks size: 0 56168 56168
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 761
temp_free calls: 761
temp_realloc calls: 2
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[18]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 1 1
mbcs blocks size: 0 1032 1032
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 19
temp_free calls: 19
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[19]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 1 1
mbcs blocks size: 0 1032 1032
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 4
temp_free calls: 4
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[20]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 1 1
mbcs blocks size: 0 1032 1032
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 12
temp_free calls: 12
temp_realloc calls: 1
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[21]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 1 1
mbcs blocks size: 0 1032 1032
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 23
temp_free calls: 23
temp_realloc calls: 4
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[22]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 8 8
mbcs blocks size: 0 4176 4176
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 18
temp_free calls: 18
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[23]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 1 1
mbcs blocks size: 0 1032 1032
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 17
temp_free calls: 17
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[24]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 13 13
mbcs blocks size: 0 4808 4808
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 355
temp_free calls: 355
temp_realloc calls: 2
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[25]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 1 1
mbcs blocks size: 0 1032 1032
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 31
temp_free calls: 31
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[26]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 1 1
mbcs blocks size: 0 1032 1032
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 35
temp_free calls: 35
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[27]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 28 28
mbcs blocks size: 0 6976 6976
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 52
temp_free calls: 52
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[28]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 27 27
mbcs blocks size: 0 8200 8200
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 140
temp_free calls: 140
temp_realloc calls: 1
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[29]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 87 87
mbcs blocks size: 0 20904 20904
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 157
temp_free calls: 157
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[30]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 1 1
mbcs blocks size: 0 1032 1032
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 31
temp_free calls: 31
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[31]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 1 1
mbcs blocks size: 0 1032 1032
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 32
temp_free calls: 32
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[32]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 1 1
mbcs blocks size: 0 1032 1032
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 50
temp_free calls: 50
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[33]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 7 7
mbcs blocks size: 0 5176 5176
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 53
temp_free calls: 53
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[34]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 1 1
mbcs blocks size: 0 1032 1032
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 18
temp_free calls: 18
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[35]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 1 1
mbcs blocks size: 0 1032 1032
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 23
temp_free calls: 23
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[36]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 49 49
mbcs blocks size: 0 9816 9816
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 164
temp_free calls: 164
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[37]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 8 8
mbcs blocks size: 0 8440 8440
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 51
temp_free calls: 51
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[38]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 1 1
mbcs blocks size: 0 1032 1032
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 16
temp_free calls: 16
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[39]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 40 40
mbcs blocks size: 0 7864 7864
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 78
temp_free calls: 78
temp_realloc calls: 4
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[40]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 10 10
mbcs blocks size: 0 4120 4120
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 62
temp_free calls: 62
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[41]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 1 1
mbcs blocks size: 0 1032 1032
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 30
temp_free calls: 30
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[42]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 1 1
mbcs blocks size: 0 1032 1032
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 32
temp_free calls: 32
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[43]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 1 1
mbcs blocks size: 0 1032 1032
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 39
temp_free calls: 39
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[44]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 10 10
mbcs blocks size: 0 6328 6328
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 31
temp_free calls: 31
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[45]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 1 1
mbcs blocks size: 0 1032 1032
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 24
temp_free calls: 24
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[46]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 1 1
mbcs blocks size: 0 1032 1032
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 30
temp_free calls: 30
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[47]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 1 1
mbcs blocks size: 0 1032 1032
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 28
temp_free calls: 28
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[48]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 10 10
mbcs blocks size: 0 6696 6696
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 38
temp_free calls: 38
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[49]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 1 1
mbcs blocks size: 0 1032 1032
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 18
temp_free calls: 18
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[50]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 123 123
mbcs blocks size: 0 17616 17616
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 276
temp_free calls: 276
temp_realloc calls: 1
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[51]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 1 1
mbcs blocks size: 0 1032 1032
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 21
temp_free calls: 21
temp_realloc calls: 2
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[52]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 8 8
mbcs blocks size: 0 6888 6888
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 35
temp_free calls: 35
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[53]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 123 123
mbcs blocks size: 0 38512 38512
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 341
temp_free calls: 341
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[54]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 21 21
mbcs blocks size: 0 8704 8704
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 72
temp_free calls: 72
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[55]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 1 1
mbcs blocks size: 0 1032 1032
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 18
temp_free calls: 18
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[56]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 19 19
mbcs blocks size: 0 4456 4456
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 57
temp_free calls: 57
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[57]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 8 8
mbcs blocks size: 0 5776 5776
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 58
temp_free calls: 58
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[58]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 1 1
mbcs blocks size: 0 1032 1032
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 26
temp_free calls: 26
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[59]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 1 1
mbcs blocks size: 0 1032 1032
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 27
temp_free calls: 27
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[60]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 1 1
mbcs blocks size: 0 1032 1032
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 12
temp_free calls: 12
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[61]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 1 1
mbcs blocks size: 0 1032 1032
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 17
temp_free calls: 17
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[62]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 37 37
mbcs blocks size: 0 6904 6904
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 83
temp_free calls: 83
temp_realloc calls: 1
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[63]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 46 46
mbcs blocks size: 0 11136 11136
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 82
temp_free calls: 82
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[64]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 176 176
mbcs blocks size: 0 29752 29752
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 984
temp_free calls: 984
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[65]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 60 60
mbcs blocks size: 0 11768 11768
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 223
temp_free calls: 223
temp_realloc calls: 1
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[66]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 10 10
mbcs blocks size: 0 4120 4120
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 91
temp_free calls: 91
temp_realloc calls: 4
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[67]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 52 52
mbcs blocks size: 0 8824 8824
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 120
temp_free calls: 120
temp_realloc calls: 2
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[68]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 1 1
mbcs blocks size: 0 8200 8200
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 16
temp_free calls: 16
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[69]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 1 1
mbcs blocks size: 0 1032 1032
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 180
temp_free calls: 180
temp_realloc calls: 1
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[70]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 24 24
mbcs blocks size: 0 15272 15272
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 188
temp_free calls: 188
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[71]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 5 5
mbcs blocks size: 0 4328 4328
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 23
temp_free calls: 23
temp_realloc calls: 2
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[72]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 1 1
mbcs blocks size: 0 1032 1032
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 7
temp_free calls: 7
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[73]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 30 30
mbcs blocks size: 0 7392 7392
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 68
temp_free calls: 68
temp_realloc calls: 1
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[74]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 108 108
mbcs blocks size: 0 17472 17472
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 371
temp_free calls: 371
temp_realloc calls: 1
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[75]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 129 129
mbcs blocks size: 0 14872 14872
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 228
temp_free calls: 228
temp_realloc calls: 1
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[76]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 1 1
mbcs blocks size: 0 1032 1032
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 15
temp_free calls: 15
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[77]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 60 60
mbcs blocks size: 0 9584 9584
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 211
temp_free calls: 211
temp_realloc calls: 2
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[78]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 1 1
mbcs blocks size: 0 1032 1032
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 74
temp_free calls: 74
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[79]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 1 1
mbcs blocks size: 0 1032 1032
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 9
temp_free calls: 9
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[80]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 1 1
mbcs blocks size: 0 1032 1032
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 13
temp_free calls: 13
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[81]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 37 37
mbcs blocks size: 0 11432 11432
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 135
temp_free calls: 135
temp_realloc calls: 1
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[82]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 53 53
mbcs blocks size: 0 13648 13648
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 388
temp_free calls: 388
temp_realloc calls: 3
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[83]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 53 53
mbcs blocks size: 0 10672 10672
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 77
temp_free calls: 77
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[84]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 1 1
mbcs blocks size: 0 1032 1032
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 13
temp_free calls: 13
temp_realloc calls: 1
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[85]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 1 1
mbcs blocks size: 0 1032 1032
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 18
temp_free calls: 18
temp_realloc calls: 2
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[86]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 150 150
mbcs blocks size: 0 19040 19040
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 293
temp_free calls: 293
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[87]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 22 22
mbcs blocks size: 0 7656 7656
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 79
temp_free calls: 79
temp_realloc calls: 1
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[88]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 8 8
mbcs blocks size: 0 8136 8136
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 68
temp_free calls: 68
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[89]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 1 1
mbcs blocks size: 0 1032 1032
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 16
temp_free calls: 16
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[90]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 2 2
mbcs blocks size: 0 8200 8200
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 25
temp_free calls: 25
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[91]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 189 189
mbcs blocks size: 0 28440 28440
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 449
temp_free calls: 449
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[92]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 18 18
mbcs blocks size: 0 5080 5080
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 104
temp_free calls: 104
temp_realloc calls: 7
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[93]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 1 1
mbcs blocks size: 0 1032 1032
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 13
temp_free calls: 13
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[94]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 222 222
mbcs blocks size: 0 40880 40880
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 476
temp_free calls: 476
temp_realloc calls: 1
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[95]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 1 1
mbcs blocks size: 0 1032 1032
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 12
temp_free calls: 12
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[96]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 148 148
mbcs blocks size: 0 22200 22200
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 290
temp_free calls: 290
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[97]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 1 1
mbcs blocks size: 0 1032 1032
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 28
temp_free calls: 28
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[98]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 1 1
mbcs blocks size: 0 1032 1032
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 43
temp_free calls: 43
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[99]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 1 1
mbcs blocks size: 0 1032 1032
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 28
temp_free calls: 28
temp_realloc calls: 2
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[100]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 57 57
mbcs blocks size: 0 9792 9792
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 138
temp_free calls: 138
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[101]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 1 1
mbcs blocks size: 0 1032 1032
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 12
temp_free calls: 12
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[102]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 1 1
mbcs blocks size: 0 1032 1032
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 184
temp_free calls: 184
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[103]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 241 241
mbcs blocks size: 0 43656 43656
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 467
temp_free calls: 467
temp_realloc calls: 1
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[104]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 61 61
mbcs blocks size: 0 13376 13376
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 305
temp_free calls: 305
temp_realloc calls: 3
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[105]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 1 1
mbcs blocks size: 0 1032 1032
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 12
temp_free calls: 12
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[106]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 1 1
mbcs blocks size: 0 1032 1032
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 17
temp_free calls: 17
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[107]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 1 1
mbcs blocks size: 0 1032 1032
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 17
temp_free calls: 17
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[108]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 1 1
mbcs blocks size: 0 1032 1032
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 60
temp_free calls: 60
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[109]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 1 1
mbcs blocks size: 0 1032 1032
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 15
temp_free calls: 15
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[110]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 11 11
mbcs blocks size: 0 8200 8200
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 48
temp_free calls: 48
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[111]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 13 13
mbcs blocks size: 0 8200 8200
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 48
temp_free calls: 48
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[112]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 1 1
mbcs blocks size: 0 1032 1032
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 17
temp_free calls: 17
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[113]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 57 57
mbcs blocks size: 0 19568 19568
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 241
temp_free calls: 241
temp_realloc calls: 1
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[114]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 1 1
mbcs blocks size: 0 1032 1032
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 34
temp_free calls: 34
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[115]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 171 171
mbcs blocks size: 0 26416 26416
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 355
temp_free calls: 355
temp_realloc calls: 3
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[116]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 346 346
mbcs blocks size: 0 48296 48296
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 648
temp_free calls: 648
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[117]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 1 1
mbcs blocks size: 0 1032 1032
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 35
temp_free calls: 35
temp_realloc calls: 1
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[118]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 1 1
mbcs blocks size: 0 1032 1032
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 38
temp_free calls: 38
temp_realloc calls: 1
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[119]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 33 33
mbcs blocks size: 0 9480 9480
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 91
temp_free calls: 91
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[120]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 23 23
mbcs blocks size: 0 7840 7840
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 147
temp_free calls: 147
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[121]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 1 1
mbcs blocks size: 0 1032 1032
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 16
temp_free calls: 16
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[122]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 1 1
mbcs blocks size: 0 1032 1032
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 26
temp_free calls: 26
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[123]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 91 91
mbcs blocks size: 0 19080 19080
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 258
temp_free calls: 258
temp_realloc calls: 1
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[124]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 6 6
mbcs blocks size: 0 5280 5280
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 26
temp_free calls: 26
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[125]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 93 93
mbcs blocks size: 0 18128 18128
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 367
temp_free calls: 367
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[126]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 129 129
mbcs blocks size: 0 22320 22320
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 322
temp_free calls: 322
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[127]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 1 1
mbcs blocks size: 0 1032 1032
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 24
temp_free calls: 24
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[128]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 36 36
mbcs blocks size: 0 9528 9528
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 87
temp_free calls: 87
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[129]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 22 22
mbcs blocks size: 0 8176 8176
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 54
temp_free calls: 54
temp_realloc calls: 2
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[130]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 1 1
mbcs blocks size: 0 1032 1032
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 19
temp_free calls: 19
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[131]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 78 78
mbcs blocks size: 0 18120 18120
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 267
temp_free calls: 267
temp_realloc calls: 1
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[132]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 8 8
mbcs blocks size: 0 17896 17896
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 160
temp_free calls: 160
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[133]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 1 1
mbcs blocks size: 0 1032 1032
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 95
temp_free calls: 95
temp_realloc calls: 1
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[134]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 13 13
mbcs blocks size: 0 9680 9680
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 89
temp_free calls: 89
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[135]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 135 135
mbcs blocks size: 0 31832 31832
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 288
temp_free calls: 288
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[136]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 1 1
mbcs blocks size: 0 1032 1032
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 14
temp_free calls: 14
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[137]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 1 1
mbcs blocks size: 0 1032 1032
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 12
temp_free calls: 12
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[138]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 26 26
mbcs blocks size: 0 8304 8304
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 60
temp_free calls: 60
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[139]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 1 1
mbcs blocks size: 0 1032 1032
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 10
temp_free calls: 10
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[140]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 1 1
mbcs blocks size: 0 1032 1032
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 7
temp_free calls: 7
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[141]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 1 1
mbcs blocks size: 0 1032 1032
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 10
temp_free calls: 10
temp_realloc calls: 2
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[142]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 8 8
mbcs blocks size: 0 5176 5176
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 28
temp_free calls: 28
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[143]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 37 37
mbcs blocks size: 0 7872 7872
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 120
temp_free calls: 120
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[144]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 1 1
mbcs blocks size: 0 1032 1032
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 13
temp_free calls: 13
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[145]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 1 1
mbcs blocks size: 0 1032 1032
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 12
temp_free calls: 12
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[146]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 1 1
mbcs blocks size: 0 1032 1032
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 11
temp_free calls: 11
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[147]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 28 28
mbcs blocks size: 0 7968 7968
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 47
temp_free calls: 47
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[148]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 1 1
mbcs blocks size: 0 1032 1032
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 11
temp_free calls: 11
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[149]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 63 63
mbcs blocks size: 0 9264 9264
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 94
temp_free calls: 94
temp_realloc calls: 1
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[150]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 1 1
mbcs blocks size: 0 1032 1032
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 23
temp_free calls: 23
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[151]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 13 13
mbcs blocks size: 0 10112 10112
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 45
temp_free calls: 45
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[152]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 1 1
mbcs blocks size: 0 1032 1032
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 11
temp_free calls: 11
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[153]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 1 1
mbcs blocks size: 0 1032 1032
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 13
temp_free calls: 13
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[154]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 1 1
mbcs blocks size: 0 1032 1032
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 17
temp_free calls: 17
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[155]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 1 1
mbcs blocks size: 0 1032 1032
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 25
temp_free calls: 25
temp_realloc calls: 1
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[156]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 1 1
mbcs blocks size: 0 1032 1032
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 10
temp_free calls: 10
temp_realloc calls: 2
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[157]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 1 1
mbcs blocks size: 0 1032 1032
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 17
temp_free calls: 17
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[158]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 35 35
mbcs blocks size: 0 14144 14144
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 150
temp_free calls: 150
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[159]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 1 1
mbcs blocks size: 0 1032 1032
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 9
temp_free calls: 9
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[160]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 1 1
mbcs blocks size: 0 1032 1032
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 4
temp_free calls: 4
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[161]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 1 1
mbcs blocks size: 0 1032 1032
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 12
temp_free calls: 12
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[162]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 38 38
mbcs blocks size: 0 13112 13112
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 171
temp_free calls: 171
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[163]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 1 1
mbcs blocks size: 0 1032 1032
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 16
temp_free calls: 16
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[164]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 1 1
mbcs blocks size: 0 1032 1032
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 21
temp_free calls: 21
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[165]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 1 1
mbcs blocks size: 0 1032 1032
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 31
temp_free calls: 31
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[166]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 13 13
mbcs blocks size: 0 7384 7384
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 224
temp_free calls: 224
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[167]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 1 1
mbcs blocks size: 0 1032 1032
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 25
temp_free calls: 25
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[168]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 1 1
mbcs blocks size: 0 1032 1032
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 9
temp_free calls: 9
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[169]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 14 14
mbcs blocks size: 0 5232 5232
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 110
temp_free calls: 110
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[170]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 1 1
mbcs blocks size: 0 1032 1032
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 20
temp_free calls: 20
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[171]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 56 56
mbcs blocks size: 0 10808 10808
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 154
temp_free calls: 154
temp_realloc calls: 2
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[172]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 1 1
mbcs blocks size: 0 1032 1032
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 66
temp_free calls: 66
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[173]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 1 1
mbcs blocks size: 0 1032 1032
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 16
temp_free calls: 16
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[174]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 1 1
mbcs blocks size: 0 1032 1032
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 14
temp_free calls: 14
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[175]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 26 26
mbcs blocks size: 0 5688 5688
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 83
temp_free calls: 83
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[176]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 1 1
mbcs blocks size: 0 1032 1032
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 25
temp_free calls: 25
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[177]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 124 124
mbcs blocks size: 0 12544 12544
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 228
temp_free calls: 228
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[178]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 14 14
mbcs blocks size: 0 8424 8424
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 61
temp_free calls: 61
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[179]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 1 1
mbcs blocks size: 0 1032 1032
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 10
temp_free calls: 10
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[180]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 1 1
mbcs blocks size: 0 1032 1032
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 8
temp_free calls: 8
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[181]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 1 1
mbcs blocks size: 0 1032 1032
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 67
temp_free calls: 67
temp_realloc calls: 2
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[182]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 1 1
mbcs blocks size: 0 1032 1032
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 17
temp_free calls: 17
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[183]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 1 1
mbcs blocks size: 0 1032 1032
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 12
temp_free calls: 12
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[184]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 1 1
mbcs blocks size: 0 1032 1032
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 22
temp_free calls: 22
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[185]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 129 129
mbcs blocks size: 0 23384 23384
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 303
temp_free calls: 303
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[186]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 1 1
mbcs blocks size: 0 1032 1032
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 28
temp_free calls: 28
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[187]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 1 1
mbcs blocks size: 0 1032 1032
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 28
temp_free calls: 28
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[188]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 1 1
mbcs blocks size: 0 1032 1032
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 25
temp_free calls: 25
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[189]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 1 1
mbcs blocks size: 0 1032 1032
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 32
temp_free calls: 32
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[190]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 1 1
mbcs blocks size: 0 1032 1032
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 28
temp_free calls: 28
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[191]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 1 1
mbcs blocks size: 0 1032 1032
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 15
temp_free calls: 15
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[192]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 1 1
mbcs blocks size: 0 1032 1032
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 18
temp_free calls: 18
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[193]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 1 1
mbcs blocks size: 0 1032 1032
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 21
temp_free calls: 21
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[194]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 1 1
mbcs blocks size: 0 1032 1032
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 11
temp_free calls: 11
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[195]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 1 1
mbcs blocks size: 0 8200 8200
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 14
temp_free calls: 14
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[196]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 1 1
mbcs blocks size: 0 1032 1032
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 16
temp_free calls: 16
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[197]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 1 1
mbcs blocks size: 0 65544 65544
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 13
temp_free calls: 13
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[198]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 2 2
mbcs blocks size: 0 1032 1032
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 41
temp_free calls: 41
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[199]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 1 1
mbcs blocks size: 0 1032 1032
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 18
temp_free calls: 18
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[200]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 1 1
mbcs blocks size: 0 1032 1032
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 14
temp_free calls: 14
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[201]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 1 1
mbcs blocks size: 0 1032 1032
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 14
temp_free calls: 14
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[202]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 1 1
mbcs blocks size: 0 1032 1032
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 40
temp_free calls: 40
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[203]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 1 1
mbcs blocks size: 0 1032 1032
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 28
temp_free calls: 28
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[204]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 1 1
mbcs blocks size: 0 1032 1032
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 11
temp_free calls: 11
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[205]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 104 104
mbcs blocks size: 0 19752 19752
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 199
temp_free calls: 199
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[206]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 36 36
mbcs blocks size: 0 7896 7896
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 127
temp_free calls: 127
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[207]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 1 1
mbcs blocks size: 0 1032 1032
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 10
temp_free calls: 10
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[208]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 1 1
mbcs blocks size: 0 1032 1032
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 10
temp_free calls: 10
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[209]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 1 1
mbcs blocks size: 0 1032 1032
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 31
temp_free calls: 31
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[210]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 2 2
mbcs blocks size: 0 1032 1032
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 39
temp_free calls: 39
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[211]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 1 1
mbcs blocks size: 0 1032 1032
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 33
temp_free calls: 33
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[212]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 7 7
mbcs blocks size: 0 12976 12976
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 163
temp_free calls: 163
temp_realloc calls: 2
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[213]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 1 1
mbcs blocks size: 0 1032 1032
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 14
temp_free calls: 14
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[214]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 1 1
mbcs blocks size: 0 1032 1032
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 17
temp_free calls: 17
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[215]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 1 1
mbcs blocks size: 0 1032 1032
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 15
temp_free calls: 15
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[216]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 1 1
mbcs blocks size: 0 1032 1032
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 12
temp_free calls: 12
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[217]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 1 1
mbcs blocks size: 0 1032 1032
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 13
temp_free calls: 13
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[218]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 1 1
mbcs blocks size: 0 1032 1032
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 12
temp_free calls: 12
temp_realloc calls: 1
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[219]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 1 1
mbcs blocks size: 0 1032 1032
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 12
temp_free calls: 12
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[220]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 85 85
mbcs blocks size: 0 19232 19232
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 210
temp_free calls: 210
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[221]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 1 1
mbcs blocks size: 0 1032 1032
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 13
temp_free calls: 13
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[222]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 1 1
mbcs blocks size: 0 1032 1032
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 14
temp_free calls: 14
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[223]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 49 49
mbcs blocks size: 0 10576 10576
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 128
temp_free calls: 128
temp_realloc calls: 2
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[224]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 1 1
mbcs blocks size: 0 1032 1032
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 29
temp_free calls: 29
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[225]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 1 1
mbcs blocks size: 0 1032 1032
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 16
temp_free calls: 16
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[226]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 1 1
mbcs blocks size: 0 1032 1032
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 39
temp_free calls: 39
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[227]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 1 1
mbcs blocks size: 0 1032 1032
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 41
temp_free calls: 41
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[228]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 14 14
mbcs blocks size: 0 6264 6264
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 30
temp_free calls: 30
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[229]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 12 12
mbcs blocks size: 0 4192 4192
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 65
temp_free calls: 65
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[230]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 31 31
mbcs blocks size: 0 7912 7912
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 105
temp_free calls: 105
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[231]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 1 1
mbcs blocks size: 0 1032 1032
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 18
temp_free calls: 18
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[232]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 128 128
mbcs blocks size: 0 18400 18400
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 249
temp_free calls: 249
temp_realloc calls: 1
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[233]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 49 49
mbcs blocks size: 0 13208 13208
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 159
temp_free calls: 159
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[234]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 1 1
mbcs blocks size: 0 1032 1032
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 22
temp_free calls: 22
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[235]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 1 1
mbcs blocks size: 0 1032 1032
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 25
temp_free calls: 25
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[236]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 12 12
mbcs blocks size: 0 4192 4192
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 59
temp_free calls: 59
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[237]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 1 1
mbcs blocks size: 0 1032 1032
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 50
temp_free calls: 50
temp_realloc calls: 1
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[238]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 1 1
mbcs blocks size: 0 1032 1032
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 176
temp_free calls: 176
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[239]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 1 1
mbcs blocks size: 0 1032 1032
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 158
temp_free calls: 158
temp_realloc calls: 2
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[240]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 1 1
mbcs blocks size: 0 1032 1032
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 29
temp_free calls: 29
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[241]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 69 69
mbcs blocks size: 0 12776 12776
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 223
temp_free calls: 223
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[242]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 37 37
mbcs blocks size: 0 8200 8200
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 103
temp_free calls: 103
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[243]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 1 1
mbcs blocks size: 0 1032 1032
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 20
temp_free calls: 20
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[244]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 214 214
mbcs blocks size: 0 40112 40112
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 626
temp_free calls: 626
temp_realloc calls: 1
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[245]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 28 28
mbcs blocks size: 0 8944 8944
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 52
temp_free calls: 52
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[246]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 1 1
mbcs blocks size: 0 1032 1032
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 7
temp_free calls: 7
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[247]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 1 1
mbcs blocks size: 0 1032 1032
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 18
temp_free calls: 18
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[248]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 1 1
mbcs blocks size: 0 1032 1032
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 25
temp_free calls: 25
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[249]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 5 5
mbcs blocks size: 0 3952 3952
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 45
temp_free calls: 45
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[250]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 8 8
mbcs blocks size: 0 10808 10808
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 116
temp_free calls: 116
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[251]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 1 1
mbcs blocks size: 0 1032 1032
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 17
temp_free calls: 17
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[252]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 117 117
mbcs blocks size: 0 27272 27272
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 318
temp_free calls: 318
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[253]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 1 1
mbcs blocks size: 0 1032 1032
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 17
temp_free calls: 17
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[254]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 34 34
mbcs blocks size: 0 8240 8240
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 79
temp_free calls: 79
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[255]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 13 13
mbcs blocks size: 0 5320 5320
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 29
temp_free calls: 29
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:temp_alloc[256]
versions: 0.9 2.2
option e: true
option t: 257
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 90
option rsbcmt: 80
option rmbcmt: 100
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 10
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: af
mbcs blocks: 0 49 49
mbcs blocks size: 0 9208 9208
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131104 131104 131104
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131104
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
temp_alloc calls: 183
temp_free calls: 183
temp_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:sl_alloc[1]
versions: 2.1 2.2
option e: true
option t: 16
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 80
option rsbcmt: 80
option rmbcmt: 50
option mmbcs: 32768
option mmsbc: 256
option mmmbc: 3
option lmbcs: 5242880
option smbcs: 262144
option mbcgs: 10
option mbsd: 3
option as: gf
mbcs blocks: 0 37 37
mbcs blocks size: 0 888 888
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 32792 32792 32792
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 32792
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
sl_alloc calls: 272
sl_free calls: 272
sl_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:sl_alloc[2]
versions: 2.1 2.2
option e: true
option t: 16
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 80
option rsbcmt: 80
option rmbcmt: 50
option mmbcs: 32768
option mmsbc: 256
option mmmbc: 3
option lmbcs: 5242880
option smbcs: 262144
option mbcgs: 10
option mbsd: 3
option as: gf
mbcs blocks: 0 4 4
mbcs blocks size: 0 96 96
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 32792 32792 32792
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 32792
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
sl_alloc calls: 147
sl_free calls: 147
sl_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:sl_alloc[3]
versions: 2.1 2.2
option e: true
option t: 16
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 80
option rsbcmt: 80
option rmbcmt: 50
option mmbcs: 32768
option mmsbc: 256
option mmmbc: 3
option lmbcs: 5242880
option smbcs: 262144
option mbcgs: 10
option mbsd: 3
option as: gf
mbcs blocks: 0 81 81
mbcs blocks size: 0 1944 1944
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 32792 32792 32792
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 32792
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
sl_alloc calls: 452
sl_free calls: 452
sl_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:sl_alloc[4]
versions: 2.1 2.2
option e: true
option t: 16
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 80
option rsbcmt: 80
option rmbcmt: 50
option mmbcs: 32768
option mmsbc: 256
option mmmbc: 3
option lmbcs: 5242880
option smbcs: 262144
option mbcgs: 10
option mbsd: 3
option as: gf
mbcs blocks: 0 23 23
mbcs blocks size: 0 552 552
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 32792 32792 32792
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 32792
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
sl_alloc calls: 239
sl_free calls: 239
sl_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:sl_alloc[5]
versions: 2.1 2.2
option e: true
option t: 16
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 80
option rsbcmt: 80
option rmbcmt: 50
option mmbcs: 32768
option mmsbc: 256
option mmmbc: 3
option lmbcs: 5242880
option smbcs: 262144
option mbcgs: 10
option mbsd: 3
option as: gf
mbcs blocks: 0 28 28
mbcs blocks size: 0 672 672
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 32792 32792 32792
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 32792
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
sl_alloc calls: 222
sl_free calls: 222
sl_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:sl_alloc[6]
versions: 2.1 2.2
option e: true
option t: 16
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 80
option rsbcmt: 80
option rmbcmt: 50
option mmbcs: 32768
option mmsbc: 256
option mmmbc: 3
option lmbcs: 5242880
option smbcs: 262144
option mbcgs: 10
option mbsd: 3
option as: gf
mbcs blocks: 0 28 28
mbcs blocks size: 0 672 672
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 32792 32792 32792
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 32792
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
sl_alloc calls: 232
sl_free calls: 232
sl_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:sl_alloc[7]
versions: 2.1 2.2
option e: true
option t: 16
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 80
option rsbcmt: 80
option rmbcmt: 50
option mmbcs: 32768
option mmsbc: 256
option mmmbc: 3
option lmbcs: 5242880
option smbcs: 262144
option mbcgs: 10
option mbsd: 3
option as: gf
mbcs blocks: 0 6 6
mbcs blocks size: 0 144 144
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 32792 32792 32792
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 32792
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
sl_alloc calls: 210
sl_free calls: 210
sl_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:sl_alloc[8]
versions: 2.1 2.2
option e: true
option t: 16
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 80
option rsbcmt: 80
option rmbcmt: 50
option mmbcs: 32768
option mmsbc: 256
option mmmbc: 3
option lmbcs: 5242880
option smbcs: 262144
option mbcgs: 10
option mbsd: 3
option as: gf
mbcs blocks: 1 18 18
mbcs blocks size: 24 432 432
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 32792 32792 32792
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 32792
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
sl_alloc calls: 268
sl_free calls: 267
sl_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:sl_alloc[9]
versions: 2.1 2.2
option e: true
option t: 16
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 80
option rsbcmt: 80
option rmbcmt: 50
option mmbcs: 32768
option mmsbc: 256
option mmmbc: 3
option lmbcs: 5242880
option smbcs: 262144
option mbcgs: 10
option mbsd: 3
option as: gf
mbcs blocks: 0 18 18
mbcs blocks size: 0 432 432
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 32792 32792 32792
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 32792
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
sl_alloc calls: 226
sl_free calls: 226
sl_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:sl_alloc[10]
versions: 2.1 2.2
option e: true
option t: 16
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 80
option rsbcmt: 80
option rmbcmt: 50
option mmbcs: 32768
option mmsbc: 256
option mmmbc: 3
option lmbcs: 5242880
option smbcs: 262144
option mbcgs: 10
option mbsd: 3
option as: gf
mbcs blocks: 0 10 10
mbcs blocks size: 0 240 240
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 32792 32792 32792
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 32792
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
sl_alloc calls: 285
sl_free calls: 285
sl_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:sl_alloc[11]
versions: 2.1 2.2
option e: true
option t: 16
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 80
option rsbcmt: 80
option rmbcmt: 50
option mmbcs: 32768
option mmsbc: 256
option mmmbc: 3
option lmbcs: 5242880
option smbcs: 262144
option mbcgs: 10
option mbsd: 3
option as: gf
mbcs blocks: 0 42 42
mbcs blocks size: 0 1008 1008
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 32792 32792 32792
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 32792
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
sl_alloc calls: 436
sl_free calls: 436
sl_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:sl_alloc[12]
versions: 2.1 2.2
option e: true
option t: 16
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 80
option rsbcmt: 80
option rmbcmt: 50
option mmbcs: 32768
option mmsbc: 256
option mmmbc: 3
option lmbcs: 5242880
option smbcs: 262144
option mbcgs: 10
option mbsd: 3
option as: gf
mbcs blocks: 0 81 81
mbcs blocks size: 0 1944 1944
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 32792 32792 32792
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 32792
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
sl_alloc calls: 428
sl_free calls: 428
sl_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:sl_alloc[13]
versions: 2.1 2.2
option e: true
option t: 16
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 80
option rsbcmt: 80
option rmbcmt: 50
option mmbcs: 32768
option mmsbc: 256
option mmmbc: 3
option lmbcs: 5242880
option smbcs: 262144
option mbcgs: 10
option mbsd: 3
option as: gf
mbcs blocks: 0 35 35
mbcs blocks size: 0 840 840
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 32792 32792 32792
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 32792
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
sl_alloc calls: 268
sl_free calls: 268
sl_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:sl_alloc[14]
versions: 2.1 2.2
option e: true
option t: 16
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 80
option rsbcmt: 80
option rmbcmt: 50
option mmbcs: 32768
option mmsbc: 256
option mmmbc: 3
option lmbcs: 5242880
option smbcs: 262144
option mbcgs: 10
option mbsd: 3
option as: gf
mbcs blocks: 0 15 15
mbcs blocks size: 0 360 360
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 32792 32792 32792
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 32792
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
sl_alloc calls: 216
sl_free calls: 216
sl_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:sl_alloc[15]
versions: 2.1 2.2
option e: true
option t: 16
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 80
option rsbcmt: 80
option rmbcmt: 50
option mmbcs: 32768
option mmsbc: 256
option mmmbc: 3
option lmbcs: 5242880
option smbcs: 262144
option mbcgs: 10
option mbsd: 3
option as: gf
mbcs blocks: 0 74 74
mbcs blocks size: 0 1776 1776
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 32792 32792 32792
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 32792
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
sl_alloc calls: 284
sl_free calls: 284
sl_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:sl_alloc[16]
versions: 2.1 2.2
option e: true
option t: 16
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 80
option rsbcmt: 80
option rmbcmt: 50
option mmbcs: 32768
option mmsbc: 256
option mmmbc: 3
option lmbcs: 5242880
option smbcs: 262144
option mbcgs: 10
option mbsd: 3
option as: gf
mbcs blocks: 0 35 35
mbcs blocks size: 0 840 840
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 32792 32792 32792
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 32792
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
sl_alloc calls: 338
sl_free calls: 338
sl_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:std_alloc[1]
versions: 0.9 2.2
option e: true
option t: 16
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 20
option rsbcmt: 80
option rmbcmt: 50
option mmbcs: 32768
option mmsbc: 256
option mmmbc: 3
option lmbcs: 5242880
option smbcs: 262144
option mbcgs: 10
option as: bf
mbcs blocks: 103 108 108
mbcs blocks size: 3624 3856 3856
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 32792 32792 32792
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 32792
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
std_alloc calls: 358
std_free calls: 255
std_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:std_alloc[2]
versions: 0.9 2.2
option e: true
option t: 16
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 20
option rsbcmt: 80
option rmbcmt: 50
option mmbcs: 32768
option mmsbc: 256
option mmmbc: 3
option lmbcs: 5242880
option smbcs: 262144
option mbcgs: 10
option as: bf
mbcs blocks: 336 342 342
mbcs blocks size: 11584 12928 12928
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 32792 32792 32792
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 32792
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
std_alloc calls: 523
std_free calls: 187
std_realloc calls: 1
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:std_alloc[3]
versions: 0.9 2.2
option e: true
option t: 16
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 20
option rsbcmt: 80
option rmbcmt: 50
option mmbcs: 32768
option mmsbc: 256
option mmmbc: 3
option lmbcs: 5242880
option smbcs: 262144
option mbcgs: 10
option as: bf
mbcs blocks: 71 75 75
mbcs blocks size: 7664 7888 7888
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 32792 32792 32792
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 32792
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
std_alloc calls: 253
std_free calls: 182
std_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:std_alloc[4]
versions: 0.9 2.2
option e: true
option t: 16
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 20
option rsbcmt: 80
option rmbcmt: 50
option mmbcs: 32768
option mmsbc: 256
option mmmbc: 3
option lmbcs: 5242880
option smbcs: 262144
option mbcgs: 10
option as: bf
mbcs blocks: 56 67 67
mbcs blocks size: 1872 2256 2256
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 32792 32792 32792
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 32792
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
std_alloc calls: 228
std_free calls: 172
std_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:std_alloc[5]
versions: 0.9 2.2
option e: true
option t: 16
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 20
option rsbcmt: 80
option rmbcmt: 50
option mmbcs: 32768
option mmsbc: 256
option mmmbc: 3
option lmbcs: 5242880
option smbcs: 262144
option mbcgs: 10
option as: bf
mbcs blocks: 65 69 69
mbcs blocks size: 2080 3904 3904
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 32792 32792 32792
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 32792
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
std_alloc calls: 238
std_free calls: 173
std_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:std_alloc[6]
versions: 0.9 2.2
option e: true
option t: 16
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 20
option rsbcmt: 80
option rmbcmt: 50
option mmbcs: 32768
option mmsbc: 256
option mmmbc: 3
option lmbcs: 5242880
option smbcs: 262144
option mbcgs: 10
option as: bf
mbcs blocks: 55 61 61
mbcs blocks size: 1768 2064 2064
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 32792 32792 32792
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 32792
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
std_alloc calls: 208
std_free calls: 153
std_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:std_alloc[7]
versions: 0.9 2.2
option e: true
option t: 16
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 20
option rsbcmt: 80
option rmbcmt: 50
option mmbcs: 32768
option mmsbc: 256
option mmmbc: 3
option lmbcs: 5242880
option smbcs: 262144
option mbcgs: 10
option as: bf
mbcs blocks: 68 73 73
mbcs blocks size: 2304 2632 2632
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 32792 32792 32792
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 32792
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
std_alloc calls: 252
std_free calls: 184
std_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:std_alloc[8]
versions: 0.9 2.2
option e: true
option t: 16
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 20
option rsbcmt: 80
option rmbcmt: 50
option mmbcs: 32768
option mmsbc: 256
option mmmbc: 3
option lmbcs: 5242880
option smbcs: 262144
option mbcgs: 10
option as: bf
mbcs blocks: 66 69 69
mbcs blocks size: 2128 2352 2352
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 32792 32792 32792
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 32792
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
std_alloc calls: 238
std_free calls: 172
std_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:std_alloc[9]
versions: 0.9 2.2
option e: true
option t: 16
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 20
option rsbcmt: 80
option rmbcmt: 50
option mmbcs: 32768
option mmsbc: 256
option mmmbc: 3
option lmbcs: 5242880
option smbcs: 262144
option mbcgs: 10
option as: bf
mbcs blocks: 66 76 76
mbcs blocks size: 2336 2800 2800
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 32792 32792 32792
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 32792
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
std_alloc calls: 238
std_free calls: 172
std_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:std_alloc[10]
versions: 0.9 2.2
option e: true
option t: 16
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 20
option rsbcmt: 80
option rmbcmt: 50
option mmbcs: 32768
option mmsbc: 256
option mmmbc: 3
option lmbcs: 5242880
option smbcs: 262144
option mbcgs: 10
option as: bf
mbcs blocks: 59 68 68
mbcs blocks size: 3952 4288 4288
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 32792 32792 32792
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 32792
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
std_alloc calls: 222
std_free calls: 163
std_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:std_alloc[11]
versions: 0.9 2.2
option e: true
option t: 16
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 20
option rsbcmt: 80
option rmbcmt: 50
option mmbcs: 32768
option mmsbc: 256
option mmmbc: 3
option lmbcs: 5242880
option smbcs: 262144
option mbcgs: 10
option as: bf
mbcs blocks: 72 84 84
mbcs blocks size: 2496 2992 2992
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 32792 32792 32792
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 32792
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
std_alloc calls: 255
std_free calls: 183
std_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:std_alloc[12]
versions: 0.9 2.2
option e: true
option t: 16
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 20
option rsbcmt: 80
option rmbcmt: 50
option mmbcs: 32768
option mmsbc: 256
option mmmbc: 3
option lmbcs: 5242880
option smbcs: 262144
option mbcgs: 10
option as: bf
mbcs blocks: 65 72 72
mbcs blocks size: 2176 2448 2448
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 32792 32792 32792
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 32792
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
std_alloc calls: 234
std_free calls: 169
std_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:std_alloc[13]
versions: 0.9 2.2
option e: true
option t: 16
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 20
option rsbcmt: 80
option rmbcmt: 50
option mmbcs: 32768
option mmsbc: 256
option mmmbc: 3
option lmbcs: 5242880
option smbcs: 262144
option mbcgs: 10
option as: bf
mbcs blocks: 67 78 78
mbcs blocks size: 2296 2824 2824
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 32792 32792 32792
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 32792
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
std_alloc calls: 242
std_free calls: 175
std_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:std_alloc[14]
versions: 0.9 2.2
option e: true
option t: 16
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 20
option rsbcmt: 80
option rmbcmt: 50
option mmbcs: 32768
option mmsbc: 256
option mmmbc: 3
option lmbcs: 5242880
option smbcs: 262144
option mbcgs: 10
option as: bf
mbcs blocks: 59 64 64
mbcs blocks size: 1944 2168 2168
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 32792 32792 32792
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 32792
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
std_alloc calls: 217
std_free calls: 158
std_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:std_alloc[15]
versions: 0.9 2.2
option e: true
option t: 16
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 20
option rsbcmt: 80
option rmbcmt: 50
option mmbcs: 32768
option mmsbc: 256
option mmmbc: 3
option lmbcs: 5242880
option smbcs: 262144
option mbcgs: 10
option as: bf
mbcs blocks: 71 83 83
mbcs blocks size: 2440 3056 3056
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 32792 32792 32792
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 32792
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
std_alloc calls: 256
std_free calls: 185
std_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:std_alloc[16]
versions: 0.9 2.2
option e: true
option t: 16
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 20
option rsbcmt: 80
option rmbcmt: 50
option mmbcs: 32768
option mmsbc: 256
option mmmbc: 3
option lmbcs: 5242880
option smbcs: 262144
option mbcgs: 10
option as: bf
mbcs blocks: 63 68 68
mbcs blocks size: 2120 2408 2408
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 32792 32792 32792
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 32792
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
std_alloc calls: 231
std_free calls: 168
std_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:ll_alloc
versions: 0.9 2.2
option e: true
option t: false
option ramv: false
option sbct: 4294967295
option asbcst: 0
option rsbcst: 0
option rsbcmt: 0
option rmbcmt: 0
option mmbcs: 2097152
option mmsbc: 0
option mmmbc: 0
option lmbcs: 10485760
option smbcs: 1048576
option mbcgs: 10
option as: aobf
mbcs blocks: 1749 1749 1749
mbcs blocks size: 7928112 7932896 7932896
mbcs carriers: 7 7 7
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 7
mbcs carriers size: 8388640 8388640 8388640
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 8388640
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
ll_alloc calls: 1759
ll_free calls: 10
ll_realloc calls: 311
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 8
sys_free calls: 1
sys_realloc calls: 0
=allocator:eheap_alloc[1]
versions: 2.1 2.2
option e: true
option t: 16
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 50
option rsbcmt: 80
option rmbcmt: 50
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 25
option lmbcs: 5242880
option smbcs: 262144
option mbcgs: 10
option mbsd: 3
option as: gf
mbcs blocks: 2 42 42
mbcs blocks size: 1888 107160 107160
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131096 131096 131096
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131096
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
eheap_alloc calls: 263
eheap_free calls: 261
eheap_realloc calls: 9
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:eheap_alloc[2]
versions: 2.1 2.2
option e: true
option t: 16
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 50
option rsbcmt: 80
option rmbcmt: 50
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 25
option lmbcs: 5242880
option smbcs: 262144
option mbcgs: 10
option mbsd: 3
option as: gf
mbcs blocks: 4 49 49
mbcs blocks size: 16192 126400 126400
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131096 131096 131096
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131096
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
eheap_alloc calls: 182
eheap_free calls: 178
eheap_realloc calls: 10
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:eheap_alloc[3]
versions: 2.1 2.2
option e: true
option t: 16
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 50
option rsbcmt: 80
option rmbcmt: 50
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 25
option lmbcs: 5242880
option smbcs: 262144
option mbcgs: 10
option mbsd: 3
option as: gf
mbcs blocks: 9 31 31
mbcs blocks size: 90680 132048 132048
mbcs carriers: 2 2 2
mbcs mseg carriers: 1
mbcs sys_alloc carriers: 1
mbcs carriers size: 393240 393240 393240
mbcs mseg carriers size: 262144
mbcs sys_alloc carriers size: 131096
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
eheap_alloc calls: 358
eheap_free calls: 349
eheap_realloc calls: 9
mseg_alloc calls: 1
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:eheap_alloc[4]
versions: 2.1 2.2
option e: true
option t: 16
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 50
option rsbcmt: 80
option rmbcmt: 50
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 25
option lmbcs: 5242880
option smbcs: 262144
option mbcgs: 10
option mbsd: 3
option as: gf
mbcs blocks: 3 16 16
mbcs blocks size: 4912 123872 123872
mbcs carriers: 1 2 2
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131096 393240 393240
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131096
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
eheap_alloc calls: 229
eheap_free calls: 226
eheap_realloc calls: 4
mseg_alloc calls: 1
mseg_dealloc calls: 1
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:eheap_alloc[5]
versions: 2.1 2.2
option e: true
option t: 16
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 50
option rsbcmt: 80
option rmbcmt: 50
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 25
option lmbcs: 5242880
option smbcs: 262144
option mbcgs: 10
option mbsd: 3
option as: gf
mbcs blocks: 4 18 18
mbcs blocks size: 35936 182528 182528
mbcs carriers: 1 2 2
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131096 393240 393240
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131096
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
eheap_alloc calls: 273
eheap_free calls: 269
eheap_realloc calls: 9
mseg_alloc calls: 1
mseg_dealloc calls: 1
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:eheap_alloc[6]
versions: 2.1 2.2
option e: true
option t: 16
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 50
option rsbcmt: 80
option rmbcmt: 50
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 25
option lmbcs: 5242880
option smbcs: 262144
option mbcgs: 10
option mbsd: 3
option as: gf
mbcs blocks: 4 28 28
mbcs blocks size: 122568 246568 246568
mbcs carriers: 2 2 2
mbcs mseg carriers: 1
mbcs sys_alloc carriers: 1
mbcs carriers size: 393240 393240 393240
mbcs mseg carriers size: 262144
mbcs sys_alloc carriers size: 131096
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
eheap_alloc calls: 281
eheap_free calls: 277
eheap_realloc calls: 5
mseg_alloc calls: 1
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:eheap_alloc[7]
versions: 2.1 2.2
option e: true
option t: 16
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 50
option rsbcmt: 80
option rmbcmt: 50
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 25
option lmbcs: 5242880
option smbcs: 262144
option mbcgs: 10
option mbsd: 3
option as: gf
mbcs blocks: 3 14 14
mbcs blocks size: 5488 60560 60560
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131096 131096 131096
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131096
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
eheap_alloc calls: 177
eheap_free calls: 174
eheap_realloc calls: 13
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:eheap_alloc[8]
versions: 2.1 2.2
option e: true
option t: 16
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 50
option rsbcmt: 80
option rmbcmt: 50
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 25
option lmbcs: 5242880
option smbcs: 262144
option mbcgs: 10
option mbsd: 3
option as: gf
mbcs blocks: 3 13 13
mbcs blocks size: 22216 111120 111120
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131096 131096 131096
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131096
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
eheap_alloc calls: 204
eheap_free calls: 201
eheap_realloc calls: 7
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:eheap_alloc[9]
versions: 2.1 2.2
option e: true
option t: 16
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 50
option rsbcmt: 80
option rmbcmt: 50
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 25
option lmbcs: 5242880
option smbcs: 262144
option mbcgs: 10
option mbsd: 3
option as: gf
mbcs blocks: 6 22 22
mbcs blocks size: 36888 91640 91640
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131096 131096 131096
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131096
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
eheap_alloc calls: 172
eheap_free calls: 166
eheap_realloc calls: 10
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:eheap_alloc[10]
versions: 2.1 2.2
option e: true
option t: 16
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 50
option rsbcmt: 80
option rmbcmt: 50
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 25
option lmbcs: 5242880
option smbcs: 262144
option mbcgs: 10
option mbsd: 3
option as: gf
mbcs blocks: 6 14 14
mbcs blocks size: 31072 100568 100568
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131096 131096 131096
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131096
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
eheap_alloc calls: 158
eheap_free calls: 152
eheap_realloc calls: 6
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:eheap_alloc[11]
versions: 2.1 2.2
option e: true
option t: 16
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 50
option rsbcmt: 80
option rmbcmt: 50
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 25
option lmbcs: 5242880
option smbcs: 262144
option mbcgs: 10
option mbsd: 3
option as: gf
mbcs blocks: 7 24 24
mbcs blocks size: 58136 86328 86328
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131096 131096 131096
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131096
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
eheap_alloc calls: 459
eheap_free calls: 452
eheap_realloc calls: 7
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:eheap_alloc[12]
versions: 2.1 2.2
option e: true
option t: 16
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 50
option rsbcmt: 80
option rmbcmt: 50
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 25
option lmbcs: 5242880
option smbcs: 262144
option mbcgs: 10
option mbsd: 3
option as: gf
mbcs blocks: 5 75 75
mbcs blocks size: 5872 65808 65808
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131096 131096 131096
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131096
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
eheap_alloc calls: 269
eheap_free calls: 264
eheap_realloc calls: 3
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:eheap_alloc[13]
versions: 2.1 2.2
option e: true
option t: 16
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 50
option rsbcmt: 80
option rmbcmt: 50
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 25
option lmbcs: 5242880
option smbcs: 262144
option mbcgs: 10
option mbsd: 3
option as: gf
mbcs blocks: 6 38 38
mbcs blocks size: 8320 61504 61504
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131096 131096 131096
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131096
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
eheap_alloc calls: 278
eheap_free calls: 272
eheap_realloc calls: 5
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:eheap_alloc[14]
versions: 2.1 2.2
option e: true
option t: 16
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 50
option rsbcmt: 80
option rmbcmt: 50
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 25
option lmbcs: 5242880
option smbcs: 262144
option mbcgs: 10
option mbsd: 3
option as: gf
mbcs blocks: 0 11 11
mbcs blocks size: 0 78208 78208
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131096 131096 131096
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131096
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
eheap_alloc calls: 152
eheap_free calls: 152
eheap_realloc calls: 8
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:eheap_alloc[15]
versions: 2.1 2.2
option e: true
option t: 16
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 50
option rsbcmt: 80
option rmbcmt: 50
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 25
option lmbcs: 5242880
option smbcs: 262144
option mbcgs: 10
option mbsd: 3
option as: gf
mbcs blocks: 4 51 51
mbcs blocks size: 4928 84608 84608
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131096 131096 131096
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131096
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
eheap_alloc calls: 290
eheap_free calls: 286
eheap_realloc calls: 10
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:eheap_alloc[16]
versions: 2.1 2.2
option e: true
option t: 16
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 50
option rsbcmt: 80
option rmbcmt: 50
option mmbcs: 131072
option mmsbc: 256
option mmmbc: 25
option lmbcs: 5242880
option smbcs: 262144
option mbcgs: 10
option mbsd: 3
option as: gf
mbcs blocks: 1 35 35
mbcs blocks size: 10344 73720 73720
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 131096 131096 131096
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 131096
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
eheap_alloc calls: 251
eheap_free calls: 250
eheap_realloc calls: 8
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:ets_alloc[1]
versions: 0.9 2.2
option e: true
option t: 16
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 20
option rsbcmt: 80
option rmbcmt: 50
option mmbcs: 32768
option mmsbc: 256
option mmmbc: 25
option lmbcs: 5242880
option smbcs: 262144
option mbcgs: 10
option as: bf
mbcs blocks: 12 40 40
mbcs blocks size: 5120 11072 11072
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 32792 32792 32792
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 32792
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
ets_alloc calls: 68
ets_free calls: 56
ets_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:ets_alloc[2]
versions: 0.9 2.2
option e: true
option t: 16
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 20
option rsbcmt: 80
option rmbcmt: 50
option mmbcs: 32768
option mmsbc: 256
option mmmbc: 25
option lmbcs: 5242880
option smbcs: 262144
option mbcgs: 10
option as: bf
mbcs blocks: 20 45 45
mbcs blocks size: 7696 12104 12104
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 32792 32792 32792
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 32792
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
ets_alloc calls: 53
ets_free calls: 33
ets_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:ets_alloc[3]
versions: 0.9 2.2
option e: true
option t: 16
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 20
option rsbcmt: 80
option rmbcmt: 50
option mmbcs: 32768
option mmsbc: 256
option mmmbc: 25
option lmbcs: 5242880
option smbcs: 262144
option mbcgs: 10
option as: bf
mbcs blocks: 90 150 150
mbcs blocks size: 12544 20848 20848
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 32792 32792 32792
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 32792
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
ets_alloc calls: 199
ets_free calls: 109
ets_realloc calls: 6
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:ets_alloc[4]
versions: 0.9 2.2
option e: true
option t: 16
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 20
option rsbcmt: 80
option rmbcmt: 50
option mmbcs: 32768
option mmsbc: 256
option mmmbc: 25
option lmbcs: 5242880
option smbcs: 262144
option mbcgs: 10
option as: bf
mbcs blocks: 58 97 97
mbcs blocks size: 23416 29624 29624
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 32792 32792 32792
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 32792
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
ets_alloc calls: 180
ets_free calls: 122
ets_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:ets_alloc[5]
versions: 0.9 2.2
option e: true
option t: 16
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 20
option rsbcmt: 80
option rmbcmt: 50
option mmbcs: 32768
option mmsbc: 256
option mmmbc: 25
option lmbcs: 5242880
option smbcs: 262144
option mbcgs: 10
option as: bf
mbcs blocks: 8 24 24
mbcs blocks size: 4720 7872 7872
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 32792 32792 32792
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 32792
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
ets_alloc calls: 52
ets_free calls: 44
ets_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:ets_alloc[6]
versions: 0.9 2.2
option e: true
option t: 16
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 20
option rsbcmt: 80
option rmbcmt: 50
option mmbcs: 32768
option mmsbc: 256
option mmmbc: 25
option lmbcs: 5242880
option smbcs: 262144
option mbcgs: 10
option as: bf
mbcs blocks: 49 77 77
mbcs blocks size: 6944 12848 12848
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 32792 32792 32792
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 32792
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
ets_alloc calls: 145
ets_free calls: 96
ets_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:ets_alloc[7]
versions: 0.9 2.2
option e: true
option t: 16
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 20
option rsbcmt: 80
option rmbcmt: 50
option mmbcs: 32768
option mmsbc: 256
option mmmbc: 25
option lmbcs: 5242880
option smbcs: 262144
option mbcgs: 10
option as: bf
mbcs blocks: 17 66 66
mbcs blocks size: 6808 16104 16104
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 32792 32792 32792
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 32792
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
ets_alloc calls: 78
ets_free calls: 61
ets_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:ets_alloc[8]
versions: 0.9 2.2
option e: true
option t: 16
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 20
option rsbcmt: 80
option rmbcmt: 50
option mmbcs: 32768
option mmsbc: 256
option mmmbc: 25
option lmbcs: 5242880
option smbcs: 262144
option mbcgs: 10
option as: bf
mbcs blocks: 7 35 35
mbcs blocks size: 3648 7776 7776
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 32792 32792 32792
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 32792
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
ets_alloc calls: 99
ets_free calls: 92
ets_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:ets_alloc[9]
versions: 0.9 2.2
option e: true
option t: 16
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 20
option rsbcmt: 80
option rmbcmt: 50
option mmbcs: 32768
option mmsbc: 256
option mmmbc: 25
option lmbcs: 5242880
option smbcs: 262144
option mbcgs: 10
option as: bf
mbcs blocks: 127 145 145
mbcs blocks size: 16776 19776 19776
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 32792 32792 32792
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 32792
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
ets_alloc calls: 156
ets_free calls: 29
ets_realloc calls: 4
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:ets_alloc[10]
versions: 0.9 2.2
option e: true
option t: 16
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 20
option rsbcmt: 80
option rmbcmt: 50
option mmbcs: 32768
option mmsbc: 256
option mmmbc: 25
option lmbcs: 5242880
option smbcs: 262144
option mbcgs: 10
option as: bf
mbcs blocks: 8 12 12
mbcs blocks size: 4256 4656 4656
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 32792 32792 32792
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 32792
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
ets_alloc calls: 12
ets_free calls: 4
ets_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:ets_alloc[11]
versions: 0.9 2.2
option e: true
option t: 16
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 20
option rsbcmt: 80
option rmbcmt: 50
option mmbcs: 32768
option mmsbc: 256
option mmmbc: 25
option lmbcs: 5242880
option smbcs: 262144
option mbcgs: 10
option as: bf
mbcs blocks: 12 49 49
mbcs blocks size: 5120 13936 13936
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 32792 32792 32792
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 32792
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
ets_alloc calls: 73
ets_free calls: 61
ets_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:ets_alloc[12]
versions: 0.9 2.2
option e: true
option t: 16
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 20
option rsbcmt: 80
option rmbcmt: 50
option mmbcs: 32768
option mmsbc: 256
option mmmbc: 25
option lmbcs: 5242880
option smbcs: 262144
option mbcgs: 10
option as: bf
mbcs blocks: 13 36 36
mbcs blocks size: 4848 9104 9104
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 32792 32792 32792
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 32792
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
ets_alloc calls: 38
ets_free calls: 25
ets_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:ets_alloc[13]
versions: 0.9 2.2
option e: true
option t: 16
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 20
option rsbcmt: 80
option rmbcmt: 50
option mmbcs: 32768
option mmsbc: 256
option mmmbc: 25
option lmbcs: 5242880
option smbcs: 262144
option mbcgs: 10
option as: bf
mbcs blocks: 27 72 72
mbcs blocks size: 10192 18144 18144
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 32792 32792 32792
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 32792
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
ets_alloc calls: 116
ets_free calls: 89
ets_realloc calls: 2
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:ets_alloc[14]
versions: 0.9 2.2
option e: true
option t: 16
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 20
option rsbcmt: 80
option rmbcmt: 50
option mmbcs: 32768
option mmsbc: 256
option mmmbc: 25
option lmbcs: 5242880
option smbcs: 262144
option mbcgs: 10
option as: bf
mbcs blocks: 8 393 393
mbcs blocks size: 3384 36120 36120
mbcs carriers: 1 2 2
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 32792 294936 294936
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 32792
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
ets_alloc calls: 416
ets_free calls: 408
ets_realloc calls: 63
mseg_alloc calls: 1
mseg_dealloc calls: 1
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:ets_alloc[15]
versions: 0.9 2.2
option e: true
option t: 16
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 20
option rsbcmt: 80
option rmbcmt: 50
option mmbcs: 32768
option mmsbc: 256
option mmmbc: 25
option lmbcs: 5242880
option smbcs: 262144
option mbcgs: 10
option as: bf
mbcs blocks: 25 51 51
mbcs blocks size: 8752 17176 17176
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 32792 32792 32792
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 32792
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
ets_alloc calls: 60
ets_free calls: 35
ets_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:ets_alloc[16]
versions: 0.9 2.2
option e: true
option t: 16
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 20
option rsbcmt: 80
option rmbcmt: 50
option mmbcs: 32768
option mmsbc: 256
option mmmbc: 25
option lmbcs: 5242880
option smbcs: 262144
option mbcgs: 10
option as: bf
mbcs blocks: 7 17 17
mbcs blocks size: 3280 6200 6200
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 32792 32792 32792
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 32792
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
ets_alloc calls: 22
ets_free calls: 15
ets_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:fix_alloc
option e: true
proc: 33668 13844
atom_entry: 224508 224460
export_entry: 193628 193532
module_entry: 5684 5564
reg_proc: 1492 700
monitor_sh: 1644 364
nlink_sh: 4908 2412
proc_list: 28 28
fun_entry: 48532 47524
db_tab: 7732 2996
driver_event_data_state: 28 28
driver_select_data_state: 356 84
=allocator:binary_alloc[1]
versions: 0.9 2.2
option e: true
option t: 16
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 20
option rsbcmt: 80
option rmbcmt: 50
option mmbcs: 32768
option mmsbc: 256
option mmmbc: 12
option lmbcs: 5242880
option smbcs: 262144
option mbcgs: 10
option as: bf
mbcs blocks: 0 7 7
mbcs blocks size: 0 45840 45840
mbcs carriers: 1 2 2
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 32792 294936 294936
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 32792
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
binary_alloc calls: 183
binary_free calls: 183
binary_realloc calls: 6
mseg_alloc calls: 1
mseg_dealloc calls: 1
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:binary_alloc[2]
versions: 0.9 2.2
option e: true
option t: 16
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 20
option rsbcmt: 80
option rmbcmt: 50
option mmbcs: 32768
option mmsbc: 256
option mmmbc: 12
option lmbcs: 5242880
option smbcs: 262144
option mbcgs: 10
option as: bf
mbcs blocks: 0 9 9
mbcs blocks size: 0 133152 133152
mbcs carriers: 1 2 2
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 32792 294936 294936
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 32792
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
binary_alloc calls: 147
binary_free calls: 147
binary_realloc calls: 7
mseg_alloc calls: 3
mseg_dealloc calls: 3
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:binary_alloc[3]
versions: 0.9 2.2
option e: true
option t: 16
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 20
option rsbcmt: 80
option rmbcmt: 50
option mmbcs: 32768
option mmsbc: 256
option mmmbc: 12
option lmbcs: 5242880
option smbcs: 262144
option mbcgs: 10
option as: bf
mbcs blocks: 2 7 7
mbcs blocks size: 5584 271064 271064
mbcs carriers: 1 2 2
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 32792 311320 311320
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 32792
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
binary_alloc calls: 177
binary_free calls: 175
binary_realloc calls: 3
mseg_alloc calls: 7
mseg_dealloc calls: 7
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:binary_alloc[4]
versions: 0.9 2.2
option e: true
option t: 16
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 20
option rsbcmt: 80
option rmbcmt: 50
option mmbcs: 32768
option mmsbc: 256
option mmmbc: 12
option lmbcs: 5242880
option smbcs: 262144
option mbcgs: 10
option as: bf
mbcs blocks: 1 7 7
mbcs blocks size: 144 65672 65672
mbcs carriers: 1 2 2
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 32792 311320 311320
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 32792
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
binary_alloc calls: 181
binary_free calls: 180
binary_realloc calls: 6
mseg_alloc calls: 4
mseg_dealloc calls: 4
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:binary_alloc[5]
versions: 0.9 2.2
option e: true
option t: 16
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 20
option rsbcmt: 80
option rmbcmt: 50
option mmbcs: 32768
option mmsbc: 256
option mmmbc: 12
option lmbcs: 5242880
option smbcs: 262144
option mbcgs: 10
option as: bf
mbcs blocks: 1 4 4
mbcs blocks size: 360 41120 41120
mbcs carriers: 1 2 2
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 32792 294936 294936
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 32792
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
binary_alloc calls: 117
binary_free calls: 116
binary_realloc calls: 0
mseg_alloc calls: 2
mseg_dealloc calls: 2
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:binary_alloc[6]
versions: 0.9 2.2
option e: true
option t: 16
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 20
option rsbcmt: 80
option rmbcmt: 50
option mmbcs: 32768
option mmsbc: 256
option mmmbc: 12
option lmbcs: 5242880
option smbcs: 262144
option mbcgs: 10
option as: bf
mbcs blocks: 0 4 4
mbcs blocks size: 0 67064 67064
mbcs carriers: 1 2 2
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 32792 294936 294936
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 32792
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
binary_alloc calls: 149
binary_free calls: 149
binary_realloc calls: 2
mseg_alloc calls: 2
mseg_dealloc calls: 2
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:binary_alloc[7]
versions: 0.9 2.2
option e: true
option t: 16
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 20
option rsbcmt: 80
option rmbcmt: 50
option mmbcs: 32768
option mmsbc: 256
option mmmbc: 12
option lmbcs: 5242880
option smbcs: 262144
option mbcgs: 10
option as: bf
mbcs blocks: 0 4 4
mbcs blocks size: 0 71160 71160
mbcs carriers: 1 2 2
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 32792 294936 294936
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 32792
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
binary_alloc calls: 138
binary_free calls: 138
binary_realloc calls: 3
mseg_alloc calls: 6
mseg_dealloc calls: 6
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:binary_alloc[8]
versions: 0.9 2.2
option e: true
option t: 16
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 20
option rsbcmt: 80
option rmbcmt: 50
option mmbcs: 32768
option mmsbc: 256
option mmmbc: 12
option lmbcs: 5242880
option smbcs: 262144
option mbcgs: 10
option as: bf
mbcs blocks: 0 5 5
mbcs blocks size: 0 83720 83720
mbcs carriers: 1 2 2
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 32792 294936 294936
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 32792
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
binary_alloc calls: 168
binary_free calls: 168
binary_realloc calls: 1
mseg_alloc calls: 1
mseg_dealloc calls: 1
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:binary_alloc[9]
versions: 0.9 2.2
option e: true
option t: 16
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 20
option rsbcmt: 80
option rmbcmt: 50
option mmbcs: 32768
option mmsbc: 256
option mmmbc: 12
option lmbcs: 5242880
option smbcs: 262144
option mbcgs: 10
option as: bf
mbcs blocks: 6 9 9
mbcs blocks size: 192 56496 56496
mbcs carriers: 1 2 2
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 32792 294936 294936
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 32792
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
binary_alloc calls: 150
binary_free calls: 144
binary_realloc calls: 7
mseg_alloc calls: 2
mseg_dealloc calls: 2
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:binary_alloc[10]
versions: 0.9 2.2
option e: true
option t: 16
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 20
option rsbcmt: 80
option rmbcmt: 50
option mmbcs: 32768
option mmsbc: 256
option mmmbc: 12
option lmbcs: 5242880
option smbcs: 262144
option mbcgs: 10
option as: bf
mbcs blocks: 0 4 4
mbcs blocks size: 0 75328 75328
mbcs carriers: 1 2 2
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 32792 311320 311320
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 32792
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
binary_alloc calls: 107
binary_free calls: 107
binary_realloc calls: 0
mseg_alloc calls: 2
mseg_dealloc calls: 2
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:binary_alloc[11]
versions: 0.9 2.2
option e: true
option t: 16
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 20
option rsbcmt: 80
option rmbcmt: 50
option mmbcs: 32768
option mmsbc: 256
option mmmbc: 12
option lmbcs: 5242880
option smbcs: 262144
option mbcgs: 10
option as: bf
mbcs blocks: 0 11 11
mbcs blocks size: 0 111360 111360
mbcs carriers: 1 2 2
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 32792 294936 294936
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 32792
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
binary_alloc calls: 150
binary_free calls: 150
binary_realloc calls: 7
mseg_alloc calls: 7
mseg_dealloc calls: 7
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:binary_alloc[12]
versions: 0.9 2.2
option e: true
option t: 16
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 20
option rsbcmt: 80
option rmbcmt: 50
option mmbcs: 32768
option mmsbc: 256
option mmmbc: 12
option lmbcs: 5242880
option smbcs: 262144
option mbcgs: 10
option as: bf
mbcs blocks: 2 3 3
mbcs blocks size: 9600 70856 70856
mbcs carriers: 1 2 2
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 32792 311320 311320
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 32792
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
binary_alloc calls: 124
binary_free calls: 122
binary_realloc calls: 1
mseg_alloc calls: 1
mseg_dealloc calls: 1
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:binary_alloc[13]
versions: 0.9 2.2
option e: true
option t: 16
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 20
option rsbcmt: 80
option rmbcmt: 50
option mmbcs: 32768
option mmsbc: 256
option mmmbc: 12
option lmbcs: 5242880
option smbcs: 262144
option mbcgs: 10
option as: bf
mbcs blocks: 0 3 3
mbcs blocks size: 0 65672 65672
mbcs carriers: 1 2 2
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 32792 311320 311320
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 32792
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
binary_alloc calls: 149
binary_free calls: 149
binary_realloc calls: 0
mseg_alloc calls: 3
mseg_dealloc calls: 3
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:binary_alloc[14]
versions: 0.9 2.2
option e: true
option t: 16
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 20
option rsbcmt: 80
option rmbcmt: 50
option mmbcs: 32768
option mmsbc: 256
option mmmbc: 12
option lmbcs: 5242880
option smbcs: 262144
option mbcgs: 10
option as: bf
mbcs blocks: 0 4 4
mbcs blocks size: 0 66864 66864
mbcs carriers: 1 2 2
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 32792 294936 294936
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 32792
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
binary_alloc calls: 121
binary_free calls: 121
binary_realloc calls: 0
mseg_alloc calls: 2
mseg_dealloc calls: 2
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:binary_alloc[15]
versions: 0.9 2.2
option e: true
option t: 16
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 20
option rsbcmt: 80
option rmbcmt: 50
option mmbcs: 32768
option mmsbc: 256
option mmmbc: 12
option lmbcs: 5242880
option smbcs: 262144
option mbcgs: 10
option as: bf
mbcs blocks: 0 4 4
mbcs blocks size: 0 81136 81136
mbcs carriers: 1 2 2
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 32792 294936 294936
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 32792
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
binary_alloc calls: 134
binary_free calls: 134
binary_realloc calls: 0
mseg_alloc calls: 4
mseg_dealloc calls: 4
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:binary_alloc[16]
versions: 0.9 2.2
option e: true
option t: 16
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 20
option rsbcmt: 80
option rmbcmt: 50
option mmbcs: 32768
option mmsbc: 256
option mmmbc: 12
option lmbcs: 5242880
option smbcs: 262144
option mbcgs: 10
option as: bf
mbcs blocks: 0 6 6
mbcs blocks size: 0 131392 131392
mbcs carriers: 1 2 2
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 32792 311320 311320
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 32792
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
binary_alloc calls: 122
binary_free calls: 122
binary_realloc calls: 0
mseg_alloc calls: 4
mseg_dealloc calls: 4
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:driver_alloc[1]
versions: 0.9 2.2
option e: true
option t: 16
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 20
option rsbcmt: 80
option rmbcmt: 50
option mmbcs: 32768
option mmsbc: 256
option mmmbc: 3
option lmbcs: 5242880
option smbcs: 262144
option mbcgs: 10
option as: bf
mbcs blocks: 2 6 6
mbcs blocks size: 192 17184 17184
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 32792 32792 32792
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 32792
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
driver_alloc calls: 283
driver_free calls: 281
driver_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:driver_alloc[2]
versions: 0.9 2.2
option e: true
option t: 16
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 20
option rsbcmt: 80
option rmbcmt: 50
option mmbcs: 32768
option mmsbc: 256
option mmmbc: 3
option lmbcs: 5242880
option smbcs: 262144
option mbcgs: 10
option as: bf
mbcs blocks: 1 5 5
mbcs blocks size: 48 8608 8608
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 32792 32792 32792
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 32792
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
driver_alloc calls: 206
driver_free calls: 205
driver_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:driver_alloc[3]
versions: 0.9 2.2
option e: true
option t: 16
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 20
option rsbcmt: 80
option rmbcmt: 50
option mmbcs: 32768
option mmsbc: 256
option mmmbc: 3
option lmbcs: 5242880
option smbcs: 262144
option mbcgs: 10
option as: bf
mbcs blocks: 1 6 6
mbcs blocks size: 352 9296 9296
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 32792 32792 32792
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 32792
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
driver_alloc calls: 210
driver_free calls: 209
driver_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:driver_alloc[4]
versions: 0.9 2.2
option e: true
option t: 16
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 20
option rsbcmt: 80
option rmbcmt: 50
option mmbcs: 32768
option mmsbc: 256
option mmmbc: 3
option lmbcs: 5242880
option smbcs: 262144
option mbcgs: 10
option as: bf
mbcs blocks: 0 5 5
mbcs blocks size: 0 8968 8968
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 32792 32792 32792
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 32792
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
driver_alloc calls: 193
driver_free calls: 193
driver_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:driver_alloc[5]
versions: 0.9 2.2
option e: true
option t: 16
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 20
option rsbcmt: 80
option rmbcmt: 50
option mmbcs: 32768
option mmsbc: 256
option mmmbc: 3
option lmbcs: 5242880
option smbcs: 262144
option mbcgs: 10
option as: bf
mbcs blocks: 0 4 4
mbcs blocks size: 0 8656 8656
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 32792 32792 32792
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 32792
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
driver_alloc calls: 187
driver_free calls: 187
driver_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:driver_alloc[6]
versions: 0.9 2.2
option e: true
option t: 16
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 20
option rsbcmt: 80
option rmbcmt: 50
option mmbcs: 32768
option mmsbc: 256
option mmmbc: 3
option lmbcs: 5242880
option smbcs: 262144
option mbcgs: 10
option as: bf
mbcs blocks: 0 3 3
mbcs blocks size: 0 8560 8560
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 32792 32792 32792
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 32792
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
driver_alloc calls: 175
driver_free calls: 175
driver_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:driver_alloc[7]
versions: 0.9 2.2
option e: true
option t: 16
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 20
option rsbcmt: 80
option rmbcmt: 50
option mmbcs: 32768
option mmsbc: 256
option mmmbc: 3
option lmbcs: 5242880
option smbcs: 262144
option mbcgs: 10
option as: bf
mbcs blocks: 0 5 5
mbcs blocks size: 0 8984 8984
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 32792 32792 32792
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 32792
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
driver_alloc calls: 218
driver_free calls: 218
driver_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:driver_alloc[8]
versions: 0.9 2.2
option e: true
option t: 16
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 20
option rsbcmt: 80
option rmbcmt: 50
option mmbcs: 32768
option mmsbc: 256
option mmmbc: 3
option lmbcs: 5242880
option smbcs: 262144
option mbcgs: 10
option as: bf
mbcs blocks: 0 4 4
mbcs blocks size: 0 8768 8768
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 32792 32792 32792
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 32792
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
driver_alloc calls: 213
driver_free calls: 213
driver_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:driver_alloc[9]
versions: 0.9 2.2
option e: true
option t: 16
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 20
option rsbcmt: 80
option rmbcmt: 50
option mmbcs: 32768
option mmsbc: 256
option mmmbc: 3
option lmbcs: 5242880
option smbcs: 262144
option mbcgs: 10
option as: bf
mbcs blocks: 0 4 4
mbcs blocks size: 0 8560 8560
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 32792 32792 32792
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 32792
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
driver_alloc calls: 195
driver_free calls: 195
driver_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:driver_alloc[10]
versions: 0.9 2.2
option e: true
option t: 16
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 20
option rsbcmt: 80
option rmbcmt: 50
option mmbcs: 32768
option mmsbc: 256
option mmmbc: 3
option lmbcs: 5242880
option smbcs: 262144
option mbcgs: 10
option as: bf
mbcs blocks: 0 4 4
mbcs blocks size: 0 8888 8888
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 32792 32792 32792
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 32792
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
driver_alloc calls: 192
driver_free calls: 192
driver_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:driver_alloc[11]
versions: 0.9 2.2
option e: true
option t: 16
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 20
option rsbcmt: 80
option rmbcmt: 50
option mmbcs: 32768
option mmsbc: 256
option mmmbc: 3
option lmbcs: 5242880
option smbcs: 262144
option mbcgs: 10
option as: bf
mbcs blocks: 1 5 5
mbcs blocks size: 96 8656 8656
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 32792 32792 32792
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 32792
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
driver_alloc calls: 234
driver_free calls: 233
driver_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:driver_alloc[12]
versions: 0.9 2.2
option e: true
option t: 16
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 20
option rsbcmt: 80
option rmbcmt: 50
option mmbcs: 32768
option mmsbc: 256
option mmmbc: 3
option lmbcs: 5242880
option smbcs: 262144
option mbcgs: 10
option as: bf
mbcs blocks: 0 4 4
mbcs blocks size: 0 8560 8560
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 32792 32792 32792
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 32792
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
driver_alloc calls: 202
driver_free calls: 202
driver_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:driver_alloc[13]
versions: 0.9 2.2
option e: true
option t: 16
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 20
option rsbcmt: 80
option rmbcmt: 50
option mmbcs: 32768
option mmsbc: 256
option mmmbc: 3
option lmbcs: 5242880
option smbcs: 262144
option mbcgs: 10
option as: bf
mbcs blocks: 1 4 4
mbcs blocks size: 96 8656 8656
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 32792 32792 32792
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 32792
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
driver_alloc calls: 200
driver_free calls: 199
driver_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:driver_alloc[14]
versions: 0.9 2.2
option e: true
option t: 16
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 20
option rsbcmt: 80
option rmbcmt: 50
option mmbcs: 32768
option mmsbc: 256
option mmmbc: 3
option lmbcs: 5242880
option smbcs: 262144
option mbcgs: 10
option as: bf
mbcs blocks: 0 4 4
mbcs blocks size: 0 8800 8800
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 32792 32792 32792
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 32792
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
driver_alloc calls: 190
driver_free calls: 190
driver_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:driver_alloc[15]
versions: 0.9 2.2
option e: true
option t: 16
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 20
option rsbcmt: 80
option rmbcmt: 50
option mmbcs: 32768
option mmsbc: 256
option mmmbc: 3
option lmbcs: 5242880
option smbcs: 262144
option mbcgs: 10
option as: bf
mbcs blocks: 1 5 5
mbcs blocks size: 352 9008 9008
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 32792 32792 32792
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 32792
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
driver_alloc calls: 217
driver_free calls: 216
driver_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:driver_alloc[16]
versions: 0.9 2.2
option e: true
option t: 16
option ramv: false
option sbct: 524288
option asbcst: 4145152
option rsbcst: 20
option rsbcmt: 80
option rmbcmt: 50
option mmbcs: 32768
option mmsbc: 256
option mmmbc: 3
option lmbcs: 5242880
option smbcs: 262144
option mbcgs: 10
option as: bf
mbcs blocks: 1 6 6
mbcs blocks size: 352 9216 9216
mbcs carriers: 1 1 1
mbcs mseg carriers: 0
mbcs sys_alloc carriers: 1
mbcs carriers size: 32792 32792 32792
mbcs mseg carriers size: 0
mbcs sys_alloc carriers size: 32792
sbcs blocks: 0 0 0
sbcs blocks size: 0 0 0
sbcs carriers: 0 0 0
sbcs mseg carriers: 0
sbcs sys_alloc carriers: 0
sbcs carriers size: 0 0 0
sbcs mseg carriers size: 0
sbcs sys_alloc carriers size: 0
driver_alloc calls: 200
driver_free calls: 199
driver_realloc calls: 0
mseg_alloc calls: 0
mseg_dealloc calls: 0
mseg_realloc calls: 0
sys_alloc calls: 1
sys_free calls: 0
sys_realloc calls: 0
=allocator:mseg_alloc
version: 0.9
option amcbf: 4194304
option rmcbf: 20
option mcs: 5
option cci: 1000
cached_segments: 4
cache_hits: 49
segments: 2 6 6
segments_size: 524288 1572864 1572864
segments_watermark: 6
mseg_alloc calls: 56
mseg_dealloc calls: 54
mseg_realloc calls: 0
mseg_create calls: 7
mseg_destroy calls: 1
mseg_recreate calls: 0
mseg_clear_cache calls: 0
mseg_check_cache calls: 1
=allocator:alloc_util
option mmc: 1024
option ycs: 1048576
=allocator:instr
option m: false
option s: false
option t: false
=proc:<0.0.0>
State: Running
Name: init
Spawned as: otp_ring0:start/2
Spawned by: []
Started: Fri Jun 18 10:56:44 2010
Message queue length: 0
Number of heap fragments: 0
Heap fragment data: 0
Link list: [<0.2.0>, <0.6.0>, <0.5.0>]
Reductions: 19055
Stack+heap: 377
OldHeap: 2584
Heap unused: 317
OldHeap unused: 2584
Program counter: 0xf58fe1a8 (init:boot_loop/2 + 32)
CP: 0x00000000 (invalid)
=proc:<0.2.0>
State: Waiting
Name: erl_prim_loader
Spawned as: erlang:apply/2
Spawned by: <0.1.0>
Started: Fri Jun 18 10:56:44 2010
Message queue length: 0
Number of heap fragments: 0
Heap fragment data: 0
Link list: [<0.0.0>, #Port<0.1>]
Reductions: 438429
Stack+heap: 4181
OldHeap: 6765
Heap unused: 2711
OldHeap unused: 6765
Program counter: 0xf590e198 (erl_prim_loader:loop/3 + 92)
CP: 0x00000000 (invalid)
arity = 0
=proc:<0.5.0>
State: Waiting
Name: error_logger
Spawned as: proc_lib:init_p/5
Spawned by: <0.1.0>
Started: Fri Jun 18 10:56:44 2010
Message queue length: 0
Number of heap fragments: 0
Heap fragment data: 0
Link list: [<0.0.0>, {from,<0.55.0>,#Ref<0.0.0.110>}, {to,<0.55.0>,#Ref<0.0.0.482>}, {from,<0.56.0>,#Ref<0.0.0.122>}]
Reductions: 19421
Stack+heap: 6765
OldHeap: 6765
Heap unused: 491
OldHeap unused: 6765
Program counter: 0x74007370 (io:wait_io_mon_reply/2 + 28)
CP: 0x00000000 (invalid)
arity = 0
=proc:<0.6.0>
State: Waiting
Name: application_controller
Spawned as: erlang:apply/2
Spawned by: <0.1.0>
Started: Fri Jun 18 10:56:44 2010
Message queue length: 0
Number of heap fragments: 0
Heap fragment data: 0
Link list: [<0.0.0>, <0.37.0>, <0.8.0>]
Reductions: 27643
Stack+heap: 2584
OldHeap: 17711
Heap unused: 1977
OldHeap unused: 17711
Program counter: 0x819260c0 (gen_server:loop/6 + 144)
CP: 0x00000000 (invalid)
arity = 0
=proc:<0.8.0>
State: Waiting
Spawned as: proc_lib:init_p/5
Spawned by: <0.7.0>
Started: Fri Jun 18 10:56:44 2010
Message queue length: 0
Number of heap fragments: 0
Heap fragment data: 0
Link list: [<0.9.0>, <0.6.0>]
Reductions: 49
Stack+heap: 233
OldHeap: 377
Heap unused: 174
OldHeap unused: 377
Program counter: 0x8194e6f0 (application_master:main_loop/2 + 28)
CP: 0x00000000 (invalid)
arity = 0
=proc:<0.9.0>
State: Waiting
Spawned as: application_master:start_it/4
Spawned by: <0.8.0>
Started: Fri Jun 18 10:56:44 2010
Message queue length: 0
Number of heap fragments: 0
Heap fragment data: 0
Link list: [<0.10.0>, <0.8.0>]
Reductions: 91
Stack+heap: 233
OldHeap: 0
Heap unused: 10
OldHeap unused: 0
Program counter: 0x8194fa90 (application_master:loop_it/4 + 40)
CP: 0x00000000 (invalid)
arity = 0
=proc:<0.10.0>
State: Waiting
Name: kernel_sup
Spawned as: proc_lib:init_p/5
Spawned by: <0.9.0>
Started: Fri Jun 18 10:56:44 2010
Message queue length: 0
Number of heap fragments: 0
Heap fragment data: 0
Link list: [<0.9.0>, <0.12.0>, <0.11.0>, <0.18.0>, <0.25.0>, <0.24.0>, <0.30.0>, <0.33.0>, <0.32.0>, <0.26.0>, <0.16.0>]
Reductions: 1299
Stack+heap: 1597
OldHeap: 377
Heap unused: 820
OldHeap unused: 377
Program counter: 0x819260c0 (gen_server:loop/6 + 144)
CP: 0x00000000 (invalid)
arity = 0
=proc:<0.11.0>
State: Waiting
Name: rex
Spawned as: proc_lib:init_p/5
Spawned by: <0.10.0>
Started: Fri Jun 18 10:56:44 2010
Message queue length: 0
Number of heap fragments: 0
Heap fragment data: 0
Link list: [<0.10.0>]
Reductions: 249
Stack+heap: 610
OldHeap: 377
Heap unused: 344
OldHeap unused: 377
Program counter: 0x819260c0 (gen_server:loop/6 + 144)
CP: 0x00000000 (invalid)
arity = 0
=proc:<0.12.0>
State: Waiting
Name: global_name_server
Spawned as: proc_lib:init_p/5
Spawned by: <0.10.0>
Started: Fri Jun 18 10:56:44 2010
Message queue length: 0
Number of heap fragments: 0
Heap fragment data: 0
Link list: [<0.10.0>, <0.15.0>, <0.14.0>, <0.13.0>]
Reductions: 341
Stack+heap: 377
OldHeap: 377
Heap unused: 225
OldHeap unused: 377
Program counter: 0x819260c0 (gen_server:loop/6 + 144)
CP: 0x00000000 (invalid)
arity = 0
=proc:<0.13.0>
State: Waiting
Spawned as: erlang:apply/2
Spawned by: <0.12.0>
Started: Fri Jun 18 10:56:44 2010
Message queue length: 0
Number of heap fragments: 0
Heap fragment data: 0
Link list: [<0.12.0>]
Reductions: 25
Stack+heap: 233
OldHeap: 0
Heap unused: 172
OldHeap unused: 0
Program counter: 0x819845fc (global:loop_the_locker/1 + 684)
CP: 0x00000000 (invalid)
arity = 0
=proc:<0.14.0>
State: Waiting
Spawned as: erlang:apply/2
Spawned by: <0.12.0>
Started: Fri Jun 18 10:56:44 2010
Message queue length: 0
Number of heap fragments: 0
Heap fragment data: 0
Link list: [<0.12.0>]
Reductions: 4
Stack+heap: 233
OldHeap: 0
Heap unused: 222
OldHeap unused: 0
Program counter: 0x81988a08 (global:collect_deletions/2 + 76)
CP: 0x00000000 (invalid)
arity = 0
=proc:<0.15.0>
State: Waiting
Spawned as: erlang:apply/2
Spawned by: <0.12.0>
Started: Fri Jun 18 10:56:44 2010
Message queue length: 0
Number of heap fragments: 0
Heap fragment data: 0
Link list: [<0.12.0>]
Reductions: 3
Stack+heap: 233
OldHeap: 0
Heap unused: 223
OldHeap unused: 0
Program counter: 0x81988b28 (global:loop_the_registrar/0 + 12)
CP: 0x00000000 (invalid)
arity = 0
=proc:<0.16.0>
State: Waiting
Name: inet_db
Spawned as: proc_lib:init_p/5
Spawned by: <0.10.0>
Started: Fri Jun 18 10:56:44 2010
Message queue length: 0
Number of heap fragments: 0
Heap fragment data: 0
Link list: [<0.10.0>]
Reductions: 161
Stack+heap: 233
OldHeap: 0
Heap unused: 134
OldHeap unused: 0
Program counter: 0x819260c0 (gen_server:loop/6 + 144)
CP: 0x00000000 (invalid)
arity = 0
=proc:<0.18.0>
State: Waiting
Name: net_sup
Spawned as: proc_lib:init_p/5
Spawned by: <0.10.0>
Started: Fri Jun 18 10:56:44 2010
Message queue length: 0
Number of heap fragments: 0
Heap fragment data: 0
Link list: [<0.10.0>, <0.21.0>, <0.20.0>, <0.19.0>]
Reductions: 313
Stack+heap: 377
OldHeap: 610
Heap unused: 29
OldHeap unused: 610
Program counter: 0x819260c0 (gen_server:loop/6 + 144)
CP: 0x00000000 (invalid)
arity = 0
=proc:<0.19.0>
State: Waiting
Name: erl_epmd
Spawned as: proc_lib:init_p/5
Spawned by: <0.18.0>
Started: Fri Jun 18 10:56:44 2010
Message queue length: 0
Number of heap fragments: 0
Heap fragment data: 0
Link list: [#Port<0.97>, <0.18.0>]
Reductions: 165
Stack+heap: 377
OldHeap: 377
Heap unused: 346
OldHeap unused: 377
Program counter: 0x819260c0 (gen_server:loop/6 + 144)
CP: 0x00000000 (invalid)
arity = 0
=proc:<0.20.0>
State: Waiting
Name: auth
Spawned as: proc_lib:init_p/5
Spawned by: <0.18.0>
Started: Fri Jun 18 10:56:44 2010
Message queue length: 0
Number of heap fragments: 0
Heap fragment data: 0
Link list: [<0.18.0>]
Reductions: 847
Stack+heap: 610
OldHeap: 377
Heap unused: 343
OldHeap unused: 377
Program counter: 0x819260c0 (gen_server:loop/6 + 144)
CP: 0x00000000 (invalid)
arity = 0
=proc:<0.21.0>
State: Waiting
Name: net_kernel
Spawned as: proc_lib:init_p/5
Spawned by: <0.18.0>
Started: Fri Jun 18 10:56:44 2010
Message queue length: 0
Number of heap fragments: 0
Heap fragment data: 0
Link list: [#Port<0.93>, <0.22.0>, <0.27.0>, <0.23.0>, <0.18.0>]
Reductions: 542
Stack+heap: 610
OldHeap: 377
Heap unused: 259
OldHeap unused: 377
Program counter: 0x819260c0 (gen_server:loop/6 + 144)
CP: 0x00000000 (invalid)
arity = 0
=proc:<0.22.0>
State: Waiting
Spawned as: inet_tcp_dist:accept_loop/2
Spawned by: <0.21.0>
Started: Fri Jun 18 10:56:44 2010
Message queue length: 0
Number of heap fragments: 0
Heap fragment data: 0
Link list: [<0.21.0>, {from,#Port<0.93>,#Ref<0.0.0.21>}]
Reductions: 276
Stack+heap: 233
OldHeap: 0
Heap unused: 38
OldHeap unused: 0
Program counter: 0xf59181c8 (prim_inet:accept0/2 + 92)
CP: 0x00000000 (invalid)
arity = 0
=proc:<0.23.0>
State: Waiting
Spawned as: net_kernel:ticker/2
Spawned by: <0.21.0>
Started: Fri Jun 18 10:56:44 2010
Message queue length: 0
Number of heap fragments: 0
Heap fragment data: 0
Link list: [<0.21.0>]
Reductions: 3
Stack+heap: 233
OldHeap: 0
Heap unused: 229
OldHeap unused: 0
Program counter: 0x73f3ff24 (net_kernel:ticker_loop/2 + 28)
CP: 0x00000000 (invalid)
arity = 0
=proc:<0.24.0>
State: Waiting
Name: global_group
Spawned as: proc_lib:init_p/5
Spawned by: <0.10.0>
Started: Fri Jun 18 10:56:44 2010
Message queue length: 0
Number of heap fragments: 0
Heap fragment data: 0
Link list: [<0.10.0>]
Reductions: 80
Stack+heap: 233
OldHeap: 0
Heap unused: 105
OldHeap unused: 0
Program counter: 0x819260c0 (gen_server:loop/6 + 144)
CP: 0x00000000 (invalid)
arity = 0
=proc:<0.25.0>
State: Waiting
Name: file_server_2
Spawned as: proc_lib:init_p/5
Spawned by: <0.10.0>
Started: Fri Jun 18 10:56:44 2010
Message queue length: 0
Number of heap fragments: 0
Heap fragment data: 0
Link list: [#Port<0.102>, <0.55.0>, <0.56.0>, <0.10.0>]
Reductions: 7441
Stack+heap: 2584
OldHeap: 2584
Heap unused: 1531
OldHeap unused: 2584
Program counter: 0x819260c0 (gen_server:loop/6 + 144)
CP: 0x00000000 (invalid)
arity = 0
=proc:<0.26.0>
State: Waiting
Name: code_server
Spawned as: erlang:apply/2
Spawned by: <0.10.0>
Started: Fri Jun 18 10:56:44 2010
Message queue length: 0
Number of heap fragments: 0
Heap fragment data: 0
Link list: [<0.10.0>]
Reductions: 121204
Stack+heap: 4181
OldHeap: 10946
Heap unused: 2892
OldHeap unused: 10946
Program counter: 0x73f6df0c (code_server:loop/1 + 64)
CP: 0x00000000 (invalid)
arity = 0
=proc:<0.27.0>
State: Waiting
Spawned as: inet_tcp_dist:do_accept/6
Spawned by: <0.21.0>
Started: Fri Jun 18 10:56:45 2010
Message queue length: 0
Number of heap fragments: 0
Heap fragment data: 0
Link list: [#Port<0.253>, <0.21.0>]
Reductions: 459
Stack+heap: 233
OldHeap: 377
Heap unused: 147
OldHeap unused: 377
Program counter: 0x73f78c78 (dist_util:con_loop/9 + 72)
CP: 0x00000000 (invalid)
arity = 0
=proc:<0.30.0>
State: Waiting
Spawned as: proc_lib:init_p/5
Spawned by: <0.10.0>
Started: Fri Jun 18 10:56:45 2010
Message queue length: 0
Number of heap fragments: 0
Heap fragment data: 0
Link list: [<0.31.0>, <0.10.0>]
Reductions: 197
Stack+heap: 1597
OldHeap: 0
Heap unused: 484
OldHeap unused: 0
Program counter: 0x819260c0 (gen_server:loop/6 + 144)
CP: 0x00000000 (invalid)
arity = 0
=proc:<0.31.0>
State: Waiting
Name: user
Spawned as: user:server/2
Spawned by: <0.30.0>
Started: Fri Jun 18 10:56:45 2010
Message queue length: 0
Number of heap fragments: 0
Heap fragment data: 0
Link list: [#Port<0.305>, <0.30.0>]
Reductions: 2919
Stack+heap: 610
OldHeap: 2584
Heap unused: 75
OldHeap unused: 2584
Program counter: 0x73f1e2f0 (user:server_loop/2 + 32)
CP: 0x00000000 (invalid)
arity = 0
=proc:<0.32.0>
State: Waiting
Spawned as: proc_lib:init_p/5
Spawned by: <0.10.0>
Started: Fri Jun 18 10:56:45 2010
Message queue length: 0
Number of heap fragments: 0
Heap fragment data: 0
Link list: [<0.10.0>]
Reductions: 55
Stack+heap: 233
OldHeap: 0
Heap unused: 155
OldHeap unused: 0
Program counter: 0x819260c0 (gen_server:loop/6 + 144)
CP: 0x00000000 (invalid)
arity = 0
=proc:<0.33.0>
State: Waiting
Name: kernel_safe_sup
Spawned as: proc_lib:init_p/5
Spawned by: <0.10.0>
Started: Fri Jun 18 10:56:45 2010
Message queue length: 0
Number of heap fragments: 0
Heap fragment data: 0
Link list: [<0.10.0>, <0.47.0>, <0.46.0>, <0.94.0>, <0.81.0>, <0.80.0>]
Reductions: 441
Stack+heap: 610
OldHeap: 377
Heap unused: 383
OldHeap unused: 377
Program counter: 0x819260c0 (gen_server:loop/6 + 144)
CP: 0x00000000 (invalid)
arity = 0
=proc:<0.37.0>
State: Waiting
Spawned as: proc_lib:init_p/5
Spawned by: <0.36.0>
Started: Fri Jun 18 10:56:45 2010
Message queue length: 0
Number of heap fragments: 0
Heap fragment data: 0
Link list: [<0.38.0>, <0.6.0>]
Reductions: 27
Stack+heap: 233
OldHeap: 0
Heap unused: 97
OldHeap unused: 0
Program counter: 0x8194e6f0 (application_master:main_loop/2 + 28)
CP: 0x00000000 (invalid)
arity = 0
=proc:<0.38.0>
State: Waiting
Spawned as: application_master:start_it/4
Spawned by: <0.37.0>
Started: Fri Jun 18 10:56:45 2010
Message queue length: 0
Number of heap fragments: 0
Heap fragment data: 0
Link list: [<0.40.0>, <0.37.0>]
Reductions: 91
Stack+heap: 233
OldHeap: 0
Heap unused: 61
OldHeap unused: 0
Program counter: 0x8194fa90 (application_master:loop_it/4 + 40)
CP: 0x00000000 (invalid)
arity = 0
=proc:<0.40.0>
State: Waiting
Name: sasl_sup
Spawned as: proc_lib:init_p/5
Spawned by: <0.38.0>
Started: Fri Jun 18 10:56:45 2010
Message queue length: 0
Number of heap fragments: 0
Heap fragment data: 0
Link list: [<0.38.0>, <0.44.0>, <0.41.0>]
Reductions: 185
Stack+heap: 233
OldHeap: 377
Heap unused: 124
OldHeap unused: 377
Program counter: 0x819260c0 (gen_server:loop/6 + 144)
CP: 0x00000000 (invalid)
arity = 0
=proc:<0.41.0>
State: Waiting
Name: sasl_safe_sup
Spawned as: proc_lib:init_p/5
Spawned by: <0.40.0>
Started: Fri Jun 18 10:56:45 2010
Message queue length: 0
Number of heap fragments: 0
Heap fragment data: 0
Link list: [<0.40.0>, <0.43.0>, <0.42.0>]
Reductions: 200
Stack+heap: 377
OldHeap: 0
Heap unused: 66
OldHeap unused: 0
Program counter: 0x819260c0 (gen_server:loop/6 + 144)
CP: 0x00000000 (invalid)
arity = 0
=proc:<0.42.0>
State: Waiting
Name: alarm_handler
Spawned as: proc_lib:init_p/5
Spawned by: <0.41.0>
Started: Fri Jun 18 10:56:45 2010
Message queue length: 0
Number of heap fragments: 0
Heap fragment data: 0
Link list: [<0.41.0>]
Reductions: 50
Stack+heap: 233
OldHeap: 0
Heap unused: 96
OldHeap unused: 0
Program counter: 0x818f8b7c (gen_event:fetch_msg/5 + 44)
CP: 0x00000000 (invalid)
arity = 0
=proc:<0.43.0>
State: Waiting
Name: overload
Spawned as: proc_lib:init_p/5
Spawned by: <0.41.0>
Started: Fri Jun 18 10:56:45 2010
Message queue length: 0
Number of heap fragments: 0
Heap fragment data: 0
Link list: [<0.41.0>]
Reductions: 47
Stack+heap: 233
OldHeap: 0
Heap unused: 151
OldHeap unused: 0
Program counter: 0x819260c0 (gen_server:loop/6 + 144)
CP: 0x00000000 (invalid)
arity = 0
=proc:<0.44.0>
State: Waiting
Name: release_handler
Spawned as: proc_lib:init_p/5
Spawned by: <0.40.0>
Started: Fri Jun 18 10:56:45 2010
Message queue length: 0
Number of heap fragments: 0
Heap fragment data: 0
Link list: [<0.40.0>]
Reductions: 1408
Stack+heap: 987
OldHeap: 610
Heap unused: 118
OldHeap unused: 610
Program counter: 0x819260c0 (gen_server:loop/6 + 144)
CP: 0x00000000 (invalid)
arity = 0
=proc:<0.46.0>
State: Waiting
Name: dets_sup
Spawned as: proc_lib:init_p/5
Spawned by: <0.33.0>
Started: Fri Jun 18 10:56:45 2010
Message queue length: 0
Number of heap fragments: 0
Heap fragment data: 0
Link list: [<0.33.0>]
Reductions: 259
Stack+heap: 377
OldHeap: 610
Heap unused: 52
OldHeap unused: 610
Program counter: 0x819260c0 (gen_server:loop/6 + 144)
CP: 0x00000000 (invalid)
arity = 0
=proc:<0.47.0>
State: Waiting
Name: dets
Spawned as: proc_lib:init_p/5
Spawned by: <0.33.0>
Started: Fri Jun 18 10:56:45 2010
Message queue length: 0
Number of heap fragments: 0
Heap fragment data: 0
Link list: [<0.33.0>]
Reductions: 375
Stack+heap: 377
OldHeap: 377
Heap unused: 298
OldHeap unused: 377
Program counter: 0x819260c0 (gen_server:loop/6 + 144)
CP: 0x00000000 (invalid)
arity = 0
=proc:<0.55.0>
State: Scheduled
Spawned as: erlang:apply/2
Spawned by: <0.25.0>
Started: Fri Jun 18 10:56:45 2010
Message queue length: 1
Number of heap fragments: 0
Heap fragment data: 0
Link list: [#Port<0.594>, <0.25.0>, {from,<0.5.0>,#Ref<0.0.0.482>}, {to,<0.5.0>,#Ref<0.0.0.110>}]
Reductions: 1861
Stack+heap: 987
OldHeap: 987
Heap unused: 140
OldHeap unused: 987
Program counter: 0xf58f8b80 (prim_file:drv_get_response/1 + 36)
CP: 0x00000000 (invalid)
arity = 0
=proc:<0.56.0>
State: Waiting
Spawned as: erlang:apply/2
Spawned by: <0.25.0>
Started: Fri Jun 18 10:56:45 2010
Message queue length: 0
Number of heap fragments: 0
Heap fragment data: 0
Link list: [#Port<0.597>, <0.25.0>, {to,<0.5.0>,#Ref<0.0.0.122>}]
Reductions: 4539
Stack+heap: 10946
OldHeap: 6765
Heap unused: 3740
OldHeap unused: 6765
Program counter: 0x73fb853c (file_io_server:server_loop/1 + 76)
CP: 0x00000000 (invalid)
arity = 0
=proc:<0.80.0>
State: Waiting
Name: disk_log_sup
Spawned as: proc_lib:init_p/5
Spawned by: <0.33.0>
Started: Fri Jun 18 10:56:45 2010
Message queue length: 0
Number of heap fragments: 0
Heap fragment data: 0
Link list: [<0.33.0>]
Reductions: 1146
Stack+heap: 987
OldHeap: 610
Heap unused: 494
OldHeap unused: 610
Program counter: 0x819260c0 (gen_server:loop/6 + 144)
CP: 0x00000000 (invalid)
arity = 0
=proc:<0.81.0>
State: Waiting
Name: disk_log_server
Spawned as: proc_lib:init_p/5
Spawned by: <0.33.0>
Started: Fri Jun 18 10:56:45 2010
Message queue length: 0
Number of heap fragments: 0
Heap fragment data: 0
Link list: [<0.33.0>]
Reductions: 1399
Stack+heap: 987
OldHeap: 987
Heap unused: 124
OldHeap unused: 987
Program counter: 0x819260c0 (gen_server:loop/6 + 144)
CP: 0x00000000 (invalid)
arity = 0
=proc:<0.94.0>
State: Waiting
Name: timer_server
Spawned as: proc_lib:init_p/5
Spawned by: <0.33.0>
Started: Fri Jun 18 10:56:45 2010
Message queue length: 0
Number of heap fragments: 0
Heap fragment data: 0
Link list: [<0.33.0>]
Reductions: 190
Stack+heap: 233
OldHeap: 377
Heap unused: 140
OldHeap unused: 377
Program counter: 0x819260c0 (gen_server:loop/6 + 144)
CP: 0x00000000 (invalid)
arity = 0
=port:#Port<0.1>
Slot: 1
Connected: <0.2.0>
Links: <0.2.0>
Port controls linked-in driver: efile
=port:#Port<0.93>
Slot: 93
Connected: <0.21.0>
Links: <0.21.0>
Monitors: (<0.22.0>,#Ref<0.0.0.21>)
Port controls linked-in driver: tcp_inet
=port:#Port<0.97>
Slot: 97
Connected: <0.19.0>
Links: <0.19.0>
Port controls linked-in driver: tcp_inet
=port:#Port<0.102>
Slot: 102
Connected: <0.25.0>
Links: <0.25.0>
Port controls linked-in driver: efile
=port:#Port<0.253>
Slot: 253
Connected: <0.27.0>
Links: <0.27.0>
Port controls linked-in driver: tcp_inet
=port:#Port<0.305>
Slot: 305
Connected: <0.31.0>
Links: <0.31.0>
Port is UNIX fd not opened by emulator: 0/1
=port:#Port<0.594>
Slot: 594
Connected: <0.55.0>
Links: <0.55.0>
Port controls linked-in driver: efile
=port:#Port<0.597>
Slot: 597
Connected: <0.56.0>
Links: <0.56.0>
Port controls linked-in driver: efile
=ets:<0.6.0>
Slot: 0
Table: ac_tab
Name: ac_tab
Buckets: 256 
Objects: 32
Words: 2045
=ets:<0.12.0>
Slot: 1
Table: global_locks
Name: global_locks
Buckets: 256 
Objects: 0
Words: 288
=ets:<0.12.0>
Slot: 2
Table: global_names
Name: global_names
Buckets: 256 
Objects: 0
Words: 288
=ets:<0.12.0>
Slot: 3
Table: global_names_ext
Name: global_names_ext
Buckets: 256 
Objects: 0
Words: 288
=ets:<0.12.0>
Slot: 4
Table: global_pid_names
Name: global_pid_names
Buckets: 256 
Objects: 0
Words: 288
=ets:<0.12.0>
Slot: 5
Table: global_pid_ids
Name: global_pid_ids
Buckets: 256 
Objects: 0
Words: 288
=ets:<0.16.0>
Slot: 6
Table: inet_db
Name: inet_db
Buckets: 256 
Objects: 21
Words: 556
=ets:<0.16.0>
Slot: 7
Table: inet_cache
Name: inet_cache
Buckets: 256 
Objects: 0
Words: 288
=ets:<0.16.0>
Slot: 8
Table: inet_hosts
Name: inet_hosts
Buckets: 256 
Objects: 0
Words: 288
=ets:<0.20.0>
Slot: 9
Table: 9
Name: cookies
Buckets: 256 
Objects: 0
Words: 288
=ets:<0.21.0>
Slot: 10
Table: sys_dist
Name: sys_dist
Buckets: 256 
Objects: 1
Words: 326
=ets:<0.25.0>
Slot: 11
Table: file_io_servers
Name: file_io_servers
Buckets: 256 
Objects: 2
Words: 430
=ets:<0.26.0>
Slot: 12
Table: 4108
Name: code
Buckets: 256 
Objects: 325
Words: 18838
=ets:<0.26.0>
Slot: 13
Table: 8205
Name: code_names
Buckets: 256 
Objects: 41
Words: 4163
=ets:<0.47.0>
Slot: 15
Table: dets_registry
Name: dets_registry
Buckets: 256 
Objects: 0
Words: 288
=ets:<0.47.0>
Slot: 16
Table: dets_owners
Name: dets_owners
Buckets: 256 
Objects: 0
Words: 288
=ets:<0.47.0>
Slot: 17
Table: 16401
Name: dets
Buckets: 256 
Objects: 0
Words: 288
=ets:<0.81.0>
Slot: 27
Table: disk_log_names
Name: disk_log_names
Buckets: 256 
Objects: 0
Words: 288
=ets:<0.81.0>
Slot: 28
Table: disk_log_pids
Name: disk_log_pids
Buckets: 256 
Objects: 0
Words: 288
=ets:<0.94.0>
Slot: 29
Table: timer_tab
Name: timer_tab
Ordered set (AVL tree), Elements: 0
Objects: 0
Words: 81
=ets:<0.94.0>
Slot: 30
Table: timer_interval_tab
Name: timer_interval_tab
Buckets: 256 
Objects: 0
Words: 288
=timer:<0.16.0>
Message: refresh_timeout
Time left: 3598255 ms
=node:'rabbit at mail'
=hidden_node:4679
Name: 'rabbitmq_multi7151 at mail'
Controller: #Port<0.253>
Creation: 1
=loaded_modules
Current code: 2933256
Old code: 0
=mod:otp_ring0
Current size: 620
=mod:init
Current size: 34500
=mod:prim_inet
Current size: 49900
=mod:prim_file
Current size: 21777
=mod:zlib
Current size: 6940
=mod:prim_zip
Current size: 14356
=mod:erl_prim_loader
Current size: 39024
=mod:erlang
Current size: 13332
=mod:error_handler
Current size: 3091
Current attributes: 836C00000001680264000376736E6C000000016E1000D23B39A357B2A7F911CFF385E91260E86A6A
Current compilation info
=mod:heart
Current size: 6735
Current attributes: 836C00000001680264000376736E6C000000016E1000BC29771F25E73FAD2B29973D0520F8F06A6A
Current compilation info: 836C0000000468026400076F7074696F6E736C0000000568026400036377646B002F2F6275696C642F6275696C64642F65726C616E672D31322E622E352D646673672F6C69622F6B65726E656C2F73726368026400066F75746469726B00372F6275696C642F6275696C64642F65726C616E672D31322E622E352D646673672F6C69622F6B65726E656C2F7372632F2E2E2F6562696E6802640001696B003A2F6275696C642F6275696C64642F65726C616E672D31322E622E352D646673672F6C69622F6B65726E656C2F7372632F2E2E2F696E636C7564656400137761726E5F6F62736F6C6574655F677561726464000A64656275675F696E666F6A680264000776657273696F6E6B0005342E352E35680264000474696D65680662000007D9610261146105611161036802640006736F757263656B00392F6275696C642F6275696C64642F65726C616E672D31322E622E352D646673672F6C69622F6B65726E656C2F7372632F68656172742E65726C6A
=mod:error_logger
Current size: 6546
Current attributes: 836C00000001680264000376736E6C000000016E1000C8781D336BA5F74C47B1D4EE4476A6046A6A
Current compilation info
=mod:gen_event
Current size: 24644
Current attributes: 836C00000001680264000376736E6C000000016E1000FBD6FF7C787BAE5AA3D9525E25316DCB6A6A
Current compilation info
=mod:gen
Current size: 6702
Current attributes: 836C00000001680264000376736E6C000000016E10001FD7BEC4AA9DF013FB48BC75305F4FF16A6A
Current compilation info
=mod:proc_lib
Current size: 14483
Current attributes: 836C00000001680264000376736E6C000000016E100029C4BAD7843D735E8C575AFEBB695D1F6A6A
Current compilation info
=mod:application_controller
Current size: 56704
Current attributes: 836C00000001680264000376736E6C000000016E1000902D3C59E381591605A211EB2EE3A9926A6A
Current compilation info
=mod:lists
Current size: 58292
Current attributes: 836C00000001680264000376736E6C000000016E10000B6E445B1819F75CA0775775CB030B546A6A
Current compilation info
=mod:erl_scan
Current size: 22111
Current attributes: 836C00000001680264000376736E6C000000016E1000564FF0CCF7E455FC19A99C19BDDB4B836A6A
Current compilation info
=mod:erl_parse
Current size: 118794
Current attributes: 836C00000001680264000376736E6C000000016E10006ADE09A5DF38A070F66821BD914A47076A6A
Current compilation info
=mod:gen_server
Current size: 21873
Current attributes: 836C00000001680264000376736E6C000000016E10008A986F50365FCAFB0B5B6368FB2789896A6A
Current compilation info
=mod:application
Current size: 2917
Current attributes: 836C00000001680264000376736E6C000000016E1000726170026687466698C15C3BD0F932706A6A
Current compilation info
=mod:sys
Current size: 12082
Current attributes: 836C00000001680264000376736E6C000000016E10005D3F4A743C151748C5FFB8EB641D38886A6A
Current compilation info
=mod:application_master
Current size: 10392
Current attributes: 836C00000001680264000376736E6C000000016E100036D36567444B98D8FB52C75E55F120F96A6A
Current compilation info
=mod:kernel
Current size: 8081
Current attributes: 836C00000002680264000376736E6C000000016E1000E3AF5CAA88DC0FDD1C8A97A8539EE2B76A68026400096265686176696F75726C0000000164000A73757065727669736F726A6A
Current compilation info
=mod:supervisor
Current size: 27858
Current attributes: 836C00000002680264000376736E6C000000016E1000A3C8FC556F75E24CD42464B047E567026A68026400096265686176696F75726C0000000164000A67656E5F7365727665726A6A
Current compilation info
=mod:dict
Current size: 16847
Current attributes: 836C00000001680264000376736E6C000000016E1000F2500C87EF1FCBEB3B0A2F29864288476A6A
Current compilation info
=mod:rpc
Current size: 12909
Current attributes: 836C00000003680264000376736E6C000000016E100011FC8F079CB4F57BB9470F027C2E9EF46A68026400096265686176696F75726C0000000164000A67656E5F7365727665726A680264000A646570726563617465646C000000026802640016736166655F6D756C74695F7365727665725F63616C6C61026802640016736166655F6D756C74695F7365727665725F63616C6C61036A6A
Current compilation info: 836C0000000468026400076F7074696F6E736C0000000568026400036377646B002F2F6275696C642F6275696C64642F65726C616E672D31322E622E352D646673672F6C69622F6B65726E656C2F73726368026400066F75746469726B00372F6275696C642F6275696C64642F65726C616E672D31322E622E352D646673672F6C69622F6B65726E656C2F7372632F2E2E2F6562696E6802640001696B003A2F6275696C642F6275696C64642F65726C616E672D31322E622E352D646673672F6C69622F6B65726E656C2F7372632F2E2E2F696E636C7564656400137761726E5F6F62736F6C6574655F677561726464000A64656275675F696E666F6A680264000776657273696F6E6B0005342E352E35680264000474696D65680662000007D9610261146105611161106802640006736F757263656B00372F6275696C642F6275696C64642F65726C616E672D31322E622E352D646673672F6C69622F6B65726E656C2F7372632F7270632E65726C6A
=mod:gb_trees
Current size: 8267
Current attributes: 836C00000001680264000376736E6C000000016E10001D5FE72F8EB19DB9C1B88336CF1871026A6A
Current compilation info
=mod:global
Current size: 61145
Current attributes: 836C00000002680264000376736E6C000000016E1000B0293D0FFA8E31A4B98627A2AB63465F6A68026400096265686176696F75726C0000000164000A67656E5F7365727665726A6A
Current compilation info
=mod:inet_db
Current size: 36817
Current attributes: 836C00000001680264000376736E6C000000016E1000F08ECFFAD77E23146DC939ADF89A77416A6A
Current compilation info
=mod:inet_config
Current size: 18149
Current attributes: 836C00000001680264000376736E6C000000016E10009D8A7ECB5569593C41AE1E2EBC77F1576A6A
Current compilation info
=mod:os
Current size: 6332
Current attributes: 836C00000001680264000376736E6C000000016E100024C7119F916ABBD2394420D71FA9E1BC6A6A
Current compilation info
=mod:inet_udp
Current size: 2554
Current attributes: 836C00000001680264000376736E6C000000016E1000C5477F1B546C33C5BB5FCC2E89D5E72B6A6A
Current compilation info
=mod:inet
Current size: 29014
Current attributes: 836C00000001680264000376736E6C000000016E100066CD8B3904E2A19B7FC1F8BF5910F6686A6A
Current compilation info
=mod:inet_parse
Current size: 22684
Current attributes: 836C00000001680264000376736E6C000000016E1000A11277805A759EAB5601A16A9C315A5B6A6A
Current compilation info
=mod:inet_gethost_native
Current size: 16357
Current attributes: 836C00000002680264000376736E6C000000016E10006CAC3F1AD4215BADB73D69F65CE317596A68026400096265686176696F75726C0000000164001173757065727669736F725F6272696467656A6A
Current compilation info
=mod:erl_distribution
Current size: 2487
Current attributes: 836C00000002680264000376736E6C000000016E10001AAD366E7B81593E4AF26A0CF5D1673B6A68026400096265686176696F75726C0000000164000A73757065727669736F726A6A
Current compilation info
=mod:net_kernel
Current size: 41533
Current attributes: 836C00000002680264000376736E6C000000016E10006372854AAAE5F38ABA181F096F383AC96A68026400096265686176696F75726C0000000164000A67656E5F7365727665726A6A
Current compilation info
=mod:inet_tcp_dist
Current size: 11563
Current attributes: 836C00000001680264000376736E6C000000016E100085248D2EBC8B66C274D5B7B82F85EA166A6A
Current compilation info
=mod:erl_epmd
Current size: 14375
Current attributes: 836C00000002680264000376736E6C000000016E10000C8E73A62BE40030322791BA2570D32E6A68026400096265686176696F75726C0000000164000A67656E5F7365727665726A6A
Current compilation info
=mod:auth
Current size: 11981
Current attributes: 836C00000003680264000376736E6C000000016E1000913D09043A0A2E5D6411B876A0FADC176A68026400096265686176696F75726C0000000164000A67656E5F7365727665726A680264000A646570726563617465646C00000003680264000769735F6175746861016802640006636F6F6B69656400015F680264000B6E6F64655F636F6F6B69656400015F6A6A
Current compilation info: 836C0000000468026400076F7074696F6E736C0000000568026400036377646B002F2F6275696C642F6275696C64642F65726C616E672D31322E622E352D646673672F6C69622F6B65726E656C2F73726368026400066F75746469726B00372F6275696C642F6275696C64642F65726C616E672D31322E622E352D646673672F6C69622F6B65726E656C2F7372632F2E2E2F6562696E6802640001696B003A2F6275696C642F6275696C64642F65726C616E672D31322E622E352D646673672F6C69622F6B65726E656C2F7372632F2E2E2F696E636C7564656400137761726E5F6F62736F6C6574655F677561726464000A64656275675F696E666F6A680264000776657273696F6E6B0005342E352E35680264000474696D65680662000007D96102611461056110612D6802640006736F757263656B00382F6275696C642F6275696C64642F65726C616E672D31322E622E352D646673672F6C69622F6B65726E656C2F7372632F617574682E65726C6A
=mod:filename
Current size: 16431
Current attributes: 836C00000001680264000376736E6C000000016E10006E2DAFCD53ADF66A79FD2773BA00BCE46A6A
Current compilation info
=mod:file
Current size: 20298
Current attributes: 836C00000002680264000376736E6C000000016E100066EF5E833471F43BC51FE251564E99736A680264000A646570726563617465646C0000000168036400077261776F70656E61026400126E6578745F6D616A6F725F72656C656173656A6A
Current compilation info
=mod:inet_tcp
Current size: 2878
Current attributes: 836C00000001680264000376736E6C000000016E1000AE1C009DE38594DD1B4745C5751BD8F76A6A
Current compilation info
=mod:gen_tcp
Current size: 3453
Current attributes: 836C00000001680264000376736E6C000000016E10003CCB5DA1BCBF83F8ADBA01E91A8554496A6A
Current compilation info
=mod:global_group
Current size: 32083
Current attributes: 836C00000002680264000376736E6C000000016E100056BFC5CFE9A76A2F7E287C2B661EA3BD6A68026400096265686176696F75726C0000000164000A67656E5F7365727665726A6A
Current compilation info
=mod:file_server
Current size: 7958
Current attributes: 836C00000002680264000376736E6C000000016E1000651D689B0650F7652654DA8EC5A65D206A68026400096265686176696F75726C0000000164000A67656E5F7365727665726A6A
Current compilation info
=mod:code
Current size: 9882
Current attributes: 836C00000001680264000376736E6C000000016E10004B94A88D42E5DB306778C34B4FD091E66A6A
Current compilation info
=mod:code_server
Current size: 39957
Current attributes: 836C00000001680264000376736E6C000000016E1000161A9AF291E8E1A80320D14C373000886A6A
Current compilation info
=mod:packages
Current size: 3198
Current attributes: 836C00000001680264000376736E6C000000016E1000BEAD647E2F6FF604BE3AC18D834A3D246A6A
Current compilation info
=mod:hipe_unified_loader
Current size: 20441
Current attributes: 836C00000001680264000376736E6C000000016E1000698C5D775D4C628BDA83EB64F392AC3F6A6A
Current compilation info
=mod:gb_sets
Current size: 13042
Current attributes: 836C00000001680264000376736E6C000000016E1000990386ADBD6283AA0B998FB15FA798426A6A
Current compilation info
=mod:ets
Current size: 32738
Current attributes: 836C00000001680264000376736E6C000000016E100071FC49C1CFC6965A3F0035E9C0A3C8C86A6A
Current compilation info
=mod:dist_util
Current size: 21603
Current attributes: 836C00000001680264000376736E6C000000016E10007F59F7035B2E280F0EB776AFA88A50656A6A
Current compilation info
=mod:rabbit
Current size: 9364
Current attributes: 836C00000002680264000376736E6C000000016E1000BEF485FB4BB76020508DE6B03074DC2D6A68026400096265686176696F75726C0000000164000B6170706C69636174696F6E6A6A
Current compilation info
=mod:user_sup
Current size: 2562
Current attributes: 836C00000002680264000376736E6C000000016E10008BA7996379188F9E5F5EA3DA01FDC1D96A68026400096265686176696F75726C0000000164001173757065727669736F725F6272696467656A6A
Current compilation info
=mod:rabbit_mnesia
Current size: 11333
Current attributes: 836C00000001680264000376736E6C000000016E1000F849BBADCDBAC29388A3D6B1B18050F16A6A
Current compilation info
=mod:supervisor_bridge
Current size: 3121
Current attributes: 836C00000002680264000376736E6C000000016E1000D8EC7E85CC056881779DB0ED3DD989296A68026400096265686176696F75726C0000000164000A67656E5F7365727665726A6A
Current compilation info
=mod:mnesia
Current size: 75753
Current attributes: 836C00000001680264000376736E6B000C6D6E657369615F342E342E376A
Current compilation info
=mod:user
Current size: 10574
Current attributes: 836C00000001680264000376736E6C000000016E100022CC25D020FE46F9A1462992ACCCF5FE6A6A
Current compilation info
=mod:mnesia_schema
Current size: 102780
Current attributes: 836C00000001680264000376736E6B000C6D6E657369615F342E342E376A
Current compilation info
=mod:kernel_config
Current size: 3596
Current attributes: 836C00000002680264000376736E6C000000016E1000FF8CF8C34792DEE22724DDE1006314476A68026400096265686176696F75726C0000000164000A67656E5F7365727665726A6A
Current compilation info
=mod:queue
Current size: 11198
Current attributes: 836C00000001680264000376736E6C000000016E1000ED34FF61B831579D5BF597118C3DA8BE6A6A
Current compilation info
=mod:mnesia_lib
Current size: 40513
Current attributes: 836C00000001680264000376736E6B000C6D6E657369615F342E342E376A
Current compilation info
=mod:error_logger_file_h
Current size: 9346
Current attributes: 836C00000002680264000376736E6C000000016E1000379683114D0E84DEB8A2BCE0399604FA6A68026400096265686176696F75726C0000000164000967656E5F6576656E746A6A
Current compilation info
=mod:file_io_server
Current size: 11868
Current attributes: 836C00000001680264000376736E6C000000016E1000E884DF41A3BEBB3A16392511884FC5606A6A
Current compilation info
=mod:mnesia_monitor
Current size: 25798
Current attributes: 836C00000002680264000376736E6B000C6D6E657369615F342E342E3768026400096265686176696F75726C0000000164000A67656E5F7365727665726A6A
Current compilation info
=mod:sasl
Current size: 3966
Current attributes: 836C00000002680264000376736E6C000000016E1000E96CB389515C9500608AE3E263FA73296A68026400096265686176696F75726C0000000164000B6170706C69636174696F6E6A6A
Current compilation info
=mod:mnesia_bup
Current size: 44857
Current attributes: 836C00000001680264000376736E6B000C6D6E657369615F342E342E376A
Current compilation info
=mod:sasl_report_file_h
Current size: 1518
Current attributes: 836C00000001680264000376736E6C000000016E10003E2B8585A6A8046772649361772033906A6A
Current compilation info
=mod:alarm_handler
Current size: 1889
Current attributes: 836C00000001680264000376736E6C000000016E10003A9031E94DF7AE014425E094E2C1DE556A6A
Current compilation info
=mod:dets
Current size: 100847
Current attributes: 836C00000001680264000376736E6C000000016E1000C24B798CC2B515F1A7A98E8FA62CC1336A6A
Current compilation info
=mod:overload
Current size: 6256
Current attributes: 836C00000001680264000376736E6C000000016E1000DA1D37BCC1744A31F4CC42DAE693FA3F6A6A
Current compilation info
=mod:calendar
Current size: 8291
Current attributes: 836C00000002680264000376736E6C000000016E1000F0DA2E1AC227DA8EF60083F543C7BB2B6A680264000A646570726563617465646C00000001680264001C6C6F63616C5F74696D655F746F5F756E6976657273616C5F74696D6561016A6A
Current compilation info: 836C0000000468026400076F7074696F6E736C0000000668026400036377646B002F2F6275696C642F6275696C64642F65726C616E672D31322E622E352D646673672F6C69622F7374646C69622F73726368026400066F75746469726B00372F6275696C642F6275696C64642F65726C616E672D31322E622E352D646673672F6C69622F7374646C69622F7372632F2E2E2F6562696E6802640001696B003A2F6275696C642F6275696C64642F65726C616E672D31322E622E352D646673672F6C69622F7374646C69622F7372632F2E2E2F696E636C7564656802640001696B00442F6275696C642F6275696C64642F65726C616E672D31322E622E352D646673672F6C69622F7374646C69622F7372632F2E2E2F2E2E2F6B65726E656C2F696E636C7564656400137761726E5F6F62736F6C6574655F677561726464000A64656275675F696E666F6A680264000776657273696F6E6B0005342E352E35680264000474696D65680662000007D9610261146105610F612A6802640006736F757263656B003C2F6275696C642F6275696C64642F65726C616E672D31322E622E352D646673672F6C69622F7374646C69622F7372632F63616C656E6461722E65726C6A
=mod:timer
Current size: 7752
Current attributes: 836C00000001680264000376736E6C000000016E100098424A9CE3F7E0204C677AAE3D6E97A96A6A
Current compilation info
=mod:release_handler
Current size: 48756
Current attributes: 836C00000002680264000376736E6C000000016E100062161B4A568A367186AAC705894B7B646A68026400096265686176696F75726C0000000164000A67656E5F7365727665726A6A
Current compilation info
=mod:sasl_report
Current size: 7319
Current attributes: 836C00000001680264000376736E6C000000016E1000E9AF0FDD3BDF8CC564E8ECA18851249E6A6A
Current compilation info
=mod:dets_server
Current size: 10599
Current attributes: 836C00000002680264000376736E6C000000016E10009688A62300311E15DCFEB067647745BC6A68026400096265686176696F75726C0000000164000A67656E5F7365727665726A6A
Current compilation info
=mod:io
Current size: 7873
Current attributes: 836C00000001680264000376736E6C000000016E1000FF9425731BC79DA917711641F37CE2206A6A
Current compilation info
=mod:dets_sup
Current size: 900
Current attributes: 836C00000002680264000376736E6C000000016E1000331297F2859514929EB42259990AA9326A68026400096265686176696F75726C0000000164000A73757065727669736F726A6A
Current compilation info: 836C0000000468026400076F7074696F6E736C0000000668026400036377646B002F2F6275696C642F6275696C64642F65726C616E672D31322E622E352D646673672F6C69622F7374646C69622F73726368026400066F75746469726B00372F6275696C642F6275696C64642F65726C616E672D31322E622E352D646673672F6C69622F7374646C69622F7372632F2E2E2F6562696E6802640001696B003A2F6275696C642F6275696C64642F65726C616E672D31322E622E352D646673672F6C69622F7374646C69622F7372632F2E2E2F696E636C7564656802640001696B00442F6275696C642F6275696C64642F65726C616E672D31322E622E352D646673672F6C69622F7374646C69622F7372632F2E2E2F2E2E2F6B65726E656C2F696E636C7564656400137761726E5F6F62736F6C6574655F677561726464000A64656275675F696E666F6A680264000776657273696F6E6B0005342E352E35680264000474696D65680662000007D9610261146105610F612D6802640006736F757263656B003C2F6275696C642F6275696C64642F65726C616E672D31322E622E352D646673672F6C69622F7374646C69622F7372632F646574735F7375702E65726C6A
=mod:io_lib
Current size: 11386
Current attributes: 836C00000001680264000376736E6C000000016E100095EAE0D61EF6AF53A61AC16E68C606616A6A
Current compilation info
=mod:dets_utils
Current size: 51699
Current attributes: 836C00000001680264000376736E6C000000016E1000F6FC6AE1EF704CA290FA2E5519A56F886A6A
Current compilation info
=mod:c
Current size: 33584
Current attributes: 836C00000001680264000376736E6C000000016E1000356121C6CB563546DAD26051F594CAF96A6A
Current compilation info
=mod:dets_v9
Current size: 98238
Current attributes: 836C00000001680264000376736E6C000000016E1000ECA1B9178C2B3C5B4747B99A9F9E74146A6A
Current compilation info
=mod:erl_eval
Current size: 38219
Current attributes: 836C00000001680264000376736E6C000000016E1000CEC08C4C9017B2B8FEE8D9EC59AC4CD56A6A
Current compilation info
=mod:orddict
Current size: 4962
Current attributes: 836C00000001680264000376736E6C000000016E10004FE2C50A75613AB2917D8D0FE2C8598F6A6A
Current compilation info
=mod:rabbit_error_logger_file_h
Current size: 1513
Current attributes: 836C00000002680264000376736E6C000000016E1000E2D78F00BBAFDC32081A8204D2DFFEC76A68026400096265686176696F75726C0000000164000967656E5F6576656E746A6A
Current compilation info
=mod:rabbit_misc
Current size: 13129
Current attributes: 836C00000001680264000376736E6C000000016E10001884727EA84B2673EDEF4104843F7F866A6A
Current compilation info
=mod:filelib
Current size: 8682
Current attributes: 836C00000001680264000376736E6C000000016E1000BB08B3BBEE791FE444682221D083C4086A6A
Current compilation info: 836C0000000468026400076F7074696F6E736C0000000668026400036377646B002F2F6275696C642F6275696C64642F65726C616E672D31322E622E352D646673672F6C69622F7374646C69622F73726368026400066F75746469726B00372F6275696C642F6275696C64642F65726C616E672D31322E622E352D646673672F6C69622F7374646C69622F7372632F2E2E2F6562696E6802640001696B003A2F6275696C642F6275696C64642F65726C616E672D31322E622E352D646673672F6C69622F7374646C69622F7372632F2E2E2F696E636C7564656802640001696B00442F6275696C642F6275696C64642F65726C616E672D31322E622E352D646673672F6C69622F7374646C69622F7372632F2E2E2F2E2E2F6B65726E656C2F696E636C7564656400137761726E5F6F62736F6C6574655F677561726464000A64656275675F696E666F6A680264000776657273696F6E6B0005342E352E35680264000474696D65680662000007D96102611461056110610E6802640006736F757263656B003B2F6275696C642F6275696C64642F65726C616E672D31322E622E352D646673672F6C69622F7374646C69622F7372632F66696C656C69622E65726C6A
=mod:rabbit_sasl_report_file_h
Current size: 1813
Current attributes: 836C00000002680264000376736E6C000000016E10004D2C6BDBFB7E3124C0617A078BD8486A6A68026400096265686176696F75726C0000000164000967656E5F6576656E746A6A
Current compilation info
=mod:os_mon
Current size: 5011
Current attributes: 836C00000003680264000376736E6C000000016E100019A0FEBD95506EE08859AAEB1D85494F6A68026400096265686176696F75726C0000000164000B6170706C69636174696F6E6A68026400096265686176696F75726C0000000164000A73757065727669736F726A6A
Current compilation info
=mod:cpu_sup
Current size: 24085
Current attributes: 836C00000001680264000376736E6C000000016E100000DF0EAA8369F08D118EDFAC89EE8A666A6A
Current compilation info
=mod:mnesia_sup
Current size: 2528
Current attributes: 836C00000003680264000376736E6B000C6D6E657369615F342E342E3768026400096265686176696F75726C0000000164000B6170706C69636174696F6E6A68026400096265686176696F75726C0000000164000A73757065727669736F726A6A
Current compilation info
=mod:mnesia_kernel_sup
Current size: 1673
Current attributes: 836C00000002680264000376736E6B000C6D6E657369615F342E342E3768026400096265686176696F75726C0000000164000A73757065727669736F726A6A
Current compilation info
=mod:mnesia_event
Current size: 9811
Current attributes: 836C00000002680264000376736E6B000C6D6E657369615F342E342E3768026400096265686176696F75726C0000000164000967656E5F6576656E746A6A
Current compilation info
=mod:mnesia_subscr
Current size: 14133
Current attributes: 836C00000002680264000376736E6B000C6D6E657369615F342E342E3768026400096265686176696F75726C0000000164000A67656E5F7365727665726A6A
Current compilation info
=mod:mnesia_locker
Current size: 32608
Current attributes: 836C00000001680264000376736E6B000C6D6E657369615F342E342E376A
Current compilation info
=mod:mnesia_sp
Current size: 1000
Current attributes: 836C00000001680264000376736E6B000C6D6E657369615F342E342E376A
Current compilation info
=mod:mnesia_recover
Current size: 34822
Current attributes: 836C00000002680264000376736E6B000C6D6E657369615F342E342E3768026400096265686176696F75726C0000000164000A67656E5F7365727665726A6A
Current compilation info
=mod:mnesia_tm
Current size: 76180
Current attributes: 836C00000001680264000376736E6B000C6D6E657369615F342E342E376A
Current compilation info: 836C0000000468026400076F7074696F6E736C0000000668026400036377646B002F2F6275696C642F6275696C64642F65726C616E672D31322E622E352D646673672F6C69622F6D6E657369612F73726368026400066F75746469726B00372F6275696C642F6275696C64642F65726C616E672D31322E622E352D646673672F6C69622F6D6E657369612F7372632F2E2E2F6562696E6804640009617474726962757465640006696E7365727464000376736E6B000C6D6E657369615F342E342E37680264000F70617273655F7472616E73666F726D6400127379735F7072655F617474726962757465736400107761726E5F756E757365645F7661727364000A64656275675F696E666F6A680264000776657273696F6E6B0005342E352E35680264000474696D65680662000007D96102611461056135611B6802640006736F757263656B003D2F6275696C642F6275696C64642F65726C616E672D31322E622E352D646673672F6C69622F6D6E657369612F7372632F6D6E657369615F746D2E65726C6A
=mod:mnesia_frag
Current size: 45538
Current attributes: 836C00000001680264000376736E6B000C6D6E657369615F342E342E376A
Current compilation info
=mod:mnesia_controller
Current size: 61545
Current attributes: 836C00000002680264000376736E6B000C6D6E657369615F342E342E3768026400096265686176696F75726C0000000164000A67656E5F7365727665726A6A
Current compilation info
=mod:mnesia_log
Current size: 30601
Current attributes: 836C00000001680264000376736E6B000C6D6E657369615F342E342E376A
Current compilation info
=mod:disk_log
Current size: 94324
Current attributes: 836C00000001680264000376736E6C000000016E10004EA198A9A79A0D24A7B684D6B48810E46A6A
Current compilation info
=mod:disk_log_server
Current size: 9092
Current attributes: 836C00000002680264000376736E6C000000016E100083E2E70496E0B6B72F743649692F093A6A68026400096265686176696F75726C0000000164000A67656E5F7365727665726A6A
Current compilation info
=mod:disk_log_sup
Current size: 827
Current attributes: 836C00000002680264000376736E6C000000016E10007B0BB4AE96CBF359AB336B429244BF156A68026400096265686176696F75726C0000000164000A73757065727669736F726A6A
Current compilation info
=mod:disk_log_1
Current size: 48544
Current attributes: 836C00000001680264000376736E6C000000016E1000AD775A0DA20F4C3DF51C9B7C50D1820A6A6A
Current compilation info
=mod:mnesia_dumper
Current size: 30580
Current attributes: 836C00000001680264000376736E6B000C6D6E657369615F342E342E376A
Current compilation info: 836C0000000468026400076F7074696F6E736C0000000668026400036377646B002F2F6275696C642F6275696C64642F65726C616E672D31322E622E352D646673672F6C69622F6D6E657369612F73726368026400066F75746469726B00372F6275696C642F6275696C64642F65726C616E672D31322E622E352D646673672F6C69622F6D6E657369612F7372632F2E2E2F6562696E6804640009617474726962757465640006696E7365727464000376736E6B000C6D6E657369615F342E342E37680264000F70617273655F7472616E73666F726D6400127379735F7072655F617474726962757465736400107761726E5F756E757365645F7661727364000A64656275675F696E666F6A680264000776657273696F6E6B0005342E352E35680264000474696D65680662000007D96102611461056135610D6802640006736F757263656B00412F6275696C642F6275696C64642F65726C616E672D31322E622E352D646673672F6C69622F6D6E657369612F7372632F6D6E657369615F64756D7065722E65726C6A
=mod:mnesia_checkpoint_sup
Current size: 973
Current attributes: 836C00000002680264000376736E6B000C6D6E657369615F342E342E3768026400096265686176696F75726C0000000164000A73757065727669736F726A6A
Current compilation info
=mod:mnesia_snmp_sup
Current size: 967
Current attributes: 836C00000002680264000376736E6B000C6D6E657369615F342E342E3768026400096265686176696F75726C0000000164000A73757065727669736F726A6A
Current compilation info
=mod:mnesia_late_loader
Current size: 2689
Current attributes: 836C00000001680264000376736E6B000C6D6E657369615F342E342E376A
Current compilation info
=mod:mnesia_checkpoint
Current size: 45972
Current attributes: 836C00000001680264000376736E6B000C6D6E657369615F342E342E376A
Current compilation info
=mod:mnesia_loader
Current size: 26180
Current attributes: 836C00000001680264000376736E6B000C6D6E657369615F342E342E376A
Current compilation info
=mod:eval_bits
Current size: 14802
Current attributes: 836C00000001680264000376736E6C000000016E1000C491740B6F19B589B90D0D05185D2F1A6A6A
Current compilation info
=mod:mnesia_index
Current size: 10907
Current attributes: 836C00000001680264000376736E6B000C6D6E657369615F342E342E376A
Current compilation info
=mod:rabbit_sup
Current size: 1017
Current attributes: 836C00000002680264000376736E6C000000016E1000939CCC06D45CCC355233A773F6C38DE46A68026400096265686176696F75726C0000000164000A73757065727669736F726A6A
Current compilation info
=mod:string
Current size: 8225
Current attributes: 836C00000001680264000376736E6C000000016E10003F8E4DE423CB4FEC0FD5AECF40CDBBAD6A6A
Current compilation info
=mod:io_lib_format
Current size: 22824
Current attributes: 836C00000001680264000376736E6C000000016E10006725F35F08E74F1938493F15F6A8B4BE6A6A
Current compilation info
=mod:io_lib_pretty
Current size: 26408
Current attributes: 836C00000001680264000376736E6C000000016E100013650053D550A977E3A146A01EDF30BC6A6A
Current compilation info
=mod:base64
Current size: 6997
Current attributes: 836C00000001680264000376736E6C000000016E1000A23BE7DC0294668E6B056B5B1619BB6D6A6A
Current compilation info
=mod:rabbit_log
Current size: 3351
Current attributes: 836C00000002680264000376736E6C000000016E100043621CEC2AF6FBD33D05C67A391F6E9F6A68026400096265686176696F75726C0000000164000A67656E5F7365727665726A6A
Current compilation info
=mod:rabbit_hooks
Current size: 1782
Current attributes: 836C00000001680264000376736E6C000000016E10006C5289682E10C58A822C126ECD6C10236A6A
Current compilation info
=mod:rabbit_binary_generator
Current size: 6838
Current attributes: 836C00000001680264000376736E6C000000016E100009C9C1FCA67FAB4C93D2430E23A1D6E56A6A
Current compilation info
=mod:rabbit_alarm
Current size: 3258
Current attributes: 836C00000002680264000376736E6C000000016E1000F486C04685EC1E3B25AE1F98F7F915876A68026400096265686176696F75726C0000000164000967656E5F6576656E746A6A
Current compilation info
=mod:vm_memory_monitor
Current size: 11061
Current attributes: 836C00000002680264000376736E6C000000016E1000EBB09B16EE237278610F6E315296C1B96A68026400096265686176696F75726C0000000164000A67656E5F7365727665726A6A
Current compilation info: 836C0000000468026400076F7074696F6E736C0000000468026400036377646B00682F7661722F746D702F7261626269742D6275696C642E363431372F7261626269746D712D756D6272656C6C612F7261626269746D712D7365727665722F7061636B6167696E672F646562732F44656269616E2F7261626269746D712D7365727665722D312E372E3168026400066F75746469726B006D2F7661722F746D702F7261626269742D6275696C642E363431372F7261626269746D712D756D6272656C6C612F7261626269746D712D7365727665722F7061636B6167696E672F646562732F44656269616E2F7261626269746D712D7365727665722D312E372E312F6562696E6802640001696B00702F7661722F746D702F7261626269742D6275696C642E363431372F7261626269746D712D756D6272656C6C612F7261626269746D712D7365727665722F7061636B6167696E672F646562732F44656269616E2F7261626269746D712D7365727665722D312E372E312F696E636C75646564000A64656275675F696E666F6A680264000776657273696F6E6B0005342E342E35680264000474696D65680662000007DA61016116610E611461206802640006736F757263656B00822F7661722F746D702F7261626269742D6275696C642E363431372F7261626269746D712D756D6272656C6C612F7261626269746D712D7365727665722F7061636B6167696E672F646562732F44656269616E2F7261626269746D712D7365727665722D312E372E312F7372632F766D5F6D656D6F72795F6D6F6E69746F722E65726C6A
=mod:rabbit_amqqueue
Current size: 15627
Current attributes: 836C00000001680264000376736E6C000000016E100004C018D29B176C746F241107CC40F65C6A6A
Current compilation info
=mod:rabbit_amqqueue_sup
Current size: 1134
Current attributes: 836C00000002680264000376736E6C000000016E1000C1B6D144BD6FA407AA846C5DDFBB6DD86A68026400096265686176696F75726C0000000164000A73757065727669736F726A6A
Current compilation info
=mod:rabbit_router
Current size: 2397
Current attributes: 836C00000002680264000376736E6C000000016E1000062826F51CE35C10AB0912F23F5393796A68026400096265686176696F75726C0000000164000B67656E5F736572766572326A6A
Current compilation info
=mod:gen_server2
Current size: 25436
Current attributes: 836C00000001680264000376736E6C000000016E1000E5A17F0A6AC164535FC6898B7055B0BA6A6A
Current compilation info
=mod:priority_queue
Current size: 7076
Current attributes: 836C00000001680264000376736E6C000000016E1000B5437CDAD7D73AE431A2014E3ABC62EB6A6A
Current compilation info
=mod:rabbit_node_monitor
Current size: 1648
Current attributes: 836C00000002680264000376736E6C000000016E10008982F5E89201D1445099F8B786BBB5F96A68026400096265686176696F75726C0000000164000A67656E5F7365727665726A6A
Current compilation info
=mod:rabbit_exchange
Current size: 20932
Current attributes: 836C00000001680264000376736E6C000000016E10006BEDC74FE68BBDB40830F20E9C8007F86A6A
Current compilation info
=mod:qlc
Current size: 115505
Current attributes: 836C00000001680264000376736E6C000000016E10006737CC0B2705768DE5C60059C928696A6A6A
Current compilation info
=mod:rabbit_amqqueue_process
Current size: 26769
Current attributes: 836C00000002680264000376736E6C000000016E10005898CE3FC1CAB25D78F064EDA6A75A4D6A68026400096265686176696F75726C0000000164000B67656E5F736572766572326A6A
Current compilation info
=mod:rabbit_persister
Current size: 16077
Current attributes: 836C00000002680264000376736E6C000000016E100022AACCD52E601EA4A61ABBB8212B1E936A68026400096265686176696F75726C0000000164000A67656E5F7365727665726A6A
Current compilation info
=mod:sets
Current size: 12711
Current attributes: 836C00000001680264000376736E6C000000016E10001C76B14BA15E3063C4652045EFCDF9BA6A6A
Current compilation info
=mod:lib
Current size: 15512
Current attributes: 836C00000001680264000376736E6C000000016E10005D3B5DFD2C905F33E4D532526C3952646A6A
Current compilation info
=mod:erl_internal
Current size: 4695
Current attributes: 836C00000001680264000376736E6C000000016E10000020C7B4424EE59FA1104C93633A37916A6A
Current compilation info
=fun
Module: application_controller
Uniq: 68409630
Index: 4
Address: 0x819234e8
Refc: 1
=fun
Module: application_controller
Uniq: 85284388
Index: 11
Address: 0x81923110
Refc: 1
=fun
Module: mnesia_subscr
Uniq: 102630427
Index: 2
Address: 0x73e7b7a8
Refc: 1
=fun
Module: rabbit_exchange
Uniq: 131353064
Index: 22
Address: 0x73cf06c4
Refc: 1
=fun
Module: rabbit_amqqueue
Uniq: 73872646
Index: 1
Address: 0x73cd7c4c
Refc: 1
=fun
Module: disk_log_server
Uniq: 5346999
Index: 4
Address: 0x73ec713c
Refc: 1
=fun
Module: code_server
Uniq: 130177122
Index: 13
Address: 0x73f75c34
Refc: 1
=fun
Module: rabbit_amqqueue
Uniq: 53883961
Index: 49
Address: 0x73cd809c
Refc: 1
=fun
Module: gen_event
Uniq: 14457010
Index: 4
Address: 0x818fcec4
Refc: 1
=fun
Module: rabbit_amqqueue
Uniq: 53883961
Index: 48
Address: 0x73cd8110
Refc: 1
=fun
Module: erl_parse
Uniq: 33616870
Index: 2
Address: 0x8194a704
Refc: 1
=fun
Module: ets
Uniq: 127205342
Index: 2
Address: 0x73f88e48
Refc: 1
=fun
Module: erl_prim_loader
Uniq: 129380664
Index: 4
Address: 0xf5915e4c
Refc: 1
=fun
Module: rabbit_amqqueue_process
Uniq: 58789785
Index: 1
Address: 0x73d1a868
Refc: 1
=fun
Module: mnesia_loader
Uniq: 57346273
Index: 9
Address: 0x73ca9ee8
Refc: 1
=fun
Module: mnesia_schema
Uniq: 22740183
Index: 24
Address: 0x73fdc490
Refc: 1
=fun
Module: mnesia_schema
Uniq: 111926619
Index: 12
Address: 0x73fdc83c
Refc: 1
=fun
Module: packages
Uniq: 21879463
Index: 0
Address: 0x73f52354
Refc: 1
=fun
Module: mnesia_tm
Uniq: 26458934
Index: 5
Address: 0x73eb6c44
Refc: 1
=fun
Module: global
Uniq: 77884565
Index: 2
Address: 0x8198a108
Refc: 1
=fun
Module: mnesia_frag
Uniq: 108512084
Index: 8
Address: 0x73ec320c
Refc: 1
=fun
Module: erl_scan
Uniq: 60864725
Index: 30
Address: 0x819303e8
Refc: 1
=fun
Module: rabbit
Uniq: 92867836
Index: 7
Address: 0x73f643c4
Refc: 1
=fun
Module: erl_prim_loader
Uniq: 87958366
Index: 2
Address: 0xf5915fdc
Refc: 3
=fun
Module: mnesia_schema
Uniq: 54213680
Index: 7
Address: 0x73fdcab8
Refc: 1
=fun
Module: qlc
Uniq: 53236585
Index: 13
Address: 0x73d0a494
Refc: 1
=fun
Module: erl_prim_loader
Uniq: 11964527
Index: 13
Address: 0xf5915714
Refc: 1
=fun
Module: release_handler
Uniq: 67949545
Index: 3
Address: 0x73e18d74
Refc: 1
=fun
Module: qlc
Uniq: 100914385
Index: 53
Address: 0x73d07edc
Refc: 1
=fun
Module: qlc
Uniq: 29565751
Index: 35
Address: 0x73d0840c
Refc: 1
=fun
Module: inet_tcp_dist
Uniq: 52679599
Index: 2
Address: 0x73f295ac
Refc: 2
=fun
Module: inet_config
Uniq: 99271538
Index: 5
Address: 0x81992b08
Refc: 1
=fun
Module: qlc
Uniq: 96476682
Index: 6
Address: 0x73d0b9ec
Refc: 1
=fun
Module: mnesia_schema
Uniq: 87199680
Index: 6
Address: 0x73fdcad4
Refc: 1
=fun
Module: qlc
Uniq: 66634467
Index: 52
Address: 0x73d07f0c
Refc: 1
=fun
Module: rabbit_amqqueue
Uniq: 86666154
Index: 28
Address: 0x73cd6dc8
Refc: 1
=fun
Module: code_server
Uniq: 1755104
Index: 7
Address: 0x73f76264
Refc: 1
=fun
Module: dets
Uniq: 11223395
Index: 1
Address: 0x73e409ac
Refc: 1
=fun
Module: init
Uniq: 54206684
Index: 0
Address: 0xf5904dbc
Refc: 1
=fun
Module: dets_v9
Uniq: 1820173
Index: 5
Address: 0x73e9311c
Refc: 1
=fun
Module: erl_scan
Uniq: 26393468
Index: 29
Address: 0x81930420
Refc: 1
=fun
Module: vm_memory_monitor
Uniq: 124776235
Index: 0
Address: 0x73ccd620
Refc: 1
=fun
Module: mnesia_lib
Uniq: 52941657
Index: 1
Address: 0x73fc50e0
Refc: 1
=fun
Module: mnesia_controller
Uniq: 112733957
Index: 15
Address: 0x73ee2c4c
Refc: 1
=fun
Module: mnesia_schema
Uniq: 87315063
Index: 8
Address: 0x73fdca9c
Refc: 1
=fun
Module: rabbit_amqqueue
Uniq: 49927068
Index: 40
Address: 0x73cd82c4
Refc: 1
=fun
Module: net_kernel
Uniq: 17641893
Index: 7
Address: 0x73f42cb4
Refc: 1
=fun
Module: erl_scan
Uniq: 133535912
Index: 22
Address: 0x819304ac
Refc: 1
=fun
Module: init
Uniq: 97019924
Index: 7
Address: 0xf59048f0
Refc: 1
=fun
Module: rabbit_persister
Uniq: 130231971
Index: 9
Address: 0x73d10ed8
Refc: 1
=fun
Module: disk_log
Uniq: 20890379
Index: 6
Address: 0x73ef8bfc
Refc: 1
=fun
Module: rabbit_exchange
Uniq: 10409393
Index: 3
Address: 0x73cf0fac
Refc: 1
=fun
Module: mnesia_bup
Uniq: 2444437
Index: 12
Address: 0x73ff6544
Refc: 1
=fun
Module: qlc
Uniq: 106796086
Index: 48
Address: 0x73d07fc4
Refc: 1
=fun
Module: mnesia
Uniq: 33297568
Index: 27
Address: 0x73fa4b34
Refc: 1
=fun
Module: mnesia
Uniq: 88126301
Index: 23
Address: 0x73fa4a94
Refc: 1
=fun
Module: mnesia_bup
Uniq: 90935326
Index: 10
Address: 0x73ff6a48
Refc: 1
=fun
Module: dets_v9
Uniq: 4582445
Index: 18
Address: 0x73e9220c
Refc: 1
=fun
Module: file_server
Uniq: 11064192
Index: 1
Address: 0x73f47f60
Refc: 1
=fun
Module: mnesia_loader
Uniq: 84807297
Index: 1
Address: 0x73caa3c4
Refc: 1
=fun
Module: rabbit_amqqueue
Uniq: 416675
Index: 34
Address: 0x73cd6f78
Refc: 1
=fun
Module: dets
Uniq: 41808391
Index: 12
Address: 0x73e402fc
Refc: 1
=fun
Module: rabbit_amqqueue
Uniq: 130243002
Index: 44
Address: 0x73cd8184
Refc: 1
=fun
Module: qlc
Uniq: 43615501
Index: 31
Address: 0x73d086ec
Refc: 1
=fun
Module: mnesia_schema
Uniq: 47105912
Index: 41
Address: 0x73fdccd4
Refc: 1
=fun
Module: io_lib_pretty
Uniq: 33716311
Index: 1
Address: 0x73cb48a8
Refc: 1
=fun
Module: rabbit_alarm
Uniq: 81926000
Index: 0
Address: 0x73cc7e44
Refc: 1
=fun
Module: mnesia_controller
Uniq: 42061604
Index: 17
Address: 0x73ee2c94
Refc: 1
=fun
Module: erl_scan
Uniq: 117584883
Index: 27
Address: 0x81930490
Refc: 1
=fun
Module: qlc
Uniq: 133095982
Index: 79
Address: 0x73d07774
Refc: 1
=fun
Module: rabbit_exchange
Uniq: 32617598
Index: 16
Address: 0x73cef544
Refc: 1
=fun
Module: priority_queue
Uniq: 77334640
Index: 0
Address: 0x73ccff8c
Refc: 1
=fun
Module: dets_v9
Uniq: 50621133
Index: 20
Address: 0x73e9217c
Refc: 1
=fun
Module: erl_scan
Uniq: 46680772
Index: 19
Address: 0x81930538
Refc: 1
=fun
Module: inet_config
Uniq: 103133738
Index: 3
Address: 0x81992b84
Refc: 1
=fun
Module: inet_parse
Uniq: 56617403
Index: 10
Address: 0x73f26348
Refc: 1
=fun
Module: sets
Uniq: 92536145
Index: 5
Address: 0x73d21c7c
Refc: 1
=fun
Module: rabbit_misc
Uniq: 57754015
Index: 7
Address: 0x73e671ac
Refc: 1
=fun
Module: priority_queue
Uniq: 37722873
Index: 2
Address: 0x73ccfc7c
Refc: 1
=fun
Module: inet
Uniq: 7496878
Index: 3
Address: 0x73f1a490
Refc: 1
=fun
Module: rabbit_amqqueue
Uniq: 41884547
Index: 43
Address: 0x73cd8288
Refc: 1
=fun
Module: qlc
Uniq: 51094567
Index: 34
Address: 0x73d0861c
Refc: 1
=fun
Module: mnesia
Uniq: 43644619
Index: 16
Address: 0x73fa4cf0
Refc: 1
=fun
Module: mnesia_schema
Uniq: 55227613
Index: 13
Address: 0x73fdc790
Refc: 1
=fun
Module: mnesia_lib
Uniq: 121369790
Index: 11
Address: 0x73fc4758
Refc: 1
=fun
Module: mnesia_controller
Uniq: 45399476
Index: 10
Address: 0x73ee3164
Refc: 1
=fun
Module: rabbit_amqqueue
Uniq: 37649323
Index: 14
Address: 0x73cd787c
Refc: 1
=fun
Module: rabbit_persister
Uniq: 17556149
Index: 2
Address: 0x73d113ec
Refc: 1
=fun
Module: vm_memory_monitor
Uniq: 35657592
Index: 2
Address: 0x73ccd63c
Refc: 1
=fun
Module: mnesia_schema
Uniq: 42917002
Index: 19
Address: 0x73fdc670
Refc: 1
=fun
Module: rabbit_persister
Uniq: 97773149
Index: 7
Address: 0x73d11174
Refc: 1
=fun
Module: qlc
Uniq: 47755927
Index: 60
Address: 0x73d07c28
Refc: 1
=fun
Module: mnesia_bup
Uniq: 41048196
Index: 13
Address: 0x73ff5d44
Refc: 1
=fun
Module: mnesia_loader
Uniq: 132838894
Index: 4
Address: 0x73caa1c0
Refc: 1
=fun
Module: ets
Uniq: 113878006
Index: 7
Address: 0x73f88c10
Refc: 1
=fun
Module: mnesia_schema
Uniq: 22191210
Index: 14
Address: 0x73fdc760
Refc: 1
=fun
Module: release_handler
Uniq: 71116205
Index: 9
Address: 0x73e18730
Refc: 1
=fun
Module: erl_eval
Uniq: 45552384
Index: 14
Address: 0x73e4ef4c
Refc: 1
=fun
Module: release_handler
Uniq: 26121703
Index: 11
Address: 0x73e18444
Refc: 1
=fun
Module: erl_scan
Uniq: 100160098
Index: 28
Address: 0x81930404
Refc: 1
=fun
Module: mnesia_lib
Uniq: 32425183
Index: 14
Address: 0x73fc4704
Refc: 1
=fun
Module: mnesia_checkpoint
Uniq: 22174020
Index: 8
Address: 0x73c9cd9c
Refc: 1
=fun
Module: mnesia_schema
Uniq: 21184862
Index: 9
Address: 0x73fdca24
Refc: 1
=fun
Module: rabbit_amqqueue_process
Uniq: 73816081
Index: 0
Address: 0x73d1a9a8
Refc: 1
=fun
Module: erl_eval
Uniq: 69317895
Index: 30
Address: 0x73e4e8a8
Refc: 1
=fun
Module: mnesia_schema
Uniq: 79614902
Index: 15
Address: 0x73fdc730
Refc: 1
=fun
Module: qlc
Uniq: 43596287
Index: 65
Address: 0x73d07b18
Refc: 1
=fun
Module: application_controller
Uniq: 88907784
Index: 2
Address: 0x81923760
Refc: 1
=fun
Module: inet
Uniq: 121154270
Index: 1
Address: 0x73f1a4e0
Refc: 1
=fun
Module: rabbit_persister
Uniq: 15707135
Index: 3
Address: 0x73d113c4
Refc: 1
=fun
Module: qlc
Uniq: 73903127
Index: 29
Address: 0x73d0886c
Refc: 1
=fun
Module: rabbit_amqqueue
Uniq: 45918932
Index: 46
Address: 0x73cd800c
Refc: 1
=fun
Module: mnesia
Uniq: 54017344
Index: 12
Address: 0x73fa5204
Refc: 1
=fun
Module: rabbit_exchange
Uniq: 124646403
Index: 1
Address: 0x73cf1184
Refc: 1
=fun
Module: sets
Uniq: 121707227
Index: 1
Address: 0x73d21d1c
Refc: 1
=fun
Module: dets_server
Uniq: 48664851
Index: 0
Address: 0x7400cd20
Refc: 1
=fun
Module: application_controller
Uniq: 76715200
Index: 0
Address: 0x819238c0
Refc: 1
=fun
Module: mnesia_loader
Uniq: 26617715
Index: 7
Address: 0x73caa128
Refc: 1
=fun
Module: mnesia_tm
Uniq: 94525820
Index: 0
Address: 0x73eb7150
Refc: 1
=fun
Module: inet
Uniq: 88685746
Index: 8
Address: 0x73f19dbc
Refc: 1
=fun
Module: erl_eval
Uniq: 117080903
Index: 5
Address: 0x73e4f48c
Refc: 1
=fun
Module: erl_scan
Uniq: 60828813
Index: 17
Address: 0x81930554
Refc: 1
=fun
Module: rabbit
Uniq: 122821252
Index: 3
Address: 0x73f64550
Refc: 1
=fun
Module: rabbit_amqqueue
Uniq: 15702177
Index: 45
Address: 0x73cd8048
Refc: 1
=fun
Module: inet_parse
Uniq: 113704917
Index: 0
Address: 0x73f26f94
Refc: 1
=fun
Module: erl_eval
Uniq: 81922965
Index: 13
Address: 0x73e4f008
Refc: 1
=fun
Module: dets_server
Uniq: 126315774
Index: 2
Address: 0x7400cc6c
Refc: 1
=fun
Module: qlc
Uniq: 56360841
Index: 5
Address: 0x73d0ba08
Refc: 1
=fun
Module: qlc
Uniq: 109903914
Index: 84
Address: 0x73d0746c
Refc: 1
=fun
Module: rpc
Uniq: 69165610
Index: 0
Address: 0x8196b678
Refc: 1
=fun
Module: mnesia_bup
Uniq: 96967062
Index: 5
Address: 0x73ff63c8
Refc: 1
=fun
Module: c
Uniq: 11213131
Index: 7
Address: 0x73e24af4
Refc: 1
=fun
Module: global
Uniq: 77325978
Index: 19
Address: 0x81989054
Refc: 1
=fun
Module: rabbit_exchange
Uniq: 57722122
Index: 11
Address: 0x73cefddc
Refc: 1
=fun
Module: erl_eval
Uniq: 97196398
Index: 26
Address: 0x73e4e9b4
Refc: 1
=fun
Module: erl_prim_loader
Uniq: 14602659
Index: 16
Address: 0xf5915210
Refc: 1
=fun
Module: rabbit_exchange
Uniq: 117248157
Index: 25
Address: 0x73cf05d4
Refc: 1
=fun
Module: qlc
Uniq: 63902363
Index: 85
Address: 0x73d07544
Refc: 1
=fun
Module: qlc
Uniq: 31633125
Index: 8
Address: 0x73d0b1a8
Refc: 1
=fun
Module: rabbit_misc
Uniq: 59966671
Index: 9
Address: 0x73e671f4
Refc: 1
=fun
Module: mnesia_late_loader
Uniq: 7762744
Index: 0
Address: 0x73f94ab8
Refc: 1
=fun
Module: mnesia_schema
Uniq: 48232901
Index: 33
Address: 0x73fdbc30
Refc: 1
=fun
Module: global
Uniq: 131639227
Index: 14
Address: 0x81989494
Refc: 2
=fun
Module: c
Uniq: 59481600
Index: 6
Address: 0x73e24c14
Refc: 1
=fun
Module: mnesia
Uniq: 35397315
Index: 25
Address: 0x73fa4a28
Refc: 1
=fun
Module: rabbit_persister
Uniq: 36538890
Index: 1
Address: 0x73d11528
Refc: 1
=fun
Module: dets_v9
Uniq: 119381788
Index: 13
Address: 0x73e9265c
Refc: 1
=fun
Module: mnesia_frag
Uniq: 40792144
Index: 14
Address: 0x73ec28e0
Refc: 1
=fun
Module: qlc
Uniq: 96086572
Index: 86
Address: 0x73d073b0
Refc: 1
=fun
Module: rabbit
Uniq: 95362703
Index: 2
Address: 0x73f64694
Refc: 1
=fun
Module: release_handler
Uniq: 29644323
Index: 12
Address: 0x73e183fc
Refc: 1
=fun
Module: mnesia_frag
Uniq: 68923177
Index: 13
Address: 0x73ec2ab8
Refc: 1
=fun
Module: mnesia_checkpoint
Uniq: 63364235
Index: 1
Address: 0x73c9d724
Refc: 1
=fun
Module: rabbit_router
Uniq: 120859376
Index: 0
Address: 0x73cd4388
Refc: 1
=fun
Module: proc_lib
Uniq: 52062498
Index: 0
Address: 0x81905524
Refc: 2
=fun
Module: rabbit_exchange
Uniq: 130463752
Index: 4
Address: 0x73cf0f90
Refc: 1
=fun
Module: mnesia_schema
Uniq: 75252331
Index: 3
Address: 0x73fdcd28
Refc: 1
=fun
Module: erl_scan
Uniq: 19747201
Index: 5
Address: 0x81930688
Refc: 1
=fun
Module: dict
Uniq: 80801710
Index: 0
Address: 0x81964384
Refc: 1
=fun
Module: qlc
Uniq: 58841221
Index: 39
Address: 0x73d08178
Refc: 1
=fun
Module: erl_prim_loader
Uniq: 75066605
Index: 3
Address: 0xf5915f10
Refc: 1
=fun
Module: global_group
Uniq: 62829447
Index: 4
Address: 0x73f620a4
Refc: 1
=fun
Module: dets
Uniq: 83733461
Index: 2
Address: 0x73e40a38
Refc: 1
=fun
Module: application_controller
Uniq: 124678115
Index: 16
Address: 0x81922e58
Refc: 1
=fun
Module: inet_parse
Uniq: 8832142
Index: 7
Address: 0x73f2663c
Refc: 1
=fun
Module: rabbit_amqqueue
Uniq: 120884587
Index: 24
Address: 0x73cd70e4
Refc: 1
=fun
Module: qlc
Uniq: 38381097
Index: 1
Address: 0x73d0bc38
Refc: 1
=fun
Module: code_server
Uniq: 41143059
Index: 5
Address: 0x73f76464
Refc: 1
=fun
Module: prim_zip
Uniq: 129835438
Index: 4
Address: 0xf590cbc8
Refc: 1
=fun
Module: rabbit_amqqueue
Uniq: 52184832
Index: 42
Address: 0x73cd7eb4
Refc: 1
=fun
Module: c
Uniq: 94945198
Index: 3
Address: 0x73e24cac
Refc: 1
=fun
Module: application_controller
Uniq: 12768760
Index: 14
Address: 0x81922f2c
Refc: 1
=fun
Module: mnesia_tm
Uniq: 63787604
Index: 4
Address: 0x73eb6c84
Refc: 1
=fun
Module: net_kernel
Uniq: 4245271
Index: 2
Address: 0x73f42e10
Refc: 1
=fun
Module: mnesia_schema
Uniq: 85251607
Index: 38
Address: 0x73fdb648
Refc: 1
=fun
Module: rabbit_exchange
Uniq: 50367125
Index: 14
Address: 0x73cef710
Refc: 1
=fun
Module: init
Uniq: 43183525
Index: 3
Address: 0xf5904d50
Refc: 1
=fun
Module: application_controller
Uniq: 98117994
Index: 15
Address: 0x81922e9c
Refc: 1
=fun
Module: qlc
Uniq: 8328636
Index: 75
Address: 0x73d07874
Refc: 1
=fun
Module: qlc
Uniq: 113638449
Index: 55
Address: 0x73d07e30
Refc: 1
=fun
Module: erl_scan
Uniq: 17983511
Index: 31
Address: 0x819303cc
Refc: 1
=fun
Module: inet_parse
Uniq: 88083515
Index: 9
Address: 0x73f2643c
Refc: 1
=fun
Module: qlc
Uniq: 7110057
Index: 14
Address: 0x73d09afc
Refc: 1
=fun
Module: erl_eval
Uniq: 95120463
Index: 23
Address: 0x73e4eaa4
Refc: 1
=fun
Module: qlc
Uniq: 110399762
Index: 19
Address: 0x73d09540
Refc: 1
=fun
Module: ets
Uniq: 101023778
Index: 4
Address: 0x73f88be0
Refc: 1
=fun
Module: inet_db
Uniq: 124245057
Index: 0
Address: 0x8197c474
Refc: 1
=fun
Module: global
Uniq: 107360249
Index: 0
Address: 0x8198a27c
Refc: 1
=fun
Module: mnesia_schema
Uniq: 3186944
Index: 35
Address: 0x73fdbb14
Refc: 1
=fun
Module: mnesia
Uniq: 79489111
Index: 17
Address: 0x73fa4c4c
Refc: 1
=fun
Module: qlc
Uniq: 19476315
Index: 0
Address: 0x73d0be74
Refc: 1
=fun
Module: rabbit_amqqueue
Uniq: 34828761
Index: 21
Address: 0x73cd6a2c
Refc: 1
=fun
Module: global
Uniq: 123123040
Index: 24
Address: 0x81988e50
Refc: 1
=fun
Module: mnesia_lib
Uniq: 70033809
Index: 10
Address: 0x73fc4780
Refc: 1
=fun
Module: erl_eval
Uniq: 111050249
Index: 34
Address: 0x73e4e7c4
Refc: 1
=fun
Module: dets
Uniq: 66573516
Index: 6
Address: 0x73e40924
Refc: 1
=fun
Module: mnesia_subscr
Uniq: 64065282
Index: 1
Address: 0x73e7b7dc
Refc: 1
=fun
Module: c
Uniq: 23445671
Index: 1
Address: 0x73e24df8
Refc: 1
=fun
Module: mnesia_lib
Uniq: 41965535
Index: 0
Address: 0x73fc5168
Refc: 1
=fun
Module: dets
Uniq: 42316477
Index: 8
Address: 0x73e404fc
Refc: 1
=fun
Module: global
Uniq: 79383632
Index: 17
Address: 0x819890bc
Refc: 1
=fun
Module: rabbit_amqqueue_process
Uniq: 88101200
Index: 2
Address: 0x73d1a828
Refc: 1
=fun
Module: qlc
Uniq: 98466779
Index: 22
Address: 0x73d092cc
Refc: 1
=fun
Module: rabbit_exchange
Uniq: 44955458
Index: 21
Address: 0x73cf04b8
Refc: 1
=fun
Module: dets
Uniq: 107401663
Index: 5
Address: 0x73e40954
Refc: 1
=fun
Module: erl_scan
Uniq: 105353412
Index: 26
Address: 0x8193043c
Refc: 1
=fun
Module: mnesia_frag
Uniq: 84626649
Index: 6
Address: 0x73ec3424
Refc: 1
=fun
Module: qlc
Uniq: 61189452
Index: 57
Address: 0x73d07d84
Refc: 1
=fun
Module: mnesia_frag
Uniq: 95055958
Index: 9
Address: 0x73ec2ea0
Refc: 1
=fun
Module: inet_tcp_dist
Uniq: 112081944
Index: 5
Address: 0x73f294fc
Refc: 2
=fun
Module: mnesia_bup
Uniq: 102999544
Index: 0
Address: 0x73ff7250
Refc: 1
=fun
Module: mnesia
Uniq: 15695408
Index: 24
Address: 0x73fa4a58
Refc: 1
=fun
Module: qlc
Uniq: 101602207
Index: 27
Address: 0x73d088cc
Refc: 1
=fun
Module: qlc
Uniq: 117780158
Index: 18
Address: 0x73d09638
Refc: 1
=fun
Module: net_kernel
Uniq: 101380746
Index: 0
Address: 0x73f42f10
Refc: 1
=fun
Module: inet_db
Uniq: 109216523
Index: 3
Address: 0x8197c0a8
Refc: 1
=fun
Module: qlc
Uniq: 43970627
Index: 7
Address: 0x73d0b7fc
Refc: 1
=fun
Module: rabbit_amqqueue
Uniq: 113497359
Index: 23
Address: 0x73cd6bcc
Refc: 1
=fun
Module: rabbit_amqqueue
Uniq: 112323356
Index: 47
Address: 0x73cd7fbc
Refc: 1
=fun
Module: mnesia_frag
Uniq: 61850684
Index: 17
Address: 0x73ec2ff8
Refc: 1
=fun
Module: rabbit_exchange
Uniq: 68300479
Index: 15
Address: 0x73cef664
Refc: 1
=fun
Module: erl_prim_loader
Uniq: 88016544
Index: 12
Address: 0xf59158b8
Refc: 1
=fun
Module: application_controller
Uniq: 10227174
Index: 9
Address: 0x81923200
Refc: 1
=fun
Module: rabbit_misc
Uniq: 18359369
Index: 5
Address: 0x73e674dc
Refc: 1
=fun
Module: mnesia_schema
Uniq: 30019937
Index: 34
Address: 0x73fdbc14
Refc: 1
=fun
Module: lists
Uniq: 126820281
Index: 0
Address: 0x819138e8
Refc: 1
=fun
Module: rabbit_amqqueue
Uniq: 94136558
Index: 32
Address: 0x73cd6f14
Refc: 1
=fun
Module: erl_eval
Uniq: 12529234
Index: 3
Address: 0x73e4f5d4
Refc: 1
=fun
Module: rabbit_exchange
Uniq: 124562874
Index: 10
Address: 0x73cf0044
Refc: 1
=fun
Module: dets
Uniq: 38788140
Index: 16
Address: 0x73e401c4
Refc: 1
=fun
Module: rabbit_misc
Uniq: 54976736
Index: 8
Address: 0x73e66fcc
Refc: 1
=fun
Module: erl_eval
Uniq: 67506443
Index: 22
Address: 0x73e4eb2c
Refc: 1
=fun
Module: erl_eval
Uniq: 42666164
Index: 7
Address: 0x73e4f370
Refc: 1
=fun
Module: mnesia_loader
Uniq: 100947738
Index: 3
Address: 0x73caa294
Refc: 1
=fun
Module: mnesia_lib
Uniq: 126615567
Index: 13
Address: 0x73fc4720
Refc: 1
=fun
Module: dets_v9
Uniq: 16792432
Index: 2
Address: 0x73e93a14
Refc: 1
=fun
Module: qlc
Uniq: 88893897
Index: 91
Address: 0x73d08490
Refc: 1
=fun
Module: release_handler
Uniq: 91216337
Index: 4
Address: 0x73e18bd4
Refc: 1
=fun
Module: mnesia_schema
Uniq: 130033387
Index: 40
Address: 0x73fdbdf0
Refc: 1
=fun
Module: supervisor
Uniq: 73471270
Index: 0
Address: 0x8195fe78
Refc: 1
=fun
Module: rabbit
Uniq: 14508031
Index: 10
Address: 0x73f63fe4
Refc: 1
=fun
Module: ets
Uniq: 80865327
Index: 5
Address: 0x73f88c9c
Refc: 1
=fun
Module: rabbit_amqqueue
Uniq: 17856546
Index: 6
Address: 0x73cd7a48
Refc: 1
=fun
Module: dets
Uniq: 115899887
Index: 20
Address: 0x73e400b8
Refc: 1
=fun
Module: dets
Uniq: 33264331
Index: 10
Address: 0x73e40470
Refc: 1
=fun
Module: dets_utils
Uniq: 9956930
Index: 4
Address: 0x73e5fee8
Refc: 1
=fun
Module: rabbit_exchange
Uniq: 109811660
Index: 23
Address: 0x73cf06ac
Refc: 1
=fun
Module: code_server
Uniq: 111717940
Index: 10
Address: 0x73f75dc4
Refc: 1
=fun
Module: global
Uniq: 45404475
Index: 12
Address: 0x819897a8
Refc: 1
=fun
Module: erl_prim_loader
Uniq: 49999988
Index: 11
Address: 0xf5915908
Refc: 1
=fun
Module: inet_db
Uniq: 86612957
Index: 9
Address: 0x8197bacc
Refc: 1
=fun
Module: qlc
Uniq: 35572124
Index: 56
Address: 0x73d07dcc
Refc: 1
=fun
Module: release_handler
Uniq: 127190220
Index: 1
Address: 0x73e18e50
Refc: 1
=fun
Module: mnesia_frag
Uniq: 444583
Index: 15
Address: 0x73ec2894
Refc: 1
=fun
Module: mnesia_controller
Uniq: 44028490
Index: 9
Address: 0x73ee3180
Refc: 1
=fun
Module: qlc
Uniq: 8975952
Index: 87
Address: 0x73d0737c
Refc: 1
=fun
Module: erl_eval
Uniq: 104545203
Index: 10
Address: 0x73e4f19c
Refc: 1
=fun
Module: ets
Uniq: 54643254
Index: 17
Address: 0x73f88af4
Refc: 1
=fun
Module: global
Uniq: 33599240
Index: 27
Address: 0x81989eb4
Refc: 1
=fun
Module: release_handler
Uniq: 53931675
Index: 6
Address: 0x73e18ad8
Refc: 1
=fun
Module: mnesia
Uniq: 121953690
Index: 15
Address: 0x73fa4eac
Refc: 1
=fun
Module: disk_log
Uniq: 29528510
Index: 4
Address: 0x73ef8c80
Refc: 1
=fun
Module: rabbit_amqqueue
Uniq: 62221348
Index: 7
Address: 0x73cd7a2c
Refc: 1
=fun
Module: mnesia_loader
Uniq: 106820403
Index: 5
Address: 0x73caa184
Refc: 1
=fun
Module: global
Uniq: 78823480
Index: 26
Address: 0x81989778
Refc: 1
=fun
Module: mnesia_tm
Uniq: 104980783
Index: 1
Address: 0x73eb7090
Refc: 1
=fun
Module: rabbit_amqqueue
Uniq: 51050952
Index: 12
Address: 0x73cd78ec
Refc: 1
=fun
Module: dict
Uniq: 3686529
Index: 13
Address: 0x81964158
Refc: 1
=fun
Module: mnesia_lib
Uniq: 55449016
Index: 5
Address: 0x73fc4b38
Refc: 1
=fun
Module: global
Uniq: 44333536
Index: 6
Address: 0x81989e54
Refc: 1
=fun
Module: dets_v9
Uniq: 51593031
Index: 0
Address: 0x73e93ea8
Refc: 1
=fun
Module: dets
Uniq: 119155077
Index: 15
Address: 0x73e401f0
Refc: 1
=fun
Module: inet_parse
Uniq: 130814477
Index: 8
Address: 0x73f26508
Refc: 1
=fun
Module: c
Uniq: 95068043
Index: 8
Address: 0x73e24aac
Refc: 1
=fun
Module: mnesia
Uniq: 111364283
Index: 19
Address: 0x73fa4c30
Refc: 1
=fun
Module: cpu_sup
Uniq: 67634433
Index: 4
Address: 0x73e7385c
Refc: 1
=fun
Module: code_server
Uniq: 100109699
Index: 2
Address: 0x73f7663c
Refc: 1
=fun
Module: file_server
Uniq: 90254642
Index: 0
Address: 0x73f47f94
Refc: 1
=fun
Module: prim_zip
Uniq: 36346675
Index: 1
Address: 0xf590cc50
Refc: 1
=fun
Module: prim_zip
Uniq: 88765944
Index: 3
Address: 0xf590cbf8
Refc: 1
=fun
Module: erl_prim_loader
Uniq: 3809279
Index: 9
Address: 0xf5915a90
Refc: 1
=fun
Module: erl_scan
Uniq: 45590999
Index: 20
Address: 0x819304e4
Refc: 1
=fun
Module: erl_prim_loader
Uniq: 81251680
Index: 7
Address: 0xf5915c18
Refc: 1
=fun
Module: inet_config
Uniq: 116484306
Index: 4
Address: 0x81992b68
Refc: 1
=fun
Module: global
Uniq: 18668340
Index: 4
Address: 0x81989fec
Refc: 1
=fun
Module: dets_v9
Uniq: 116841982
Index: 1
Address: 0x73e93dcc
Refc: 1
=fun
Module: qlc
Uniq: 72973499
Index: 36
Address: 0x73d08308
Refc: 1
=fun
Module: rabbit_persister
Uniq: 98129045
Index: 11
Address: 0x73d10e78
Refc: 1
=fun
Module: rabbit_mnesia
Uniq: 29844429
Index: 1
Address: 0x73f90434
Refc: 1
=fun
Module: inet_parse
Uniq: 71765042
Index: 5
Address: 0x73f26780
Refc: 1
=fun
Module: erl_scan
Uniq: 87892338
Index: 35
Address: 0x8193035c
Refc: 1
=fun
Module: dets_server
Uniq: 127963778
Index: 3
Address: 0x7400ca7c
Refc: 2
=fun
Module: rabbit_exchange
Uniq: 66334102
Index: 0
Address: 0x73cf1244
Refc: 1
=fun
Module: rabbit_exchange
Uniq: 82146266
Index: 17
Address: 0x73cef528
Refc: 1
=fun
Module: dets_v9
Uniq: 26980114
Index: 19
Address: 0x73e921d0
Refc: 1
=fun
Module: rabbit_exchange
Uniq: 127235742
Index: 28
Address: 0x73cf0638
Refc: 1
=fun
Module: mnesia_tm
Uniq: 114209721
Index: 3
Address: 0x73eb6cb4
Refc: 1
=fun
Module: erl_scan
Uniq: 31129467
Index: 13
Address: 0x819305a8
Refc: 1
=fun
Module: inet
Uniq: 65052819
Index: 4
Address: 0x73f1a2bc
Refc: 1
=fun
Module: cpu_sup
Uniq: 63246064
Index: 3
Address: 0x73e738a4
Refc: 1
=fun
Module: qlc
Uniq: 65777636
Index: 95
Address: 0x73d0948c
Refc: 1
=fun
Module: rabbit_amqqueue
Uniq: 5377090
Index: 17
Address: 0x73cd76d8
Refc: 1
=fun
Module: code_server
Uniq: 12280860
Index: 6
Address: 0x73f7630c
Refc: 2
=fun
Module: qlc
Uniq: 51311803
Index: 17
Address: 0x73d09660
Refc: 1
=fun
Module: gen_event
Uniq: 42517447
Index: 1
Address: 0x818fd244
Refc: 1
=fun
Module: mnesia_locker
Uniq: 69991318
Index: 0
Address: 0x73ea6a34
Refc: 1
=fun
Module: prim_zip
Uniq: 22533001
Index: 0
Address: 0xf590cc6c
Refc: 1
=fun
Module: rabbit_binary_generator
Uniq: 130182802
Index: 1
Address: 0x73ccacd0
Refc: 1
=fun
Module: mnesia_bup
Uniq: 76133909
Index: 15
Address: 0x73ff5cf0
Refc: 1
=fun
Module: rabbit_persister
Uniq: 62121186
Index: 4
Address: 0x73d11378
Refc: 1
=fun
Module: global_group
Uniq: 25932926
Index: 3
Address: 0x73f62124
Refc: 1
=fun
Module: cpu_sup
Uniq: 118427788
Index: 1
Address: 0x73e73a64
Refc: 1
=fun
Module: global
Uniq: 129057541
Index: 10
Address: 0x81989b20
Refc: 1
=fun
Module: rabbit_amqqueue
Uniq: 54369586
Index: 19
Address: 0x73cd6950
Refc: 1
=fun
Module: erl_eval
Uniq: 67289768
Index: 20
Address: 0x73e4ec30
Refc: 1
=fun
Module: dict
Uniq: 63958379
Index: 4
Address: 0x819642b0
Refc: 3
=fun
Module: qlc
Uniq: 60244196
Index: 90
Address: 0x73d080f0
Refc: 1
=fun
Module: mnesia_dumper
Uniq: 104426922
Index: 0
Address: 0x73c9250c
Refc: 1
=fun
Module: global
Uniq: 108284074
Index: 1
Address: 0x8198a17c
Refc: 1
=fun
Module: qlc
Uniq: 42830770
Index: 33
Address: 0x73d08664
Refc: 1
=fun
Module: rabbit_amqqueue
Uniq: 90245516
Index: 50
Address: 0x73cd8404
Refc: 1
=fun
Module: dets
Uniq: 61442007
Index: 21
Address: 0x73e40034
Refc: 1
=fun
Module: application_controller
Uniq: 48568865
Index: 1
Address: 0x819237c8
Refc: 1
=fun
Module: rpc
Uniq: 48216782
Index: 4
Address: 0x8196b48c
Refc: 1
=fun
Module: mnesia
Uniq: 56199182
Index: 14
Address: 0x73fa4f8c
Refc: 1
=fun
Module: mnesia_controller
Uniq: 51885182
Index: 16
Address: 0x73ee29f4
Refc: 1
=fun
Module: mnesia_controller
Uniq: 66188670
Index: 2
Address: 0x73ee3698
Refc: 1
=fun
Module: mnesia_schema
Uniq: 74505759
Index: 17
Address: 0x73fdc6d0
Refc: 1
=fun
Module: erl_eval
Uniq: 111717094
Index: 15
Address: 0x73e4eea8
Refc: 1
=fun
Module: qlc
Uniq: 69450356
Index: 69
Address: 0x73d07a30
Refc: 1
=fun
Module: global
Uniq: 74500805
Index: 21
Address: 0x81989000
Refc: 2
=fun
Module: dets_v9
Uniq: 91636669
Index: 10
Address: 0x73e927c0
Refc: 1
=fun
Module: mnesia_lib
Uniq: 92217297
Index: 8
Address: 0x73fc4954
Refc: 1
=fun
Module: global
Uniq: 2895738
Index: 22
Address: 0x81988f38
Refc: 1
=fun
Module: rabbit_amqqueue_process
Uniq: 9609617
Index: 6
Address: 0x73d19f00
Refc: 1
=fun
Module: mnesia
Uniq: 114820947
Index: 18
Address: 0x73fa4c94
Refc: 1
=fun
Module: rabbit_exchange
Uniq: 90758204
Index: 29
Address: 0x73cf086c
Refc: 1
=fun
Module: inet_db
Uniq: 9289184
Index: 8
Address: 0x8197bca8
Refc: 1
=fun
Module: release_handler
Uniq: 93773640
Index: 10
Address: 0x73e18640
Refc: 2
=fun
Module: supervisor
Uniq: 19520856
Index: 1
Address: 0x8195fdf8
Refc: 1
=fun
Module: mnesia_controller
Uniq: 131739807
Index: 18
Address: 0x73ee2cc4
Refc: 1
=fun
Module: dets_server
Uniq: 44084634
Index: 1
Address: 0x7400cc3c
Refc: 1
=fun
Module: mnesia_schema
Uniq: 67902346
Index: 26
Address: 0x73fdc344
Refc: 1
=fun
Module: erl_eval
Uniq: 61929595
Index: 35
Address: 0x73e4e690
Refc: 1
=fun
Module: rabbit_exchange
Uniq: 99126738
Index: 24
Address: 0x73cf0600
Refc: 1
=fun
Module: global_group
Uniq: 106196531
Index: 5
Address: 0x73f62064
Refc: 1
=fun
Module: qlc
Uniq: 91020957
Index: 66
Address: 0x73d07ac8
Refc: 1
=fun
Module: erl_eval
Uniq: 24079196
Index: 11
Address: 0x73e4f130
Refc: 1
=fun
Module: disk_log_server
Uniq: 102978919
Index: 1
Address: 0x73ec72c8
Refc: 1
=fun
Module: init
Uniq: 52978875
Index: 1
Address: 0xf5904da0
Refc: 1
=fun
Module: file_io_server
Uniq: 18290749
Index: 0
Address: 0x73fbaa40
Refc: 2
=fun
Module: mnesia_schema
Uniq: 58011654
Index: 32
Address: 0x73fdbf74
Refc: 1
=fun
Module: application_controller
Uniq: 111252405
Index: 5
Address: 0x81923628
Refc: 1
=fun
Module: qlc
Uniq: 47351793
Index: 12
Address: 0x73d0aa38
Refc: 1
=fun
Module: mnesia_loader
Uniq: 89220703
Index: 0
Address: 0x73caa4b0
Refc: 1
=fun
Module: inet_config
Uniq: 47398
Index: 1
Address: 0x81992c70
Refc: 1
=fun
Module: rabbit_amqqueue_process
Uniq: 24865344
Index: 4
Address: 0x73d1a46c
Refc: 1
=fun
Module: cpu_sup
Uniq: 97772561
Index: 0
Address: 0x73e73ac8
Refc: 1
=fun
Module: inet_gethost_native
Uniq: 81893892
Index: 0
Address: 0x73f2f224
Refc: 1
=fun
Module: rabbit_misc
Uniq: 16155648
Index: 0
Address: 0x73e67a20
Refc: 1
=fun
Module: rabbit
Uniq: 67992916
Index: 1
Address: 0x73f646d4
Refc: 1
=fun
Module: rabbit_amqqueue
Uniq: 52173060
Index: 41
Address: 0x73cd7df0
Refc: 1
=fun
Module: global
Uniq: 57205986
Index: 25
Address: 0x81988f7c
Refc: 1
=fun
Module: application_controller
Uniq: 26912726
Index: 8
Address: 0x819232b0
Refc: 1
=fun
Module: erl_parse
Uniq: 20793614
Index: 0
Address: 0x8194a8f0
Refc: 1
=fun
Module: mnesia_lib
Uniq: 110435161
Index: 3
Address: 0x73fc4f14
Refc: 1
=fun
Module: qlc
Uniq: 120830562
Index: 89
Address: 0x73d072e4
Refc: 1
=fun
Module: rabbit_exchange
Uniq: 90271011
Index: 5
Address: 0x73cf0ef0
Refc: 1
=fun
Module: gen_event
Uniq: 112168427
Index: 2
Address: 0x818fd080
Refc: 1
=fun
Module: c
Uniq: 123195706
Index: 5
Address: 0x73e24c30
Refc: 1
=fun
Module: qlc
Uniq: 73299485
Index: 28
Address: 0x73d08894
Refc: 1
=fun
Module: inet_gethost_native
Uniq: 109774182
Index: 1
Address: 0x73f2f068
Refc: 1
=fun
Module: mnesia_controller
Uniq: 9324908
Index: 19
Address: 0x73ee2c7c
Refc: 1
=fun
Module: erl_eval
Uniq: 59896125
Index: 28
Address: 0x73e4e914
Refc: 1
=fun
Module: dets
Uniq: 23603521
Index: 0
Address: 0x73e40a7c
Refc: 1
=fun
Module: erl_scan
Uniq: 12042434
Index: 1
Address: 0x819306a4
Refc: 1
=fun
Module: dets
Uniq: 101583926
Index: 7
Address: 0x73e408d0
Refc: 1
=fun
Module: dets
Uniq: 66534275
Index: 9
Address: 0x73e404a0
Refc: 1
=fun
Module: application_controller
Uniq: 7393523
Index: 12
Address: 0x81923058
Refc: 1
=fun
Module: mnesia_controller
Uniq: 91643284
Index: 5
Address: 0x73ee3430
Refc: 1
=fun
Module: mnesia_event
Uniq: 82571779
Index: 0
Address: 0x73e6b824
Refc: 1
=fun
Module: release_handler
Uniq: 46119
Index: 2
Address: 0x73e18dd8
Refc: 1
=fun
Module: mnesia_frag
Uniq: 16064164
Index: 16
Address: 0x73ec27b4
Refc: 1
=fun
Module: mnesia_subscr
Uniq: 14629168
Index: 3
Address: 0x73e7b774
Refc: 1
=fun
Module: disk_log
Uniq: 117741255
Index: 0
Address: 0x73ef900c
Refc: 1
=fun
Module: qlc
Uniq: 94673727
Index: 64
Address: 0x73d07b78
Refc: 1
=fun
Module: erl_eval
Uniq: 113037538
Index: 12
Address: 0x73e4f0dc
Refc: 1
=fun
Module: net_kernel
Uniq: 15440390
Index: 3
Address: 0x73f42da0
Refc: 1
=fun
Module: mnesia_checkpoint
Uniq: 89349471
Index: 5
Address: 0x73c9d610
Refc: 1
=fun
Module: mnesia
Uniq: 75490051
Index: 21
Address: 0x73fa4be4
Refc: 1
=fun
Module: mnesia_index
Uniq: 93822267
Index: 1
Address: 0x73cade64
Refc: 1
=fun
Module: dets_v9
Uniq: 74678693
Index: 14
Address: 0x73e925c0
Refc: 1
=fun
Module: inet_db
Uniq: 116334385
Index: 7
Address: 0x8197bcc4
Refc: 1
=fun
Module: mnesia_log
Uniq: 57054875
Index: 3
Address: 0x73ed3894
Refc: 1
=fun
Module: vm_memory_monitor
Uniq: 38763529
Index: 1
Address: 0x73ccd6e4
Refc: 1
=fun
Module: rpc
Uniq: 42921910
Index: 1
Address: 0x8196b624
Refc: 1
=fun
Module: erl_scan
Uniq: 114637756
Index: 12
Address: 0x819305c4
Refc: 1
=fun
Module: qlc
Uniq: 132940205
Index: 49
Address: 0x73d07ff0
Refc: 1
=fun
Module: net_kernel
Uniq: 72770210
Index: 1
Address: 0x73f42e9c
Refc: 1
=fun
Module: mnesia_log
Uniq: 28386126
Index: 0
Address: 0x73ed3918
Refc: 1
=fun
Module: init
Uniq: 116626438
Index: 6
Address: 0xf5904ae0
Refc: 1
=fun
Module: erl_scan
Uniq: 45252965
Index: 15
Address: 0x81930570
Refc: 1
=fun
Module: mnesia
Uniq: 32364046
Index: 11
Address: 0x73fa5474
Refc: 1
=fun
Module: init
Uniq: 106655460
Index: 5
Address: 0xf5904bdc
Refc: 1
=fun
Module: qlc
Uniq: 11882167
Index: 4
Address: 0x73d0ba20
Refc: 1
=fun
Module: code_server
Uniq: 98520816
Index: 11
Address: 0x73f75d00
Refc: 1
=fun
Module: erl_eval
Uniq: 68528436
Index: 2
Address: 0x73e4f650
Refc: 1
=fun
Module: os
Uniq: 70583073
Index: 0
Address: 0x73f13af4
Refc: 1
=fun
Module: mnesia_bup
Uniq: 7373276
Index: 9
Address: 0x73ff6ca8
Refc: 1
=fun
Module: disk_log
Uniq: 35107615
Index: 2
Address: 0x73ef8eb8
Refc: 1
=fun
Module: inet_tcp_dist
Uniq: 11559673
Index: 3
Address: 0x73f29534
Refc: 2
=fun
Module: mnesia
Uniq: 109941107
Index: 8
Address: 0x73fa5704
Refc: 1
=fun
Module: application_controller
Uniq: 42372705
Index: 17
Address: 0x81922b94
Refc: 1
=fun
Module: qlc
Uniq: 46378448
Index: 47
Address: 0x73d08030
Refc: 1
=fun
Module: inet_db
Uniq: 11614433
Index: 4
Address: 0x8197bd38
Refc: 1
=fun
Module: ets
Uniq: 35346458
Index: 8
Address: 0x73f88ba0
Refc: 1
=fun
Module: mnesia_controller
Uniq: 32003269
Index: 8
Address: 0x73ee327c
Refc: 1
=fun
Module: inet_db
Uniq: 107800056
Index: 1
Address: 0x8197c128
Refc: 1
=fun
Module: rabbit_amqqueue
Uniq: 101633203
Index: 33
Address: 0x73cd6ed0
Refc: 1
=fun
Module: dict
Uniq: 117755170
Index: 8
Address: 0x819641d8
Refc: 1
=fun
Module: inet_parse
Uniq: 47356870
Index: 11
Address: 0x73f262bc
Refc: 1
=fun
Module: qlc
Uniq: 115014023
Index: 44
Address: 0x73d08280
Refc: 1
=fun
Module: qlc
Uniq: 86716198
Index: 2
Address: 0x73d0ba3c
Refc: 1
=fun
Module: erl_scan
Uniq: 78224618
Index: 0
Address: 0x81930730
Refc: 1
=fun
Module: rabbit_exchange
Uniq: 44205511
Index: 30
Address: 0x73cf0e4c
Refc: 1
=fun
Module: erl_parse
Uniq: 123118389
Index: 1
Address: 0x8194a758
Refc: 1
=fun
Module: inet
Uniq: 44118929
Index: 7
Address: 0x73f1a078
Refc: 1
=fun
Module: mnesia_controller
Uniq: 28860142
Index: 0
Address: 0x73ee3a10
Refc: 1
=fun
Module: dict
Uniq: 7618830
Index: 5
Address: 0x81964280
Refc: 1
=fun
Module: rabbit_misc
Uniq: 56667354
Index: 6
Address: 0x73e6726c
Refc: 1
=fun
Module: mnesia_schema
Uniq: 69617962
Index: 22
Address: 0x73fdc5dc
Refc: 1
=fun
Module: mnesia_schema
Uniq: 123079070
Index: 20
Address: 0x73fdc640
Refc: 1
=fun
Module: erl_scan
Uniq: 108931174
Index: 8
Address: 0x81930618
Refc: 1
=fun
Module: rabbit_mnesia
Uniq: 40056606
Index: 0
Address: 0x73f90524
Refc: 1
=fun
Module: erl_eval
Uniq: 10400016
Index: 33
Address: 0x73e4e80c
Refc: 1
=fun
Module: rabbit_amqqueue
Uniq: 13264371
Index: 35
Address: 0x73cd7174
Refc: 1
=fun
Module: erl_eval
Uniq: 51509793
Index: 32
Address: 0x73e4e84c
Refc: 1
=fun
Module: mnesia_controller
Uniq: 108949395
Index: 14
Address: 0x73ee2b84
Refc: 1
=fun
Module: qlc
Uniq: 3027524
Index: 40
Address: 0x73d08128
Refc: 1
=fun
Module: erl_scan
Uniq: 121559432
Index: 3
Address: 0x819306dc
Refc: 1
=fun
Module: c
Uniq: 119274085
Index: 0
Address: 0x73e24fc0
Refc: 1
=fun
Module: mnesia_frag
Uniq: 107792674
Index: 4
Address: 0x73ec34c4
Refc: 1
=fun
Module: application_controller
Uniq: 10792426
Index: 18
Address: 0x81922b14
Refc: 2
=fun
Module: inet_db
Uniq: 42702732
Index: 11
Address: 0x8197c458
Refc: 1
=fun
Module: erl_eval
Uniq: 118379185
Index: 0
Address: 0x73e4f790
Refc: 1
=fun
Module: rabbit_amqqueue
Uniq: 93375614
Index: 0
Address: 0x73cd88e0
Refc: 1
=fun
Module: sets
Uniq: 77103967
Index: 7
Address: 0x73d21c44
Refc: 1
=fun
Module: dets_utils
Uniq: 124924938
Index: 1
Address: 0x73e601c8
Refc: 1
=fun
Module: rabbit_persister
Uniq: 99496810
Index: 5
Address: 0x73d1135c
Refc: 1
=fun
Module: rabbit_amqqueue
Uniq: 106280042
Index: 27
Address: 0x73cd6d04
Refc: 1
=fun
Module: mnesia
Uniq: 79514171
Index: 0
Address: 0x73fa5a00
Refc: 1
=fun
Module: rabbit_amqqueue
Uniq: 87414464
Index: 10
Address: 0x73cd7978
Refc: 1
=fun
Module: qlc
Uniq: 121729538
Index: 32
Address: 0x73d086ac
Refc: 1
=fun
Module: mnesia_loader
Uniq: 52586886
Index: 2
Address: 0x73caa37c
Refc: 1
=fun
Module: inet_db
Uniq: 21401377
Index: 2
Address: 0x8197c0c4
Refc: 1
=fun
Module: rabbit_amqqueue
Uniq: 59920054
Index: 52
Address: 0x73cd89e4
Refc: 1
=fun
Module: erl_scan
Uniq: 128777368
Index: 11
Address: 0x819305e0
Refc: 1
=fun
Module: mnesia_schema
Uniq: 66993242
Index: 31
Address: 0x73fdc02c
Refc: 1
=fun
Module: rpc
Uniq: 133190634
Index: 2
Address: 0x8196b558
Refc: 1
=fun
Module: rabbit_persister
Uniq: 98763126
Index: 8
Address: 0x73d10f0c
Refc: 1
=fun
Module: mnesia
Uniq: 115675768
Index: 20
Address: 0x73fa4c14
Refc: 1
=fun
Module: qlc
Uniq: 47209499
Index: 62
Address: 0x73d07b94
Refc: 1
=fun
Module: erl_eval
Uniq: 58436961
Index: 27
Address: 0x73e4e964
Refc: 1
=fun
Module: rabbit_amqqueue
Uniq: 14451731
Index: 39
Address: 0x73cd82e4
Refc: 1
=fun
Module: mnesia_checkpoint
Uniq: 60380905
Index: 2
Address: 0x73c9d6d4
Refc: 1
=fun
Module: mnesia_controller
Uniq: 90516986
Index: 1
Address: 0x73ee36fc
Refc: 1
=fun
Module: erl_eval
Uniq: 10531915
Index: 17
Address: 0x73e4eda8
Refc: 1
=fun
Module: erl_prim_loader
Uniq: 81938612
Index: 8
Address: 0xf5915b54
Refc: 1
=fun
Module: rabbit_amqqueue
Uniq: 56198827
Index: 13
Address: 0x73cd78d0
Refc: 1
=fun
Module: sets
Uniq: 81077016
Index: 8
Address: 0x73d21c08
Refc: 1
=fun
Module: rabbit_exchange
Uniq: 50684370
Index: 8
Address: 0x73cf0150
Refc: 1
=fun
Module: gen_event
Uniq: 99987390
Index: 3
Address: 0x818fcf1c
Refc: 1
=fun
Module: mnesia_log
Uniq: 12650918
Index: 6
Address: 0x73ed3604
Refc: 1
=fun
Module: qlc
Uniq: 45431550
Index: 73
Address: 0x73d078f8
Refc: 1
=fun
Module: mnesia_lib
Uniq: 76508394
Index: 7
Address: 0x73fc4988
Refc: 1
=fun
Module: mnesia_schema
Uniq: 55817931
Index: 5
Address: 0x73fdcb4c
Refc: 1
=fun
Module: ets
Uniq: 126391248
Index: 3
Address: 0x73f88ce0
Refc: 1
=fun
Module: erl_prim_loader
Uniq: 18867649
Index: 18
Address: 0xf591501c
Refc: 1
=fun
Module: qlc
Uniq: 93038246
Index: 70
Address: 0x73d079cc
Refc: 1
=fun
Module: dets_v9
Uniq: 44995456
Index: 9
Address: 0x73e92820
Refc: 1
=fun
Module: dets_v9
Uniq: 94032547
Index: 21
Address: 0x73e91e4c
Refc: 1
=fun
Module: sets
Uniq: 112901484
Index: 2
Address: 0x73d21ce4
Refc: 1
=fun
Module: mnesia_bup
Uniq: 50961067
Index: 11
Address: 0x73ff6960
Refc: 1
=fun
Module: mnesia
Uniq: 49872753
Index: 6
Address: 0x73fa57fc
Refc: 1
=fun
Module: rabbit_mnesia
Uniq: 41203651
Index: 2
Address: 0x73f90128
Refc: 1
=fun
Module: rabbit_amqqueue
Uniq: 25068795
Index: 38
Address: 0x73cd8374
Refc: 1
=fun
Module: sets
Uniq: 16341513
Index: 0
Address: 0x73d21d38
Refc: 1
=fun
Module: mnesia_schema
Uniq: 65047490
Index: 4
Address: 0x73fdcc24
Refc: 1
=fun
Module: inet_parse
Uniq: 29214351
Index: 2
Address: 0x73f26e6c
Refc: 1
=fun
Module: application_controller
Uniq: 124112560
Index: 7
Address: 0x81923348
Refc: 1
=fun
Module: erl_scan
Uniq: 88043334
Index: 14
Address: 0x8193058c
Refc: 1
=fun
Module: inet_config
Uniq: 57616428
Index: 0
Address: 0x81992ca0
Refc: 1
=fun
Module: rabbit_amqqueue
Uniq: 133707255
Index: 3
Address: 0x73cd7ab8
Refc: 1
=fun
Module: inet_db
Uniq: 116363178
Index: 10
Address: 0x8197b9b0
Refc: 1
=fun
Module: qlc
Uniq: 81595264
Index: 74
Address: 0x73d078d8
Refc: 1
=fun
Module: mnesia_bup
Uniq: 115488223
Index: 3
Address: 0x73ff6fd0
Refc: 1
=fun
Module: rabbit_amqqueue
Uniq: 7996288
Index: 2
Address: 0x73cd7af8
Refc: 1
=fun
Module: qlc
Uniq: 62755644
Index: 15
Address: 0x73d09ad0
Refc: 1
=fun
Module: kernel_config
Uniq: 32750002
Index: 0
Address: 0x73fa9cac
Refc: 1
=fun
Module: mnesia_schema
Uniq: 73426598
Index: 27
Address: 0x73fdc314
Refc: 1
=fun
Module: rpc
Uniq: 62336909
Index: 5
Address: 0x8196b470
Refc: 1
=fun
Module: rpc
Uniq: 90773186
Index: 3
Address: 0x8196b52c
Refc: 1
=fun
Module: net_kernel
Uniq: 17349051
Index: 5
Address: 0x73f42d00
Refc: 1
=fun
Module: dets_v9
Uniq: 5420961
Index: 12
Address: 0x73e926ac
Refc: 1
=fun
Module: qlc
Uniq: 88792755
Index: 58
Address: 0x73d07d3c
Refc: 1
=fun
Module: qlc
Uniq: 38882980
Index: 3
Address: 0x73d0bb4c
Refc: 1
=fun
Module: rabbit_exchange
Uniq: 129938278
Index: 6
Address: 0x73cf0f40
Refc: 1
=fun
Module: dets
Uniq: 44041544
Index: 18
Address: 0x73e4013c
Refc: 1
=fun
Module: erl_scan
Uniq: 115530048
Index: 21
Address: 0x81930500
Refc: 1
=fun
Module: mnesia_bup
Uniq: 92582319
Index: 14
Address: 0x73ff5d0c
Refc: 1
=fun
Module: erl_prim_loader
Uniq: 125948878
Index: 10
Address: 0xf59159cc
Refc: 2
=fun
Module: rabbit_amqqueue
Uniq: 28866133
Index: 29
Address: 0x73cd7004
Refc: 1
=fun
Module: disk_log
Uniq: 104174135
Index: 3
Address: 0x73ef8cfc
Refc: 1
=fun
Module: dets_v9
Uniq: 86738836
Index: 22
Address: 0x73e91df0
Refc: 1
=fun
Module: global
Uniq: 38406150
Index: 9
Address: 0x81989d64
Refc: 1
=fun
Module: erl_prim_loader
Uniq: 37900046
Index: 17
Address: 0xf59150dc
Refc: 1
=fun
Module: inet_parse
Uniq: 105698088
Index: 3
Address: 0x73f26dc0
Refc: 1
=fun
Module: release_handler
Uniq: 132458969
Index: 7
Address: 0x73e18aa8
Refc: 1
=fun
Module: mnesia_frag
Uniq: 124617875
Index: 5
Address: 0x73ec3478
Refc: 1
=fun
Module: net_kernel
Uniq: 33683044
Index: 4
Address: 0x73f42d30
Refc: 1
=fun
Module: mnesia_log
Uniq: 34843847
Index: 4
Address: 0x73ed369c
Refc: 1
=fun
Module: rabbit
Uniq: 50323054
Index: 5
Address: 0x73f644a4
Refc: 1
=fun
Module: gen_server
Uniq: 14774588
Index: 0
Address: 0x819297b8
Refc: 1
=fun
Module: sets
Uniq: 9616702
Index: 4
Address: 0x73d21c98
Refc: 1
=fun
Module: mnesia_index
Uniq: 32180016
Index: 0
Address: 0x73cadef4
Refc: 1
=fun
Module: rabbit_amqqueue_process
Uniq: 106665719
Index: 5
Address: 0x73d1a2fc
Refc: 1
=fun
Module: qlc
Uniq: 52355428
Index: 82
Address: 0x73d075d4
Refc: 1
=fun
Module: qlc
Uniq: 27588840
Index: 20
Address: 0x73d095ec
Refc: 1
=fun
Module: gen_server2
Uniq: 59853626
Index: 0
Address: 0x73ce55b0
Refc: 1
=fun
Module: sets
Uniq: 117584232
Index: 9
Address: 0x73d21bb8
Refc: 1
=fun
Module: dets
Uniq: 114100858
Index: 17
Address: 0x73e4017c
Refc: 1
=fun
Module: mnesia
Uniq: 32947125
Index: 10
Address: 0x73fa5490
Refc: 1
=fun
Module: dets
Uniq: 9814223
Index: 3
Address: 0x73e409f4
Refc: 1
=fun
Module: mnesia_sup
Uniq: 47901635
Index: 1
Address: 0x73e62644
Refc: 1
=fun
Module: mnesia_frag
Uniq: 66797359
Index: 2
Address: 0x73ec3820
Refc: 1
=fun
Module: mnesia_frag
Uniq: 41338695
Index: 1
Address: 0x73ec3868
Refc: 1
=fun
Module: mnesia_lib
Uniq: 19988910
Index: 12
Address: 0x73fc473c
Refc: 1
=fun
Module: rabbit_misc
Uniq: 5301611
Index: 1
Address: 0x73e677f4
Refc: 1
=fun
Module: rabbit_amqqueue
Uniq: 107437219
Index: 5
Address: 0x73cd7a64
Refc: 1
=fun
Module: mnesia_dumper
Uniq: 25640803
Index: 1
Address: 0x73c926e4
Refc: 1
=fun
Module: mnesia_checkpoint
Uniq: 7809621
Index: 4
Address: 0x73c9d62c
Refc: 1
=fun
Module: rabbit_amqqueue
Uniq: 61465489
Index: 16
Address: 0x73cd7810
Refc: 1
=fun
Module: dets
Uniq: 119826431
Index: 14
Address: 0x73e40298
Refc: 1
=fun
Module: mnesia_lib
Uniq: 125764640
Index: 6
Address: 0x73fc49a4
Refc: 1
=fun
Module: erl_eval
Uniq: 60779537
Index: 9
Address: 0x73e4f220
Refc: 1
=fun
Module: dets
Uniq: 116168731
Index: 11
Address: 0x73e4040c
Refc: 1
=fun
Module: qlc
Uniq: 99121136
Index: 43
Address: 0x73d08250
Refc: 1
=fun
Module: rabbit_exchange
Uniq: 111916343
Index: 18
Address: 0x73cf07c8
Refc: 1
=fun
Module: inet_parse
Uniq: 113649451
Index: 4
Address: 0x73f268ac
Refc: 1
=fun
Module: rabbit_misc
Uniq: 119734964
Index: 2
Address: 0x73e677c8
Refc: 1
=fun
Module: qlc
Uniq: 27778019
Index: 51
Address: 0x73d07f44
Refc: 1
=fun
Module: rabbit_persister
Uniq: 78444983
Index: 6
Address: 0x73d11314
Refc: 1
=fun
Module: code_server
Uniq: 81711762
Index: 12
Address: 0x73f75c90
Refc: 1
=fun
Module: rabbit_amqqueue
Uniq: 24760479
Index: 22
Address: 0x73cd7648
Refc: 1
=fun
Module: mnesia_bup
Uniq: 53641767
Index: 4
Address: 0x73ff6de8
Refc: 1
=fun
Module: rabbit_amqqueue
Uniq: 9688607
Index: 51
Address: 0x73cd8854
Refc: 1
=fun
Module: mnesia_bup
Uniq: 54777839
Index: 1
Address: 0x73ff71a0
Refc: 1
=fun
Module: mnesia_schema
Uniq: 77132772
Index: 25
Address: 0x73fdc374
Refc: 1
=fun
Module: dict
Uniq: 105315937
Index: 7
Address: 0x81964220
Refc: 1
=fun
Module: erl_prim_loader
Uniq: 18748191
Index: 6
Address: 0xf5915cdc
Refc: 1
=fun
Module: qlc
Uniq: 53006724
Index: 67
Address: 0x73d07ab0
Refc: 1
=fun
Module: mnesia_schema
Uniq: 71459092
Index: 28
Address: 0x73fdc2e4
Refc: 1
=fun
Module: application_controller
Uniq: 49204737
Index: 3
Address: 0x8192358c
Refc: 1
=fun
Module: rabbit_amqqueue
Uniq: 30608255
Index: 36
Address: 0x73cd75bc
Refc: 1
=fun
Module: qlc
Uniq: 28066242
Index: 61
Address: 0x73d07c0c
Refc: 1
=fun
Module: mnesia_schema
Uniq: 68068852
Index: 16
Address: 0x73fdc700
Refc: 1
=fun
Module: global
Uniq: 40853000
Index: 11
Address: 0x8198987c
Refc: 1
=fun
Module: inet_parse
Uniq: 90563105
Index: 1
Address: 0x73f26f14
Refc: 1
=fun
Module: application_controller
Uniq: 58736097
Index: 6
Address: 0x81923420
Refc: 1
=fun
Module: mnesia_bup
Uniq: 94576446
Index: 7
Address: 0x73ff6100
Refc: 1
=fun
Module: application_controller
Uniq: 2803673
Index: 13
Address: 0x81922f70
Refc: 1
=fun
Module: dict
Uniq: 48744357
Index: 12
Address: 0x8196409c
Refc: 1
=fun
Module: erl_prim_loader
Uniq: 39920865
Index: 5
Address: 0xf5915da0
Refc: 1
=fun
Module: code_server
Uniq: 3292535
Index: 8
Address: 0x73f75fd0
Refc: 1
=fun
Module: mnesia_frag
Uniq: 79595860
Index: 10
Address: 0x73ec2e54
Refc: 1
=fun
Module: dict
Uniq: 19374269
Index: 3
Address: 0x819642e0
Refc: 6
=fun
Module: qlc
Uniq: 78311206
Index: 41
Address: 0x73d0810c
Refc: 1
=fun
Module: dets_utils
Uniq: 103697995
Index: 3
Address: 0x73e5ff40
Refc: 1
=fun
Module: supervisor
Uniq: 89349409
Index: 3
Address: 0x8195fb44
Refc: 2
=fun
Module: rabbit_exchange
Uniq: 61138706
Index: 19
Address: 0x73cf0714
Refc: 1
=fun
Module: mnesia
Uniq: 36851440
Index: 26
Address: 0x73fa4b64
Refc: 1
=fun
Module: mnesia_controller
Uniq: 63004046
Index: 13
Address: 0x73ee2b6c
Refc: 1
=fun
Module: inet_parse
Uniq: 84502526
Index: 14
Address: 0x73f26268
Refc: 1
=fun
Module: erl_scan
Uniq: 104417191
Index: 7
Address: 0x81930634
Refc: 1
=fun
Module: mnesia_checkpoint
Uniq: 114905411
Index: 3
Address: 0x73c9d684
Refc: 1
=fun
Module: rabbit_mnesia
Uniq: 100658130
Index: 3
Address: 0x73f8ff90
Refc: 1
=fun
Module: qlc
Uniq: 10318672
Index: 23
Address: 0x73d09400
Refc: 1
=fun
Module: erl_prim_loader
Uniq: 32895759
Index: 1
Address: 0xf59160a8
Refc: 1
=fun
Module: qlc
Uniq: 40684669
Index: 80
Address: 0x73d07718
Refc: 1
=fun
Module: rabbit_exchange
Uniq: 113830768
Index: 20
Address: 0x73cf06f4
Refc: 1
=fun
Module: qlc
Uniq: 132407877
Index: 37
Address: 0x73d081f0
Refc: 1
=fun
Module: qlc
Uniq: 44304296
Index: 54
Address: 0x73d07e78
Refc: 1
=fun
Module: inet
Uniq: 66588872
Index: 0
Address: 0x73f1a514
Refc: 1
=fun
Module: mnesia_log
Uniq: 33945241
Index: 5
Address: 0x73ed3654
Refc: 1
=fun
Module: dets
Uniq: 49144976
Index: 19
Address: 0x73e40110
Refc: 1
=fun
Module: inet_parse
Uniq: 36900786
Index: 6
Address: 0x73f26748
Refc: 1
=fun
Module: qlc
Uniq: 21015738
Index: 9
Address: 0x73d0b09c
Refc: 1
=fun
Module: rabbit_amqqueue
Uniq: 81153840
Index: 25
Address: 0x73cd7054
Refc: 1
=fun
Module: rabbit_misc
Uniq: 3316640
Index: 4
Address: 0x73e67508
Refc: 1
=fun
Module: rabbit_amqqueue
Uniq: 8038415
Index: 8
Address: 0x73cd7a10
Refc: 1
=fun
Module: sets
Uniq: 128770449
Index: 3
Address: 0x73d21cb4
Refc: 1
=fun
Module: rabbit
Uniq: 91820821
Index: 4
Address: 0x73f644e8
Refc: 1
=fun
Module: ets
Uniq: 112493251
Index: 6
Address: 0x73f88c58
Refc: 1
=fun
Module: mnesia_lib
Uniq: 126026936
Index: 16
Address: 0x73fc4fac
Refc: 1
=fun
Module: rabbit_misc
Uniq: 131978083
Index: 3
Address: 0x73e675c4
Refc: 1
=fun
Module: erl_scan
Uniq: 89461118
Index: 32
Address: 0x819303b0
Refc: 1
=fun
Module: ets
Uniq: 22973415
Index: 9
Address: 0x73f88b68
Refc: 1
=fun
Module: ets
Uniq: 17345538
Index: 12
Address: 0x73f8868c
Refc: 1
=fun
Module: ets
Uniq: 109179334
Index: 0
Address: 0x73f88ff0
Refc: 1
=fun
Module: mnesia_frag
Uniq: 123046744
Index: 0
Address: 0x73ec38bc
Refc: 1
=fun
Module: mnesia_schema
Uniq: 31191939
Index: 11
Address: 0x73fdc900
Refc: 1
=fun
Module: global_group
Uniq: 100765251
Index: 1
Address: 0x73f62168
Refc: 1
=fun
Module: global_group
Uniq: 80829628
Index: 2
Address: 0x73f622e0
Refc: 1
=fun
Module: erl_eval
Uniq: 57169421
Index: 25
Address: 0x73e4ea04
Refc: 1
=fun
Module: erl_eval
Uniq: 13229925
Index: 6
Address: 0x73e4f43c
Refc: 1
=fun
Module: application_master
Uniq: 5503001
Index: 0
Address: 0x81950358
Refc: 1
=fun
Module: rabbit_binary_generator
Uniq: 116332023
Index: 0
Address: 0x73ccad10
Refc: 1
=fun
Module: qlc
Uniq: 25781959
Index: 42
Address: 0x73d08218
Refc: 1
=fun
Module: qlc
Uniq: 88599778
Index: 71
Address: 0x73d07974
Refc: 1
=fun
Module: mnesia_schema
Uniq: 70122984
Index: 23
Address: 0x73fdc59c
Refc: 1
=fun
Module: prim_zip
Uniq: 81916975
Index: 2
Address: 0xf590cc34
Refc: 1
=fun
Module: mnesia_lib
Uniq: 117525270
Index: 2
Address: 0x73fc5074
Refc: 1
=fun
Module: disk_log
Uniq: 126253549
Index: 1
Address: 0x73ef8fcc
Refc: 1
=fun
Module: erl_prim_loader
Uniq: 3482243
Index: 15
Address: 0xf5915360
Refc: 1
=fun
Module: erl_eval
Uniq: 16065596
Index: 1
Address: 0x73e4f6e4
Refc: 1
=fun
Module: inet_db
Uniq: 38783362
Index: 6
Address: 0x8197bce0
Refc: 1
=fun
Module: rabbit_amqqueue
Uniq: 93138291
Index: 37
Address: 0x73cd7cb8
Refc: 1
=fun
Module: qlc
Uniq: 90044950
Index: 92
Address: 0x73d08590
Refc: 1
=fun
Module: rabbit_router
Uniq: 23555197
Index: 1
Address: 0x73cd4244
Refc: 1
=fun
Module: inet_tcp_dist
Uniq: 128104957
Index: 4
Address: 0x73f29518
Refc: 2
=fun
Module: rabbit_mnesia
Uniq: 11097777
Index: 4
Address: 0x73f8fe58
Refc: 1
=fun
Module: inet_db
Uniq: 126815893
Index: 5
Address: 0x8197bcfc
Refc: 1
=fun
Module: mnesia_checkpoint
Uniq: 113466055
Index: 0
Address: 0x73c9d76c
Refc: 1
=fun
Module: rabbit
Uniq: 62693321
Index: 0
Address: 0x73f64818
Refc: 1
=fun
Module: disk_log
Uniq: 10284908
Index: 5
Address: 0x73ef8c58
Refc: 1
=fun
Module: rabbit_amqqueue
Uniq: 29925676
Index: 30
Address: 0x73cd6fec
Refc: 1
=fun
Module: application_controller
Uniq: 29662384
Index: 10
Address: 0x81923150
Refc: 1
=fun
Module: qlc
Uniq: 4041561
Index: 25
Address: 0x73d08ba0
Refc: 1
=fun
Module: erl_eval
Uniq: 89632933
Index: 19
Address: 0x73e4ec78
Refc: 1
=fun
Module: erl_scan
Uniq: 48137620
Index: 34
Address: 0x81930378
Refc: 1
=fun
Module: mnesia
Uniq: 48112873
Index: 13
Address: 0x73fa519c
Refc: 1
=fun
Module: mnesia_log
Uniq: 48805704
Index: 1
Address: 0x73ed38e4
Refc: 1
=fun
Module: qlc
Uniq: 65788606
Index: 30
Address: 0x73d08748
Refc: 1
=fun
Module: mnesia_lib
Uniq: 59582664
Index: 4
Address: 0x73fc4cc0
Refc: 1
=fun
Module: mnesia_loader
Uniq: 87247798
Index: 8
Address: 0x73caa0f8
Refc: 1
=fun
Module: mnesia_bup
Uniq: 132487708
Index: 2
Address: 0x73ff7080
Refc: 1
=fun
Module: c
Uniq: 123152271
Index: 4
Address: 0x73e24c70
Refc: 1
=fun
Module: disk_log_server
Uniq: 103069352
Index: 3
Address: 0x73ec717c
Refc: 1
=fun
Module: rabbit
Uniq: 127423914
Index: 9
Address: 0x73f640e4
Refc: 1
=fun
Module: erl_prim_loader
Uniq: 116972459
Index: 0
Address: 0xf5916184
Refc: 1
=fun
Module: qlc
Uniq: 63840482
Index: 11
Address: 0x73d0ae4c
Refc: 1
=fun
Module: io_lib_pretty
Uniq: 47893287
Index: 0
Address: 0x73cb4910
Refc: 1
=fun
Module: qlc
Uniq: 32093959
Index: 68
Address: 0x73d07a50
Refc: 1
=fun
Module: release_handler
Uniq: 86534358
Index: 8
Address: 0x73e18778
Refc: 1
=fun
Module: qlc
Uniq: 5416974
Index: 26
Address: 0x73d08b74
Refc: 1
=fun
Module: mnesia_controller
Uniq: 28287370
Index: 6
Address: 0x73ee32bc
Refc: 1
=fun
Module: disk_log_server
Uniq: 56429184
Index: 2
Address: 0x73ec71a4
Refc: 3
=fun
Module: dict
Uniq: 479602
Index: 11
Address: 0x81964028
Refc: 1
=fun
Module: gen_event
Uniq: 113052338
Index: 0
Address: 0x818fd3f0
Refc: 1
=fun
Module: qlc
Uniq: 67787455
Index: 78
Address: 0x73d077c0
Refc: 1
=fun
Module: inet
Uniq: 46387045
Index: 6
Address: 0x73f1a174
Refc: 1
=fun
Module: mnesia_tm
Uniq: 54252494
Index: 6
Address: 0x73eb6bb8
Refc: 1
=fun
Module: erl_eval
Uniq: 13739716
Index: 31
Address: 0x73e4e868
Refc: 1
=fun
Module: inet_tcp_dist
Uniq: 118757716
Index: 1
Address: 0x73f29618
Refc: 2
=fun
Module: disk_log_server
Uniq: 16542648
Index: 0
Address: 0x73ec7304
Refc: 1
=fun
Module: dets_utils
Uniq: 87297674
Index: 2
Address: 0x73e5ff5c
Refc: 1
=fun
Module: dets
Uniq: 70654158
Index: 13
Address: 0x73e402b4
Refc: 1
=fun
Module: dets_v9
Uniq: 41929904
Index: 15
Address: 0x73e92568
Refc: 1
=fun
Module: erl_eval
Uniq: 105910772
Index: 18
Address: 0x73e4ed54
Refc: 1
=fun
Module: mnesia_schema
Uniq: 83196603
Index: 37
Address: 0x73fdb814
Refc: 1
=fun
Module: mnesia_bup
Uniq: 97458652
Index: 8
Address: 0x73ff5e64
Refc: 1
=fun
Module: mnesia_frag
Uniq: 44735289
Index: 11
Address: 0x73ec2d84
Refc: 1
=fun
Module: sets
Uniq: 96453982
Index: 6
Address: 0x73d21c60
Refc: 1
=fun
Module: erl_eval
Uniq: 18666380
Index: 16
Address: 0x73e4ee1c
Refc: 1
=fun
Module: rabbit_amqqueue
Uniq: 11875458
Index: 4
Address: 0x73cd7a80
Refc: 1
=fun
Module: inet_config
Uniq: 64173300
Index: 2
Address: 0x81992c10
Refc: 1
=fun
Module: erl_eval
Uniq: 55710257
Index: 24
Address: 0x73e4ea54
Refc: 1
=fun
Module: release_handler
Uniq: 71531855
Index: 13
Address: 0x73e1839c
Refc: 1
=fun
Module: qlc
Uniq: 86595574
Index: 16
Address: 0x73d09948
Refc: 1
=fun
Module: proc_lib
Uniq: 76772
Index: 1
Address: 0x819054a4
Refc: 2
=fun
Module: global
Uniq: 58918003
Index: 5
Address: 0x81989ee4
Refc: 1
=fun
Module: c
Uniq: 49302980
Index: 2
Address: 0x73e24cdc
Refc: 1
=fun
Module: dict
Uniq: 103247086
Index: 9
Address: 0x819641a8
Refc: 1
=fun
Module: dets_v9
Uniq: 12504610
Index: 6
Address: 0x73e93068
Refc: 1
=fun
Module: inet
Uniq: 13402804
Index: 2
Address: 0x73f1a4ac
Refc: 1
=fun
Module: erl_eval
Uniq: 42291535
Index: 8
Address: 0x73e4f2bc
Refc: 1
=fun
Module: dets_v9
Uniq: 86191074
Index: 16
Address: 0x73e92510
Refc: 1
=fun
Module: rabbit_exchange
Uniq: 121964496
Index: 7
Address: 0x73cf0368
Refc: 1
=fun
Module: dets_v9
Uniq: 108340702
Index: 4
Address: 0x73e931b8
Refc: 1
=fun
Module: qlc
Uniq: 122240477
Index: 76
Address: 0x73d0781c
Refc: 1
=fun
Module: qlc
Uniq: 61965410
Index: 21
Address: 0x73d09590
Refc: 1
=fun
Module: mnesia_schema
Uniq: 91146277
Index: 21
Address: 0x73fdc624
Refc: 1
=fun
Module: mnesia_checkpoint
Uniq: 30432934
Index: 7
Address: 0x73c9ceac
Refc: 1
=fun
Module: erl_scan
Uniq: 120240397
Index: 4
Address: 0x819306f8
Refc: 1
=fun
Module: release_handler
Uniq: 24204405
Index: 5
Address: 0x73e18b34
Refc: 1
=fun
Module: mnesia_tm
Uniq: 26806630
Index: 2
Address: 0x73eb6dec
Refc: 1
=fun
Module: erl_scan
Uniq: 79576805
Index: 18
Address: 0x8193051c
Refc: 1
=fun
Module: mnesia_schema
Uniq: 88169112
Index: 39
Address: 0x73fdb62c
Refc: 1
=fun
Module: rabbit_amqqueue
Uniq: 100911459
Index: 9
Address: 0x73cd79cc
Refc: 1
=fun
Module: mnesia_checkpoint
Uniq: 3972957
Index: 6
Address: 0x73c9d190
Refc: 1
=fun
Module: erlang
Uniq: 18099081
Index: 0
Address: 0xf5929d60
Refc: 1
=fun
Module: mnesia
Uniq: 62464088
Index: 4
Address: 0x73fa5890
Refc: 1
=fun
Module: mnesia_schema
Uniq: 129417372
Index: 2
Address: 0x73fdcf60
Refc: 1
=fun
Module: mnesia
Uniq: 64946623
Index: 2
Address: 0x73fa5908
Refc: 1
=fun
Module: mnesia_controller
Uniq: 17654930
Index: 20
Address: 0x73ee3244
Refc: 1
=fun
Module: rabbit_amqqueue_process
Uniq: 90155148
Index: 8
Address: 0x73d19bd0
Refc: 1
=fun
Module: supervisor
Uniq: 34187018
Index: 2
Address: 0x8195fb98
Refc: 1
=fun
Module: rabbit_exchange
Uniq: 52751179
Index: 26
Address: 0x73cf0590
Refc: 1
=fun
Module: mnesia
Uniq: 29705107
Index: 1
Address: 0x73fa5984
Refc: 1
=fun
Module: rabbit
Uniq: 9411188
Index: 8
Address: 0x73f642c4
Refc: 1
=fun
Module: mnesia_controller
Uniq: 6967415
Index: 11
Address: 0x73ee2fa4
Refc: 1
=fun
Module: qlc
Uniq: 24510172
Index: 94
Address: 0x73d093a0
Refc: 1
=fun
Module: ets
Uniq: 23061186
Index: 10
Address: 0x73f88b38
Refc: 1
=fun
Module: qlc
Uniq: 123176125
Index: 63
Address: 0x73d07bec
Refc: 1
=fun
Module: inet_parse
Uniq: 50966298
Index: 13
Address: 0x73f26284
Refc: 1
=fun
Module: ets
Uniq: 68878098
Index: 14
Address: 0x73f885d4
Refc: 1
=fun
Module: erl_scan
Uniq: 97978210
Index: 23
Address: 0x819304c8
Refc: 1
=fun
Module: mnesia_controller
Uniq: 51573323
Index: 3
Address: 0x73ee3648
Refc: 1
=fun
Module: dets_v9
Uniq: 27882245
Index: 7
Address: 0x73e92da4
Refc: 1
=fun
Module: mnesia_controller
Uniq: 60303712
Index: 12
Address: 0x73ee2eac
Refc: 1
=fun
Module: cpu_sup
Uniq: 110247813
Index: 2
Address: 0x73e73940
Refc: 1
=fun
Module: erl_eval
Uniq: 47796680
Index: 29
Address: 0x73e4e8c4
Refc: 1
=fun
Module: mnesia_lib
Uniq: 125014267
Index: 9
Address: 0x73fc485c
Refc: 1
=fun
Module: inet_tcp_dist
Uniq: 108315805
Index: 6
Address: 0x73f29490
Refc: 1
=fun
Module: erl_scan
Uniq: 2104839
Index: 33
Address: 0x81930394
Refc: 1
=fun
Module: rabbit_exchange
Uniq: 106630000
Index: 13
Address: 0x73cef88c
Refc: 1
=fun
Module: rabbit_misc
Uniq: 121380136
Index: 12
Address: 0x73e67770
Refc: 1
=fun
Module: erl_scan
Uniq: 49289894
Index: 24
Address: 0x81930458
Refc: 1
=fun
Module: qlc
Uniq: 54172366
Index: 46
Address: 0x73d08098
Refc: 1
=fun
Module: ets
Uniq: 38404268
Index: 16
Address: 0x73f88588
Refc: 1
=fun
Module: timer
Uniq: 68148054
Index: 0
Address: 0x74002914
Refc: 2
=fun
Module: ets
Uniq: 95357108
Index: 1
Address: 0x73f88fb8
Refc: 1
=fun
Module: rabbit_misc
Uniq: 29258461
Index: 10
Address: 0x73e67394
Refc: 1
=fun
Module: global
Uniq: 93687139
Index: 7
Address: 0x81989dd4
Refc: 1
=fun
Module: qlc
Uniq: 133262620
Index: 93
Address: 0x73d0882c
Refc: 1
=fun
Module: erl_scan
Uniq: 100514258
Index: 6
Address: 0x8193066c
Refc: 1
=fun
Module: dets_v9
Uniq: 49677115
Index: 17
Address: 0x73e9223c
Refc: 1
=fun
Module: dets_v9
Uniq: 17072581
Index: 11
Address: 0x73e92704
Refc: 1
=fun
Module: global
Uniq: 6604025
Index: 3
Address: 0x8198a03c
Refc: 1
=fun
Module: inet_tcp_dist
Uniq: 69770501
Index: 7
Address: 0x73f29418
Refc: 1
=fun
Module: init
Uniq: 30540612
Index: 4
Address: 0xf5904c50
Refc: 1
=fun
Module: global
Uniq: 4731785
Index: 8
Address: 0x81989d94
Refc: 1
=fun
Module: mnesia_controller
Uniq: 111400421
Index: 7
Address: 0x73ee3298
Refc: 1
=fun
Module: mnesia_controller
Uniq: 42012290
Index: 4
Address: 0x73ee35c4
Refc: 1
=fun
Module: inet
Uniq: 46756954
Index: 5
Address: 0x73f1a28c
Refc: 1
=fun
Module: mnesia_schema
Uniq: 117484199
Index: 29
Address: 0x73fdc08c
Refc: 1
=fun
Module: erl_scan
Uniq: 74835078
Index: 9
Address: 0x81930650
Refc: 1
=fun
Module: erl_prim_loader
Uniq: 54617620
Index: 14
Address: 0xf5915650
Refc: 1
=fun
Module: rabbit_exchange
Uniq: 103654866
Index: 27
Address: 0x73cf0574
Refc: 1
=fun
Module: mnesia_locker
Uniq: 72207228
Index: 2
Address: 0x73ea6508
Refc: 1
=fun
Module: mnesia
Uniq: 21098081
Index: 9
Address: 0x73fa5654
Refc: 1
=fun
Module: mnesia_frag
Uniq: 51594236
Index: 3
Address: 0x73ec37d8
Refc: 1
=fun
Module: global
Uniq: 4028057
Index: 18
Address: 0x8198908c
Refc: 1
=fun
Module: qlc
Uniq: 66899184
Index: 45
Address: 0x73d082d0
Refc: 1
=fun
Module: dict
Uniq: 123576538
Index: 10
Address: 0x819640e4
Refc: 1
=fun
Module: mnesia_schema
Uniq: 121350974
Index: 18
Address: 0x73fdc6a0
Refc: 1
=fun
Module: inet_parse
Uniq: 92306672
Index: 12
Address: 0x73f262a0
Refc: 1
=fun
Module: global
Uniq: 7285385
Index: 13
Address: 0x81989738
Refc: 1
=fun
Module: global
Uniq: 119167271
Index: 16
Address: 0x819891f8
Refc: 1
=fun
Module: lib
Uniq: 49069447
Index: 0
Address: 0x73d1dcd4
Refc: 1
=fun
Module: mnesia_frag
Uniq: 62831237
Index: 12
Address: 0x73ec2c64
Refc: 1
=fun
Module: qlc
Uniq: 23383938
Index: 59
Address: 0x73d07c58
Refc: 1
=fun
Module: rabbit_exchange
Uniq: 94611275
Index: 9
Address: 0x73cf0060
Refc: 1
=fun
Module: qlc
Uniq: 39969817
Index: 77
Address: 0x73d07800
Refc: 1
=fun
Module: mnesia_frag
Uniq: 46357834
Index: 7
Address: 0x73ec3328
Refc: 1
=fun
Module: ets
Uniq: 58018481
Index: 11
Address: 0x73f88a60
Refc: 1
=fun
Module: dets_v9
Uniq: 123843999
Index: 8
Address: 0x73e92a94
Refc: 1
=fun
Module: qlc
Uniq: 73874047
Index: 10
Address: 0x73d0aeb4
Refc: 1
=fun
Module: mnesia_subscr
Uniq: 111063352
Index: 0
Address: 0x73e7b828
Refc: 1
=fun
Module: dict
Uniq: 131899596
Index: 2
Address: 0x81964310
Refc: 1
=fun
Module: cpu_sup
Uniq: 106198991
Index: 6
Address: 0x73e73820
Refc: 1
=fun
Module: rabbit_exchange
Uniq: 79171036
Index: 2
Address: 0x73cf1078
Refc: 1
=fun
Module: erl_scan
Uniq: 117856421
Index: 16
Address: 0x81930714
Refc: 1
=fun
Module: mnesia_schema
Uniq: 69976578
Index: 30
Address: 0x73fdc05c
Refc: 1
=fun
Module: erl_eval
Uniq: 105156089
Index: 4
Address: 0x73e4f570
Refc: 1
=fun
Module: mnesia_lib
Uniq: 104305292
Index: 15
Address: 0x73fc46e8
Refc: 1
=fun
Module: global
Uniq: 73982365
Index: 23
Address: 0x81988f1c
Refc: 2
=fun
Module: rabbit_amqqueue
Uniq: 59937996
Index: 18
Address: 0x73cd6b18
Refc: 1
=fun
Module: hipe_unified_loader
Uniq: 114889458
Index: 0
Address: 0x73f58adc
Refc: 1
=fun
Module: dets_utils
Uniq: 54550583
Index: 0
Address: 0x73e60230
Refc: 1
=fun
Module: qlc
Uniq: 100740512
Index: 88
Address: 0x73d07338
Refc: 1
=fun
Module: rabbit_persister
Uniq: 30042360
Index: 0
Address: 0x73d11564
Refc: 1
=fun
Module: code_server
Uniq: 82255742
Index: 4
Address: 0x73f76594
Refc: 1
=fun
Module: release_handler
Uniq: 117009433
Index: 0
Address: 0x73e18e90
Refc: 1
=fun
Module: rabbit_amqqueue
Uniq: 59268387
Index: 31
Address: 0x73cd6f40
Refc: 1
=fun
Module: global_group
Uniq: 17247846
Index: 0
Address: 0x73f62348
Refc: 1
=fun
Module: mnesia_schema
Uniq: 114134161
Index: 10
Address: 0x73fdc91c
Refc: 1
=fun
Module: qlc
Uniq: 93505335
Index: 81
Address: 0x73d076c0
Refc: 1
=fun
Module: ets
Uniq: 58012915
Index: 15
Address: 0x73f885a4
Refc: 1
=fun
Module: ets
Uniq: 1906265
Index: 13
Address: 0x73f88630
Refc: 1
=fun
Module: qlc
Uniq: 122934310
Index: 72
Address: 0x73d07958
Refc: 1
=fun
Module: mnesia_checkpoint
Uniq: 89533394
Index: 9
Address: 0x73c9cd28
Refc: 1
=fun
Module: erl_scan
Uniq: 113334594
Index: 2
Address: 0x819306c0
Refc: 1
=fun
Module: erl_eval
Uniq: 45073094
Index: 21
Address: 0x73e4eb6c
Refc: 1
=fun
Module: mnesia
Uniq: 27307328
Index: 3
Address: 0x73fa58d8
Refc: 1
=fun
Module: rabbit_amqqueue
Uniq: 42079492
Index: 20
Address: 0x73cd6a6c
Refc: 1
=fun
Module: mnesia
Uniq: 24246299
Index: 5
Address: 0x73fa5830
Refc: 1
=fun
Module: code_server
Uniq: 46981671
Index: 0
Address: 0x73f76870
Refc: 1
=fun
Module: mnesia_loader
Uniq: 75379246
Index: 6
Address: 0x73caa150
Refc: 1
=fun
Module: dets
Uniq: 43633763
Index: 4
Address: 0x73e4097c
Refc: 1
=fun
Module: net_kernel
Uniq: 6561140
Index: 6
Address: 0x73f42cd0
Refc: 1
=fun
Module: orddict
Uniq: 13732439
Index: 0
Address: 0x73e533d0
Refc: 1
=fun
Module: rabbit
Uniq: 15983238
Index: 11
Address: 0x73f64354
Refc: 1
=fun
Module: inet_tcp_dist
Uniq: 71885569
Index: 0
Address: 0x73f29634
Refc: 2
=fun
Module: mnesia_bup
Uniq: 50394842
Index: 6
Address: 0x73ff61d0
Refc: 1
=fun
Module: rabbit_amqqueue
Uniq: 64010781
Index: 26
Address: 0x73cd7034
Refc: 1
=fun
Module: mnesia
Uniq: 23584775
Index: 7
Address: 0x73fa5770
Refc: 1
=fun
Module: cpu_sup
Uniq: 79687729
Index: 5
Address: 0x73e73840
Refc: 1
=fun
Module: dets_v9
Uniq: 56796208
Index: 3
Address: 0x73e93764
Refc: 1
=fun
Module: code_server
Uniq: 74665158
Index: 9
Address: 0x73f75f8c
Refc: 1
=fun
Module: rabbit
Uniq: 74113049
Index: 6
Address: 0x73f64460
Refc: 1
=fun
Module: qlc
Uniq: 68024859
Index: 38
Address: 0x73d081a0
Refc: 1
=fun
Module: mnesia_sup
Uniq: 93277780
Index: 0
Address: 0x73e62660
Refc: 1
=fun
Module: mnesia_log
Uniq: 2275340
Index: 2
Address: 0x73ed38b0
Refc: 1
=fun
Module: erl_scan
Uniq: 65917434
Index: 10
Address: 0x819305fc
Refc: 1
=fun
Module: rabbit_amqqueue_process
Uniq: 44235982
Index: 3
Address: 0x73d1a7e8
Refc: 1
=fun
Module: mnesia_schema
Uniq: 23479469
Index: 0
Address: 0x73fdd21c
Refc: 1
=fun
Module: code_server
Uniq: 71013094
Index: 3
Address: 0x73f765e8
Refc: 1
=fun
Module: rabbit_misc
Uniq: 57868794
Index: 11
Address: 0x73e677b0
Refc: 1
=fun
Module: qlc
Uniq: 54620060
Index: 24
Address: 0x73d08d34
Refc: 1
=fun
Module: mnesia_locker
Uniq: 99140082
Index: 1
Address: 0x73ea697c
Refc: 1
=fun
Module: dict
Uniq: 11560009
Index: 6
Address: 0x81964250
Refc: 1
=fun
Module: rabbit_amqqueue
Uniq: 52109690
Index: 11
Address: 0x73cd7934
Refc: 1
=fun
Module: global
Uniq: 4203485
Index: 15
Address: 0x81989244
Refc: 1
=fun
Module: rabbit_amqqueue
Uniq: 11363729
Index: 15
Address: 0x73cd7860
Refc: 1
=fun
Module: dict
Uniq: 77789721
Index: 1
Address: 0x8196433c
Refc: 1
=fun
Module: priority_queue
Uniq: 85691477
Index: 1
Address: 0x73ccfcc0
Refc: 1
=fun
Module: sys
Uniq: 34313837
Index: 0
Address: 0x81954b20
Refc: 1
=fun
Module: mnesia
Uniq: 6513056
Index: 22
Address: 0x73fa4b94
Refc: 1
=fun
Module: init
Uniq: 42050205
Index: 2
Address: 0xf5904d84
Refc: 1
=fun
Module: rabbit_exchange
Uniq: 82467668
Index: 12
Address: 0x73cefc1c
Refc: 1
=fun
Module: mnesia_schema
Uniq: 119419533
Index: 1
Address: 0x73fdd068
Refc: 1
=fun
Module: mnesia_monitor
Uniq: 30104375
Index: 0
Address: 0x73fec2ec
Refc: 1
=fun
Module: erl_scan
Uniq: 54511862
Index: 25
Address: 0x81930474
Refc: 1
=fun
Module: mnesia_schema
Uniq: 19002230
Index: 36
Address: 0x73fdbaf8
Refc: 1
=fun
Module: rabbit_persister
Uniq: 34029442
Index: 10
Address: 0x73d10eac
Refc: 1
=fun
Module: qlc
Uniq: 104114939
Index: 50
Address: 0x73d07f84
Refc: 1
=fun
Module: rabbit_amqqueue_process
Uniq: 130562572
Index: 7
Address: 0x73d19e70
Refc: 1
=fun
Module: qlc
Uniq: 21687738
Index: 83
Address: 0x73d0758c
Refc: 1
=fun
Module: inet_tcp_dist
Uniq: 25491099
Index: 8
Address: 0x73f293b4
Refc: 1
=fun
Module: code_server
Uniq: 98478302
Index: 1
Address: 0x73f76814
Refc: 1
=fun
Module: global
Uniq: 129744524
Index: 20
Address: 0x8198901c
Refc: 1
=proc_stack:<0.0.0>
0xf5626600:SReturn addr 0x1CC8E0 (<terminate process normally>)
=proc_heap:<0.0.0>
=proc_stack:<0.2.0>
0xf569518c:SReturn addr 0x1CC8E0 (<terminate process normally>)
y0:N
y1:HF56AE034
y2:P<0.1.0>
y3:HF5692708
y4:A8:infinity
=proc_heap:<0.2.0>
F56AE034:lHF56AE03C|HF56AE044
F56AE03C:lI47|HF56AE04C
F56AE04C:lI117|HF56AE064
F56AE064:lI115|HF56AE084
F56AE084:lI114|HF56AE0A4
F56AE0A4:lI47|HF56AE0C4
F56AE0C4:lI108|HF56AE0E4
F56AE0E4:lI105|HF56AE104
F56AE104:lI98|HF56AE124
F56AE124:lI47|HF56AE144
F56AE144:lI114|HF56AE164
F56AE164:lI97|HF56AE184
F56AE184:lI98|HF56AE1A4
F56AE1A4:lI98|HF56AE1C4
F56AE1C4:lI105|HF56AE1E4
F56AE1E4:lI116|HF56AE204
F56AE204:lI109|HF56AE224
F56AE224:lI113|HF56AE244
F56AE244:lI47|HF56AE264
F56AE264:lI108|HF56AE284
F56AE284:lI105|HF56AE2A4
F56AE2A4:lI98|HF56AE2C4
F56AE2C4:lI47|HF56AE2E4
F56AE2E4:lI114|HF56AE304
F56AE304:lI97|HF56AE324
F56AE324:lI98|HF56AE344
F56AE344:lI98|HF56AE364
F56AE364:lI105|HF56AE384
F56AE384:lI116|HF56AE3A4
F56AE3A4:lI109|HF56AE3C4
F56AE3C4:lI113|HF56AE3E4
F56AE3E4:lI95|HF56AE404
F56AE404:lI115|HF56AE424
F56AE424:lI101|HF56AE444
F56AE444:lI114|HF56AE464
F56AE464:lI118|HF56AE484
F56AE484:lI101|HF56AE4A4
F56AE4A4:lI114|HF56AE4C4
F56AE4C4:lI45|HF56AE4E4
F56AE4E4:lI49|HF56AE504
F56AE504:lI46|HF56AE51C
F56AE51C:lI55|HF56AE524
F56AE524:lI46|HF56AE52C
F56AE52C:lI49|HF56AE534
F56AE534:lI47|HF56AE53C
F56AE53C:lI115|HF56AE544
F56AE544:lI98|HF56AE54C
F56AE54C:lI105|HF56AE554
F56AE554:lI110|HF56AE55C
F56AE55C:lI47|HF56AE564
F56AE564:lI46|HF56AE56C
F56AE56C:lI46|HF56AE574
F56AE574:lI47|HF56AE57C
F56AE57C:lI101|HF56AE584
F56AE584:lI98|HF56AE58C
F56AE58C:lI105|HF56AE594
F56AE594:lI110|N
F56AE044:lHF56AE054|HF56AE05C
F56AE054:lI47|HF56AE06C
F56AE06C:lI117|HF56AE08C
F56AE08C:lI115|HF56AE0AC
F56AE0AC:lI114|HF56AE0CC
F56AE0CC:lI47|HF56AE0EC
F56AE0EC:lI108|HF56AE10C
F56AE10C:lI105|HF56AE12C
F56AE12C:lI98|HF56AE14C
F56AE14C:lI47|HF56AE16C
F56AE16C:lI101|HF56AE18C
F56AE18C:lI114|HF56AE1AC
F56AE1AC:lI108|HF56AE1CC
F56AE1CC:lI97|HF56AE1EC
F56AE1EC:lI110|HF56AE20C
F56AE20C:lI103|HF56AE22C
F56AE22C:lI47|HF56AE24C
F56AE24C:lI108|HF56AE26C
F56AE26C:lI105|HF56AE28C
F56AE28C:lI98|HF56AE2AC
F56AE2AC:lI47|HF56AE2CC
F56AE2CC:lI107|HF56AE2EC
F56AE2EC:lI101|HF56AE30C
F56AE30C:lI114|HF56AE32C
F56AE32C:lI110|HF56AE34C
F56AE34C:lI101|HF56AE36C
F56AE36C:lI108|HF56AE38C
F56AE38C:lI45|HF56AE3AC
F56AE3AC:lI50|HF56AE3CC
F56AE3CC:lI46|HF56AE3EC
F56AE3EC:lI49|HF56AE40C
F56AE40C:lI50|HF56AE42C
F56AE42C:lI46|HF56AE44C
F56AE44C:lI53|HF56AE46C
F56AE46C:lI47|HF56AE48C
F56AE48C:lI101|HF56AE4AC
F56AE4AC:lI98|HF56AE4CC
F56AE4CC:lI105|HF56AE4EC
F56AE4EC:lI110|N
F56AE05C:lHF56AE074|HF56AE07C
F56AE074:lI47|HF56AE094
F56AE094:lI117|HF56AE0B4
F56AE0B4:lI115|HF56AE0D4
F56AE0D4:lI114|HF56AE0F4
F56AE0F4:lI47|HF56AE114
F56AE114:lI108|HF56AE134
F56AE134:lI105|HF56AE154
F56AE154:lI98|HF56AE174
F56AE174:lI47|HF56AE194
F56AE194:lI101|HF56AE1B4
F56AE1B4:lI114|HF56AE1D4
F56AE1D4:lI108|HF56AE1F4
F56AE1F4:lI97|HF56AE214
F56AE214:lI110|HF56AE234
F56AE234:lI103|HF56AE254
F56AE254:lI47|HF56AE274
F56AE274:lI108|HF56AE294
F56AE294:lI105|HF56AE2B4
F56AE2B4:lI98|HF56AE2D4
F56AE2D4:lI47|HF56AE2F4
F56AE2F4:lI115|HF56AE314
F56AE314:lI116|HF56AE334
F56AE334:lI100|HF56AE354
F56AE354:lI108|HF56AE374
F56AE374:lI105|HF56AE394
F56AE394:lI98|HF56AE3B4
F56AE3B4:lI45|HF56AE3D4
F56AE3D4:lI49|HF56AE3F4
F56AE3F4:lI46|HF56AE414
F56AE414:lI49|HF56AE434
F56AE434:lI53|HF56AE454
F56AE454:lI46|HF56AE474
F56AE474:lI53|HF56AE494
F56AE494:lI47|HF56AE4B4
F56AE4B4:lI101|HF56AE4D4
F56AE4D4:lI98|HF56AE4F4
F56AE4F4:lI105|HF56AE50C
F56AE50C:lI110|N
F56AE07C:lHF56AE09C|N
F56AE09C:lI47|HF56AE0BC
F56AE0BC:lI117|HF56AE0DC
F56AE0DC:lI115|HF56AE0FC
F56AE0FC:lI114|HF56AE11C
F56AE11C:lI47|HF56AE13C
F56AE13C:lI108|HF56AE15C
F56AE15C:lI105|HF56AE17C
F56AE17C:lI98|HF56AE19C
F56AE19C:lI47|HF56AE1BC
F56AE1BC:lI101|HF56AE1DC
F56AE1DC:lI114|HF56AE1FC
F56AE1FC:lI108|HF56AE21C
F56AE21C:lI97|HF56AE23C
F56AE23C:lI110|HF56AE25C
F56AE25C:lI103|HF56AE27C
F56AE27C:lI47|HF56AE29C
F56AE29C:lI108|HF56AE2BC
F56AE2BC:lI105|HF56AE2DC
F56AE2DC:lI98|HF56AE2FC
F56AE2FC:lI47|HF56AE31C
F56AE31C:lI115|HF56AE33C
F56AE33C:lI97|HF56AE35C
F56AE35C:lI115|HF56AE37C
F56AE37C:lI108|HF56AE39C
F56AE39C:lI45|HF56AE3BC
F56AE3BC:lI50|HF56AE3DC
F56AE3DC:lI46|HF56AE3FC
F56AE3FC:lI49|HF56AE41C
F56AE41C:lI46|HF56AE43C
F56AE43C:lI53|HF56AE45C
F56AE45C:lI46|HF56AE47C
F56AE47C:lI52|HF56AE49C
F56AE49C:lI47|HF56AE4BC
F56AE4BC:lI101|HF56AE4DC
F56AE4DC:lI98|HF56AE4FC
F56AE4FC:lI105|HF56AE514
F56AE514:lI110|N
F5692708:t9:A5:state,A5:efile,N,A4:none,p<0.1>,A8:infinity,A9:undefined,A4:true,HF56AE020
F56AE020:t4:AA:prim_state,A5:false,A9:undefined,A9:undefined
=proc_dictionary:<0.5.0>
HF57373E0
HF57373EC
=proc_stack:<0.5.0>
0xf567ca30:SReturn addr 0x74005F30 (io:o_request/2 + 36)
y0:HF567C2C0
y1:P<0.55.0>
0xf567ca3c:SReturn addr 0x73FB5ED8 (error_logger_file_h:handle_event/2 + 192)
y0:N
y1:N
y2:N
y3:HF567C2B0
y4:P<0.55.0>
0xf567ca54:SReturn addr 0x818FAC30 (gen_event:server_update/4 + 148)
y0:N
y1:HF573764C
y2:P<0.55.0>
0xf567ca64:SReturn addr 0x818FA9EC (gen_event:server_notify/4 + 76)
y0:AC:error_logger
y1:HF567AF40
y2:HF567A598
y3:HF567A57C
y4:A1A:rabbit_error_logger_file_h
y5:SCatch 0x818FAC30 (gen_event:server_update/4 + 148)
0xf567ca80:SReturn addr 0x818FAA64 (gen_event:server_notify/4 + 196)
y0:AC:error_logger
y1:AC:handle_event
y2:HF567AF40
y3:HF567A5EC
0xf567ca94:SReturn addr 0x818F8DCC (gen_event:handle_msg/5 + 152)
y0:HF567AFB0
0xf567ca9c:SReturn addr 0x81903014 (proc_lib:init_p_do_apply/3 + 28)
y0:N
y1:AC:error_logger
y2:P<0.1.0>
0xf567caac:SReturn addr 0x1CC8E0 (<terminate process normally>)
y0:SCatch 0x81903024 (proc_lib:init_p_do_apply/3 + 44)
=proc_heap:<0.5.0>
F567C2C0:E1F:8372000364000B726162626974406D61696C03000001E20000000000000000
F567C2B0:t3:A6:format,HF567C1E8,N
F567C1E8:lH73CBA610|HF567C1F0
73CBA610:lI10|N
F567C1F0:lI61|HF567C1F8
F567C1F8:lHF567B690|HF567C200
F567B690:lI69|HF567B688
F567B688:lI82|HF567B680
F567B680:lI82|HF567B678
F567B678:lI79|HF567B670
F567B670:lI82|HF567B668
F567B668:lI32|HF567B660
F567B660:lI82|HF567B658
F567B658:lI69|HF567B650
F567B650:lI80|HF567B648
F567B648:lI79|HF567B640
F567B640:lI82|HF567B638
F567B638:lI84|N
F567C200:lI61|HF567C208
F567C208:lI61|HF567C210
F567C210:lI61|HF567C218
F567C218:lI61|HF567C220
F567C220:lI32|HF567C228
F567C228:lHF567B6A0|HF567C230
F567B6A0:lI49|HF567B698
F567B698:lI56|N
F567C230:lI45|HF567C238
F567C238:lHF567B6B8|HF567C240
F567B6B8:lI74|HF567B6B0
F567B6B0:lI117|HF567B6A8
F567B6A8:lI110|N
F567C240:lI45|HF567C248
F567C248:lHF567B6D8|HF567C250
F567B6D8:lI50|HF567B6D0
F567B6D0:lI48|HF567B6C8
F567B6C8:lI49|HF567B6C0
F567B6C0:lI48|N
F567C250:lI58|HF567C258
F567C258:lI58|HF567C260
F567C260:lHF567B6E8|HF567C268
F567B6E8:lI49|HF567B6E0
F567B6E0:lI48|N
F567C268:lI58|HF567C270
F567C270:lHF567B6F8|HF567C278
F567B6F8:lI53|HF567B6F0
F567B6F0:lI54|N
F567C278:lI58|HF567C280
F567C280:lHF567B708|HF567C288
F567B708:lI52|HF567B700
F567B700:lI54|N
F567C288:lI32|HF567C290
F567C290:lI61|HF567C298
F567C298:lI61|HF567C2A0
F567C2A0:lI61|HF567C2A8
F567C2A8:lH73CBA610|HF567C1E0
F567C1E0:lHF567C1D0|HF567C1D8
F567C1D0:lI69|HF567C1C8
F567C1C8:lI114|HF567C1C0
F567C1C0:lI114|HF567C1B8
F567C1B8:lI111|HF567C1B0
F567C1B0:lI114|HF567C1A8
F567C1A8:lI32|HF567C1A0
F567C1A0:lI105|HF567C198
F567C198:lI110|HF567C190
F567C190:lI32|HF567C188
F567C188:lI112|HF567C180
F567C180:lI114|HF567C178
F567C178:lI111|HF567C170
F567C170:lI99|HF567C168
F567C168:lI101|HF567C160
F567C160:lI115|HF567C158
F567C158:lI115|HF567C150
F567C150:lI32|HF567C148
F567C148:lI60|HF567C140
F567C140:lI48|HF567C138
F567C138:lI46|HF567C130
F567C130:lI49|HF567C128
F567C128:lI46|HF567C120
F567C120:lI48|HF567C118
F567C118:lI62|HF567C110
F567C110:lI32|HF567C108
F567C108:lI111|HF567C100
F567C100:lI110|HF567C0F8
F567C0F8:lI32|HF567C0F0
F567C0F0:lI110|HF567C0E8
F567C0E8:lI111|HF567C0E0
F567C0E0:lI100|HF567C0D8
F567C0D8:lI101|HF567C0D0
F567C0D0:lI32|HF567C0C8
F567C0C8:lI39|HF567C0C0
F567C0C0:lI114|HF567C0B8
F567C0B8:lI97|HF567C0B0
F567C0B0:lI98|HF567C0A8
F567C0A8:lI98|HF567C0A0
F567C0A0:lI105|HF567C098
F567C098:lI116|HF567C090
F567C090:lI64|HF567C088
F567C088:lI109|HF567C080
F567C080:lI97|HF567C078
F567C078:lI105|HF567C070
F567C070:lI108|HF567C068
F567C068:lI39|HF567C060
F567C060:lI32|HF567C058
F567C058:lI119|HF567C050
F567C050:lI105|HF567C048
F567C048:lI116|HF567C040
F567C040:lI104|HF567C038
F567C038:lI32|HF567C030
F567C030:lI101|HF567C028
F567C028:lI120|HF567C020
F567C020:lI105|HF567C018
F567C018:lI116|HF567C010
F567C010:lI32|HF567C008
F567C008:lI118|HF567C000
F567C000:lI97|HF567BFF8
F567BFF8:lI108|HF567BFF0
F567BFF0:lI117|HF567BFE8
F567BFE8:lI101|HF567BFE0
F567BFE0:lI58|HF567BFD8
F567BFD8:lI32|HF567BFD0
F567BFD0:lI123|HF567BFC8
F567BFC8:lI123|HF567BFC0
F567BFC0:lI110|HF567BFB8
F567BFB8:lI111|HF567BFB0
F567BFB0:lI99|HF567BFA8
F567BFA8:lI97|HF567BFA0
F567BFA0:lI116|HF567BF98
F567BF98:lI99|HF567BF90
F567BF90:lI104|HF567BF88
F567BF88:lI44|HF567BF80
F567BF80:lI123|HF567BF78
F567BF78:lI101|HF567BF70
F567BF70:lI114|HF567BF68
F567BF68:lI114|HF567BF60
F567BF60:lI111|HF567BF58
F567BF58:lI114|HF567BF50
F567BF50:lI44|HF567BF48
F567BF48:lI123|HF567BF40
F567BF40:lI99|HF567BF38
F567BF38:lI97|HF567BF30
F567BF30:lI110|HF567BF28
F567BF28:lI110|HF567BF20
F567BF20:lI111|HF567BF18
F567BF18:lI116|HF567BF10
F567BF10:lI95|HF567BF08
F567BF08:lI115|HF567BF00
F567BF00:lI116|HF567BEF8
F567BEF8:lI97|HF567BEF0
F567BEF0:lI114|HF567BEE8
F567BEE8:lI116|HF567BEE0
F567BEE0:lI95|HF567BED8
F567BED8:lI97|HF567BED0
F567BED0:lI112|HF567BEC8
F567BEC8:lI112|HF567BEC0
F567BEC0:lI108|HF567BEB8
F567BEB8:lI105|HF567BEB0
F567BEB0:lI99|HF567BEA8
F567BEA8:lI97|HF567BEA0
F567BEA0:lI116|HF567BE98
F567BE98:lI105|HF567BE90
F567BE90:lI111|HF567BE88
F567BE88:lI110|HF567BE80
F567BE80:lI44|HF567BE78
F567BE78:lI114|HF567BE70
F567BE70:lI97|HF567BE68
F567BE68:lI98|HF567BE60
F567BE60:lI98|HF567BE58
F567BE58:lI105|HF567BE50
F567BE50:lI116|HF567BE48
F567BE48:lI44|HF567BE40
F567BE40:lI123|HF567BE38
F567BE38:lI98|HF567BE30
F567BE30:lI97|HF567BE28
F567BE28:lI100|HF567BE20
F567BE20:lI95|HF567BE18
F567BE18:lI114|HF567BE10
F567BE10:lI101|HF567BE08
F567BE08:lI116|HF567BE00
F567BE00:lI117|HF567BDF8
F567BDF8:lI114|HF567BDF0
F567BDF0:lI110|HF567BDE8
F567BDE8:lI44|HF567BDE0
F567BDE0:lI123|HF567BDD8
F567BDD8:lI123|HF567BDD0
F567BDD0:lI114|HF567BDC8
F567BDC8:lI97|HF567BDC0
F567BDC0:lI98|HF567BDB8
F567BDB8:lI98|HF567BDB0
F567BDB0:lI105|HF567BDA8
F567BDA8:lI116|HF567BDA0
F567BDA0:lI44|HF567BD98
F567BD98:lI115|HF567BD90
F567BD90:lI116|HF567BD88
F567BD88:lI97|HF567BD80
F567BD80:lI114|HF567BD78
F567BD78:lI116|HF567BD70
F567BD70:lI44|HF567BD68
F567BD68:lI91|HF567BD60
F567BD60:lI110|HF567BD58
F567BD58:lI111|HF567BD50
F567BD50:lI114|HF567BD48
F567BD48:lI109|HF567BD40
F567BD40:lI97|HF567BD38
F567BD38:lI108|HF567BD30
F567BD30:lI44|HF567BD28
F567BD28:lI91|HF567BD20
F567BD20:lI93|HF567BD18
F567BD18:lI93|HF567BD10
F567BD10:lI125|HF567BD08
F567BD08:lI44|HF567BD00
F567BD00:lI123|HF567BCF8
F567BCF8:lI39|HF567BCF0
F567BCF0:lI69|HF567BCE8
F567BCE8:lI88|HF567BCE0
F567BCE0:lI73|HF567BCD8
F567BCD8:lI84|HF567BCD0
F567BCD0:lI39|HF567BCC8
F567BCC8:lI44|HF567BCC0
F567BCC0:lI123|HF567BCB8
F567BCB8:lI123|HF567BCB0
F567BCB0:lI98|HF567BCA8
F567BCA8:lI97|HF567BCA0
F567BCA0:lI100|HF567BC98
F567BC98:lI109|HF567BC90
F567BC90:lI97|HF567BC88
F567BC88:lI116|HF567BC80
F567BC80:lI99|HF567BC78
F567BC78:lI104|HF567BC70
F567BC70:lI44|HF567BC68
F567BC68:lI123|HF567BC60
F567BC60:lI101|HF567BC58
F567BC58:lI114|HF567BC50
F567BC50:lI114|HF567BC48
F567BC48:lI111|HF567BC40
F567BC40:lI114|HF567BC38
F567BC38:lI44|HF567BC30
F567BC30:lI123|HF567BC28
F567BC28:lI123|HF567BC20
F567BC20:lI123|HF567BC18
F567BC18:lI98|HF567BC10
F567BC10:lI97|HF567BC08
F567BC08:lI100|HF567BC00
F567BC00:lI109|HF567BBF8
F567BBF8:lI97|HF567BBF0
F567BBF0:lI116|HF567BBE8
F567BBE8:lI99|HF567BBE0
F567BBE0:lI104|HF567BBD8
F567BBD8:lI44|HF567BBD0
F567BBD0:lI101|HF567BBC8
F567BBC8:lI111|HF567BBC0
F567BBC0:lI102|HF567BBB8
F567BBB8:lI125|HF567BBB0
F567BBB0:lI44|HF567BBA8
F567BBA8:lI91|HF567BBA0
F567BBA0:lI123|HF567BB98
F567BB98:lI114|HF567BB90
F567BB90:lI97|HF567BB88
F567BB88:lI98|HF567BB80
F567BB80:lI98|HF567BB78
F567BB78:lI105|HF567BB70
F567BB70:lI116|HF567BB68
F567BB68:lI95|HF567BB60
F567BB60:lI112|HF567BB58
F567BB58:lI101|HF567BB50
F567BB50:lI114|HF567BB48
F567BB48:lI115|HF567BB40
F567BB40:lI105|HF567BB38
F567BB38:lI115|HF567BB30
F567BB30:lI116|HF567BB28
F567BB28:lI101|HF567BB20
F567BB20:lI114|HF567BB18
F567BB18:lI44|HF567BB10
F567BB10:lI105|HF567BB08
F567BB08:lI110|HF567BB00
F567BB00:lI116|HF567BAF8
F567BAF8:lI101|HF567BAF0
F567BAF0:lI114|HF567BAE8
F567BAE8:lI110|HF567BAE0
F567BAE0:lI97|HF567BAD8
F567BAD8:lI108|HF567BAD0
F567BAD0:lI95|HF567BAC8
F567BAC8:lI108|HF567BAC0
F567BAC0:lI111|HF567BAB8
F567BAB8:lI97|HF567BAB0
F567BAB0:lI100|HF567BAA8
F567BAA8:lI95|HF567BAA0
F567BAA0:lI115|HF567BA98
F567BA98:lI110|HF567BA90
F567BA90:lI97|HF567BA88
F567BA88:lI112|HF567BA80
F567BA80:lI115|HF567BA78
F567BA78:lI104|HF567BA70
F567BA70:lI111|HF567BA68
F567BA68:lI116|HF567BA60
F567BA60:lI44|HF567BA58
F567BA58:lI50|HF567BA50
F567BA50:lI125|HF567BA48
F567BA48:lI44|HF567BA40
F567BA40:lI123|HF567BA38
F567BA38:lI114|HF567BA30
F567BA30:lI97|HF567BA28
F567BA28:lI98|HF567BA20
F567BA20:lI98|HF567BA18
F567BA18:lI105|HF567BA10
F567BA10:lI116|HF567BA08
F567BA08:lI95|HF567BA00
F567BA00:lI112|HF567B9F8
F567B9F8:lI101|HF567B9F0
F567B9F0:lI114|HF567B9E8
F567B9E8:lI115|HF567B9E0
F567B9E0:lI105|HF567B9D8
F567B9D8:lI115|HF567B9D0
F567B9D0:lI116|HF567B9C8
F567B9C8:lI101|HF567B9C0
F567B9C0:lI114|HF567B9B8
F567B9B8:lI44|HF567B9B0
F567B9B0:lI105|HF567B9A8
F567B9A8:lI110|HF567B9A0
F567B9A0:lI105|HF567B998
F567B998:lI116|HF567B990
F567B990:lI44|HF567B988
F567B988:lI49|HF567B980
F567B980:lI125|HF567B978
F567B978:lI44|HF567B970
F567B970:lI123|HF567B968
F567B968:lI103|HF567B960
F567B960:lI101|HF567B958
F567B958:lI110|HF567B950
F567B950:lI95|HF567B948
F567B948:lI115|HF567B940
F567B940:lI101|HF567B938
F567B938:lI114|HF567B930
F567B930:lI118|HF567B928
F567B928:lI101|HF567B920
F567B920:lI114|HF567B918
F567B918:lI46|HF567B910
F567B910:lI46|HF567B908
F567B908:lI46|HF567B900
F567B900:lI32|HF567B8F8
F567B8F8:lI10|N
F567C1D8:lH73CBA610|N
F573764C:lI47|HF57376F0
F57376F0:lI118|HF57377B8
F57377B8:lI97|HF57378C4
F57378C4:lI114|HF57379E4
F57379E4:lI47|HF5737B0C
F5737B0C:lI108|HF5737CAC
F5737CAC:lI111|HF5737E0C
F5737E0C:lI103|HF5737F64
F5737F64:lI47|HF57380E4
F57380E4:lI114|HF5738254
F5738254:lI97|HF57383C0
F57383C0:lI98|HF5738508
F5738508:lI98|HF5738644
F5738644:lI105|HF5738788
F5738788:lI116|HF57388C0
F57388C0:lI109|HF57389D0
F57389D0:lI113|HF5738A90
F5738A90:lI47|HF5738B20
F5738B20:lI114|HF5738B98
F5738B98:lI97|HF5738BF8
F5738BF8:lI98|HF5738C70
F5738C70:lI98|HF5738CD8
F5738CD8:lI105|HF5738D68
F5738D68:lI116|HF5738E08
F5738E08:lI46|HF5738E80
F5738E80:lI108|HF5738EF0
F5738EF0:lI111|HF5738F80
F5738F80:lI103|N
F567AF40:t3:A5:error,P<0.31.0>,HF567AF30
F567AF30:t3:A8:emulator,HF567AF28,HF567AF08
F567AF08:lHF567AF00|N
F567AF00:lI69|HF567AEF8
F567AEF8:lI114|HF567AEF0
F567AEF0:lI114|HF567AEE8
F567AEE8:lI111|HF567AEE0
F567AEE0:lI114|HF567AED8
F567AED8:lI32|HF567AED0
F567AED0:lI105|HF567AEC8
F567AEC8:lI110|HF567AEC0
F567AEC0:lI32|HF567AEB8
F567AEB8:lI112|HF567AEB0
F567AEB0:lI114|HF567AEA8
F567AEA8:lI111|HF567AEA0
F567AEA0:lI99|HF567AE98
F567AE98:lI101|HF567AE90
F567AE90:lI115|HF567AE88
F567AE88:lI115|HF567AE80
F567AE80:lI32|HF567AE78
F567AE78:lI60|HF567AE70
F567AE70:lI48|HF567AE68
F567AE68:lI46|HF567AE60
F567AE60:lI49|HF567AE58
F567AE58:lI46|HF567AE50
F567AE50:lI48|HF567AE48
F567AE48:lI62|HF567AE40
F567AE40:lI32|HF567AE38
F567AE38:lI111|HF567AE30
F567AE30:lI110|HF567AE28
F567AE28:lI32|HF567AE20
F567AE20:lI110|HF567AE18
F567AE18:lI111|HF567AE10
F567AE10:lI100|HF567AE08
F567AE08:lI101|HF567AE00
F567AE00:lI32|HF567ADF8
F567ADF8:lI39|HF567ADF0
F567ADF0:lI114|HF567ADE8
F567ADE8:lI97|HF567ADE0
F567ADE0:lI98|HF567ADD8
F567ADD8:lI98|HF567ADD0
F567ADD0:lI105|HF567ADC8
F567ADC8:lI116|HF567ADC0
F567ADC0:lI64|HF567ADB8
F567ADB8:lI109|HF567ADB0
F567ADB0:lI97|HF567ADA8
F567ADA8:lI105|HF567ADA0
F567ADA0:lI108|HF567AD98
F567AD98:lI39|HF567AD90
F567AD90:lI32|HF567AD88
F567AD88:lI119|HF567AD80
F567AD80:lI105|HF567AD78
F567AD78:lI116|HF567AD70
F567AD70:lI104|HF567AD68
F567AD68:lI32|HF567AD60
F567AD60:lI101|HF567AD58
F567AD58:lI120|HF567AD50
F567AD50:lI105|HF567AD48
F567AD48:lI116|HF567AD40
F567AD40:lI32|HF567AD38
F567AD38:lI118|HF567AD30
F567AD30:lI97|HF567AD28
F567AD28:lI108|HF567AD20
F567AD20:lI117|HF567AD18
F567AD18:lI101|HF567AD10
F567AD10:lI58|HF567AD08
F567AD08:lI32|HF567AD00
F567AD00:lI123|HF567ACF8
F567ACF8:lI123|HF567ACF0
F567ACF0:lI110|HF567ACE8
F567ACE8:lI111|HF567ACE0
F567ACE0:lI99|HF567ACD8
F567ACD8:lI97|HF567ACD0
F567ACD0:lI116|HF567ACC8
F567ACC8:lI99|HF567ACC0
F567ACC0:lI104|HF567ACB8
F567ACB8:lI44|HF567ACB0
F567ACB0:lI123|HF567ACA8
F567ACA8:lI101|HF567ACA0
F567ACA0:lI114|HF567AC98
F567AC98:lI114|HF567AC90
F567AC90:lI111|HF567AC88
F567AC88:lI114|HF567AC80
F567AC80:lI44|HF567AC78
F567AC78:lI123|HF567AC70
F567AC70:lI99|HF567AC68
F567AC68:lI97|HF567AC60
F567AC60:lI110|HF567AC58
F567AC58:lI110|HF567AC50
F567AC50:lI111|HF567AC48
F567AC48:lI116|HF567AC40
F567AC40:lI95|HF567AC38
F567AC38:lI115|HF567AC30
F567AC30:lI116|HF567AC28
F567AC28:lI97|HF567AC20
F567AC20:lI114|HF567AC18
F567AC18:lI116|HF567AC10
F567AC10:lI95|HF567AC08
F567AC08:lI97|HF567AC00
F567AC00:lI112|HF567ABF8
F567ABF8:lI112|HF567ABF0
F567ABF0:lI108|HF567ABE8
F567ABE8:lI105|HF567ABE0
F567ABE0:lI99|HF567ABD8
F567ABD8:lI97|HF567ABD0
F567ABD0:lI116|HF567ABC8
F567ABC8:lI105|HF567ABC0
F567ABC0:lI111|HF567ABB8
F567ABB8:lI110|HF567ABB0
F567ABB0:lI44|HF567ABA8
F567ABA8:lI114|HF567ABA0
F567ABA0:lI97|HF567AB98
F567AB98:lI98|HF567AB90
F567AB90:lI98|HF567AB88
F567AB88:lI105|HF567AB80
F567AB80:lI116|HF567AB78
F567AB78:lI44|HF567AB70
F567AB70:lI123|HF567AB68
F567AB68:lI98|HF567AB60
F567AB60:lI97|HF567AB58
F567AB58:lI100|HF567AB50
F567AB50:lI95|HF567AB48
F567AB48:lI114|HF567AB40
F567AB40:lI101|HF567AB38
F567AB38:lI116|HF567AB30
F567AB30:lI117|HF567AB28
F567AB28:lI114|HF567AB20
F567AB20:lI110|HF567AB18
F567AB18:lI44|HF567AB10
F567AB10:lI123|HF567AB08
F567AB08:lI123|HF567AB00
F567AB00:lI114|HF567AAF8
F567AAF8:lI97|HF567AAF0
F567AAF0:lI98|HF567AAE8
F567AAE8:lI98|HF567AAE0
F567AAE0:lI105|HF567AAD8
F567AAD8:lI116|HF567AAD0
F567AAD0:lI44|HF567AAC8
F567AAC8:lI115|HF567AAC0
F567AAC0:lI116|HF567AAB8
F567AAB8:lI97|HF567AAB0
F567AAB0:lI114|HF567AAA8
F567AAA8:lI116|HF567AAA0
F567AAA0:lI44|HF567AA98
F567AA98:lI91|HF567AA90
F567AA90:lI110|HF567AA88
F567AA88:lI111|HF567AA80
F567AA80:lI114|HF567AA78
F567AA78:lI109|HF567AA70
F567AA70:lI97|HF567AA68
F567AA68:lI108|HF567AA60
F567AA60:lI44|HF567AA58
F567AA58:lI91|HF567AA50
F567AA50:lI93|HF567AA48
F567AA48:lI93|HF567AA40
F567AA40:lI125|HF567AA38
F567AA38:lI44|HF567AA30
F567AA30:lI123|HF567AA28
F567AA28:lI39|HF567AA20
F567AA20:lI69|HF567AA18
F567AA18:lI88|HF567AA10
F567AA10:lI73|HF567AA08
F567AA08:lI84|HF567AA00
F567AA00:lI39|HF567A9F8
F567A9F8:lI44|HF567A9F0
F567A9F0:lI123|HF567A9E8
F567A9E8:lI123|HF567A9E0
F567A9E0:lI98|HF567A9D8
F567A9D8:lI97|HF567A9D0
F567A9D0:lI100|HF567A9C8
F567A9C8:lI109|HF567A9C0
F567A9C0:lI97|HF567A9B8
F567A9B8:lI116|HF567A9B0
F567A9B0:lI99|HF567A9A8
F567A9A8:lI104|HF567A9A0
F567A9A0:lI44|HF567A998
F567A998:lI123|HF567A990
F567A990:lI101|HF567A988
F567A988:lI114|HF567A980
F567A980:lI114|HF567A978
F567A978:lI111|HF567A970
F567A970:lI114|HF567A968
F567A968:lI44|HF567A960
F567A960:lI123|HF567A958
F567A958:lI123|HF567A950
F567A950:lI123|HF567A948
F567A948:lI98|HF567A940
F567A940:lI97|HF567A938
F567A938:lI100|HF567A930
F567A930:lI109|HF567A928
F567A928:lI97|HF567A920
F567A920:lI116|HF567A918
F567A918:lI99|HF567A910
F567A910:lI104|HF567A908
F567A908:lI44|HF567A900
F567A900:lI101|HF567A8F8
F567A8F8:lI111|HF567A8F0
F567A8F0:lI102|HF567A8E8
F567A8E8:lI125|HF567A8E0
F567A8E0:lI44|HF567A8D8
F567A8D8:lI91|HF567A8D0
F567A8D0:lI123|HF567A8C8
F567A8C8:lI114|HF567A8C0
F567A8C0:lI97|HF567A8B8
F567A8B8:lI98|HF567A8B0
F567A8B0:lI98|HF567A8A8
F567A8A8:lI105|HF567A8A0
F567A8A0:lI116|HF567A898
F567A898:lI95|HF567A890
F567A890:lI112|HF567A888
F567A888:lI101|HF567A880
F567A880:lI114|HF567A878
F567A878:lI115|HF567A870
F567A870:lI105|HF567A868
F567A868:lI115|HF567A860
F567A860:lI116|HF567A858
F567A858:lI101|HF567A850
F567A850:lI114|HF567A848
F567A848:lI44|HF567A840
F567A840:lI105|HF567A838
F567A838:lI110|HF567A830
F567A830:lI116|HF567A828
F567A828:lI101|HF567A820
F567A820:lI114|HF567A818
F567A818:lI110|HF567A810
F567A810:lI97|HF567A808
F567A808:lI108|HF567A800
F567A800:lI95|HF567A7F8
F567A7F8:lI108|HF567A7F0
F567A7F0:lI111|HF567A7E8
F567A7E8:lI97|HF567A7E0
F567A7E0:lI100|HF567A7D8
F567A7D8:lI95|HF567A7D0
F567A7D0:lI115|HF567A7C8
F567A7C8:lI110|HF567A7C0
F567A7C0:lI97|HF567A7B8
F567A7B8:lI112|HF567A7B0
F567A7B0:lI115|HF567A7A8
F567A7A8:lI104|HF567A7A0
F567A7A0:lI111|HF567A798
F567A798:lI116|HF567A790
F567A790:lI44|HF567A788
F567A788:lI50|HF567A780
F567A780:lI125|HF567A778
F567A778:lI44|HF567A770
F567A770:lI123|HF567A768
F567A768:lI114|HF567A760
F567A760:lI97|HF567A758
F567A758:lI98|HF567A750
F567A750:lI98|HF567A748
F567A748:lI105|HF567A740
F567A740:lI116|HF567A738
F567A738:lI95|HF567A730
F567A730:lI112|HF567A728
F567A728:lI101|HF567A720
F567A720:lI114|HF567A718
F567A718:lI115|HF567A710
F567A710:lI105|HF567A708
F567A708:lI115|HF567A700
F567A700:lI116|HF567A6F8
F567A6F8:lI101|HF567A6F0
F567A6F0:lI114|HF567A6E8
F567A6E8:lI44|HF567A6E0
F567A6E0:lI105|HF567A6D8
F567A6D8:lI110|HF567A6D0
F567A6D0:lI105|HF567A6C8
F567A6C8:lI116|HF567A6C0
F567A6C0:lI44|HF567A6B8
F567A6B8:lI49|HF567A6B0
F567A6B0:lI125|HF567A6A8
F567A6A8:lI44|HF567A6A0
F567A6A0:lI123|HF567A698
F567A698:lI103|HF567A690
F567A690:lI101|HF567A688
F567A688:lI110|HF567A680
F567A680:lI95|HF567A678
F567A678:lI115|HF567A670
F567A670:lI101|HF567A668
F567A668:lI114|HF567A660
F567A660:lI118|HF567A658
F567A658:lI101|HF567A650
F567A650:lI114|HF567A648
F567A648:lI46|HF567A640
F567A640:lI46|HF567A638
F567A638:lI46|HF567A630
F567A630:lI32|HF567A628
F567A628:lI10|N
F567AF28:lI126|HF567AF20
F567AF20:lI115|HF567AF18
F567AF18:lI126|HF567AF10
F567AF10:lI110|N
F567A598:t5:A7:handler,A1A:rabbit_error_logger_file_h,A5:false,HF567A57C,A5:false
F567A57C:t3:P<0.55.0>,HF573764C,N
F567A5EC:lHF567A5C8|N
F567A5C8:t5:A7:handler,AC:error_logger,A5:false,N,A5:false
F567AFB0:t5:A7:handler,A19:rabbit_sasl_report_file_h,A5:false,HF567AF94,A5:false
F567AF94:t3:P<0.56.0>,HF5737398,A5:error
F5737398:lI47|HF573747C
F573747C:lI118|HF5737574
F5737574:lI97|HF5737634
F5737634:lI114|HF57376D4
F57376D4:lI47|HF573779C
F573779C:lI108|HF57378A8
F57378A8:lI111|HF57379B8
F57379B8:lI103|HF5737ACC
F5737ACC:lI47|HF5737C54
F5737C54:lI114|HF5737DC0
F5737DC0:lI97|HF5737F28
F5737F28:lI98|HF57380A8
F57380A8:lI98|HF5738228
F5738228:lI105|HF57383A4
F57383A4:lI116|HF57384EC
F57384EC:lI109|HF5738630
F5738630:lI113|HF5738780
F5738780:lI47|HF57388B8
F57388B8:lI114|HF57389C8
F57389C8:lI97|HF5738A88
F5738A88:lI98|HF5738B18
F5738B18:lI98|HF5738B90
F5738B90:lI105|HF5738BF0
F5738BF0:lI116|HF5738C68
F5738C68:lI45|HF5738CD0
F5738CD0:lI115|HF5738D60
F5738D60:lI97|HF5738E00
F5738E00:lI115|HF5738E78
F5738E78:lI108|HF5738EE8
F5738EE8:lI46|HF5738F78
F5738F78:lI108|HF5739018
F5739018:lI111|HF5739080
F5739080:lI103|N
F57373E0:t2:AD:$initial_call,H819055D4
819055D4:t3:A9:gen_event,A7:init_it,I6
F57373EC:t2:AA:$ancestors,HF57374B4
F57374B4:lP<0.1.0>|N
=proc_dictionary:<0.6.0>
H74056070
H7405607C
=proc_stack:<0.6.0>
0xf57a2684:SReturn addr 0x1CC8E0 (<terminate process normally>)
y0:N
y1:A8:infinity
y2:A16:application_controller
y3:HF57A0778
y4:A16:application_controller
y5:P<0.1.0>
=proc_heap:<0.6.0>
F57A0778:t9:A5:state,N,N,N,H74057EB4,N,H74057EBC,N,N
74057EBC:lH74057F30|H74057F3C
74057F30:t2:A4:sasl,A9:permanent
74057F3C:lH74057F60|H74057F6C
74057F60:t2:A6:stdlib,A9:permanent
74057F6C:lH74057F88|N
74057F88:t2:A6:kernel,A9:permanent
74057EB4:lH74057F1C|H74057F28
74057F1C:t2:A4:sasl,P<0.37.0>
74057F28:lH74057F4C|H74057F58
74057F4C:t2:A6:stdlib,A9:undefined
74057F58:lH74057F7C|N
74057F7C:t2:A6:kernel,P<0.8.0>
74056070:t2:AD:$initial_call,H81923AC0
81923AC0:t3:A16:application_controller,A5:start,I1
7405607C:t2:AA:$ancestors,H740560F8
740560F8:lP<0.1.0>|N
=proc_dictionary:<0.8.0>
HF5648020
HF564802C
=proc_stack:<0.8.0>
0xf56483a0:SReturn addr 0x81903014 (proc_lib:init_p_do_apply/3 + 28)
y0:N
y1:N
y2:N
y3:N
y4:HF56480F0
y5:P<0.6.0>
0xf56483bc:SReturn addr 0x1CC8E0 (<terminate process normally>)
y0:SCatch 0x81903024 (proc_lib:init_p_do_apply/3 + 44)
=proc_heap:<0.8.0>
F56480F0:t6:A5:state,P<0.9.0>,HF5648780,N,I0,P<0.0.0>
F5648780:t9:A9:appl_data,A6:kernel,HF56487B0,A9:undefined,HF56487B8,HF56487C4,N,A8:infinity,A8:infinity
F56487C4:lAB:application|HF56487D4
F56487D4:lA16:application_controller|HF56487E4
F56487E4:lA12:application_master|HF56487F4
F56487F4:lA13:application_starter|HF5648804
F5648804:lA4:auth|HF5648814
F5648814:lA4:code|HF5648824
F5648824:lA8:packages|HF5648834
F5648834:lAB:code_server|HF5648844
F5648844:lA9:dist_util|HF5648854
F5648854:lAF:erl_boot_server|HF5648864
F5648864:lA10:erl_distribution|HF5648874
F5648874:lAF:erl_prim_loader|HF5648884
F5648884:lA9:erl_reply|HF5648894
F5648894:lA6:erlang|HF56488A4
F56488A4:lAD:error_handler|HF56488B4
F56488B4:lAC:error_logger|HF56488C4
F56488C4:lA4:file|HF56488D4
F56488D4:lAB:file_server|HF56488E4
F56488E4:lAE:file_io_server|HF56488F4
F56488F4:lA9:prim_file|HF5648904
F5648904:lA8:prim_zip|HF5648914
F5648914:lA6:global|HF5648924
F5648924:lAC:global_group|HF5648934
F5648934:lAD:global_search|HF5648944
F5648944:lA5:group|HF5648954
F5648954:lA5:heart|HF564895C
F564895C:lA13:hipe_unified_loader|HF5648964
F5648964:lA9:inet6_tcp|HF564896C
F564896C:lAE:inet6_tcp_dist|HF5648974
F5648974:lA9:inet6_udp|HF564897C
F564897C:lAB:inet_config|HF5648984
F5648984:lAA:inet_hosts|HF564898C
F564898C:lA13:inet_gethost_native|HF5648994
F5648994:lAD:inet_tcp_dist|HF564899C
F564899C:lA4:init|HF56489A4
F56489A4:lA6:kernel|HF56489AC
F56489AC:lAD:kernel_config|HF56489B4
F56489B4:lA3:net|HF56489BC
F56489BC:lA7:net_adm|HF56489C4
F56489C4:lAA:net_kernel|HF56489CC
F56489CC:lA2:os|HF56489D4
F56489D4:lA8:ram_file|HF56489DC
F56489DC:lA3:rpc|HF56489E4
F56489E4:lA4:user|HF56489EC
F56489EC:lA8:user_drv|HF56489F4
F56489F4:lA8:user_sup|HF56489FC
F56489FC:lA8:disk_log|HF5648A04
F5648A04:lAA:disk_log_1|HF5648A0C
F5648A0C:lAF:disk_log_server|HF5648A14
F5648A14:lAC:disk_log_sup|HF5648A1C
F5648A1C:lA7:dist_ac|HF5648A24
F5648A24:lA8:erl_ddll|HF5648A2C
F5648A2C:lA8:erl_epmd|HF5648A34
F5648A34:lAA:erts_debug|HF5648A3C
F5648A3C:lA7:gen_tcp|HF5648A44
F5648A44:lA7:gen_udp|HF5648A4C
F5648A4C:lA8:gen_sctp|HF5648A54
F5648A54:lA9:prim_inet|HF5648A5C
F5648A5C:lA4:inet|HF5648A64
F5648A64:lA7:inet_db|HF5648A6C
F5648A6C:lA8:inet_dns|HF5648A74
F5648A74:lAA:inet_parse|HF5648A7C
F5648A7C:lA8:inet_res|HF5648A84
F5648A84:lA8:inet_tcp|HF5648A8C
F5648A8C:lA8:inet_udp|HF5648A94
F5648A94:lA9:inet_sctp|HF5648A9C
F5648A9C:lA3:pg2|HF5648AA4
F5648AA4:lA9:seq_trace|HF5648AAC
F5648AAC:lAF:wrap_log_reader|HF5648AB4
F5648AB4:lA4:zlib|HF5648ABC
F5648ABC:lA9:otp_ring0|N
F56487B8:t2:A6:kernel,N
F56487B0:lA16:application_controller|HF56487CC
F56487CC:lA9:erl_reply|HF56487DC
F56487DC:lA4:auth|HF56487EC
F56487EC:lAB:boot_server|HF56487FC
F56487FC:lAB:code_server|HF564880C
F564880C:lAF:disk_log_server|HF564881C
F564881C:lAC:disk_log_sup|HF564882C
F564882C:lAF:erl_prim_loader|HF564883C
F564883C:lAC:error_logger|HF564884C
F564884C:lAD:file_server_2|HF564885C
F564885C:lAF:fixtable_server|HF564886C
F564886C:lAC:global_group|HF564887C
F564887C:lA12:global_name_server|HF564888C
F564888C:lA5:heart|HF564889C
F564889C:lA4:init|HF56488AC
F56488AC:lAD:kernel_config|HF56488BC
F56488BC:lAA:kernel_sup|HF56488CC
F56488CC:lAA:net_kernel|HF56488DC
F56488DC:lA7:net_sup|HF56488EC
F56488EC:lA3:rex|HF56488FC
F56488FC:lA4:user|HF564890C
F564890C:lA9:os_server|HF564891C
F564891C:lAB:ddll_server|HF564892C
F564892C:lA8:erl_epmd|HF564893C
F564893C:lA7:inet_db|HF564894C
F564894C:lA3:pg2|N
F5648020:t2:AD:$initial_call,HF5648038
F5648038:t3:A12:application_master,A4:init,I4
F564802C:t2:AA:$ancestors,HF56487A8
F56487A8:lP<0.7.0>|N
=proc_stack:<0.9.0>
0xf5649100:SReturn addr 0x1CC8E0 (<terminate process normally>)
y0:N
y1:A6:kernel
y2:P<0.10.0>
y3:P<0.8.0>
=proc_heap:<0.9.0>
=proc_dictionary:<0.10.0>
HF5714410
HF571441C
=proc_stack:<0.10.0>
0xf5716290:SReturn addr 0x81903014 (proc_lib:init_p_do_apply/3 + 28)
y0:N
y1:A8:infinity
y2:AA:supervisor
y3:HF5715590
y4:AA:kernel_sup
y5:P<0.9.0>
0xf57162ac:SReturn addr 0x1CC8E0 (<terminate process normally>)
y0:SCatch 0x81903024 (proc_lib:init_p_do_apply/3 + 44)
=proc_heap:<0.10.0>
F5715590:tA:A5:state,HF5714404,AB:one_for_all,HF571557C,HF5714440,I0,I1,N,A6:kernel,N
F5714440:t9:A4:dict,I0,I16,I16,I8,I80,I48,H819643D4,HF57144AC
F57144AC:t1:H819643D4
819643D4:t10:N,N,N,N,N,N,N,N,N,N,N,N,N,N,N,N
F571557C:lHF5715558|HF5715390
F5715558:t8:A5:child,P<0.33.0>,AF:kernel_safe_sup,H819588F0,A9:permanent,A8:infinity,AA:supervisor,H81958924
81958924:lA6:kernel|N
819588F0:t3:AA:supervisor,AA:start_link,H81958900
81958900:lH81958918|H81958908
81958918:t2:A5:local,AF:kernel_safe_sup
81958908:lA6:kernel|H81958910
81958910:lA4:safe|N
F5715390:lHF571536C|HF5715188
F571536C:t8:A5:child,P<0.32.0>,AD:kernel_config,H81958948,A9:permanent,I2000,A6:worker,H81958958
81958958:lAD:kernel_config|N
81958948:t3:AD:kernel_config,AA:start_link,N
F5715188:lHF5715164|HF5714F2C
F5715164:t8:A5:child,P<0.30.0>,A4:user,H8195897C,A9:temporary,I2000,AA:supervisor,H8195898C
8195898C:lA8:user_sup|N
8195897C:t3:A8:user_sup,A5:start,N
F5714F2C:lHF5714F08|HF5714AC8
F5714F08:t8:A5:child,P<0.26.0>,AB:code_server,HF5714428,A9:permanent,I2000,A6:worker,H81958798
81958798:lA4:code|N
F5714428:t3:A4:code,AA:start_link,N
F5714AC8:lHF5714AD8|HF5714AFC
F5714AD8:t8:A5:child,P<0.25.0>,AD:file_server_2,H81958894,A9:permanent,I2000,A6:worker,H819588A4
819588A4:lA4:file|H819588AC
819588AC:lAB:file_server|H819588B4
819588B4:lAE:file_io_server|H819588BC
819588BC:lA9:prim_file|N
81958894:t3:AB:file_server,AA:start_link,N
F5714AFC:lHF5714B04|HF5714B28
F5714B04:t8:A5:child,P<0.24.0>,AC:global_group,H819589B0,A9:permanent,I2000,A6:worker,H819589C0
819589C0:lAC:global_group|N
819589B0:t3:AC:global_group,AA:start_link,N
F5714B28:lHF5714B30|HF57146A4
F5714B30:t8:A5:child,P<0.18.0>,A7:net_sup,H819589E4,A9:permanent,A8:infinity,AA:supervisor,H819589F4
819589F4:lA10:erl_distribution|N
819589E4:t3:A10:erl_distribution,AA:start_link,N
F57146A4:lHF57146E8|HF5714638
F57146E8:t8:A5:child,P<0.16.0>,A7:inet_db,H81958A18,A9:permanent,I2000,A6:worker,H81958A28
81958A28:lA7:inet_db|N
81958A18:t3:A7:inet_db,AA:start_link,N
F5714638:lHF5714640|HF5714664
F5714640:t8:A5:child,P<0.12.0>,A12:global_name_server,H81958A4C,A9:permanent,I2000,A6:worker,H81958A5C
81958A5C:lA6:global|N
81958A4C:t3:A6:global,AA:start_link,N
F5714664:lHF571466C|N
F571466C:t8:A5:child,P<0.11.0>,A3:rex,H81958A80,A9:permanent,I2000,A6:worker,H81958A90
81958A90:lA3:rpc|N
81958A80:t3:A3:rpc,AA:start_link,N
F5714404:t2:A5:local,AA:kernel_sup
F5714410:t2:AD:$initial_call,HF5714468
F5714468:t3:AA:supervisor,A6:kernel,I1
F571441C:t2:AA:$ancestors,HF5714478
F5714478:lP<0.9.0>|N
=proc_dictionary:<0.11.0>
HF5629840
HF562984C
=proc_stack:<0.11.0>
0xf562a794:SReturn addr 0x81903014 (proc_lib:init_p_do_apply/3 + 28)
y0:N
y1:A8:infinity
y2:A3:rpc
y3:HF562A240
y4:A3:rex
y5:P<0.10.0>
0xf562a7b0:SReturn addr 0x1CC8E0 (<terminate process normally>)
y0:SCatch 0x81903024 (proc_lib:init_p_do_apply/3 + 44)
=proc_heap:<0.11.0>
F562A240:t2:I0,A3:nil
F5629840:t2:AD:$initial_call,HF5629858
F5629858:t3:A3:rpc,A4:init,I1
F562984C:t2:AA:$ancestors,HF5629868
F5629868:lAA:kernel_sup|HF5629870
F5629870:lP<0.9.0>|N
=proc_dictionary:<0.12.0>
HF566B3AC
HF566B3B8
=proc_stack:<0.12.0>
0xf56f2f80:SReturn addr 0x81903014 (proc_lib:init_p_do_apply/3 + 28)
y0:N
y1:A8:infinity
y2:A6:global
y3:HF566B378
y4:A12:global_name_server
y5:P<0.10.0>
0xf56f2f9c:SReturn addr 0x1CC8E0 (<terminate process normally>)
y0:SCatch 0x81903024 (proc_lib:init_p_do_apply/3 + 44)
=proc_heap:<0.12.0>
F566B378:tC:A5:state,A4:true,N,N,N,N,AD:nonode at nohost,P<0.13.0>,P<0.14.0>,P<0.15.0>,A8:no_trace,A5:false
F566B3AC:t2:AD:$initial_call,HF566B3C4
F566B3C4:t3:A6:global,A4:init,I1
F566B3B8:t2:AA:$ancestors,HF566B3D4
F566B3D4:lAA:kernel_sup|HF566B3DC
F566B3DC:lP<0.9.0>|N
=proc_stack:<0.13.0>
0xf5626b14:SReturn addr 0x81984330 (global:init_the_locker/1 + 192)
y0:HF5626854
y1:A8:infinity
0xf5626b20:SReturn addr 0x1CC8E0 (<terminate process normally>)
=proc_heap:<0.13.0>
F5626854:t7:A5:multi,N,N,N,AD:nonode at nohost,A5:false,A5:false
=proc_stack:<0.14.0>
0xf5626ebc:SReturn addr 0x81988988 (global:loop_the_deleter/1 + 36)
y0:A8:infinity
y1:N
y2:P<0.12.0>
0xf5626ecc:SReturn addr 0x1CC8E0 (<terminate process normally>)
y0:P<0.12.0>
=proc_heap:<0.14.0>
=proc_stack:<0.15.0>
0xf562727c:SReturn addr 0x1CC8E0 (<terminate process normally>)
y0:N
=proc_heap:<0.15.0>
=proc_dictionary:<0.16.0>
HF579CA64
HF579CA70
=proc_stack:<0.16.0>
0xf579cd98:SReturn addr 0x81903014 (proc_lib:init_p_do_apply/3 + 28)
y0:N
y1:A8:infinity
y2:A7:inet_db
y3:HF579CA2C
y4:A7:inet_db
y5:P<0.10.0>
0xf579cdb4:SReturn addr 0x1CC8E0 (<terminate process normally>)
y0:SCatch 0x81903024 (proc_lib:init_p_do_apply/3 + 44)
=proc_heap:<0.16.0>
F579CA2C:t5:A5:state,A7:inet_db,AA:inet_cache,AA:inet_hosts,HF579CA7C
F579CA7C:E1F:8372000364000B726162626974406D61696C03000000090000000000000000
F579CA64:t2:AD:$initial_call,HF579CAA4
F579CAA4:t3:A7:inet_db,A4:init,I1
F579CA70:t2:AA:$ancestors,HF579CAB4
F579CAB4:lAA:kernel_sup|HF579CAC4
F579CAC4:lP<0.9.0>|N
=proc_dictionary:<0.18.0>
HF5760D54
HF5760D60
=proc_stack:<0.18.0>
0xf5761c98:SReturn addr 0x81903014 (proc_lib:init_p_do_apply/3 + 28)
y0:N
y1:A8:infinity
y2:AA:supervisor
y3:HF5761BF4
y4:A7:net_sup
y5:P<0.10.0>
0xf5761cb4:SReturn addr 0x1CC8E0 (<terminate process normally>)
y0:SCatch 0x81903024 (proc_lib:init_p_do_apply/3 + 44)
=proc_heap:<0.18.0>
F5761BF4:tA:A5:state,HF5760D48,AB:one_for_all,HF5761BE0,HF5761788,I0,I1,N,A10:erl_distribution,HF5760D6C
F5760D6C:lA6:rabbit|HF5760DCC
F5760DCC:lAA:shortnames|N
F5761788:t9:A4:dict,I0,I16,I16,I8,I80,I48,H819643D4,HF57617CC
F57617CC:t1:H819643D4
F5761BE0:lHF5761BBC|HF57619D8
F5761BBC:t8:A5:child,P<0.21.0>,AA:net_kernel,HF5760D8C,A9:permanent,I2000,A6:worker,H73F21890
73F21890:lAA:net_kernel|N
F5760D8C:t3:AA:net_kernel,AA:start_link,HF5760DD4
F5760DD4:lHF5760D6C|N
F57619D8:lHF57619B4|HF57616D8
F57619B4:t8:A5:child,P<0.20.0>,A4:auth,H73F218B4,A9:permanent,I2000,A6:worker,H73F218C4
73F218C4:lA4:auth|N
73F218B4:t3:A4:auth,AA:start_link,N
F57616D8:lHF5761740|N
F5761740:t8:A5:child,P<0.19.0>,A8:erl_epmd,HF5760D74,A9:permanent,I2000,A6:worker,HF5760D84
F5760D84:lA8:erl_epmd|N
F5760D74:t3:A8:erl_epmd,AA:start_link,N
F5760D48:t2:A5:local,A7:net_sup
F5760D54:t2:AD:$initial_call,HF5760DB4
F5760DB4:t3:AA:supervisor,A10:erl_distribution,I1
F5760D60:t2:AA:$ancestors,HF5760DC4
F5760DC4:lAA:kernel_sup|HF5760DF4
F5760DF4:lP<0.9.0>|N
=proc_dictionary:<0.19.0>
HF577A08C
HF577A098
=proc_stack:<0.19.0>
0xf577ac20:SReturn addr 0x81903014 (proc_lib:init_p_do_apply/3 + 28)
y0:N
y1:A8:infinity
y2:A8:erl_epmd
y3:HF577A6A0
y4:A8:erl_epmd
y5:P<0.18.0>
0xf577ac3c:SReturn addr 0x1CC8E0 (<terminate process normally>)
y0:SCatch 0x81903024 (proc_lib:init_p_do_apply/3 + 44)
=proc_heap:<0.19.0>
F577A6A0:t4:A5:state,p<0.97>,I38849,A6:rabbit
F577A08C:t2:AD:$initial_call,HF577A0B4
F577A0B4:t3:A8:erl_epmd,A4:init,I1
F577A098:t2:AA:$ancestors,HF577A0C4
F577A0C4:lA7:net_sup|HF577A0CC
F577A0CC:lAA:kernel_sup|HF577A0D4
F577A0D4:lP<0.9.0>|N
=proc_dictionary:<0.20.0>
HF56F23D8
HF56F23E4
=proc_stack:<0.20.0>
0xf568c984:SReturn addr 0x81903014 (proc_lib:init_p_do_apply/3 + 28)
y0:N
y1:A8:infinity
y2:A4:auth
y3:HF568C2D0
y4:A4:auth
y5:P<0.18.0>
0xf568c9a0:SReturn addr 0x1CC8E0 (<terminate process normally>)
y0:SCatch 0x81903024 (proc_lib:init_p_do_apply/3 + 44)
=proc_heap:<0.20.0>
F568C2D0:t3:A5:state,A14:ZKTGFBRYQMLMYZWGNZEZ,I9
F56F23D8:t2:AD:$initial_call,HF56F23F8
F56F23F8:t3:A4:auth,A4:init,I1
F56F23E4:t2:AA:$ancestors,HF56F2408
F56F2408:lA7:net_sup|HF56F2418
F56F2418:lAA:kernel_sup|HF56F2428
F56F2428:lP<0.9.0>|N
=proc_dictionary:<0.21.0>
HF55E2020
HF55E202C
HF55E2038
=proc_stack:<0.21.0>
0xf577b964:SReturn addr 0x81903014 (proc_lib:init_p_do_apply/3 + 28)
y0:N
y1:A8:infinity
y2:AA:net_kernel
y3:HF577B3FC
y4:AA:net_kernel
y5:P<0.18.0>
0xf577b980:SReturn addr 0x1CC8E0 (<terminate process normally>)
y0:SCatch 0x81903024 (proc_lib:init_p_do_apply/3 + 44)
=proc_heap:<0.21.0>
F577B3FC:tD:A5:state,A6:rabbit,AB:rabbit at mail,AA:shortnames,HF577B168,I7000,A8:sys_dist,HF577B3F4,N,HF577B0C4,N,I0,A3:all
F577B0C4:lHF577B0AC|N
F577B0AC:t5:A6:listen,p<0.93>,P<0.22.0>,HF577B010,AD:inet_tcp_dist
F577B010:t5:AB:net_address,HF577B028,HF577B034,A3:tcp,A4:inet
F577B034:lI109|HF577B050
F577B050:lI97|HF577B058
F577B058:lI105|HF577B060
F577B060:lI108|N
F577B028:t2:HF577B03C,I38849
F577B03C:t4:I0,I0,I0,I0
F577B3F4:lHF577B3E8|N
F577B3E8:t2:P<0.27.0>,A17:rabbitmq_multi7151 at mail
F577B168:t3:A4:tick,P<0.23.0>,I15000
F55E2020:t2:AD:$initial_call,HF55E2044
F55E2044:t3:AA:net_kernel,A4:init,I1
F55E202C:t2:A9:longnames,A5:false
F55E2038:t2:AA:$ancestors,HF55E2054
F55E2054:lA7:net_sup|HF55E205C
F55E205C:lAA:kernel_sup|HF55E2064
F55E2064:lP<0.9.0>|N
=proc_stack:<0.22.0>
0xf577bd10:SReturn addr 0x73F1C7C8 (inet_tcp:accept/1 + 20)
y0:I2
y1:p<0.93>
0xf577bd1c:SReturn addr 0x73F27AD8 (inet_tcp_dist:accept_loop/2 + 48)
y0:N
0xf577bd24:SReturn addr 0x1CC8E0 (<terminate process normally>)
y0:N
y1:p<0.93>
y2:P<0.21.0>
=proc_heap:<0.22.0>
=proc_stack:<0.23.0>
0xf57363b8:SReturn addr 0x1CC8E0 (<terminate process normally>)
y0:I15000
y1:P<0.21.0>
=proc_heap:<0.23.0>
=proc_dictionary:<0.24.0>
HF57C33D8
HF57C3408
HF57C33BC
HF57C3414
HF57C3420
=proc_stack:<0.24.0>
0xf57c36c0:SReturn addr 0x81903014 (proc_lib:init_p_do_apply/3 + 28)
y0:N
y1:A8:infinity
y2:AC:global_group
y3:HF57C34E4
y4:AC:global_group
y5:P<0.10.0>
0xf57c36dc:SReturn addr 0x1CC8E0 (<terminate process normally>)
y0:SCatch 0x81903024 (proc_lib:init_p_do_apply/3 + 44)
=proc_heap:<0.24.0>
F57C34E4:tC:A5:state,A7:no_conf,A4:true,N,N,N,N,N,AB:rabbit at mail,N,A6:normal,A6:normal
F57C33D8:t2:AD:$initial_call,HF57C33C8
F57C33C8:t3:AC:global_group,A4:init,I1
F57C3408:t2:A10:registered_names,H73F62394
73F62394:lA9:undefined|N
F57C33BC:t2:AA:$ancestors,HF57C33B4
F57C33B4:lAA:kernel_sup|HF57C3394
F57C3394:lP<0.9.0>|N
F57C3414:t2:A4:send,H73F62394
F57C3420:t2:AC:whereis_name,H73F62394
=proc_dictionary:<0.25.0>
HF5671030
HF567103C
=proc_stack:<0.25.0>
0xf56760d4:SReturn addr 0x81903014 (proc_lib:init_p_do_apply/3 + 28)
y0:N
y1:A8:infinity
y2:AB:file_server
y3:p<0.102>
y4:AD:file_server_2
y5:P<0.10.0>
0xf56760f0:SReturn addr 0x1CC8E0 (<terminate process normally>)
y0:SCatch 0x81903024 (proc_lib:init_p_do_apply/3 + 44)
=proc_heap:<0.25.0>
F5671030:t2:AD:$initial_call,HF5671048
F5671048:t3:AB:file_server,A4:init,I1
F567103C:t2:AA:$ancestors,HF5671058
F5671058:lAA:kernel_sup|HF5671060
F5671060:lP<0.9.0>|N
=proc_stack:<0.26.0>
0xf56d7610:SReturn addr 0x1CC8E0 (<terminate process normally>)
y0:HF571D578
y1:P<0.10.0>
=proc_heap:<0.26.0>
F571D578:t8:A5:state,P<0.10.0>,HF5718B20,HF571D0C0,I4108,I8205,A8:no_cache,AB:interactive
F571D0C0:lHF571D0D0|HF571D0D8
F571D0D0:lI47|HF571D0E8
F571D0E8:lI117|HF571D100
F571D100:lI115|HF571D118
F571D118:lI114|HF571D130
F571D130:lI47|HF571D148
F571D148:lI108|HF571D160
F571D160:lI105|HF571D178
F571D178:lI98|HF571D190
F571D190:lI47|HF571D1A8
F571D1A8:lI114|HF571D1C0
F571D1C0:lI97|HF571D1D8
F571D1D8:lI98|HF571D1F0
F571D1F0:lI98|HF571D208
F571D208:lI105|HF571D220
F571D220:lI116|HF571D238
F571D238:lI109|HF571D250
F571D250:lI113|HF571D268
F571D268:lI47|HF571D280
F571D280:lI108|HF571D298
F571D298:lI105|HF571D2B0
F571D2B0:lI98|HF571D2C8
F571D2C8:lI47|HF571D2E0
F571D2E0:lI114|HF571D2F8
F571D2F8:lI97|HF571D310
F571D310:lI98|HF571D328
F571D328:lI98|HF571D340
F571D340:lI105|HF571D358
F571D358:lI116|HF571D370
F571D370:lI109|HF571D388
F571D388:lI113|HF571D3A0
F571D3A0:lI95|HF571D3B8
F571D3B8:lI115|HF571D3D0
F571D3D0:lI101|HF571D3E8
F571D3E8:lI114|HF571D400
F571D400:lI118|HF571D418
F571D418:lI101|HF571D430
F571D430:lI114|HF571D448
F571D448:lI45|HF571D458
F571D458:lI49|HF571D468
F571D468:lI46|HF571D478
F571D478:lI55|HF571D488
F571D488:lI46|HF571D490
F571D490:lI49|HF571D498
F571D498:lI47|HF571D4A0
F571D4A0:lI115|HF571D4A8
F571D4A8:lI98|HF571D4B0
F571D4B0:lI105|HF571D4B8
F571D4B8:lI110|HF571D4C0
F571D4C0:lI47|HF571D4C8
F571D4C8:lI46|HF571D4D0
F571D4D0:lI46|HF571D4D8
F571D4D8:lI47|HF571D4E0
F571D4E0:lI101|HF571D4E8
F571D4E8:lI98|HF571D4F0
F571D4F0:lI105|HF571D4F8
F571D4F8:lI110|N
F571D0D8:lH73F768B0|HF571D0F0
73F768B0:lI46|N
F571D0F0:lHF571B048|HF571D108
F571B048:lI47|HF571B0E8
F571B0E8:lI117|HF571B198
F571B198:lI115|HF571B250
F571B250:lI114|HF571B310
F571B310:lI47|HF571B3D8
F571B3D8:lI108|HF571B4A8
F571B4A8:lI105|HF571B580
F571B580:lI98|HF571B660
F571B660:lI47|HF571B748
F571B748:lI101|HF571B830
F571B830:lI114|HF571B918
F571B918:lI108|HF571BA00
F571BA00:lI97|HF571BAE8
F571BAE8:lI110|HF571BBD0
F571BBD0:lI103|HF571BCB8
F571BCB8:lI47|HF571BDA0
F571BDA0:lI108|HF571BE88
F571BE88:lI105|HF571BF70
F571BF70:lI98|HF571C058
F571C058:lI47|HF571C140
F571C140:lI107|HF571C228
F571C228:lI101|HF571C310
F571C310:lI114|HF571C3F8
F571C3F8:lI110|HF571C4E0
F571C4E0:lI101|HF571C5C0
F571C5C0:lI108|HF571C6A0
F571C6A0:lI45|HF571C780
F571C780:lI50|HF571C860
F571C860:lI46|HF571C940
F571C940:lI49|HF571CA18
F571CA18:lI50|HF571CAE0
F571CAE0:lI46|HF571CBA8
F571CBA8:lI53|HF571CC68
F571CC68:lI47|HF571CD10
F571CD10:lI101|HF571CD98
F571CD98:lI98|HF571CE18
F571CE18:lI105|HF571CE88
F571CE88:lI110|N
F571D108:lHF571B180|HF571D120
F571B180:lI47|HF571B238
F571B238:lI117|HF571B2F8
F571B2F8:lI115|HF571B3C0
F571B3C0:lI114|HF571B490
F571B490:lI47|HF571B568
F571B568:lI108|HF571B648
F571B648:lI105|HF571B730
F571B730:lI98|HF571B818
F571B818:lI47|HF571B900
F571B900:lI101|HF571B9E8
F571B9E8:lI114|HF571BAD0
F571BAD0:lI108|HF571BBB8
F571BBB8:lI97|HF571BCA0
F571BCA0:lI110|HF571BD88
F571BD88:lI103|HF571BE70
F571BE70:lI47|HF571BF58
F571BF58:lI108|HF571C040
F571C040:lI105|HF571C128
F571C128:lI98|HF571C210
F571C210:lI47|HF571C2F8
F571C2F8:lI115|HF571C3E0
F571C3E0:lI116|HF571C4C8
F571C4C8:lI100|HF571C5A8
F571C5A8:lI108|HF571C688
F571C688:lI105|HF571C768
F571C768:lI98|HF571C848
F571C848:lI45|HF571C928
F571C928:lI49|HF571CA00
F571CA00:lI46|HF571CAC8
F571CAC8:lI49|HF571CB90
F571CB90:lI53|HF571CC50
F571CC50:lI46|HF571CCF8
F571CCF8:lI53|HF571CD80
F571CD80:lI47|HF571CE00
F571CE00:lI101|HF571CE70
F571CE70:lI98|HF571CEC8
F571CEC8:lI105|HF571CF08
F571CF08:lI110|N
F571D120:lHF571B240|HF571D138
F571B240:lI47|HF571B300
F571B300:lI117|HF571B3C8
F571B3C8:lI115|HF571B498
F571B498:lI114|HF571B570
F571B570:lI47|HF571B650
F571B650:lI108|HF571B738
F571B738:lI105|HF571B820
F571B820:lI98|HF571B908
F571B908:lI47|HF571B9F0
F571B9F0:lI101|HF571BAD8
F571BAD8:lI114|HF571BBC0
F571BBC0:lI108|HF571BCA8
F571BCA8:lI97|HF571BD90
F571BD90:lI110|HF571BE78
F571BE78:lI103|HF571BF60
F571BF60:lI47|HF571C048
F571C048:lI108|HF571C130
F571C130:lI105|HF571C218
F571C218:lI98|HF571C300
F571C300:lI47|HF571C3E8
F571C3E8:lI115|HF571C4D0
F571C4D0:lI97|HF571C5B0
F571C5B0:lI115|HF571C690
F571C690:lI108|HF571C770
F571C770:lI45|HF571C850
F571C850:lI50|HF571C930
F571C930:lI46|HF571CA08
F571CA08:lI49|HF571CAD0
F571CAD0:lI46|HF571CB98
F571CB98:lI53|HF571CC58
F571CC58:lI46|HF571CD00
F571CD00:lI52|HF571CD88
F571CD88:lI47|HF571CE08
F571CE08:lI101|HF571CE78
F571CE78:lI98|HF571CED0
F571CED0:lI105|HF571CF10
F571CF10:lI110|N
F571D138:lHF571B0D0|HF571D150
F571B0D0:lI47|HF571B178
F571B178:lI117|HF571B230
F571B230:lI115|HF571B2F0
F571B2F0:lI114|HF571B3B8
F571B3B8:lI47|HF571B488
F571B488:lI108|HF571B560
F571B560:lI105|HF571B640
F571B640:lI98|HF571B728
F571B728:lI47|HF571B810
F571B810:lI101|HF571B8F8
F571B8F8:lI114|HF571B9E0
F571B9E0:lI108|HF571BAC8
F571BAC8:lI97|HF571BBB0
F571BBB0:lI110|HF571BC98
F571BC98:lI103|HF571BD80
F571BD80:lI47|HF571BE68
F571BE68:lI108|HF571BF50
F571BF50:lI105|HF571C038
F571C038:lI98|HF571C120
F571C120:lI47|HF571C208
F571C208:lI120|HF571C2F0
F571C2F0:lI109|HF571C3D8
F571C3D8:lI101|HF571C4C0
F571C4C0:lI114|HF571C5A0
F571C5A0:lI108|HF571C680
F571C680:lI45|HF571C760
F571C760:lI49|HF571C840
F571C840:lI46|HF571C920
F571C920:lI49|HF571C9F8
F571C9F8:lI46|HF571CAC0
F571CAC0:lI49|HF571CB88
F571CB88:lI48|HF571CC48
F571CC48:lI47|H73F76A68
73F76A68:lI101|H73F76A70
73F76A70:lI98|H73F76A78
73F76A78:lI105|H73F76A80
73F76A80:lI110|N
F571D150:lHF571B0C8|HF571D168
F571B0C8:lI47|HF571B170
F571B170:lI117|HF571B228
F571B228:lI115|HF571B2E8
F571B2E8:lI114|HF571B3B0
F571B3B0:lI47|HF571B480
F571B480:lI108|HF571B558
F571B558:lI105|HF571B638
F571B638:lI98|HF571B720
F571B720:lI47|HF571B808
F571B808:lI101|HF571B8F0
F571B8F0:lI114|HF571B9D8
F571B9D8:lI108|HF571BAC0
F571BAC0:lI97|HF571BBA8
F571BBA8:lI110|HF571BC90
F571BC90:lI103|HF571BD78
F571BD78:lI47|HF571BE60
F571BE60:lI108|HF571BF48
F571BF48:lI105|HF571C030
F571C030:lI98|HF571C118
F571C118:lI47|HF571C200
F571C200:lI119|HF571C2E8
F571C2E8:lI101|HF571C3D0
F571C3D0:lI98|HF571C4B8
F571C4B8:lI116|HF571C598
F571C598:lI111|HF571C678
F571C678:lI111|HF571C758
F571C758:lI108|HF571C838
F571C838:lI45|HF571C918
F571C918:lI48|HF571C9F0
F571C9F0:lI46|HF571CAB8
F571CAB8:lI56|HF571CB80
F571CB80:lI46|HF571CC40
F571CC40:lI51|HF571CCF0
F571CCF0:lI46|HF571CD78
F571CD78:lI50|HF571CDF8
F571CDF8:lI47|H73F76A68
F571D168:lHF571B0C0|HF571D180
F571B0C0:lI47|HF571B168
F571B168:lI117|HF571B220
F571B220:lI115|HF571B2E0
F571B2E0:lI114|HF571B3A8
F571B3A8:lI47|HF571B478
F571B478:lI108|HF571B550
F571B550:lI105|HF571B630
F571B630:lI98|HF571B718
F571B718:lI47|HF571B800
F571B800:lI101|HF571B8E8
F571B8E8:lI114|HF571B9D0
F571B9D0:lI108|HF571BAB8
F571BAB8:lI97|HF571BBA0
F571BBA0:lI110|HF571BC88
F571BC88:lI103|HF571BD70
F571BD70:lI47|HF571BE58
F571BE58:lI108|HF571BF40
F571BF40:lI105|HF571C028
F571C028:lI98|HF571C110
F571C110:lI47|HF571C1F8
F571C1F8:lI116|HF571C2E0
F571C2E0:lI111|HF571C3C8
F571C3C8:lI111|HF571C4B0
F571C4B0:lI108|HF571C590
F571C590:lI115|HF571C670
F571C670:lI45|HF571C750
F571C750:lI50|HF571C830
F571C830:lI46|HF571C910
F571C910:lI54|HF571C9E8
F571C9E8:lI46|HF571CAB0
F571CAB0:lI50|HF571CB78
F571CB78:lI47|H73F76A68
F571D180:lHF571B0B8|HF571D198
F571B0B8:lI47|HF571B160
F571B160:lI117|HF571B218
F571B218:lI115|HF571B2D8
F571B2D8:lI114|HF571B3A0
F571B3A0:lI47|HF571B470
F571B470:lI108|HF571B548
F571B548:lI105|HF571B628
F571B628:lI98|HF571B710
F571B710:lI47|HF571B7F8
F571B7F8:lI101|HF571B8E0
F571B8E0:lI114|HF571B9C8
F571B9C8:lI108|HF571BAB0
F571BAB0:lI97|HF571BB98
F571BB98:lI110|HF571BC80
F571BC80:lI103|HF571BD68
F571BD68:lI47|HF571BE50
F571BE50:lI108|HF571BF38
F571BF38:lI105|HF571C020
F571C020:lI98|HF571C108
F571C108:lI47|HF571C1F0
F571C1F0:lI116|HF571C2D8
F571C2D8:lI101|HF571C3C0
F571C3C0:lI115|HF571C4A8
F571C4A8:lI116|HF571C588
F571C588:lI95|HF571C668
F571C668:lI115|HF571C748
F571C748:lI101|HF571C828
F571C828:lI114|HF571C908
F571C908:lI118|HF571C9E0
F571C9E0:lI101|HF571CAA8
F571CAA8:lI114|HF571CB70
F571CB70:lI45|HF571CC38
F571CC38:lI51|HF571CCE8
F571CCE8:lI46|HF571CD70
F571CD70:lI50|HF571CDF0
F571CDF0:lI46|HF571CE68
F571CE68:lI52|HF571CEC0
F571CEC0:lI47|H73F76A68
F571D198:lHF571B0B0|HF571D1B0
F571B0B0:lI47|HF571B158
F571B158:lI117|HF571B210
F571B210:lI115|HF571B2D0
F571B2D0:lI114|HF571B398
F571B398:lI47|HF571B468
F571B468:lI108|HF571B540
F571B540:lI105|HF571B620
F571B620:lI98|HF571B708
F571B708:lI47|HF571B7F0
F571B7F0:lI101|HF571B8D8
F571B8D8:lI114|HF571B9C0
F571B9C0:lI108|HF571BAA8
F571BAA8:lI97|HF571BB90
F571BB90:lI110|HF571BC78
F571BC78:lI103|HF571BD60
F571BD60:lI47|HF571BE48
F571BE48:lI108|HF571BF30
F571BF30:lI105|HF571C018
F571C018:lI98|HF571C100
F571C100:lI47|HF571C1E8
F571C1E8:lI115|HF571C2D0
F571C2D0:lI121|HF571C3B8
F571C3B8:lI110|HF571C4A0
F571C4A0:lI116|HF571C580
F571C580:lI97|HF571C660
F571C660:lI120|HF571C740
F571C740:lI95|HF571C820
F571C820:lI116|HF571C900
F571C900:lI111|HF571C9D8
F571C9D8:lI111|HF571CAA0
F571CAA0:lI108|HF571CB68
F571CB68:lI115|HF571CC30
F571CC30:lI45|HF571CCE0
F571CCE0:lI49|HF571CD68
F571CD68:lI46|HF571CDE8
F571CDE8:lI53|HF571CE60
F571CE60:lI46|HF571CEB8
F571CEB8:lI54|HF571CF00
F571CF00:lI47|H73F76A68
F571D1B0:lHF571B0A0|HF571D1C8
F571B0A0:lI47|HF571B148
F571B148:lI117|HF571B200
F571B200:lI115|HF571B2C0
F571B2C0:lI114|HF571B388
F571B388:lI47|HF571B458
F571B458:lI108|HF571B530
F571B530:lI105|HF571B610
F571B610:lI98|HF571B6F8
F571B6F8:lI47|HF571B7E0
F571B7E0:lI101|HF571B8C8
F571B8C8:lI114|HF571B9B0
F571B9B0:lI108|HF571BA98
F571BA98:lI97|HF571BB80
F571BB80:lI110|HF571BC68
F571BC68:lI103|HF571BD50
F571BD50:lI47|HF571BE38
F571BE38:lI108|HF571BF20
F571BF20:lI105|HF571C008
F571C008:lI98|HF571C0F0
F571C0F0:lI47|HF571C1D8
F571C1D8:lI115|HF571C2C0
F571C2C0:lI115|HF571C3A8
F571C3A8:lI108|HF571C490
F571C490:lI45|HF571C570
F571C570:lI51|HF571C650
F571C650:lI46|HF571C730
F571C730:lI49|HF571C810
F571C810:lI48|HF571C8F0
F571C8F0:lI47|H73F76A68
F571D1C8:lHF571B098|HF571D1E0
F571B098:lI47|HF571B140
F571B140:lI117|HF571B1F8
F571B1F8:lI115|HF571B2B8
F571B2B8:lI114|HF571B380
F571B380:lI47|HF571B450
F571B450:lI108|HF571B528
F571B528:lI105|HF571B608
F571B608:lI98|HF571B6F0
F571B6F0:lI47|HF571B7D8
F571B7D8:lI101|HF571B8C0
F571B8C0:lI114|HF571B9A8
F571B9A8:lI108|HF571BA90
F571BA90:lI97|HF571BB78
F571BB78:lI110|HF571BC60
F571BC60:lI103|HF571BD48
F571BD48:lI47|HF571BE30
F571BE30:lI108|HF571BF18
F571BF18:lI105|HF571C000
F571C000:lI98|HF571C0E8
F571C0E8:lI47|HF571C1D0
F571C1D0:lI115|HF571C2B8
F571C2B8:lI115|HF571C3A0
F571C3A0:lI104|HF571C488
F571C488:lI45|HF571C568
F571C568:lI49|HF571C648
F571C648:lI46|HF571C728
F571C728:lI48|HF571C808
F571C808:lI46|HF571C8E8
F571C8E8:lI50|HF571C9C8
F571C9C8:lI47|H73F76A68
F571D1E0:lHF571B090|HF571D1F8
F571B090:lI47|HF571B138
F571B138:lI117|HF571B1F0
F571B1F0:lI115|HF571B2B0
F571B2B0:lI114|HF571B378
F571B378:lI47|HF571B448
F571B448:lI108|HF571B520
F571B520:lI105|HF571B600
F571B600:lI98|HF571B6E8
F571B6E8:lI47|HF571B7D0
F571B7D0:lI101|HF571B8B8
F571B8B8:lI114|HF571B9A0
F571B9A0:lI108|HF571BA88
F571BA88:lI97|HF571BB70
F571BB70:lI110|HF571BC58
F571BC58:lI103|HF571BD40
F571BD40:lI47|HF571BE28
F571BE28:lI108|HF571BF10
F571BF10:lI105|HF571BFF8
F571BFF8:lI98|HF571C0E0
F571C0E0:lI47|HF571C1C8
F571C1C8:lI115|HF571C2B0
F571C2B0:lI110|HF571C398
F571C398:lI109|HF571C480
F571C480:lI112|HF571C560
F571C560:lI45|HF571C640
F571C640:lI52|HF571C720
F571C720:lI46|HF571C800
F571C800:lI49|HF571C8E0
F571C8E0:lI50|HF571C9C0
F571C9C0:lI47|H73F76A68
F571D1F8:lHF571B080|HF571D210
F571B080:lI47|HF571B128
F571B128:lI117|HF571B1E0
F571B1E0:lI115|HF571B2A0
F571B2A0:lI114|HF571B368
F571B368:lI47|HF571B438
F571B438:lI108|HF571B510
F571B510:lI105|HF571B5F0
F571B5F0:lI98|HF571B6D8
F571B6D8:lI47|HF571B7C0
F571B7C0:lI101|HF571B8A8
F571B8A8:lI114|HF571B990
F571B990:lI108|HF571BA78
F571BA78:lI97|HF571BB60
F571BB60:lI110|HF571BC48
F571BC48:lI103|HF571BD30
F571BD30:lI47|HF571BE18
F571BE18:lI108|HF571BF00
F571BF00:lI105|HF571BFE8
F571BFE8:lI98|HF571C0D0
F571C0D0:lI47|HF571C1B8
F571C1B8:lI114|HF571C2A0
F571C2A0:lI117|HF571C388
F571C388:lI110|HF571C470
F571C470:lI116|HF571C550
F571C550:lI105|HF571C630
F571C630:lI109|HF571C710
F571C710:lI101|HF571C7F0
F571C7F0:lI95|HF571C8D0
F571C8D0:lI116|HF571C9B0
F571C9B0:lI111|HF571CA88
F571CA88:lI111|HF571CB50
F571CB50:lI108|HF571CC18
F571CC18:lI115|HF571CCD0
F571CCD0:lI45|HF571CD60
F571CD60:lI49|HF571CDE0
F571CDE0:lI46|HF571CE58
F571CE58:lI55|HF571CEB0
F571CEB0:lI46|HF571CEF8
F571CEF8:lI51|HF571CF28
F571CF28:lI47|H73F76A68
F571D210:lHF571B078|HF571D228
F571B078:lI47|HF571B120
F571B120:lI117|HF571B1D8
F571B1D8:lI115|HF571B298
F571B298:lI114|HF571B360
F571B360:lI47|HF571B430
F571B430:lI108|HF571B508
F571B508:lI105|HF571B5E8
F571B5E8:lI98|HF571B6D0
F571B6D0:lI47|HF571B7B8
F571B7B8:lI101|HF571B8A0
F571B8A0:lI114|HF571B988
F571B988:lI108|HF571BA70
F571BA70:lI97|HF571BB58
F571BB58:lI110|HF571BC40
F571BC40:lI103|HF571BD28
F571BD28:lI47|HF571BE10
F571BE10:lI108|HF571BEF8
F571BEF8:lI105|HF571BFE0
F571BFE0:lI98|HF571C0C8
F571C0C8:lI47|HF571C1B0
F571C1B0:lI112|HF571C298
F571C298:lI117|HF571C380
F571C380:lI98|HF571C468
F571C468:lI108|HF571C548
F571C548:lI105|HF571C628
F571C628:lI99|HF571C708
F571C708:lI95|HF571C7E8
F571C7E8:lI107|HF571C8C8
F571C8C8:lI101|HF571C9A8
F571C9A8:lI121|HF571CA80
F571CA80:lI45|HF571CB48
F571CB48:lI48|HF571CC10
F571CC10:lI46|HF571CCC8
F571CCC8:lI49|HF571CD58
F571CD58:lI47|H73F76A68
F571D228:lHF571B070|HF571D240
F571B070:lI47|HF571B118
F571B118:lI117|HF571B1D0
F571B1D0:lI115|HF571B290
F571B290:lI114|HF571B358
F571B358:lI47|HF571B428
F571B428:lI108|HF571B500
F571B500:lI105|HF571B5E0
F571B5E0:lI98|HF571B6C8
F571B6C8:lI47|HF571B7B0
F571B7B0:lI101|HF571B898
F571B898:lI114|HF571B980
F571B980:lI108|HF571BA68
F571BA68:lI97|HF571BB50
F571BB50:lI110|HF571BC38
F571BC38:lI103|HF571BD20
F571BD20:lI47|HF571BE08
F571BE08:lI108|HF571BEF0
F571BEF0:lI105|HF571BFD8
F571BFD8:lI98|HF571C0C0
F571C0C0:lI47|HF571C1A8
F571C1A8:lI112|HF571C290
F571C290:lI101|HF571C378
F571C378:lI114|HF571C460
F571C460:lI99|HF571C540
F571C540:lI101|HF571C620
F571C620:lI112|HF571C700
F571C700:lI116|HF571C7E0
F571C7E0:lI45|HF571C8C0
F571C8C0:lI48|HF571C9A0
F571C9A0:lI46|HF571CA78
F571CA78:lI55|HF571CB40
F571CB40:lI46|HF571CC08
F571CC08:lI51|HF571CCC0
F571CCC0:lI47|H73F76A68
F571D240:lHF571B068|HF571D258
F571B068:lI47|HF571B110
F571B110:lI117|HF571B1C8
F571B1C8:lI115|HF571B288
F571B288:lI114|HF571B350
F571B350:lI47|HF571B420
F571B420:lI108|HF571B4F8
F571B4F8:lI105|HF571B5D8
F571B5D8:lI98|HF571B6C0
F571B6C0:lI47|HF571B7A8
F571B7A8:lI101|HF571B890
F571B890:lI114|HF571B978
F571B978:lI108|HF571BA60
F571BA60:lI97|HF571BB48
F571BB48:lI110|HF571BC30
F571BC30:lI103|HF571BD18
F571BD18:lI47|HF571BE00
F571BE00:lI108|HF571BEE8
F571BEE8:lI105|HF571BFD0
F571BFD0:lI98|HF571C0B8
F571C0B8:lI47|HF571C1A0
F571C1A0:lI112|HF571C288
F571C288:lI97|HF571C370
F571C370:lI114|HF571C458
F571C458:lI115|HF571C538
F571C538:lI101|HF571C618
F571C618:lI116|HF571C6F8
F571C6F8:lI111|HF571C7D8
F571C7D8:lI111|HF571C8B8
F571C8B8:lI108|HF571C998
F571C998:lI115|HF571CA70
F571CA70:lI45|HF571CB38
F571CB38:lI49|HF571CC00
F571CC00:lI46|HF571CCB8
F571CCB8:lI52|HF571CD50
F571CD50:lI46|HF571CDD8
F571CDD8:lI53|HF571CE50
F571CE50:lI47|H73F76A68
F571D258:lHF571B060|HF571D270
F571B060:lI47|HF571B108
F571B108:lI117|HF571B1C0
F571B1C0:lI115|HF571B280
F571B280:lI114|HF571B348
F571B348:lI47|HF571B418
F571B418:lI108|HF571B4F0
F571B4F0:lI105|HF571B5D0
F571B5D0:lI98|HF571B6B8
F571B6B8:lI47|HF571B7A0
F571B7A0:lI101|HF571B888
F571B888:lI114|HF571B970
F571B970:lI108|HF571BA58
F571BA58:lI97|HF571BB40
F571BB40:lI110|HF571BC28
F571BC28:lI103|HF571BD10
F571BD10:lI47|HF571BDF8
F571BDF8:lI108|HF571BEE0
F571BEE0:lI105|HF571BFC8
F571BFC8:lI98|HF571C0B0
F571C0B0:lI47|HF571C198
F571C198:lI111|HF571C280
F571C280:lI116|HF571C368
F571C368:lI112|HF571C450
F571C450:lI95|HF571C530
F571C530:lI109|HF571C610
F571C610:lI105|HF571C6F0
F571C6F0:lI98|HF571C7D0
F571C7D0:lI115|HF571C8B0
F571C8B0:lI45|HF571C990
F571C990:lI49|HF571CA68
F571CA68:lI46|HF571CB30
F571CB30:lI48|HF571CBF8
F571CBF8:lI46|HF571CCB0
F571CCB0:lI52|HF571CD48
F571CD48:lI46|HF571CDD0
F571CDD0:lI49|HF571CE48
F571CE48:lI47|H73F76A68
F571D270:lHF571B058|HF571D288
F571B058:lI47|HF571B100
F571B100:lI117|HF571B1B8
F571B1B8:lI115|HF571B278
F571B278:lI114|HF571B340
F571B340:lI47|HF571B410
F571B410:lI108|HF571B4E8
F571B4E8:lI105|HF571B5C8
F571B5C8:lI98|HF571B6B0
F571B6B0:lI47|HF571B798
F571B798:lI101|HF571B880
F571B880:lI114|HF571B968
F571B968:lI108|HF571BA50
F571BA50:lI97|HF571BB38
F571BB38:lI110|HF571BC20
F571BC20:lI103|HF571BD08
F571BD08:lI47|HF571BDF0
F571BDF0:lI108|HF571BED8
F571BED8:lI105|HF571BFC0
F571BFC0:lI98|HF571C0A8
F571C0A8:lI47|HF571C190
F571C190:lI111|HF571C278
F571C278:lI115|HF571C360
F571C360:lI95|HF571C448
F571C448:lI109|HF571C528
F571C528:lI111|HF571C608
F571C608:lI110|HF571C6E8
F571C6E8:lI45|HF571C7C8
F571C7C8:lI50|HF571C8A8
F571C8A8:lI46|HF571C988
F571C988:lI49|HF571CA60
F571CA60:lI46|HF571CB28
F571CB28:lI56|HF571CBF0
F571CBF0:lI47|H73F76A68
F571D288:lHF571B0F0|HF571D2A0
F571B0F0:lI47|HF571B1A0
F571B1A0:lI117|HF571B258
F571B258:lI115|HF571B318
F571B318:lI114|HF571B3E0
F571B3E0:lI47|HF571B4B0
F571B4B0:lI108|HF571B588
F571B588:lI105|HF571B668
F571B668:lI98|HF571B750
F571B750:lI47|HF571B838
F571B838:lI101|HF571B920
F571B920:lI114|HF571BA08
F571BA08:lI108|HF571BAF0
F571BAF0:lI97|HF571BBD8
F571BBD8:lI110|HF571BCC0
F571BCC0:lI103|HF571BDA8
F571BDA8:lI47|HF571BE90
F571BE90:lI108|HF571BF78
F571BF78:lI105|HF571C060
F571C060:lI98|HF571C148
F571C148:lI47|HF571C230
F571C230:lI111|HF571C318
F571C318:lI114|HF571C400
F571C400:lI98|HF571C4E8
F571C4E8:lI101|HF571C5C8
F571C5C8:lI114|HF571C6A8
F571C6A8:lI45|HF571C788
F571C788:lI51|HF571C868
F571C868:lI46|HF571C948
F571C948:lI54|HF571CA20
F571CA20:lI46|HF571CAE8
F571CAE8:lI49|HF571CBB0
F571CBB0:lI48|HF571CC70
F571CC70:lI47|H73F76A68
F571D2A0:lHF571B1A8|HF571D2B8
F571B1A8:lI47|HF571B260
F571B260:lI117|HF571B320
F571B320:lI115|HF571B3E8
F571B3E8:lI114|HF571B4B8
F571B4B8:lI47|HF571B590
F571B590:lI108|HF571B670
F571B670:lI105|HF571B758
F571B758:lI98|HF571B840
F571B840:lI47|HF571B928
F571B928:lI101|HF571BA10
F571BA10:lI114|HF571BAF8
F571BAF8:lI108|HF571BBE0
F571BBE0:lI97|HF571BCC8
F571BCC8:lI110|HF571BDB0
F571BDB0:lI103|HF571BE98
F571BE98:lI47|HF571BF80
F571BF80:lI108|HF571C068
F571C068:lI105|HF571C150
F571C150:lI98|HF571C238
F571C238:lI47|HF571C320
F571C320:lI111|HF571C408
F571C408:lI100|HF571C4F0
F571C4F0:lI98|HF571C5D0
F571C5D0:lI99|HF571C6B0
F571C6B0:lI45|HF571C790
F571C790:lI50|HF571C870
F571C870:lI46|HF571C950
F571C950:lI49|HF571CA28
F571CA28:lI48|HF571CAF0
F571CAF0:lI46|HF571CBB8
F571CBB8:lI51|HF571CC78
F571CC78:lI47|H73F76A68
F571D2B8:lHF571B268|HF571D2D0
F571B268:lI47|HF571B328
F571B328:lI117|HF571B3F0
F571B3F0:lI115|HF571B4C0
F571B4C0:lI114|HF571B598
F571B598:lI47|HF571B678
F571B678:lI108|HF571B760
F571B760:lI105|HF571B848
F571B848:lI98|HF571B930
F571B930:lI47|HF571BA18
F571BA18:lI101|HF571BB00
F571BB00:lI114|HF571BBE8
F571BBE8:lI108|HF571BCD0
F571BCD0:lI97|HF571BDB8
F571BDB8:lI110|HF571BEA0
F571BEA0:lI103|HF571BF88
F571BF88:lI47|HF571C070
F571C070:lI108|HF571C158
F571C158:lI105|HF571C240
F571C240:lI98|HF571C328
F571C328:lI47|HF571C410
F571C410:lI109|HF571C4F8
F571C4F8:lI110|HF571C5D8
F571C5D8:lI101|HF571C6B8
F571C6B8:lI115|HF571C798
F571C798:lI105|HF571C878
F571C878:lI97|HF571C958
F571C958:lI45|HF571CA30
F571CA30:lI52|HF571CAF8
F571CAF8:lI46|HF571CBC0
F571CBC0:lI52|HF571CC80
F571CC80:lI46|HF571CD18
F571CD18:lI55|HF571CDA0
F571CDA0:lI47|H73F76A68
F571D2D0:lHF571B330|HF571D2E8
F571B330:lI47|HF571B3F8
F571B3F8:lI117|HF571B4C8
F571B4C8:lI115|HF571B5A0
F571B5A0:lI114|HF571B680
F571B680:lI47|HF571B768
F571B768:lI108|HF571B850
F571B850:lI105|HF571B938
F571B938:lI98|HF571BA20
F571BA20:lI47|HF571BB08
F571BB08:lI101|HF571BBF0
F571BBF0:lI114|HF571BCD8
F571BCD8:lI108|HF571BDC0
F571BDC0:lI97|HF571BEA8
F571BEA8:lI110|HF571BF90
F571BF90:lI103|HF571C078
F571C078:lI47|HF571C160
F571C160:lI108|HF571C248
F571C248:lI105|HF571C330
F571C330:lI98|HF571C418
F571C418:lI47|HF571C500
F571C500:lI109|HF571C5E0
F571C5E0:lI101|HF571C6C0
F571C6C0:lI103|HF571C7A0
F571C7A0:lI97|HF571C880
F571C880:lI99|HF571C960
F571C960:lI111|HF571CA38
F571CA38:lI45|HF571CB00
F571CB00:lI51|HF571CBC8
F571CBC8:lI46|HF571CC88
F571CC88:lI57|HF571CD20
F571CD20:lI46|HF571CDA8
F571CDA8:lI49|HF571CE20
F571CE20:lI46|HF571CE90
F571CE90:lI49|HF571CEE0
F571CEE0:lI47|H73F76A68
F571D2E8:lHF571B4D8|HF571D300
F571B4D8:lI47|HF571B5B0
F571B5B0:lI117|HF571B690
F571B690:lI115|HF571B778
F571B778:lI114|HF571B860
F571B860:lI47|HF571B948
F571B948:lI108|HF571BA30
F571BA30:lI105|HF571BB18
F571BB18:lI98|HF571BC00
F571BC00:lI47|HF571BCE8
F571BCE8:lI101|HF571BDD0
F571BDD0:lI114|HF571BEB8
F571BEB8:lI108|HF571BFA0
F571BFA0:lI97|HF571C088
F571C088:lI110|HF571C170
F571C170:lI103|HF571C258
F571C258:lI47|HF571C340
F571C340:lI108|HF571C428
F571C428:lI105|HF571C510
F571C510:lI98|HF571C5F0
F571C5F0:lI47|HF571C6D0
F571C6D0:lI105|HF571C7B0
F571C7B0:lI110|HF571C890
F571C890:lI118|HF571C970
F571C970:lI105|HF571CA48
F571CA48:lI115|HF571CB10
F571CB10:lI111|HF571CBD8
F571CBD8:lI45|HF571CC98
F571CC98:lI48|HF571CD30
F571CD30:lI46|HF571CDB8
F571CDB8:lI54|HF571CE30
F571CE30:lI47|H73F76A68
F571D300:lHF571B5B8|HF571D318
F571B5B8:lI47|HF571B698
F571B698:lI117|HF571B780
F571B780:lI115|HF571B868
F571B868:lI114|HF571B950
F571B950:lI47|HF571BA38
F571BA38:lI108|HF571BB20
F571BB20:lI105|HF571BC08
F571BC08:lI98|HF571BCF0
F571BCF0:lI47|HF571BDD8
F571BDD8:lI101|HF571BEC0
F571BEC0:lI114|HF571BFA8
F571BFA8:lI108|HF571C090
F571C090:lI97|HF571C178
F571C178:lI110|HF571C260
F571C260:lI103|HF571C348
F571C348:lI47|HF571C430
F571C430:lI108|HF571C518
F571C518:lI105|HF571C5F8
F571C5F8:lI98|HF571C6D8
F571C6D8:lI47|HF571C7B8
F571C7B8:lI105|HF571C898
F571C898:lI110|HF571C978
F571C978:lI101|HF571CA50
F571CA50:lI116|HF571CB18
F571CB18:lI115|HF571CBE0
F571CBE0:lI45|HF571CCA0
F571CCA0:lI53|HF571CD38
F571CD38:lI46|HF571CDC0
F571CDC0:lI48|HF571CE38
F571CE38:lI46|HF571CEA0
F571CEA0:lI49|HF571CEF0
F571CEF0:lI50|HF571CF20
F571CF20:lI47|H73F76A68
F571D318:lHF571B6A0|HF571D330
F571B6A0:lI47|HF571B788
F571B788:lI117|HF571B870
F571B870:lI115|HF571B958
F571B958:lI114|HF571BA40
F571BA40:lI47|HF571BB28
F571BB28:lI108|HF571BC10
F571BC10:lI105|HF571BCF8
F571BCF8:lI98|HF571BDE0
F571BDE0:lI47|HF571BEC8
F571BEC8:lI101|HF571BFB0
F571BFB0:lI114|HF571C098
F571C098:lI108|HF571C180
F571C180:lI97|HF571C268
F571C268:lI110|HF571C350
F571C350:lI103|HF571C438
F571C438:lI47|HF571C520
F571C520:lI108|HF571C600
F571C600:lI105|HF571C6E0
F571C6E0:lI98|HF571C7C0
F571C7C0:lI47|HF571C8A0
F571C8A0:lI105|HF571C980
F571C980:lI99|HF571CA58
F571CA58:lI45|HF571CB20
F571CB20:lI52|HF571CBE8
F571CBE8:lI46|HF571CCA8
F571CCA8:lI50|HF571CD40
F571CD40:lI46|HF571CDC8
F571CDC8:lI49|HF571CE40
F571CE40:lI57|HF571CEA8
F571CEA8:lI47|H73F76A68
F571D330:lHF5719D90|HF571D348
F5719D90:lI47|HF5719DB0
F5719DB0:lI117|HF5719DD8
F5719DD8:lI115|HF5719E08
F5719E08:lI114|HF5719E40
F5719E40:lI47|HF5719E80
F5719E80:lI108|HF5719EC8
F5719EC8:lI105|HF5719F10
F5719F10:lI98|HF5719F60
F5719F60:lI47|HF5719FB8
F5719FB8:lI101|HF571A018
F571A018:lI114|HF571A080
F571A080:lI108|HF571A0F0
F571A0F0:lI97|HF571A168
F571A168:lI110|HF571A1E8
F571A1E8:lI103|HF571A268
F571A268:lI47|HF571A2E8
F571A2E8:lI108|HF571A368
F571A368:lI105|HF571A3E8
F571A3E8:lI98|HF571A468
F571A468:lI47|HF571A4E8
F571A4E8:lI104|HF571A568
F571A568:lI105|HF571A5E8
F571A5E8:lI112|HF571A660
F571A660:lI101|HF571A6D8
F571A6D8:lI45|HF571A750
F571A750:lI51|HF571A7C8
F571A7C8:lI46|HF571A840
F571A840:lI54|HF571A8B8
F571A8B8:lI46|HF571A930
F571A930:lI57|HF571A9A8
F571A9A8:lI47|H73F76A68
F571D348:lHF5719DB8|HF571D360
F5719DB8:lI47|HF5719DE0
F5719DE0:lI117|HF5719E10
F5719E10:lI115|HF5719E48
F5719E48:lI114|HF5719E88
F5719E88:lI47|HF5719ED0
F5719ED0:lI108|HF5719F18
F5719F18:lI105|HF5719F68
F5719F68:lI98|HF5719FC0
F5719FC0:lI47|HF571A020
F571A020:lI101|HF571A088
F571A088:lI114|HF571A0F8
F571A0F8:lI108|HF571A170
F571A170:lI97|HF571A1F0
F571A1F0:lI110|HF571A270
F571A270:lI103|HF571A2F0
F571A2F0:lI47|HF571A370
F571A370:lI108|HF571A3F0
F571A3F0:lI105|HF571A470
F571A470:lI98|HF571A4F0
F571A4F0:lI47|HF571A570
F571A570:lI101|HF571A5F0
F571A5F0:lI117|HF571A668
F571A668:lI110|HF571A6E0
F571A6E0:lI105|HF571A758
F571A758:lI116|HF571A7D0
F571A7D0:lI45|HF571A848
F571A848:lI50|HF571A8C0
F571A8C0:lI46|HF571A938
F571A938:lI48|HF571A9B0
F571A9B0:lI47|H73F76A68
F571D360:lHF5719DE8|HF571D378
F5719DE8:lI47|HF5719E18
F5719E18:lI117|HF5719E50
F5719E50:lI115|HF5719E90
F5719E90:lI114|HF5719ED8
F5719ED8:lI47|HF5719F20
F5719F20:lI108|HF5719F70
F5719F70:lI105|HF5719FC8
F5719FC8:lI98|HF571A028
F571A028:lI47|HF571A090
F571A090:lI101|HF571A100
F571A100:lI114|HF571A178
F571A178:lI108|HF571A1F8
F571A1F8:lI97|HF571A278
F571A278:lI110|HF571A2F8
F571A2F8:lI103|HF571A378
F571A378:lI47|HF571A3F8
F571A3F8:lI108|HF571A478
F571A478:lI105|HF571A4F8
F571A4F8:lI98|HF571A578
F571A578:lI47|HF5718C18
F5718C18:lI101|HF5718D60
F5718D60:lI114|HF5718EA8
F5718EA8:lI108|HF5718FF0
F5718FF0:lI95|HF5719138
F5719138:lI105|HF5719280
F5719280:lI110|HF57193C8
F57193C8:lI116|HF5719510
F5719510:lI101|HF5719658
F5719658:lI114|HF5719798
F5719798:lI102|HF57198B0
F57198B0:lI97|HF57199B8
F57199B8:lI99|HF5719AA0
F5719AA0:lI101|HF5719B50
F5719B50:lI45|HF5719BD8
F5719BD8:lI51|HF5719C50
F5719C50:lI46|HF5719CB8
F5719CB8:lI53|HF5719D00
F5719D00:lI46|HF5719D38
F5719D38:lI57|N
F571D378:lHF5719E20|HF571D390
F5719E20:lI47|HF5719E58
F5719E58:lI117|HF5719E98
F5719E98:lI115|HF5719EE0
F5719EE0:lI114|HF5719F28
F5719F28:lI47|HF5719F78
F5719F78:lI108|HF5719FD0
F5719FD0:lI105|HF571A030
F571A030:lI98|HF571A098
F571A098:lI47|HF571A108
F571A108:lI101|HF571A180
F571A180:lI114|HF571A200
F571A200:lI108|HF571A280
F571A280:lI97|HF571A300
F571A300:lI110|HF571A380
F571A380:lI103|HF571A400
F571A400:lI47|HF571A480
F571A480:lI108|HF571A500
F571A500:lI105|HF571A580
F571A580:lI98|HF571A5F8
F571A5F8:lI47|HF571A670
F571A670:lI101|HF571A6E8
F571A6E8:lI100|HF571A760
F571A760:lI111|HF571A7D8
F571A7D8:lI99|HF571A850
F571A850:lI45|HF571A8C8
F571A8C8:lI48|HF571A940
F571A940:lI46|HF571A9B8
F571A9B8:lI55|HF571AA20
F571AA20:lI46|HF571AA88
F571AA88:lI54|HF571AAF0
F571AAF0:lI46|HF571AB58
F571AB58:lI50|HF571ABC0
F571ABC0:lI47|H73F76A68
F571D390:lHF5719E60|HF571D3A8
F5719E60:lI47|HF5719EA0
F5719EA0:lI117|HF5719EE8
F5719EE8:lI115|HF5719F30
F5719F30:lI114|HF5719F80
F5719F80:lI47|HF5719FD8
F5719FD8:lI108|HF571A038
F571A038:lI105|HF571A0A0
F571A0A0:lI98|HF571A110
F571A110:lI47|HF571A188
F571A188:lI101|HF571A208
F571A208:lI114|HF571A288
F571A288:lI108|HF571A308
F571A308:lI97|HF571A388
F571A388:lI110|HF571A408
F571A408:lI103|HF571A488
F571A488:lI47|HF571A508
F571A508:lI108|HF571A588
F571A588:lI105|HF571A600
F571A600:lI98|HF571A678
F571A678:lI47|HF571A6F0
F571A6F0:lI100|HF571A768
F571A768:lI111|HF571A7E0
F571A7E0:lI99|HF571A858
F571A858:lI98|HF571A8D0
F571A8D0:lI117|HF571A948
F571A948:lI105|HF571A9C0
F571A9C0:lI108|HF571AA28
F571AA28:lI100|HF571AA90
F571AA90:lI101|HF571AAF8
F571AAF8:lI114|HF571AB60
F571AB60:lI45|HF571ABC8
F571ABC8:lI48|HF571AC28
F571AC28:lI46|HF571AC88
F571AC88:lI57|HF571ACE8
F571ACE8:lI46|HF571AD40
F571AD40:lI56|HF571AD98
F571AD98:lI46|HF571ADF0
F571ADF0:lI52|HF571AE40
F571AE40:lI47|H73F76A68
F571D3A8:lHF5719EA8|HF571D3C0
F5719EA8:lI47|HF5719EF0
F5719EF0:lI117|HF5719F38
F5719F38:lI115|HF5719F88
F5719F88:lI114|HF5719FE0
F5719FE0:lI47|HF571A040
F571A040:lI108|HF571A0A8
F571A0A8:lI105|HF571A118
F571A118:lI98|HF571A190
F571A190:lI47|HF571A210
F571A210:lI101|HF571A290
F571A290:lI114|HF571A310
F571A310:lI108|HF571A390
F571A390:lI97|HF571A410
F571A410:lI110|HF571A490
F571A490:lI103|HF571A510
F571A510:lI47|HF571A590
F571A590:lI108|HF571A608
F571A608:lI105|HF571A680
F571A680:lI98|HF571A6F8
F571A6F8:lI47|HF571A770
F571A770:lI99|HF571A7E8
F571A7E8:lI114|HF571A860
F571A860:lI121|HF571A8D8
F571A8D8:lI112|HF571A950
F571A950:lI116|HF571A9C8
F571A9C8:lI111|HF571AA30
F571AA30:lI45|HF571AA98
F571AA98:lI49|HF571AB00
F571AB00:lI46|HF571AB68
F571AB68:lI53|HF571ABD0
F571ABD0:lI46|HF571AC30
F571AC30:lI51|HF571AC90
F571AC90:lI47|H73F76A68
F571D3C0:lHF5719EF8|HF571D3D8
F5719EF8:lI47|HF5719F40
F5719F40:lI117|HF5719F90
F5719F90:lI115|HF5719FE8
F5719FE8:lI114|HF571A048
F571A048:lI47|HF571A0B0
F571A0B0:lI108|HF571A120
F571A120:lI105|HF571A198
F571A198:lI98|HF571A218
F571A218:lI47|HF571A298
F571A298:lI101|HF571A318
F571A318:lI114|HF571A398
F571A398:lI108|HF571A418
F571A418:lI97|HF571A498
F571A498:lI110|HF571A518
F571A518:lI103|HF571A598
F571A598:lI47|HF571A610
F571A610:lI108|HF571A688
F571A688:lI105|HF571A700
F571A700:lI98|HF571A778
F571A778:lI47|HF571A7F0
F571A7F0:lI99|HF571A868
F571A868:lI111|HF571A8E0
F571A8E0:lI115|HF571A958
F571A958:lI84|HF571A9D0
F571A9D0:lI114|HF571AA38
F571AA38:lI97|HF571AAA0
F571AAA0:lI110|HF571AB08
F571AB08:lI115|HF571AB70
F571AB70:lI97|HF571ABD8
F571ABD8:lI99|HF571AC38
F571AC38:lI116|HF571AC98
F571AC98:lI105|HF571ACF0
F571ACF0:lI111|HF571AD48
F571AD48:lI110|HF571ADA0
F571ADA0:lI115|HF571ADF8
F571ADF8:lI45|HF571AE48
F571AE48:lI49|HF571AE90
F571AE90:lI46|HF571AED8
F571AED8:lI50|HF571AF20
F571AF20:lI46|HF571AF68
F571AF68:lI53|HF571AFA0
F571AFA0:lI47|H73F76A68
F571D3D8:lHF5719F48|HF571D3F0
F5719F48:lI47|HF5719F98
F5719F98:lI117|HF5719FF0
F5719FF0:lI115|HF571A050
F571A050:lI114|HF571A0B8
F571A0B8:lI47|HF571A128
F571A128:lI108|HF571A1A0
F571A1A0:lI105|HF571A220
F571A220:lI98|HF571A2A0
F571A2A0:lI47|HF571A320
F571A320:lI101|HF571A3A0
F571A3A0:lI114|HF571A420
F571A420:lI108|HF571A4A0
F571A4A0:lI97|HF571A520
F571A520:lI110|HF571A5A0
F571A5A0:lI103|HF571A618
F571A618:lI47|HF571A690
F571A690:lI108|HF571A708
F571A708:lI105|HF571A780
F571A780:lI98|HF571A7F8
F571A7F8:lI47|HF571A870
F571A870:lI99|HF571A8E8
F571A8E8:lI111|HF571A960
F571A960:lI115|HF571A9D8
F571A9D8:lI84|HF571AA40
F571AA40:lI105|HF571AAA8
F571AAA8:lI109|HF571AB10
F571AB10:lI101|HF571AB78
F571AB78:lI45|HF571ABE0
F571ABE0:lI49|HF571AC40
F571AC40:lI46|HF571ACA0
F571ACA0:lI49|HF571ACF8
F571ACF8:lI46|HF571AD50
F571AD50:lI52|HF571ADA8
F571ADA8:lI47|H73F76A68
F571D3F0:lHF5719FA0|HF571D408
F5719FA0:lI47|HF5719FF8
F5719FF8:lI117|HF571A058
F571A058:lI115|HF571A0C0
F571A0C0:lI114|HF571A130
F571A130:lI47|HF571A1A8
F571A1A8:lI108|HF571A228
F571A228:lI105|HF571A2A8
F571A2A8:lI98|HF571A328
F571A328:lI47|HF571A3A8
F571A3A8:lI101|HF571A428
F571A428:lI114|HF571A4A8
F571A4A8:lI108|HF571A528
F571A528:lI97|HF571A5A8
F571A5A8:lI110|HF571A620
F571A620:lI103|HF571A698
F571A698:lI47|HF571A710
F571A710:lI108|HF571A788
F571A788:lI105|HF571A800
F571A800:lI98|HF571A878
F571A878:lI47|HF571A8F0
F571A8F0:lI99|HF571A968
F571A968:lI111|HF571A9E0
F571A9E0:lI115|HF571AA48
F571AA48:lI80|HF571AAB0
F571AAB0:lI114|HF571AB18
F571AB18:lI111|HF571AB80
F571AB80:lI112|HF571ABE8
F571ABE8:lI101|HF571AC48
F571AC48:lI114|HF571ACA8
F571ACA8:lI116|HF571AD00
F571AD00:lI121|HF571AD58
F571AD58:lI45|HF571ADB0
F571ADB0:lI49|HF571AE00
F571AE00:lI46|HF571AE50
F571AE50:lI49|HF571AE98
F571AE98:lI46|HF571AEE0
F571AEE0:lI55|HF571AF28
F571AF28:lI47|H73F76A68
F571D408:lHF571A000|HF571D420
F571A000:lI47|HF571A060
F571A060:lI117|HF571A0C8
F571A0C8:lI115|HF571A138
F571A138:lI114|HF571A1B0
F571A1B0:lI47|HF571A230
F571A230:lI108|HF571A2B0
F571A2B0:lI105|HF571A330
F571A330:lI98|HF571A3B0
F571A3B0:lI47|HF571A430
F571A430:lI101|HF571A4B0
F571A4B0:lI114|HF571A530
F571A530:lI108|HF571A5B0
F571A5B0:lI97|HF571A628
F571A628:lI110|HF571A6A0
F571A6A0:lI103|HF571A718
F571A718:lI47|HF571A790
F571A790:lI108|HF571A808
F571A808:lI105|HF571A880
F571A880:lI98|HF571A8F8
F571A8F8:lI47|HF571A970
F571A970:lI99|HF571A9E8
F571A9E8:lI111|HF571AA50
F571AA50:lI115|HF571AAB8
F571AAB8:lI78|HF571AB20
F571AB20:lI111|HF571AB88
F571AB88:lI116|HF571ABF0
F571ABF0:lI105|HF571AC50
F571AC50:lI102|HF571ACB0
F571ACB0:lI105|HF571AD08
F571AD08:lI99|HF571AD60
F571AD60:lI97|HF571ADB8
F571ADB8:lI116|HF571AE08
F571AE08:lI105|HF571AE58
F571AE58:lI111|HF571AEA0
F571AEA0:lI110|HF571AEE8
F571AEE8:lI45|HF571AF30
F571AF30:lI49|HF571AF70
F571AF70:lI46|HF571AFA8
F571AFA8:lI49|HF571AFD0
F571AFD0:lI46|HF571AFF0
F571AFF0:lI57|HF571B010
F571B010:lI47|H73F76A68
F571D420:lHF571A068|HF571D438
F571A068:lI47|HF571A0D0
F571A0D0:lI117|HF571A140
F571A140:lI115|HF571A1B8
F571A1B8:lI114|HF571A238
F571A238:lI47|HF571A2B8
F571A2B8:lI108|HF571A338
F571A338:lI105|HF571A3B8
F571A3B8:lI98|HF571A438
F571A438:lI47|HF571A4B8
F571A4B8:lI101|HF571A538
F571A538:lI114|HF571A5B8
F571A5B8:lI108|HF571A630
F571A630:lI97|HF571A6A8
F571A6A8:lI110|HF571A720
F571A720:lI103|HF571A798
F571A798:lI47|HF571A810
F571A810:lI108|HF571A888
F571A888:lI105|HF571A900
F571A900:lI98|HF571A978
F571A978:lI47|HF571A9F0
F571A9F0:lI99|HF571AA58
F571AA58:lI111|HF571AAC0
F571AAC0:lI115|HF571AB28
F571AB28:lI70|HF571AB90
F571AB90:lI105|HF571ABF8
F571ABF8:lI108|HF571AC58
F571AC58:lI101|HF571ACB8
F571ACB8:lI84|HF571AD10
F571AD10:lI114|HF571AD68
F571AD68:lI97|HF571ADC0
F571ADC0:lI110|HF571AE10
F571AE10:lI115|HF571AE60
F571AE60:lI102|HF571AEA8
F571AEA8:lI101|HF571AEF0
F571AEF0:lI114|HF571AF38
F571AF38:lI45|HF571AF78
F571AF78:lI49|HF571AFB0
F571AFB0:lI46|HF571AFD8
F571AFD8:lI49|HF571AFF8
F571AFF8:lI46|HF571B018
F571B018:lI54|HF571B030
F571B030:lI47|H73F76A68
F571D438:lHF571A0D8|HF571D450
F571A0D8:lI47|HF571A148
F571A148:lI117|HF571A1C0
F571A1C0:lI115|HF571A240
F571A240:lI114|HF571A2C0
F571A2C0:lI47|HF571A340
F571A340:lI108|HF571A3C0
F571A3C0:lI105|HF571A440
F571A440:lI98|HF571A4C0
F571A4C0:lI47|HF571A540
F571A540:lI101|HF571A5C0
F571A5C0:lI114|HF571A638
F571A638:lI108|HF571A6B0
F571A6B0:lI97|HF571A728
F571A728:lI110|HF571A7A0
F571A7A0:lI103|HF571A818
F571A818:lI47|HF571A890
F571A890:lI108|HF571A908
F571A908:lI105|HF571A980
F571A980:lI98|HF571A9F8
F571A9F8:lI47|HF571AA60
F571AA60:lI99|HF571AAC8
F571AAC8:lI111|HF571AB30
F571AB30:lI115|HF571AB98
F571AB98:lI69|HF571AC00
F571AC00:lI118|HF571AC60
F571AC60:lI101|HF571ACC0
F571ACC0:lI110|HF571AD18
F571AD18:lI116|HF571AD70
F571AD70:lI68|HF571ADC8
F571ADC8:lI111|HF571AE18
F571AE18:lI109|HF571AE68
F571AE68:lI97|HF571AEB0
F571AEB0:lI105|HF571AEF8
F571AEF8:lI110|HF571AF40
F571AF40:lI45|HF571AF80
F571AF80:lI49|HF571AFB8
F571AFB8:lI46|HF571AFE0
F571AFE0:lI49|HF571B000
F571B000:lI46|HF571B020
F571B020:lI52|HF571B038
F571B038:lI47|H73F76A68
F571D450:lHF571A150|HF571D460
F571A150:lI47|HF571A1C8
F571A1C8:lI117|HF571A248
F571A248:lI115|HF571A2C8
F571A2C8:lI114|HF571A348
F571A348:lI47|HF571A3C8
F571A3C8:lI108|HF571A448
F571A448:lI105|HF571A4C8
F571A4C8:lI98|HF571A548
F571A548:lI47|HF571A5C8
F571A5C8:lI101|HF571A640
F571A640:lI114|HF571A6B8
F571A6B8:lI108|HF571A730
F571A730:lI97|HF571A7A8
F571A7A8:lI110|HF571A820
F571A820:lI103|HF571A898
F571A898:lI47|HF571A910
F571A910:lI108|HF571A988
F571A988:lI105|HF571AA00
F571AA00:lI98|HF571AA68
F571AA68:lI47|HF571AAD0
F571AAD0:lI99|HF571AB38
F571AB38:lI111|HF571ABA0
F571ABA0:lI115|HF571AC08
F571AC08:lI69|HF571AC68
F571AC68:lI118|HF571ACC8
F571ACC8:lI101|HF571AD20
F571AD20:lI110|HF571AD78
F571AD78:lI116|HF571ADD0
F571ADD0:lI45|HF571AE20
F571AE20:lI50|HF571AE70
F571AE70:lI46|HF571AEB8
F571AEB8:lI49|HF571AF00
F571AF00:lI46|HF571AF48
F571AF48:lI52|HF571AF88
F571AF88:lI47|H73F76A68
F571D460:lHF571A1D0|HF571D470
F571A1D0:lI47|HF571A250
F571A250:lI117|HF571A2D0
F571A2D0:lI115|HF571A350
F571A350:lI114|HF571A3D0
F571A3D0:lI47|HF571A450
F571A450:lI108|HF571A4D0
F571A4D0:lI105|HF571A550
F571A550:lI98|HF571A5D0
F571A5D0:lI47|HF571A648
F571A648:lI101|HF571A6C0
F571A6C0:lI114|HF571A738
F571A738:lI108|HF571A7B0
F571A7B0:lI97|HF571A828
F571A828:lI110|HF571A8A0
F571A8A0:lI103|HF571A918
F571A918:lI47|HF571A990
F571A990:lI108|HF571AA08
F571AA08:lI105|HF571AA70
F571AA70:lI98|HF571AAD8
F571AAD8:lI47|HF571AB40
F571AB40:lI99|HF571ABA8
F571ABA8:lI111|HF571AC10
F571AC10:lI109|HF571AC70
F571AC70:lI112|HF571ACD0
F571ACD0:lI105|HF571AD28
F571AD28:lI108|HF571AD80
F571AD80:lI101|HF571ADD8
F571ADD8:lI114|HF571AE28
F571AE28:lI45|HF571AE78
F571AE78:lI52|HF571AEC0
F571AEC0:lI46|HF571AF08
F571AF08:lI53|HF571AF50
F571AF50:lI46|HF571AF90
F571AF90:lI53|HF571AFC0
F571AFC0:lI47|H73F76A68
F571D470:lHF571A258|HF571D480
F571A258:lI47|HF571A2D8
F571A2D8:lI117|HF571A358
F571A358:lI115|HF571A3D8
F571A3D8:lI114|HF571A458
F571A458:lI47|HF571A4D8
F571A4D8:lI108|HF571A558
F571A558:lI105|HF571A5D8
F571A5D8:lI98|HF571A650
F571A650:lI47|HF571A6C8
F571A6C8:lI101|HF571A740
F571A740:lI114|HF571A7B8
F571A7B8:lI108|HF571A830
F571A830:lI97|HF571A8A8
F571A8A8:lI110|HF571A920
F571A920:lI103|HF571A998
F571A998:lI47|HF571AA10
F571AA10:lI108|HF571AA78
F571AA78:lI105|HF571AAE0
F571AAE0:lI98|HF571AB48
F571AB48:lI47|HF571ABB0
F571ABB0:lI99|HF571AC18
F571AC18:lI111|HF571AC78
F571AC78:lI109|HF571ACD8
F571ACD8:lI109|HF571AD30
F571AD30:lI111|HF571AD88
F571AD88:lI110|HF571ADE0
F571ADE0:lI95|HF571AE30
F571AE30:lI116|HF571AE80
F571AE80:lI101|HF571AEC8
F571AEC8:lI115|HF571AF10
F571AF10:lI116|HF571AF58
F571AF58:lI45|HF571AF98
F571AF98:lI49|HF571AFC8
F571AFC8:lI46|HF571AFE8
F571AFE8:lI51|HF571B008
F571B008:lI46|HF571B028
F571B028:lI52|HF571B040
F571B040:lI47|H73F76A68
F571D480:lHF571A2E0|N
F571A2E0:lI47|HF571A360
F571A360:lI117|HF571A3E0
F571A3E0:lI115|HF571A460
F571A460:lI114|HF571A4E0
F571A4E0:lI47|HF571A560
F571A560:lI108|HF571A5E0
F571A5E0:lI105|HF571A658
F571A658:lI98|HF571A6D0
F571A6D0:lI47|HF571A748
F571A748:lI101|HF571A7C0
F571A7C0:lI114|HF571A838
F571A838:lI108|HF571A8B0
F571A8B0:lI97|HF571A928
F571A928:lI110|HF571A9A0
F571A9A0:lI103|HF571AA18
F571AA18:lI47|HF571AA80
F571AA80:lI108|HF571AAE8
F571AAE8:lI105|HF571AB50
F571AB50:lI98|HF571ABB8
F571ABB8:lI47|HF571AC20
F571AC20:lI97|HF571AC80
F571AC80:lI115|HF571ACE0
F571ACE0:lI110|HF571AD38
F571AD38:lI49|HF571AD90
F571AD90:lI45|HF571ADE8
F571ADE8:lI49|HF571AE38
F571AE38:lI46|HF571AE88
F571AE88:lI54|HF571AED0
F571AED0:lI46|HF571AF18
F571AF18:lI50|HF571AF60
F571AF60:lI47|H73F76A68
F5718B20:lI47|HF5718B38
F5718B38:lI117|HF5718B40
F5718B40:lI115|HF5718B48
F5718B48:lI114|HF5718B50
F5718B50:lI47|HF5718B58
F5718B58:lI108|HF5718B60
F5718B60:lI105|HF5718B68
F5718B68:lI98|HF5718B70
F5718B70:lI47|HF5718B78
F5718B78:lI101|HF5718B80
F5718B80:lI114|HF5718B88
F5718B88:lI108|HF5718B90
F5718B90:lI97|HF5718B98
F5718B98:lI110|HF5718BA0
F5718BA0:lI103|N
=proc_stack:<0.27.0>
0xf55e2988:SReturn addr 0x1CC8E0 (<terminate process normally>)
y0:N
y1:HF577C538
y2:HF577C530
y3:H73F7B6D4
y4:A6:hidden
y5:AB:rabbit at mail
y6:HF55E2620
y7:p<0.253>
y8:A17:rabbitmq_multi7151 at mail
y9:P<0.21.0>
=proc_heap:<0.27.0>
F577C538:E1E:837164000D696E65745F7463705F64697374640007676574737461746101
F577C530:E1B:837164000D696E65745F7463705F646973746400047469636B6101
73F7B6D4:t5:A4:tick,I0,I0,I0,I0
F55E2620:t5:AB:net_address,HF55E2648,HF55E2654,A3:tcp,A4:inet
F55E2654:lI109|HF55E2678
F55E2678:lI97|HF55E2688
F55E2688:lI105|HF55E2698
F55E2698:lI108|N
F55E2648:t2:HF55E2664,I43698
F55E2664:t4:I124,I109,I44,I154
=proc_dictionary:<0.30.0>
HF568F75C
HF568F768
=proc_stack:<0.30.0>
0xf5691020:SReturn addr 0x81903014 (proc_lib:init_p_do_apply/3 + 28)
y0:N
y1:A8:infinity
y2:A11:supervisor_bridge
y3:HF5690874
y4:P<0.30.0>
y5:P<0.10.0>
0xf569103c:SReturn addr 0x1CC8E0 (<terminate process normally>)
y0:SCatch 0x81903024 (proc_lib:init_p_do_apply/3 + 44)
=proc_heap:<0.30.0>
F5690874:t5:A5:state,A8:user_sup,P<0.31.0>,P<0.31.0>,HF568F750
F568F750:t2:P<0.30.0>,A8:user_sup
F568F75C:t2:AD:$initial_call,HF568F774
F568F774:t3:A11:supervisor_bridge,A8:user_sup,I1
F568F768:t2:AA:$ancestors,HF568F784
F568F784:lAA:kernel_sup|HF568F78C
F568F78C:lP<0.9.0>|N
=proc_dictionary:<0.31.0>
HF55C09B0
HF55C09BC
=proc_stack:<0.31.0>
0xf56b7ad0:SReturn addr 0x1CC8E0 (<terminate process normally>)
y0:N
y1:H73FB30A0
y2:p<0.305>
=proc_heap:<0.31.0>
73FB30A0:t2:N,N
F55C09B0:t2:A5:shell,A7:noshell
F55C09BC:t2:A9:read_mode,A4:list
=proc_dictionary:<0.32.0>
HF57C3774
HF57C3758
=proc_stack:<0.32.0>
0xf57c3a70:SReturn addr 0x81903014 (proc_lib:init_p_do_apply/3 + 28)
y0:N
y1:A8:infinity
y2:AD:kernel_config
y3:N
y4:P<0.32.0>
y5:P<0.10.0>
0xf57c3a8c:SReturn addr 0x1CC8E0 (<terminate process normally>)
y0:SCatch 0x81903024 (proc_lib:init_p_do_apply/3 + 44)
=proc_heap:<0.32.0>
F57C3774:t2:AD:$initial_call,HF57C3764
F57C3764:t3:AD:kernel_config,A4:init,I1
F57C3758:t2:AA:$ancestors,HF57C3750
F57C3750:lAA:kernel_sup|HF57C3730
F57C3730:lP<0.9.0>|N
=proc_dictionary:<0.33.0>
HF577CA90
HF577CA9C
=proc_stack:<0.33.0>
0xf56f3914:SReturn addr 0x81903014 (proc_lib:init_p_do_apply/3 + 28)
y0:N
y1:A8:infinity
y2:AA:supervisor
y3:HF56F32DC
y4:AF:kernel_safe_sup
y5:P<0.10.0>
0xf56f3930:SReturn addr 0x1CC8E0 (<terminate process normally>)
y0:SCatch 0x81903024 (proc_lib:init_p_do_apply/3 + 44)
=proc_heap:<0.33.0>
F56F32DC:tA:A5:state,HF577CAA8,AB:one_for_one,HF56F32D4,HF577CAB4,I4,I3600,N,A6:kernel,A4:safe
F577CAB4:t9:A4:dict,I0,I16,I16,I8,I80,I48,H819643D4,HF577CB0C
F577CB0C:t1:H819643D4
F56F32D4:lHF56F32B0|HF56F2FDC
F56F32B0:t8:A5:child,P<0.94.0>,AC:timer_server,HF56F3090,A9:permanent,I1000,A6:worker,HF56F30A0
F56F30A0:lA5:timer|N
F56F3090:t3:A5:timer,AA:start_link,N
F56F2FDC:lHF56F2FE4|HF56F3008
F56F2FE4:t8:A5:child,P<0.81.0>,AF:disk_log_server,HF56F3010,A9:permanent,I2000,A6:worker,HF56F3020
F56F3020:lAF:disk_log_server|N
F56F3010:t3:AF:disk_log_server,AA:start_link,N
F56F3008:lHF56F3028|HF577CB1C
F56F3028:t8:A5:child,P<0.80.0>,AC:disk_log_sup,HF577CB24,A9:permanent,I1000,AA:supervisor,HF577CB34
F577CB34:lAC:disk_log_sup|N
F577CB24:t3:AC:disk_log_sup,AA:start_link,N
F577CB1C:lHF577CB3C|HF577CB60
F577CB3C:t8:A5:child,P<0.47.0>,A4:dets,HF577CB68,A9:permanent,I2000,A6:worker,HF577CB78
F577CB78:lAB:dets_server|N
F577CB68:t3:AB:dets_server,AA:start_link,N
F577CB60:lHF577CB80|N
F577CB80:t8:A5:child,P<0.46.0>,A8:dets_sup,HF577CADC,A9:permanent,I1000,AA:supervisor,HF577CAEC
F577CAEC:lA8:dets_sup|N
F577CADC:t3:A8:dets_sup,AA:start_link,N
F577CAA8:t2:A5:local,AF:kernel_safe_sup
F577CA90:t2:AD:$initial_call,HF577CAF4
F577CAF4:t3:AA:supervisor,A6:kernel,I1
F577CA9C:t2:AA:$ancestors,HF577CB04
F577CB04:lAA:kernel_sup|HF577CB14
F577CB14:lP<0.9.0>|N
=proc_dictionary:<0.37.0>
HF5758B10
HF5758AF4
=proc_stack:<0.37.0>
0xf5758d40:SReturn addr 0x81903014 (proc_lib:init_p_do_apply/3 + 28)
y0:N
y1:N
y2:N
y3:N
y4:HF5758BC4
y5:P<0.6.0>
0xf5758d5c:SReturn addr 0x1CC8E0 (<terminate process normally>)
y0:SCatch 0x81903024 (proc_lib:init_p_do_apply/3 + 44)
=proc_heap:<0.37.0>
F5758BC4:t6:A5:state,P<0.38.0>,HF57589D0,N,I0,P<0.31.0>
F57589D0:t9:A9:appl_data,A4:sasl,HF5758AAC,A9:undefined,HF57589F8,HF5758A8C,N,A8:infinity,A8:infinity
F5758A8C:lA4:sasl|HF5758A84
F5758A84:lAD:alarm_handler|HF5758A7C
F5758A7C:lAF:format_lib_supp|HF5758A74
F5758A74:lA9:misc_supp|HF5758A6C
F5758A6C:lA8:overload|HF5758A64
F5758A64:lA2:rb|HF5758A5C
F5758A5C:lAE:rb_format_supp|HF5758A54
F5758A54:lAF:release_handler|HF5758A4C
F5758A4C:lA11:release_handler_1|HF5758A44
F5758A44:lA6:erlsrv|HF5758A3C
F5758A3C:lAB:sasl_report|HF5758A34
F5758A34:lA11:sasl_report_tty_h|HF5758A2C
F5758A2C:lA12:sasl_report_file_h|HF5758A24
F5758A24:lA8:systools|HF5758A1C
F5758A1C:lAD:systools_make|HF5758A14
F5758A14:lAB:systools_rc|HF5758A0C
F5758A0C:lAE:systools_relup|HF5758A04
F5758A04:lAC:systools_lib|N
F57589F8:t2:A4:sasl,N
F5758AAC:lA8:sasl_sup|HF5758AA4
F5758AA4:lAD:alarm_handler|HF5758A9C
F5758A9C:lA8:overload|HF5758A94
F5758A94:lAF:release_handler|N
F5758B10:t2:AD:$initial_call,HF5758B00
F5758B00:t3:A12:application_master,A4:init,I4
F5758AF4:t2:AA:$ancestors,HF5758AEC
F5758AEC:lP<0.36.0>|N
=proc_stack:<0.38.0>
0xf579c3b0:SReturn addr 0x1CC8E0 (<terminate process normally>)
y0:HF579C1F0
y1:A4:sasl
y2:P<0.40.0>
y3:P<0.37.0>
=proc_heap:<0.38.0>
F579C1F0:t3:A5:state,HF579C020,A9:undefined
F579C020:t2:A4:file,HF579C054
F579C054:lI47|HF579C09C
F579C09C:lI118|HF579C0A4
F579C0A4:lI97|HF579C0AC
F579C0AC:lI114|HF579C0B4
F579C0B4:lI47|HF579C0BC
F579C0BC:lI108|HF579C0C4
F579C0C4:lI111|HF579C0CC
F579C0CC:lI103|HF579C0D4
F579C0D4:lI47|HF579C0DC
F579C0DC:lI114|HF579C0E4
F579C0E4:lI97|HF579C0EC
F579C0EC:lI98|HF579C0F4
F579C0F4:lI98|HF579C0FC
F579C0FC:lI105|HF579C104
F579C104:lI116|HF579C10C
F579C10C:lI109|HF579C114
F579C114:lI113|HF579C11C
F579C11C:lI47|HF579C124
F579C124:lI114|HF579C12C
F579C12C:lI97|HF579C134
F579C134:lI98|HF579C13C
F579C13C:lI98|HF579C144
F579C144:lI105|HF579C14C
F579C14C:lI116|HF579C154
F579C154:lI45|HF579C15C
F579C15C:lI115|HF579C164
F579C164:lI97|HF579C16C
F579C16C:lI115|HF579C174
F579C174:lI108|HF579C17C
F579C17C:lI46|HF579C184
F579C184:lI108|HF579C18C
F579C18C:lI111|HF579C194
F579C194:lI103|N
=proc_dictionary:<0.40.0>
HF564917C
HF5649188
=proc_stack:<0.40.0>
0xf5648750:SReturn addr 0x81903014 (proc_lib:init_p_do_apply/3 + 28)
y0:N
y1:A8:infinity
y2:AA:supervisor
y3:HF5648530
y4:A8:sasl_sup
y5:P<0.38.0>
0xf564876c:SReturn addr 0x1CC8E0 (<terminate process normally>)
y0:SCatch 0x81903024 (proc_lib:init_p_do_apply/3 + 44)
=proc_heap:<0.40.0>
F5648530:tA:A5:state,HF5649120,AB:one_for_one,HF564851C,HF5649194,I0,I1,N,A4:sasl,N
F5649194:t9:A4:dict,I0,I16,I16,I8,I80,I48,H819643D4,HF56491D4
F56491D4:t1:H819643D4
F564851C:lHF56484F8|HF56483D0
F56484F8:t8:A5:child,P<0.44.0>,AF:release_handler,H73FB4B90,A9:permanent,I2000,A6:worker,N
73FB4B90:t3:AF:release_handler,AA:start_link,N
F56483D0:lHF56483FC|N
F56483FC:t8:A5:child,P<0.41.0>,AD:sasl_safe_sup,H73FB4B38,A9:permanent,A8:infinity,AA:supervisor,H73FB4B6C
73FB4B6C:lA4:sasl|N
73FB4B38:t3:AA:supervisor,AA:start_link,H73FB4B48
73FB4B48:lH73FB4B60|H73FB4B50
73FB4B60:t2:A5:local,AD:sasl_safe_sup
73FB4B50:lA4:sasl|H73FB4B58
73FB4B58:lA4:safe|N
F5649120:t2:A5:local,A8:sasl_sup
F564917C:t2:AD:$initial_call,HF56491BC
F56491BC:t3:AA:supervisor,A4:sasl,I1
F5649188:t2:AA:$ancestors,HF56491CC
F56491CC:lP<0.38.0>|N
=proc_dictionary:<0.41.0>
HF56BB804
HF56BB810
=proc_stack:<0.41.0>
0xf56bbd50:SReturn addr 0x81903014 (proc_lib:init_p_do_apply/3 + 28)
y0:N
y1:A8:infinity
y2:AA:supervisor
y3:HF56BBC18
y4:AD:sasl_safe_sup
y5:P<0.40.0>
0xf56bbd6c:SReturn addr 0x1CC8E0 (<terminate process normally>)
y0:SCatch 0x81903024 (proc_lib:init_p_do_apply/3 + 44)
=proc_heap:<0.41.0>
F56BBC18:tA:A5:state,HF56BB7C4,AB:one_for_one,HF56BBC04,HF56BB840,I4,I3600,N,A4:sasl,A4:safe
F56BB840:t9:A4:dict,I0,I16,I16,I8,I80,I48,H819643D4,HF56BB880
F56BB880:t1:H819643D4
F56BBC04:lHF56BBBE0|HF56BB9F4
F56BBBE0:t8:A5:child,P<0.43.0>,A8:overload,H73FB4ACC,A9:permanent,I2000,A6:worker,H73FB4ADC
73FB4ADC:lA8:overload|N
73FB4ACC:t3:A8:overload,AA:start_link,N
F56BB9F4:lHF56BB9D0|N
F56BB9D0:t8:A5:child,P<0.42.0>,AD:alarm_handler,H73FB4AA0,A9:permanent,I2000,A6:worker,A7:dynamic
73FB4AA0:t3:AD:alarm_handler,AA:start_link,N
F56BB7C4:t2:A5:local,AD:sasl_safe_sup
F56BB804:t2:AD:$initial_call,HF56BB868
F56BB868:t3:AA:supervisor,A4:sasl,I1
F56BB810:t2:AA:$ancestors,HF56BB878
F56BB878:lA8:sasl_sup|HF56BB888
F56BB888:lP<0.38.0>|N
=proc_dictionary:<0.42.0>
HF56B4A70
HF56B4A64
=proc_stack:<0.42.0>
0xf56b4d64:SReturn addr 0x81903014 (proc_lib:init_p_do_apply/3 + 28)
y0:A5:false
y1:N
y2:HF56B4BE0
y3:AD:alarm_handler
y4:P<0.41.0>
0xf56b4d7c:SReturn addr 0x1CC8E0 (<terminate process normally>)
y0:SCatch 0x81903024 (proc_lib:init_p_do_apply/3 + 44)
=proc_heap:<0.42.0>
F56B4BE0:lHF56B4BC8|HF56B4B04
F56B4BC8:t5:A7:handler,AC:rabbit_alarm,A5:false,HF56B4BAC,A5:false
F56B4BAC:t3:A6:alarms,HF56B4B84,A5:false
F56B4B84:t9:A4:dict,I0,I16,I16,I8,I80,I48,H819643D4,HF56B4B7C
F56B4B7C:t1:H819643D4
F56B4B04:lHF56B4AEC|N
F56B4AEC:t5:A7:handler,AD:alarm_handler,A5:false,N,A5:false
F56B4A70:t2:AD:$initial_call,H819055D4
F56B4A64:t2:AA:$ancestors,HF56B4A5C
F56B4A5C:lAD:sasl_safe_sup|HF56B4A3C
F56B4A3C:lA8:sasl_sup|HF56B4A34
F56B4A34:lP<0.38.0>|N
=proc_dictionary:<0.43.0>
HF55E2A60
HF55E2A44
=proc_stack:<0.43.0>
0xf55e2d40:SReturn addr 0x81903014 (proc_lib:init_p_do_apply/3 + 28)
y0:N
y1:A8:infinity
y2:A8:overload
y3:HF55E2ABC
y4:A8:overload
y5:P<0.41.0>
0xf55e2d5c:SReturn addr 0x1CC8E0 (<terminate process normally>)
y0:SCatch 0x81903024 (proc_lib:init_p_do_apply/3 + 44)
=proc_heap:<0.43.0>
F55E2ABC:t8:A5:state,I0,I0,H73FE574C,I1011,H73FE5758,H73FE5488,A5:clear
73FE5488:t2:I0,I0
73FE5758:F1A:1.00000000000000005551e-01
73FE574C:F1A:8.00000000000000044409e-01
F55E2A60:t2:AD:$initial_call,HF55E2A50
F55E2A50:t3:A8:overload,A4:init,I1
F55E2A44:t2:AA:$ancestors,HF55E2A3C
F55E2A3C:lAD:sasl_safe_sup|HF55E2A1C
F55E2A1C:lA8:sasl_sup|HF55E2A14
F55E2A14:lP<0.38.0>|N
=proc_dictionary:<0.44.0>
HF566A640
HF566A64C
=proc_stack:<0.44.0>
0xf56b5cd8:SReturn addr 0x81903014 (proc_lib:init_p_do_apply/3 + 28)
y0:N
y1:A8:infinity
y2:AF:release_handler
y3:HF56B5ACC
y4:AF:release_handler
y5:P<0.40.0>
0xf56b5cf4:SReturn addr 0x1CC8E0 (<terminate process normally>)
y0:SCatch 0x81903024 (proc_lib:init_p_do_apply/3 + 44)
=proc_heap:<0.44.0>
F56B5ACC:tB:A5:state,N,HF566A638,HF566A6E8,HF56B55BC,A9:undefined,HF56B5A94,A5:false,A5:false,A5:false,N
F56B5A94:t2:A8:no_check,HF56B5A8C
F56B5A8C:lI47|HF56B5A84
F56B5A84:lI117|HF56B5A7C
F56B5A7C:lI115|HF56B5A74
F56B5A74:lI114|HF56B5A6C
F56B5A6C:lI47|HF56B5A64
F56B5A64:lI108|HF56B5A5C
F56B5A5C:lI105|HF56B5A54
F56B5A54:lI98|HF56B5A4C
F56B5A4C:lI47|HF56B5A44
F56B5A44:lI101|HF56B5A3C
F56B5A3C:lI114|HF56B5A34
F56B5A34:lI108|HF56B5A2C
F56B5A2C:lI97|HF56B5A24
F56B5A24:lI110|HF56B5A1C
F56B5A1C:lI103|HF56B5A14
F56B5A14:lI47|HF56B5A0C
F56B5A0C:lI98|HF56B5A04
F56B5A04:lI105|HF56B59FC
F56B59FC:lI110|HF56B59F4
F56B59F4:lI47|HF56B59EC
F56B59EC:lI115|HF56B59E4
F56B59E4:lI116|HF56B59DC
F56B59DC:lI97|HF56B59D4
F56B59D4:lI114|HF56B59CC
F56B59CC:lI116|N
F56B55BC:lHF56B5488|N
F56B5488:t6:A7:release,HF56B4DD4,HF56B4DCC,HF56B4DC4,HF56B5450,A9:permanent
F56B5450:lHF56B4DAC|HF56B5448
F56B4DAC:t3:A6:kernel,HF56B4E14,HF56B4E1C
F56B4E1C:lI47|HF56B4E8C
F56B4E8C:lI117|HF56B4EE4
F56B4EE4:lI115|HF56B4F4C
F56B4F4C:lI114|HF56B4FA4
F56B4FA4:lI47|HF56B4FF4
F56B4FF4:lI108|HF56B5034
F56B5034:lI105|HF56B5070
F56B5070:lI98|HF56B50BC
F56B50BC:lI47|HF56B5110
F56B5110:lI101|HF56B5160
F56B5160:lI114|HF56B51B0
F56B51B0:lI108|HF56B51F8
F56B51F8:lI97|HF56B5228
F56B5228:lI110|HF56B5248
F56B5248:lI103|HF56B5260
F56B5260:lI47|HF56B5278
F56B5278:lI108|HF56B5290
F56B5290:lI105|HF56B52A8
F56B52A8:lI98|HF56B52C0
F56B52C0:lI47|HF56B52D8
F56B52D8:lI107|HF56B52F0
F56B52F0:lI101|HF56B5308
F56B5308:lI114|HF56B5320
F56B5320:lI110|HF56B5338
F56B5338:lI101|HF56B5350
F56B5350:lI108|HF56B5368
F56B5368:lI45|HF56B5380
F56B5380:lI50|HF56B5398
F56B5398:lI46|HF56B53B0
F56B53B0:lI49|HF56B53C8
F56B53C8:lI50|HF56B53E0
F56B53E0:lI46|HF56B53F8
F56B53F8:lI53|N
F56B4E14:lI50|HF56B4E84
F56B4E84:lI46|HF56B4EDC
F56B4EDC:lI49|HF56B4F44
F56B4F44:lI50|HF56B4F9C
F56B4F9C:lI46|HF56B4FEC
F56B4FEC:lI53|N
F56B5448:lHF56B4D9C|HF56B5440
F56B4D9C:t3:A6:stdlib,HF56B4E04,HF56B4E0C
F56B4E0C:lI47|HF56B4E7C
F56B4E7C:lI117|HF56B4ED4
F56B4ED4:lI115|HF56B4F3C
F56B4F3C:lI114|HF56B4F94
F56B4F94:lI47|HF56B4FE4
F56B4FE4:lI108|HF56B502C
F56B502C:lI105|HF56B5068
F56B5068:lI98|HF56B50B4
F56B50B4:lI47|HF56B5108
F56B5108:lI101|HF56B5158
F56B5158:lI114|HF56B51A8
F56B51A8:lI108|HF56B51F0
F56B51F0:lI97|HF56B5220
F56B5220:lI110|HF56B5240
F56B5240:lI103|HF56B5258
F56B5258:lI47|HF56B5270
F56B5270:lI108|HF56B5288
F56B5288:lI105|HF56B52A0
F56B52A0:lI98|HF56B52B8
F56B52B8:lI47|HF56B52D0
F56B52D0:lI115|HF56B52E8
F56B52E8:lI116|HF56B5300
F56B5300:lI100|HF56B5318
F56B5318:lI108|HF56B5330
F56B5330:lI105|HF56B5348
F56B5348:lI98|HF56B5360
F56B5360:lI45|HF56B5378
F56B5378:lI49|HF56B5390
F56B5390:lI46|HF56B53A8
F56B53A8:lI49|HF56B53C0
F56B53C0:lI53|HF56B53D8
F56B53D8:lI46|HF56B53F0
F56B53F0:lI53|N
F56B4E04:lI49|HF56B4E74
F56B4E74:lI46|HF56B4ECC
F56B4ECC:lI49|HF56B4F34
F56B4F34:lI53|HF56B4F8C
F56B4F8C:lI46|HF56B4FDC
F56B4FDC:lI53|N
F56B5440:lHF56B5430|N
F56B5430:t3:A4:sasl,HF56B4F1C,HF56B4F84
F56B4F84:lI47|HF56B4FD4
F56B4FD4:lI117|HF56B5024
F56B5024:lI115|HF56B5060
F56B5060:lI114|HF56B50AC
F56B50AC:lI47|HF56B5100
F56B5100:lI108|HF56B5150
F56B5150:lI105|HF56B51A0
F56B51A0:lI98|HF56B51E8
F56B51E8:lI47|HF56B5218
F56B5218:lI101|HF56B5238
F56B5238:lI114|HF56B5250
F56B5250:lI108|HF56B5268
F56B5268:lI97|HF56B5280
F56B5280:lI110|HF56B5298
F56B5298:lI103|HF56B52B0
F56B52B0:lI47|HF56B52C8
F56B52C8:lI108|HF56B52E0
F56B52E0:lI105|HF56B52F8
F56B52F8:lI98|HF56B5310
F56B5310:lI47|HF56B5328
F56B5328:lI115|HF56B5340
F56B5340:lI97|HF56B5358
F56B5358:lI115|HF56B5370
F56B5370:lI108|HF56B5388
F56B5388:lI45|HF56B53A0
F56B53A0:lI50|HF56B53B8
F56B53B8:lI46|HF56B53D0
F56B53D0:lI49|HF56B53E8
F56B53E8:lI46|HF56B5400
F56B5400:lI53|HF56B5408
F56B5408:lI46|HF56B5410
F56B5410:lI52|N
F56B4F1C:lI50|HF56B4F7C
F56B4F7C:lI46|HF56B4FCC
F56B4FCC:lI49|HF56B501C
F56B501C:lI46|HF56B5058
F56B5058:lI53|HF56B50A4
F56B50A4:lI46|HF56B50F8
F56B50F8:lI52|N
F56B4DC4:lI53|HF56B4E34
F56B4E34:lI46|HF56B4E94
F56B4E94:lI54|HF56B4EEC
F56B4EEC:lI46|HF56B4F54
F56B4F54:lI53|N
F56B4DCC:lI82|HF56B4E3C
F56B4E3C:lI49|HF56B4E9C
F56B4E9C:lI50|HF56B4EF4
F56B4EF4:lI66|N
F56B4DD4:lI79|HF56B4E44
F56B4E44:lI84|HF56B4EA4
F56B4EA4:lI80|HF56B4EFC
F56B4EFC:lI32|HF56B4F5C
F56B4F5C:lI32|HF56B4FAC
F56B4FAC:lI65|HF56B4FFC
F56B4FFC:lI80|HF56B503C
F56B503C:lI78|HF56B5078
F56B5078:lI32|HF56B50C4
F56B50C4:lI49|HF56B5118
F56B5118:lI56|HF56B5168
F56B5168:lI49|HF56B51B8
F56B51B8:lI32|HF56B5200
F56B5200:lI48|HF56B5230
F56B5230:lI49|N
F566A6E8:lI47|HF566A6F0
F566A6F0:lI117|HF566A6F8
F566A6F8:lI115|HF566A700
F566A700:lI114|HF566A708
F566A708:lI47|HF566A710
F566A710:lI108|HF566A718
F566A718:lI105|HF566A720
F566A720:lI98|HF566A728
F566A728:lI47|HF566A730
F566A730:lI101|HF566A738
F566A738:lI114|HF566A740
F566A740:lI108|HF566A748
F566A748:lI97|HF566A750
F566A750:lI110|HF566A758
F566A758:lI103|HF566A760
F566A760:lI47|HF566A768
F566A768:lI114|HF566A770
F566A770:lI101|HF566A778
F566A778:lI108|HF566A780
F566A780:lI101|HF566A788
F566A788:lI97|HF566A790
F566A790:lI115|HF566A798
F566A798:lI101|HF566A7A0
F566A7A0:lI115|N
F566A638:lI47|HF566A658
F566A658:lI117|HF566A678
F566A678:lI115|HF566A688
F566A688:lI114|HF566A690
F566A690:lI47|HF566A698
F566A698:lI108|HF566A6A0
F566A6A0:lI105|HF566A6A8
F566A6A8:lI98|HF566A6B0
F566A6B0:lI47|HF566A6B8
F566A6B8:lI101|HF566A6C0
F566A6C0:lI114|HF566A6C8
F566A6C8:lI108|HF566A6D0
F566A6D0:lI97|HF566A6D8
F566A6D8:lI110|HF566A6E0
F566A6E0:lI103|N
F566A640:t2:AD:$initial_call,HF566A660
F566A660:t3:AF:release_handler,A4:init,I1
F566A64C:t2:AA:$ancestors,HF566A670
F566A670:lA8:sasl_sup|HF566A680
F566A680:lP<0.38.0>|N
=proc_dictionary:<0.46.0>
HF568C9B0
HF568C9BC
=proc_stack:<0.46.0>
0xf568d900:SReturn addr 0x81903014 (proc_lib:init_p_do_apply/3 + 28)
y0:N
y1:A8:infinity
y2:AA:supervisor
y3:HF568D810
y4:A8:dets_sup
y5:P<0.33.0>
0xf568d91c:SReturn addr 0x1CC8E0 (<terminate process normally>)
y0:SCatch 0x81903024 (proc_lib:init_p_do_apply/3 + 44)
=proc_heap:<0.46.0>
F568D810:tA:A5:state,HF568C9C8,A12:simple_one_for_one,HF568C9D4,HF568D7E8,I4,I3600,N,A8:dets_sup,N
F568D7E8:t9:A4:dict,I0,I16,I16,I8,I80,I48,H819643D4,HF568D7AC
F568D7AC:t1:HF568D768
F568D768:t10:N,N,N,N,N,N,N,N,N,N,N,N,N,N,N,N
F568C9D4:lHF568C9F4|N
F568C9F4:t8:A5:child,A9:undefined,A4:dets,H7400FC50,A9:temporary,I30000,A6:worker,H7400FC60
7400FC60:lA4:dets|N
7400FC50:t3:A4:dets,AB:istart_link,N
F568C9C8:t2:A5:local,A8:dets_sup
F568C9B0:t2:AD:$initial_call,HF568C9DC
F568C9DC:t3:AA:supervisor,A8:dets_sup,I1
F568C9BC:t2:AA:$ancestors,HF568C9EC
F568C9EC:lAF:kernel_safe_sup|HF568CA18
F568CA18:lAA:kernel_sup|HF568CA20
F568CA20:lP<0.9.0>|N
=proc_dictionary:<0.47.0>
HF56D0020
HF56D002C
=proc_stack:<0.47.0>
0xf56011d8:SReturn addr 0x81903014 (proc_lib:init_p_do_apply/3 + 28)
y0:N
y1:A8:infinity
y2:AB:dets_server
y3:HF5600D34
y4:A4:dets
y5:P<0.33.0>
0xf56011f4:SReturn addr 0x1CC8E0 (<terminate process normally>)
y0:SCatch 0x81903024 (proc_lib:init_p_do_apply/3 + 44)
=proc_heap:<0.47.0>
F5600D34:t4:A5:state,I16401,HF56D0038,N
F56D0038:lP<0.33.0>|N
F56D0020:t2:AD:$initial_call,HF56D004C
F56D004C:t3:AB:dets_server,A4:init,I1
F56D002C:t2:AA:$ancestors,HF56D005C
F56D005C:lAF:kernel_safe_sup|HF56D0074
F56D0074:lAA:kernel_sup|HF56D007C
F56D007C:lP<0.9.0>|N
=proc_messages:<0.55.0>
HF573F580:A9:undefined
=proc_stack:<0.55.0>
0xf573f798:SReturn addr 0xF58F6378 (prim_file:write/2 + 128)
y0:N
y1:p<0.594>
0xf573f7a4:SReturn addr 0x73FB9894 (file_io_server:put_chars/2 + 84)
0xf573f7a8:SReturn addr 0x73FB874C (file_io_server:server_loop/1 + 604)
y0:HF566B968
0xf573f7b0:SReturn addr 0x1CC8E0 (<terminate process normally>)
y0:P<0.55.0>
y1:P<0.5.0>
=proc_heap:<0.55.0>
F566B968:t6:A5:state,HF566B994,P<0.5.0>,HF566B984,H73FBAC44,A4:list
73FBAC44:Yh0:
F566B984:E1F:8372000364000B726162626974406D61696C030000006E0000000000000000
F566B994:t3:AF:file_descriptor,A9:prim_file,HF566B9A4
F566B9A4:t2:p<0.594>,I15
F573F580:t2:p<0.594>,HF573F574
F573F574:t2:A4:data,HF573F56C
F573F56C:lI3|HF573F564
F573F564:lI0|HF573F55C
F573F55C:lI0|HF573F554
F573F554:lI0|HF573F54C
F573F54C:lI0|HF573F544
F573F544:lI0|HF573F53C
F573F53C:lI0|HF573F534
F573F534:lI1|HF573F52C
F573F52C:lI74|N
=proc_stack:<0.56.0>
0x73d98b14:SReturn addr 0x1CC8E0 (<terminate process normally>)
y0:HF578A070
y1:HF578A08C
=proc_heap:<0.56.0>
F578A070:t6:A5:state,HF578A09C,P<0.5.0>,HF578A08C,H73FBAC44,A4:list
F578A08C:E1F:8372000364000B726162626974406D61696C030000007A0000000000000000
F578A09C:t3:AF:file_descriptor,A9:prim_file,HF578A0AC
F578A0AC:t2:p<0.597>,I14
=proc_dictionary:<0.80.0>
HF566CED8
HF566CEE4
=proc_stack:<0.80.0>
0xf5737360:SReturn addr 0x81903014 (proc_lib:init_p_do_apply/3 + 28)
y0:N
y1:A8:infinity
y2:AA:supervisor
y3:HF5736B88
y4:AC:disk_log_sup
y5:P<0.33.0>
0xf573737c:SReturn addr 0x1CC8E0 (<terminate process normally>)
y0:SCatch 0x81903024 (proc_lib:init_p_do_apply/3 + 44)
=proc_heap:<0.80.0>
F5736B88:tA:A5:state,HF566CEF0,A12:simple_one_for_one,HF566CEFC,HF5736B60,I4,I3600,N,AC:disk_log_sup,N
F5736B60:t9:A4:dict,I0,I16,I16,I8,I80,I48,H819643D4,HF5736B24
F5736B24:t1:HF5736AE0
F5736AE0:t10:N,N,N,N,N,N,N,N,N,N,N,N,N,N,N,N
F566CEFC:lHF566CF1C|N
F566CF1C:t8:A5:child,A9:undefined,A8:disk_log,H73EC7778,A9:temporary,I1000,A6:worker,H73EC7788
73EC7788:lA8:disk_log|N
73EC7778:t3:A8:disk_log,AB:istart_link,N
F566CEF0:t2:A5:local,AC:disk_log_sup
F566CED8:t2:AD:$initial_call,HF566CF04
F566CF04:t3:AA:supervisor,AC:disk_log_sup,I1
F566CEE4:t2:AA:$ancestors,HF566CF14
F566CF14:lAF:kernel_safe_sup|HF566CF40
F566CF40:lAA:kernel_sup|HF566CF48
F566CF48:lP<0.9.0>|N
=proc_dictionary:<0.81.0>
HF579E6E0
HF579E6EC
=proc_stack:<0.81.0>
0xf56d3498:SReturn addr 0x81903014 (proc_lib:init_p_do_apply/3 + 28)
y0:N
y1:A8:infinity
y2:AF:disk_log_server
y3:HF56D31C8
y4:AF:disk_log_server
y5:P<0.33.0>
0xf56d34b4:SReturn addr 0x1CC8E0 (<terminate process normally>)
y0:SCatch 0x81903024 (proc_lib:init_p_do_apply/3 + 44)
=proc_heap:<0.81.0>
F56D31C8:t2:A5:state,N
F579E6E0:t2:AD:$initial_call,HF579E6F8
F579E6F8:t3:AF:disk_log_server,A4:init,I1
F579E6EC:t2:AA:$ancestors,HF579E708
F579E708:lAF:kernel_safe_sup|HF579E710
F579E710:lAA:kernel_sup|HF579E718
F579E718:lP<0.9.0>|N
=proc_dictionary:<0.94.0>
HF568DC20
HF568DC2C
=proc_stack:<0.94.0>
0xf56b6088:SReturn addr 0x81903014 (proc_lib:init_p_do_apply/3 + 28)
y0:N
y1:A8:infinity
y2:A5:timer
y3:N
y4:AC:timer_server
y5:P<0.33.0>
0xf56b60a4:SReturn addr 0x1CC8E0 (<terminate process normally>)
y0:SCatch 0x81903024 (proc_lib:init_p_do_apply/3 + 44)
=proc_heap:<0.94.0>
F568DC20:t2:AD:$initial_call,HF568DC38
F568DC38:t3:A5:timer,A4:init,I1
F568DC2C:t2:AA:$ancestors,HF568DC48
F568DC48:lAF:kernel_safe_sup|HF568DC50
F568DC50:lAA:kernel_sup|HF568DC58
F568DC58:lP<0.9.0>|N
=atoms
'Argument__5'
'Argument__6'
bitsize
is_bitstr
comp
arith
send_op
list_op
comp_op
bool_op
arith_op
old_type_test
new_type_test
guard_bif
behaviour
b2345
a2345
'-format_stacktrace1/4-fun-0-'
exited_size
op_type
is_op
n_spaces
count_nl
format_value
mf_to_string
mfa_to_string
brackets_to_parens
pp_arguments
format_op
format_errstr_call
origin
sep
format_stacktrace2
format_stacktrace1
argss
n_args
restricted_shell_started
restricted_shell_stopped
shell_undef
restricted_shell_bad_return
restricted_shell_disallowed
explain_reason
is_stacktrace
analyze_exception
format_call
all_white
'"'
'\''
eval_str
sendw
no_prog_name
error_message
flush_receive
'Argument__3'
'Argument__4'
'-add_element/2-fun-0-'
'-del_element/2-fun-0-'
'-union/2-fun-0-'
'-union/2-fun-1-'
'-intersection/2-fun-0-'
'-intersection/2-fun-1-'
'-subtract/2-fun-0-'
'-is_subset/2-fun-0-'
filter_set
fold_set
intersection1
union1
del_bkt_el
add_bkt_el
'-internal_extend/3-fun-0-'
'-internal_dirty_work/2-fun-0-'
'-log_work/3-fun-0-'
'-flush/2-fun-0-'
'-current_snapshot/1-fun-0-'
'-requeue_messages/1-fun-0-'
'-requeue_messages/1-fun-1-'
'-requeue_messages/1-lc$^0/1-0-'
'-requeue_messages/1-lc$^1/1-1-'
'-accumulate_requeues/2-fun-0-'
'-requeue/3-lc$^1/1-1-'
'-requeue/3-lc$^0/1-0-'
'-requeue/3-lc$^2/1-2-'
'-internal_integrate_messages/2-fun-0-'
'-internal_integrate1/2-fun-1-'
'-internal_integrate1/2-fun-0-'
'-perform_work/3-fun-0-'
tied
perform_work_item
perform_work
internal_integrate1
internal_integrate_messages
replay
accumulate_requeues
requeue_messages
unrecognised_persister_log_format
unsupported_persister_log_format
check_version
internal_load_snapshot
prune_table
persist_snapshot
txns
current_snapshot
do_reply
do_noreply
compute_timeout
compute_deadline
time_diff
later_ms
maybe_take_snapshot
take_snapshot_and_save_old
take_snapshot
base_filename
log_work
complete
internal_rollback
internal_commit
internal_dirty_work
internal_extend
pstate
psnapshot
queues
force_snapshot
guid
'-all_ch_record/0-lc$^0/1-0-'
'-remove_consumer/3-fun-0-'
'-remove_consumers/2-fun-0-'
'-move_consumers/3-fun-0-'
'-handle_ch_down/2-lc$^0/1-0-'
'-persist_acks/3-lc$^0/1-0-'
'-all_tx_record/0-lc$^0/1-0-'
'-all_tx/0-lc$^0/1-0-'
'-collect_messages/2-fun-0-'
'-purge_message_buffer/2-lc$^0/1-0-'
'-purge_message_buffer/2-lc$^1/1-1-'
'-purge_message_buffer/2-fun-0-'
'-i/2-lc$^0/1-3-'
'-i/2-lc$^1/1-2-'
'-i/2-lc$^3/1-1-'
'-i/2-lc$^2/1-0-'
unhandled_info
exclusive_consume_unavailable
queue_owned_by_another_connection
not_empty
messages_unacknowledged
acks_uncommitted
messages_uncommitted
consumers
messages_ready
purge_message_buffer
collect_messages
process_pending
record_pending_acks
record_pending_message
is_tx_persistent
mark_tx_persistent
all_tx
all_tx_record
erase_tx
store_tx
tx
txn
lookup_tx
do_if_persistent
rollback_transaction
rollback_work
commit_transaction
extend_transaction
persist_work
dirty_work
persist_auto_ack
persist_acks
persist_delivery
clear_decoded_content
persist_message
qname
send_command
maybe_send_reply
is_unused
run_poke_burst
check_exclusive_access
mismatch
check_queue_owner
cancel_holder
handle_ch_down
should_auto_delete
possibly_unblock
move_consumers
remove_consumers
remove_consumer
add_consumer
deliver_or_enqueue_n
deliver_or_enqueue
attempt_delivery
not_offered
offered
can_send
consumer
record_current_channel_tx
ch_record_state_transition
is_ch_blocked
all_ch_record
store_ch_record
ch_record
ch
lookup_ch
'G2'
'G1'
'$FUN'
'$MOD'
'-append/1-lc$^0/1-0-'
'-append/2-lc$^0/1-0-'
'-info/2-fun-0-'
'-cursor_process/7-fun-0-'
'-abstract/3-fun-0-'
'-abstract/3-lc$^0/1-0-'
'-abstract/3-fun-1-'
'-depth/2-fun-0-'
'-depth_fun/1-fun-0-'
'-depth_fun/1-fun-1-'
'-abstr_term/2-lc$^0/1-0-'
'-flatten_abstr/4-fun-0-'
'-le_info/2-lc$^1/1-1-'
'-le_info/2-lc$^0/1-0-'
'-join_merge_info/5-lc$^1/1-1-'
'-join_merge_info/5-lc$^0/1-0-'
'-opt_info/1-lc$^0/1-0-'
'-opt_info/1-lc$^1/1-1-'
'-prep_le/2-fun-0-'
'-prep_le/2-lc$^0/1-0-'
'-prep_le/2-fun-1-'
'-prep_qlc_lc/4-fun-0-'
'-prep_qlc_lc/4-fun-1-'
'-qlc_sort_info/2-lc$^1/1-1-'
'-qlc_sort_info/2-lc$^0/1-0-'
'-qlc_sort_info/2-fun-0-'
'-qlc_sort_info/2-lc$^3/1-3-'
'-qlc_sort_info/2-lc$^2/1-2-'
'-sort_info/3-lc$^0/1-0-'
'-sort_info/3-lc$^2/1-2-'
'-sort_info/3-lc$^1/1-1-'
'-sort_info/3-lc$^4/1-4-'
'-sort_info/3-lc$^3/1-3-'
'-pjoin/4-fun-0-'
'-pref_join/5-lc$^1/1-1-'
'-pref_join/5-lc$^0/1-0-'
'-pref_join/5-lc$^3/1-3-'
'-pref_join/5-lc$^2/1-2-'
'-pref_join/5-lc$^5/1-5-'
'-pref_join/5-lc$^4/1-4-'
'-pref_merge/7-lc$^0/1-0-'
'-pref_merge/7-lc$^1/1-1-'
'-opt_le/2-lc$^0/1-0-'
'-opt_le/2-fun-0-'
'-opt_le/2-fun-1-'
'-opt_le/2-fun-2-'
'-maybe_sort/4-lc$^0/1-0-'
'-skip_lookup_filters/2-lc$^0/1-0-'
'-setup_le/3-fun-1-'
'-setup_le/3-fun-2-'
'-setup_le/3-fun-3-'
'-setup_le/3-fun-4-'
'-setup_le/3-fun-0-'
'-setup_quals/4-fun-0-'
'-setup_quals/4-fun-1-'
'-setup_quals/4-fun-2-'
'-setup_quals/4-fun-3-'
'-setup_join/6-lc$^0/1-0-'
'-setup_join/6-lc$^1/1-1-'
'-setup_join/6-lc$^2/1-2-'
'-setup_join/6-lc$^3/1-3-'
'-setup_join/6-lc$^4/1-4-'
'-setup_join/6-fun-0-'
'-setup_join/6-fun-1-'
'-flat_goto/1-fun-0-'
'-find_join_data/3-lc$^0/1-0-'
'-table_handle/3-fun-0-'
'-table_handle/3-fun-1-'
'-table_handle/3-fun-2-'
'-open_file/3-fun-0-'
'-open_file/3-fun-1-'
'-file_loop/4-fun-0-'
'-file_loop/4-fun-1-'
'-file_loop_read/4-fun-0-'
'-sort_cursor_input/2-fun-0-'
'-sort_cursor_list_output/3-fun-0-'
'-sort_cursor_list_output/3-fun-1-'
'-sort_cursor_list_output/3-fun-2-'
'-write_terms/2-fun-0-'
'-unique_cache/4-fun-1-'
'-unique_cache/4-fun-3-'
'-unique_cache/4-fun-0-'
'-unique_cache/4-fun-2-'
'-unique_cache/4-fun-4-'
'-unique_cache/4-fun-5-'
'-unique_cache/4-fun-6-'
'-unique_cache/4-fun-7-'
'-unique_cache/4-fun-8-'
'-sort_list/6-fun-0-'
'-sort_list/6-fun-1-'
'-sort_list_output/1-fun-0-'
'-file_sort_handle/7-fun-0-'
'-file_sort_handle/7-fun-1-'
'-del_table/1-fun-0-'
'-empty_table/1-fun-0-'
'-append_loop/3-fun-0-'
'-no_dups/2-fun-0-'
'-cache/4-fun-0-'
'-cache_recall/2-fun-0-'
'-ucache3/7-fun-0-'
'-ucache_recall/3-fun-0-'
'-lcache2/4-fun-0-'
'-del_lcache/1-fun-0-'
'-tag_objects2/2-fun-0-'
'-untag_objects2/1-fun-0-'
'-same_keys2/8-fun-0-'
'-same_keys2/8-fun-1-'
'-same_keys2/8-fun-2-'
'-same_loop1/7-fun-0-'
'-same_keys1/9-fun-0-'
'-same_keys1/9-fun-1-'
'-same_keys/7-fun-0-'
'-same_keys_cache/9-fun-0-'
'-same_keys_cache/9-fun-1-'
'-same_keys_cache/9-fun-2-'
'-same_keys_cache/9-fun-3-'
'-loop_same_keys/7-fun-0-'
'-same_keys_file/9-fun-0-'
'-same_keys_file/9-fun-1-'
'-same_keys_file/9-fun-2-'
'-same_keys_file/9-fun-3-'
'-same_keys_file_write/7-fun-0-'
'-loop_keys_file/5-fun-0-'
'-read_merge_join/3-fun-0-'
'-end_all_merge_joins/0-fun-0-'
'-end_all_merge_joins/0-lc$^0/1-0-'
'-lookup_join/5-fun-0-'
'-lookup_join/5-fun-1-'
'-lookup_join/5-fun-3-'
'-lookup_join/5-lc$^1/1-1-'
'-lookup_join/5-fun-2-'
'-lookup_join/5-lc$^0/1-0-'
'-maybe_error_logger/2-fun-0-'
'-maybe_error_logger/2-fun-1-'
'-expand_stacktrace/1-fun-0-'
'-local_post/1-fun-0-'
throw_reason
throw_file_error
family_union
relation_to_family
relation
grd
local_post
post_funs
write_binary_terms
expand_stacktrace
format_stacktrace
maybe_error_logger
lookup_join
decr_list_size
tmp_merge_file
merge_join_id
end_all_merge_joins
join_read_terms
read_merge_join
write_merge_join
'$_qlc_merge_join_tmpfiles_'
joining
init_merge_join
end_merge_join
loop_keys_file
write_same_keys
same_keys_file_write
same_keys_file
loop_keys
loop_same
loop_same_keys
same_keys_cache
same_keys
same_keys1
same_loop1
same_keys2
merge_join2
merge_join1
merge_join
untag_objects2
untag_objects
tag_objects2
tag_objects
del_lcache
t2b
lcache_write
lcache2
lcache1
'$_qlc_cache_tmpfiles_'
lcache
ucache_recall
ucache3
ucache
cache_recall
no_dups
append_loop
empty_table
del_table
file_sort_handle
sort_cache2
sort_cache
sort_handle
sort_list_output
sort_list
unique_list
unique_sort_list
unique_cache_post
caching
unique_cache
sort_cursor_input_read
size_bin
write_terms
tmp_filename
sort_options_global_tmp
sort_cursor_file
sort_cursor_list_output
sort_cursor_input
file_loop_read
file_loop2
terms
file_loop
table_handle
find_join_data
next_state
next_after
flat_goto
join_unique_cache
setup_join
setup_quals
sorting
setup_le
setup_qlc
cannot_carry_out_join
not_a_qnum
opt_join
activate_join_lookup_filter
skip_lookup_filters
maybe_sort
no_cache_of_first_generator
opt_le
size_of_qualifier
join_opt
size_of_constant_prefix
eq_template_columns
equal_template_columns
no_lookup_to_carry_out
check_lookup_option
no_join_to_carry_out
check_join_option
sort_order
sort_sort_info
table_sort_info
join_indices
join_qual_data
pref_merge
pref_lookup
pref_join
pjoin
prep_join
pos_vals_max
usort_needed
pos_vals
find_const_position_idx
find_const_positions
short_list
sort_tmpdir
sort_unique
orders
sort_info
qlc_sort_info
prep_qlc
prep_sort
prep_simple_qlc
'SQV'
may_create_simple
prep_gen
prep_generator
simple_v1
prep_qlc_lc
eval_le
unsupported_qlc_handle
prep_le
prepare_qlc
opt_info
join_lookup_info
list2op
'P'
join_merge_info
join_info
qual_info
qlc_join
optz
simple_qlc
qlc_list
prepared
le_info
template_state
stop_cursor
qlc_cursor_pid_no_longer_exists
next_loop
fold_loop
vars
aux_name1
'V'
flatten_abstr
abstr_list
abstr_term
abstract_term
depth_tuple
depth_list
depth1
depth_fun
'...'
special
wait_for_request
answer
caught
parent_fun_caught
cursor_process
is_keyposs
is_keypos
is_proper_list
atom_option
nested_loop
descending
spawn_options
n_elements
flat
unique
unique_all
cache_all
order
no_files
max_list_size
max_lookup
no_match_spec
qlc_table
transform_expression
string_to_handle
all_remaining
next_answers
qlc_sort
abstract_code
not_a_query_list_comprehension
binary_generator
too_complex_join
too_many_joins
nomatch_filter
nomatch_pattern
used_generator_variable
tmpdir_usage
throw_error
not_cursor_owner
delete_cursor
qlc_cursor
cursor
qlc_append
allowed
qlc_opt
qlc_handle
get_handle
'-recover/0-fun-0-'
'-recover/0-fun-1-'
'-declare/5-fun-0-'
'-infos/2-lc$^0/1-0-'
'-route/3-fun-0-'
'-route/3-fun-1-'
'-match_bindings/2-fun-0-'
'-match_bindings/2-fun-1-'
'-match_bindings/2-fun-2-'
'-match_bindings/2-fun-3-'
'-match_bindings/2-fun-4-'
'-match_bindings/2-fun-5-'
'-match_bindings/2-fun-6-'
'-match_bindings/2-fun-7-'
'-match_bindings/2-fun-8-'
'-match_bindings/2-fun-9-'
'-match_bindings/2-fun-10-'
'-match_bindings/2-fun-11-'
'-match_bindings/2-fun-12-'
'-match_bindings/2-fun-13-'
'-match_bindings/2-lc$^0/1-0-'
'-lookup_qpids/1-fun-0-'
'-delete_exchange_bindings/1-lc$^0/1-0-'
'-delete_queue_bindings/1-fun-0-'
'-delete_transient_queue_bindings/1-fun-0-'
'-delete_queue_bindings/2-lc$^0/1-0-'
'-delete_queue_bindings/2-lc$^1/1-1-'
'-call_with_exchange/2-fun-0-'
exchange_and_queue_not_found
exchange_not_found
queue_not_found
'-call_with_exchange_and_queue/3-fun-0-'
durability_settings_incompatible
'-add_binding/4-fun-0-'
binding_not_found
'-delete_binding/4-fun-0-'
'-binding_action/5-fun-0-'
'-list_bindings/1-lc$^0/1-0-'
'-delete/2-fun-0-'
'-delete/2-fun-1-'
'-list_exchange_bindings/1-lc$^0/1-0-'
'-list_queue_bindings/1-lc$^0/1-0-'
list_queue_bindings
list_exchange_bindings
unconditional_delete
in_use
conditional_delete
maybe_auto_delete
last_topic_match
topic_matches1
topic_matches
split_topic_key
headers_match
parse_x_match
default_headers_match_kind
route_with_reverse
list_bindings
sync_binding
binding_action
delete_binding
call_with_exchange_and_queue
call_with_exchange
contains
exchanges_for_queue
delete_transient_forward_routes
delete_forward_routes
delete_exchange_bindings
lookup_qpids
match_routing_key
match_bindings
sort_arguments
'P_basic'
basic_message
publish
bad_argument
infos
lookup_or_die
assert_type
command_invalid
'-is_queue/1-fun-0-'
'-len/1-lc$^0/1-0-'
'-to_list/1-lc$^2/1-2-'
'-to_list/1-lc$^1/1-1-'
'-to_list/1-lc$^0/1-0-'
'-join/2-fun-1-'
'-join/2-fun-0-'
r2f
pqueue
handle_common_termination
process_msg
uniform_s
adjust_timeout_state
handle_post_hibernate
post_hibernate
handle_pre_hibernate
pre_hibernate
process_next_msg
drain
extend_backoff
backoff
'$gen_pcast'
'$gen_pcall'
'-run_bindings/2-fun-0-'
routed
not_delivered
unroutable
check_delivery
run_bindings
no_state
'-recover_durable_queues/0-fun-0-'
'-recover_durable_queues/0-fun-1-'
'-recover_durable_queues/0-fun-2-'
'-recover_durable_queues/0-fun-3-'
'-recover_durable_queues/0-fun-4-'
'-recover_durable_queues/0-fun-5-'
'-recover_durable_queues/0-fun-6-'
'-recover_durable_queues/0-fun-7-'
'-recover_durable_queues/0-fun-8-'
'-recover_durable_queues/0-fun-10-'
'-recover_durable_queues/0-fun-9-'
'-recover_durable_queues/0-fun-11-'
'-recover_durable_queues/0-fun-12-'
'-recover_durable_queues/0-fun-13-'
'-recover_durable_queues/0-fun-14-'
'-recover_durable_queues/0-fun-15-'
'-recover_durable_queues/0-fun-16-'
e
'-recover_durable_queues/0-fun-17-'
'-internal_declare/2-fun-0-'
'-with/3-fun-0-'
'-with/2-fun-0-'
'-with_or_die/2-fun-0-'
'-info_all/1-fun-0-'
'-info_all/2-fun-0-'
'-stat_all/0-fun-0-'
'-commit_all/2-fun-0-'
'-commit_all/2-fun-1-'
queue_disappeared
'-rollback_all/2-fun-0-'
rollback
'-rollback_all/2-fun-1-'
'-notify_down_all/2-fun-0-'
notify_down
'-notify_down_all/2-fun-1-'
'-limit_all/3-fun-0-'
limit
'-limit_all/3-fun-1-'
delete_queue_bindings
'-internal_delete/1-fun-0-'
delete_transient_queue_bindings
'-on_node_down/1-fun-0-'
'-on_node_down/1-fun-1-'
'-on_node_down/1-fun-2-'
'-on_node_down/1-fun-3-'
'-on_node_down/1-fun-4-'
'-on_node_down/1-fun-5-'
'-on_node_down/1-fun-6-'
'-on_node_down/1-fun-7-'
some
'-on_node_down/1-fun-8-'
no_column_fun
'-on_node_down/1-fun-9-'
'-on_node_down/1-fun-10-'
'-on_node_down/1-fun-11-'
'-on_node_down/1-fun-12-'
constant_columns
n_leading_constant_columns
template
match_specs
'-on_node_down/1-fun-13-'
qlc_v1
fil
'-on_node_down/1-fun-14-'
qlc_lc
'-on_node_down/1-fun-15-'
'-safe_pmap_ok/3-lc$^0/1-0-'
'-safe_pmap_ok/3-fun-0-'
'-safe_pmap_ok/3-fun-1-'
'-safe_pmap_ok/3-fun-2-'
safe_pmap_ok
pseudo_queue
internal_delete
notify_sent
basic_cancel
basic_consume
basic_get
claim_queue
limit_all
notify_down_all
rollback_all
commit_all
pcast
requeue
redeliver
deliver_immediately
delivery
stat_all
info_all
pcall
with_or_die
add_default_binding
start_queue_process
store_queue
internal_declare
declare
recover_durable_queues
'Hugepagesize'
'HugePages_Surp'
'HugePages_Rsvd'
'HugePages_Free'
'HugePages_Total'
'VmallocChunk'
'VmallocUsed'
'VmallocTotal'
'Committed_AS'
'CommitLimit'
'WritebackTmp'
'Bounce'
'NFS_Unstable'
'Quicklists'
'PageTables'
'SUnreclaim'
'SReclaimable'
'Slab'
'Mapped'
'AnonPages'
'Writeback'
'Dirty'
'SwapFree'
'SwapTotal'
'Mlocked'
'Unevictable'
'Inactive(file)'
'Active(file)'
'Inactive(anon)'
'Active(anon)'
'Inactive'
'Active'
'SwapCached'
'Cached'
'Buffers'
'MemFree'
'-get_total_memory/1-fun-0-'
'-get_total_memory/1-lc$^0/1-0-'
'-get_total_memory/1-fun-1-'
'-get_total_memory/1-fun-2-'
read_proc_file
freebsd_sysctl
parse_line_sunos
parse_line_linux
parse_line_mach
get_mem_info
'MemTotal'
page_size
'Pages inactive'
'Pages active'
'Pages free'
'Pages wired down'
'Memory size'
command_not_found
get_mem_limit
get_vm_limit
emit_update_info
internal_update
set_vm_memory_high_watermark
get_vm_memory_high_watermark
set_check_interval
get_check_interval
get_total_memory
'-alert/2-fun-0-'
alert
not_understood
alarms
'-generate_table/1-fun-0-'
'-generate_array/1-fun-0-'
incorrect_empty_content_body_frame_size
octet
shortint
longint
longlongint
shortstr
encode_property
content_properties_illegal_bit_value
content_properties_values_overflow
bit
long_string_to_binary
short_string_to_binary
generate_array
generate_table
array_to_binary
table_to_binary
void
decimal
byte
signedint
double
field_value_to_binary
table_field_to_binary
create_frame
build_heartbeat_frame
build_content_frames
encode_properties
maybe_encode_properties
content
build_simple_content_frames
method_id
encode_method_fields
build_simple_method_frame
'-trigger/2-lc$^0/1-0-'
rabbitmq_hook
notify_remote
trigger
b64d_ok
b64d
b64e
decode_tuple
encode_tuple
strip_illegal
strip_spaces
mime_decode_to_string
decode_to_string
mime_decode_l
decode_l
mime_decode
encode_l
encode
'-print/6-fun-0-'
'-print/6-fun-1-'
indent
while_fail
last_depth
cind_element
cind_tail
cind_list
cind_rec
cind_field
cind_fields_tail
cind_record
no_good
cind_tag_tuple
cind
printable_list1
printable_bin1
printable_bin
list_length_tail
list_length
print_length_list1
print_length_list
print_length_field
print_length_fields
print_length_record
print_length_tuple
print_length
write_list
write_field
write_fields_tail
write_fields
pp_binary
pp_element
pp_tail
pp_list
rec_indent
field
pp_field
pp_fields_tail
pp_record
pp_tag_tuple
pp
max_cs
'-fwrite_g/1-lc$^0/1-0-'
'-fwrite_g/1-lc$^1/1-1-'
lowercase
cond_lowercase
flat_trunc
adjust
prefixed_integer
unprefixed_integer
iolist_to_chars
log2floor
int_pow
int_ceil
insert_exp
insert_decimal
fixup
scale
fwrite_g_1
mantissa_exponent
float_data
float_f
fwrite_f
float_exp
float_man
float_e
fwrite_e
decr_pc
pcount
collect_cc
pad_char
field_value
precision
field_width
collect_cseq
'-to_lower/1-lc$^0/1-0-'
'-to_upper/1-lc$^0/1-0-'
'-join/2-lc$^0/1-0-'
to_upper
to_lower
to_upper_char
to_lower_char
sub_string
centre
r_pad
l_pad
strip_right
strip_left
s_word
sub_word
w_count
both
words
copies
tokens2
tokens1
substr2
substr1
cspan
span
rstr
str
rchr
chr
'-del_object_bag/6-lc$^0/1-0-'
'-dirty_select/3-lc$^0/1-0-'
'-create_fun/3-lc$^0/1-0-'
'-create_fun/3-fun-0-'
'-add_ram_index/2-fun-0-'
db_match
del_index_info
add_index_info
add_ram_index
make_ram_index
create_fun
init_disc_index
delete_transient_index
tab2tmp_filename
tab2filename
r_keys
dirty_read2
realkeys
clear_index2
del_object_bag
del_object_index2
del_ixes
delete_index2
add_index2
'-convert_list/1-lbc$^0/2-0-'
match_check_size
as_list
set_bit_type
make_bit_type
get_float
get_integer
get_value_utf16_le
get_value_utf16_be
unsupported_utf8
utf8_to_int
utf8_size
add_bin_binding
coerce_to_float
match_field_1
match_bits_1
bin_gen_field
int_to_utf16_le
int_to_utf16_be
int_to_utf8
signed
unsigned
utf32
utf16
eval_exp_field
eval_exp_field1
unit
eval_field
convert_list
rabbit_tcp_client_sup
tcp_listener_sup
tcp_listener
tcp_client_sup
tcp_acceptor_sup
tcp_acceptor
rabbit_writer
rabbit_tracer
rabbit_tests
rabbit_reader
rabbit_plugin_activator
rabbit_net
rabbit_multi
rabbit_load
rabbit_limiter
rabbit_heartbeat
rabbit_framing_channel
rabbit_framing
rabbit_dialyzer
rabbit_control
rabbit_channel
rabbit_binary_parser
rabbit_basic
rabbit_amqqueue_sup
rabbit_amqqueue_process
priority_queue
gen_server2
headers
topic
fanout
direct
none_active
mnesia_real_loader
'-init_receiver/5-fun-0-'
'-table_init_fun/1-fun-0-'
'-make_table_fun/2-fun-0-'
'-send_table/3-fun-0-'
'-prepare_copy/3-fun-0-'
'-reader_funcs/4-fun-0-'
'-reader_funcs/4-fun-1-'
'-reader_funcs/4-fun-2-'
'-reader_funcs/4-fun-3-'
'-finish_copy/4-fun-0-'
dat2bin
cleanup_tab_copier
send_packet
dets_bchunk
reader_funcs
send_more
tab_copier_prepare
prepare_copy
receiver_died
mnesia_table_sender
calc_nokeys
flush_subcrs
nobin
subscr_receiver
finish_copy
old_node_init_table
old_protocol
make_table_fun
actual_tabrec
old_init_table_complete
mnesia_table_receiver
do_init_table
wait_on_load_complete
spawned_receiver
start_receiver
table_init_fun
mnesia_table_sender_node
init_receiver
do_snmpify
snmpify
do_get_network_copy
try_net_load_table
init_index
do_get_disc_copy2
'-stop/0-fun-0-'
'-tm_mnesia_down/1-fun-0-'
'-tm_add_copy/2-fun-0-'
'-tm_del_copy/2-fun-0-'
'-tm_change_table_copy_type/3-fun-0-'
'-args2cp/1-fun-0-'
'-check_tables/1-lc$^0/1-0-'
'-check_tables/1-lc$^1/1-1-'
'-check_tables/1-lc$^2/1-2-'
'-arrange_retainers/3-lc$^0/1-0-'
'-writers/1-fun-0-'
'-send_activate/5-lc$^0/1-0-'
'-init/1-lc$^0/1-0-'
'-prepare_ram_tab/5-fun-0-'
'-retainer_loop/1-lc$^0/1-0-'
'-do_stop/1-fun-1-'
'-do_del_retainers/2-lc$^0/1-0-'
convert_cp_record
get_checkpoint_val
get_latest_val
get_val
get_records
stop_iteration
init_tabs
check_iter
do_change_copy
send_retainer2
send_retainer
find_retainer
do_add_retainer
tm_remote_prepare
do_add_copy
do_del_copy
do_del_retainer
do_del_retainer2
do_del_retainers
del_chkp_info
deactivate_tab
maybe_activate
no_parent
deactivated
change_copy
add_retainer
del_retainer
del_copy
add_copy
iter_end
iter_begin
retainer_loop
retainer_delete
retainer_fixtable
retainer_next
retainer_first
retainer_put
retainer_get
traverse_dcd
prepare_ram_tab
mnesia_retainer
retainer_create
tab2retainer
add_chkp_info
prepare_tab
mnesia_pending_checkpoint
start_retainer
activated
send_activate
add_pending_node
add_pending
compute_union
mnesia_union
collect_pending
do_activate
writers
filter_remote
select_writers
arrange_retainers
check_tables
allow_remote
ignore_new
args2cp
remote_deactivate
get_checkpoint
map_call
tm_add_copy
send_retain
send_group_retain
retain
enter_still_pending
exit_pending
checkpoint_args
'-loop/1-fun-0-'
'-insert_op/5-lc$^0/1-0-'
'-insert_op/5-fun-0-'
'-insert_op/5-fun-1-'
'-temp_set_master_nodes/0-lc$^0/1-0-'
regulated
regulate
regulator_loop
regulator_init
raw_dump_table
temp_set_master_nodes
rename_failed
ensure_rename
del_opened_tab
prepare_open
open_dcl
open_disc_copies
open_files
init_indecies
del_index_table
temp
insert_op
disc_delete_indecies
dcl
opened_dumper
disc_delete_table
dets_cleared
dets_incr_counter
cleared
dets_updated
dets_insert
disc_insert
insert_ops
fast_schema_update
schema_update
perform_update
do_insert_rec
insert_rec
insert_recs
mnesia_dumper_dets
do_perform_dump
perform_dump
write_threshold
mnesia_adjust_log_writes
adjust_log_writes
write_cache_close
truncate_at_close2
position_close2
position2
pwrite_close2
fwrite_close2
fsync
fwrite_header
open_truncate
open_update
inc
inc_wrap
int_split_bins
ext_split_bins
fff
find_first_file
read_size_file
write_size_file
loop_index
print_index_file
truncate_index_file
index_file_trunc
to_8_bytes
write_index_file
parse_index
ext_file_open
int_file_open
wrap_ext_log
wrap_int_log
is_head
repair_err
done_scan
scan_f
scan_f_read
lh
mark
ext_log_head
new_ext_file
int_log_head
new_int_file
existed
yes_not_closed
read_chunk_ro
handle_chunk_ro
do_handle_chunk_ro
do_chunk_read_only
read_chunk
handle_chunk
do_handle_chunk
write_cache_timer_is_running
'-do_open/3-fun-0-'
'-open_distr_rpc/3-fun-0-'
'-find_old_nodes/3-lc$^0/1-0-'
'-do_internal_open/6-fun-0-'
'-do_accessible_logs/0-fun-0-'
'-do_accessible_logs/0-fun-1-'
dist_pids
get_local_pid
which_groups
do_accessible_logs
leave
erase_log
result
start_log
find_old_nodes
open_distr_rpc
get_members
disk_log_names
distr
dist_open
disk_log_stopped
repair_read_only
'-ichunk_bad_end/6-fun-0-'
'-close_disk_log/1-fun-0-'
'-do_info/2-lc$^0/1-0-'
'-multi_req/2-fun-0-'
'-multi_req/2-fun-1-'
'-wrap_file_extensions/1-fun-0-'
'-notify/2-fun-0-'
'-notify_owners/1-fun-0-'
error_status
state_err
state_ok
cache_error
notify_owners
notify_owners_wrap
add_ext
read_index_file
wrap_file_extensions
merge_head
req2
monitor_request
get_near_pid
nearby_pid
lreq
sreq
multi_req
send_reply
mf_int_chunk_step
do_chunk_step
chunk_read_only
mf_int_chunk
mf_int_chunk_read_only
do_chunk
trunc_wrap
truncate_at
do_trunc
mf_sync
do_sync
mf_write_cache
do_write_cache
halt_write
halt_write_full
xsz
logl
bsize
mf_ext_log
mf_int_log
do_log
do_unblock
do_block
owners
no_current_bytes
no_current_items
no_items
current_file
no_overflows
no_written_items
get_log_pids
get_wrap_size
do_info
end_of_log
no_such_log
nonode
need_repair
invalid_header
node_already_open
not_a_log_file
not_internal_wrap
invalid_index_file
do_format_error
mf_ext_close
mf_int_close
close_disk_log2
close_disk_log
wrap_ext
mf_ext_open
halt_ext
ext_open
wrap_int
mf_int_open
halt_int
int_open
do_open2
mf_ext_inc
mf_int_inc
do_inc_wrap_file
check_size
check_head
change_size_wrap
do_change_size
check_bytes
check_bytes_list
terms2bins
mk_head
name_already_open
open_read_only
open_read_write
compare_arg
rename_file
is_owner
unblock_pid
arg_mismatch
add_pid
opening_pid
proc_q
do_fast_exit
do_exit
do_close2
close_user
close_owner
do_close
do_change_notify
rflat
log_end
log_loop
not_blocked_by_pid
not_blocked
halt_log
same_file_name
failed
is_full
new_size_too_small
blocked_log
format_external
handle
size_mismatch
check_wrap_arg
read_size_file_version
wrap
head_func
linkto
check_arg
ll_open
accessible_logs
no_continuation
chunk_info
ichunk_step
chunk_step
bichunk_end
bichunk
corrupt_log_file
ichunk_bad_end
bins2terms
ichunk_end
continuation
ichunk
disk_log_pids
change_header
change_notify
change_size
inc_wrap_file
breopen
btruncate
lclose
balog_terms
remote_tab_sender
ram_overrides_dump
'-view/0-fun-0-'
'-view_file/2-fun-1-'
'-view_file/2-fun-0-'
'-do_backup_master/1-fun-0-'
'-select_tables/2-lc$^0/1-0-'
'-backup_schema/2-lc$^0/1-0-'
'-iterate/8-fun-0-'
'-iterate/8-fun-1-'
'-rec_filter/4-lc$^0/1-0-'
add_recs
insert_logchunk
load_dcl
insert_dcdchunk
dcd2ets
alog_terms
dcd
rec_filter
tab_receiver
send_records_unexpected_msg
send_records
copy_records
handle_last
checkpoint
latest
really_retain
handle_more
retainer
select_source
tab_copier
most_local_node
backup_tab
backup_schema
safe_write
select_tables
tables_and_cookie
do_backup_master
incremental
check_backup_arg_type
check_backup_args
backup_master
backup_args
view_file
nolog
view_only
previous_decision_log
confirm_log_dump
chunk_log
init_log_dump
needs_dump
prepare_prev
already_dumped
prepare_log_dump
read_only_mode
write_header
previous_log
verify_no_exists
decision_tab_name
decision_log_name
latest_log_name
previous_log_file
incr_log_writes
blog
sappend
alog
balog
dcd_version
dcl_version
dcd_log
dcl_log
decision_tab_header
decision_log_header
backup_log
trans_log
trans_log_header
schema_not_merged
time_threshold
mnesia_late_disc_load
'-try_schedule_late_disc_load/3-fun-0-'
'-multicall/2-lc$^0/1-0-'
'-late_disc_load/5-fun-0-'
'-handle_cast/2-fun-1-'
'-handle_cast/2-fun-2-'
'-handle_cast/2-lc$^0/1-0-'
maybe_async_late_disc_load
'-handle_cast/2-fun-3-'
'-code_change/3-lc$^0/1-0-'
'-code_change/3-lc$^1/1-1-'
'-maybe_log_mnesia_down/1-fun-0-'
'-initial_safe_loads/0-fun-0-'
'-initial_safe_loads/0-fun-1-'
'-change_table_access_mode/1-fun-0-'
'-change_table_access_mode/1-fun-1-'
'-user_sync_tab/1-fun-0-'
'-sync_and_block_table_whereabouts/4-lc$^0/1-0-'
'-sync_del_table_copy_whereabouts/2-lc$^0/1-0-'
'-opt_start_sender2/4-fun-0-'
'-load_and_reply/2-fun-0-'
storage_unknown
'-load_table_fun/1-fun-5-'
'-load_table_fun/1-fun-4-'
'-load_table_fun/1-fun-6-'
'-load_table_fun/1-fun-2-'
load_local_content
'-load_table_fun/1-fun-1-'
'-load_table_fun/1-fun-0-'
net_load_table
'-load_table_fun/1-fun-3-'
do_filter_active
filter_active
load_table_fun
load_and_reply
start_remote_sender
already_loading2
already_loading
opt_start_loader
copier_done
send_and_reply
opt_start_sender2
opt_start_sender
dump_and_reply
opt_start_worker
add_loader
add_worker
info_format
sync_del_table_copy_whereabouts
sync_and_block_table_whereabouts
user_sync_tab
mark_blocked_tab
is_tab_blocked
last_loader_down
drop_loaders
remove_early_messages
remove_loaders
reconfigure_tables
ram_only
local_master
local_only
last_consistent_replica
initial_safe_loads
active_remote
update_whereabouts
node_has_tabs
orphan_tables
inactive_copy_holders
log_later
maybe_log_mnesia_down
select_best
pick_next
sync_tab_timeout
get_state
sender_done
dumper_done
sync_tab
handle_sync_tabs
adopt_orphan
i_have_tab
adopt_orphans
tm_mnesia_down
late_load_filter
late_load
disc_load
late_loaders
block_table
schema_commit_lock
disc_load_intents
late_merge
deleted
update_where_to_write
start_regulator
remote_call
im_running
try_merge_schema
merging_schema
merge_schema_failed
connect_nodes2
schema_is_merged
try_schedule_late_disc_load
late_disc_load
schedule_late_disc_load
async_late_disc_load
forced_by_user
do_force_load_table
force_load_updated
get_disc_copy
disc_load_table
loader_done
del_other
net_load
add_other
unblock_controller
block_controller
mnesia_stopped
wait_for_tables_timeout
rec_tabs
tab_synced
sync_reply
sync_tabs
wait_for_init
reply_wait
wait_for_tables_init
do_wait_for_tables
async_dump_log
max_loaders
get_loaders
get_senders
'-lock/4-lc$^0/1-0-'
'-all_keys/4-lc$^0/1-0-'
'-index_match_object/6-lc$^0/1-0-'
'-index_read/6-lc$^0/1-0-'
'-foldl/6-fun-0-'
'-foldr/6-fun-0-'
'-table_info2/5-fun-1-'
'-table_info2/5-fun-0-'
'-frag_size/3-lc$^0/1-0-'
'-frag_memory/3-lc$^0/1-0-'
'-init_select/6-fun-0-'
'-init_select/6-fun-1-'
'-select_cont/3-fun-0-'
'-do_select/5-fun-0-'
'-do_select/5-lc$^0/1-0-'
'-do_select/5-fun-1-'
'-do_select/5-lc$^1/1-1-'
'-do_select/5-lc$^2/1-2-'
'-do_select/5-fun-2-'
'-do_select/5-fun-3-'
'-verify_numbers/2-fun-0-'
'-local_select/4-lc$^0/1-0-'
'-expand_cstruct/2-fun-0-'
'-expand_cstruct/2-lc$^0/1-0-'
'-expand_cstruct/2-fun-1-'
'-make_multi_add_frag/2-lc$^0/1-0-'
'-make_frag_names_and_acquire_locks/4-fun-0-'
'-replace_frag_hash/2-fun-0-'
'-adjust_before_split/1-fun-0-'
'-make_multi_del_frag/1-lc$^0/1-0-'
'-adjust_before_merge/1-fun-0-'
'-make_multi_add_node/2-lc$^0/1-0-'
'-make_multi_del_node/2-lc$^0/1-0-'
'-lookup_foreigners/1-lc$^0/1-0-'
good
'-frag_dist/1-lc$^0/1-0-'
shallow_dist
pick_count
deep_dist
sort_dist
bad
incr_node
incr_nodes
count_frag
key_to_n
key_to_frag_number
n_to_frag_name
key_to_frag_name
key_pos
record_to_frag_name
lookup_prop
n_doubles
next_n_to_split
props_to_frag_hash
no_hash
make_del_node
make_multi_del_node
make_add_node
make_multi_add_node
do_merge
adjust_before_merge
make_del_frag
make_multi_del_frag
do_split
adjust_before_split
replace_frag_hash
make_add_frag
make_frag_names_and_acquire_locks
verify_multi
make_multi_add_frag
make_deactivate
make_activate
del_frag
add_frag
list_pos
node_diff
insert_dist
rearrange_dist
set_frag_node
set_frag_nodes
expand_frag_cstructs
pick_props
verify_n_fragments
do_expand_cstruct
hash_state
hash_module
remote_collect
local_collect
do_remote_select
remote_select
local_select
match_spec_to_frag_numbers
verify_numbers
do_select
frag_sel_cont
frag_cont
init_select
remote_table_info
search_next
search_prev
search_last
search_first
frag_state
frag_size
frag_memory
n_fragments
foreign_key
n_disc_copies
n_disc_only_copies
n_ram_copies
base_table
node_pool
foreigners
frag_dist
table_info2
nomore
'-clear_fixtable/1-fun-0-'
'-clear_fixtable/2-fun-0-'
'-get_elements/2-lc$^0/1-0-'
'-do_arrange/5-fun-0-'
schema_ops
'-prepare_schema_items/3-lc$^0/1-0-'
'-get_transactions/0-fun-0-'
'-display_info/2-fun-0-'
'-display_info/2-fun-1-'
'-do_stop/1-fun-0-'
'-system_code_change/4-lc$^0/1-0-'
downgrade
tell_outcome
reconfigure_participants
send_to_pids
send_mnesia_down
reconfigure_coordinators
pformat
display_pid_info
search_pr_participant
search_pr_coordinator
pr_tid
pr_participant
coordinator
tr_status
rec_all
opt_term_to_binary
no_local
get_dirty_reply
rec_dirty
async_send_dirty
sync_send_dirty
ram_only_ops
commit_decision
commit_nodes
do_snmp
clear_index
commit_clear
del_object_index
commit_del_object
delete_index
commit_delete
commit_update
do_update_op
do_update
do_dirty
vote_no
tell_participants
schema_commit
sync_schema_commit
waiting_for_commit_ack
prepare_sync_schema_commit
acc_pre_commit
rec_acc_pre_commit
multi_commit
prepare_node
pick_node
prepare_nodes
check_prep
do_prepare_items
prepare_items
prepare_schema_items
do_arrange
prep_recs
t_commit
bad_activity
my_process_is_alive
wait_for_best_friend
activity_ended
intercept_best_friend
intercept_friends
propagate_store
opt_propagate_store
get_elements
erase_activity_id
friends
flushed
flush_downs
return_abort
decr
get_restarted
maybe_restart
do_commit_nested
apply_fun
nested_atomic
execute_transaction
insert_objs
do_copy_ets
copy_ets
execute_inner
execute_outer
mNeSia_nOn_TrAnSacTioN
tm_exit_pending
transaction_terminated
pid_search_delete
manage_fixtable
clear_fixtable
erase_ets_tabs
del_coord_store
add_coord_store
restore_stores
prep
recover_coordinator
prepare_pending_participants
prepare_pending_coordinators
process_dirty_queue
do_async_dirty
dirty_res
do_sync_dirty
tm_prepare
unblock_table
unblocked
unblock_me
sync_trans_serial
delete_transaction
new_tid
slog
sym_trans
start_outer
simple_commit
do_commit
vote_yes
commit_participant
tm_enter_pending
ask_commit
store_erased
del_store
restarted
new_store
mnesia_trans_store
sync_sym_trans
participant
add_store
do_abort
doit_loop
unblock_tab
block_tab
prepare_checkpoint
tmpid
tmlink
original_nodes
'-do_allow_garb/0-lc$^0/1-0-'
'-do_garb_decisions/0-lc$^0/1-0-'
'-get_mnesia_downs/0-lc$^0/1-0-'
'-get_master_node_tables/0-lc$^0/1-0-'
add_decision
arrange
send_decisions
announce
add_remote_decision
add_remote_decisions
bad_decision
merge_decisions
filter_aborted
filter_outcome
outcome
handle_early_msg
do_handle_early_msgs
handle_early_msgs
no_decision
decisions
do_log_master_nodes
do_log_mnesia_down
do_log_mnesia_up
starting_partitioned_network
announce_all
force_decision
what_decision
opt_dump_log
scan_decisions
decision_tab_file
mnesia_transient_decision
create_transient_decision
sync_trans_tid_serial
incr_trans_tid_serial
set_trans_tid_serial
trans_tid_serial
decision_tab_version
decision_tab
decision_log_version
decision_log
trans_tid
pre_commit
note_log_decision
note_log_decisions
save_decision_tab
decision_list
dump_decision_tab
confirm_decision_log_dump
chunk_decision_log
perform_dump_decision_log
prepare_decision_log_dump
dump_decision_log
close_decision_log
open_decision_log
decision_log_file
previous_decision_log_file
convert_old
chunk_decision_tab
close_decision_tab
open_decision_tab
load_decision_tab
still_pending
startup
presume_abort
presume_commit
wait_for_decision
check_what_happened
what_happened_remotely
asym_trans
what_happened
master_nodes_updated
log_master_nodes2
write_trans_log_header
badbytes
recovered
latest_log_file
get_mnesia_downs
log_mnesia_down
im_certain
tell_im_certain
latest_log
committed
do_log_decision
decision
note_outcome
note_master_nodes
note_down
note_up
transient_decision
note_decision
log_decision
do_garb_decisions
previous_transient_decisions
latest_transient_decision
do_allow_garb
allow_garb
check_overload
garb_decisions
start_garb
'-sort_queue/1-fun-0-'
'-sort_queue/1-fun-1-'
'-release_remote_non_pending/2-lc$^0/1-0-'
'-do_sticky_lock/4-lc$^0/1-1-'
'-do_sticky_lock/4-lc$^1/1-0-'
'-receive_wlocks/4-lc$^0/1-0-'
'-rlock_get_reply/4-fun-0-'
'-get_lock_queue/0-lc$^0/1-0-'
bytes2int
pid_to_pid_info
pid_info
cmp_pid_info
cmp_tid
rec_requests
send_requests
ixrlock
rlock_get_reply
return_granted_or_nodes
lookup_in_client
opt_lookup_in_client
flush_remaining
sticky_flush
receive_wlocks
get_rwlocks_on_nodes
get_wlocks_on_nodes
del_debug
mnesia_wlock_nodes
add_debug
need_lock
dirty_sticky_lock
'______STICK_____'
do_sticky_lock
sticky_lock
w_nodes
locks
key_delete_all
locked
removed
try_waiter
try_waiters_tab
try_waiters_obj
rearrange_queue
release_lock
release_locks
keyunique
do_release_tid
do_release_tids
set_read_lock_on_all_keys
sort_queue
check_queue
allowed_to_be_queued
bad_luck
check_lock
can_lock
granted
'______GLOBAL_____'
'______WHOLETABLE_____'
grant_lock
queued
cyclic
try_lock
try_sticky_lock
release_remote_non_pending
switch
get_index_table
ix_read
unstick
not_stuck
stuck_elsewhere
test_set_sticky
tid_released
receive_release_tid_acc
sync_release_tid
send_release_tid
async_release_tid
release_tid
not_granted
l_req_rec
l_request
'-set_debug_level/2-fun-0-'
'-set_debug_level/2-fun-1-'
'-do_change/2-fun-0-'
'-do_change/2-fun-1-'
do_prepare_stop
prepare_stop
del_subscr
add_subscr
not_active_local
do_change
what
patch_record
change_subscr
change
deactivate_table
unsubscribe_table
simple
'-core_file/4-fun-0-'
'-core_file/4-lc$^0/1-0-'
report_warning
mnesia_global_logger
report_info
mnesia_up
mnesia_overload
mnesia_checkpoint_deactivated
mnesia_checkpoint_activated
handle_system_event
handle_table_event
mnesia_table_event
handle_any_event
supervisor_spec
worker_spec
mnemosyne_sup
'-kill/0-fun-0-'
'-kill/0-fun-1-'
ensure_dead
add_event_handler
mnemosyne_procs
kernel_procs
supervisor_timeout
event_procs
per_cpu
detailed
'-util/1-fun-0-'
'-cpu_util_diff/3-fun-0-'
'-cpu_util_rel/3-fun-0-'
'-mk_rel_states/2-fun-0-'
'-state_list_sum/1-fun-0-'
'-measurement_server_start/0-fun-0-'
'-port_server_start/0-fun-0-'
data_mismatch
unexpected_type_id
hard_irq
nice_user
idle
steal
soft_irq
port_receive_cpu_util_entries
port_receive_cpu_util_entries_exit
port_receive_cpu_util
timeout_util
port_receive_util
port_garbage
timeout_uint32
port_exit
port_receive_uint32
port_server_flush_messages
port_server_handle_reply
port_server_loop
port_server_init
port_server_start
port_server_call
measurement_server_loop
unsupported_os
measurement_server_init
measurement_server_start
measurement_server_restart
measurement_server_call
negative_diff
ensure_positive_diff
val_diff2
val_diff
one_step_backwards
state_list_add
state_list_diff
state_list_sum
mk_rel_states
cpu_util_rel_det_pcpu
cpu_util_rel_det
cpu_util_rel_pcpu
cpu_util_rel
cpu_util
cpu_util_diff
sunify
get_util_measurement
irix
irix64
openbsd
darwin
internal
get_uint32_measurement
server_died
util
avg15
avg5
avg1
nprocs
start_param
server_name
startp
childspec
sysinfo
param_default
param_type
dummy_reply
start_os_sup
start_memsup
start_disksup
start_cpu_sup
os_sup_server
os_mon_sup
nteventlog
os_mon_sysinfo
cpu_sup
memsup
disksup
os_sup
os_mon_mib
wrong_errlog_type
sasl_error_logger_type
'-wildcard_comp/2-lc$^0/1-0-'
'-compile_alt/2-lc$^0/1-0-'
compile_alt
compile_range
compile_charset1
compile_charset
missing_delimiter
compile_part_to_sep
compile_part
compile_wildcard_3
compile_wildcard_2
compile_wildcard_1
compile_wildcard
do_alt
do_star
star
question
one_of
wildcard_5
wildcard_4
wildcard_3
wildcard_2
wildcard_1
last_modified
fold_files2
fold_files1
fold_files
is_regular
is_file
is_dir
compiled_wildcard
wildcard_comp
badpattern
'-report_cover/1-fun-0-'
analyze_to_file
html
analyze
'-report_cover/1-fun-1-'
'-filter_exit_map/2-fun-0-'
'-filter_exit_map/2-fun-1-'
'-filter_exit_map/2-fun-2-'
'-filter_exit_map/2-lc$^0/1-0-'
no_such_user
'-with_user/2-fun-0-'
no_such_vhost
'-with_vhost/2-fun-0-'
'-nodeparts/1-fun-0-'
'-upmap/2-lc$^0/1-0-'
'-upmap/2-fun-0-'
'-upmap/2-lc$^1/1-1-'
'-map_in_order/2-fun-0-'
'-table_foreach/2-fun-0-'
'-table_foreach/2-fun-1-'
'-write_term_file/2-lc$^0/1-0-'
'-manage_applications/6-fun-0-'
queue_fold
ceil
unfold
cannot_stop_application
cannot_start_application
manage_applications
format_stderr
cannot_create_parent_dirs
dirty_dump_log1
dirty_dump_log
dirty_foreach_key1
dirty_foreach_key
dirty_read_all
table_foreach
map_in_order
upmap
intersperse
tcp_name
encode_to_string
nodeparts
makenode
execute_mnesia_transaction
with_user_and_vhost
with_vhost
with_user
filter_exit_map
with_exit_handler
throw_on_error
report_coverage_percentage
'TOTAL'
report_cover
compile_beam_directory
cover
enable_cover
rs
longstr
r_arg
resource
set_config
get_config
protocol_error
amqp_error
frame_error
die
polite_pause
method_record_type
ensure_parent_dirs_exist
append_file
'Argument__1'
'Argument__2'
badexpr
binary_comprehension
bitlevel_binaries
'-expr/5-fun-0-'
'-expr/5-fun-14-'
'-expr/5-fun-11-'
'-expr/5-fun-8-'
'-expr/5-fun-5-'
'-expr/5-fun-21-'
'-expr/5-fun-2-'
'-expr/5-fun-18-'
'-expr/5-fun-15-'
'-expr/5-fun-12-'
'-expr/5-fun-9-'
'-expr/5-fun-6-'
'-expr/5-fun-3-'
'-expr/5-fun-19-'
'-expr/5-fun-16-'
'-expr/5-fun-13-'
'-expr/5-fun-10-'
'-expr/5-fun-7-'
'-expr/5-fun-4-'
'-expr/5-fun-20-'
'-expr/5-fun-1-'
'-expr/5-fun-17-'
'-expr/5-fun-22-'
'-find_maxline/1-fun-0-'
'-eval_lc1/6-fun-0-'
'-eval_lc1/6-fun-1-'
'-eval_lc1/6-fun-2-'
'-eval_bc1/6-fun-0-'
'-eval_bc1/6-fun-1-'
'-eval_bc1/6-fun-2-'
'-eval_b_generate/7-fun-0-'
'-eval_b_generate/7-fun-1-'
'-match1/4-fun-0-'
'-match1/4-fun-1-'
'-add_bindings/2-fun-0-'
'-merge_bindings/2-fun-0-'
'-ev_expr/1-lc$^0/1-0-'
stacktrace
bad_module_name
expand_module_name
ev_expr
partial_eval
eval_expr
is_constant_expr
merge_bindings
add_bindings
del_binding
add_binding
match_list
match_tuple
match_bits
match1
string_to_conses
illegal_pattern
number
reference
type_test
guard_test
guard_expr
guard0
guard1
guard
match_clause
recv_all
merge_queue
receive_clauses
case_clauses
try_clauses
if_clauses
eval_op
expr_list
'-inside-an-interpreted-fun-'
eval_fun
ret_expr
bad_filter
is_guard_test
eval_filter
bin_gen
eval_b_generate
bad_generator
eval_generate
eval_bc1
eval_bc
eval_lc1
eval_lc
no_env
local_func2
local_func
unhide_calls
hide_calls
modify_line
'$erl_eval_max_line'
find_maxline
undef_record
transform_from_evaluator
bif
unbound
argument_limit
used_vars
exprs_opt
check_command
expr
invalid_objects_list
bad_hash_bif
bad_version
invalid_type_code
'-init_file/17-fun-0-'
'-read_file_header/2-fun-0-'
'-bulk_input/4-fun-0-'
'-output_objs/4-fun-0-'
'-output_objs2/8-fun-0-'
'-compact_input/5-fun-0-'
'-bchunk_init/2-fun-0-'
'-bchunk_input/6-fun-0-'
'-fast_output/5-fun-0-'
'-fast_output2/6-fun-0-'
'-fast_output_end/2-fun-0-'
'-prepare_file_init/5-fun-0-'
'-prepare_file_init/5-fun-1-'
'-prepare_file_init/5-fun-2-'
'-prepare_file_init/5-fun-3-'
'-segment_file/4-fun-0-'
'-segment_file/4-fun-1-'
'-fsck_input/5-fun-0-'
'-file_header/3-fun-0-'
'-file_header/3-fun-1-'
'-file_header/3-fun-2-'
'-free_list_to_file/6-fun-0-'
'-table_parameters/1-fun-0-'
bin2keybins2
bin2keybins
bin2objs2
bin2objs
binobjs2terms
per_bag_key
per_set_key
read_bucket
v_segment
v_parts
closed_properly
slot_end
bins_bag
bins_set
bin2bins
scan_skip
arrpart_cache
check_pread_arg
check_pread2_arg
slot_position
update_no_keys
dup_object
old_dup_object
eval_dupbag
bag_object
eval_bag
get_objects
make_bins
same_terms
eval_end
eval_comms
eval_key1
eval_key
eval_slot
one_bucket_removed
one_bucket_added
eval_bucket_keys
eval_buckets
read_buckets
remove_slot_tag
tag_with_slot
eval_work_list
slot_objects
seg_zero
hash_invars
grow
may_grow1
re_hash_split
bar
re_hash_slots
re_hash_write
split_bins
re_hash
code_to_hash_method
hash_method_to_code
bin_to_tree1
bin_to_tree
bad_freelists
free_lists_from_file
free_list_to_file
free_lists_to_file
file_header
failed_to_save_free_lists
sz2pos
make_objects
fsck_objs
read_more_bytes
fsck_read
count_input1
count_input
temp_file
seg_file_item
seg_file
segment_file
prep_set_slot
prep_slot
output_slot
not_a_tuple
output_slots
write_sizes
all_sizes
write_all_sizes
foo
bin2term_v8
bin2term1
bin2term
allocate_all
free_hole
alloc_hole
allocate_all_objects
write_loop
prepare_file_init
fast_write_sizes
fast_write_all_sizes
write_segment_file
fast_output_end
fast_output2
fast_output
make_slots
do_make_slots
bchunk_input
init_fun
bchunks
compact_objs
compact_read
compact_input
dets_compact
output_objs2
bulk_objects
no_segs
no_parts
cache_segps1
cache_arrparts
max_objsize
alloc_seg
alloc_part
allocate_segment
init_segments
init_parts
slots2
init_file
'$hash2'
'-lc/1-fun-0-'
'-lc_batch/1-lc$^0/1-0-'
'-i/2-fun-0-'
'-paged_i/4-fun-0-'
'-paged_i/4-fun-1-'
'-all_procs/0-fun-0-'
'-m/0-fun-0-'
'-nregs/0-fun-0-'
'-all_regs/0-lc$^0/1-0-'
'-print_node_regs/1-fun-0-'
'-print_node_regs/1-fun-1-'
appcall
parsetools
yecc
y
tools
xref
xm
w
lengths
ls_print
ls
pwd
portformat
portline
procformat
procline
portinfo
pwhereis
pids_and_ports
print_node_regs
all_regs
regs
nregs
print_time
split_print_exports
print_exports
get_compile_info
get_compile_options
notime
get_compile_time
print_object_file
bi
f_p_e
mformat
m
bt
q
all_procs
iformat
mfa_string
'(c)ontinue (q)uit -->'
paged_i
ni
nc
split_def
'@d'
'@i'
'@o'
lc_batch
check_load
output_generated
machine_load
report_errors
report_warnings
help
'-msort/1-fun-0-'
'-mkeysort/2-fun-0-'
'-disk_map_segment/2-lc$^0/1-0-'
'-disk_map/1-lc$^0/1-0-'
'-list_to_tree/1-fun-0-'
'-leafs_to_nodes/4-fun-0-'
'-mk_node/1-fun-0-'
bplus_put_rkey
bplus_put_lkey
bplus_extend_tree_3
bplus_extend_tree_2
bplus_extend_tree
bplus_put_subtree
bplus_leaf_to_list
bplus_mk_leaf
bplus_node_to_list
bplus_mk_node
bplus_join_tree_3
bplus_join_tree_2
bplus_joinright_tree
bplus_joinleft_tree
bplus_split_node_3
bplus_split_node_2
bplus_split_node
bplus_split_leaf_3
bplus_split_leaf_2
bplus_split_leaf
bplus_reorganize_tree_jr
bplus_reorganize_tree_jl
bplus_reorganize_tree_s
bplus_reorganize_tree_r
bplus_reorganize_tree_l
bplus_reorganize_tree_del
bplus_reorganize_tree_ins
bplus_select_sub_tree_2
bplus_select_sub_tree
bplus_delete_in_leaf_3
bplus_delete_in_leaf_2
bplus_delete_in_leaf
join_right
join_left
bplus_delete_in
bplus_insert_in_leaf_3
bplus_insert_in_leaf_2
bplus_insert_in_leaf
left
bplus_insert_in
bplus_delete
bplus_insert
lookup_next_leaf_2
lookup_next_leaf
bplus_lookup_next
bplus_lookup_first
bplus_lookup_leaf_2
bplus_lookup_leaf
bplus_lookup
bplus_empty_tree
collect_node_interval
collect_leaf_interval
collect_interval2
collect_interval
get_first_key
split_list
mk_node
leafs_to_nodes
list_to_tree
leaf_to_bin
node_to_bin
tree_to_bin2
tree_to_bin
collect_node
collect_leaf
l
n
collect_tree2
v
collect_tree
segment_fragment_to_pointers
segment
pointer
disk_map_pread
disk_map_segment
disk_map_segment_p
get_disk_map
collect_all_interval
find_next_free
allocated1
all_allocated_as_list
my_buddy
make_zeros
log2
set_freelists
free_in_pos
move_down
reserve_buddy
undo_free
no_more_space_on_file
find_first_free
alloc
alloc_many2
alloc_many1
alloc_many
empty_free_lists
init_alloc
init_slot
init_slots_from_old_file
is_empty_cache
reset_cache
type_to_code
badtype
code_to_type
no_disk_map
read_n
file_error_close
position_close
disk_map
ipread
bad_object_header
per_key
mkeysearch2
mkeysearch
mkeysort
msort
tcmp
binrev
collect_line_list
collect_line_bin
collect_line1
collect_chars_list
collect_chars1
char_list
string_char
write_string1
name_chars
quote_atom
write_atom
write_binary_body
write_binary
write_ref
write_port
write_tail
fwrite_g
indentation
wait_io_mon_reply
default_output
default_input
parse_erl_form
scan_erl_form
scan_erl_exprs
fread
ebadf
conv_reason
get_password
o_request
to_tuple
notag
'-handle_close/4-lc$^0/1-0-'
'-pending_call/7-fun-0-'
check_pending
pending_call
do_link
handle_close
do_internal_open
verbose_flag
pending_reply
dets_owners
dets_registry
write_head1
write_head
sup_get
format_key_val
write_report2
is_my_info_report
is_my_error_report
service_name_missmatch
client_node
'-resend_sync_nodes/1-fun-0-'
'-soft_purge/1-fun-0-'
'-brutal_purge/1-fun-0-'
'-check_rel_data/3-fun-0-'
'-do_check_install_release/4-fun-0-'
'-do_remove_release/4-fun-0-'
'-do_remove_release/4-fun-1-'
'-set_status/3-fun-0-'
'-remove_file/1-fun-0-'
'-transform_release/3-fun-0-'
'-transform_release/3-fun-1-'
'-make_dir/2-fun-0-'
'-takewhile/5-fun-0-'
copy_start_config
backup_start_config
set_static_files
move_start_erl
write_start_erl
backup_start_erl
write_start_m
write_start
read_master
remove_files
consult_master
at_all_masters
bad_masters
all_masters
do_remove_files
do_rename_files
do_copy_file1
do_copy_file
copy_file_m
do_ensure_RELEASES
ensure_RELEASES_exists
move_releases
update_releases
backup_releases
do_copy_files
write_releases_m
do_write_release
write_releases
cannot_extract_file
keep_old_files
extract_tar
extract
files
extract_rel_file
do_check_file
check_file_masters
check_file
check_opt_file
transform_release
write_new_start_erl
check_start_prg
prepare_restart_new_emulator
prepare_restart_nt
mon_nodes
get_appls
change_appl_data
do_write_file
no_such_file
remove_file
memlib
diff_dir
get_latest_release
set_status
try_downgrade
bad_relup_file
try_upgrade
no_matching_relup
get_rh_script
do_set_removed
do_set_unpacked
do_remove_release
do_remove_service
set_permanent_files
do_reboot_old_release
'heart:set_cmd() error'
do_back_service
bad_status
old
do_make_permanent
service_rename_failed
remove_service
enable_service
disable_service
store_service
new_service
rename_service
get_service
do_make_services_permanent
tmp_current
do_install_release
already_installed
do_check_install_release
not_a_directory
no_such_directory
bad_rel_data
unpacking
erts
check_rel_data
bad_rel_file
check_rel
clean_release
unpacked
existing_release
do_unpack_release
brutal_purge
resend_sync_nodes
bad_parameter
client_directory
masters
is_client
mk_lib_name
restart_new_emulator
no_such_release
static_emulator
no_check
do_check
start_prg
releases_dir
read_appspec
no_app_found
read_application
read_app
no_appup_found
version_not_in_appup
find_script
app_not_running
ensure_running
eval_appup_script
dn
downgrade_script
translate_scripts
upgrade_script
unknown_version
downgrade_app
upgrade_app
create_RELEASES
check_script
which_releases
install_file
set_removed
set_unpacked
remove_release
reboot_old_release
check_timeout
suspend_timeout
code_change_timeout
update_paths
install_option
illegal_option
error_action
check_install_options
install_release
check_install_release
unpack_release
'-pid_delete/1-fun-0-'
system_time
positive
next_timeout
pid_delete
delete_ref
timer_timeout
repeat
interval
timer_interval_tab
timer_tab
hms
hours
seconds
now_diff
send_interval
apply_interval
kill_after
apply_after
df
dm
dy
year_day_to_date2
year_day_to_date
dty
day_to_year
valid_date1
valid_date
universal_time_to_local_time
universal_time
time_to_seconds
time_difference
seconds_to_time
seconds_to_daystime
now_to_local_time
now_to_universal_time
now_to_datetime
local_time_to_universal_time_dst
last_day_of_the_month1
last_day_of_the_month
is_leap_year1
is_leap_year
gregorian_seconds_to_datetime
gregorian_days_to_date
day_of_the_week
datetime_to_gregorian_seconds
date_to_gregorian_days
format_pdict
get_now
new_intensity
fetch_default_data
fetch_config_data
total_intensity
accept_intensity
max_intensity
weight
total_requests
accepted_requests
get_overload_info
set_config_data
overload_weight
overload_max_intensity
premature_eof
nopid
old_version
incompatible_arguments
'-from_ets_fun/2-fun-0-'
'-to_ets/2-fun-0-'
'-traverse/2-fun-0-'
'-verbose/1-fun-0-'
'-defaults/2-fun-0-'
'-stream_end/5-fun-0-'
'-finsert_new/2-fun-0-'
'-finsert_new/2-fun-1-'
'-unlink_fixing_procs/1-fun-0-'
'-flookup_keys/2-fun-0-'
'-fsck_copy/4-fun-0-'
'-close_files/3-fun-0-'
all_free
v_free_list
v_segments
read_4
get_head_field
err
pread_n
find_allocated
scan_read
scan_objs
check_safe_fixtable
find_next_allocated
init_scan
cache_obj_op
cache_key_op
cache_lookup
cache_binary
write_cache
file_no_things
no_things
check_objects
find_object
where_is_object
try_update_tuple2
try_update_tuple
do_update_counter
fslot
close_tmp
close_files
free_n_objects
repair_failed
initialization_failed
fsck_copy1
fsck_copy
tmpdir
output_objs
do_sort
fsck_input
dets_repair
fsck_try_est
eacces
tempfile
fsck_try
choose_no_slots
cannot_repair
try_again
compact_init
prep_table_copy
module2version
version2module
init_disk_map
fopen_init_file
init_freelist
cache_segps
new_cache
open_final
do_repair
version_mismatch
keypos_mismatch
type_mismatch
need_compacting
compact
needs_repair
force
version_bump
fopen_existing_file
fopen3
fopen2
beyond_key2
cmp
beyond_key
fnext_slot
fnext_search
db_hash
fnext
fmember
do_delete
do_fmatch_delete
filter_terms
filter_binary_terms
do_fmatch_constant_keys
do_fmatch_delete_var_keys
fmatch_delete
fmatch_delete_init
contains_variable
find_all_keys
fmatch
scan_error
fmatch_init
flookup_keys
not_used
bulk_init
bulk_input
dets_init
do_finit
fixed_table
finit
maybe_put
do_open_file
try_bchunk_header
test_bchunk_format
no_keys
bchunk_format
no_slots
no_objects
safe_fixed
file_size
finfo
check_growth
unlink_fixing_procs
remove_fix
get_freelists
do_safe_fixtable
finsert_new
finsert
slot_objs
ffirst1
ffirst
fdelete_object
fdelete_key
initiate_file
do_delete_all_objects
fdelete_all_objects
finished
read_bchunks
do_bchunk
all_allocated
table_parameters
do_bchunk_init
corrupt_file
ensure_written
do_perform_save
perform_save
stop_disk_map
fclose
pread_close
read_file_header
constants
family
lookup_replies
penalty
stream_end2
stream_end1
stream_end
no_more
stream_loop
stream_op
start_auto_save_timer
mark_dirty
new_dirty
vformat
many_times
saved
may_grow
corrupt_reason
set_verbose
apply_op
dets_bug
debug_mode
do_apply_op
open_file_loop2
open_file_loop
'$dets_call'
req
treq
is_version
is_comp_min_max
is_max_no_slots
is_min_no_slots
min_no_slots
max_no_slots
access
estimated_no_objects
auto_save
repl
defaults
compile_match_spec
foldl_bins
do_foldl_bins
chunk_match
init_chunk_match
do_safe_match
safe_match
corrupt
bad_object
do_trav_bins
match_init
do_trav
do_traverse
istart_link
remove_user
open_args
file_error
dets_process_died
object
cont
do_match_delete
match_delete_init
bindings
lookup_keys
tooshort
not_a_dets_file
is_dets_file
is_compatible_bchunk_format
internal_open
internal_close
users
get_pid
from_ets_fun
thrown
initialize
not_closed
check_file_header
fileheader
fsck
fixed
delete_key
bchunk_init
dets_cont
delete_alarm_handler
add_alarm_handler
get_alarms
clear_alarm
set_alarm
write_report
'-safe_apply/3-fun-0-'
'-mk_str/0-lc$^0/1-0-'
'-install_fallback_master/2-fun-0-'
'-restore_recs/4-lc$^0/1-0-'
'-send_fallback/2-fun-0-'
'-fallback_receiver_loop/4-lc$^0/1-0-'
'-do_fallback_start/2-fun-0-'
'-do_fallback_start/2-lc$^0/1-0-'
'-create_dat_files/2-fun-0-'
dcl_log_header
'-create_dat_files/2-fun-5-'
'-create_dat_files/2-fun-6-'
'-create_dat_files/2-fun-7-'
fallback_tab
dcd_log_header
'-create_dat_files/2-fun-8-'
'-create_dat_files/2-fun-1-'
'-create_dat_files/2-fun-2-'
'-create_dat_files/2-fun-3-'
'-create_dat_files/2-fun-4-'
'-do_uninstall/3-lc$^0/1-0-'
'-do_uninstall/5-fun-0-'
'-do_uninstall/5-fun-1-'
'-do_traverse_backup/7-fun-0-'
filter_foldl
trav_apply
iter_done
do_traverse_backup
rec_uninstall
local_uninstall_fallback
do_uninstall
uninstall_fallback_master
do_uninstall_fallback
create_dat_files
init_dat_files
not_local
local_tab
restore_tables
mnesia_local_tables
do_fallback_start
tm_fallback_start
throw_bad_res
abort_write
fallback_receiver_loop
check_fallback_dir_arg
check_fallback_dir
local_fallback_error
fallback_receiver
fallback_tmp_name
fallback_name
active_fallback
rec_answers
send_fallback
get_fallback_nodes
records
restore_recs
install_fallback_master
atom_list
scope
check_fallback_arg_type
check_fallback_args
fallback_args
do_install_fallback
do_apply
commit_write
open_write
make_initial_backup
mk_str
schema2bup
lookup_schema
convert_0_1
convert_schema
refresh_cookie
backup_log_header
verify_header
open_read
do_read_schema_section
log_header
read_schema_section
fallback
abort_restore
safe_apply
iter
close_read
sasl_safe_sup
pred
delete_error_logger_mf
add_error_logger_mf
args
delete_sasl_error_logger
add_sasl_error_logger
error_logger_mf_maxfiles
get_mf_maxf
error_logger_mf_maxbytes
get_mf_maxb
error_logger_mf_dir
get_mf_dir
get_mf
get_error_logger_mf
get_sasl_error_logger_type
get_sasl_error_logger
'-do_check_type/2-fun-0-'
'-detect_inconcistency/2-lc$^0/1-0-'
report_inconsistency
has_remote_mnesia_down
detect_inconcistency
running_partitioned_network
media
r9b_plain
standard
do_check_type
check_type
minutes
pid_sort_order
default_env
process_config_args
process_q
detect_partitioned_network
has_mnesia_down
truncated
inconsistent_database
accept_protocol
reopen
uninitialized
fallback_bup
non_empty_dir
pending_checkpoint_pids
pending_checkpoints
mnesia_lock_counter
mnesia_lock_queue
mnesia_sticky_locks
mnesia_held_locks
trans_log_writes_prev
trans_log_writes_left
trans_log_writes
trans_aborts
terminate_proc
init_proc
start_proc
unsafe_call
needs_protocol_conversion
acceptable_protocol_versions
reject
check_protocol
protocol_negotiated
negotiate_protocol_impl
negotiate_protocol
close_log
reopen_log
open_dets
mnesia_substr
mnesia_fallback
mnesia_dumper_load_regulator
mnesia_sp
'-do_start/4-fun-0-'
read_size
cast_binary
cat
get_chars_empty
io_request_loop
std_reply
month
t1
t
write_time
string_p1
string_p
local_time_to_universal_time
utc_log
maybe_utc
write_event
write_events1
write_events
install_prev
current_pos
'-running_nodes/1-lc$^0/1-0-'
'-local_active_tables/0-fun-0-'
'-active_tables/0-fun-0-'
'-core_file/0-fun-0-'
'-core_file/0-lc$^0/1-0-'
'-procs/0-fun-0-'
'-procs/0-fun-1-'
'-read_log_files/0-lc$^0/1-0-'
mnesia_file
'-dir_info/0-lc$^0/1-0-'
'-relatives/0-fun-0-'
send_table
'-workers/1-fun-0-'
'-locking_procs/1-lc$^0/1-0-'
'-locking_procs/1-fun-0-'
'-suffix/2-fun-0-'
'-vcore/0-fun-0-'
'-vcore/1-fun-0-'
'-vcore_elem/1-fun-0-'
'-report_system_event/1-fun-0-'
'-mkfuns/1-fun-2-'
'-mkfuns/1-fun-3-'
'-mkfuns/1-fun-0-'
'-mkfuns/1-fun-1-'
is_debug_compiled
eval_debug_fun
deactivate_debug_fun
update_debug_info
debug_info
activate_debug_fun
mnesia_debug
scratch_debug_fun
readable_indecies
dets_sync_close
mnesia_table_lock
dets_sync_open
mkfuns
trav_ret
db_erase_tab
db_update_counter
db_match_erase
db_erase
catch_select
catch_match_object
db_put
db_chunk
db_init_chunk
copy_file_loop
copy_file
'$$$_report'
save2
save
mnesia_error
mnesia_warning
mnesia_info
important
start_event
catch_notify
mnesia_system_event
random_time
mnesia_fatal
report_fatal
no_variable
not_a_db_node
bad_index
index_exists
truncated_binary_file
last_error
fix_error
crashinfo
vcore_elem
nocore
vcore
dat
core
view
senders
dumper
mk_info_tuple
ets_info
cwd
mnesia_dir
log_files
read_log_files
code_path
code_loaded
etsinfo
gvar
relatives
workers
locking_procs
tid_locks
load_info
trans_info
schema_file
dir_info
get_workers
get_master_node_info
get_node_number
mnesia_tid_locks
mkcore
core_file
coredump
dist_coredump
incr_counter
set_counter
create_counter
set_local_content_whereabouts
remote_copy_holders
othertype
active_tables
local_active_tables
application_load_error
lsort_add
add_lsort
add_list
pr_other
search_key
tab2dcl
tab2tmp
active_here
pad_name
show
mnesia_status
is_running_remote
uniq1
is_string
sort_commit2
sort_commit
elems
key_search_all
key_search_delete
search_delete
lait
liat
daeh
filter_r
filter_f
split_r1_to_f2
split_f1_to_r2
drop_r
drop
peek_r
peek
get_r
out_r
in_r
is_queue
'-wait_nodes/2-fun-0-'
sync_nodes_optional
get_sync_optional_nodes
sync_nodes_mandatory
get_sync_mandatory_nodes
sync_nodes_timeout
get_sync_timeout
get_sync_data
check_up
mandatory_nodes_down
wait_nodes
sync_nodes
'__not_used'
dist_ac_took_control
go
create
key
nested_transaction
'-do_set_schema/2-lc$^0/1-0-'
'-delete_cstruct/2-fun-0-'
'-delete_schema/1-lc$^0/1-0-'
continue
'-read_cstructs_from_disc/0-fun-0-'
'-list2cs/1-lc$^0/1-0-'
'-verify_cstruct/1-fun-0-'
'-verify_cstruct/1-fun-1-'
'-verify_cstruct/1-fun-2-'
'-verify_cstruct/1-fun-3-'
'-verify_nodes/1-fun-0-'
'-create_table/1-fun-0-'
'-do_multi_create_table/1-fun-0-'
'-unsafe_make_create_table/1-fun-0-'
'-check_if_exists/1-fun-0-'
'-delete_table/1-fun-0-'
'-make_delete_table/2-lc$^0/1-0-'
'-change_table_frag/2-fun-0-'
'-do_change_table_frag/2-lc$^0/1-0-'
'-clear_table/1-fun-0-'
'-add_table_copy/3-fun-0-'
'-del_table_copy/2-fun-0-'
'-move_table/3-fun-0-'
'-change_table_copy_type/3-fun-0-'
'-add_table_index/2-fun-0-'
'-del_table_index/2-fun-0-'
'-add_snmp/2-fun-0-'
'-del_snmp/1-fun-0-'
'-transform_table/4-fun-0-'
'-transform_table/4-fun-1-'
'-make_transform/4-fun-0-'
'-make_transform/4-fun-1-'
'-change_table_access_mode/2-fun-0-'
'-change_table_load_order/2-fun-0-'
'-write_table_property/2-fun-0-'
'-change_prop_in_existing_op/4-lc$^0/1-0-'
'-do_read_table_property/2-fun-0-'
'-delete_table_property/2-fun-0-'
'-prepare_op/3-fun-0-'
'-prepare_op/3-lc$^0/1-1-'
log_mnesia_up
'-prepare_op/3-fun-1-'
'-prepare_op/3-lc$^1/1-0-'
'-lock_del_table/4-fun-0-'
'-lock_del_table/4-fun-1-'
'-get_table_properties/1-lc$^0/1-0-'
'-restore/3-fun-0-'
'-restore/3-fun-1-'
'-check_restore_arg/2-lc$^0/1-3-'
'-check_restore_arg/2-lc$^1/1-2-'
'-check_restore_arg/2-lc$^2/1-1-'
'-check_restore_arg/2-lc$^3/1-0-'
'-do_restore/2-lc$^0/1-0-'
'-arrange_restore/3-fun-0-'
'-where_to_commit/2-lc$^0/1-0-'
'-where_to_commit/2-lc$^1/1-1-'
'-where_to_commit/2-lc$^2/1-2-'
'-dump_tables/1-fun-0-'
'-merge_schema/0-fun-0-'
'-do_merge_schema/0-lc$^0/1-0-'
del_active_replica
unannounce_im_running
merge_error
verify_merge
do_merge_versions
merge_versions
change_storage_type
compare_storage_type
merge_storage_type
do_merge_cstructs
merge_cstructs
do_make_merge_schema
make_merge_schema
not_merged
merged
cstructs
get_cstructs
missing_lock
do_merge_schema
make_dump_tables
do_dump_tables
skip_tab_items
restore_tab_items
restore_recreate
restore_schema
restore_func
restore_items
iterate
arrange_restore
do_restore
bad_default_op
default_op
skip_tables
keep_tables
recreate_tables
check_restore_arg
error_recs
error_fun
clear_tables
r
info2
tmp_suffixes
real_suffixes
known_suffixes
has_known_suffix
purge_known_files
purge_tmp_files
purge_dir
del_transient
ram_delete_table
purge_some_logs
close_dets
unannounce_add_table_copy
tm_del_copy
unsafe_close_dets
unset
undo_prepare_op
restore_op
undo_prepare_ops
release_schema_commit_lock
undo_prepare_commit
transform_obj
transform_objs
set_remote_where_to_read
set_where_to_read
lock_del_table
receive_sync
unsafe_open_dets
disk_type
create_disc_only_table
unsafe_close_log
open_log
create_disc_table
unsafe_mktab
create_ram_table
tm_change_table_copy_type
raw_named_dump_table
purge_all_logs
not_active_here
announce_im_running
updated
mnesia_lock
tab2dcd
get_network_copy
ets2dcd
dmp
prepare_snmp
dump_table
rec
bad_commit
cs_to_storage_type
merge_schema
mnesia_down
coord
part
sync_trans
prepare_op
prepare_ops
wait_for_schema_commit_lock
dumped
schema_prepare
mandatory
optional
commit
prepare_commit
make_delete_table_properties
do_delete_table_property
merge_with_previous
replace_props
find_props
insert_prop
do_read_table_property
delete_property
update_existing_op
change_prop_in_existing_op
make_write_table_properties
write_property
do_write_table_property
make_change_table_load_order
do_change_table_load_order
make_change_table_access_mode
do_change_table_access_mode
transform
make_transform
do_transform_table
make_del_snmp
do_del_snmp
make_add_snmp
do_add_snmp
del_index
make_del_table_index
do_del_table_index
add_index
make_add_table_index
do_add_table_index
incompatible
diff
make_change_table_copy_type
do_change_table_copy_type
make_move_table
do_move_table
opt_add
new_cs
del_node
remove_node_from_tabs
dbg_out
make_del_table_copy
do_del_table_copy
make_add_table_copy
do_add_table_copy
make_clear_table
do_clear_table
do_change_table_frag
make_delete_table2
frag_names
lookup_foreigners
lookup_frag_hash
single_frag
make_delete_table
whole_table
do_delete_table
existed_before
check_if_exists
wlock_no_exist
unsafe_make_create_table
make_create_table
do_create_table
expand_cstruct
do_multi_create_table
check_active
ensure_not_active
ensure_non_empty
is_remote_member
not_active
ensure_active
ensure_writable
alt
do_verify
verify_nodes
check_ustruct
not_supported
verify_cstruct
has_duplicates
check_duplicates
check_keys
attr_to_pos
pick
etype
must
list2cs
rec2list
cs2list
do_insert_schema_ops
insert_schema_ops
transaction_crashed
transaction_done
schema_coordinator
schema_transaction
get_tid_ts_and_lock
repair
get_initial_schema
dets_to_ets
do_read_disc_schema
tab2dmp
exists
tab2dat
fallback_to_schema
read_disc_schema
mktab
read_schema
unlock_schema
lock_schema
check_can_write
has_no_disc
opt_create_dir
dir_exists
opt_disc
already_exists
remote_read_schema
ensure_no_schema
delete_schema2
delete_cstruct
load_reason
load_node
load_by_force
where_to_write
commit_work
clear_whereabouts
report_table_event
tm_retain
insert_cstruct
incr_version
wild
cs_to_nodes
schema_cs_to_storage_type
set_frag_hash
frag_properties
user_properties
load_order
do_set_schema
get_create_list
set_schema
exit_on_error
add_active_replica
initial
enotsup
contains_ctrl_g_or_ctrl_c
err_func
format_prompt
prompt
get_chars_more
tail
head
get_chars_apply
get_chars_bytes
get_chars_req
substitute_negations
io_reply
send_port
put_port
io_requests
get_until
collect_chars
rows
columns
requests
get_geometry
do_io_request
get_fd_geometry
snoc
server_loop
start_new_shell
start_init_shell
link_and_save_shell
new_shell
unknown_exit
catch_loop
read_mode
interfaces
current
unclear
mnesia_event
mnesia_snmp_sup
mnesia_registry
mnesia_late_loader
mnesia_kernel_sup
mnesia_frag_old_hash
mnesia_frag_hash
mnesia_frag
mnesia_loader
mnesia_checkpoint_sup
mnesia_backup
'-get_next_tskey/3-fun-0-'
'-do_foldl/8-fun-0-'
'-do_foldr/8-fun-0-'
'-select/5-fun-0-'
'-select/6-fun-0-'
'-any_table_info/2-fun-0-'
'-info/0-fun-0-'
'-info/0-fun-1-'
'-info/0-fun-2-'
'-display_system_info/4-lc$^0/1-0-'
'-display_system_info/4-fun-0-'
'-display_system_info/4-lc$^1/1-1-'
'-display_system_info/4-fun-1-'
'-display_tab_info/0-fun-0-'
'-display_tab_info/0-lc$^0/1-0-'
where_to_commit
active_replicas
access_mode
'-display_tab_info/0-fun-1-'
'-display_tab_info/0-fun-2-'
'-system_info2/1-lc$^0/1-0-'
'-set_master_nodes/1-lc$^0/1-0-'
'-log_valid_master_nodes/4-fun-0-'
'-snmp_get_row/2-fun-0-'
'-snmp_order_keys/4-lc$^0/1-0-'
key_to_oid
'-snmp_filter_key/4-fun-0-'
put_activity_id
get_activity_id
do_fixtable
qlc_format
ascending
frag_hash
is_unique_keys
is_sorted_objects
indices
qlc_info
qlc_opts
post_qlc
stop_fun
mnesia_activity
parent_value
pre_qlc
parent_fun
dump_to_textfile
mnesia_text
load_textfile
snmp_filter_key
oid_to_key
snmp_oid_to_mnesia_key
get_mnesia_key
snmp_get_mnesia_key
get_ordered_snmp_key
snmp_order_keys
endOfTable
get_next_index
snmp_get_next_index
mnesia_snmp_hook
get_row
snmp
snmp_get_row
del_snmp
snmp_close_table
add_snmp
snmp_open_table
report_system_event
mnesia_user
report_event
unsubscribe
sync_dump_log
dump_log
copy_holders
cstruct
log_master_nodes
log_valid_master_nodes
unlock_table
read_cstructs_from_disc
set_master_nodes
change_table_load_order
change_table_access_mode
force_load_table
dump_tables
change_table_frag
delete_table_property
write_table_property
user_property
read_table_property
transform_table
del_table_index
add_table_index
move_table
move_table_copy
delete_table
restore
backup_checkpoint
deactivate
deactivate_checkpoint
activate
activate_checkpoint
uninstall_fallback
install_fallback
traverse_backup
backup
load_mnesia_or_abort
system_info_items
mnesia_checkpoint
get_log_writes
mnesia_dumper
get_held_locks
get_lock_queue
mnesia_log
get_transactions
fallback_exists
mnesia_bup
mnesia_not_loaded
read_nodes
trans_commits
trans_failures
read_counter
trans_restarts
checkpoints
transaction_log_writes
log_version
protocol_version
master_node_tables
schema_version
subscribers
transactions
auto_repair
backup_module
core_dir
dump_log_load_regulation
dump_log_time_threshold
dump_log_update_in_place
dump_log_write_threshold
embedded_mnemosyne
event_module
fallback_error_function
ignore_fallback_at_startup
max_wait_for_decision
no_table_loaders
transaction_commits
transaction_failures
transaction_restarts
local_tables
system_info2
storage_count
tables
get_master_node_tables
display_tab_info
display_system_info
all_nodes
fallback_activated
schema_location
mini_info
mnesia_decision
lock_queue
held_locks
get_info
error_desc
error_description
bad_info_reply
info_reply
raw_table_info
get_master_nodes
mnesia_recover
get_table_properties
master_nodes
any_table_info
node_not_running
dirty_rpc_error_tag
check_w2r
nowhere
do_dirty_rpc
dirty_rpc
db_prev_key
dirty_prev
db_next_key
dirty_next
db_last
dirty_last
db_first
db_slot
dirty_slot
dirty_index_read
dirty_index_match_object
dirty_all_keys
dirty_sel_cont
dirty_sel_init
remote_dirty_select
dirty_select
remote_dirty_match_object
dirty_match_object
dirty_read
combine_error
do_dirty_update_counter
dirty_update_counter
do_dirty_delete_object
dirty_delete_object
do_dirty_delete
dirty_delete
dirty
do_dirty_write
dirty_write
mnesia_index
index_read
attr_tab_to_pos
mnesia_schema
index_match_object
wild_pattern
all_keys
get_record_pattern
select_state
trans_select
wrong_transaction
db_select_cont
select_cont
db_select_init
mnesia_select
storage_type_at_node
where_to_read
select_lock
db_select
fun_select
deloid
add_sel_ordered_match
add_sel_match
add_ordered_match
add_match
find_ops
add_written_match
db_match_object
add_written_to_bag
add_written_to_set
add_written
add_previous
close_iteration
db_fixtable
init_iteration
ts_keys_1
ts_keys
get_next_tskey
get_ordered_tskey
stored_keys
rwlock
sticky_rwlock
wread
setorbag
do_delete_object
s_delete_object
s_delete
no_exists
record_validation
write_to_store
s_write
intersect
recover_nodes
good_global_nodes
global_lock
rlock_table
sticky_wlock_table
wlock_table
lock_table
rlock
sticky_wlock
wlock
mnesia_locker
sticky_write
tidstore
lock_record
write_lock_table
read_lock_table
no_transaction
wrap_trans
access_module
activity
sync_dirty
async_dirty
non_transaction
mnesia_tm
sync_transaction
async
transaction
tid
mnesia_activity_state
is_transaction
ms
mnesia_sup
lkill
mnesia_subscr
set_debug_level
connect_nodes
mnesia_controller
dc_dump_limit
bad_type
patch_env
mnesia_monitor
patched_start
tc
e_has_var
has_var
is_digits
is_dollar_digits
other_val
mnesia_lib
mnesia_gvar
val
badcall
terminate_pid
dirty_first
'-is_db_empty/0-fun-0-'
clear_table
'-empty_ram_only_tables/0-fun-0-'
'-table_names/0-lc$^0/1-0-'
'-replicated_table_names/0-lc$^0/1-0-'
'-check_schema_integrity/0-lc$^0/1-0-'
table_creation_failed
create_table
'-create_tables/0-fun-0-'
ram_copies
get_bool
local_content
disc_only_copies
'-create_local_table_copies/1-fun-0-'
failed_to_leave_cluster
del_table_copy
'-leave_cluster/2-fun-0-'
no_running_cluster_nodes
leave_cluster
wildcard
cannot_delete_schema
delete_schema
failed_waiting_for_tables
timeout_waiting_for_tables
schema_integrity_check_failed
wait_for_tables
wait_for_replicated_tables
atomic
change_table_copy_type
add_table_copy
unknown
storage_type
create_local_table_copy
create_local_table_copies
get_value
table_has_copy_type
create_tables
cannot_backup_mnesia
move_db
cannot_create_schema
create_schema
unable_to_join_cluster
use_dir
disc
schema
change_config
extra_db_nodes
init_db
cannot_delete_cluster_nodes_config
delete_cluster_nodes_config
cannot_read_cluster_nodes_config
cluster_config
read_term_file
read_cluster_nodes_config
cannot_create_cluster_nodes_config
write_term_file
create_cluster_nodes_config
cluster_nodes_config_filename
check_schema_integrity
mnesia_unexpectedly_running
ensure_mnesia_not_running
mnesia_not_running
is_running
ensure_mnesia_running
cannot_create_mnesia_dir
ensure_dir
replicated_table_names
table_names
rabbit_user
rabbit_user_permission
rabbit_vhost
rabbit_config
rabbit_listener
rabbit_durable_route
rabbit_route
rabbit_reverse_route
rabbit_durable_exchange
rabbit_durable_queue
rabbit_queue
amqqueue
durable
auto_delete
arguments
reverse_route
reverse_binding
route
binding
listener
protocol
vhost
virtual_host
dummy
user_permission
user_vhost
permission
record_name
disc_copies
username
password
table_definitions
force_reset
ensure_ok
cannot_start_mnesia
cluster
running_nodes
running_db_nodes
db_nodes
start_out
oldshell
get_user
wait_for_user_p
start_user
relay1
relay
start_slave
nouser
'-stop_and_halt/0-fun-0-'
'-start/2-fun-0-'
'-start/2-fun-1-'
rabbit_node_monitor
rabbit_router
vm_memory_monitor
vm_memory_high_watermark
check_empty_content_body_frame_size
rabbit_binary_generator
rabbit_hooks
rabbit_log
'-start/2-fun-2-'
recover
rabbit_exchange
'-start/2-fun-3-'
rabbit_persister
'-start/2-fun-4-'
rabbit_guid
'-start/2-fun-5-'
'-start/2-fun-6-'
start_tcp_listener
'-start/2-fun-7-'
tcp_listeners
'-start/2-fun-8-'
start_ssl_listener
rabbit_networking
'-start/2-lc$^0/1-0-'
ssl_options
crypto
ssl_listeners
'-start/2-fun-9-'
'-print_banner/0-lc$^0/1-0-'
'-print_banner/0-fun-0-'
cannot_rotate_sasl_logs
cannot_rotate_main_logs
log_rotation_result
start_builtin_amq_applications
set_permissions
add_user
add_vhost
rabbit_access_control
default_permissions
default_vhost
default_pass
default_user
insert_default_data
is_db_empty
maybe_insert_default_data
not_installed
cannot_log_to_tty
ensure_working_log_handler
ensure_working_log_handlers
cookie_hash
len
print_banner
home_dir
app_location
cannot_log_to_file
log_location
empty_ram_only_tables
on_node_down
rabbit_amqqueue
is_clustered
rabbit_alarm
terminated_ok
rabbit_error_logger
rabbit_sup
rabbit_sasl_report_file_h
rabbit_error_logger_file_h
rotate_logs
running_applications
stop_and_halt
stop_applications
start_applications
rabbit_misc
ensure_mnesia_dir
rabbit_mnesia
prepare
'rabbitmq_multi7151 at mail'
setup_timer
send_tick
send_status
recv_status
recv_challenge_ack
recv_challenge_reply
recv_challenge
recv_name
send_challenge_ack
send_challenge_reply
send_challenge
send_name
get_status_failed
disconnected
send_net_tick_failed
net_tick_timeout
not_responding
con_loop
mark_nodeup
do_setnode
get_cookies
gen_challenge
gen_digest
connection_setup_failed
flush_down
do_mark_pending
do_alive
wait_pending
nok
ok_simultaneous
mark_pending
check_dflag_xnc
is_allowed
make_this_flags
publish_flag
adjust_flags
remove_flag
core_parse
rec_env
sys_pre_expand
v3_kernel_pp
sys_core_fold
v3_life
erl_bifs
beam_utils
core_pp
beam_listing
beam_flatten
cerl_inline
v3_codegen
sys_pre_attributes
core_lint
beam_opcodes
v3_core
beam_block
beam_clean
beam_type
beam_jump
cerl_clauses
beam_bool
sys_core_dsetel
beam_asm
core_scan
cerl_trees
beam_validator
v3_kernel
beam_dead
beam_trim
sys_core_inline
beam_disasm
beam_dict
beam_bsm
core_lib
sys_expand_pmod
cerl
read_only
the
generated
transformed
be
should
real
with
called
transform_error
blog_terms
'-tab2file/3-fun-0-'
log_terms
'-tab2file/3-fun-1-'
'-file2tab/2-fun-0-'
'-file2tab/2-fun-1-'
'-table/2-fun-1-'
'-table/2-fun-0-'
'-table/2-fun-2-'
'-table/2-fun-3-'
'-table/2-fun-4-'
'-table/2-fun-5-'
'-table/2-fun-6-'
'-table/2-fun-7-'
'-table/2-fun-8-'
'-table/2-lc$^1/1-1-'
'-table/2-lc$^0/1-0-'
'-table/2-fun-9-'
'-qlc_next/2-fun-0-'
'-qlc_prev/2-fun-0-'
'-qlc_select/1-fun-0-'
'-i/0-fun-0-'
'-hform/6-lc$^0/1-0-'
re_match
print_re_num
re_display
re_search
do_display_item
do_display_items
do_display
print_number
strip
right
nonl
quit
choice
'(c)ontinue (q)uit (p)Digits (k)ill /Regexp -->'
'EOT  (q)uit (p)Digits (k)ill /Regexp -->'
kernel_match_error
pad_right
hform
is_reg
prinfo2
prinfo
tabs
mem
default_option
n_objects
traverse
qlc_select
qlc_prev
qlc_next
is_unique_objects
is_sorted_key
num_of_objects
table_info
pre_fun
post_fun
info_fun
format_fun
lookup_fun
first_next
last_prev
tabfile_info
cannot_create_table
create_tab
load_table
scan_for_endinfo
md5_and_convert
major_version
minor
major
get_header_data
chunk
wrap_chunk
bchunk
wrap_bchunk
verify_header_mandatory
count_mandatory
verify
parse_f2t_opts
invalid_object_count
checksum_error
do_read_and_verify
read_error
unsupported_file_version
repaired
file2tab
object_count
md5sum
parse_ft_info_options
malformed_option
unknown_option
parse_ft_options
md5terms
ft_options_to_list
dump_file
eaccess
filetab_options
extended_info
badtab
tab2file
do_filter
init_table_sub
end_of_input
init_table_continue
init_table
test_ms
from_ets
to_dets
to_ets
from_dets
do_foldr
transform_from_shell
fun_data
fun2ms
repair_continuation
match_spec_run
is_set
is_subset_2
is_subset_1
is_subset
difference_2
difference_1
intersection_list
intersection_2
intersection_1
union_list
balance_revlist_1
balance_revlist
push
union_2
union_1
del_element
from_ordset
is_member_1
is_member
singleton
local_address_not_found
assertion_failed
'-calculate_addresses/3-lc$^0/1-0-'
load_fe
'-offsets_to_addresses/2-lc$^0/1-0-'
'-export_funs/4-lc$^0/1-0-'
'-patch_consts/3-lc$^0/1-0-'
'-sort_and_write/4-fun-0-'
'-sort_on_representation/1-lc$^0/1-0-'
'-enter_datum/3-lc$^0/1-1-'
'-enter_datum/3-lc$^1/1-0-'
'-patch_to_emu_step1/1-lc$^0/1-0-'
update_code_size
enter_code
hipe_assert_code_area
assert_local_patch
mfa_to_address
find_na_or_make_stub
get_native_address
remove_refs_from
redirect_referred_from
redirect
mark_referred_from
get_refs_from
emu_make_stubs
patch_to_emu_step2
invalidate_funinfo_native_addresses
patch_to_emu_step1
patch_to_emu
address_to_mfa
add_ref
constant_not_found
find_const
write_u8
write_bytes
write_words
bytes_to_32
term_to_word
merge_term
enter_datum
enter_data
alloc_data
create_data_segment
primop_address
bif_address
write_u32
write_u64
write_word
patch_insn
patch_instr
sort_on_representation
sort_and_write
sorted
patch_label_or_labels
patch_consts
load_mfa
patch_load_mfa
make_fe
fun_to_address
patch_closure
c_const
constant
local_function
remote_function
patch_load_address
enter_sdesc
patch_sdesc
atom_to_word
patch_atom
patch_offset
patch_all_offsets
patch_all
patch_call_insn
patch_mfa_call_list
patch_bif_call_list
patch_call
load_address
load_atom
sdesc
x86_abs_pcrel
patch
set_native_address
set_funinfo_native_address
export_funs
closure
find_closure_refs
find_closure_patches
offsets_to_addresses
calculate_addresses
fundef
trampoline_map_lookup
trampoline_map_get
mk_trampoline_map
add_callee_mfas
find_callee_mfas
check_crc
hipe_bifs
load_common
hipe_patch_closures
version_check
bad_crc
amd64
arm
ppc64
powerpc
ultrasparc
x86
chunk_name
'-find_modules/4-lc$^0/1-0-'
add_element
'-find_modules/4-fun-0-'
find_modules
strip_last
first_1
last_1
is_segmented_1
is_segmented
is_valid_1
is_valid
concat_1
sticky_directory
bad_name
bad_directory
'-start_link/1-fun-0-'
'-init/3-fun-0-'
'-get_user_lib_dirs_1/1-lc$^0/1-0-'
'-handle_call/3-fun-5-'
'-handle_call/3-lc$^0/1-0-'
'-choose_bundles/1-lc$^0/1-0-'
'-choose_bundles/1-lc$^1/1-1-'
'-vsn_to_num/1-lc$^0/1-0-'
'-is_vsn/1-fun-0-'
'-is_numstr/1-fun-0-'
'-exclude/2-lc$^0/1-0-'
'-archive_subdirs/1-fun-0-'
'-all_archive_subdirs/1-fun-0-'
'-stick_dir/3-fun-0-'
'-stick_dir/3-fun-1-'
to_atom
strip_mod_info
all_l
do_soft_purge
do_purge
mod_to_bin
int_list
post_beam_load
hipe_result_to_status
load_native_code
no_native
try_load_module
modp
do_load_binary
get_mods
sticky
'bad request to code'
priv
do_dir
lookup_name
delete_name_dir
replace_name
del_ebin
check_pars
replace_path1
insert_old_shadowed
del_path1
all_archive_subdirs
archive_subdirs
insert_name
code_names
init_namedb
maybe_update
do_add
do_check_path
check_path
get_name2
get_name1
get_name
exclude
get_arg
add_pa_pz
add1
strip_path
excl
exclude_pa_pz
pz
add_loader_path
choose
split2
split1
is_numstr
is_vsn
vsn_to_num
create_bundle
choose_bundles
filter_mods
locate_mods
update_cache
rehash_cache
code_cache
create_cache
do_mod_call
app
obj
do_sys_cmd
gen_reply
code_call
split_paths
get_user_lib_dirs_1
get_user_lib_dirs
code_path_cache
no_cache
'-set_primary_archive/2-lc$^0/1-0-'
to_path
has_ext
filter2
decorate
build
clash
is_cached
which2
minimal
get_mode
do_s
compiler
do_stick_dirs
stick
interactive
load_hipe_modules
replace_path
del_path
add_pathsa
add_pathsz
add_paths
add_patha
add_pathz
add_path
is_sticky
unstick_mod
stick_mod
unstick_dir
stick_dir
priv_dir
compiler_dir
dir
lib_dir
root_dir
all_loaded
get_object_code
soft_purge
load_native_sticky
load_native_partial
load_binary
load_abs
'-do_start_slave/3-fun-0-'
'-do_start_slave/3-fun-1-'
relay_loop
relay_start
do_start_slave
no_master
master
illegal_function_call
global_group_not_runnig
not_boolean
'-init/1-fun-0-'
'-sync_check_init/8-fun-0-'
'-disconnect_nodes/1-fun-0-'
'-force_nodedown/1-fun-0-'
no_group
own_group
publish_arg
force_nodedown
disconnect_nodes
kill_global_group_check
check_exit_where
check_exit_send
not_found_ignored
check_exit_reg
check_exit
safesend_nc
not_own_group
safesend
send_monitor
delete_all
no_global_group_configuration
sync_check
sync_check_init
sync_check_node
grp_tuple
'node defined twice'
no_name
original
config_scan
config_ok
conf_check
send_res
find_name_res
find_name
registered_names_res
illegal_message
global_group_check
own_group_name
own_group_nodes
synced_nodes
sync_error
no_contact
other_groups
monitoring
not_agreed
agreed
whereis_test
names_test
test3844zty
'invalid global_groups definition'
publish_type
no_conf
whereis_name_test
send_test
registered_names_test
ng_add_check
own_nodes
try_connect
connect1
'rabbit at mail'
'ZKTGFBRYQMLMYZWGNZEZ'
file_reply
wait_file_reply
file_request
check_args
check_and_call
character
mode_list
make_binary
file_name_1
file_name
path_open_first
eval_stream2
parse_erl_exprs
eval_stream
consult_stream
change_time
change_group
change_owner
change_mode
path_open
path_script
path_eval
new_bindings
path_consult
ipread_s32bu_p32bu_2
ipread_s32bu_p32bu_int
copy_opened_int
copy_int
put_chars
get_chars
rawopen
raw_files
ram
file_io_servers
pid2name
terminated
undefined_script
source_file_not_found
vxworks_first2
vxworks_first
major_os_type
make_abs_path
readable_file
try_rule
source_by_rules
source_file
get_source_file
parse_transform
d
fast
export_all
outdir
filter_options
which
try_file
source_search_rules
find_src
separators
win32_nativename
nativename
win32_split
unix_split
vxworks_split
rootname2
rootname
win32_pathtype
unix_pathtype
maybe_remove_dirsep
join1
extension
skip_prefix1
not_device
skip_prefix
basename1
absname_pretty
absname_join
next_random
make_info
random_cookie
raw_write_file_info
create_cookie
check_cookie1
check_cookie
check_attributes
make_error
raw_read_file_info
read_cookie
cookies
setcookie
init_cookie
auth_reply
ddd_server
hello
echo
distribution_not_started
node_cookie
cookie
pang
pong
ping
no_reg_reply_from_epmd
already_registered
parse_name
parse_line
scan_line
scan_names
names_loop
do_get_names
cstring
wait_for_close
select_best_version
best_version
wait_for_port_reply_name
wait_for_port_reply_cont2
wait_for_port_reply_cont
wait_for_port_reply
wait_for_port_reply_v0
get_port
get_port_v0
wait_for_reg_reply_v0
garbage_from_epmd
wait_for_reg_reply
epmd_dist_low
epmd_dist_high
epmd_close
do_register_node
do_register_node_v0
r4
client_info_req
alive
names1
names
port_please1
'-do_accept/6-fun-0-'
'-do_accept/6-fun-1-'
'-do_accept/6-fun-2-'
'-do_accept/6-fun-3-'
'-do_accept/6-fun-4-'
'-do_accept/6-fun-5-'
'-do_setup/6-fun-0-'
'-do_setup/6-fun-1-'
'-do_setup/6-fun-2-'
split_stat
is_node_name
mask
get_ifs
check_ip
get_tcp_address
splitnode
handshake_we_started
reset_timer
port_please
do_setup
get_remote_id
dist_nodelay
handshake_other_started
hs_data
no_node
do_accept
flush_controller
accept_loop
eaddrinuse
inet_dist_use_interface
inet_dist_listen_max
inet_dist_listen_min
do_listen
register_node
invalid_key
short
bad_node
ok_pending
nok_pending
already_pending
'-terminate/2-fun-1-'
'-terminate/2-fun-2-'
'-handle_info/2-fun-0-'
'-handle_info/2-fun-1-'
'-init_node/2-fun-0-'
'-create_hostpart/2-fun-0-'
'-print_info/0-fun-0-'
getnode
nformat
fmt_address
display_info
print_info
restart_ticker
all_atoms
reply_waiting1
reply_waiting
get_nodes_info
get_node_info
net_setuptime
connecttime
set_node
duplicate_name
sync_cookie
start_protos
childspecs
proto_dist
create_hostpart
long
create_name
init_node
get_proto_mod
unsupported_address_type
select_mod
net_address
setup
spawn_func
bye
aux_ticker1
aux_ticker
start_aux_ticker
ticker_loop
get_up_nodes
get_nodes
disconnect_pid
do_disconnect
mk_monitor_nodes_error
bad_option_value
options_not_a_list
unknown_options
check_options
option_value_mismatch
check_opt
mark_sys_dist_nodedown
up_nodedown
up_pending_nodedown
pending_nodedown
get_conn
ticker_exit
pending_own_exit
conn_own_exit
accept_exit
listen_exit
do_handle_exit
aux_tick
transition_period_end
unsupported_protocol
controller
accept_connection
registered_send
badcookie
remarked
bad_request
inserted
accept_pending
is_pending
change_initiated
shorter
longer
unchanged
ongoing_change_to
tick_change
up_pending
publish_on_nodes
is_auth
not_implemented
bad_cookie
tick
ticker
nodistribution
connection
never
dist_auto_connect
passive_connect_monitor
barred_connection
sys_dist
do_connect
hidden_connect_node
connect_node
update_publish_nodes
publish_on_node
hidden_connect
ticktime_res
get_net_ticktime
new_ticktime
set_net_ticktime
verbose
nodes_info
node_info
kernel_apply
net_sup_dynamic
net_ticktime
ticktime
lname
start_p
protocol_childspecs
epmd_module
no_epmd
could_not_start_server
inet_gethost_native_sup
'-handle_message/2-fun-0-'
'-restart_port/1-fun-0-'
pick_names
ndx
pick_addresses_v6
pick_addresses_v4
listify
malformed_response
parse_address
ensure_started
getit
soft_restart
debug_level
gethost_poolsize
get_poolsize
gethost_extra_args
gethost_prioritize
get_extra_args
do_open_port
get_rid
pick_client
pick_request
find_request
do_handle_call
restart_port
handle_message
ign_req_index
ign_requests
num_requests
rid
run_once
start_raw
server_init
'-services/2-fun-0-'
'-rpc/2-fun-0-'
'-hosts/2-fun-0-'
'-hosts_vxworks/1-fun-0-'
'-resolv/2-fun-0-'
'-host_conf_linux/2-fun-0-'
'-host_conf_freebsd/2-fun-0-'
'-host_conf_bsdos/2-fun-0-'
'-nsswitch_conf/2-fun-0-'
'-protocols/2-fun-0-'
'-netmasks/2-fun-0-'
'-networks/2-fun-0-'
'-ntoa_done/2-fun-0-'
'-ntoa_done/2-fun-1-'
'-ntoa_done/1-fun-0-'
split_mid_comma
split_comma
split_end
split_mid
dig_to_hex
dig_to_dec
ntoa_done
dup
tox
x4
ipv6_addr_done
ipv6_addr
tod
d3
is_dom2
is_dom_ldh
is_dom1
is_vis1
port_proto
collect_line
read_line
get_line
parse_cs
skip
parse_fd
networks
netmasks
protocols
delete_options
noname
services
not_owner
'-getiflist/0-fun-0-'
'-ifget/2-fun-0-'
'-ifset/2-fun-0-'
'-getif/0-fun-0-'
'-getif/1-fun-0-'
'-gethostname/0-fun-0-'
'-open/7-lc$^0/1-0-'
'-ii/3-fun-0-'
'-ii/3-lc$^0/1-0-'
'-ii/3-fun-1-'
'-info_lines/3-lc$^0/1-0-'
'-i_line/3-lc$^0/1-0-'
'-h_line/1-lc$^0/1-0-'
'-port_list/1-fun-0-'
udp_sync_input
tcp_sync_input
tcp_controlling_process
tcp_close
exbadseq
exbadport
port_list
udp_sockets
tcp_sockets
fmt_port
ntoa
enotconn
fmt_addr
listening
fmt_status
sent
foreign_address
local_address
upper
hh_field
h_field
h_line
i_line
info_lines
smax
ii
i
ipv6_address
no_default
wins
getaddrs_tm
add_opt
sctp_opt_ifaddr
sctp_opt
translate_ip
sctp_opts
sctp_options
udp_add
udp_opt
list_add
backlog
list_opt
listen_opts
listen_options
con_add
ifaddr
con_opt
connect_opts
connect_options
stats
options
getaddrs
getll
gethostbyaddr_tm
gethostbyname_tm
popf
pushf
withsocket
getif
udp_closed
optuniquify
udp_controlling_process
controlling_process
udp_close
udp_opts
getaddr_tm
getaddr
getserv
'-unix_cmd/1-fun-0-'
validate1
validate
mk_cmd
eot
unix_get_data
start_port
unix_cmd
extensions
reverse_element
split_path
verify_executable
find_executable1
find_executable
'-init/0-fun-0-'
'-set_hostname/1-fun-0-'
'-load_hosts/2-fun-0-'
'-win32_load1/3-fun-0-'
'-win32_load1/3-fun-1-'
'-vxworks_load_hosts/0-fun-0-'
scan_inetrc
more_chars
parse_inetrc_skip_line
parse_inetrc
inet_warnings
try_get_rc
inetrc
read_inetrc
valid_type
extract_cfg_files1
registry
extract_cfg_files
read_rc
next_line
check_hostShow
hosts_vxworks
cmd
vxworks_load_hosts
win32_get_strings
split_line
win32_split_line
expand
win32_load1
change_key
windows
nt
win32_load_from_registry
load_hosts
chars
load_resolv
set_search_dom
inet_dns_when_nis
add_dns_lookup
standalone_host
no_ERLRESCONF
no_hosts_file
'Warning: No HOSTSFILE specified!'
address
'Warning: No NAMESERVER or RESOLVFILE specified!'
nsswitch_conf
host_conf_linux
host_conf_freebsd
host_conf_bsdos
sunos
netbsd
freebsd
'bsd/os'
do_load_resolv
nonames
longnames
shortnames
erl_dist_mode
gethostbyname
ose_inet_port
loader
ose
formerr
nxdomain
'-add_hosts/1-fun-0-'
'-add_rc_list_int/1-fun-0-'
badopt
clear_search
clear_ns
'-add_rc_list_int/1-fun-1-'
host
'-get_rc_hosts/2-fun-0-'
'-res_cache_answer/1-fun-0-'
'-lookup_type/2-lc$^0/1-0-'
'-lookup_cname/1-lc$^0/1-0-'
'-res_lookup_type/3-lc$^0/1-0-'
'-handle_call/3-fun-3-'
'-handle_call/3-fun-4-'
'-do_refresh_cache/4-fun-0-'
'-delete_older/5-fun-0-'
delete_older
delete_n_oldest
alloc_entry
do_refresh_cache
stop_timer
init_timer
stripdot_1
stripdot
hex
dnib
dn_in_addr_arpa
dn_ip6_int
tolower
lower_rr
filter_rr
match_rr
do_lookup_rr
times
cache_rr
do_add_rr
refresh_timeout
visible_string
reset_db
inet_cache
lookup_socket
unregister_socket
register_socket
dnt
dnip
ent_gethostbyaddr
res_gethostbyaddr
ptr
gethostbyaddr
res_lookup_type
res_hostent_by_domain
lookup_rr
cname
lookup_cname
lookup_type
hostent_by_domain
hostent
a
aaaa
make_hostent
get_searchlist
getbysearch
dots
getbyname
dns_rec
res_cache_answer
del_rr
dns_rr
add_rr
db_get
hostname
methods
noproxy
server
socks_option
res_id
res_recurse
next_id
recurse
res_option
get_rc_hosts
get_rc_ns
get_rc_noproxy
res_domain
res_search
res_inet6
res_usevc
res_alt_ns
res_ns
res_retry
res_timeout
cache_refresh_interval
res_lookup
domain
socks5_server
usevc
alt_nameserver
nameserver
socks5_noproxy
retry
cache_size
socks5_port
cache_refresh
socks5_methods
get_rc
dns
yp
nis
nisplus
native
translate_lookup
add_rc_list_int
add_rc_list
add_rc_bin
consult
add_rc
sctp_module
set_sctp_module
udp_module
set_udp_module
tcp_module
set_tcp_module
set_cache_refresh
set_cache_size
del_socks_noproxy
add_socks_noproxy
del_socks_methods
add_socks_methods
set_socks_port
set_socks_server
set_usevc
set_inet6
set_retry
set_timeout
set_recurse
set_lookup
set_domain
set_hostname
del_search
ins_search
add_search
del_alt_ns
ins_alt_ns
add_alt_ns
del_ns
ins_ns
add_ns
clear_hosts
del_host
add_host
hosts
add_hosts
resolv
add_resolv
'$5'
'$4'
'$3'
'-register_name/3-fun-0-'
'-check_dupname/2-lc$^0/1-0-'
'-unregister_name/1-fun-0-'
'-re_register_name/3-fun-0-'
'-register_name_external/3-fun-0-'
'-check_replies/3-lc$^0/1-0-'
'-resolved/5-fun-0-'
'-resolved/5-fun-1-'
'-resolved/5-fun-2-'
'-resolved/5-fun-3-'
'-resolved/5-fun-4-'
'-start_resolver/2-fun-0-'
'-do_ops/5-lc$^1/1-1-'
'-do_ops/5-lc$^0/1-0-'
'-do_ops/5-fun-0-'
'-do_ops/5-lc$^2/1-2-'
'-do_ops/5-lc$^3/1-3-'
'-do_ops/5-fun-1-'
'-do_ops/5-lc$^4/1-4-'
'-do_ops/5-fun-2-'
'-sync_others/1-fun-0-'
'-sync_others/1-fun-1-'
'-lock_still_set_old/3-lc$^0/1-0-'
'-del_name/2-lc$^1/1-1-'
'-del_name/2-lc$^0/1-0-'
'-start_the_locker/1-fun-0-'
'-exclude_known/2-lc$^0/1-0-'
'-delete_lock/2-fun-0-'
'-pid_locks/1-fun-0-'
'-pid_locks/1-lc$^0/1-0-'
'-send_again/1-fun-0-'
'-start_sync/2-fun-0-'
'-sync_init/2-fun-0-'
'-sync_loop/2-fun-0-'
'-start_the_deleter/1-fun-0-'
'-loop_the_deleter/1-fun-0-'
'-loop_the_deleter/1-fun-1-'
'-start_the_registrar/0-fun-0-'
'-do_monitor/1-fun-0-'
intersection
do_monitor
unexpected_message
loop_the_registrar
start_the_registrar
deleter
collect_deletions
loop_the_deleter
start_the_deleter
get_own_nodes_with_errors
get_own_nodes
check_sync_nodes
synced
sync_loop
sync_init
start_sync
new_node_name
change_our_node_name
send_again
uniform
seed
random_seed
random_sleep
tab2list
get_names
handle_nodedown
del_locks
rpid_is_locking
pid_locks
delete_lock
pid_is_locking
unlink_pid
dounlink_ext
dolink_ext
notify_all_name
global_name_conflict
random_notify_name
random_exit_name
minmax
resolve_it
exchange_names
reset_node_state
kill_resolver
cancel_locker
split_node
is_node_local
remove_node2
remove_node
find_node_tag2
find_node_tag
the_boss
delete_global_lock
call_fun
reject_lock_set
lock_set_loop
exclude_known
random_element
update_locker_known
lock_rejected
locker_failed
locker_succeeded
rejected
locker_trace
delete_nonode
not_ok
lock_nodes_safely
locker_lock_id
select_node
him
no_fun
lock_set
remove_from_known
do_trace
the_locker_message
loop_the_locker
locker_exited
multi
init_the_locker
start_the_locker
delete_global_name
delete_global_name2
delete_global_name_keep_pid
delete_name
del_names
del_name
extra_info
lock_still_set_old
lock_still_set
insert_global_name
sync_other
global_connect_retries
sync_others
do_ops
kill_monitor_proc
rem_lock
remove_lock
handle_del_lock
is_lock_set
is_global_lock_set
ins_lock
insert_lock
can_set_lock
handle_set_lock
ins_name_ext
ins_name
resend_pre_connect
resolver
start_resolver
do_whereis
cancel_resolved_locker
ops
added
add_to_known
lock
resolve
wait_lock
lock_id
pre_connect
his_locker_new
his_the_locker
prot_vsn
check_replies
local_lock_check
set_lock_on_nodes
lock_on_known_nodes
set_lock_known
send_high_level_trace
wait_high_level_trace
nodes_changed
to_external
symmetric_partition
high_level_trace
registrar_died
locker_died
deleter_died
new_resolver
no_longer_a_pid
locker
trace_message
extra_nodedown
new_nodes
sync_tag_his
exit_resolver
exchange
exchange_ops
save_ops
resolved
lock_is_set
init_connect
sync_tag_my
in_sync
async_del_name
async_del_lock
get_names_ext
high_level_trace_start
high_level_trace_stop
get_protocol_version
high_level_trace_get
get_synced
get_known
register_ext
trans_all_known
connect_all
no_trace
global_pid_ids
global_names_ext
global_locks
trans
del_lock
set_lock
unregister_name_external
register_name_external
global_names
registered_names
re_register_name
unregister_name
allow
global_multi_name_action
global_pid_names
check_dupname
registrar
node_disconnected
whereis_name
iterator_1
iterator
keys
to_list_1
largest_1
largest
take_largest1
take_largest
smallest_1
smallest
take_smallest1
take_smallest
delete_1
delete_any
from_orddict
balance_list_1
balance_list
balance
count
enter
key_exists
insert_1
update_1
get_1
is_defined_1
is_defined
lookup_1
is_empty
'-handle_cast/2-fun-0-'
'-do_call/3-fun-0-'
'-do_multicall/5-fun-0-'
'-async_call/4-fun-0-'
'-parallel_eval/1-fun-0-'
pinfo
build_args
pmap
map_nodes
parallel_eval
promise_reply
do_yield
nb_yield
async_call
safe_multi_server_call
multi_server_call
do_multicall
multicall
eval_everywhere
rpc_check
rpc_check_t
local_call
nonexisting_name
sbcast
block_call
empty
'-to_list/1-fun-0-'
'-from_list/1-fun-0-'
'-fetch_keys/1-fun-0-'
'-erase/2-fun-0-'
'-store/3-fun-0-'
'-append/3-fun-0-'
'-append_list/3-fun-0-'
'-update/3-fun-0-'
'-update/4-fun-0-'
'-update_counter/3-fun-0-'
'-merge/3-fun-0-'
'-merge/3-fun-1-'
'-merge/3-fun-2-'
'-merge/3-fun-3-'
contract_segs
expand_segs
mk_seg
rehash
maybe_contract_segs
maybe_contract
maybe_expand_segs
maybe_expand_aux
maybe_expand
put_bucket_s
get_bucket_s
filter_bucket
filter_bkt_list
filter_seg_list
filter_dict
map_bucket
map_bkt_list
map_seg_list
map_dict
fold_bucket
fold_seg
fold_segs
fold_dict
on_bucket
get_bucket
get_slot
fold
counter_bkt
update_bkt
app_list_bkt
append_list
append_bkt
store_bkt_val
erase_key
fetch_keys
find_val
fetch_val
fetch
find_key
already_present
'-update_chsp/2-fun-0-'
invalid_module
'-validMods/1-fun-0-'
report_progress
restart_type
child_type
extract_child
supervisor_report
errorContext
reason
offender
difference
inPeriod
add_restart
invalid_modules
dynamic
validMods
invalid_shutdown
validShutdown
invalid_mfa
validFunc
validName
invalid_child_type
validChildType
invalid_child_spec
check_childspec
duplicate_child_name
check_startspec
supname
invalid_period
validPeriod
invalid_intensity
validIntensity
invalid_strategy
validStrategy
invalid_type
init_state1
init_state
remove_child
do_replace_child
replace_child
split_child
del_child
state_del_child
monitor_child
brutal_kill
terminate_children
rest_for_one
reached_max_restart_intensity
child_terminated
do_restart
find
handle_start_child
update_chsp
update_childspec1
update_childspec
bad_flags
check_flags
null
store
do_start_child_i
do_start_child
child
start_children
bad_start_spec
init_dynamic
start_spec
init_children
supervisor_data
simple_one_for_one
check_childspecs
which_children
delete_child
restart_child
start_child
distribution_not_changed
one_for_all
kernel_safe_sup
one_for_one
global_groups
is_gg_changed
global_groups_removed
global_groups_added
global_groups_changed
do_global_groups_change
is_dist_changed
distribution_changed
do_distribution_change
start_pg2
start_disk_log
boot_server_slaves
get_boot_args
start_boot_server
start_dist_ac
nostick
get_code_args
worker
safe
bad_config
get_error_logger_type
shutdown_error
'-kill_children/1-fun-0-'
exit_after
set_timer
kill_all_procs_1
kill_all_procs
kill_children
terminate_child
terminate_child_i
get_child_i
prep_stop
loop_it
start_supervisor
start_the_app
start_it_new
bad_return
start_it_old
bad_keys
terminate_loop
main_loop
io_request
init_loop
get_child
'-print_log/1-fun-0-'
close_log_file
remove_debug
install_debug
trim
stat
no_statistics
start_time
current_time
messages_in
messages_out
get_stat
init_stat
standard_io
do_change_code
unknown_debug
debug_cmd
unknown_system_msg
do_cmd
suspend_loop_hib
suspend_loop
mfa
send_system_msg
install
no_debug
log_to_file
change_code
resume
permit_only_loaded_application
permit
takeover_application
'-do_multi_call/4-fun-0-'
get_debug
could_not_find_registerd_name
name_to_pid
process_was_not_started_by_proc_lib
get_parent
process_not_registered_globally
process_not_registered
get_proc_name
dbg_opts
generic_debug
dbg_options
print_log
handle_common_reply
dispatch
unmonitor
start_monitor
rec_nodes_rest
rec_nodes
send_nodes
do_multi_call
do_send
decode_msg
bad_return_value
multi_call
do_abcast
abcast
'$gen_cast'
cast_msg
do_cast
'$gen_call'
inet_default_connect_options
'-build_typed_attribute/2-fun-0-'
'-attribute_farity_list/1-lc$^0/1-0-'
'-check_clauses/3-fun-0-'
'-normalise/1-fun-0-'
'-abstract/1-lc$^0/1-0-'
'-abstract/2-lc$^0/1-0-'
yeccgoto_typed_record_fields
yeccgoto_typed_exprs
yeccgoto_typed_expr
yeccgoto_typed_attr_val
yeccgoto_type_spec
yeccgoto_type_sigs
yeccgoto_type_sig
yeccgoto_type_guards
yeccgoto_type_guard
yeccgoto_type
yeccgoto_tuple
yeccgoto_try_expr
yeccgoto_try_clauses
yeccgoto_try_clause
yeccgoto_try_catch
yeccgoto_top_types
yeccgoto_top_type_100
yeccgoto_top_type
yeccgoto_tail
yeccgoto_strings
yeccgoto_spec_fun
yeccgoto_rule_clauses
yeccgoto_rule_clause
yeccgoto_rule_body
yeccgoto_rule
yeccgoto_record_tuple
yeccgoto_record_fields
yeccgoto_record_field
yeccgoto_record_expr
yeccgoto_receive_expr
yeccgoto_query_expr
yeccgoto_prefix_op
yeccgoto_opt_bit_type_list
yeccgoto_opt_bit_size_expr
yeccgoto_mult_op
yeccgoto_list_op
yeccgoto_list_comprehension
yeccgoto_list
yeccgoto_lc_exprs
yeccgoto_lc_expr
yeccgoto_int_type
yeccgoto_if_expr
yeccgoto_if_clauses
yeccgoto_if_clause
yeccgoto_guard
yeccgoto_function_clauses
yeccgoto_function_clause
yeccgoto_function_call
yeccgoto_function
yeccgoto_fun_type_100
yeccgoto_fun_type
yeccgoto_fun_expr
yeccgoto_fun_clauses
yeccgoto_fun_clause
yeccgoto_form
yeccgoto_field_types
yeccgoto_field_type
yeccgoto_exprs
yeccgoto_expr_max
yeccgoto_expr_900
yeccgoto_expr_800
yeccgoto_expr_700
yeccgoto_expr_600
yeccgoto_expr_500
yeccgoto_expr_400
yeccgoto_expr_300
yeccgoto_expr_200
yeccgoto_expr_160
yeccgoto_expr_150
yeccgoto_expr_100
yeccgoto_expr
yeccgoto_cr_clauses
yeccgoto_cr_clause
yeccgoto_comp_op
yeccgoto_clause_guard
yeccgoto_clause_body
yeccgoto_clause_args
yeccgoto_case_expr
yeccgoto_bit_type_list
yeccgoto_bit_type
yeccgoto_bit_size_expr
yeccgoto_bit_expr
yeccgoto_binary_type
yeccgoto_binary_comprehension
yeccgoto_binary
yeccgoto_bin_unit_type
yeccgoto_bin_elements
yeccgoto_bin_element
yeccgoto_bin_base_type
yeccgoto_attribute
yeccgoto_attr_val
yeccgoto_atomic
yeccgoto_atom1
yeccgoto_argument_list
yeccgoto_add_op
yeccpars2_455
yeccpars2_454
yeccpars2_452
yeccpars2_450
yeccpars2_448
yeccpars2_446
yeccpars2_444
yeccpars2_443
yeccpars2_442
yeccpars2_440
yeccpars2_439
yeccpars2_438
yeccpars2_437
yeccpars2_436
yeccpars2_435
yeccpars2_434
yeccpars2_432
yeccpars2_431
yeccpars2_429
remote
yeccpars2_428
yeccpars2_425
yeccpars2_424
yeccpars2_423
yeccpars2_422
yeccpars2_421
yeccpars2_420
yeccpars2_419
yeccpars2_418
yeccpars2_417
yeccpars2_415
yeccpars2_414
yeccpars2_413
yeccpars2_412
yeccpars2_411
yeccpars2_410
yeccpars2_409
yeccpars2_408
yeccpars2_407
yeccpars2_406
yeccpars2_405
yeccpars2_402
yeccpars2_401
yeccpars2_400
yeccpars2_399
yeccpars2_398
yeccpars2_397
yeccpars2_396
yeccpars2_395
yeccpars2_394
yeccpars2_392
yeccpars2_390
yeccpars2_388
yeccpars2_387
yeccpars2_385
yeccpars2_384
record_index
yeccpars2_382
yeccpars2_381
yeccpars2_380
yeccpars2_379
yeccpars2_378
yeccpars2_376
yeccpars2_374
yeccpars2_373
yeccpars2_372
yeccpars2_371
yeccpars2_370
yeccpars2_369
yeccpars2_367
yeccpars2_366
yeccpars2_365
yeccpars2_364
yeccpars2_363
yeccpars2_362
yeccpars2_361
yeccpars2_359
yeccpars2_358
yeccpars2_355
yeccpars2_354
yeccpars2_353
yeccpars2_351
yeccpars2_350
yeccpars2_349
yeccpars2_347
yeccpars2_346
yeccpars2_345
yeccpars2_344
yeccpars2_343
yeccpars2_342
yeccpars2_340
yeccpars2_339
yeccpars2_338
yeccpars2_337
yeccpars2_336
yeccpars2_334
yeccpars2_333
yeccpars2_332
yeccpars2_330
bc
yeccpars2_329
yeccpars2_328
yeccpars2_326
yeccpars2_325
yeccpars2_324
yeccpars2_323
yeccpars2_322
yeccpars2_321
yeccpars2_320
yeccpars2_319
yeccpars2_318
yeccpars2_317
yeccpars2_316
yeccpars2_315
yeccpars2_314
yeccpars2_313
yeccpars2_311
yeccpars2_309
yeccpars2_308
yeccpars2_307
yeccpars2_306
yeccpars2_305
yeccpars2_304
yeccpars2_303
yeccpars2_301
yeccpars2_300
yeccpars2_299
yeccpars2_298
yeccpars2_296
yeccpars2_295
yeccpars2_294
yeccpars2_293
yeccpars2_291
yeccpars2_290
yeccpars2_288
yeccpars2_287
yeccpars2_286
yeccpars2_285
yeccpars2_284
yeccpars2_283
yeccpars2_282
yeccpars2_281
yeccpars2_280
yeccpars2_279
yeccpars2_277
yeccpars2_275
yeccpars2_274
yeccpars2_273
lc
yeccpars2_272
yeccpars2_271
generate
yeccpars2_269
b_generate
yeccpars2_267
yeccpars2_265
yeccpars2_264
yeccpars2_263
yeccpars2_262
yeccpars2_260
yeccpars2_258
yeccpars2_257
yeccpars2_256
yeccpars2_254
yeccpars2_252
yeccpars2_251
yeccpars2_248
yeccpars2_247
yeccpars2_246
yeccpars2_245
yeccpars2_244
yeccpars2_243
yeccpars2_242
yeccpars2_240
yeccpars2_238
yeccpars2_236
yeccpars2_234
yeccpars2_232
yeccpars2_230
yeccpars2_228
yeccpars2_227
yeccpars2_226
yeccpars2_225
yeccpars2_224
yeccpars2_223
yeccpars2_221
yeccpars2_220
yeccpars2_218
yeccpars2_217
yeccpars2_215
yeccpars2_214
yeccpars2_213
yeccpars2_211
yeccpars2_210
yeccpars2_209
yeccpars2_207
yeccpars2_205
yeccpars2_204
yeccpars2_203
yeccpars2_202
yeccpars2_200
yeccpars2_199
yeccpars2_198
yeccpars2_196
yeccpars2_195
yeccpars2_194
yeccpars2_193
yeccpars2_191
yeccpars2_190
yeccpars2_189
yeccpars2_188
yeccpars2_187
yeccpars2_185
yeccpars2_184
yeccpars2_183
yeccpars2_180
yeccpars2_178
yeccpars2_177
yeccpars2_175
yeccpars2_174
yeccpars2_173
yeccpars2_171
yeccpars2_170
yeccpars2_169
yeccpars2_168
yeccpars2_167
yeccpars2_166
yeccpars2_165
yeccpars2_164
yeccpars2_163
yeccpars2_162
yeccpars2_161
yeccpars2_160
yeccpars2_159
yeccpars2_158
yeccpars2_157
yeccpars2_156
yeccpars2_155
yeccpars2_154
yeccpars2_153
yeccpars2_152
yeccpars2_151
yeccpars2_150
yeccpars2_149
yeccpars2_148
yeccpars2_147
yeccpars2_146
yeccpars2_145
yeccpars2_144
yeccpars2_143
yeccpars2_142
yeccpars2_141
yeccpars2_140
yeccpars2_139
yeccpars2_138
yeccpars2_137
yeccpars2_136
yeccpars2_135
yeccpars2_134
yeccpars2_133
yeccpars2_131
yeccpars2_130
yeccpars2_129
yeccpars2_127
constraint
yeccpars2_125
yeccpars2_124
yeccpars2_122
yeccpars2_121
yeccpars2_120
yeccpars2_118
yeccpars2_116
yeccpars2_114
yeccpars2_113
range
yeccpars2_111
yeccpars2_110
yeccpars2_109
yeccpars2_108
yeccpars2_107
yeccpars2_106
yeccpars2_105
remote_type
yeccpars2_104
yeccpars2_103
yeccpars2_102
yeccpars2_101
yeccpars2_99
yeccpars2_98
yeccpars2_97
field_type
yeccpars2_95
yeccpars2_93
yeccpars2_92
yeccpars2_91
yeccpars2_90
yeccpars2_89
yeccpars2_88
paren_type
yeccpars2_87
yeccpars2_86
yeccpars2_85
yeccpars2_83
yeccpars2_82
yeccpars2_81
yeccpars2_80
yeccpars2_79
yeccpars2_78
yeccpars2_77
yeccpars2_76
yeccpars2_75
yeccpars2_74
yeccpars2_73
yeccpars2_72
yeccpars2_71
yeccpars2_70
yeccpars2_69
yeccpars2_68
yeccpars2_67
nonempty_list
yeccpars2_66
yeccpars2_65
yeccpars2_64
yeccpars2_63
yeccpars2_62
yeccpars2_61
yeccpars2_60
yeccpars2_59
yeccpars2_58
yeccpars2_57
yeccpars2_55
yeccpars2_54
yeccpars2_53
yeccpars2_52
yeccpars2_51
yeccpars2_50
yeccpars2_49
yeccpars2_48
yeccpars2_47
yeccpars2_46
ann_type
yeccpars2_45
yeccpars2_44
yeccpars2_43
yeccpars2_42
yeccpars2_41
yeccpars2_40
yeccpars2_39
yeccpars2_38
yeccpars2_37
yeccpars2_36
yeccpars2_35
yeccpars2_34
yeccpars2_33
yeccpars2_32
yeccpars2_30
yeccpars2_29
yeccpars2_28
yeccpars2_27
yeccpars2_26
yeccpars2_25
yeccpars2_24
yeccpars2_cont_23
yeccpars2_23
yeccpars2_22
yeccpars2_21
')'
yeccpars2_20
yeccpars2_18
yeccpars2_17
yeccpars2_16
yeccpars2_15
yeccpars2_14
yeccpars2_cont_13
yeccpars2_13
yeccpars2_12
yeccpars2_11
yeccpars2_10
'('
yeccpars2_9
yeccpars2_8
yeccpars2_7
yeccpars2_6
yeccpars2_5
yeccpars2_4
yeccpars2_3
';'
yeccpars2_2
yeccpars2_1
yeccpars2_0
missing_state_in_action_table
write_char
yecctoken2string
yeccerror
'$end'
yeccpars1
yeccpars2
yecc_error_type
yecc_bug
syntax_error
missing_in_goto_table
yeccpars0
return_error
deep_char_list
parse_and_scan
parse
max_prec
func_prec
preop_prec
'='
'#'
':'
inop_prec
tokens_tuple
'|'
','
tokens_tail
'}'
'{'
'['
']'
bin_element
abstract_byte
abstract_list
not_string
abstract_string
normalise_list
expr_grp
bin
normalise
mapl
build_try
check_clauses
clauses
build_fun
rule
build_rule
build_function
package_segments
typed_record_field
typed
record_field
record_fields
record_tuple
farity_list
error_bad_decl
attribute_farity_list
op
attribute_farity
nil
var_list
export
import
build_attribute
build_bin_type
build_gen_type
union
lift_unions
product
bounded_fun
find_arity_from_specs
build_type_spec
type_def
attribute
typed_record
build_typed_attribute
clause
f
parse_form
inet_default_listen_options
'-tokens/3-fun-0-'
'-scan/6-fun-15-'
'-scan/6-fun-3-'
'-scan/6-fun-2-'
'-scan/6-fun-1-'
'-scan/6-fun-0-'
'-scan/6-fun-4-'
'-scan/6-fun-7-'
'-scan/6-fun-11-'
'-scan/6-fun-9-'
'-scan/6-fun-10-'
'-scan/6-fun-14-'
'-scan/6-fun-6-'
'-scan/6-fun-8-'
'-scan/6-fun-12-'
'-scan/6-fun-5-'
'-scan/6-fun-13-'
'-sub_scan_name/6-fun-0-'
'-scan_char/6-fun-1-'
'-scan_char/6-fun-0-'
'-scan_string/6-fun-1-'
'-scan_string/6-fun-0-'
'-scan_qatom/6-fun-1-'
'-scan_qatom/6-fun-0-'
'-sub_scan_escape/6-fun-3-'
'-sub_scan_escape/6-fun-1-'
'-sub_scan_escape/6-fun-0-'
'-sub_scan_escape/6-fun-2-'
'-scan_number/6-fun-1-'
'-scan_number/6-fun-0-'
'-scan_based_int/6-fun-0-'
'-scan_fraction/6-fun-0-'
'-scan_exponent_sign/6-fun-0-'
'-scan_exponent/6-fun-0-'
'-scan_comment/6-fun-0-'
'-scan_dot/6-fun-0-'
after
spec
let
end
cond
case
of
if
catch
query
try
when
begin
reserved_word
'.'
scan_dot
scan_comment
scan_exponent
scan_exponent_sign
scan_fraction
scan_based_int
integer
scan_number
escape_char
sub_scan_escape
scan_qatom_escape
scan_qatom
scan_string_escape
substr
scan_string
nl
scan_char_escape
scan_char
name_char
sub_scan_name
var
scan_variable
scan_atom
'||'
'<-'
'<<'
'<='
'>>'
':-'
'::'
'->'
badstate
eos
string_thing
scan
char
write_string
fwrite
base
illegal
'-concat/1-fun-0-'
'-filter/2-lc$^0/1-0-'
rufmerge2_2
rufmerge2_1
ufmerge2_2
ufmerge2_1
rufmergel
ufmergel
ufsplit_2
ufsplit_1_1
ufsplit_1
rfmerge2_2
rfmerge2_1
fmerge2_2
fmerge2_1
rfmergel
fmergel
fsplit_2_1
fsplit_2
fsplit_1_1
fsplit_1
rukeymerge2_2
rukeymerge2_1
ukeymerge2_2
ukeymerge2_1
rukeymerge3_21_3
rukeymerge3_12_3
rukeymerge3_2
rukeymerge3_1
ukeymerge3_21_3
ukeymerge3_12_3
ukeymerge3_2
ukeymerge3_1
rukeymergel
ukeymergel
ukeysplit_2
ukeysplit_1_1
ukeysplit_1
rkeymerge2_2
rkeymerge2_1
keymerge2_2
keymerge2_1
rkeymerge3_21_3
rkeymerge3_12_3
rkeymerge3_2
rkeymerge3_1
keymerge3_21_3
keymerge3_12_3
keymerge3_2
keymerge3_1
rkeymergel
keymergel
keysplit_2_1
keysplit_2
keysplit_1_1
keysplit_1
rumerge2_2
rumerge2_1
umerge2_2
umerge2_1
rumerge3_21_3
rumerge3_12_3
rumerge3_2
rumerge3_1
umerge3_21_3
umerge3_12_3
umerge3_2
umerge3_1
rumergel
umergel
usplit_2_1
desc
usplit_2
usplit_1_1
asc
usplit_1
rmerge2_2
rmerge2_1
merge2_2
merge2_1
rmerge3_21_3
rmerge3_12_3
rmerge3_2
rmerge3_1
merge3_21_3
merge3_12_3
merge3_2
merge3_1
rmergel
mergel
split_2_1
split_2
split_1_1
split_1
dropwhile
takewhile
mapfoldr
mapfoldl
partition
foldr
flatmap
rumerge3
umerge3
rumerge
umerge
usort_1
usort
keymap
rukeymerge
ukeymerge
ukeysort_1
ukeysort
rkeymerge
keymerge
keysort_1
keystore2
keystore
keytake
keyreplace3
keydelete3
flatlength
flat_length
do_flatten
thing_to_list
rmerge
rmerge3
merge3
sort_1
zipwith3
zipwith
unzip3
zip3
sublist_2
sublist
duplicate
seq
suffix
prefix
nthtail
nth
open_file
only_loaded
'configuration must be a list ended by <dot><whitespace>'
'-start/1-fun-0-'
'-loaded_applications/0-fun-0-'
'-get_all_env/1-fun-0-'
'-handle_call/3-fun-2-'
'-handle_call/3-fun-0-'
'-handle_call/3-fun-1-'
'-terminate/2-fun-0-'
'-load/2-fun-0-'
'-unload/2-fun-0-'
'-check_start_cond/4-fun-0-'
'-start_appl/3-fun-0-'
'-prim_parse/2-fun-0-'
'-do_change_apps/3-fun-0-'
'-do_change_apps/3-fun-1-'
'-get_cmd_env/1-fun-0-'
'-add_env/2-fun-0-'
'-do_config_diff/3-fun-0-'
'-check_conf/0-fun-0-'
'-reply_to_requester/3-fun-0-'
test_make_apps
test_do_change_appl
test_change_apps
update_permissions
reply_to_requester
exited
info_exited
started_at
info_started
config_error
strip_comment
only_ws
parse_file
done
tokens
scan_file
load_file
dirname
basename
check_conf_sys
config
check_conf
do_config_diff
application_not_found
module_not_defined
sort
do_config_change
do_prep_config_change
check_user
del_env
add_env
get_env_key
merge_app_env
merge_env
get_env_i
make_term
conv
get_cmd_env
get_opt
do_change_appl
is_loaded_app
do_change_apps
invalid_options
badstartspec
invalid_name
make_appl_i
parse_term
splitwith
prim_parse
prim_consult
format_error
non_existing
where_is_file
make_appl
bad_application
get_appl_name
get_restart_type
nd
invalid_restart_type
validRestartType
keyreplaceadd
ksd
keysearchdelete
stopped
stop_appl
start_appl
cast
init_starter
spawn_starter
do_start
check_start_cond
do_load_application
get_loaded
del_cntrl
ac_application_run
notify_cntrl_started
cntrl
shutdown_func
application_terminated
match_delete
keyreplace
ac_application_not_run
not_running
stop_it
failover
takeover
ac_load_application_reply
ac_start_application_reply
ac_change_application_req
application_start_failure
transient
temporary
handle_application_started
application_started
handle_cast
loading
start_p_false
permissions
ac_start_application_req
distributed_application
ac_application_unloaded
noreply
ac_load_application_req
not_started
ac_application_stopped
keydelete
check_para
check_distributed
distributed
check_para_kernel
check_conf_data
'load error'
enter_loop
unset_env
set_env
permit_application
in_modules
get_application_module
get_application
get_master
start_type
get_all_key
get_pid_all_key
appl_data
appl
get_key
get_pid_key
'$2'
'$1'
get_all_env
get_pid_all_env
get_env
get_pid_env
config_change
prep_config_change
change_application_data
control_application
ac_tab
loaded_applications
which_applications
stop_application
bad_environment_value
start_boot_application
start_application
unload_application
load_application
'-format_exception/3-fun-0-'
'-pp_fun/0-fun-0-'
format_tag
pp_fun
format_mfa
format_exception
format_rep
format_report
badrpc
proc_info
get_my_name
translate_process_info
get_process_info
no_trap
adjacents
visit
neighbours
max_neighbours
get_initial_call
make_neighbour_report
neighbour
make_neighbour_reports1
linked_info
get_dictionary
clean_dict
get_cleaned_dictionary
ancestors
get_ancestors
my_info
crash_report
trans_init
raw_init_call
raw_initial_call
translate_initial_call
make_dummy_args
ack
sync_wait
exit_p
init_p_do_apply
'$initial_call'
'$ancestors'
ensure_link
wake_up
check_for_monitor
init_p
opt
spawn_opts
register_name
name_register
safe_whereis_name
where
reply
wait_resp
wait_resp_mon
do_call
init_it2
do_spawn
already_started
bad_module
module_not_found
'-do_unlink/2-fun-0-'
parent_terminated
'-terminate_supervised/4-fun-0-'
code_change
'-system_code_change/4-fun-0-'
'-the_handlers/1-fun-0-'
'-get_modules/1-fun-0-'
items
format_status
the_handlers
stop_handlers
'function not exported'
'module could not be loaded'
report_error
gen_event_EXIT
report_terminate
do_terminate
server_call_update
replace
server_call
new_handler
do_swap
remove_handler
server_update
server_notify
swapped
split_and_terminate
s_s_h
server_swap_handler
server_delete_handler
server_add_sup_handler
handler
server_add_handler
print_event
zf
system_code_change
system_terminate
system_continue
filter
terminate_supervised
do_unlink
terminate_server
get_modules
handle_debug
handle_system_msg
fetch_msg
wake_hib
call1
swap_sup_handler
sync_notify
add_sup_handler
debug_options
init_it
nolink
callbacks
behaviour_info
bad_query
no_log_file
allready_have_logfile
display2
add_node
tag_event
handle_event2
lost_messages
swap
handle_call
handle_info
handle_event
go_back
which_handlers
simple_logger
delete_report_handler
add_handler
add_report_handler
delete_handler
logfile
swap_handler
error_info
info_report
std_info
std_warning
warning_report
format
error_msg
stop_error
report_problem
send_shutdown
get_heart_cmd
send_heart_cmd
send_heart_beat
do_cycle_port_program
no_reboot_shutdown
port_terminated
bad_cmd
wait_ack
bad_heart_flag
check_start_heart
get_heart_timeouts
port_problem
start_portprogram
wait
cycle
clear_cmd
get_cmd
set_cmd
start_error
no_heart
wait_for_init_ack
abstract
extends
check_inheritance
stub_function
'no -init_debug flag'
'no -mode flag'
erlangrc
start_boot
applications_loaded
errlog_type
sasl_error_logger
sasl_sup
pool_master
take_over_monitor
rsh_starter
timer_server
stdlib
init_kernel_started
mod
maxP
maxT
start_phases
tty
included_applications
applications
ddll_server
os_server
rex
net_sup
kernel_sup
global_name_server
fixtable_server
file_server_2
boot_server
modules
vsn
description
start_link
modules_loaded
alarm_handler
erlsrv
format_lib_supp
misc_supp
overload
rb
rb_format_supp
release_handler
release_handler_1
sasl_report
sasl_report_file_h
sasl_report_tty_h
systools
systools_lib
systools_make
systools_rc
systools_relup
array
base64
beam_lib
c
dets
dets_server
dets_sup
dets_utils
dets_v8
dets_v9
dict
digraph
digraph_utils
edlin
edlin_expand
epp
erl_bits
erl_compile
erl_expand_records
erl_internal
erl_lint
erl_posix_msg
erl_pp
erl_tar
error_logger_file_h
error_logger_tty_h
escript
eval_bits
file_sorter
filelib
gb_sets
gb_trees
gen
gen_event
gen_fsm
io_lib
io_lib_format
io_lib_fread
io_lib_pretty
lib
log_mf_h
ms_transform
orddict
ordsets
otp_internal
pg
pool
proc_lib
proplists
qlc
qlc_pt
queue
random
regexp
sets
shell
shell_default
slave
sofs
supervisor
supervisor_bridge
sys
win32reg
application
application_controller
application_master
application_starter
code_server
disk_log
disk_log_1
disk_log_server
disk_log_sup
dist_ac
dist_util
erl_boot_server
erl_distribution
erl_epmd
erl_reply
file_io_server
file_server
gen_sctp
gen_tcp
gen_udp
global_group
global_search
group
hipe_unified_loader
inet6_tcp
inet6_tcp_dist
inet6_udp
inet_config
inet_db
inet_dns
inet_gethost_native
inet_hosts
inet_parse
inet_res
inet_sctp
inet_tcp
inet_tcp_dist
inet_udp
kernel_config
net
net_adm
packages
pg2
ram_file
rpc
user_drv
user_sup
wrap_log_reader
linux
unix
mnesia
os_mon
sasl
kernel
sname
noinput
noshell
pa
home
progname
root
'no -path flag'
'no -id flag'
'no -hosts flag'
'no -loader flag'
'-mnesia'
'-os_mon'
'-sasl'
'-kernel'
'-sname'
'-noinput'
'-noshell'
'-home'
'-progname'
rabbit
'-spawn_opt/5-fun-0-'
get_demonitor_opts
list_to_integer_sign
concat_binary
get_cookie
auth
set_cookie
ignored
passive_cnct
send_nosuspend
fun_info_1
disconnect
disconnect_node
is_well_formed_list
crasher
remote_spawn_error
no_link
gen_server
spawn_monitor
einal
clean
file_not_found
'no server found'
ebusy
no_multi_get
ose_inet
'-start/3-fun-0-'
'-handle_get_files/4-fun-0-'
'-handle_get_file/3-fun-0-'
'-handle_get_file/3-fun-1-'
'-handle_set_primary_archive/3-fun-0-'
'-handle_release_archives/1-fun-0-'
'-handle_list_dir/2-fun-0-'
'-handle_list_dir/2-fun-1-'
'-handle_read_file_info/2-fun-0-'
'-handle_read_file_info/2-fun-1-'
'-handle_get_cwd/2-fun-0-'
'-handle_get_cwd/2-fun-1-'
'-efile_multi_get_file_from_port2/8-fun-0-'
'-prim_set_primary_archive/3-fun-0-'
'-prim_get_file/2-fun-0-'
'-prim_list_dir/2-fun-0-'
'-prim_read_file_info/2-fun-0-'
'-open_archive/3-fun-0-'
'-foldl_archive/3-fun-0-'
normalize
pathtype
absname_vr
volumerelative
relative
absolute
ipv4_addr
ipv4_address
ipv4_list
string_split2
string_split
string_match
no_match
no_split
do_name_split
name_split
to_strs
min
keyins
keysort
send_all
win32
is_basename
clear_cache
cache_new
foldl_archive
open_archive
apply_archive
prim_get_cwd
archive_read_file_info
prim_read_file_info
archive_list_dir
prim_list_dir
archive_get_file
archive
prim_get_file
prim_set_primary_archive
cache
release
primary
prim_do_release_archives
prim_release_archives
loader_debug
prim_init
port_error
ll_close
ll_open_set_bind
ll_udp_open
ll_tcp_connect
udp_options
tcp_timeout
tcp_options
inet_stop_port
inet_get_cwd
inet_read_file_info
inet_list_dir
inet_send_and_rcv
inet_get_file_from_port1
inet_get_file_from_port
inet_timeout_handler
inet_exit_port
find_collect
find_loop
connect_master
find_master
efile_timeout_handler
fail
efile_exit_port
noport
efile_stop_port
efile_get_cwd
efile_read_file_info
efile_list_dir
efile_release_archives
efile_set_primary_archive
efile_get_file_from_port3
'prim_load port died'
efile_get_file_from_port2
efile_get_file_from_port
efile_par_get_file
emfile
efile_multi_get_file_from_port2
efile_multi_get_file_from_port
handle_timeout
handle_exit
handle_stop
handle_get_cwd
handle_read_file_info
handle_list_dir
handle_release_archives
handle_set_primary_archive
handle_get_file
handle_get_files
bad_state
error_report
std_error
enotdir
enoent
check_file_result
release_archives
set_primary_archive
get_path
init_ack
prim_state
'-filter_fun/0-fun-0-'
'-get_zip_input/1-fun-0-'
'-get_zip_input/1-fun-1-'
'-get_cd_loop/11-fun-0-'
'-get_cd_loop/11-fun-1-'
pwrite_binary
pwrite_iolist
skipper
skip_iolist
splitter
split_iolist
local_file_header_from_bin
bad_cd_file_header
cd_file_header_from_bin
dos_date_time_to_datetime
add_extra_info
cd_file_header_to_file_info
eocd_and_comment_from_bin
local_time
calendar
binary_io
set_file_info
prim_file_io
find_eocd_header
seek
bad_eocd
get_end_of_central_dir
get_filename_from_b2
bad_central_directory
cd_file_header
get_file_header
get_cd_loop
eocd
get_central_dir
offset_over_z_data_descriptor
unsupported_compression
get_z_all
bad_local_file_header
bad_local_file_offset
local_file_header
get_z_file
get_zip_input
illegal_filter
primzip_file
do_foldl
foldl
primzip
do_open
filter_fun
prim_zip
zlib_drv
need_dictionary
arg_mem
arg_bitsz
arg_method
filtered
huffman_only
arg_strategy
best_speed
best_compression
arg_level
full
arg_flush
collect
gunzip
gzip
unzip
deflated
zip
data_error
uncompress
finish
default
compress
getQSize
getBufSize
setBufSize
inflateEnd
inflate
inflateReset
inflateSync
inflateSetDictionary
inflateInit
deflateEnd
deflate
deflateParams
deflateReset
deflateSetDictionary
deflateInit
zlib
premature_end_of_list
lists_split
transform_ldata
get_uint32s
get_uint32
get_uint64
date_to_bytes
int_to_bytes
file_access
other
device
regular
symlink
file_type
transform_info_ints
translate_response
cur
bof
lseek_position
delayed_write
read_ahead
open_mode
port_died
bad_response_from_port
drv_get_response
drv_command
drv_command_raw
drv_close
drv_open
list_dir_int
list_dir
read_link_info_int
read_link_info
read_link_int
read_link
make_symlink_int
make_symlink
make_link_int
make_link
write_file_info_int
write_file_info
altname_int
altname
read_file_info_int
del_dir_int
del_dir
make_dir_int
make_dir
rename_int
delete_int
absname
filename
vxworks
set_cwd_int
set_cwd
get_cwd_int
get_cwd
write_file
read_file
ipread_s32bu_p32bu
copy_opened
file
truncate
position
pread_int
pread
enomem
sync
pwrite_int
pwrite
file_descriptor
open_int_setopts
open_int
efile
prim_file
bound
connecting
accepting
busy
multicast
no_pointtopoint
pointtopoint
no_broadcast
down
up
ssl
off
on
term
sctp_setadaptation
sctp_assoc_value
sctp_prim
sctp_setpeerprim
sctp_assocparams
sackdelay_disable
sackdelay_enable
pmtud_disable
pmtud_enable
hb_demand
hb_disable
hb_enable
sctp_paddrparams
sctp_event_subscribe
abort
addr_over
unordered
sctp_paddrinfo
'-bindx/3-lc$^0/1-0-'
ctl_cmd
get_ip6
get_ip4
get_ip
ip6_to_bytes
ip4_to_bytes
ip_to_bytes
rev
build_iflist
encode_ifname
enc_time
dec_status
dec_stats
decode_stats
recv_cnt
recv_max
recv_avg
recv_dvi
send_cnt
send_max
send_avg
recv_oct
send_oct
enc_stats
encode_stats
dec_subs
decode_subs
enc_subs
encode_subs
encode_ifopt_val
encode_ifopts
decode_ifopts
dec_ifopt
enc_ifopt
hwaddr
mtu
dstaddr
broadaddr
netmask
type_ifopt
merge_fields
merge
merge_options
need_template
dec
dec_opt_val
decode_opt_val
einval
enc_opts
encode_opts
once
enc_opt_val
encode_opt_val
enum_name
enum_val
enum_names
enum_vals
borlist
dec_value_tuple
decode
dec_value
loopback
enc_value_2
enc_value_tuple
enc_value_1
enc_value_default
enc_value
binary_or_uint
ether
addr
uint8
uint16
uint24
uint32
sctp_assoc_id
enum
bitenumlist
type_value_2
type_value_record
type_value_tuple
type_value_1
type_value_default
record
type_value
bool
int
ip
uint
type_opt_1
type_opt
dec_opt
reuseaddr
keepalive
dontroute
linger
broadcast
sndbuf
recbuf
tos
nodelay
multicast_if
multicast_ttl
multicast_loop
add_membership
drop_membership
buffer
header
mode
deliver
exit_on_close
high_watermark
low_watermark
bit8
send_timeout
delay_send
read_packets
sctp_rtoinfo
sctp_associnfo
sctp_initmsg
sctp_autoclose
sctp_nodelay
sctp_disable_fragments
sctp_i_want_mapped_v4_addr
sctp_maxseg
sctp_set_peer_primary_addr
sctp_primary_addr
sctp_adaptation_layer
sctp_peer_addr_params
sctp_events
sctp_delayed_ack_time
sctp_status
sctp_get_peer_addr_info
enc_opt
is_sockopt_val
attach
detach
unrecv
getservbyport1
getservbyport
getservbyname1
getservbyname
gethostname
getstatus
getprotocol
dgram
seqpacket
gettype
getindex
getfd
getstat
subscribe
ifset
ifget
getiflist
chgopts
chgopt
sctp_reply
getopts
getopt
setopts
setopt
setsockname
sockname
setpeername
peername
recvfrom0
recvfrom
async_recv
recv0
recv
sctp_default_send_param
sctp_sndrcvinfo
sendmsg
sendto
bool8
listen
async_accept
accept_opts
accept0
accept
async_connect
connect0
bindx
remove
add
bind
close_pend_loop
send_pend
shutdown_pend_loop
shutdown_2
subs_empty_out_q
shutdown_1
write
read_write
drv2protocol
eprotonosupport
sctp_inet
tcp_inet
udp_inet
sctp
protocol2drv
open0
fdopen1
open1
fdopen
inet
inet6
prim_inet
shutdown_timeout
not_allowed
badrecord
starting
'-bs2as/1-fun-0-'
'-bs2ss/1-fun-0-'
'-boot/1-fun-0-'
'-notify/1-fun-0-'
'-alive_processes/0-lc$^0/1-0-'
'-do_boot/2-fun-0-'
'-par_load_modules/2-fun-0-'
'-par_load_modules/2-fun-1-'
'-patch_path/2-lc$^0/1-0-'
'-patch_dir/2-lc$^0/1-1-'
'-patch_dir/2-lc$^1/1-0-'
'-shutdown_timer/1-fun-0-'
archive_extension
objfile_extension
concat
set_argument
get_argument1
to_strings
get_flag_args
get_flag_list
get_flag
get_args
check
start_arg2
eval_arg
start_arg
flag
start_extra_arg
end_args
arg
parse_boot_args
timer
flush_timout
'-shutdown_time'
shutdown_timer
load_mod_code
load_mod
exprs
erl_eval
parse_exprs
erl_parse
dot
erl_scan
start_it
start_em
start_in_kernel
join
funny_splitwith
funny_split
directory
file_info
read_file_info
patch_dir
patch_path
get_var_val
get_var_value
extract_var
add_var
fix_path
make_path
'cannot load'
get_files
par_load_modules
load_modules
'unexpected command in bootfile'
kernelProcess
preLoaded
primLoad
path
embedded
kernel_load_completed
eval_script
script
get_file
'bootfile format error'
'cannot get bootfile'
not_found
get_boot
'-pz'
'-pa'
path_flags
bootfile
'-boot_var'
'-init_debug'
'-mode'
'-root'
do_boot
'-path'
'-id'
'-hosts'
'-loader'
prim_load_flags
add_to_kernel
set_path
erl_prim_loader
start_prim_loader
sleep
kernel_pid
terminate
del
sub
do_unload
unload
kill_all_ports
kill_em
get_pids
alive_processes
kill_all_pids
resend
shutdown_loop
shutdown_kernel_pid
shutdown
heart
get_heart
shutdown_pids
stop_heart
clear_system
do_stop
stopping
'-config'
'-boot'
user
do_handle_msg
new_state
handle_msg
loop
ignore
new_kernelpid
garb_boot_loop
foreach
progress
boot_loop
crash
first198
halt_string
things_to_string
flatten
printable_list
state
relaxed
strict
code_path_choice
flags_to_atoms_again
map
b2s
b2a
s
eval
prepare_run_args
reboot
request
started
wait_until_started
notify_when_started
make_permanent
ensure_loaded
fetch_loaded
get_status
bs2ss
bs2as
script_id
get_argument
get_plain_arguments
get_arguments
debug
fatal
boot
otp_ring0
'TRACE'
'DELETE'
'PUT'
'POST'
'HEAD'
'GET'
'OPTIONS'
'Proxy-Connection'
'Keep-Alive'
'Cookie'
'X-Forwarded-For'
'Set-Cookie2'
'Set-Cookie'
'Accept-Ranges'
'Last-Modified'
'Expires'
'Etag'
'Content-Type'
'Content-Range'
'Content-Md5'
'Content-Location'
'Content-Length'
'Content-Language'
'Content-Encoding'
'Content-Base'
'Allow'
'Www-Authenticate'
'Warning'
'Vary'
'Server'
'Retry-After'
'Public'
'Proxy-Authenticate'
'Location'
'Age'
'User-Agent'
'Referer'
'Range'
'Proxy-Authorization'
'Max-Forwards'
'If-Unmodified-Since'
'If-Range'
'If-None-Match'
'If-Match'
'If-Modified-Since'
'Host'
'From'
'Authorization'
'Accept-Language'
'Accept-Encoding'
'Accept-Charset'
'Accept'
'Via'
'Upgrade'
'Transfer-Encoding'
'Pragma'
'Date'
'Connection'
'Cache-Control'
characters_to_list_trap_4
characters_to_list_trap_3
characters_to_list_trap_2
characters_to_list_trap_1
characters_to_utf8_trap
md5_trap
empty_out_q
udp_error
tcp_error
tcp_closed
inet_reply
inet_async
udp
tcp
select_trap
'count_trap\000'
delete_trap
characters_to_list
characters_to_binary
decode_packet
update_element
bitstring_to_list
list_to_bitstring
bit_size
byte_size
tuple_size
is_bitstring
list_to_existing_atom
iolist_to_binary
iolist_size
make_fun
to_integer
string
is_boolean
get_module_info
warning_map
hibernate
blocking_read_file
is_native
is_module_native
make_stub_module
module_md5
get_chunk
lock_counters
dump_links
dump_monitors
set_internal_state
get_internal_state
flat_size
same
disassemble
erts_debug
search
keysearch
'erl.lang.list.keylist'
keymember
reverse
is_element
lists
run
format_error_int
loaded_drivers
try_unload
try_load
erl_ddll
getpid
setenv
'erl.system.os'
putenv
os
match_spec_run_r
match_spec_compile
select_delete
select_reverse
select_count
select
update_counter
slot
fixtable
safe_fixtable
rename
insert_new
insert
prev
is_key
member
match_object
last
lookup_element
lookup
is_compiled_ms
delete_object
delete_all_objects
'erl.lang.ets'
match_spec_test
is_record
is_function
is_binary
is_reference
is_port
is_pid
is_number
is_integer
is_float
is_constant
is_tuple
is_list
is_atom
subtract
'--'
append
'++'
send
'!'
divide
multiply
minus
plus
not_arith_equal
not_equal
arith_equal
equal
less_or_equal
less
greater_or_equal
greater
'erl.lang.bool'
is_builtin
get_stacktrace
raise
fault
is_process_alive
demonitor
fun_to_list
port_to_list
ref_to_list
system_profile
system_monitor
system_info
system_flag
append_element
make
make_tuple
read
read_timer
cancel
cancel_timer
send_after
'erl.lang.timer'
start_timer
pow
atan2
sqrt
log10
log
exp
erfc
erf
atanh
atan
asinh
asin
acosh
acos
tanh
tan
sinh
sin
cosh
'erl.lang.math'
cos
math
bump_reductions
process_display
resume_process
suspend_process
seq_trace_print
seq_trace_info
seq_trace
trace_delivered
trace_info
trace_pattern
get_data
port_get_data
set_data
port_set_data
port_connect
port_close
control
port_control
port_command
port_call
dist_exit
setnode
spawn_opt
whereis
unlink
utc_to_local
universaltime_to_localtime
utc
universaltime
tuple_to_list
trunc
tl
time_of_day
time
from_term
term_to_binary
statistics
split
split_binary
spawn_link
spawn
setelement
self
round
registered
put
purge
purge_module
process_info
set_flag
process_flag
preloaded
pre_loaded
port_info
pid_to_string
pid_to_list
'erl.lang.port'
open_port
now
nodes
monitor_node
function_exported
is_loaded
module_loaded
final
md5_final
update
md5_update
init
md5_init
digest
'erl.util.crypt.md5'
md5
'erl.lang.ref'
make_ref
local_to_utc
localtime_to_universaltime
localtime
load
load_module
list_to_tuple
string_to_pid
list_to_pid
list_to_integer
list_to_float
from_list
list_to_binary
from_string
list_to_atom
link
length
'erl.lang.node'
is_alive
'erl.lang.integer'
integer_to_list
'erl.lang.list'
hd
hash
phash2
phash
'erl.lang.system'
halt
set_group_leader
group_leader
get_keys
get
garbage_collect_message_area
'erl.system'
garbage_collect
'erl.lang.function'
fun_info
'erl.lang.float'
float_to_list
to_float
float
'erl.lang.term'
external_size
signal
'erl.lang.proc'
'erl.lang.proc.pdict'
erase
'erl.lang.tuple'
element
display_nl
display_string
'erl.system.debug'
display
delete
delete_module
today
'erl.util.date'
date
crc32_combine
'erl.util.crypt.crc32'
crc32
check_process
'erl.system.code'
check_process_code
to_term
binary_to_term
to_list
'erl.lang.binary'
binary_to_list
to_string
'erl.lang.atom'
atom_to_list
'erl.lang'
apply
combine
adler32_combine
sum
'erl.util.crypt.adler32'
adler32
'erl.lang.number'
abs
yield
yes
xor
wordsize
warning_msg
warning
wall_clock
waiting
visible
version
values
value
unload_cancelled
unloaded_only
unloading
unloaded
unless_suspending
uniq
unblock
utf8
used
use_stdio
unregister
unicode
ungreedy
undef
type
tuple
try_clause
trap_exit
tracer
trace_control_word
traced
trace_ts
trace
tpkt
total_heap_size
total
timestamp
'*'
timeout_value
threads
thread_pool_size
this
table
'SYSTEM'
system_architecture
system_version
system_limit
system_error
system
sys_misc
suspending
suspended
suspend
sunrm
stream
stop
stderr_to_stdout
static
status
start
stack_size
ssl_tls
sl_alloc
size
silent
shared
separate
set_tcw_fake
set_tcw
set_seq_token
set_on_spawn
set_on_link
set_on_first_spawn
set_on_first_link
set
serial
sequential_trace_token
sequential_tracer
sensitive
scheme
scheduler_id
scheduler
save_calls
runtime
running_procs
running_ports
running
runnable_procs
runnable_ports
runnable
run_queue
return_trace
return_to
return_from
restart
reset
rem
reload
registered_name
register
refc
reductions
recent_size
receive
ready_async
ready_output
ready_input
re_run_trap
re_pattern
re
raw
queue_size
quantify
purify
public
protection
protected
profile
procs
process_dump
process_limit
process_count
processes_used
processes_trap
processes
process
private
priority
print
port_count
ports
port
pid
permanent
pending_reload
pending_process
pending_driver
pending
pause
'+'
packet_size
packet
owner
output
out_exiting
out_exited
out
ose_ti_proc
ose_process_type
ose_process_prio
ose_pri_proc
ose_phantom
ose_int_proc
ose_bg_proc
os_version
os_type
orelse
ordered_set
or
open_error
open
on_load
old_heap_size
old_heap_block_size
ok
offset
objects
nouse_stdio
notify
notempty
noteol
notbol
notalive
not_purged
not_pending
not_loaded_by_this_process
not_loaded
not_a_list
not
no_network
no_integer
no_float
nosuspend
noproc
nofile
noeol
nodeup
nodedown_reason
nodedown
node_type
node
nocookie
noconnection
noconnect
no_auto_capture
none
nomatch
no
next
newline
new_uniq
new_index
new
net_kernel_terminated
net_kernel
'/='
'=/='
native_addresses
named_table
name
multiline
multi_scheduling
more
monitors
monitor_nodes
monitor
monitored_by
module_info
module
'-'
minor_version
min_heap_size
meta_match_spec
meta
messages
message_queue_len
message_binary
message
memory_types
memory
mbuf_size
max_processes
max_tables
maximum
max
match_spec
match
machine
'<'
low
long_gc
local
load_failure
load_cancelled
loaded
little
list
links
linked_in_driver
line_length
line
lf
'=<'
latin1
last_calls
large_heap
label
known
kill_ports
killed
kill
keypos
io
is_seq_trace
invalid
instruction_counts
internal_status
internal_error
input
initial_call
info_msg
info
index
inconsistent
incomplete
inactive
in_exiting
in
imports
if_clause
id
hybrid
http_error
http_eoh
http_header
http_request
http_response
https
httph
http
hipe_architecture
high
hide
hidden
heap_type
heap_sizes
heap_size
heap_block_size
grun
'>'
global_heaps_size
global
getting_unlinked
getting_linked
getenv
get_tcw
get_seq_token
generational
'>='
gc_start
gc_end
garbage_collection
garbage_collecting
function_clause
functions
function
fullsweep_if_old_binaries
fullsweep_after
free
flush
flags
firstline
first
fd
fcgi
external
exports
exiting
existing
exit_status
exclusive
exact_reductions
event
ets
error_logger
error_handler
'ERROR'
erlang
'=='
'=:='
extended
exception_trace
exception_from
eol
eof
env
endian
enabled
enable_trace
emulator
elib_malloc
dupnames
duplicate_bag
dunlink
dsend
driver_options
driver
dotall
dollar_endonly
'$_'
'$$'
dmonitor_p
dmonitor_node
dlink
div
'/'
dist
display_items
disabled
disable_trace
dictionary
dgroup_leader
depth
dexit
delay_trap
debug_flags
data
current_function
creation
crlf
cr
cpu_timestamp
copy
context_switches
const
cons
connection_closed
connected
connect
compressed
compile
compat_rel
command
code
closed
close
clear
cdr
cd
catchlevel
caseless
case_clause
capture
caller
call_count
busy_port
busy_dist_port
bsr_unicode
bsr_anycrlf
bsr
bsl
breakpoint
break_ignored
bxor
bor
bnot
blocked
block
binary
big
band
bag
badfun
badsig
badmatch
badfile
badarity
badarith
badarg
backtrace_depth
backtrace
awaiting_unload
awaiting_load
attributes
atom_used
atom
asynchronous
asn1
arity
anycrlf
any
andthen
andalso
and
anchored
already_loaded
allow_passive_connect
alloc_util_allocators
allocator_sizes
allocator
allocated_areas
allocated
all_but_first
all
active
absoluteURI
abs_path
aborted
'EXIT'
'UP'
'DOWN'
undefined_lambda
undefined_function
nocatch
undefined
exit
error
throw
return
call
normal
timeout
infinity
fun
''
'$end_of_table'
'nonode at nohost'
'_'
true
false
=end
-------------- next part --------------
A non-text attachment was scrubbed...
Name: rabbit.log
Type: text/x-log
Size: 1609 bytes
Desc: not available
URL: <http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20100618/b0fdd80b/attachment-0002.bin>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: rabbit-sasl.log
Type: text/x-log
Size: 2094 bytes
Desc: not available
URL: <http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20100618/b0fdd80b/attachment-0003.bin>

From matthias at rabbitmq.com  Fri Jun 18 08:07:09 2010
From: matthias at rabbitmq.com (Matthias Radestock)
Date: Fri, 18 Jun 2010 08:07:09 +0100
Subject: [rabbitmq-discuss] Publish to queue fails but publish to direct
 exchange works
In-Reply-To: <AANLkTimwPk2WFnDAXaNF01ljp7DuAZ9B_WKA_95eiVte@mail.gmail.com>
References: <AANLkTinEJeAHz__BkHvt6UR4fN6tn9EkIAgvD2p-o__4@mail.gmail.com>	<AANLkTinKVp5dg94vximXUT36RvXdHSJ7VIjAXPqVRnbG@mail.gmail.com>	<AANLkTin-tQYGacgo8FC3c7jYxhgvkDFbxUxS16PlBJ1B@mail.gmail.com>	<4C1B09A1.7060103@rabbitmq.com>
	<AANLkTimwPk2WFnDAXaNF01ljp7DuAZ9B_WKA_95eiVte@mail.gmail.com>
Message-ID: <4C1B1B1D.7010104@rabbitmq.com>

Raphael,

Raphael Simon wrote:
> <matthias at rabbitmq.com <mailto:matthias at rabbitmq.com>> wrote:
>     Simply running 'rabbitmqctl list_bindings' should give the same
>     results. Please do that, just to check.
> 
> Yes indeed but where is the fun in doing that? OK more seriously I did 
> not understand the subtlety of the empty spaces, now I do (as a side 
> note it would be nice to have something rather than blank in this case 
> maybe *** or ---).

The reason we don't map the blank exchange name to something else is 
that RabbitMQ permits anything in the exchange name, so *** and --- 
actually are valid exchange names.

> I can't think of a place where we would delete a binding. We only 
> ever delete queues.

Are all AMQP interactions going through nanite? I can see there aren't 
any queue.unbind actions in that code base.

>     Is this reproducible at all? I suspect not :(
> 
> No it has only happens about 15 times on the course of two days. During 
> these two days our system was having issues and weird things could have 
> happened on the broker (e.g. the queue could have been deleted and 
> recreated).

Queue creation and deletion, and all they entail, e.g. addition/removal 
of the default bindings, are meant to be atomic. And the code dealing 
with that looks correct. But ...

>     What version of rabbit are you running?
> 
> 1.7.2

I suggest you upgrade. The queue and exchange code has changed quite a 
bit in the recent release. While I do not recall us spotting any 
problems in the previous version that would explain the behaviour you 
are seeing, it is nevertheless possible that there was a bug in the 
previous code which has been eradicated by other changes.

>     Interesting. auto-delete exchanges are very rare. In fact I do not
>     know of anybody else using them. So it's possible there is a bug in
>     that code that has laid dormant for years. Can you explain your
>     use-case for auto-delete exchanges?
> 
> Embarrassingly enough, I can't :) The fact that we are using direct 
> exchanges for these queues was a bug we introduced, we will be removing 
> them.

ok. If you *do* think of a use case for auto-delete exchanges, please 
let us know. The AMQP 0-9-1 spec actually removes that feature, but we 
are having second thoughts on whether that was the right thing to do.

> I recreated some bindings from within the broker (directly in mnesia) 
> and now things started working again. Is there a better way to re-create 
> the binding to the default exchange without having to re-create the queue?

You should be able to issue an appropriate queue.bind command. As I 
mentioned earlier, such explicit operations on the default exchange 
should imo not be permitted, but rabbit does and it's a grey area of the 
spec. So currently it should work, just don't write any code that 
depends on it.

> I should probably mention that sending the following queue.bind 
> packet didn't seem to help (rabbitmqctl list_bindings still shows the
> binding  missing).
> 
> [:sending,
>  #<AMQP::Protocol::Queue::Bind:0x9b26778
>   @arguments=nil,
>   @debug=1,
>   @exchange=
>    "nanite-rs-instance-fd0416fe31d7b019112c2c0adce9b4e4a261bab1-1094976",
>   @nowait=true,
>   @queue="nanite-rs-instance-fd0416fe31d7b019112c2c0adce9b4e4a261bab1-1094976",
>   @routing_key=nil,
>   @ticket=1>]
> 

The exchange in the above should be blank.


Regards,

Matthias.

From matthias at rabbitmq.com  Fri Jun 18 08:14:50 2010
From: matthias at rabbitmq.com (Matthias Radestock)
Date: Fri, 18 Jun 2010 08:14:50 +0100
Subject: [rabbitmq-discuss] Rabbitmq Crash
In-Reply-To: <1276844693.2432.19.camel@waqas-desktop>
References: <1276767269.2386.11.camel@waqas-desktop>	<20100617111143.GE17204@rabbitmq.com>	<20100617111541.GG17204@rabbitmq.com>	<1276776804.2386.27.camel@waqas-desktop>	<20100617122757.GJ17204@rabbitmq.com>	<1276779263.2386.49.camel@waqas-desktop>	<20100617134136.GK17204@rabbitmq.com>	<1276790120.2386.62.camel@waqas-desktop>	<20100617155816.GA11857@rabbitmq.com>
	<1276844693.2432.19.camel@waqas-desktop>
Message-ID: <4C1B1CEA.6050500@rabbitmq.com>

Waqas,

Waqas Badar wrote:
> Yesterday again rabbitmq was crashed. Please find rabbit.log, 
> rabbit-sasl.log and erl_crash.dump file attached with this mail.

The logs again are for a secondary crash, i.e. rabbit started up and 
failed to recover the persister log. We need to see the log files for 
the original crash. If you are on a fairly standard install they should 
be in rabbit.log.1 and rabbt-sasl.log.1 (these files may be large; if so 
please upload them somewhere rather than posting to the list).

> Please  note that it was crash on rabbitmq 1.7.1. We are upgrading the rabbitmq 
> to 1.8.0. Can you please check the files and let us know that these bugs 
> have been fixed in 1.8.0 version?

Chances are that rabbit ran out of memory. That can still happen in 
1.8.0 but it is much less likely.

Also, please follow Matthew's recommendation and install a 64-bit 
version of Erlang, so that rabbit can actually use all the memory available.


Regards,

Matthias.

From waqas.badar at panasiangroup.com  Fri Jun 18 08:16:27 2010
From: waqas.badar at panasiangroup.com (Waqas Badar)
Date: Fri, 18 Jun 2010 12:16:27 +0500
Subject: [rabbitmq-discuss] Rabbitmq Crash
In-Reply-To: <1276844693.2432.19.camel@waqas-desktop>
References: <1276767269.2386.11.camel@waqas-desktop>
	<20100617111143.GE17204@rabbitmq.com>
	<20100617111541.GG17204@rabbitmq.com>
	<1276776804.2386.27.camel@waqas-desktop>
	<20100617122757.GJ17204@rabbitmq.com>
	<1276779263.2386.49.camel@waqas-desktop>
	<20100617134136.GK17204@rabbitmq.com>
	<1276790120.2386.62.camel@waqas-desktop>
	<20100617155816.GA11857@rabbitmq.com>
	<1276844693.2432.19.camel@waqas-desktop>
Message-ID: <1276845387.2432.22.camel@waqas-desktop>

I forgot to mention that we restore rabbitmq server by renaming the
rabbit_persister.LOG.previous to rabbit_persister.LOG with out deleting
the mnesia files

On Fri, 2010-06-18 at 12:04 +0500, Waqas Badar wrote:

> Yesterday again rabbitmq was crashed. Please find rabbit.log,
> rabbit-sasl.log and erl_crash.dump file attached with this mail.
> Please note that it was crash on rabbitmq 1.7.1. We are upgrading the
> rabbitmq to 1.8.0. Can you please check the files and let us know that
> these bugs have been fixed in 1.8.0 version? 
> 
> On Thu, 2010-06-17 at 16:58 +0100, Matthew Sackman wrote: 
> 
> > Hi Waqas,
> > 
> > On Thu, Jun 17, 2010 at 08:55:20PM +0500, Waqas Badar wrote:
> > > Erlang is 32 bit install. Message length doest not exceed 512 Bytes. We
> > > will take the backup of the specified log files and will share them with
> > > you when rabbitmq crashes.
> > 
> > Right, so all 32-bit applications are limited to 4GB RAM maximum,
> > regardless of how much you have installed. (In fact, under Windows, it's
> > frequently only 2GB.) Please use a 64-bit Erlang, and please upgrade to
> > RabbitMQ 1.8.0.
> > 
> > Matthew
> > 
> 
> _______________________________________________
> rabbitmq-discuss mailing list
> rabbitmq-discuss at lists.rabbitmq.com
> http://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20100618/0c640850/attachment.htm>

From mabrek at gmail.com  Fri Jun 18 09:48:36 2010
From: mabrek at gmail.com (mabrek)
Date: Fri, 18 Jun 2010 12:48:36 +0400
Subject: [rabbitmq-discuss] is there java client 1.8.0 changelog or
	migration howto?
Message-ID: <AANLkTimyAw8vm6E4bKWgxPAWMeqGEN1i8h9IX5YbWqD3@mail.gmail.com>

Hello,

I updated java client dependency from 1.7.2 to 1.8.0 in my project and
it failed to compile due to ConnectionParameters that had been
removed.
Is there changelog or something like java client migration howto?

Regards,
Anton Lebedevich/

From mabrek at gmail.com  Fri Jun 18 10:18:23 2010
From: mabrek at gmail.com (mabrek)
Date: Fri, 18 Jun 2010 13:18:23 +0400
Subject: [rabbitmq-discuss] is there java client 1.8.0 changelog or
	migration howto?
In-Reply-To: <AANLkTimyAw8vm6E4bKWgxPAWMeqGEN1i8h9IX5YbWqD3@mail.gmail.com>
References: <AANLkTimyAw8vm6E4bKWgxPAWMeqGEN1i8h9IX5YbWqD3@mail.gmail.com>
Message-ID: <AANLkTim51z9Pzc_bNO8825qs9jFyB8WyrWTaZCItmwgg@mail.gmail.com>

After digging deeper I found that ability to pass several addresses to
ConnectionFactory was removed.
private newConnection(Address[] addresses, ...) still has the loop
through array of addresses but it's never used since
newConnection(...) is always called with single address.

On Fri, Jun 18, 2010 at 12:48 PM, mabrek <mabrek at gmail.com> wrote:
> Hello,
>
> I updated java client dependency from 1.7.2 to 1.8.0 in my project and
> it failed to compile due to ConnectionParameters that had been
> removed.
> Is there changelog or something like java client migration howto?
>
> Regards,
> Anton Lebedevich/
>

From matthias at rabbitmq.com  Fri Jun 18 10:37:37 2010
From: matthias at rabbitmq.com (Matthias Radestock)
Date: Fri, 18 Jun 2010 10:37:37 +0100
Subject: [rabbitmq-discuss] auto-trigger for binding removal
In-Reply-To: <4C178584.7040309@gmx.net>
References: <4C178584.7040309@gmx.net>
Message-ID: <4C1B3E61.40208@rabbitmq.com>

On 15/06/10 14:52, Willi Richert wrote:
> is there some standard way to handle the automatic triggering of some
> custom messages in the case that some binding disappeared?

There is nothing in the AMQP standard for this, but rabbit can be 
extended to provide such a mechanism. See 
http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/2010-May/007254.html

Regards,

Matthias.

From matthew at rabbitmq.com  Fri Jun 18 11:13:10 2010
From: matthew at rabbitmq.com (Matthew Sackman)
Date: Fri, 18 Jun 2010 11:13:10 +0100
Subject: [rabbitmq-discuss] is there java client 1.8.0 changelog or
 migration howto?
In-Reply-To: <AANLkTim51z9Pzc_bNO8825qs9jFyB8WyrWTaZCItmwgg@mail.gmail.com>
References: <AANLkTimyAw8vm6E4bKWgxPAWMeqGEN1i8h9IX5YbWqD3@mail.gmail.com>
	<AANLkTim51z9Pzc_bNO8825qs9jFyB8WyrWTaZCItmwgg@mail.gmail.com>
Message-ID: <20100618101309.GC11857@rabbitmq.com>

Hi,

On Fri, Jun 18, 2010 at 01:18:23PM +0400, mabrek wrote:
> After digging deeper I found that ability to pass several addresses to
> ConnectionFactory was removed.
> private newConnection(Address[] addresses, ...) still has the loop
> through array of addresses but it's never used since
> newConnection(...) is always called with single address.

If the server sends a redirect back to the client then the client will
act upon it. The server can send several redirects, which is why the
loop is still there - it's for processing the responses from the client.

Why did you have need for the old API?

> On Fri, Jun 18, 2010 at 12:48 PM, mabrek <mabrek at gmail.com> wrote:
> > I updated java client dependency from 1.7.2 to 1.8.0 in my project and
> > it failed to compile due to ConnectionParameters that had been
> > removed.

Yeah, the connectionfactory has been vastly improved and is almost
approaching idiomatic Java now.

> > Is there changelog or something like java client migration howto?

Nope. We've not written such a thing.

Matthew

From mabrek at gmail.com  Fri Jun 18 11:38:06 2010
From: mabrek at gmail.com (mabrek)
Date: Fri, 18 Jun 2010 14:38:06 +0400
Subject: [rabbitmq-discuss] is there java client 1.8.0 changelog or
	migration howto?
In-Reply-To: <20100618101309.GC11857@rabbitmq.com>
References: <AANLkTimyAw8vm6E4bKWgxPAWMeqGEN1i8h9IX5YbWqD3@mail.gmail.com>
	<AANLkTim51z9Pzc_bNO8825qs9jFyB8WyrWTaZCItmwgg@mail.gmail.com>
	<20100618101309.GC11857@rabbitmq.com>
Message-ID: <AANLkTil14u4yIiowN9FfaKHybPhFxskPEQbU0GyHCnRC@mail.gmail.com>

On Fri, Jun 18, 2010 at 2:13 PM, Matthew Sackman <matthew at rabbitmq.com> wrote:
> On Fri, Jun 18, 2010 at 01:18:23PM +0400, mabrek wrote:
>> After digging deeper I found that ability to pass several addresses to
>> ConnectionFactory was removed.
>> private newConnection(Address[] addresses, ...) still has the loop
>> through array of addresses but it's never used since
>> newConnection(...) is always called with single address.
>
> If the server sends a redirect back to the client then the client will
> act upon it. The server can send several redirects, which is why the
> loop is still there - it's for processing the responses from the client.
>
> Why did you have need for the old API?

I used the ability to pass several addresses as a fallback approach.
When client fails to connect to first address it switches to second
and so on. It was implemented in your code but now I have to
reimplement it in my. It's not a big deal anyway.

>> On Fri, Jun 18, 2010 at 12:48 PM, mabrek <mabrek at gmail.com> wrote:
>> > I updated java client dependency from 1.7.2 to 1.8.0 in my project and
>> > it failed to compile due to ConnectionParameters that had been
>> > removed.
>
> Yeah, the connectionfactory has been vastly improved and is almost
> approaching idiomatic Java now.

Yes, it looks better now.

>> > Is there changelog or something like java client migration howto?
>
> Nope. We've not written such a thing.

It may be useful just to list incompatible changes somewhere.

Regards,
Anton Lebedevich.

From waqas.badar at panasiangroup.com  Fri Jun 18 11:44:36 2010
From: waqas.badar at panasiangroup.com (Waqas Badar)
Date: Fri, 18 Jun 2010 15:44:36 +0500
Subject: [rabbitmq-discuss] Rabbitmq Crash
In-Reply-To: <4C1B1CEA.6050500@rabbitmq.com>
References: <1276767269.2386.11.camel@waqas-desktop>
	<20100617111143.GE17204@rabbitmq.com>	<20100617111541.GG17204@rabbitmq.com>
	<1276776804.2386.27.camel@waqas-desktop>
	<20100617122757.GJ17204@rabbitmq.com>
	<1276779263.2386.49.camel@waqas-desktop>
	<20100617134136.GK17204@rabbitmq.com>
	<1276790120.2386.62.camel@waqas-desktop>
	<20100617155816.GA11857@rabbitmq.com>
	<1276844693.2432.19.camel@waqas-desktop>
	<4C1B1CEA.6050500@rabbitmq.com>
Message-ID: <1276857876.2432.24.camel@waqas-desktop>

Specified log files have been uploaded at
http://rapidshare.com/files/400332318/rabbitlog.zip.html

On Fri, 2010-06-18 at 08:14 +0100, Matthias Radestock wrote:

> Waqas,
> 
> Waqas Badar wrote:
> > Yesterday again rabbitmq was crashed. Please find rabbit.log, 
> > rabbit-sasl.log and erl_crash.dump file attached with this mail.
> 
> The logs again are for a secondary crash, i.e. rabbit started up and 
> failed to recover the persister log. We need to see the log files for 
> the original crash. If you are on a fairly standard install they should 
> be in rabbit.log.1 and rabbt-sasl.log.1 (these files may be large; if so 
> please upload them somewhere rather than posting to the list).
> 
> > Please  note that it was crash on rabbitmq 1.7.1. We are upgrading the rabbitmq 
> > to 1.8.0. Can you please check the files and let us know that these bugs 
> > have been fixed in 1.8.0 version?
> 
> Chances are that rabbit ran out of memory. That can still happen in 
> 1.8.0 but it is much less likely.
> 
> Also, please follow Matthew's recommendation and install a 64-bit 
> version of Erlang, so that rabbit can actually use all the memory available.
> 
> 
> Regards,
> 
> Matthias.
> 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20100618/4eb1417f/attachment.htm>

From alexis at rabbitmq.com  Fri Jun 18 15:43:21 2010
From: alexis at rabbitmq.com (Alexis Richardson)
Date: Fri, 18 Jun 2010 15:43:21 +0100
Subject: [rabbitmq-discuss] revoking or removing queued messages
In-Reply-To: <65cbf038-8aa1-49fb-b976-19ca5a991697@j8g2000yqd.googlegroups.com>
References: <dd9eaf9e-47f3-48e2-af2e-f210ae80c474@x21g2000yqa.googlegroups.com>
	<AANLkTilQoCoZenhoIMZZoHjwcQr29cAFlxf-G-pw3tCO@mail.gmail.com>
	<65cbf038-8aa1-49fb-b976-19ca5a991697@j8g2000yqd.googlegroups.com>
Message-ID: <AANLkTiloZHvHTH93B-H9x7iN2A8-TEhehm5TOaw4wIt9@mail.gmail.com>

Shane

How does Celery do things like this?  That might be a pattern to
follow even if you don't want to use Celery per se.

alexis


On Thu, Jun 17, 2010 at 8:57 PM, Shane <shane at digitalsanctum.com> wrote:
> Thanks, Scott. Something along the lines of the second approach you
> outlined seems like the way to go.
>
> On Jun 17, 2:04?pm, Scott Brooks <sc... at beamdog.com> wrote:
>> I'm pretty sure there is no way to remove a message(besides a full
>> purge of a queue) since publishing is async so you never really have a
>> way to refer to that message.
>>
>> Some times changes your approach can solve the problem though.
>> I'm not sure what your needs are, but lets assume your are processing
>> PDF files or something like that.
>>
>> One approach would be to send a message containing all the text to be
>> processed as the message, which then the consumer grabs and works
>> with.
>> Another approach would be to send a message saying "document X is
>> ready to be processed", and the consumer then grabshttp://my.pdf.processor.com/documents/X, and does the work.
>>
>> The second approach lets you respond with a "job canceled" message
>> when you request the actual document.
>>
>> Scott
>>
>> On Thu, Jun 17, 2010 at 11:38 AM, Shane <sh... at digitalsanctum.com> wrote:
>> > In our current system, we have a function that essentially revokes a
>> > unit of work before it's acted on. In RabbitMQ, is there a way to
>> > revoke or remove a message from a queue assuming it hasn't been acted
>> > on?
>>
>> > Thanks,
>> > Shane
>> > _______________________________________________
>> > rabbitmq-discuss mailing list
>> > rabbitmq-disc... at lists.rabbitmq.com
>> >http://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss
>>
>> _______________________________________________
>> rabbitmq-discuss mailing list
>> rabbitmq-disc... at lists.rabbitmq.comhttp://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss
> _______________________________________________
> rabbitmq-discuss mailing list
> rabbitmq-discuss at lists.rabbitmq.com
> http://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss
>

From alexis at rabbitmq.com  Fri Jun 18 16:13:05 2010
From: alexis at rabbitmq.com (Alexis Richardson)
Date: Fri, 18 Jun 2010 16:13:05 +0100
Subject: [rabbitmq-discuss] best practices for managing multiple
	consumer instances
In-Reply-To: <6fa8c9df-a314-4fdd-af14-dfe4f6ef2934@5g2000yqz.googlegroups.com>
References: <6fa8c9df-a314-4fdd-af14-dfe4f6ef2934@5g2000yqz.googlegroups.com>
Message-ID: <AANLkTimPJlp5K3UEHSSfwui0o7tR8QQiqsftmo_oQ0Xo@mail.gmail.com>

Shane

On Thu, Jun 17, 2010 at 6:33 PM, Shane <shane at digitalsanctum.com> wrote:
> Anyone have any suggestions on how best to best to manage multiple
> consumers instances?

What do you mean?

alexis

From oyvind at tjervaag.com  Fri Jun 18 16:41:43 2010
From: oyvind at tjervaag.com (=?iso-8859-1?Q?=D8yvind_Tjervaag?=)
Date: Fri, 18 Jun 2010 17:41:43 +0200
Subject: [rabbitmq-discuss] Rabbit crash, new persister
Message-ID: <2EE6A869-2315-40DA-8CBD-9890210C6984@tjervaag.com>

Hi!

Having some problems with getting my new persister install stable. Running the new persister branch on Windows (compiled rabbit on OSX). Checked out latest sources maybe a bit over a week ago. When I don't stress rabbit too much it's behaving very well, but if I up my publish rate I can get it to crash after a couple of minutes. Maybe even under a minute.

All my clients are .NET, using version 1.7.2 of the .NET client library and my server is running Erlang dist R13B03.

When publishing small messages (maybe a couple of KB's) a couple of times per second, everything is seemingly stable and running for days. It crashes however when the messages comes in at 5 msgs/sec and the message size is around 500KB. Just doing a basic publish followed by a tx.commit for every message. Also I've been trying to figure out how to use the Channelflow in the .Net lib. Right now I don't have any code checking for it, but what exactly do I check for? Will I get it in one of the events?

I've attached the rabbit.log and rabbit-sasl.log from a crash. Can anyone see what is going wrong? I'm apparently not too good at decoding these error messages, but it seems to be the new persister?

When the crash happens rabbitmqctl list_queues does not list any queues (but is responding). If I do a stop_app and start_app the queues come back up.

Would appreciate any help :)

regards,
?yvind Tjervaag

PS! Still think RabbitMQ is awesome!



-------------- next part --------------
A non-text attachment was scrubbed...
Name: rabbit-sasl.log
Type: application/octet-stream
Size: 19855 bytes
Desc: not available
URL: <http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20100618/40b0a914/attachment-0002.obj>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: rabbit.log
Type: application/octet-stream
Size: 157194 bytes
Desc: not available
URL: <http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20100618/40b0a914/attachment-0003.obj>

From matthew at rabbitmq.com  Fri Jun 18 17:01:55 2010
From: matthew at rabbitmq.com (Matthew Sackman)
Date: Fri, 18 Jun 2010 17:01:55 +0100
Subject: [rabbitmq-discuss] Rabbit crash, new persister
In-Reply-To: <2EE6A869-2315-40DA-8CBD-9890210C6984@tjervaag.com>
References: <2EE6A869-2315-40DA-8CBD-9890210C6984@tjervaag.com>
Message-ID: <20100618160154.GJ11857@rabbitmq.com>

Hi ?yvind,

On Fri, Jun 18, 2010 at 05:41:43PM +0200, ?yvind Tjervaag wrote:
> Having some problems with getting my new persister install stable. Running the new persister branch on Windows (compiled rabbit on OSX). Checked out latest sources maybe a bit over a week ago. When I don't stress rabbit too much it's behaving very well, but if I up my publish rate I can get it to crash after a couple of minutes. Maybe even under a minute.

This looks like a permission error. Is rabbit allowed to delete under
c:/Documents and Settings/Administrator/Application Data/RabbitMQ/db/rabbit-mnesia ?
It's trying to delete files in there, but getting eaccess error codes
back which the erlang documentation suggests is "Missing permission for
the file or one of its parents".

> When publishing small messages (maybe a couple of KB's) a couple of times per second, everything is seemingly stable and running for days. It crashes however when the messages comes in at 5 msgs/sec and the message size is around 500KB. Just doing a basic publish followed by a tx.commit for every message. Also I've been trying to figure out how to use the Channelflow in the .Net lib. Right now I don't have any code checking for it, but what exactly do I check for? Will I get it in one of the events?

The client should handle the channel.flow automatically. In the case of
the Java client, it looks like it just blocks the caller until the
server allows the client to send again. I would expect the .Net client
to behave similarly - basically, you shouldn't have to worry about it -
the client takes care of it for you.

Matthew

From oyvind at tjervaag.com  Fri Jun 18 17:32:35 2010
From: oyvind at tjervaag.com (=?iso-8859-1?Q?=D8yvind_Tjervaag?=)
Date: Fri, 18 Jun 2010 18:32:35 +0200
Subject: [rabbitmq-discuss] Rabbit crash, new persister
In-Reply-To: <20100618160154.GJ11857@rabbitmq.com>
References: <2EE6A869-2315-40DA-8CBD-9890210C6984@tjervaag.com>
	<20100618160154.GJ11857@rabbitmq.com>
Message-ID: <ADC7E139-DFA9-40B3-8645-6DC92FCCE182@tjervaag.com>

Hi Matthew!

Thanks for the quick reply!

On Jun 18, 2010, at 6:01 PM, Matthew Sackman wrote:

> Hi ?yvind,
> 
> On Fri, Jun 18, 2010 at 05:41:43PM +0200, ?yvind Tjervaag wrote:
>> Having some problems with getting my new persister install stable. Running the new persister branch on Windows (compiled rabbit on OSX). Checked out latest sources maybe a bit over a week ago. When I don't stress rabbit too much it's behaving very well, but if I up my publish rate I can get it to crash after a couple of minutes. Maybe even under a minute.
> 
> This looks like a permission error. Is rabbit allowed to delete under
> c:/Documents and Settings/Administrator/Application Data/RabbitMQ/db/rabbit-mnesia ?
> It's trying to delete files in there, but getting eaccess error codes
> back which the erlang documentation suggests is "Missing permission for
> the file or one of its parents".

Ah, yes I thinks so. erl.exe is running as Administrator (local), and I've started the rabbit-server just in a console logged in as Administrator. Windows claims that this user has full access tho this folder and the ones below / above it. Would it be worth moving the whole mnesia and log folders out of the application and settings folder, give full permissions there and give it another try? Can this location be set in the config file?

> 
>> When publishing small messages (maybe a couple of KB's) a couple of times per second, everything is seemingly stable and running for days. It crashes however when the messages comes in at 5 msgs/sec and the message size is around 500KB. Just doing a basic publish followed by a tx.commit for every message. Also I've been trying to figure out how to use the Channelflow in the .Net lib. Right now I don't have any code checking for it, but what exactly do I check for? Will I get it in one of the events?
> 
> The client should handle the channel.flow automatically. In the case of
> the Java client, it looks like it just blocks the caller until the
> server allows the client to send again. I would expect the .Net client
> to behave similarly - basically, you shouldn't have to worry about it -
> the client takes care of it for you.

That's handy :) good to know I hadn't missed something basic ;)

Thanks again!

?yvind


From matthew at rabbitmq.com  Fri Jun 18 17:39:47 2010
From: matthew at rabbitmq.com (Matthew Sackman)
Date: Fri, 18 Jun 2010 17:39:47 +0100
Subject: [rabbitmq-discuss] Rabbit crash, new persister
In-Reply-To: <ADC7E139-DFA9-40B3-8645-6DC92FCCE182@tjervaag.com>
References: <2EE6A869-2315-40DA-8CBD-9890210C6984@tjervaag.com>
	<20100618160154.GJ11857@rabbitmq.com>
	<ADC7E139-DFA9-40B3-8645-6DC92FCCE182@tjervaag.com>
Message-ID: <20100618163947.GN11857@rabbitmq.com>

Hi ?yvind,

On Fri, Jun 18, 2010 at 06:32:35PM +0200, ?yvind Tjervaag wrote:
> > This looks like a permission error. Is rabbit allowed to delete under
> > c:/Documents and Settings/Administrator/Application Data/RabbitMQ/db/rabbit-mnesia ?
> > It's trying to delete files in there, but getting eaccess error codes
> > back which the erlang documentation suggests is "Missing permission for
> > the file or one of its parents".
> 
> Ah, yes I thinks so. erl.exe is running as Administrator (local), and
> I've started the rabbit-server just in a console logged in as
> Administrator. Windows claims that this user has full access tho this
> folder and the ones below / above it. Would it be worth moving the
> whole mnesia and log folders out of the application and settings
> folder, give full permissions there and give it another try? Can this
> location be set in the config file?

Hmm, I would certainly try moving it and see if life improves. I've
noticed Windows do strange things to files created by Rabbit / Erlang,
but then again, I've noticed Windows do strange things.

You should be able to set the environment variable RABBITMQ_MNESIA_BASE
to the directory you want to use. When Rabbit starts up, it will display
this directory just under the banner so it should be pretty easy to
check if it's taken effect.

Matthew

From oyvind at tjervaag.com  Fri Jun 18 18:51:43 2010
From: oyvind at tjervaag.com (=?iso-8859-1?Q?=D8yvind_Tjervaag?=)
Date: Fri, 18 Jun 2010 19:51:43 +0200
Subject: [rabbitmq-discuss] Rabbit crash, new persister
In-Reply-To: <20100618163947.GN11857@rabbitmq.com>
References: <2EE6A869-2315-40DA-8CBD-9890210C6984@tjervaag.com>
	<20100618160154.GJ11857@rabbitmq.com>
	<ADC7E139-DFA9-40B3-8645-6DC92FCCE182@tjervaag.com>
	<20100618163947.GN11857@rabbitmq.com>
Message-ID: <2B3818E2-5E56-4FCF-82BD-D61226DD4CD2@tjervaag.com>


On Jun 18, 2010, at 6:39 PM, Matthew Sackman wrote:
> 
> Hmm, I would certainly try moving it and see if life improves. I've
> noticed Windows do strange things to files created by Rabbit / Erlang,
> but then again, I've noticed Windows do strange things.
> 
> You should be able to set the environment variable RABBITMQ_MNESIA_BASE
> to the directory you want to use. When Rabbit starts up, it will display
> this directory just under the banner so it should be pretty easy to
> check if it's taken effect.

Changed the folder to c:\mnesia, but strangely enough rabbit decided it would be better to put it in;

c:/Program Files/RabbitMQ/rabbitmq_server-1.7.2/sbin/mnesia/rabbit-mnesia

.. some default value? I don't mind the location as long as it works though! I'm running a test right now to see if I can kill it again. Thanks for the help so far!

?yvind

PS, for the curious, transferring real time process oil & gas production data to a historian DB. Involving OPC, RabbitMQ and WebsphereMQ. RabbitMQ is my favorite of the involved apps so far ;)

From johndapps at gmail.com  Fri Jun 18 19:41:03 2010
From: johndapps at gmail.com (John Apps)
Date: Fri, 18 Jun 2010 20:41:03 +0200
Subject: [rabbitmq-discuss] Rabbit crash, new persister
In-Reply-To: <ADC7E139-DFA9-40B3-8645-6DC92FCCE182@tjervaag.com>
References: <2EE6A869-2315-40DA-8CBD-9890210C6984@tjervaag.com>
	<20100618160154.GJ11857@rabbitmq.com>
	<ADC7E139-DFA9-40B3-8645-6DC92FCCE182@tjervaag.com>
Message-ID: <AANLkTinJAYPoMWnAUeaWfL_DQeXvoUqjDWoXP0hTuM_7@mail.gmail.com>

I define the RABBITMQ_* variables thus:

RABBITMQ_BASE=C:\AMQP\RabbitMQ\rabbitmq_server-1.8.0
RABBITMQ_CONFIG_FILE=C:\AMQP\RabbitMQ\rabbitmq
RABBITMQ_NODENAME=BIGPOOH

which leads to log and DB being defined under RABBITMQ_BASE. Good to have as
I am running 3 different versions of RabbitMQ right now, 1.7.1, 1.7.2 and
1.8.0. No need, really, it was just so easy to setup.

2010/6/18 ?yvind Tjervaag <oyvind at tjervaag.com>

> Hi Matthew!
>
> Thanks for the quick reply!
>
> On Jun 18, 2010, at 6:01 PM, Matthew Sackman wrote:
>
> > Hi ?yvind,
> >
> > On Fri, Jun 18, 2010 at 05:41:43PM +0200, ?yvind Tjervaag wrote:
> >> Having some problems with getting my new persister install stable.
> Running the new persister branch on Windows (compiled rabbit on OSX).
> Checked out latest sources maybe a bit over a week ago. When I don't stress
> rabbit too much it's behaving very well, but if I up my publish rate I can
> get it to crash after a couple of minutes. Maybe even under a minute.
> >
> > This looks like a permission error. Is rabbit allowed to delete under
> > c:/Documents and Settings/Administrator/Application
> Data/RabbitMQ/db/rabbit-mnesia ?
> > It's trying to delete files in there, but getting eaccess error codes
> > back which the erlang documentation suggests is "Missing permission for
> > the file or one of its parents".
>
> Ah, yes I thinks so. erl.exe is running as Administrator (local), and I've
> started the rabbit-server just in a console logged in as Administrator.
> Windows claims that this user has full access tho this folder and the ones
> below / above it. Would it be worth moving the whole mnesia and log folders
> out of the application and settings folder, give full permissions there and
> give it another try? Can this location be set in the config file?
>
> >
> >> When publishing small messages (maybe a couple of KB's) a couple of
> times per second, everything is seemingly stable and running for days. It
> crashes however when the messages comes in at 5 msgs/sec and the message
> size is around 500KB. Just doing a basic publish followed by a tx.commit for
> every message. Also I've been trying to figure out how to use the
> Channelflow in the .Net lib. Right now I don't have any code checking for
> it, but what exactly do I check for? Will I get it in one of the events?
> >
> > The client should handle the channel.flow automatically. In the case of
> > the Java client, it looks like it just blocks the caller until the
> > server allows the client to send again. I would expect the .Net client
> > to behave similarly - basically, you shouldn't have to worry about it -
> > the client takes care of it for you.
>
> That's handy :) good to know I hadn't missed something basic ;)
>
> Thanks again!
>
> ?yvind
>
> _______________________________________________
> rabbitmq-discuss mailing list
> rabbitmq-discuss at lists.rabbitmq.com
> http://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss
>



-- 
---
John Apps
(49) 171 869 1813
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20100618/5d103307/attachment.htm>

From oyvind at tjervaag.com  Fri Jun 18 19:58:19 2010
From: oyvind at tjervaag.com (=?iso-8859-1?Q?=D8yvind_Tjervaag?=)
Date: Fri, 18 Jun 2010 20:58:19 +0200
Subject: [rabbitmq-discuss] Rabbit crash, new persister
In-Reply-To: <AANLkTinJAYPoMWnAUeaWfL_DQeXvoUqjDWoXP0hTuM_7@mail.gmail.com>
References: <2EE6A869-2315-40DA-8CBD-9890210C6984@tjervaag.com>
	<20100618160154.GJ11857@rabbitmq.com>
	<ADC7E139-DFA9-40B3-8645-6DC92FCCE182@tjervaag.com>
	<AANLkTinJAYPoMWnAUeaWfL_DQeXvoUqjDWoXP0hTuM_7@mail.gmail.com>
Message-ID: <B6DAAB43-F06F-4BDF-9327-2EC409297422@tjervaag.com>

Ah, neat, wich also remind me I have to start looking into 1.8.0. Are you using the .NET client lib, and did you have to change a lot of you code to get it working?

/?yvind

On Jun 18, 2010, at 8:41 PM, John Apps wrote:

> I define the RABBITMQ_* variables thus:
> 
> RABBITMQ_BASE=C:\AMQP\RabbitMQ\rabbitmq_server-1.8.0
> RABBITMQ_CONFIG_FILE=C:\AMQP\RabbitMQ\rabbitmq
> RABBITMQ_NODENAME=BIGPOOH
> 
> which leads to log and DB being defined under RABBITMQ_BASE. Good to have as I am running 3 different versions of RabbitMQ right now, 1.7.1, 1.7.2 and 1.8.0. No need, really, it was just so easy to setup.


From shane at digitalsanctum.com  Fri Jun 18 20:14:50 2010
From: shane at digitalsanctum.com (Shane)
Date: Fri, 18 Jun 2010 12:14:50 -0700 (PDT)
Subject: [rabbitmq-discuss] best practices for managing multiple
	consumer instances
In-Reply-To: <AANLkTimPJlp5K3UEHSSfwui0o7tR8QQiqsftmo_oQ0Xo@mail.gmail.com>
References: <6fa8c9df-a314-4fdd-af14-dfe4f6ef2934@5g2000yqz.googlegroups.com> 
	<AANLkTimPJlp5K3UEHSSfwui0o7tR8QQiqsftmo_oQ0Xo@mail.gmail.com>
Message-ID: <a7991c7b-af37-47de-8224-4933d6e4616c@g19g2000yqc.googlegroups.com>

I mean being able to tune the number of consumers and their behavior
on multiple machines. For example, being able to view the performance
of queues and being able to start more consumers or stop consumers
gracefully.


On Jun 18, 11:13?am, Alexis Richardson <ale... at rabbitmq.com> wrote:
> Shane
>
> On Thu, Jun 17, 2010 at 6:33 PM, Shane <sh... at digitalsanctum.com> wrote:
> > Anyone have any suggestions on how best to best to manage multiple
> > consumers instances?
>
> What do you mean?
>
> alexis
> _______________________________________________
> rabbitmq-discuss mailing list
> rabbitmq-disc... at lists.rabbitmq.comhttp://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss

From alexis at rabbitmq.com  Fri Jun 18 20:29:48 2010
From: alexis at rabbitmq.com (Alexis Richardson)
Date: Fri, 18 Jun 2010 20:29:48 +0100
Subject: [rabbitmq-discuss] best practices for managing multiple
	consumer instances
In-Reply-To: <a7991c7b-af37-47de-8224-4933d6e4616c@g19g2000yqc.googlegroups.com>
References: <6fa8c9df-a314-4fdd-af14-dfe4f6ef2934@5g2000yqz.googlegroups.com>
	<AANLkTimPJlp5K3UEHSSfwui0o7tR8QQiqsftmo_oQ0Xo@mail.gmail.com>
	<a7991c7b-af37-47de-8224-4933d6e4616c@g19g2000yqc.googlegroups.com>
Message-ID: <AANLkTikY3LvRdTmlWXbaW_QE9IqM2EfkM7lI5EoShewF@mail.gmail.com>

Shane

I see, thanks.

The best way to do this is outside of RabbitMQ, by monitoring
consumers and their work, out of band..  It's not something where
there is 'one way to do it'.

Can you tell us more about your use case please?

alexis



On Fri, Jun 18, 2010 at 8:14 PM, Shane <shane at digitalsanctum.com> wrote:
> I mean being able to tune the number of consumers and their behavior
> on multiple machines. For example, being able to view the performance
> of queues and being able to start more consumers or stop consumers
> gracefully.
>
>
> On Jun 18, 11:13?am, Alexis Richardson <ale... at rabbitmq.com> wrote:
>> Shane
>>
>> On Thu, Jun 17, 2010 at 6:33 PM, Shane <sh... at digitalsanctum.com> wrote:
>> > Anyone have any suggestions on how best to best to manage multiple
>> > consumers instances?
>>
>> What do you mean?
>>
>> alexis
>> _______________________________________________
>> rabbitmq-discuss mailing list
>> rabbitmq-disc... at lists.rabbitmq.comhttp://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss
> _______________________________________________
> rabbitmq-discuss mailing list
> rabbitmq-discuss at lists.rabbitmq.com
> http://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss
>

From russell at borogove.org  Fri Jun 18 20:34:24 2010
From: russell at borogove.org (Russell Borogove)
Date: Fri, 18 Jun 2010 12:34:24 -0700
Subject: [rabbitmq-discuss] Error running rabbitmqctl
Message-ID: <DB5B9E94-F061-455E-87D2-FBAA71A02C68@borogove.org>

In order to coordinate rabbitmq with alice, I'm setting the cookie for both on the command line with '-setcookie 123'. This seems to work fine. 

When I try to run rabbitmq, though, it errors out trying to read the cookie from my home dir:
russell at shard ~: sudo rabbitmqctl -setcookie 123 stop
{error_logger,{{2010,6,18},{12,32,20}},"Error when reading /Users/russell/.erlang.cookie: eacces",[]}

Why is it looking for the cookie there?



From johndapps at gmail.com  Fri Jun 18 21:23:07 2010
From: johndapps at gmail.com (John Apps)
Date: Fri, 18 Jun 2010 22:23:07 +0200
Subject: [rabbitmq-discuss] Rabbit crash, new persister
In-Reply-To: <B6DAAB43-F06F-4BDF-9327-2EC409297422@tjervaag.com>
References: <2EE6A869-2315-40DA-8CBD-9890210C6984@tjervaag.com>
	<20100618160154.GJ11857@rabbitmq.com>
	<ADC7E139-DFA9-40B3-8645-6DC92FCCE182@tjervaag.com>
	<AANLkTinJAYPoMWnAUeaWfL_DQeXvoUqjDWoXP0hTuM_7@mail.gmail.com>
	<B6DAAB43-F06F-4BDF-9327-2EC409297422@tjervaag.com>
Message-ID: <AANLkTilitJUHAVmyZ-PykgYfF9rEw42TWB4fKNaJRtGM@mail.gmail.com>

I have been using the Java programs which are available with the kit. .NET
is something I have yet to try and really should start.
One word of warning: since Erlang is 32-bit mode only, you will run out of
memory quite quickly with certain tests, leading invariably to a crash. You
probably already know this, but in case you did not...
If you have a handy little .NET example lying around, I would love to give a
go. However, I will download the .NET kit and give it a whirl.

I have the following lines in my rabbitmq.config file:

[
        {kernel,
                [{inet_dist_listen_min, 65535},
                 {inet_dist_listen_max, 65535},
                 {inet_default_listen_options,
                        [{nodelay,true}, {sndbuf,65535}, {recbuf,65535}]},
                 {inet_default_connect_options, [{nodelay,true}]}
                ]
        },
        {os_mon,
                [{start_cpu_sup,true},
                 {start_disksup,false},
                 {start_memsup, false},
                 {system_memory_high_watermark, 0.9}
                ]
        },
        {rabbit, [{vm_memory_high_watermark, 0.4}]},
        {rabbit, [{memory_alarms, true}]},
        {mnesia, [{dump_log_write_threshold, 1000}]},
        {rabbit, []}
].
The important ones are the vm_memory_high_watermark and the memory_alarms
true. I have found that using the maximum sndbuf and recbuf give me the best
performance on Windows 7 X64.
2010/6/18 ?yvind Tjervaag <oyvind at tjervaag.com>

> Ah, neat, wich also remind me I have to start looking into 1.8.0. Are you
> using the .NET client lib, and did you have to change a lot of you code to
> get it working?
>
> /?yvind
>
> On Jun 18, 2010, at 8:41 PM, John Apps wrote:
>
> > I define the RABBITMQ_* variables thus:
> >
> > RABBITMQ_BASE=C:\AMQP\RabbitMQ\rabbitmq_server-1.8.0
> > RABBITMQ_CONFIG_FILE=C:\AMQP\RabbitMQ\rabbitmq
> > RABBITMQ_NODENAME=BIGPOOH
> >
> > which leads to log and DB being defined under RABBITMQ_BASE. Good to have
> as I am running 3 different versions of RabbitMQ right now, 1.7.1, 1.7.2 and
> 1.8.0. No need, really, it was just so easy to setup.
>
>


-- 
---
John Apps
(49) 171 869 1813
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20100618/b9c5949b/attachment.htm>

From shane at digitalsanctum.com  Fri Jun 18 21:48:31 2010
From: shane at digitalsanctum.com (Shane)
Date: Fri, 18 Jun 2010 13:48:31 -0700 (PDT)
Subject: [rabbitmq-discuss] best practices for managing multiple
	consumer instances
In-Reply-To: <AANLkTikY3LvRdTmlWXbaW_QE9IqM2EfkM7lI5EoShewF@mail.gmail.com>
References: <6fa8c9df-a314-4fdd-af14-dfe4f6ef2934@5g2000yqz.googlegroups.com> 
	<AANLkTimPJlp5K3UEHSSfwui0o7tR8QQiqsftmo_oQ0Xo@mail.gmail.com> 
	<a7991c7b-af37-47de-8224-4933d6e4616c@g19g2000yqc.googlegroups.com> 
	<AANLkTikY3LvRdTmlWXbaW_QE9IqM2EfkM7lI5EoShewF@mail.gmail.com>
Message-ID: <c3fac749-8a0e-4a47-bceb-248feff390d7@u26g2000yqu.googlegroups.com>

Sure. There are several "jobs" which vary a lot in terms of time to
complete and complexity. Traditionally, these jobs have always run
with a fixed priority and number of "consumers" running in one big
continuous loop. By moving these jobs to RabbitMQ, I hope to be able
to better tune the jobs by varying priorities and the number
consumers.

I've already begun to experiment with this by introducing a heartbeat
exchange which does nothing other than logging the number of messages
and consumers on a queue.

As you've indicated there seems like several ways to go about this,
which is why I asked if there were any best practices or patterns.

Thanks again.


On Jun 18, 3:29?pm, Alexis Richardson <ale... at rabbitmq.com> wrote:
> Shane
>
> I see, thanks.
>
> The best way to do this is outside of RabbitMQ, by monitoring
> consumers and their work, out of band.. ?It's not something where
> there is 'one way to do it'.
>
> Can you tell us more about your use case please?
>
> alexis
>
>
>
>
>
> On Fri, Jun 18, 2010 at 8:14 PM, Shane <sh... at digitalsanctum.com> wrote:
> > I mean being able to tune the number of consumers and their behavior
> > on multiple machines. For example, being able to view the performance
> > of queues and being able to start more consumers or stop consumers
> > gracefully.
>
> > On Jun 18, 11:13?am, Alexis Richardson <ale... at rabbitmq.com> wrote:
> >> Shane
>
> >> On Thu, Jun 17, 2010 at 6:33 PM, Shane <sh... at digitalsanctum.com> wrote:
> >> > Anyone have any suggestions on how best to best to manage multiple
> >> > consumers instances?
>
> >> What do you mean?
>
> >> alexis
> >> _______________________________________________
> >> rabbitmq-discuss mailing list
> >> rabbitmq-disc... at lists.rabbitmq.comhttp://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss
> > _______________________________________________
> > rabbitmq-discuss mailing list
> > rabbitmq-disc... at lists.rabbitmq.com
> >http://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss
>
> _______________________________________________
> rabbitmq-discuss mailing list
> rabbitmq-disc... at lists.rabbitmq.comhttp://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss

From shane at digitalsanctum.com  Fri Jun 18 21:52:19 2010
From: shane at digitalsanctum.com (Shane)
Date: Fri, 18 Jun 2010 13:52:19 -0700 (PDT)
Subject: [rabbitmq-discuss] revoking or removing queued messages
In-Reply-To: <AANLkTiloZHvHTH93B-H9x7iN2A8-TEhehm5TOaw4wIt9@mail.gmail.com>
References: <dd9eaf9e-47f3-48e2-af2e-f210ae80c474@x21g2000yqa.googlegroups.com>
	<AANLkTilQoCoZenhoIMZZoHjwcQr29cAFlxf-G-pw3tCO@mail.gmail.com> 
	<65cbf038-8aa1-49fb-b976-19ca5a991697@j8g2000yqd.googlegroups.com> 
	<AANLkTiloZHvHTH93B-H9x7iN2A8-TEhehm5TOaw4wIt9@mail.gmail.com>
Message-ID: <bd4af6ed-f3d7-4d3e-ae2c-dcb8f80c2302@u7g2000yqm.googlegroups.com>

Alexis, I'm not familiar with Celery.

On Jun 18, 10:43?am, Alexis Richardson <ale... at rabbitmq.com> wrote:
> Shane
>
> How does Celery do things like this? ?That might be a pattern to
> follow even if you don't want to use Celery per se.
>
> alexis
>
>
>
>
>
> On Thu, Jun 17, 2010 at 8:57 PM, Shane <sh... at digitalsanctum.com> wrote:
> > Thanks, Scott. Something along the lines of the second approach you
> > outlined seems like the way to go.
>
> > On Jun 17, 2:04?pm, Scott Brooks <sc... at beamdog.com> wrote:
> >> I'm pretty sure there is no way to remove a message(besides a full
> >> purge of a queue) since publishing is async so you never really have a
> >> way to refer to that message.
>
> >> Some times changes your approach can solve the problem though.
> >> I'm not sure what your needs are, but lets assume your are processing
> >> PDF files or something like that.
>
> >> One approach would be to send a message containing all the text to be
> >> processed as the message, which then the consumer grabs and works
> >> with.
> >> Another approach would be to send a message saying "document X is
> >> ready to be processed", and the consumer then grabshttp://my.pdf.processor.com/documents/X, and does the work.
>
> >> The second approach lets you respond with a "job canceled" message
> >> when you request the actual document.
>
> >> Scott
>
> >> On Thu, Jun 17, 2010 at 11:38 AM, Shane <sh... at digitalsanctum.com> wrote:
> >> > In our current system, we have a function that essentially revokes a
> >> > unit of work before it's acted on. In RabbitMQ, is there a way to
> >> > revoke or remove a message from a queue assuming it hasn't been acted
> >> > on?
>
> >> > Thanks,
> >> > Shane
> >> > _______________________________________________
> >> > rabbitmq-discuss mailing list
> >> > rabbitmq-disc... at lists.rabbitmq.com
> >> >http://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss
>
> >> _______________________________________________
> >> rabbitmq-discuss mailing list
> >> rabbitmq-disc... at lists.rabbitmq.comhttp://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss
> > _______________________________________________
> > rabbitmq-discuss mailing list
> > rabbitmq-disc... at lists.rabbitmq.com
> >http://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss
>
> _______________________________________________
> rabbitmq-discuss mailing list
> rabbitmq-disc... at lists.rabbitmq.comhttp://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss

From jasonjwwilliams at gmail.com  Fri Jun 18 22:09:07 2010
From: jasonjwwilliams at gmail.com (Jason J. W. Williams)
Date: Fri, 18 Jun 2010 15:09:07 -0600
Subject: [rabbitmq-discuss] revoking or removing queued messages
In-Reply-To: <bd4af6ed-f3d7-4d3e-ae2c-dcb8f80c2302@u7g2000yqm.googlegroups.com>
References: <dd9eaf9e-47f3-48e2-af2e-f210ae80c474@x21g2000yqa.googlegroups.com>
	<AANLkTilQoCoZenhoIMZZoHjwcQr29cAFlxf-G-pw3tCO@mail.gmail.com>
	<65cbf038-8aa1-49fb-b976-19ca5a991697@j8g2000yqd.googlegroups.com>
	<AANLkTiloZHvHTH93B-H9x7iN2A8-TEhehm5TOaw4wIt9@mail.gmail.com>
	<bd4af6ed-f3d7-4d3e-ae2c-dcb8f80c2302@u7g2000yqm.googlegroups.com>
Message-ID: <2C178B50-9C0A-429A-ABEF-F174B82A4BD6@gmail.com>

http://wiki.github.com/ask/celery/

-J

Sent via iPhone

Is your e-mail Premiere?

On Jun 18, 2010, at 14:52, Shane <shane at digitalsanctum.com> wrote:

> Alexis, I'm not familiar with Celery.
>
> On Jun 18, 10:43 am, Alexis Richardson <ale... at rabbitmq.com> wrote:
>> Shane
>>
>> How does Celery do things like this? That might be a pattern to
>> follow even if you don't want to use Celery per se.
>>
>> alexis
>>
>>
>>
>>
>>
>> On Thu, Jun 17, 2010 at 8:57 PM, Shane <sh... at digitalsanctum.com>  
>> wrote:
>>> Thanks, Scott. Something along the lines of the second approach you
>>> outlined seems like the way to go.
>>
>>> On Jun 17, 2:04 pm, Scott Brooks <sc... at beamdog.com> wrote:
>>>> I'm pretty sure there is no way to remove a message(besides a full
>>>> purge of a queue) since publishing is async so you never really  
>>>> have a
>>>> way to refer to that message.
>>
>>>> Some times changes your approach can solve the problem though.
>>>> I'm not sure what your needs are, but lets assume your are  
>>>> processing
>>>> PDF files or something like that.
>>
>>>> One approach would be to send a message containing all the text  
>>>> to be
>>>> processed as the message, which then the consumer grabs and works
>>>> with.
>>>> Another approach would be to send a message saying "document X is
>>>> ready to be processed", and the consumer then grabshttp:// 
>>>> my.pdf.processor.com/documents/X, and does the work.
>>
>>>> The second approach lets you respond with a "job canceled" message
>>>> when you request the actual document.
>>
>>>> Scott
>>
>>>> On Thu, Jun 17, 2010 at 11:38 AM, Shane  
>>>> <sh... at digitalsanctum.com> wrote:
>>>>> In our current system, we have a function that essentially  
>>>>> revokes a
>>>>> unit of work before it's acted on. In RabbitMQ, is there a way to
>>>>> revoke or remove a message from a queue assuming it hasn't been  
>>>>> acted
>>>>> on?
>>
>>>>> Thanks,
>>>>> Shane
>>>>> _______________________________________________
>>>>> rabbitmq-discuss mailing list
>>>>> rabbitmq-disc... at lists.rabbitmq.com
>>>>> http://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq- 
>>>>> discuss
>>
>>>> _______________________________________________
>>>> rabbitmq-discuss mailing list
>>>> rabbitmq-disc... at lists.rabbitmq.comhttp://lists.rabbitmq.com/cgi- 
>>>> bin/mailman/listinfo/rabbitmq-discuss
>>> _______________________________________________
>>> rabbitmq-discuss mailing list
>>> rabbitmq-disc... at lists.rabbitmq.com
>>> http://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss
>>
>> _______________________________________________
>> rabbitmq-discuss mailing list
>> rabbitmq-disc... at lists.rabbitmq.comhttp://lists.rabbitmq.com/cgi- 
>> bin/mailman/listinfo/rabbitmq-discuss
> _______________________________________________
> rabbitmq-discuss mailing list
> rabbitmq-discuss at lists.rabbitmq.com
> http://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss

From jasonjwwilliams at gmail.com  Sat Jun 19 01:04:09 2010
From: jasonjwwilliams at gmail.com (Jason J. W. Williams)
Date: Fri, 18 Jun 2010 18:04:09 -0600
Subject: [rabbitmq-discuss] best practices for managing multiple
	consumer instances
In-Reply-To: <c3fac749-8a0e-4a47-bceb-248feff390d7@u26g2000yqu.googlegroups.com>
References: <6fa8c9df-a314-4fdd-af14-dfe4f6ef2934@5g2000yqz.googlegroups.com>
	<AANLkTimPJlp5K3UEHSSfwui0o7tR8QQiqsftmo_oQ0Xo@mail.gmail.com>
	<a7991c7b-af37-47de-8224-4933d6e4616c@g19g2000yqc.googlegroups.com>
	<AANLkTikY3LvRdTmlWXbaW_QE9IqM2EfkM7lI5EoShewF@mail.gmail.com>
	<c3fac749-8a0e-4a47-bceb-248feff390d7@u26g2000yqu.googlegroups.com>
Message-ID: <AANLkTima8eI8uxFbVK99XWnJmbkGsOsiujFyOiF6LAwq@mail.gmail.com>

You used to be able to check queue depth by re-declaring the queue...a
la this Nagios check we wrote: http://gist.github.com/444401

Reading through the semantic changes in 1.8.0 it may not work going forward.

-J

On Fri, Jun 18, 2010 at 2:48 PM, Shane <shane at digitalsanctum.com> wrote:
> Sure. There are several "jobs" which vary a lot in terms of time to
> complete and complexity. Traditionally, these jobs have always run
> with a fixed priority and number of "consumers" running in one big
> continuous loop. By moving these jobs to RabbitMQ, I hope to be able
> to better tune the jobs by varying priorities and the number
> consumers.
>
> I've already begun to experiment with this by introducing a heartbeat
> exchange which does nothing other than logging the number of messages
> and consumers on a queue.
>
> As you've indicated there seems like several ways to go about this,
> which is why I asked if there were any best practices or patterns.
>
> Thanks again.
>
>
> On Jun 18, 3:29?pm, Alexis Richardson <ale... at rabbitmq.com> wrote:
>> Shane
>>
>> I see, thanks.
>>
>> The best way to do this is outside of RabbitMQ, by monitoring
>> consumers and their work, out of band.. ?It's not something where
>> there is 'one way to do it'.
>>
>> Can you tell us more about your use case please?
>>
>> alexis
>>
>>
>>
>>
>>
>> On Fri, Jun 18, 2010 at 8:14 PM, Shane <sh... at digitalsanctum.com> wrote:
>> > I mean being able to tune the number of consumers and their behavior
>> > on multiple machines. For example, being able to view the performance
>> > of queues and being able to start more consumers or stop consumers
>> > gracefully.
>>
>> > On Jun 18, 11:13?am, Alexis Richardson <ale... at rabbitmq.com> wrote:
>> >> Shane
>>
>> >> On Thu, Jun 17, 2010 at 6:33 PM, Shane <sh... at digitalsanctum.com> wrote:
>> >> > Anyone have any suggestions on how best to best to manage multiple
>> >> > consumers instances?
>>
>> >> What do you mean?
>>
>> >> alexis
>> >> _______________________________________________
>> >> rabbitmq-discuss mailing list
>> >> rabbitmq-disc... at lists.rabbitmq.comhttp://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss
>> > _______________________________________________
>> > rabbitmq-discuss mailing list
>> > rabbitmq-disc... at lists.rabbitmq.com
>> >http://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss
>>
>> _______________________________________________
>> rabbitmq-discuss mailing list
>> rabbitmq-disc... at lists.rabbitmq.comhttp://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss
> _______________________________________________
> rabbitmq-discuss mailing list
> rabbitmq-discuss at lists.rabbitmq.com
> http://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss
>

From raphael at rightscale.com  Sat Jun 19 01:13:32 2010
From: raphael at rightscale.com (Raphael Simon)
Date: Fri, 18 Jun 2010 17:13:32 -0700
Subject: [rabbitmq-discuss] Publish to queue fails but publish to direct
	exchange works
In-Reply-To: <4C1B1B1D.7010104@rabbitmq.com>
References: <AANLkTinEJeAHz__BkHvt6UR4fN6tn9EkIAgvD2p-o__4@mail.gmail.com>
	<AANLkTinKVp5dg94vximXUT36RvXdHSJ7VIjAXPqVRnbG@mail.gmail.com>
	<AANLkTin-tQYGacgo8FC3c7jYxhgvkDFbxUxS16PlBJ1B@mail.gmail.com>
	<4C1B09A1.7060103@rabbitmq.com>
	<AANLkTimwPk2WFnDAXaNF01ljp7DuAZ9B_WKA_95eiVte@mail.gmail.com>
	<4C1B1B1D.7010104@rabbitmq.com>
Message-ID: <AANLkTimba93lyfQ7slDvg_uzVTi5XxQAd5aFo-ta4amn@mail.gmail.com>

Answers inline:

On Fri, Jun 18, 2010 at 12:07 AM, Matthias Radestock
<matthias at rabbitmq.com>wrote:

The reason we don't map the blank exchange name to something else is that
> RabbitMQ permits anything in the exchange name, so *** and --- actually are
> valid exchange names.


I understand but it seems to me that the pain it causes users in general is
greater than the remote chance somebody would have called its queue ---.
Alternatively you could wrap queue names e.g. around brackets. You could
also use a divider ' | ' (which would also be an issue if somebody called
its queue ' | ' but again it seems to me that the benefits way outweigh the
drawbacks).

Are all AMQP interactions going through nanite? I can see there aren't any
> queue.unbind actions in that code base.


Our code is based on nanite although we have heavily customized it now.


> I suggest you upgrade. The queue and exchange code has changed quite a bit
> in the recent release. While I do not recall us spotting any problems in the
> previous version that would explain the behaviour you are seeing, it is
> nevertheless possible that there was a bug in the previous code which has
> been eradicated by other changes.
>
>
OK We will see about upgrading, this is not such a simple task now that the
system is on production.


> ok. If you *do* think of a use case for auto-delete exchanges, please let
> us know. The AMQP 0-9-1 spec actually removes that

feature, but we are having second thoughts on whether that was the right
> thing to do.


will do.


>  I recreated some bindings from within the broker (directly in mnesia) and
>> now things started working again. Is there a better way to re-create the
>> binding to the default exchange without having to re-create the queue?
>>
>
> You should be able to issue an appropriate queue.bind command. As I
> mentioned earlier, such explicit operations on the default exchange should
> imo not be permitted, but rabbit does and it's a grey area of the spec. So
> currently it should work, just don't write any code that depends on it.
>
>  I should probably mention that sending the following queue.bind packet
>> didn't seem to help (rabbitmqctl list_bindings still shows the
>> binding  missing).
>>
>> [:sending,
>>  #<AMQP::Protocol::Queue::Bind:0x9b26778
>>  @arguments=nil,
>>  @debug=1,
>>  @exchange=
>>   "nanite-rs-instance-fd0416fe31d7b019112c2c0adce9b4e4a261bab1-1094976",
>>  @nowait=true,
>>
>>  @queue="nanite-rs-instance-fd0416fe31d7b019112c2c0adce9b4e4a261bab1-1094976",
>>  @routing_key=nil,
>>  @ticket=1>]
>>
>>
> The exchange in the above should be blank.
>

Setting the exchange to blank here did not seem to do the right thing. The
binding that is missing is the one from the queue name to the routing key
with the same name.

Also a different issue: Using a blank string with rabbitmqctl
set_permissions has the same effect as using a wild card (.*). This seems a
little bit counter-intuitive (i.e. rabbitmqctl set_permissions user "" "' ""
has the same effect as rabbitmqctl set_permissions user ".*" ".*" ".*").

Finally a different question: is there a way to force a disconnect from a
client from the broker? we have code that will force the client to recreate
the binding and resubscribe if the connection gets broken and it would be
nice if we could trigger this manually.


>
> Regards,
>
> Matthias.
>

Thanks for the help!

--
Raphael.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20100618/25faeeb4/attachment.htm>

From jasonjwwilliams at gmail.com  Sat Jun 19 04:16:14 2010
From: jasonjwwilliams at gmail.com (Jason J. W. Williams)
Date: Fri, 18 Jun 2010 21:16:14 -0600
Subject: [rabbitmq-discuss] RabbitMQ Queue Depth Nagios Healthcheck
Message-ID: <AANLkTinRUhR3WiIFL5JBcGrP8BEnOiiU_h9lnBnhkzbB@mail.gmail.com>

Hi Y'all,

Commenting earlier on the Nagios HC we wrote in-house, I realized we
should probably release it. In case it's helpful to anyone else:

http://github.com/williamsjj/platar/tree/master/nagios

Just requires a copy of Python and the py-amqplib. As noted earlier,
this may not work on Rabbit 1.8.0 due to the change in behavior for
re-declaring existing queues.

-J

From matthias at rabbitmq.com  Sat Jun 19 06:44:44 2010
From: matthias at rabbitmq.com (Matthias Radestock)
Date: Sat, 19 Jun 2010 06:44:44 +0100
Subject: [rabbitmq-discuss] Publish to queue fails but publish to direct
 exchange works
In-Reply-To: <AANLkTimba93lyfQ7slDvg_uzVTi5XxQAd5aFo-ta4amn@mail.gmail.com>
References: <AANLkTinEJeAHz__BkHvt6UR4fN6tn9EkIAgvD2p-o__4@mail.gmail.com>	<AANLkTinKVp5dg94vximXUT36RvXdHSJ7VIjAXPqVRnbG@mail.gmail.com>	<AANLkTin-tQYGacgo8FC3c7jYxhgvkDFbxUxS16PlBJ1B@mail.gmail.com>	<4C1B09A1.7060103@rabbitmq.com>	<AANLkTimwPk2WFnDAXaNF01ljp7DuAZ9B_WKA_95eiVte@mail.gmail.com>	<4C1B1B1D.7010104@rabbitmq.com>
	<AANLkTimba93lyfQ7slDvg_uzVTi5XxQAd5aFo-ta4amn@mail.gmail.com>
Message-ID: <4C1C594C.1020706@rabbitmq.com>

Raphael,

Raphael Simon wrote:
> On Fri, Jun 18, 2010 at 12:07 AM, Matthias Radestock 
> <matthias at rabbitmq.com <mailto:matthias at rabbitmq.com>> wrote:
> 
>     The reason we don't map the blank exchange name to something else is
>     that RabbitMQ permits anything in the exchange name, so *** and ---
>     actually are valid exchange names.
> 
> 
> I understand but it seems to me that the pain it causes users in general 
> is greater than the remote chance somebody would have called its queue 
> ---. Alternatively you could wrap queue names e.g. around brackets. You 
> could also use a divider ' | ' (which would also be an issue if somebody 
> called its queue ' | ' but again it seems to me that the benefits way 
> outweigh the drawbacks). 

We considered something like that, and early versions of the code worked 
that way, but it turned out to cause more problems than it solved.

The current output format is designed to be processed by standard tools 
in the unix tool chain, such as 'cut', which is a major advantage.

>         I should probably mention that sending the following queue.bind
>         packet didn't seem to help (rabbitmqctl list_bindings still
>         shows the
>         binding  missing).
> 
>         [:sending,
>          #<AMQP::Protocol::Queue::Bind:0x9b26778
>          @arguments=nil,
>          @debug=1,
>          @exchange=
>          
>         "nanite-rs-instance-fd0416fe31d7b019112c2c0adce9b4e4a261bab1-1094976",
>          @nowait=true,
>          @queue="nanite-rs-instance-fd0416fe31d7b019112c2c0adce9b4e4a261bab1-1094976",
>          @routing_key=nil,
>          @ticket=1>]
> 
> 
>     The exchange in the above should be blank.
> 
> 
> Setting the exchange to blank here did not seem to do the right thing. 
> The binding that is missing is the one from the queue name to the 
> routing key with the same name.

Ah, I didn't spot the second mistake - the routing key should be set to 
the queue name.

> Also a different issue: Using a blank string with rabbitmqctl 
> set_permissions has the same effect as using a wild card (.*). This 
> seems a little bit counter-intuitive (i.e. rabbitmqctl set_permissions 
> user "" "' "" has the same effect as rabbitmqctl set_permissions user 
> ".*" ".*" ".*").

We are implementing nothing special here; just following whatever the 
regexp library does.

One thing we could do is automatically anchor all regexp by surrounding 
them with ^$. That would make it impossible to use explicit anchors though.

> Finally a different question: is there a way to force a disconnect from 
> a client from the broker?

Yes, see the 'rabbitmqctl close_connection' command.


Regards,

Matthias.

From matthias at rabbitmq.com  Sat Jun 19 06:56:42 2010
From: matthias at rabbitmq.com (Matthias Radestock)
Date: Sat, 19 Jun 2010 06:56:42 +0100
Subject: [rabbitmq-discuss] RabbitMQ Queue Depth Nagios Healthcheck
In-Reply-To: <AANLkTinRUhR3WiIFL5JBcGrP8BEnOiiU_h9lnBnhkzbB@mail.gmail.com>
References: <AANLkTinRUhR3WiIFL5JBcGrP8BEnOiiU_h9lnBnhkzbB@mail.gmail.com>
Message-ID: <4C1C5C1A.8050106@rabbitmq.com>

Jason,

Jason J. W. Williams wrote:
> this may not work on Rabbit 1.8.0 due to the change in behavior for
> re-declaring existing queues.

I suggest you use a passive queue.declare, i.e. setting the 'passive' 
flag to true. In that flavour of the command only the queue name is 
relevant and no equivalence checks are carried out.

Regards,

Matthias.

From jasonjwwilliams at gmail.com  Sat Jun 19 07:08:05 2010
From: jasonjwwilliams at gmail.com (Jason J. W. Williams)
Date: Sat, 19 Jun 2010 00:08:05 -0600
Subject: [rabbitmq-discuss] RabbitMQ Queue Depth Nagios Healthcheck
In-Reply-To: <4C1C5C1A.8050106@rabbitmq.com>
References: <AANLkTinRUhR3WiIFL5JBcGrP8BEnOiiU_h9lnBnhkzbB@mail.gmail.com>
	<4C1C5C1A.8050106@rabbitmq.com>
Message-ID: <AANLkTik6xuKGaKLbsWKw1V4NbrEQasEV6p1dho08RmAt@mail.gmail.com>

Hi Matthias,

With passive set it will return the queue depth as before?

-J

On Fri, Jun 18, 2010 at 11:56 PM, Matthias Radestock
<matthias at rabbitmq.com> wrote:
> Jason,
>
> Jason J. W. Williams wrote:
>>
>> this may not work on Rabbit 1.8.0 due to the change in behavior for
>> re-declaring existing queues.
>
> I suggest you use a passive queue.declare, i.e. setting the 'passive' flag
> to true. In that flavour of the command only the queue name is relevant and
> no equivalence checks are carried out.
>
> Regards,
>
> Matthias.
>

From matthias at rabbitmq.com  Sat Jun 19 07:10:02 2010
From: matthias at rabbitmq.com (Matthias Radestock)
Date: Sat, 19 Jun 2010 07:10:02 +0100
Subject: [rabbitmq-discuss] RabbitMQ Queue Depth Nagios Healthcheck
In-Reply-To: <AANLkTik6xuKGaKLbsWKw1V4NbrEQasEV6p1dho08RmAt@mail.gmail.com>
References: <AANLkTinRUhR3WiIFL5JBcGrP8BEnOiiU_h9lnBnhkzbB@mail.gmail.com>	<4C1C5C1A.8050106@rabbitmq.com>
	<AANLkTik6xuKGaKLbsWKw1V4NbrEQasEV6p1dho08RmAt@mail.gmail.com>
Message-ID: <4C1C5F3A.40504@rabbitmq.com>

Jason,

Jason J. W. Williams wrote:
> With passive set it will return the queue depth as before?

Yes.

Matthias.

From jasonjwwilliams at gmail.com  Sat Jun 19 07:11:16 2010
From: jasonjwwilliams at gmail.com (Jason J. W. Williams)
Date: Sat, 19 Jun 2010 00:11:16 -0600
Subject: [rabbitmq-discuss] RabbitMQ Queue Depth Nagios Healthcheck
In-Reply-To: <4C1C5F3A.40504@rabbitmq.com>
References: <AANLkTinRUhR3WiIFL5JBcGrP8BEnOiiU_h9lnBnhkzbB@mail.gmail.com>
	<4C1C5C1A.8050106@rabbitmq.com>
	<AANLkTik6xuKGaKLbsWKw1V4NbrEQasEV6p1dho08RmAt@mail.gmail.com>
	<4C1C5F3A.40504@rabbitmq.com>
Message-ID: <AANLkTiltIo_wg_OeNdKFRceT04DS09ZfzAFjgoVhUuXL@mail.gmail.com>

Great. Thank you. I've pushed the change to GitHub.

-J

On Sat, Jun 19, 2010 at 12:10 AM, Matthias Radestock
<matthias at rabbitmq.com> wrote:
> Jason,
>
> Jason J. W. Williams wrote:
>>
>> With passive set it will return the queue depth as before?
>
> Yes.
>
> Matthias.
>

From oyvind at tjervaag.com  Sat Jun 19 11:38:50 2010
From: oyvind at tjervaag.com (=?iso-8859-1?Q?=D8yvind_Tjervaag?=)
Date: Sat, 19 Jun 2010 12:38:50 +0200
Subject: [rabbitmq-discuss] Rabbit crash, new persister
In-Reply-To: <AANLkTilitJUHAVmyZ-PykgYfF9rEw42TWB4fKNaJRtGM@mail.gmail.com>
References: <2EE6A869-2315-40DA-8CBD-9890210C6984@tjervaag.com>
	<20100618160154.GJ11857@rabbitmq.com>
	<ADC7E139-DFA9-40B3-8645-6DC92FCCE182@tjervaag.com>
	<AANLkTinJAYPoMWnAUeaWfL_DQeXvoUqjDWoXP0hTuM_7@mail.gmail.com>
	<B6DAAB43-F06F-4BDF-9327-2EC409297422@tjervaag.com>
	<AANLkTilitJUHAVmyZ-PykgYfF9rEw42TWB4fKNaJRtGM@mail.gmail.com>
Message-ID: <504DAA5D-213D-4FB2-9569-6D257072BBF9@tjervaag.com>

Thanks John! I've been looking for more examples of what you can do with the config file.. Is there a definitive list somewhere? I suppose I have to go and dig in the Erlang/OTP docs to find it? Will try out the ones you sent though, can't hurt to squeeze a bit more performance out of my setup.

Don't have any spesific numbers, and it might not be a fair comparison, but so far my bottleneck seems to be WebsphereMQ and not rabbit so far..

I don't have that much more code that what can be found in the examples in the docs. But I don't mind helping out if you hit any problems. Don't know if I would be able to help, but I will try my best ;)

thanks again,
/?yvind

On Jun 18, 2010, at 10:23 PM, John Apps wrote:

> I have been using the Java programs which are available with the kit. .NET is something I have yet to try and really should start.
> One word of warning: since Erlang is 32-bit mode only, you will run out of memory quite quickly with certain tests, leading invariably to a crash. You probably already know this, but in case you did not...
> If you have a handy little .NET example lying around, I would love to give a go. However, I will download the .NET kit and give it a whirl.
> 
> I have the following lines in my rabbitmq.config file:
> 
> [
>         {kernel,
>                 [{inet_dist_listen_min, 65535},
>                  {inet_dist_listen_max, 65535},
>                  {inet_default_listen_options,
>                         [{nodelay,true}, {sndbuf,65535}, {recbuf,65535}]},
>                  {inet_default_connect_options, [{nodelay,true}]}
>                 ]
>         },
>         {os_mon,
>                 [{start_cpu_sup,true},
>                  {start_disksup,false},
>                  {start_memsup, false},
>                  {system_memory_high_watermark, 0.9}
>                 ]
>         },
>         {rabbit, [{vm_memory_high_watermark, 0.4}]},
>         {rabbit, [{memory_alarms, true}]},
>         {mnesia, [{dump_log_write_threshold, 1000}]},
>         {rabbit, []}
> ].
> The important ones are the vm_memory_high_watermark and the memory_alarms true. I have found that using the maximum sndbuf and recbuf give me the best performance on Windows 7 X64.
> 2010/6/18 ?yvind Tjervaag <oyvind at tjervaag.com>
> Ah, neat, wich also remind me I have to start looking into 1.8.0. Are you using the .NET client lib, and did you have to change a lot of you code to get it working?
> 
> /?yvind
> 
> On Jun 18, 2010, at 8:41 PM, John Apps wrote:
> 
> > I define the RABBITMQ_* variables thus:
> >
> > RABBITMQ_BASE=C:\AMQP\RabbitMQ\rabbitmq_server-1.8.0
> > RABBITMQ_CONFIG_FILE=C:\AMQP\RabbitMQ\rabbitmq
> > RABBITMQ_NODENAME=BIGPOOH
> >
> > which leads to log and DB being defined under RABBITMQ_BASE. Good to have as I am running 3 different versions of RabbitMQ right now, 1.7.1, 1.7.2 and 1.8.0. No need, really, it was just so easy to setup.
> 
> 
> 
> 
> -- 
> ---
> John Apps
> (49) 171 869 1813


From oyvind at tjervaag.com  Sat Jun 19 13:59:23 2010
From: oyvind at tjervaag.com (=?iso-8859-1?Q?=D8yvind_Tjervaag?=)
Date: Sat, 19 Jun 2010 14:59:23 +0200
Subject: [rabbitmq-discuss] Rabbit crash, new persister
In-Reply-To: <2B3818E2-5E56-4FCF-82BD-D61226DD4CD2@tjervaag.com>
References: <2EE6A869-2315-40DA-8CBD-9890210C6984@tjervaag.com>
	<20100618160154.GJ11857@rabbitmq.com>
	<ADC7E139-DFA9-40B3-8645-6DC92FCCE182@tjervaag.com>
	<20100618163947.GN11857@rabbitmq.com>
	<2B3818E2-5E56-4FCF-82BD-D61226DD4CD2@tjervaag.com>
Message-ID: <D18B2E7B-7DFA-4823-9F5A-2594EA5165C1@tjervaag.com>


On Jun 18, 2010, at 7:51 PM, ?yvind Tjervaag wrote:

> On Jun 18, 2010, at 6:39 PM, Matthew Sackman wrote:
>> 
>> Hmm, I would certainly try moving it and see if life improves. I've
>> noticed Windows do strange things to files created by Rabbit / Erlang,
>> but then again, I've noticed Windows do strange things.
>> 
>> You should be able to set the environment variable RABBITMQ_MNESIA_BASE
>> to the directory you want to use. When Rabbit starts up, it will display
>> this directory just under the banner so it should be pretty easy to
>> check if it's taken effect.
> 
> Changed the folder to c:\mnesia, but strangely enough rabbit decided it would be better to put it in;
> 
> c:/Program Files/RabbitMQ/rabbitmq_server-1.7.2/sbin/mnesia/rabbit-mnesia
> 
> .. some default value? I don't mind the location as long as it works though! I'm running a test right now to see if I can kill it again. Thanks for the help so far!
> 
> ?yvind

Tested further with the changed folder, and was looking at the contents of the mnesia store folder to see if I could see what was happening. When I start up all my components, rabbit starts creating store files (I publish at times faster than my consumer can get the messages, but in normal operation the consumer should read off all the messages in a timely manner..).

So, rabbit created, and happily deleted 42 store files before it stopped again, without me touching any files/permissions etc. Have attached the rabbit and sasl logs again, but the error is basically the same as before. No access to the file it seems.

Is there anything else I can try? I'm publishing with persistent = true as I can't loose any messages. I also tried without persistance, but the result was the same.

I'm a bit lost now as to what I should try next. Update Erlang/OTP? Change my whole architecture to use immediate messages (this would mean I would have to create my own store at the beginning of my message-chain as my datasource only outputs realtime "now-values")? Write my own persister? (<- yes that was a joke, although I have plans of trying out some Erlang programming at some point....)

Help? :)

/?yvind

-------------- next part --------------
A non-text attachment was scrubbed...
Name: rabbit-sasl.log
Type: application/octet-stream
Size: 5370 bytes
Desc: not available
URL: <http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20100619/39dafdb1/attachment-0002.obj>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: rabbit.log
Type: application/octet-stream
Size: 24109 bytes
Desc: not available
URL: <http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20100619/39dafdb1/attachment-0003.obj>

From alexis at rabbitmq.com  Sat Jun 19 16:45:14 2010
From: alexis at rabbitmq.com (Alexis Richardson)
Date: Sat, 19 Jun 2010 16:45:14 +0100
Subject: [rabbitmq-discuss] resources for designing messaging systems
In-Reply-To: <521f7849-1d4f-4f45-bb14-6fcce12b46d2@w12g2000yqj.googlegroups.com>
References: <205cdab3-6363-4097-9b16-5921216001fc@d8g2000yqf.googlegroups.com>
	<AANLkTilDiDzSpR-RhKOR0u2mv9Ecit1nia3IQZzYpqoY@mail.gmail.com>
	<8b952eea-c55b-4a24-a035-f899a7cf9b0f@5g2000yqz.googlegroups.com>
	<4C19FD95.9020006@rabbitmq.com>
	<521f7849-1d4f-4f45-bb14-6fcce12b46d2@w12g2000yqj.googlegroups.com>
Message-ID: <AANLkTinOzmf76tUAI4yEkXaUf-hM-dqCetpQHxZh8_YA@mail.gmail.com>

Shane

On Thu, Jun 17, 2010 at 6:29 PM, Shane <shane at digitalsanctum.com> wrote:
> Matthias,
>
> No one on my team is familiar with Python (we're a Ruby/Java shop), so
> Celery doesn't seem like a good fit.

You could try using its HTTP interface..


> Since I initially asked the
> question, I've found some additional resources that have helped me
> including the "Enterprise Integration Patterns" book and the examples
> in the Java client library. The book does a good job of describing the
> theory of messaging solutions

Hohpe's book is good.

Does this help? http://hg.rabbitmq.com/rabbitmq-java-messagepatterns/

> but I'm still looking for some real-
> world RabbitMQ implementations.
> Is there a list somewhere of open source projects that use RabbitMQ?

http://delicious.com/alexisrichardson/rabbitmq+code

It's a few months out of date...

There are lots of things out there.  Your best bet is to describe what
you are doing in detail on this list I think...

alexis




>
> Thanks,
> Shane
>
> On Jun 17, 6:48?am, Matthias Radestock <matth... at rabbitmq.com> wrote:
>> Shane,
>>
>> On 10/06/10 15:41, Shane wrote:
>>
>> > I guess what I'm looking for are code examples for complete apps so I
>> > can get a better idea of the best way to apply exchanges/queues.
>>
>> > I'm working to port a legacy system of batches to use RabbitMQ. The
>> > batches run in a continuous loop and use a database as a state machine
>> > to determine what jobs to run and which data to use. There are
>> > dependencies between some of the batches (one cannot run until one or
>> > more others complete).
>>
>> Have you looked at celery (http://celeryproject.org/)?Not only is it an
>> example of a complete rabbit app, it also is in a domain similar to what
>> you are trying to accomplish.
>>
>> Regards,
>>
>> Matthias.
>> _______________________________________________
>> rabbitmq-discuss mailing list
>> rabbitmq-disc... at lists.rabbitmq.comhttp://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss
> _______________________________________________
> rabbitmq-discuss mailing list
> rabbitmq-discuss at lists.rabbitmq.com
> http://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss
>

From markfisher at vmware.com  Sat Jun 19 17:00:25 2010
From: markfisher at vmware.com (Mark Fisher)
Date: Sat, 19 Jun 2010 09:00:25 -0700
Subject: [rabbitmq-discuss] resources for designing messaging systems
In-Reply-To: <AANLkTinOzmf76tUAI4yEkXaUf-hM-dqCetpQHxZh8_YA@mail.gmail.com>
References: <205cdab3-6363-4097-9b16-5921216001fc@d8g2000yqf.googlegroups.com>
	<AANLkTilDiDzSpR-RhKOR0u2mv9Ecit1nia3IQZzYpqoY@mail.gmail.com>
	<8b952eea-c55b-4a24-a035-f899a7cf9b0f@5g2000yqz.googlegroups.com>
	<4C19FD95.9020006@rabbitmq.com>
	<521f7849-1d4f-4f45-bb14-6fcce12b46d2@w12g2000yqj.googlegroups.com>
	<AANLkTinOzmf76tUAI4yEkXaUf-hM-dqCetpQHxZh8_YA@mail.gmail.com>
Message-ID: <065FD127-A940-439D-BF3C-0EE99E3E6060@vmware.com>

Shane,

For EIP, if you're a Spring user, you might want to check out: http://springsource.org/spring-integration 
  - we'll be adding AMQP Channel Adapters along with the upcoming  
Spring/AMQP/RabbitMQ project.

-Mark

Sent from my iPhone

On Jun 19, 2010, at 11:46 AM, "Alexis Richardson"  
<alexis at rabbitmq.com> wrote:

> Shane
>
> On Thu, Jun 17, 2010 at 6:29 PM, Shane <shane at digitalsanctum.com>  
> wrote:
>> Matthias,
>>
>> No one on my team is familiar with Python (we're a Ruby/Java shop),  
>> so
>> Celery doesn't seem like a good fit.
>
> You could try using its HTTP interface..
>
>
>> Since I initially asked the
>> question, I've found some additional resources that have helped me
>> including the "Enterprise Integration Patterns" book and the examples
>> in the Java client library. The book does a good job of describing  
>> the
>> theory of messaging solutions
>
> Hohpe's book is good.
>
> Does this help? http://hg.rabbitmq.com/rabbitmq-java-messagepatterns/
>
>> but I'm still looking for some real-
>> world RabbitMQ implementations.
>> Is there a list somewhere of open source projects that use RabbitMQ?
>
> http://delicious.com/alexisrichardson/rabbitmq+code
>
> It's a few months out of date...
>
> There are lots of things out there.  Your best bet is to describe what
> you are doing in detail on this list I think...
>
> alexis
>
>
>
>
>>
>> Thanks,
>> Shane
>>
>> On Jun 17, 6:48 am, Matthias Radestock <matth... at rabbitmq.com> wrote:
>>> Shane,
>>>
>>> On 10/06/10 15:41, Shane wrote:
>>>
>>>> I guess what I'm looking for are code examples for complete apps  
>>>> so I
>>>> can get a better idea of the best way to apply exchanges/queues.
>>>
>>>> I'm working to port a legacy system of batches to use RabbitMQ. The
>>>> batches run in a continuous loop and use a database as a state  
>>>> machine
>>>> to determine what jobs to run and which data to use. There are
>>>> dependencies between some of the batches (one cannot run until  
>>>> one or
>>>> more others complete).
>>>
>>> Have you looked at celery (http://celeryproject.org/)?Not only is  
>>> it an
>>> example of a complete rabbit app, it also is in a domain similar  
>>> to what
>>> you are trying to accomplish.
>>>
>>> Regards,
>>>
>>> Matthias.
>>> _______________________________________________
>>> rabbitmq-discuss mailing list
>>> rabbitmq-disc... at lists.rabbitmq.comhttp://lists.rabbitmq.com/cgi- 
>>> bin/mailman/listinfo/rabbitmq-discuss
>> _______________________________________________
>> rabbitmq-discuss mailing list
>> rabbitmq-discuss at lists.rabbitmq.com
>> http://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss
>>
> _______________________________________________
> rabbitmq-discuss mailing list
> rabbitmq-discuss at lists.rabbitmq.com
> http://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss

From matthew at rabbitmq.com  Sat Jun 19 17:00:47 2010
From: matthew at rabbitmq.com (Matthew Sackman)
Date: Sat, 19 Jun 2010 17:00:47 +0100
Subject: [rabbitmq-discuss] Rabbit crash, new persister
In-Reply-To: <D18B2E7B-7DFA-4823-9F5A-2594EA5165C1@tjervaag.com>
References: <2EE6A869-2315-40DA-8CBD-9890210C6984@tjervaag.com>
	<20100618160154.GJ11857@rabbitmq.com>
	<ADC7E139-DFA9-40B3-8645-6DC92FCCE182@tjervaag.com>
	<20100618163947.GN11857@rabbitmq.com>
	<2B3818E2-5E56-4FCF-82BD-D61226DD4CD2@tjervaag.com>
	<D18B2E7B-7DFA-4823-9F5A-2594EA5165C1@tjervaag.com>
Message-ID: <20100619160046.GB31345@rabbitmq.com>

Hi ?yvind,

On Sat, Jun 19, 2010 at 02:59:23PM +0200, ?yvind Tjervaag wrote:
> Tested further with the changed folder, and was looking at the
> contents of the mnesia store folder to see if I could see what was
> happening. When I start up all my components, rabbit starts creating
> store files (I publish at times faster than my consumer can get the
> messages, but in normal operation the consumer should read off all the
> messages in a timely manner..).

Good, yes that's how it should all be working.

> So, rabbit created, and happily deleted 42 store files before it
> stopped again, without me touching any files/permissions etc. Have
> attached the rabbit and sasl logs again, but the error is basically
> the same as before. No access to the file it seems.

This is bizarre and very strange. However, it seems similar to some
other weird reports of file handling in Erlang under Windows, for
example, http://www.erlang.org/cgi-bin/ezmlm-cgi/2/679

We have in the past seen strange things going on with windows firewalls
and such like. It's not beyond the realms of possibility that it's some
virus scanner which is trying to scan the file at the same time as
Rabbit's trying to delete it. Maybe try to see if you could turn any
such things off?

Also, in the recently released Erlang R14A, there are some comments in
the release notes about changes regarding file handling under Windows.
You might like to try that, though note that R14A is, as the name
suggests, an alpha release.

Or, the somewhat easier way out, would be to not run it under Windows!

Matthew

From oyvind at tjervaag.com  Sat Jun 19 20:46:37 2010
From: oyvind at tjervaag.com (=?iso-8859-1?Q?=D8yvind_Tjervaag?=)
Date: Sat, 19 Jun 2010 21:46:37 +0200
Subject: [rabbitmq-discuss] Rabbit crash, new persister
In-Reply-To: <20100619160046.GB31345@rabbitmq.com>
References: <2EE6A869-2315-40DA-8CBD-9890210C6984@tjervaag.com>
	<20100618160154.GJ11857@rabbitmq.com>
	<ADC7E139-DFA9-40B3-8645-6DC92FCCE182@tjervaag.com>
	<20100618163947.GN11857@rabbitmq.com>
	<2B3818E2-5E56-4FCF-82BD-D61226DD4CD2@tjervaag.com>
	<D18B2E7B-7DFA-4823-9F5A-2594EA5165C1@tjervaag.com>
	<20100619160046.GB31345@rabbitmq.com>
Message-ID: <05B62F3F-E2D2-4393-B3A7-B6C83F41517B@tjervaag.com>

On Jun 19, 2010, at 6:00 PM, Matthew Sackman wrote:
>> So, rabbit created, and happily deleted 42 store files before it
>> stopped again, without me touching any files/permissions etc. Have
>> attached the rabbit and sasl logs again, but the error is basically
>> the same as before. No access to the file it seems.
> 
> This is bizarre and very strange. However, it seems similar to some
> other weird reports of file handling in Erlang under Windows, for
> example, http://www.erlang.org/cgi-bin/ezmlm-cgi/2/679

Ah, Yes, that looks familiar. I got as far as finding the file delete in RabbitMQs source but quickly had to give up on trying to modify it to check the return value as one guy suggested in your link. Would definitely like to get some Erlang practice now ;)

> 
> We have in the past seen strange things going on with windows firewalls
> and such like. It's not beyond the realms of possibility that it's some
> virus scanner which is trying to scan the file at the same time as
> Rabbit's trying to delete it. Maybe try to see if you could turn any
> such things off?

No virus scanners installed, but have not fiddled with the firewall so far. 

> 
> Also, in the recently released Erlang R14A, there are some comments in
> the release notes about changes regarding file handling under Windows.
> You might like to try that, though note that R14A is, as the name
> suggests, an alpha release.

Understood ;) Am seeing the windows file comment in the release notes for R14A, so Alpha or not, I'm giving that a try. Installed, an so far Rabbit has gone trough and deleted about 100 store files without stopping. Crossing my fingers :)

> 
> Or, the somewhat easier way out, would be to not run it under Windows!

Now, that would be the waaaay to easy way out of it :P Client requirement is Windows though, so not much I can do about that right now. If I had a choice though; yes, this would be running on a linux box ;)

Thanks again!
/?yvind


From pdezwart at rubiconproject.com  Sun Jun 20 03:57:40 2010
From: pdezwart at rubiconproject.com (Pieter de Zwart)
Date: Sat, 19 Jun 2010 19:57:40 -0700
Subject: [rabbitmq-discuss] FW: [PECL-DEV] [ANNOUNCEMENT] amqp-0.1.0 (beta)
	Released.
In-Reply-To: <20100620024339.93443.qmail@pb12.pair.com>
Message-ID: <C842D1B4.C3FC%pdezwart@rubiconproject.com>

Hey everyone,

I thought I should share this milestone with everyone. I just tagged the
first official PECL release of the AMQP client.
Of course, none of this would be possible without Alex Kalendarev, who wrote
the original version.

Pieter


------ Forwarded Message
From: PECL Announce <pecl-dev at lists.php.net>
Date: 20 Jun 2010 02:43:39 -0000
To: PECL developers list <pecl-dev at lists.php.net>
Subject: [PECL-DEV] [ANNOUNCEMENT] amqp-0.1.0 (beta) Released.

The new PECL package amqp-0.1.0 (beta) has been released at
http://pecl.php.net/.

Release notes
-------------
- Initial release

Package Info
-------------
This extension can communicate with any AMQP spec 0-9-1 compatible server,
such as RabbitMQ, OpenAMQP and Qpid, giving you the ability to create and
delete exchanges and queues, as well as publish to any exchange and consume
from any queue.

Related Links
-------------
Package home: http://pecl.php.net/package/amqp
   Changelog: http://pecl.php.net/package-changelog.php?package=amqp
    Download: http://pecl.php.net/get/amqp-0.1.0.tgz

Authors
-------------
Pieter de Zwart (lead)


-- 
PECL development discussion Mailing List (http://pecl.php.net/)
To unsubscribe, visit: http://www.php.net/unsub.php


------ End of Forwarded Message


From johndapps at gmail.com  Sun Jun 20 14:58:55 2010
From: johndapps at gmail.com (John Apps)
Date: Sun, 20 Jun 2010 15:58:55 +0200
Subject: [rabbitmq-discuss] Rabbit crash, new persister
In-Reply-To: <20100619160046.GB31345@rabbitmq.com>
References: <2EE6A869-2315-40DA-8CBD-9890210C6984@tjervaag.com>
	<20100618160154.GJ11857@rabbitmq.com>
	<ADC7E139-DFA9-40B3-8645-6DC92FCCE182@tjervaag.com>
	<20100618163947.GN11857@rabbitmq.com>
	<2B3818E2-5E56-4FCF-82BD-D61226DD4CD2@tjervaag.com>
	<D18B2E7B-7DFA-4823-9F5A-2594EA5165C1@tjervaag.com>
	<20100619160046.GB31345@rabbitmq.com>
Message-ID: <AANLkTind6IVL0nk4QbZPfGul84VrOQhUhl9j-NegPuWQ@mail.gmail.com>

This is a bit off the original topic, but I felt that, once again,
<Begin of Soapbox>

I have to ask what the rather strange approach to Windows is with the
RabbitMQ folks?

Bashing Windows might be a great hobby, not terribly helpful though.

I understand that RabbitMQ and others are awaiting Erlang support for X64
Windows, but to belittle the probably largest market you will find, and one
that is very stable now with Windows Server 2008 and 7, I do wonder what the
whole point is.

Why not come out with an explicit statement that RabbitMQ is simply NOT
supported on Windows? Make it clear from the beginning rather than writing
somewhat devious entries in discussion lists?

<End of soapbox>
On Sat, Jun 19, 2010 at 18:00, Matthew Sackman <matthew at rabbitmq.com> wrote:

> Hi ?yvind,
>
> On Sat, Jun 19, 2010 at 02:59:23PM +0200, ?yvind Tjervaag wrote:
> > Tested further with the changed folder, and was looking at the
> > contents of the mnesia store folder to see if I could see what was
> > happening. When I start up all my components, rabbit starts creating
> > store files (I publish at times faster than my consumer can get the
> > messages, but in normal operation the consumer should read off all the
> > messages in a timely manner..).
>
> Good, yes that's how it should all be working.
>
> > So, rabbit created, and happily deleted 42 store files before it
> > stopped again, without me touching any files/permissions etc. Have
> > attached the rabbit and sasl logs again, but the error is basically
> > the same as before. No access to the file it seems.
>
> This is bizarre and very strange. However, it seems similar to some
> other weird reports of file handling in Erlang under Windows, for
> example, http://www.erlang.org/cgi-bin/ezmlm-cgi/2/679
>
> We have in the past seen strange things going on with windows firewalls
> and such like. It's not beyond the realms of possibility that it's some
> virus scanner which is trying to scan the file at the same time as
> Rabbit's trying to delete it. Maybe try to see if you could turn any
> such things off?
>
> Also, in the recently released Erlang R14A, there are some comments in
> the release notes about changes regarding file handling under Windows.
> You might like to try that, though note that R14A is, as the name
> suggests, an alpha release.
>
> Or, the somewhat easier way out, would be to not run it under Windows!
>
> Matthew
> _______________________________________________
> rabbitmq-discuss mailing list
> rabbitmq-discuss at lists.rabbitmq.com
> http://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss
>



-- 
---
John Apps
(49) 171 869 1813
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20100620/5aac678a/attachment.htm>

From tonyg at lshift.net  Mon Jun 21 01:22:33 2010
From: tonyg at lshift.net (Tony Garnock-Jones)
Date: Mon, 21 Jun 2010 12:22:33 +1200
Subject: [rabbitmq-discuss] Claim on new ocamlmq broker...
In-Reply-To: <20100615100717.GE16440@rabbitmq.com>
References: <AANLkTilCT0pduKkyNXjIbBa_B5B0leh36_ukF0vAFAwy@mail.gmail.com>	<AANLkTinpHKx49ubtLpNcGWP5hAuPy0ypRmqVq3XUhBu9@mail.gmail.com>	<28885584.post@talk.nabble.com>	<20100614231848.GB13068@wellquite.org>	<28885806.post@talk.nabble.com>
	<20100615100717.GE16440@rabbitmq.com>
Message-ID: <4C1EB0C9.50305@lshift.net>

Matthew Sackman wrote:
> - our STOMP adapter was written by TonyG and is largely unloved.

I dunno, I love it a little :-)

Questions and bug reports are welcome, in particular, and we have had an OK
track record on responding to them in the past, even though the STOMP adapter
isn't "officially supported".

> If STOMP does give publisher acks, then it's possible that the adapter is 
> not using AMQP transactions, and thus the publisher ack does not indicate
> any sort of reliability concerns.

It gives optional "receipts" for messages. You're right, the STOMP adapter is
not using the underlying AMQP transaction mechanism, and therefore STOMP's
transactions don't force an fsync. This is arguably a bug, but the difference
between STOMP's transaction semantics and AMQP's transaction semantics is
difficult to bridge in the adapter without support from the core code. STOMP
supports multiple outstanding transactions on a single channel-like object,
unlike AMQP.

> That said, I was also under the impression that STOMP quite deliberately has
> no semantics whatsoever - if this is the case then it would seem to be
> completely legitimate to issue the publisher ACK without using a
> transaction.

Exactly right :-)

To sum up: the STOMP adapter covers a broad range of messaging, but by no means
as broad a range as the core AMQP adapter can cover. It's good for using to
bridge to systems that don't have an AMQP client library yet, and for
connecting to certain legacy applications, but where you have the choice, the
built-in AMQP adapter is far better because it is

 - officially supported,
 - well-defined in its behaviour (by the AMQP spec), and
 - actively developed and tuned,

none of which can be said about the STOMP adapter.

Tony

From lists at zopyx.com  Mon Jun 21 09:10:47 2010
From: lists at zopyx.com (Andreas Jung)
Date: Mon, 21 Jun 2010 10:10:47 +0200
Subject: [rabbitmq-discuss] Debugging clustering issues
Message-ID: <AANLkTinkDBAT07aEn_xBgX0fWGZKHDAiMvSBYqcL-RHC@mail.gmail.com>

Hi,

I have setup two RabbitMQ servers on two different machines (192.168..0.33 +
192.168.0.103, both running on the same port, no firewall in between) -
both running V 1.8.0 and configured to use the same Erlang cookie.

I followed:

http://www.rabbitmq.com/clustering.html#creating


ajung at blackmoon:~/sandboxes/occ> bin/rabbitmqctl stop_app
Stopping node rabbit at blackmoon ...
...done.
ajung at blackmoon:~/sandboxes/occ> bin/rabbitmqctl reset
Resetting node rabbit at blackmoon ...
...done.
ajung at blackmoon:~/sandboxes/occ> bin/rabbitmqctl cluster
rabbit at 192.168.0.103
Clustering node rabbit at blackmoon with ['rabbit at 192.168.0.103'] ...
...done.
ajung at blackmoon:~/sandboxes/occ> bin/rabbitmqctl start_app
Starting node rabbit at blackmoon ...
...done.
ajung at blackmoon:~/sandboxes/occ> bin/rabbitmqctl status
Status of node rabbit at blackmoon ...
[{running_applications,[{rabbit,"RabbitMQ","1.8.0"},
                        {mnesia,"MNESIA  CXC 138 12","4.4.10"},
                        {os_mon,"CPO  CXC 138 46","2.2.2"},
                        {sasl,"SASL  CXC 138 11","2.1.6"},
                        {stdlib,"ERTS  CXC 138 10","1.16.2"},
                        {kernel,"ERTS  CXC 138 10","2.13.2"}]},
 {nodes,[rabbit at blackmoon]},
 {running_nodes,[rabbit at blackmoon]}]
...done.

So the node running on 192.168.0.103 is _not_ part of the cluster as
'status' shows.
How can I track this down?

Andreas
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20100621/63abbe55/attachment.htm>

From matthias at rabbitmq.com  Mon Jun 21 10:15:04 2010
From: matthias at rabbitmq.com (Matthias Radestock)
Date: Mon, 21 Jun 2010 10:15:04 +0100
Subject: [rabbitmq-discuss] Debugging clustering issues
In-Reply-To: <AANLkTinkDBAT07aEn_xBgX0fWGZKHDAiMvSBYqcL-RHC@mail.gmail.com>
References: <AANLkTinkDBAT07aEn_xBgX0fWGZKHDAiMvSBYqcL-RHC@mail.gmail.com>
Message-ID: <4C1F2D98.1070908@rabbitmq.com>

Andreas,

On 21/06/10 09:10, Andreas Jung wrote:
> ajung at blackmoon:~/sandboxes/occ> bin/rabbitmqctl stop_app
> Stopping node rabbit at blackmoon ...
> ...done.
> ajung at blackmoon:~/sandboxes/occ> bin/rabbitmqctl reset
> Resetting node rabbit at blackmoon ...
> ...done.
> ajung at blackmoon:~/sandboxes/occ> bin/rabbitmqctl cluster
> rabbit at 192.168.0.103 <mailto:rabbit at 192.168.0.103>
> Clustering node rabbit at blackmoon with ['rabbit at 192.168.0.103'] ...
> ...done.
> ajung at blackmoon:~/sandboxes/occ> bin/rabbitmqctl start_app
> Starting node rabbit at blackmoon ...
> ...done.
> ajung at blackmoon:~/sandboxes/occ> bin/rabbitmqctl status
> Status of node rabbit at blackmoon ...
> [{running_applications,[{rabbit,"RabbitMQ","1.8.0"},
>                          {mnesia,"MNESIA  CXC 138 12","4.4.10"},
>                          {os_mon,"CPO  CXC 138 46","2.2.2"},
>                          {sasl,"SASL  CXC 138 11","2.1.6"},
>                          {stdlib,"ERTS  CXC 138 10","1.16.2"},
>                          {kernel,"ERTS  CXC 138 10","2.13.2"}]},
>   {nodes,[rabbit at blackmoon]},
>   {running_nodes,[rabbit at blackmoon]}]
> ...done.
>
> So the node running on 192.168.0.103 is _not_ part of the cluster as
> 'status' shows.
> How can I track this down?

I suspect the problem is that the way you refer to the other node - by 
its IP address - is not the way the node refers to itself. E.g. if the 
other node thinks it's 'rabbit at whitemoon' then that is what you must put 
in the 'cluster' command.


Regards,

Matthias.

From lists at zopyx.com  Mon Jun 21 10:26:26 2010
From: lists at zopyx.com (Andreas Jung)
Date: Mon, 21 Jun 2010 11:26:26 +0200
Subject: [rabbitmq-discuss] Debugging clustering issues
In-Reply-To: <4C1F2D98.1070908@rabbitmq.com>
References: <AANLkTinkDBAT07aEn_xBgX0fWGZKHDAiMvSBYqcL-RHC@mail.gmail.com>
	<4C1F2D98.1070908@rabbitmq.com>
Message-ID: <4C1F3042.9020101@zopyx.com>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

Matthias Radestock wrote:
> Andreas,
> 
> On 21/06/10 09:10, Andreas Jung wrote:
>> ajung at blackmoon:~/sandboxes/occ> bin/rabbitmqctl stop_app
>> Stopping node rabbit at blackmoon ...
>> ...done.
>> ajung at blackmoon:~/sandboxes/occ> bin/rabbitmqctl reset
>> Resetting node rabbit at blackmoon ...
>> ...done.
>> ajung at blackmoon:~/sandboxes/occ> bin/rabbitmqctl cluster
>> rabbit at 192.168.0.103 <mailto:rabbit at 192.168.0.103>
>> Clustering node rabbit at blackmoon with ['rabbit at 192.168.0.103'] ...
>> ...done.
>> ajung at blackmoon:~/sandboxes/occ> bin/rabbitmqctl start_app
>> Starting node rabbit at blackmoon ...
>> ...done.
>> ajung at blackmoon:~/sandboxes/occ> bin/rabbitmqctl status
>> Status of node rabbit at blackmoon ...
>> [{running_applications,[{rabbit,"RabbitMQ","1.8.0"},
>>                          {mnesia,"MNESIA  CXC 138 12","4.4.10"},
>>                          {os_mon,"CPO  CXC 138 46","2.2.2"},
>>                          {sasl,"SASL  CXC 138 11","2.1.6"},
>>                          {stdlib,"ERTS  CXC 138 10","1.16.2"},
>>                          {kernel,"ERTS  CXC 138 10","2.13.2"}]},
>>   {nodes,[rabbit at blackmoon]},
>>   {running_nodes,[rabbit at blackmoon]}]
>> ...done.
>>
>> So the node running on 192.168.0.103 is _not_ part of the cluster as
>> 'status' shows.
>> How can I track this down?
> 
> I suspect the problem is that the way you refer to the other node - by
> its IP address - is not the way the node refers to itself. E.g. if the
> other node thinks it's 'rabbit at whitemoon' then that is what you must put
> in the 'cluster' command.

Ok. Since there is no DNS available on the network: 'blackmoon' must
have a local entry of the IP of 'whitemoon' in its local /etc/hosts file?

Why is there no further error message about the problem - either during
the  bin/rabbitmqctl cluster call or the following 'start_app' call?
This is kind of misleading...

Andreas
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.4.10 (Darwin)
Comment: Using GnuPG with Mozilla - http://enigmail.mozdev.org/

iEYEARECAAYFAkwfMEIACgkQCJIWIbr9KYx3qgCfc1TDkX98hIpJyplWzZ+QZLTD
SFEAoIY4Oo9MnLUc0m0H+XpG38ufB7yn
=FjMl
-----END PGP SIGNATURE-----
-------------- next part --------------
A non-text attachment was scrubbed...
Name: lists.vcf
Type: text/x-vcard
Size: 316 bytes
Desc: not available
URL: <http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20100621/89d7fddf/attachment-0001.vcf>

From german.latorre at twindocs.com  Mon Jun 21 07:54:40 2010
From: german.latorre at twindocs.com (=?ISO-8859-1?Q?Germ=E1n_Latorre?=)
Date: Mon, 21 Jun 2010 08:54:40 +0200
Subject: [rabbitmq-discuss] Wrong behaviour with large memory amounts in
	Windows
In-Reply-To: <20100618135831.GG11857@rabbitmq.com>
References: <4C1B68EB.8090403@twindocs.com>
	<20100618125313.GD11857@rabbitmq.com>
	<4C1B6E82.3010305@twindocs.com>
	<20100618133159.GF11857@rabbitmq.com>
	<20100618135831.GG11857@rabbitmq.com>
Message-ID: <4C1F0CB0.9020800@twindocs.com>

Hello Mathew,

It's true that our Erlang version is not the last one... It's R12B.  
We'll try with its latest stable release.

And yes, I think we'll run it under Linux in our live environment.  
We'll try with new persister branch too.

Thank you very much for your help.

Regards,

Germ?n Latorre.

El 18/06/2010 15:58, Matthew Sackman escribi?:
> Germ?n,
>
> On Fri, Jun 18, 2010 at 02:32:00PM +0100, Matthew Sackman wrote:
>    
>> On Fri, Jun 18, 2010 at 03:02:58PM +0200, Germ?n Latorre wrote:
>>      
>>> Here is the log with vm_memory_high_watermark set to 2:
>>>
>>> =WARNING REPORT==== 14-Jun-2010::15:57:40 ===
>>> Unknown total memory size for your OS {win32,nt}. Assuming memory
>>> size is 1024MB.
>>>        
>> That entry shouldn't occur - it should be happy to detect 32-bit
>> windows. This suggests you're running a version of Rabbit older than
>> 1.7.2. I would suggest upgrading if you can.
>>      
> Actually, I've just reread that area of the code. Even with the latest
> Rabbit, that can still happen if your version of Erlang is sufficiently
> old. You'd need to be using at least Erlang R13B for that problem to be
> solved, and generally we'd recommend the latest stable Erlang release
> (R13B04 is currently it). That at least would fix the erroneous memory
> detection under Windows, but if you're able to use a Linux instead, it
> rather renders the point moot.
>
> Matthew
>    


-- 
Germ?n Latorre Ant?n
Principal Software Engineer
TwinDocs - https://www.twindocs.com
(+34) 902 523 232


From matthias at rabbitmq.com  Mon Jun 21 10:37:17 2010
From: matthias at rabbitmq.com (Matthias Radestock)
Date: Mon, 21 Jun 2010 10:37:17 +0100
Subject: [rabbitmq-discuss] Debugging clustering issues
In-Reply-To: <4C1F3042.9020101@zopyx.com>
References: <AANLkTinkDBAT07aEn_xBgX0fWGZKHDAiMvSBYqcL-RHC@mail.gmail.com>
	<4C1F2D98.1070908@rabbitmq.com> <4C1F3042.9020101@zopyx.com>
Message-ID: <4C1F32CD.9050506@rabbitmq.com>

Andreas,

On 21/06/10 10:26, Andreas Jung wrote:
> Since there is no DNS available on the network: 'blackmoon' must
> have a local entry of the IP of 'whitemoon' in its local /etc/hosts file?

Correct. And vice versa.

> Why is there no further error message about the problem - either during
> the  bin/rabbitmqctl cluster call or the following 'start_app' call?
> This is kind of misleading...

It's one of the mysteries of mnesia. I've filed a bug to look into this, 
but don't hold your breath.


Matthias.

From vertolet666 at yandex.ru  Mon Jun 21 11:43:14 2010
From: vertolet666 at yandex.ru (DOBRO)
Date: Mon, 21 Jun 2010 03:43:14 -0700 (PDT)
Subject: [rabbitmq-discuss] Can't build rabbitmq-1.8.0... beam files are not
 generated.
Message-ID: <28947017.post@talk.nabble.com>


Hi!

I've downloaded rabbitmq-server-1.8.0.tar.gz but can't build it.
Let me tell you what I exactly do.

# tar zxvf rabbitmq-server-1.8.0.tar.gz
# cd rabbitmq-server-1.8.0
# make

After invoking "make" there are a lot of strings with the same info:

erlc -I include -o ebin -Wall -v +debug_info -Duse_specs -pa ebin
erlc -I include -o ebin -Wall -v +debug_info -Duse_specs -pa ebin
erlc -I include -o ebin -Wall -v +debug_info -Duse_specs -pa ebin
erlc -I include -o ebin -Wall -v +debug_info -Duse_specs -pa ebin
erlc -I include -o ebin -Wall -v +debug_info -Duse_specs -pa ebin
.................
escript generate_app ebin ebin/rabbit.app < ebin/rabbit_app.in

When it is done, there are no *.beam files in ./ebin directory.

Thanks.

-- 
View this message in context: http://old.nabble.com/Can%27t-build-rabbitmq-1.8.0...-beam-files-are-not-generated.-tp28947017p28947017.html
Sent from the RabbitMQ mailing list archive at Nabble.com.


From matthew at rabbitmq.com  Mon Jun 21 11:43:52 2010
From: matthew at rabbitmq.com (Matthew Sackman)
Date: Mon, 21 Jun 2010 11:43:52 +0100
Subject: [rabbitmq-discuss] Rabbit crash, new persister
In-Reply-To: <AANLkTind6IVL0nk4QbZPfGul84VrOQhUhl9j-NegPuWQ@mail.gmail.com>
References: <2EE6A869-2315-40DA-8CBD-9890210C6984@tjervaag.com>
	<20100618160154.GJ11857@rabbitmq.com>
	<ADC7E139-DFA9-40B3-8645-6DC92FCCE182@tjervaag.com>
	<20100618163947.GN11857@rabbitmq.com>
	<2B3818E2-5E56-4FCF-82BD-D61226DD4CD2@tjervaag.com>
	<D18B2E7B-7DFA-4823-9F5A-2594EA5165C1@tjervaag.com>
	<20100619160046.GB31345@rabbitmq.com>
	<AANLkTind6IVL0nk4QbZPfGul84VrOQhUhl9j-NegPuWQ@mail.gmail.com>
Message-ID: <20100621104352.GD14541@rabbitmq.com>

John,

On Sun, Jun 20, 2010 at 03:58:55PM +0200, John Apps wrote:
> <Begin of Soapbox>
> I have to ask what the rather strange approach to Windows is with the
> RabbitMQ folks?
> 
> Bashing Windows might be a great hobby, not terribly helpful though.

There is actually very little bashing going on, IMO.

1. No one at RabbitMQ uses Windows as their main development environment
because we tend to find it unpleasant.

2. One of the reasons it's unpleasant is that it seems to be full of
surprises - we're not making it up when we say that we have seen issues
with firewalls stopping AMQP clients from working *only* when XML is
being sent across the network. Not even Ubuntu contains such
"functionality" (see, I can bash Ubuntu too).

3. We *do* support Windows. If we didn't, we wouldn't have bothered
investing so much time in the various bat scripts that there are, and we
do test under Windows. However, it is, I'm sure very obviously the case,
that we do not test as thoroughly under Windows. For example, I suspect
this is the first time that the new persister is being tested in anger
under Windows. If we didn't support Windows, then we also wouldn't have
done the 1.7.2 release, which was almost entirely made up of fixes for
Windows. We do take Windows support seriously and have invested a lot of
time in trying to make it less painful for Windows users. If you have
specific suggestions as to where we could do more, we'd be happy to hear
them.

4. To date, and we recognise this may change, not many people have
complained about the status of our Windows support. I'm yet to hear of
anyone talking about Windows in the cloud (presumably because if you
added a window to a cloud, you'd let the rain out). I'm quite sure
Windows will continue to survive as a desktop OS, but *personally* I
would estimate that under 10% of our users are using Windows on servers.
Now sure, you could argue that's *because* of the status of Rabbit on
Windows - it could well be a chicken and egg situation. On the other
hand, if it really was that bad, I would have thought we'd have received
a lot more complaints.

> I understand that RabbitMQ and others are awaiting Erlang support for X64
> Windows, but to belittle the probably largest market you will find, and one
> that is very stable now with Windows Server 2008 and 7, I do wonder what the
> whole point is.

About 3 years ago, a couple of users were confused because Windows
seemed to be running Rabbit *much* faster than under Linux, particularly
with persistent messages in transactions. I spent about half a day
tracing fsync calls all through the Erlang VM to eventually find that,
under Windows, it was implemented as "return 1;". The Erlang developers
themselves very much treat Windows as a second class citizen. Now the
situation has improved somewhat since then, but there are still cases
where bugs likely exist under Windows in Erlang because Erlang
developers tend to assume Unix or Linux-ish behaviour. For example,
deleting mmap'd files is quite different under Linux and Windows, and it
would appear that Erlang with R14A is only now starting to try to ensure
file operations are the same under Linux and Windows.

The absence of a 64-bit Erlang under Windows is a *massive* issue for
us, but not one that we're in a position to do anything about. To a
certain extent, the new persister will alleviate the problem somewhat,
but really, without a 64-bit Erlang, RabbitMQ is unsuitable for *heavy*
workloads under Windows without some careful planning. That said, we do
have (some very large) customers using Rabbit under Windows without any
problem, in mission critical settings. It is not an issue *provided*
that you use Rabbit for routing rather than store-and-forward - i.e. try
to design your architecture so that the queues stay short. But this
advice applies not just to Windows - you will always get better
performance out of Rabbit if you, by design, avoid your queues becoming
very long.

The issue that ?yvind has identified *probably* exists with all previous
versions of Rabbit as I see no reason why it doesn't affect mnesia.
However, it could have something to do with multiple threads accessing
the same file, one as a reader and one as a writer, and then the writer
closing and deleting the file before the reader's closed it. We do this
in the new persister and it works fine under Linux. We have no idea
whether it could be a problem under Windows.

Currently we are a team of 7 developers. We have a roadmap that
stretches at least 3 years with the current head count. We are not in a
position to start tearing out and replacing large parts of the Erlang VM
or to try and understand every subtlety of developing to a closed
platform. Thus we rely on the API provided by the Erlang libraries and
the environment provided by the Erlang VM. When we come across bugs, we
report them to the Erlang developers - I have reported several bugs,
mainly regarding issues with the SSL modules, but beyond reporting bugs,
and the occasional patch, there's not a great deal more we can do.

> Why not come out with an explicit statement that RabbitMQ is simply NOT
> supported on Windows?

Because that's not the case. Please explain why you think this is the
case, and what we should be doing to convince you this isn't the case.

> Make it clear from the beginning rather than writing
> somewhat devious entries in discussion lists?

Please let us know what these "devious entries" are that we are making.

Best wishes,

Matthew


From lists at zopyx.com  Mon Jun 21 11:45:30 2010
From: lists at zopyx.com (Andreas Jung)
Date: Mon, 21 Jun 2010 12:45:30 +0200
Subject: [rabbitmq-discuss] Portability of the RabbitMQ database
Message-ID: <AANLkTikkHelrO-Br16UE33t366unzxlUikbUjLGsLLk4@mail.gmail.com>

I am playing over with replication and fail-over scenarios with RabbitMQ. So
I copied over the database directory
of production RabbitMQ server to a different machine and tried to restart
the RabbitMQ server with the database
of the production server. The production machine is running Linux and the
destination machines are Linux + MacOSX.

The startup fails on both server...isn't the database portable across
different machine?
Or is there some other way for moving a production database directory from
one server to another?

Andreas

-----------

AMQP 8-0
Copyright (C) 2007-2010 LShift Ltd., Cohesive Financial Technologies LLC.,
and Rabbit Technologies Ltd.
Licensed under the MPL.  See http://www.rabbitmq.com/

node           : rabbit at db01
app descriptor : /home/ajung/occ/parts/rabbitmq/ebin/rabbit.app
home dir       : /home/ajung
cookie hash    : OdO1XbpYQTCCD1J+eBaKtQ==
log            : /home/ajung/occ/data/logs/rabbit/rabbit.log
sasl log       : /home/ajung/occ/data/logs/rabbit/rabbit-sasl.log
database dir   : /home/ajung/occ/data/db/rabbit
erlang version : 5.6.5

starting file handle cache server
...done
starting worker pool
...done
starting database
...Erlang has closed
{"init terminating in
do_boot",{{nocatch,{error,{cannot_start_application,rabbit,{bad_return,{{rabbit,start,[normal,[]]},{'EXIT',{{case_clause,{error,{timeout_waiting_for_tables,[rabbit_user,rabbit_user_permission,rabbit_vhost,rabbit_config,rabbit_listener,rabbit_durable_route,rabbit_route,rabbit_reverse_route,rabbit_durable_exchange,rabbit_exchange,rabbit_durable_queue,rabbit_queue]}}},[{rabbit,'-run_boot_step/1-lc$^1/1-1-',1},{rabbit,run_boot_step,1},{rabbit,'-start/2-lc$^0/1-0-',1},{rabbit,start,2},{application_master,start_it_old,4}]}}}}}}},[{init,start_it,1},{init,start_em,1}]}}

Crash dump was written to: erl_crash.dump
init terminating in do_boot ()
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20100621/339e4f05/attachment.htm>

From matthew at rabbitmq.com  Mon Jun 21 12:04:15 2010
From: matthew at rabbitmq.com (Matthew Sackman)
Date: Mon, 21 Jun 2010 12:04:15 +0100
Subject: [rabbitmq-discuss] Portability of the RabbitMQ database
In-Reply-To: <AANLkTikkHelrO-Br16UE33t366unzxlUikbUjLGsLLk4@mail.gmail.com>
References: <AANLkTikkHelrO-Br16UE33t366unzxlUikbUjLGsLLk4@mail.gmail.com>
Message-ID: <20100621110414.GE14541@rabbitmq.com>

On Mon, Jun 21, 2010 at 12:45:30PM +0200, Andreas Jung wrote:
> I am playing over with replication and fail-over scenarios with RabbitMQ. So
> I copied over the database directory
> of production RabbitMQ server to a different machine and tried to restart
> the RabbitMQ server with the database
> of the production server. The production machine is running Linux and the
> destination machines are Linux + MacOSX.
> 
> The startup fails on both server...isn't the database portable across
> different machine?

The database captures the nodename. You'll need to ensure that both
machines have the same nodename. Setting the nodename to
"rabbit at localhost" is the simplest way of achieving that. Other ideas
are suggested in our HA pacemaker guide at
http://www.rabbitmq.com/pacemaker.html

Matthew

From johndapps at gmail.com  Mon Jun 21 12:15:01 2010
From: johndapps at gmail.com (John Apps)
Date: Mon, 21 Jun 2010 13:15:01 +0200
Subject: [rabbitmq-discuss] Rabbit crash, new persister
In-Reply-To: <20100621104352.GD14541@rabbitmq.com>
References: <2EE6A869-2315-40DA-8CBD-9890210C6984@tjervaag.com>
	<20100618160154.GJ11857@rabbitmq.com>
	<ADC7E139-DFA9-40B3-8645-6DC92FCCE182@tjervaag.com>
	<20100618163947.GN11857@rabbitmq.com>
	<2B3818E2-5E56-4FCF-82BD-D61226DD4CD2@tjervaag.com>
	<D18B2E7B-7DFA-4823-9F5A-2594EA5165C1@tjervaag.com>
	<20100619160046.GB31345@rabbitmq.com>
	<AANLkTind6IVL0nk4QbZPfGul84VrOQhUhl9j-NegPuWQ@mail.gmail.com>
	<20100621104352.GD14541@rabbitmq.com>
Message-ID: <AANLkTilcG-PS1sWdmXHpDmGQ3WUszta5I5SxJmZRGTjs@mail.gmail.com>

Thank you for the lengthy response.

You may read 'casting aspersions' for 'devious' if you wish.

I have suggested before that you place an official statement saying that
Linux is the platform of choice; Windows is tolerated, or words to that
effect. If you prefer to have everyone use Linux, then say so!
I find it hard to take a product seriously when doubts are constantly raised
about the platform I am running it on; makes me wonder if I am using the
wrong product as I have no choice with the platform.

There is no point in discussing the future of Windows versus Linux as a
server OS as it gets emotional and subjective.

*>>>*I'm yet to hear of anyone talking about Windows in the
cloud*(presumably because if you added a window to a cloud, you'd let
the rain
out).*
You may consider the above statement as in the category "devious" or
"dubious" - not helpful at all and blatantly incorrect. Amazon offers
Windows in the cloud, MS offers it under the Azure label, MS Business Online
Productivity Services is making inroads into Google Applications. To name
but a few.

I have been following AMQP since before its first publication and am a big
supporter of it, so try as many of the implementations as I can, usually on
Windows and, where we manage to port the code, on OpenVMS.

Oh well, back to some testing: Qpid, StormMQ, RabbitMQ, ZeroMQ (got to keep
an open mind).

On Mon, Jun 21, 2010 at 12:43, Matthew Sackman <matthew at rabbitmq.com> wrote:

> John,
>
> On Sun, Jun 20, 2010 at 03:58:55PM +0200, John Apps wrote:
> > <Begin of Soapbox>
> > I have to ask what the rather strange approach to Windows is with the
> > RabbitMQ folks?
> >
> > Bashing Windows might be a great hobby, not terribly helpful though.
>
> There is actually very little bashing going on, IMO.
>
> 1. No one at RabbitMQ uses Windows as their main development environment
> because we tend to find it unpleasant.
>
> 2. One of the reasons it's unpleasant is that it seems to be full of
> surprises - we're not making it up when we say that we have seen issues
> with firewalls stopping AMQP clients from working *only* when XML is
> being sent across the network. Not even Ubuntu contains such
> "functionality" (see, I can bash Ubuntu too).
>
> 3. We *do* support Windows. If we didn't, we wouldn't have bothered
> investing so much time in the various bat scripts that there are, and we
> do test under Windows. However, it is, I'm sure very obviously the case,
> that we do not test as thoroughly under Windows. For example, I suspect
> this is the first time that the new persister is being tested in anger
> under Windows. If we didn't support Windows, then we also wouldn't have
> done the 1.7.2 release, which was almost entirely made up of fixes for
> Windows. We do take Windows support seriously and have invested a lot of
> time in trying to make it less painful for Windows users. If you have
> specific suggestions as to where we could do more, we'd be happy to hear
> them.
>
> 4. To date, and we recognise this may change, not many people have
> complained about the status of our Windows support. I'm yet to hear of
> anyone talking about Windows in the cloud (presumably because if you
> added a window to a cloud, you'd let the rain out). I'm quite sure
> Windows will continue to survive as a desktop OS, but *personally* I
> would estimate that under 10% of our users are using Windows on servers.
> Now sure, you could argue that's *because* of the status of Rabbit on
> Windows - it could well be a chicken and egg situation. On the other
> hand, if it really was that bad, I would have thought we'd have received
> a lot more complaints.
>
> > I understand that RabbitMQ and others are awaiting Erlang support for X64
> > Windows, but to belittle the probably largest market you will find, and
> one
> > that is very stable now with Windows Server 2008 and 7, I do wonder what
> the
> > whole point is.
>
> About 3 years ago, a couple of users were confused because Windows
> seemed to be running Rabbit *much* faster than under Linux, particularly
> with persistent messages in transactions. I spent about half a day
> tracing fsync calls all through the Erlang VM to eventually find that,
> under Windows, it was implemented as "return 1;". The Erlang developers
> themselves very much treat Windows as a second class citizen. Now the
> situation has improved somewhat since then, but there are still cases
> where bugs likely exist under Windows in Erlang because Erlang
> developers tend to assume Unix or Linux-ish behaviour. For example,
> deleting mmap'd files is quite different under Linux and Windows, and it
> would appear that Erlang with R14A is only now starting to try to ensure
> file operations are the same under Linux and Windows.
>
> The absence of a 64-bit Erlang under Windows is a *massive* issue for
> us, but not one that we're in a position to do anything about. To a
> certain extent, the new persister will alleviate the problem somewhat,
> but really, without a 64-bit Erlang, RabbitMQ is unsuitable for *heavy*
> workloads under Windows without some careful planning. That said, we do
> have (some very large) customers using Rabbit under Windows without any
> problem, in mission critical settings. It is not an issue *provided*
> that you use Rabbit for routing rather than store-and-forward - i.e. try
> to design your architecture so that the queues stay short. But this
> advice applies not just to Windows - you will always get better
> performance out of Rabbit if you, by design, avoid your queues becoming
> very long.
>
> The issue that ?yvind has identified *probably* exists with all previous
> versions of Rabbit as I see no reason why it doesn't affect mnesia.
> However, it could have something to do with multiple threads accessing
> the same file, one as a reader and one as a writer, and then the writer
> closing and deleting the file before the reader's closed it. We do this
> in the new persister and it works fine under Linux. We have no idea
> whether it could be a problem under Windows.
>
> Currently we are a team of 7 developers. We have a roadmap that
> stretches at least 3 years with the current head count. We are not in a
> position to start tearing out and replacing large parts of the Erlang VM
> or to try and understand every subtlety of developing to a closed
> platform. Thus we rely on the API provided by the Erlang libraries and
> the environment provided by the Erlang VM. When we come across bugs, we
> report them to the Erlang developers - I have reported several bugs,
> mainly regarding issues with the SSL modules, but beyond reporting bugs,
> and the occasional patch, there's not a great deal more we can do.
>
> > Why not come out with an explicit statement that RabbitMQ is simply NOT
> > supported on Windows?
>
> Because that's not the case. Please explain why you think this is the
> case, and what we should be doing to convince you this isn't the case.
>
> > Make it clear from the beginning rather than writing
> > somewhat devious entries in discussion lists?
>
> Please let us know what these "devious entries" are that we are making.
>
> Best wishes,
>
> Matthew
>
> _______________________________________________
> rabbitmq-discuss mailing list
> rabbitmq-discuss at lists.rabbitmq.com
> http://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss
>



-- 
---
John Apps
(49) 171 869 1813
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20100621/7163e22c/attachment.htm>

From lists at zopyx.com  Mon Jun 21 12:15:30 2010
From: lists at zopyx.com (Andreas Jung)
Date: Mon, 21 Jun 2010 13:15:30 +0200
Subject: [rabbitmq-discuss] Portability of the RabbitMQ database
In-Reply-To: <20100621110414.GE14541@rabbitmq.com>
References: <AANLkTikkHelrO-Br16UE33t366unzxlUikbUjLGsLLk4@mail.gmail.com>
	<20100621110414.GE14541@rabbitmq.com>
Message-ID: <4C1F49D2.4030703@zopyx.com>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

Matthew Sackman wrote:
> On Mon, Jun 21, 2010 at 12:45:30PM +0200, Andreas Jung wrote:
>> I am playing over with replication and fail-over scenarios with RabbitMQ. So
>> I copied over the database directory
>> of production RabbitMQ server to a different machine and tried to restart
>> the RabbitMQ server with the database
>> of the production server. The production machine is running Linux and the
>> destination machines are Linux + MacOSX.
>>
>> The startup fails on both server...isn't the database portable across
>> different machine?
> 
> The database captures the nodename. You'll need to ensure that both
> machines have the same nodename. Setting the nodename to
> "rabbit at localhost" is the simplest way of achieving that. Other ideas
> are suggested in our HA pacemaker guide at
> http://www.rabbitmq.com/pacemaker.html

You can not use rabbit at localhost for a RabbitMQ cluster since you need
distinct node names..how would you move a database from a cluster node
to another server?

Andreas
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.4.10 (Darwin)
Comment: Using GnuPG with Mozilla - http://enigmail.mozdev.org/

iEYEARECAAYFAkwfSdIACgkQCJIWIbr9KYwTmwCfTjvdyHms8tqX8M7Vb21GaAbX
8xkAn205rMdC+PKXdI2aXD9xtMWqqDqm
=xsTc
-----END PGP SIGNATURE-----
-------------- next part --------------
A non-text attachment was scrubbed...
Name: lists.vcf
Type: text/x-vcard
Size: 316 bytes
Desc: not available
URL: <http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20100621/ee6d9ee4/attachment.vcf>

From matthew at rabbitmq.com  Mon Jun 21 12:18:39 2010
From: matthew at rabbitmq.com (Matthew Sackman)
Date: Mon, 21 Jun 2010 12:18:39 +0100
Subject: [rabbitmq-discuss] Portability of the RabbitMQ database
In-Reply-To: <4C1F49D2.4030703@zopyx.com>
References: <AANLkTikkHelrO-Br16UE33t366unzxlUikbUjLGsLLk4@mail.gmail.com>
	<20100621110414.GE14541@rabbitmq.com> <4C1F49D2.4030703@zopyx.com>
Message-ID: <20100621111839.GF14541@rabbitmq.com>

On Mon, Jun 21, 2010 at 01:15:30PM +0200, Andreas Jung wrote:
> You can not use rabbit at localhost for a RabbitMQ cluster since you need
> distinct node names..how would you move a database from a cluster node
> to another server?

Again, this is covered in the guide at
http://www.rabbitmq.com/pacemaker.html#ha_cluster 

"Rabbit nodes within a cluster need to be able to resolve each others'
host-name. Currently we have that the node-name is set to
rabbit at localhost which must be changed as the other nodes in the cluster
would get the wrong idea if we asked them to resolve localhost. We can't
use the IP address raw (i.e. we can't have the node-name as
rabbit at 192.168.50.1) without switching to long-names, which is more
work, so instead our plan is to give a host-name of rabbit-ha-1 to
192.168.50.1, rabbit-ha-2 to 192.168.50.2 and then set the node-names to
rabbit at rabbit-ha-1 and rabbit at rabbit-ha-2. There are a number of ways to
do this - either configure this in your DNS server, or edit enough
/etc/hosts files to ensure that all the HA nodes can resolve rabbit-ha-1
and rabbit-ha-2."

Matthew

From lists at zopyx.com  Mon Jun 21 12:31:26 2010
From: lists at zopyx.com (Andreas Jung)
Date: Mon, 21 Jun 2010 13:31:26 +0200
Subject: [rabbitmq-discuss] Portability of the RabbitMQ database
In-Reply-To: <20100621111839.GF14541@rabbitmq.com>
References: <AANLkTikkHelrO-Br16UE33t366unzxlUikbUjLGsLLk4@mail.gmail.com>	<20100621110414.GE14541@rabbitmq.com>
	<4C1F49D2.4030703@zopyx.com> <20100621111839.GF14541@rabbitmq.com>
Message-ID: <4C1F4D8E.1030802@zopyx.com>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

Matthew Sackman wrote:
> On Mon, Jun 21, 2010 at 01:15:30PM +0200, Andreas Jung wrote:
>> You can not use rabbit at localhost for a RabbitMQ cluster since you need
>> distinct node names..how would you move a database from a cluster node
>> to another server?
> 
> Again, this is covered in the guide at
> http://www.rabbitmq.com/pacemaker.html#ha_cluster 
>

I am *not* using Pacemaker right now and I do not intend to use in the
mid-future. I am searching for a reasonable solution to move the
database from one server to the other and (as said) using
rabbitmq at localhost is not an option for a cluster.

- -aj
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.4.10 (Darwin)
Comment: Using GnuPG with Mozilla - http://enigmail.mozdev.org/

iEYEARECAAYFAkwfTY4ACgkQCJIWIbr9KYzVBACggl6vpudnyGUZjB1DbMKzzOWL
IRIAoNsvSr8E0qETvtmfSNeAzmCcdlBP
=WaLd
-----END PGP SIGNATURE-----
-------------- next part --------------
A non-text attachment was scrubbed...
Name: lists.vcf
Type: text/x-vcard
Size: 316 bytes
Desc: not available
URL: <http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20100621/768228b2/attachment.vcf>

From alexandru at rabbitmq.com  Mon Jun 21 12:32:38 2010
From: alexandru at rabbitmq.com (Alexandru Scvortov)
Date: Mon, 21 Jun 2010 12:32:38 +0100
Subject: [rabbitmq-discuss] Can't build rabbitmq-1.8.0... beam files are
	not generated.
In-Reply-To: <28947017.post@talk.nabble.com>
References: <28947017.post@talk.nabble.com>
Message-ID: <201006211232.38717.alexandru@rabbitmq.com>

Hi,

> After invoking "make" there are a lot of strings with the same info:
> 
> erlc -I include -o ebin -Wall -v +debug_info -Duse_specs -pa ebin
> erlc -I include -o ebin -Wall -v +debug_info -Duse_specs -pa ebin
> erlc -I include -o ebin -Wall -v +debug_info -Duse_specs -pa ebin
> erlc -I include -o ebin -Wall -v +debug_info -Duse_specs -pa ebin
> erlc -I include -o ebin -Wall -v +debug_info -Duse_specs -pa ebin
> .................
> escript generate_app ebin ebin/rabbit.app < ebin/rabbit_app.in
> 
> When it is done, there are no *.beam files in ./ebin directory.

There was a similar problem to this a while back:
  http://old.nabble.com/problem-with-rabbitmq-server-Makefile-tt28824971.html

Ultimately, the solution was to upgrade make to 3.81.

Cheers,
Alex


From matthew at rabbitmq.com  Mon Jun 21 12:38:50 2010
From: matthew at rabbitmq.com (Matthew Sackman)
Date: Mon, 21 Jun 2010 12:38:50 +0100
Subject: [rabbitmq-discuss] Rabbit crash, new persister
In-Reply-To: <AANLkTilcG-PS1sWdmXHpDmGQ3WUszta5I5SxJmZRGTjs@mail.gmail.com>
References: <2EE6A869-2315-40DA-8CBD-9890210C6984@tjervaag.com>
	<20100618160154.GJ11857@rabbitmq.com>
	<ADC7E139-DFA9-40B3-8645-6DC92FCCE182@tjervaag.com>
	<20100618163947.GN11857@rabbitmq.com>
	<2B3818E2-5E56-4FCF-82BD-D61226DD4CD2@tjervaag.com>
	<D18B2E7B-7DFA-4823-9F5A-2594EA5165C1@tjervaag.com>
	<20100619160046.GB31345@rabbitmq.com>
	<AANLkTind6IVL0nk4QbZPfGul84VrOQhUhl9j-NegPuWQ@mail.gmail.com>
	<20100621104352.GD14541@rabbitmq.com>
	<AANLkTilcG-PS1sWdmXHpDmGQ3WUszta5I5SxJmZRGTjs@mail.gmail.com>
Message-ID: <20100621113849.GG14541@rabbitmq.com>

On Mon, Jun 21, 2010 at 01:15:01PM +0200, John Apps wrote:
> I have suggested before that you place an official statement saying that
> Linux is the platform of choice; Windows is tolerated, or words to that
> effect. If you prefer to have everyone use Linux, then say so!

Well that's not really the case. Windows is more than tolerated, and we
actually make more effort to support Windows than we make to support OS
X. It is the case that Linux is the platform of choice, especially for
a server, but we do not wish to dissuade people from using Rabbit under
other OSes. If there are things we are not doing which we should be
doing to support any OS better, then we want to hear about it, not to
put up some banner saying that we're uninterested.

> I find it hard to take a product seriously when doubts are constantly raised
> about the platform I am running it on; makes me wonder if I am using the
> wrong product as I have no choice with the platform.

I am genuinely curious - are we the only makers of software that you use
that you feel constantly doubt the platform you're running on?

> *>>>*I'm yet to hear of anyone talking about Windows in the
> cloud*(presumably because if you added a window to a cloud, you'd let
> the rain out).*
> You may consider the above statement as in the category "devious" or
> "dubious" - not helpful at all and blatantly incorrect. Amazon offers
> Windows in the cloud, MS offers it under the Azure label, MS Business Online
> Productivity Services is making inroads into Google Applications. To name
> but a few.

That's very true, sorry for that.

Matthew

From matthew at rabbitmq.com  Mon Jun 21 12:40:04 2010
From: matthew at rabbitmq.com (Matthew Sackman)
Date: Mon, 21 Jun 2010 12:40:04 +0100
Subject: [rabbitmq-discuss] Portability of the RabbitMQ database
In-Reply-To: <4C1F4D8E.1030802@zopyx.com>
References: <AANLkTikkHelrO-Br16UE33t366unzxlUikbUjLGsLLk4@mail.gmail.com>
	<20100621110414.GE14541@rabbitmq.com> <4C1F49D2.4030703@zopyx.com>
	<20100621111839.GF14541@rabbitmq.com> <4C1F4D8E.1030802@zopyx.com>
Message-ID: <20100621114003.GH14541@rabbitmq.com>

On Mon, Jun 21, 2010 at 01:31:26PM +0200, Andreas Jung wrote:
> > http://www.rabbitmq.com/pacemaker.html#ha_cluster 
> 
> I am *not* using Pacemaker right now and I do not intend to use in the
> mid-future. I am searching for a reasonable solution to move the
> database from one server to the other and (as said) using
> rabbitmq at localhost is not an option for a cluster.

Yes, and I'm not suggesting that you do use Pacemaker. I'm pointing out
that several of the approaches available, such as entries in /etc/hosts,
mobile IP addresses etc, are documented in our Pacemaker guide.

Matthew

From vertolet666 at yandex.ru  Mon Jun 21 13:11:59 2010
From: vertolet666 at yandex.ru (DOBRO)
Date: Mon, 21 Jun 2010 05:11:59 -0700 (PDT)
Subject: [rabbitmq-discuss] Can't build rabbitmq-1.8.0... beam files are
 not generated.
In-Reply-To: <201006211232.38717.alexandru@rabbitmq.com>
References: <28947017.post@talk.nabble.com>
	<201006211232.38717.alexandru@rabbitmq.com>
Message-ID: <28947825.post@talk.nabble.com>


Alexandru Scvortov,

Thanks for quick answer.

I have upgraded make to 3.81, but there is another problem with building
server.

Here is the output:

# make
/bin/sh: line 1: 29816 Segmentation fault      xsltproc --stringparam
modulename "`basename src/rabbit_ctl_usage.erl .erl`" docs/usage.xsl
docs/rabbitmqctl.1.xml >src/rabbit_ctl_usage.erl.tmp
make: *** [src/rabbit_ctl_usage.erl] Error 139
xsltproc --stringparam modulename "`basename src/rabbit_ctl_usage.erl .erl`"
\          docs/usage.xsl docs/rabbitmqctl.1.xml >
src/rabbit_ctl_usage.erl.tmp
Makefile:292: deps.mk: No such file or directory
xsltproc --stringparam modulename "`basename src/rabbit_ctl_usage.erl .erl`"
\
                docs/usage.xsl docs/rabbitmqctl.1.xml >
src/rabbit_ctl_usage.erl.tmp
/bin/sh: line 1: 29820 Segmentation fault      xsltproc --stringparam
modulename "`basename src/rabbit_ctl_usage.erl .erl`" docs/usage.xsl
docs/rabbitmqctl.1.xml >src/rabbit_ctl_usage.erl.tmp
make: *** [src/rabbit_ctl_usage.erl] Error 139

My environment: Fedora 8, kernel version 2.6.27, Erlang R14A.


Alexandru Scvortov wrote:
> 
> Hi,
> 
>> After invoking "make" there are a lot of strings with the same info:
>> 
>> erlc -I include -o ebin -Wall -v +debug_info -Duse_specs -pa ebin
>> erlc -I include -o ebin -Wall -v +debug_info -Duse_specs -pa ebin
>> erlc -I include -o ebin -Wall -v +debug_info -Duse_specs -pa ebin
>> erlc -I include -o ebin -Wall -v +debug_info -Duse_specs -pa ebin
>> erlc -I include -o ebin -Wall -v +debug_info -Duse_specs -pa ebin
>> .................
>> escript generate_app ebin ebin/rabbit.app < ebin/rabbit_app.in
>> 
>> When it is done, there are no *.beam files in ./ebin directory.
> 
> There was a similar problem to this a while back:
>  
> http://old.nabble.com/problem-with-rabbitmq-server-Makefile-tt28824971.html
> 
> Ultimately, the solution was to upgrade make to 3.81.
> 
> Cheers,
> Alex
> 
> _______________________________________________
> rabbitmq-discuss mailing list
> rabbitmq-discuss at lists.rabbitmq.com
> http://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss
> 
> 

-- 
View this message in context: http://old.nabble.com/Can%27t-build-rabbitmq-1.8.0...-beam-files-are-not-generated.-tp28947017p28947825.html
Sent from the RabbitMQ mailing list archive at Nabble.com.


From vertolet666 at yandex.ru  Mon Jun 21 13:49:25 2010
From: vertolet666 at yandex.ru (DOBRO)
Date: Mon, 21 Jun 2010 05:49:25 -0700 (PDT)
Subject: [rabbitmq-discuss] Can't build rabbitmq-1.8.0... beam files are
 not generated.
In-Reply-To: <201006211232.38717.alexandru@rabbitmq.com>
References: <28947017.post@talk.nabble.com>
	<201006211232.38717.alexandru@rabbitmq.com>
Message-ID: <28948167.post@talk.nabble.com>


I've upgraded libxml2 to 2.7.7 and libxslt to 1.1.26.
Now I'm getting another error. Here is the full output from make:

# make
python codegen.py body   codegen/amqp-0.8.json src/rabbit_framing.erl
xsltproc --stringparam modulename "`basename src/rabbit_ctl_usage.erl .erl`"
\           docs/usage.xsl docs/rabbitmqctl.1.xml >
src/rabbit_ctl_usage.erl.tmp sed -e 's/"/\\"/g' -e 's/%QUOTE%/"/g'
src/rabbit_ctl_usage.erl.tmp > src/rabbit_ctl_usage.erl.tmp2 fold -s
src/rabbit_ctl_usage.erl.tmp2 > src/rabbit_ctl_usage.erl.tmp3 mv
src/rabbit_ctl_usage.erl.tmp3 src/rabbit_ctl_usage.erl rm
src/rabbit_ctl_usage.erl.tmp src/rabbit_ctl_usage.erl.tmp2 xsltproc
--stringparam modulename "`basename src/rabbit_multi_usage.erl .erl`" \          
docs/usage.xsl docs/rabbitmq-multi.1.xml > src/rabbit_multi_usage.erl.tmp
sed -e 's/"/\\"/g' -e 's/%QUOTE%/"/g' src/rabbit_multi_usage.erl.tmp >
src/rabbit_multi_usage.erl.tmp2 fold -s src/rabbit_multi_usage.erl.tmp2 >
src/rabbit_multi_usage.erl.tmp3 mv src/rabbit_multi_usage.erl.tmp3
src/rabbit_multi_usage.erl rm src/rabbit_multi_usage.erl.tmp
src/rabbit_multi_usage.erl.tmp2 python codegen.py header
codegen/amqp-0.8.json include/rabbit_framing.hrl python codegen.py spec
codegen/amqp-0.8.json include/rabbit_framing_spec.hrl escript generate_deps
include src \$\(EBIN_DIR\) deps.mk
erlc -I include -o ebin -Wall -v +debug_info -Duse_specs -pa ebin
src/gen_server2.erl
erlc -I include -o ebin -Wall -v +debug_info -Duse_specs -pa ebin
src/delegate.erl
erlc -I include -o ebin -Wall -v +debug_info -Duse_specs -pa ebin
src/delegate_sup.erl
erlc -I include -o ebin -Wall -v +debug_info -Duse_specs -pa ebin
src/file_handle_cache.erl
erlc -I include -o ebin -Wall -v +debug_info -Duse_specs -pa ebin
src/pg_local.erl
erlc -I include -o ebin -Wall -v +debug_info -Duse_specs -pa ebin
src/priority_queue.erl
erlc -I include -o ebin -Wall -v +debug_info -Duse_specs -pa ebin
src/rabbit_access_control.erl
src/rabbit_access_control.erl:165: Warning: regexp:match/2: the regexp
module is deprecated (will be removed in R15A); use the re module instead
src/rabbit_access_control.erl:294: Warning: regexp:parse/1: the regexp
module is deprecated (will be removed in R15A); use the re module instead
erlc -I include -o ebin -Wall -v +debug_info -Duse_specs -pa ebin
src/rabbit_alarm.erl
erlc -I include -o ebin -Wall -v +debug_info -Duse_specs -pa ebin
src/rabbit_amqqueue.erl
erlc -I include -o ebin -Wall -v +debug_info -Duse_specs -pa ebin
src/rabbit_amqqueue_process.erl
erlc -I include -o ebin -Wall -v +debug_info -Duse_specs -pa ebin
src/supervisor2.erl
erlc -I include -o ebin -Wall -v +debug_info -Duse_specs -pa ebin
src/rabbit_amqqueue_sup.erl
erlc -I include -o ebin -Wall -v +debug_info -Duse_specs -pa ebin
src/rabbit_backing_queue.erl
erlc -I include -o ebin -Wall -v +debug_info -Duse_specs -pa ebin
src/rabbit_basic.erl
erlc -I include -o ebin -Wall -v +debug_info -Duse_specs -pa ebin
src/rabbit_binary_generator.erl
erlc -I include -o ebin -Wall -v +debug_info -Duse_specs -pa ebin
src/rabbit_binary_parser.erl
erlc -I include -o ebin -Wall -v +debug_info -Duse_specs -pa ebin
src/rabbit_channel.erl
erlc -I include -o ebin -Wall -v +debug_info -Duse_specs -pa ebin
src/rabbit_control.erl
erlc -I include -o ebin -Wall -v +debug_info -Duse_specs -pa ebin
src/rabbit_dialyzer.erl
src/rabbit_dialyzer.erl:59: Warning: regexp:split/2: the regexp module is
deprecated (will be removed in R15A); use the re module instead
src/rabbit_dialyzer.erl:68: Warning: regexp:split/2: the regexp module is
deprecated (will be removed in R15A); use the re module instead
erlc -I include -o ebin -Wall -v +debug_info -Duse_specs -pa ebin
src/rabbit.erl
erlc -I include -o ebin -Wall -v +debug_info -Duse_specs -pa ebin
src/rabbit_error_logger.erl
erlc -I include -o ebin -Wall -v +debug_info -Duse_specs -pa ebin
src/rabbit_error_logger_file_h.erl
erlc -I include -o ebin -Wall -v +debug_info -Duse_specs -pa ebin
src/rabbit_exchange.erl
src/rabbit_exchange.erl:103: badly formed define: missing closing right
parenthesis
src/rabbit_exchange.erl:237: undefined macro 'INFO_KEYS'
src/rabbit_exchange.erl:253: undefined macro 'INFO_KEYS'
src/rabbit_exchange.erl:36: function info/1 undefined
src/rabbit_exchange.erl:36: function info_keys/0 undefined
src/rabbit_exchange.erl:75: spec for undefined function
rabbit_exchange:info_keys/0
src/rabbit_exchange.erl:76: spec for undefined function
rabbit_exchange:info/1
src/rabbit_exchange.erl:257: function info/1 undefined
make: *** [ebin/rabbit_exchange.beam] Error 1

-- 
View this message in context: http://old.nabble.com/Can%27t-build-rabbitmq-1.8.0...-beam-files-are-not-generated.-tp28947017p28948167.html
Sent from the RabbitMQ mailing list archive at Nabble.com.


From matthew at rabbitmq.com  Mon Jun 21 13:59:49 2010
From: matthew at rabbitmq.com (Matthew Sackman)
Date: Mon, 21 Jun 2010 13:59:49 +0100
Subject: [rabbitmq-discuss] Rabbitmq Crash
In-Reply-To: <1276857876.2432.24.camel@waqas-desktop>
References: <20100617111541.GG17204@rabbitmq.com>
	<1276776804.2386.27.camel@waqas-desktop>
	<20100617122757.GJ17204@rabbitmq.com>
	<1276779263.2386.49.camel@waqas-desktop>
	<20100617134136.GK17204@rabbitmq.com>
	<1276790120.2386.62.camel@waqas-desktop>
	<20100617155816.GA11857@rabbitmq.com>
	<1276844693.2432.19.camel@waqas-desktop>
	<4C1B1CEA.6050500@rabbitmq.com>
	<1276857876.2432.24.camel@waqas-desktop>
Message-ID: <20100621125949.GI14541@rabbitmq.com>

Hi Waqas,

On Fri, Jun 18, 2010 at 03:44:36PM +0500, Waqas Badar wrote:
> Specified log files have been uploaded at
> http://rapidshare.com/files/400332318/rabbitlog.zip.html

I've taken a look at these, but I'm afraid they don't shed too much more
light on the problem.

The sasl log has one entry for 11-Jun-2010::21:23:48 and then the rest
are when Rabbit starts up at 13-Jun-2010::12:01:20.

The non-sasl log suggests connections are being closed from
13-Jun-2010::11:58:37, and Rabbit restarts at 13-Jun-2010::12:01:20.

Unfortunately, there are no "out of memory" errors or anything like
that, but that's not necessarily disproving our guess that it's just run
out of memory - sometimes Erlang can crash so hard that it doesn't get a
chance to output any error message. The absence of any other error
messages is good though - it suggests that it's not a bug in Rabbit
itself, so I would still bet my money on the memory exhaustion.

How are you getting on with 1.8.0 and a 64-bit Erlang?

Matthew

From emile at rabbitmq.com  Mon Jun 21 14:20:13 2010
From: emile at rabbitmq.com (Emile Joubert)
Date: Mon, 21 Jun 2010 14:20:13 +0100
Subject: [rabbitmq-discuss] Error running rabbitmqctl
In-Reply-To: <DB5B9E94-F061-455E-87D2-FBAA71A02C68@borogove.org>
References: <DB5B9E94-F061-455E-87D2-FBAA71A02C68@borogove.org>
Message-ID: <4C1F670D.2000709@rabbitmq.com>

On 18/06/10 20:34, Russell Borogove wrote:
> In order to coordinate rabbitmq with alice, I'm setting the cookie for both on the command line with '-setcookie 123'. This seems to work fine. 
> 
> When I try to run rabbitmq, though, it errors out trying to read the cookie from my home dir:
> russell at shard ~: sudo rabbitmqctl -setcookie 123 stop
> {error_logger,{{2010,6,18},{12,32,20}},"Error when reading /Users/russell/.erlang.cookie: eacces",[]}
> 
> Why is it looking for the cookie there?


Hi Russell,

Regrettably "-setcookie" is not parameter that is accepted by
rabbitmqctl. That is why erlang searches for a cookie file in
$HOME/.erlang.cookie .

You can solve this problem by getting $HOME/.erlang.cookie to be
readable and containing the correct cookie value.

You could also edit rabbitmqctl and add "-setcookie 123" to the list of
parameters of "exec erl" if you are averse to the previous suggestion.
Take care because package upgrades may undo this.


Regards

Emile


From david at rabbitmq.com  Mon Jun 21 14:57:57 2010
From: david at rabbitmq.com (David Wragg)
Date: Mon, 21 Jun 2010 14:57:57 +0100
Subject: [rabbitmq-discuss] Can't build rabbitmq-1.8.0... beam files are
	not generated.
In-Reply-To: <28947825.post@talk.nabble.com> (DOBRO's message of "Mon, 21 Jun
	2010 05:11:59 -0700 (PDT)")
References: <28947017.post@talk.nabble.com>
	<201006211232.38717.alexandru@rabbitmq.com>
	<28947825.post@talk.nabble.com>
Message-ID: <yrv4c631ca3oa.fsf@dwragg.eng.vmware.com>

Hi,

DOBRO <vertolet666 at yandex.ru> writes:
> My environment: Fedora 8, kernel version 2.6.27, Erlang R14A.

I'm guessing that there is a particular reason you are using Fedora 8,
but just in case:

Fedora 8 is pretty old.  The oldest version we claim to support is
Fedora 10, and it's likely to be much easier to build under F12/13.
Have you considered upgrading?

David

-- 
David Wragg
Staff Engineer, RabbitMQ
SpringSource, a division of VMware

From david at rabbitmq.com  Mon Jun 21 15:10:34 2010
From: david at rabbitmq.com (David Wragg)
Date: Mon, 21 Jun 2010 15:10:34 +0100
Subject: [rabbitmq-discuss] Can't build rabbitmq-1.8.0... beam files are
	not generated.
In-Reply-To: <28948167.post@talk.nabble.com> (DOBRO's message of "Mon, 21 Jun
	2010 05:49:25 -0700 (PDT)")
References: <28947017.post@talk.nabble.com>
	<201006211232.38717.alexandru@rabbitmq.com>
	<28948167.post@talk.nabble.com>
Message-ID: <yrv4cr5k08oit.fsf@dwragg.eng.vmware.com>

DOBRO <vertolet666 at yandex.ru> writes:
> I've upgraded libxml2 to 2.7.7 and libxslt to 1.1.26.
> Now I'm getting another error. Here is the full output from make:

This is likely to be a problem due to compiling under Erlang R14A.  R14A
is a test version that has only just been released, and we are aware
that there are some problems building rabbit under it.

Unless you really want to experiment with the bleeding edge, you should
stick to an R13B release of Erlang.

David

-- 
David Wragg
Staff Engineer, RabbitMQ
SpringSource, a division of VMware

From steven.davidson at physics.org  Mon Jun 21 15:16:22 2010
From: steven.davidson at physics.org (Steven Davidson)
Date: Mon, 21 Jun 2010 15:16:22 +0100
Subject: [rabbitmq-discuss] STOMP plugin problems (was: Claim on new ocamlmq
	broker...)
Message-ID: <AANLkTikUftXY-tDNwKVir_8fGlp3NapJoiIToSNf6DvW@mail.gmail.com>

Hello all,


> > - our STOMP adapter was written by TonyG and is largely unloved.
>
> I dunno, I love it a little :-)
>

Glad to hear it! I'm having problems with the stomp adaptor, plugin
installation and mercurial tags, I think. (But I'm new to erlang as well as
the above!)

If I do this:

hg clone http://hg.rabbitmq.com/rabbitmq-public-umbrella
cd rabbitmq-public-umbrella/
make co
make
cd rabbitmq-stomp/
make cover
cd ../rabbitmq-server/
mkdir plugins
cd plugins/
ln -s ../../rabbitmq-stomp/
ln -s ../../rabbitmq-erlang-client/
cd ..
./scripts/rabbitmq-activate-plugins
make cleandb run

on ubuntu 10.04 LTS, the tests pass and I can use Orbited's handy STOMP test
demo to verify everything is working from outside the server (connections
passing through nginx to Orbited).

I have also installed the ubuntu package via apt-get which according to the
startup log is v1.7.2. However, I can't seem to install the stomp plugin
into this installation: I copy the .ez file into a plugins directory, run
rabbitmq-activate-plugins and start (or restart) rabbit. I get
> broker running
> starting STOMP Adapter (binding to [{"127.0.0.1",61613}])  ...done
in the startup_log which looks good

But then the STOMP test produces this error from rabbitmq:
=INFO REPORT==== 21-Jun-2010::13:24:48 ===
starting STOMP connection <0.176.0> from 127.0.0.1:59714

=ERROR REPORT==== 21-Jun-2010::13:24:48 ===
STOMP error frame sent:
Message: "Processing error"
Detail: "Processing error\n"
Server private detail:
{undef,[{rabbit_reader_queue_collector,start_link,[]},
                               {rabbit_stomp_server,do_login,4},
                               {rabbit_stomp_server,process_frame,3},

{rabbit_stomp_server,process_received_bytes,2},
                               {rabbit_stomp_server,init,1},
                               {proc_lib,init_p_do_apply,3}]}

=INFO REPORT==== 21-Jun-2010::13:24:48 ===
ending STOMP connection <0.176.0> from 127.0.0.1:59714

I've tried hg up-ping rabbitmq-server and codegen to the 1_7_2 tag (the
other repositories don't have this tag), rebuilding and installing the
resulting plugin but no luck so far.

So my first question is: am I missing some step that would make this work?
(or alternatively are the plugins precompiled somewhere for different
releases of the broker?)

I decided some 6 months or more ago that STOMP was the way to go for my
problem (then parked the problem ;-), but lately I've seen some posts about
the rabbitmq-jsonrpc-channel that have me second-guessing myself.

I'm looking to provide a queue per client (typically connecting over
HTTP using a long polling technique) for the delivery of text based messages
(100% reliability not required). STOMP support is not a requirement for me
so I'm wondering if I should investigate
the rabbitmq-jsonrpc-channel approach and thus eliminate the Orbited
component completely: any thoughts on this? And is
the rabbitmq-jsonrpc-channel plugin more loved/robust/stable ;-) ?

Thanks,
Steven.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20100621/05c775a0/attachment.htm>

From vertolet666 at yandex.ru  Mon Jun 21 15:43:34 2010
From: vertolet666 at yandex.ru (DOBRO)
Date: Mon, 21 Jun 2010 07:43:34 -0700 (PDT)
Subject: [rabbitmq-discuss] Can't build rabbitmq-1.8.0... beam files are
 not generated.
In-Reply-To: <yrv4cr5k08oit.fsf@dwragg.eng.vmware.com>
References: <28947017.post@talk.nabble.com>
	<201006211232.38717.alexandru@rabbitmq.com>
	<28948167.post@talk.nabble.com>
	<yrv4cr5k08oit.fsf@dwragg.eng.vmware.com>
Message-ID: <28949390.post@talk.nabble.com>


I have installed Erlang R13B03.
I'm getting several errors during compilation :)

# make
python codegen.py body   codegen/amqp-0.8.json src/rabbit_framing.erl
xsltproc --stringparam modulename "`basename src/rabbit_ctl_usage.erl .erl`"
\
ocs/usage.xsl docs/rabbitmqctl.1.xml > src/rabbit_ctl_usage.erl.tmp sed -e
's/"/\\"/g' -e 's/%QUOTE%/"/g' src/rabbit_ctl_usage.erl.tmp >
src/rabbit_ctl_usage.l.tmp2 fold -s src/rabbit_ctl_usage.erl.tmp2 >
src/rabbit_ctl_usage.erl.tmp3 mv src/rabbit_ctl_usage.erl.tmp3
src/rabbit_ctl_usage.erl rm src/rabbit_ctl_usagerl.tmp
src/rabbit_ctl_usage.erl.tmp2 xsltproc --stringparam modulename "`basename
src/rabbit_multi_usage.erl .erl`" \           docs/usage.xsl
docs/rabbitmq-mti.1.xml > src/rabbit_multi_usage.erl.tmp sed -e 's/"/\\"/g'
-e 's/%QUOTE%/"/g' src/rabbit_multi_usage.erl.tmp >
src/rabbit_multi_usage.erl.tmp2 fold -s src/rbit_multi_usage.erl.tmp2 >
src/rabbit_multi_usage.erl.tmp3 mv src/rabbit_multi_usage.erl.tmp3
src/rabbit_multi_usage.erl rm src/rabbit_multi_usage.erl.tmp
srcabbit_multi_usage.erl.tmp2 python codegen.py header codegen/amqp-0.8.json
include/rabbit_framing.hrl python codegen.py spec codegen/amqp-0.8.json
include/rabb_framing_spec.hrl escript generate_deps include src
\$\(EBIN_DIR\) deps.mk
erlc -I include -o ebin -Wall -v +debug_info -Duse_specs -pa ebin
src/gen_server2.erl
erlc -I include -o ebin -Wall -v +debug_info -Duse_specs -pa ebin
src/delegate.erl

=ERROR REPORT==== 21-Jun-2010::18:37:16 ===
beam/beam_load.c(1317): Error loading module gen_server2:
  use of opcode 151; this emulator supports only up to 149

=ERROR REPORT==== 21-Jun-2010::18:37:16 ===
Loading of /home/rabbitmq/rabbitmq-server-1.8.0/ebin/gen_server2.beam
failed: badfile
src/delegate.erl:36: Warning: behaviour gen_server2 undefined
erlc -I include -o ebin -Wall -v +debug_info -Duse_specs -pa ebin
src/delegate_sup.erl
erlc -I include -o ebin -Wall -v +debug_info -Duse_specs -pa ebin
src/file_handle_cache.erl
erlc -I include -o ebin -Wall -v +debug_info -Duse_specs -pa ebin
src/pg_local.erl
erlc -I include -o ebin -Wall -v +debug_info -Duse_specs -pa ebin
src/priority_queue.erl
erlc -I include -o ebin -Wall -v +debug_info -Duse_specs -pa ebin
src/rabbit_access_control.erl
src/rabbit_access_control.erl:165: Warning: regexp:match/2: the regexp
module is deprecated (will be removed in R15A); use the re module instead
src/rabbit_access_control.erl:294: Warning: regexp:parse/1: the regexp
module is deprecated (will be removed in R15A); use the re module instead
erlc -I include -o ebin -Wall -v +debug_info -Duse_specs -pa ebin
src/rabbit_alarm.erl
erlc -I include -o ebin -Wall -v +debug_info -Duse_specs -pa ebin
src/rabbit_amqqueue.erl
erlc -I include -o ebin -Wall -v +debug_info -Duse_specs -pa ebin
src/rabbit_amqqueue_process.erl

=ERROR REPORT==== 21-Jun-2010::18:37:26 ===
beam/beam_load.c(1317): Error loading module gen_server2:
  use of opcode 151; this emulator supports only up to 149


=ERROR REPORT==== 21-Jun-2010::18:37:27 ===
Loading of /home/rabbitmq/rabbitmq-server-1.8.0/ebin/gen_server2.beam
failed: badfile
src/rabbit_amqqueue_process.erl:36: Warning: behaviour gen_server2 undefined
erlc -I include -o ebin -Wall -v +debug_info -Duse_specs -pa ebin
src/supervisor2.erl
erlc -I include -o ebin -Wall -v +debug_info -Duse_specs -pa ebin
src/rabbit_amqqueue_sup.erl
erlc -I include -o ebin -Wall -v +debug_info -Duse_specs -pa ebin
src/rabbit_backing_queue.erl
erlc -I include -o ebin -Wall -v +debug_info -Duse_specs -pa ebin
src/rabbit_basic.erl
erlc -I include -o ebin -Wall -v +debug_info -Duse_specs -pa ebin
src/rabbit_binary_generator.erl
erlc -I include -o ebin -Wall -v +debug_info -Duse_specs -pa ebin
src/rabbit_binary_parser.erl
erlc -I include -o ebin -Wall -v +debug_info -Duse_specs -pa ebin
src/rabbit_channel.erl

=ERROR REPORT==== 21-Jun-2010::18:37:36 ===
beam/beam_load.c(1317): Error loading module gen_server2:
  use of opcode 151; this emulator supports only up to 149


=ERROR REPORT==== 21-Jun-2010::18:37:36 ===
Loading of /home/rabbitmq/rabbitmq-server-1.8.0/ebin/gen_server2.beam
failed: badfile
src/rabbit_channel.erl:36: Warning: behaviour gen_server2 undefined
erlc -I include -o ebin -Wall -v +debug_info -Duse_specs -pa ebin
src/rabbit_control.erl
erlc -I include -o ebin -Wall -v +debug_info -Duse_specs -pa ebin
src/rabbit_dialyzer.erl
src/rabbit_dialyzer.erl:59: Warning: regexp:split/2: the regexp module is
deprecated (will be removed in R15A); use the re module instead
src/rabbit_dialyzer.erl:68: Warning: regexp:split/2: the regexp module is
deprecated (will be removed in R15A); use the re module instead
erlc -I include -o ebin -Wall -v +debug_info -Duse_specs -pa ebin
src/rabbit.erl
erlc -I include -o ebin -Wall -v +debug_info -Duse_specs -pa ebin
src/rabbit_error_logger.erl
erlc -I include -o ebin -Wall -v +debug_info -Duse_specs -pa ebin
src/rabbit_error_logger_file_h.erl
erlc -I include -o ebin -Wall -v +debug_info -Duse_specs -pa ebin
src/rabbit_exchange.erl
erlc -I include -o ebin -Wall -v +debug_info -Duse_specs -pa ebin
src/rabbit_exchange_type.erl
erlc -I include -o ebin -Wall -v +debug_info -Duse_specs -pa ebin
src/rabbit_exchange_type_direct.erl
erlc -I include -o ebin -Wall -v +debug_info -Duse_specs -pa ebin
src/rabbit_exchange_type_fanout.erl
erlc -I include -o ebin -Wall -v +debug_info -Duse_specs -pa ebin
src/rabbit_exchange_type_headers.erl
erlc -I include -o ebin -Wall -v +debug_info -Duse_specs -pa ebin
src/rabbit_exchange_type_registry.erl
erlc -I include -o ebin -Wall -v +debug_info -Duse_specs -pa ebin
src/rabbit_exchange_type_topic.erl
src/rabbit_exchange_type_topic.erl:68: Warning: regexp:split/2: the regexp
module is deprecated (will be removed in R15A); use the re module instead
erlc -I include -o ebin -Wall -v +debug_info -Duse_specs -pa ebin
src/rabbit_framing_channel.erl
erlc -I include -o ebin -Wall -v +debug_info -Duse_specs -pa ebin
src/rabbit_guid.erl
erlc -I include -o ebin -Wall -v +debug_info -Duse_specs -pa ebin
src/rabbit_heartbeat.erl
erlc -I include -o ebin -Wall -v +debug_info -Duse_specs -pa ebin
src/rabbit_hooks.erl
erlc -I include -o ebin -Wall -v +debug_info -Duse_specs -pa ebin
src/rabbit_invariable_queue.erl
erlc -I include -o ebin -Wall -v +debug_info -Duse_specs -pa ebin
src/rabbit_limiter.erl

=ERROR REPORT==== 21-Jun-2010::18:37:57 ===
beam/beam_load.c(1317): Error loading module gen_server2:
  use of opcode 151; this emulator supports only up to 149


=ERROR REPORT==== 21-Jun-2010::18:37:57 ===
Loading of /home/rabbitmq/rabbitmq-server-1.8.0/ebin/gen_server2.beam
failed: badfile
src/rabbit_limiter.erl:34: Warning: behaviour gen_server2 undefined
erlc -I include -o ebin -Wall -v +debug_info -Duse_specs -pa ebin
src/rabbit_load.erl
erlc -I include -o ebin -Wall -v +debug_info -Duse_specs -pa ebin
src/rabbit_log.erl
erlc -I include -o ebin -Wall -v +debug_info -Duse_specs -pa ebin
src/rabbit_memory_monitor.erl

=ERROR REPORT==== 21-Jun-2010::18:38:00 ===
beam/beam_load.c(1317): Error loading module gen_server2:
  use of opcode 151; this emulator supports only up to 149



David Wragg-4 wrote:
> 
> DOBRO <vertolet666 at yandex.ru> writes:
>> I've upgraded libxml2 to 2.7.7 and libxslt to 1.1.26.
>> Now I'm getting another error. Here is the full output from make:
> 
> This is likely to be a problem due to compiling under Erlang R14A.  R14A
> is a test version that has only just been released, and we are aware
> that there are some problems building rabbit under it.
> 
> Unless you really want to experiment with the bleeding edge, you should
> stick to an R13B release of Erlang.
> 
> David
> 
> -- 
> David Wragg
> Staff Engineer, RabbitMQ
> SpringSource, a division of VMware
> _______________________________________________
> rabbitmq-discuss mailing list
> rabbitmq-discuss at lists.rabbitmq.com
> http://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss
> 
> 

-- 
View this message in context: http://old.nabble.com/Can%27t-build-rabbitmq-1.8.0...-beam-files-are-not-generated.-tp28947017p28949390.html
Sent from the RabbitMQ mailing list archive at Nabble.com.


From alexis at rabbitmq.com  Mon Jun 21 15:55:11 2010
From: alexis at rabbitmq.com (Alexis Richardson)
Date: Mon, 21 Jun 2010 15:55:11 +0100
Subject: [rabbitmq-discuss] Rabbit crash, new persister
In-Reply-To: <20100621113849.GG14541@rabbitmq.com>
References: <2EE6A869-2315-40DA-8CBD-9890210C6984@tjervaag.com>
	<20100618160154.GJ11857@rabbitmq.com>
	<ADC7E139-DFA9-40B3-8645-6DC92FCCE182@tjervaag.com>
	<20100618163947.GN11857@rabbitmq.com>
	<2B3818E2-5E56-4FCF-82BD-D61226DD4CD2@tjervaag.com>
	<D18B2E7B-7DFA-4823-9F5A-2594EA5165C1@tjervaag.com>
	<20100619160046.GB31345@rabbitmq.com>
	<AANLkTind6IVL0nk4QbZPfGul84VrOQhUhl9j-NegPuWQ@mail.gmail.com>
	<20100621104352.GD14541@rabbitmq.com>
	<AANLkTilcG-PS1sWdmXHpDmGQ3WUszta5I5SxJmZRGTjs@mail.gmail.com>
	<20100621113849.GG14541@rabbitmq.com>
Message-ID: <AANLkTilz8a1QHKG1aGLZlRW0FaOovgaeloR0n4ZuSXfC@mail.gmail.com>

John

We commercially support RabbitMQ on Windows and provide support for
100% free packages through this list.  RabbitMQ has a large number of
deployments on Windows and .NET.  People can rely on us to care about
this.

RabbitMQ was the first AMQP implementation to support the CLR and WCF,
back in Feb 2008.  It was the first to provide an AMQP broker as a
Windows service.  This codebase has been actively improved
continuously since then.  However, since not every version of Windows
behaves the same way, there's no doubt more quirks to be hunted down
and dealt with or accommodated.

RabbitMQ is also being integrated with Spring.NET thereby offering
customers TWO production frameworks for Windows based applications.
Although it has not been released yet, we have also integrated
rabbitmqctl into Windows management - effectively porting the
Alice/Wonderland model to a 100% Windows metaphor.

In the cloud, independence from the underlying hardware does not free
you from the limitations of the O/S.  So we expect to continue to
support Windows and .NET in the cloud.  Please do however note that
Azure is a PaaS, offering a different runtime from vanilla .NET.

Best wishes

alexis





On Mon, Jun 21, 2010 at 12:38 PM, Matthew Sackman <matthew at rabbitmq.com> wrote:
> On Mon, Jun 21, 2010 at 01:15:01PM +0200, John Apps wrote:
>> I have suggested before that you place an official statement saying that
>> Linux is the platform of choice; Windows is tolerated, or words to that
>> effect. If you prefer to have everyone use Linux, then say so!
>
> Well that's not really the case. Windows is more than tolerated, and we
> actually make more effort to support Windows than we make to support OS
> X. It is the case that Linux is the platform of choice, especially for
> a server, but we do not wish to dissuade people from using Rabbit under
> other OSes. If there are things we are not doing which we should be
> doing to support any OS better, then we want to hear about it, not to
> put up some banner saying that we're uninterested.
>
>> I find it hard to take a product seriously when doubts are constantly raised
>> about the platform I am running it on; makes me wonder if I am using the
>> wrong product as I have no choice with the platform.
>
> I am genuinely curious - are we the only makers of software that you use
> that you feel constantly doubt the platform you're running on?
>
>> *>>>*I'm yet to hear of anyone talking about Windows in the
>> cloud*(presumably because if you added a window to a cloud, you'd let
>> the rain out).*
>> You may consider the above statement as in the category "devious" or
>> "dubious" - not helpful at all and blatantly incorrect. Amazon offers
>> Windows in the cloud, MS offers it under the Azure label, MS Business Online
>> Productivity Services is making inroads into Google Applications. To name
>> but a few.
>
> That's very true, sorry for that.
>
> Matthew
> _______________________________________________
> rabbitmq-discuss mailing list
> rabbitmq-discuss at lists.rabbitmq.com
> http://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss
>

From matthew at rabbitmq.com  Mon Jun 21 15:56:47 2010
From: matthew at rabbitmq.com (Matthew Sackman)
Date: Mon, 21 Jun 2010 15:56:47 +0100
Subject: [rabbitmq-discuss] Can't build rabbitmq-1.8.0... beam files are
 not generated.
In-Reply-To: <28949390.post@talk.nabble.com>
References: <28947017.post@talk.nabble.com>
	<201006211232.38717.alexandru@rabbitmq.com>
	<28948167.post@talk.nabble.com>
	<yrv4cr5k08oit.fsf@dwragg.eng.vmware.com>
	<28949390.post@talk.nabble.com>
Message-ID: <20100621145646.GJ14541@rabbitmq.com>

Hi,

We think this *might* just be because you have bits of Rabbit which have
been compiled with R14A. It might be fixed with a "make clean" before
you try to make again.

Matthew

From vertolet666 at yandex.ru  Mon Jun 21 16:03:50 2010
From: vertolet666 at yandex.ru (DOBRO)
Date: Mon, 21 Jun 2010 08:03:50 -0700 (PDT)
Subject: [rabbitmq-discuss] Can't build rabbitmq-1.8.0... beam files are
 not generated.
In-Reply-To: <20100621145646.GJ14541@rabbitmq.com>
References: <28947017.post@talk.nabble.com>
	<201006211232.38717.alexandru@rabbitmq.com>
	<28948167.post@talk.nabble.com>
	<yrv4cr5k08oit.fsf@dwragg.eng.vmware.com>
	<28949390.post@talk.nabble.com>
	<20100621145646.GJ14541@rabbitmq.com>
Message-ID: <28949648.post@talk.nabble.com>


Hi,

"make clean" doesn't help.

Then I removed rabbitmq-server-1.8.0 directory and unpacked
rabbitmq-server-1.8.0.tar.gz again. It doesn't help too.



Matthew Sackman-3 wrote:
> 
> Hi,
> 
> We think this *might* just be because you have bits of Rabbit which have
> been compiled with R14A. It might be fixed with a "make clean" before
> you try to make again.
> 
> Matthew
> _______________________________________________
> rabbitmq-discuss mailing list
> rabbitmq-discuss at lists.rabbitmq.com
> http://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss
> 
> 

-- 
View this message in context: http://old.nabble.com/Can%27t-build-rabbitmq-1.8.0...-beam-files-are-not-generated.-tp28947017p28949648.html
Sent from the RabbitMQ mailing list archive at Nabble.com.


From alexis at rabbitmq.com  Mon Jun 21 16:11:01 2010
From: alexis at rabbitmq.com (Alexis Richardson)
Date: Mon, 21 Jun 2010 16:11:01 +0100
Subject: [rabbitmq-discuss] STOMP plugin problems (was: Claim on new
	ocamlmq broker...)
In-Reply-To: <AANLkTikUftXY-tDNwKVir_8fGlp3NapJoiIToSNf6DvW@mail.gmail.com>
References: <AANLkTikUftXY-tDNwKVir_8fGlp3NapJoiIToSNf6DvW@mail.gmail.com>
Message-ID: <AANLkTinMFfsUNetOjeWV31ivvjNgLaMC2RahNpWDM3a7@mail.gmail.com>

Hi all,

En passant:

STOMP fans who wish to help make STOMP 1.1 and 2.0 may wish to observe
or join the conversation at stomp-spec.  This list came back to life
recently - and now is a good time to state your requirements for STOMP
'going forward'.

alexis


On Mon, Jun 21, 2010 at 3:16 PM, Steven Davidson
<steven.davidson at physics.org> wrote:
> Hello all,
>
>>
>> > - our STOMP adapter was written by TonyG and is largely unloved.
>>
>> I dunno, I love it a little :-)
>
> Glad to hear it! I'm having problems with the stomp adaptor, plugin
> installation and mercurial tags, I think. (But I'm new to erlang as well as
> the above!)
> If I do this:
> hg clone http://hg.rabbitmq.com/rabbitmq-public-umbrella
> cd rabbitmq-public-umbrella/
> make co
> make
> cd rabbitmq-stomp/
> make cover
> cd ../rabbitmq-server/
> mkdir plugins
> cd plugins/
> ln -s ../../rabbitmq-stomp/
> ln -s ../../rabbitmq-erlang-client/
> cd ..
> ./scripts/rabbitmq-activate-plugins
> make cleandb run
> on ubuntu 10.04 LTS, the tests pass and I can use Orbited's handy STOMP test
> demo to verify everything is working from outside the server (connections
> passing through nginx to Orbited).
> I have also installed the ubuntu package via apt-get which according to the
> startup log is v1.7.2. However, I can't seem to install the stomp plugin
> into this installation: I copy the .ez file into a plugins directory, run
> rabbitmq-activate-plugins and start (or restart) rabbit. I get
>> broker running
>> starting STOMP Adapter (binding to [{"127.0.0.1",61613}]) ?...done
> in the startup_log which looks good
> But then the STOMP test produces this error from rabbitmq:
> =INFO REPORT==== 21-Jun-2010::13:24:48 ===
> starting STOMP connection <0.176.0> from 127.0.0.1:59714
> =ERROR REPORT==== 21-Jun-2010::13:24:48 ===
> STOMP error frame sent:
> Message: "Processing error"
> Detail: "Processing error\n"
> Server private detail:
> {undef,[{rabbit_reader_queue_collector,start_link,[]},
> ?? ? ? ? ? ? ? ? ? ? ? ? ? ? ? {rabbit_stomp_server,do_login,4},
> ?? ? ? ? ? ? ? ? ? ? ? ? ? ? ? {rabbit_stomp_server,process_frame,3},
>
> {rabbit_stomp_server,process_received_bytes,2},
> ?? ? ? ? ? ? ? ? ? ? ? ? ? ? ? {rabbit_stomp_server,init,1},
> ?? ? ? ? ? ? ? ? ? ? ? ? ? ? ? {proc_lib,init_p_do_apply,3}]}
> =INFO REPORT==== 21-Jun-2010::13:24:48 ===
> ending STOMP connection <0.176.0> from 127.0.0.1:59714
> I've tried hg up-ping rabbitmq-server and codegen to the 1_7_2 tag (the
> other repositories don't have this tag), rebuilding and installing the
> resulting plugin but no luck so far.
> So my first question is: am I missing some step that would make this work?
> (or alternatively are the plugins precompiled somewhere for different
> releases of the broker?)
> I decided some 6 months or more ago that STOMP was the way to go for my
> problem (then parked the problem ;-), but lately I've seen some posts about
> the rabbitmq-jsonrpc-channel that have me second-guessing myself.
> I'm looking to provide a queue per client (typically connecting over
> HTTP?using a long polling technique) for the delivery of text based messages
> (100% reliability not required). STOMP support is not a requirement for me
> so I'm wondering if I should investigate
> the?rabbitmq-jsonrpc-channel?approach and thus eliminate the Orbited
> component completely: any thoughts on this? And is
> the?rabbitmq-jsonrpc-channel plugin more loved/robust/stable ;-) ?
> Thanks,
> Steven.
>
> _______________________________________________
> rabbitmq-discuss mailing list
> rabbitmq-discuss at lists.rabbitmq.com
> http://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss
>
>

From alexis at rabbitmq.com  Mon Jun 21 16:12:08 2010
From: alexis at rabbitmq.com (Alexis Richardson)
Date: Mon, 21 Jun 2010 16:12:08 +0100
Subject: [rabbitmq-discuss] Rabbit crash, new persister
In-Reply-To: <806F700D7E08E9408413160B05EB66672A473A057E@EXCH-MBX-1.vmware.com>
References: <2EE6A869-2315-40DA-8CBD-9890210C6984@tjervaag.com>
	<20100618160154.GJ11857@rabbitmq.com>
	<ADC7E139-DFA9-40B3-8645-6DC92FCCE182@tjervaag.com>
	<20100618163947.GN11857@rabbitmq.com>
	<2B3818E2-5E56-4FCF-82BD-D61226DD4CD2@tjervaag.com>
	<D18B2E7B-7DFA-4823-9F5A-2594EA5165C1@tjervaag.com>
	<20100619160046.GB31345@rabbitmq.com>
	<AANLkTind6IVL0nk4QbZPfGul84VrOQhUhl9j-NegPuWQ@mail.gmail.com>
	<20100621104352.GD14541@rabbitmq.com>
	<AANLkTilcG-PS1sWdmXHpDmGQ3WUszta5I5SxJmZRGTjs@mail.gmail.com>
	<20100621113849.GG14541@rabbitmq.com>
	<AANLkTilz8a1QHKG1aGLZlRW0FaOovgaeloR0n4ZuSXfC@mail.gmail.com>
	<806F700D7E08E9408413160B05EB66672A473A057E@EXCH-MBX-1.vmware.com>
Message-ID: <AANLkTimPrPxpHMbt2ij0bSz0iQQFTZGjBcvQhi-4RTMw@mail.gmail.com>

Thanks Mark!



On Mon, Jun 21, 2010 at 4:10 PM, Mark Pollack <mpollack at vmware.com> wrote:
> Hi,
>
> The nature of the effort is to provide an easier to use 'Spring-like' API that can be used across various AMQP client libraries - just looking at Java and .NET ATM - and to provide some easy migration across versions of the spec.
>
> By 'Spring-like' this means that best practices regarding resource management (e.g. connections/channels) are handled for you and there is a POJO/POCO centric viewpoint to the API. ?If you have seen Spring's JMS support, it is in the same style. ? There is additional management code that goes above and beyond what is in Spring JMS as Alexis mentioned below. ?The API to do this is 'custom', it is not based on the JMS spec. ?There is also a programming model one can use that is part of the Spring Integration project. ?There is also a .NET version of Spring Integration planned but no dates yet.
>
> As for versions of the .NET framework, we have not yet added anything specific to .NET 3.0/3.5/4.0 in the .NET code base. ?You can still use the library from .NET 3.0/3.5/4.0 though.
>
> I think you will find the foundations of point #3 to be covered with the current work. ?There is a JSON converter implemented (in both Java and .NET) and we've envisioned extending this out to other favorite serialization formats, protobuf, avro, etc.
>
> Last value cache can be a slippery slope with requirements. ?I used work at Tibco (TFTI) and then Reuters. ?Products like the 'TIC' from them start off simple and soon end up with a very complicated feature set.
>
> Would be good to discuss the Rabbit/Gemfire integration more.
>
> We are working on reflection based serializers for Gemfire ATM from the pure Gemfire developer productivity perspective.
>
> Generally speaking supporting language interop is very important part of this work with Rabbit/Gemfire.
>
> We should discuss in more detail the specific use cases you have.
>
> Mark
>
> https://src.springsource.org/svn/se-amqp
> https://src.springsource.org/svn/se-amqp-net
>
>
>> -----Original Message-----
>> From: alexis.richardson at gmail.com [mailto:alexis.richardson at gmail.com]
>> On Behalf Of Alexis Richardson
>> Sent: Monday, June 21, 2010 10:55 AM
>> To: John Apps; rabbitmq-discuss at lists.rabbitmq.com
>> Cc: jim at rabbitmq.com; Mark Pollack
>> Subject: Re: [rabbitmq-discuss] Rabbit crash, new persister
>>
>> John
>>
>> We commercially support RabbitMQ on Windows and provide support for
>> 100% free packages through this list. ?RabbitMQ has a large number of
>> deployments on Windows and .NET. ?People can rely on us to care about
>> this.
>>
>> RabbitMQ was the first AMQP implementation to support the CLR and WCF,
>> back in Feb 2008. ?It was the first to provide an AMQP broker as a
>> Windows service. ?This codebase has been actively improved
>> continuously since then. ?However, since not every version of Windows
>> behaves the same way, there's no doubt more quirks to be hunted down
>> and dealt with or accommodated.
>>
>> RabbitMQ is also being integrated with Spring.NET thereby offering
>> customers TWO production frameworks for Windows based applications.
>> Although it has not been released yet, we have also integrated
>> rabbitmqctl into Windows management - effectively porting the
>> Alice/Wonderland model to a 100% Windows metaphor.
>>
>> In the cloud, independence from the underlying hardware does not free
>> you from the limitations of the O/S. ?So we expect to continue to
>> support Windows and .NET in the cloud. ?Please do however note that
>> Azure is a PaaS, offering a different runtime from vanilla .NET.
>>
>> Best wishes
>>
>> alexis
>>
>>
>>
>>
>>
>> On Mon, Jun 21, 2010 at 12:38 PM, Matthew Sackman
>> <matthew at rabbitmq.com> wrote:
>> > On Mon, Jun 21, 2010 at 01:15:01PM +0200, John Apps wrote:
>> >> I have suggested before that you place an official statement saying
>> that
>> >> Linux is the platform of choice; Windows is tolerated, or words to
>> that
>> >> effect. If you prefer to have everyone use Linux, then say so!
>> >
>> > Well that's not really the case. Windows is more than tolerated, and
>> we
>> > actually make more effort to support Windows than we make to support
>> OS
>> > X. It is the case that Linux is the platform of choice, especially
>> for
>> > a server, but we do not wish to dissuade people from using Rabbit
>> under
>> > other OSes. If there are things we are not doing which we should be
>> > doing to support any OS better, then we want to hear about it, not to
>> > put up some banner saying that we're uninterested.
>> >
>> >> I find it hard to take a product seriously when doubts are
>> constantly raised
>> >> about the platform I am running it on; makes me wonder if I am using
>> the
>> >> wrong product as I have no choice with the platform.
>> >
>> > I am genuinely curious - are we the only makers of software that you
>> use
>> > that you feel constantly doubt the platform you're running on?
>> >
>> >> *>>>*I'm yet to hear of anyone talking about Windows in the
>> >> cloud*(presumably because if you added a window to a cloud, you'd
>> let
>> >> the rain out).*
>> >> You may consider the above statement as in the category "devious" or
>> >> "dubious" - not helpful at all and blatantly incorrect. Amazon
>> offers
>> >> Windows in the cloud, MS offers it under the Azure label, MS
>> Business Online
>> >> Productivity Services is making inroads into Google Applications. To
>> name
>> >> but a few.
>> >
>> > That's very true, sorry for that.
>> >
>> > Matthew
>> > _______________________________________________
>> > rabbitmq-discuss mailing list
>> > rabbitmq-discuss at lists.rabbitmq.com
>> > http://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss
>> >
>

From vertolet666 at yandex.ru  Mon Jun 21 16:24:12 2010
From: vertolet666 at yandex.ru (DOBRO)
Date: Mon, 21 Jun 2010 08:24:12 -0700 (PDT)
Subject: [rabbitmq-discuss] Can't build rabbitmq-1.8.0... beam files are
 not generated.
In-Reply-To: <20100621145646.GJ14541@rabbitmq.com>
References: <28947017.post@talk.nabble.com>
	<201006211232.38717.alexandru@rabbitmq.com>
	<28948167.post@talk.nabble.com>
	<yrv4cr5k08oit.fsf@dwragg.eng.vmware.com>
	<28949390.post@talk.nabble.com>
	<20100621145646.GJ14541@rabbitmq.com>
Message-ID: <28949870.post@talk.nabble.com>


Well,

I have installed Erlang R12B-5. The server has been built successfully.

So, I'm up and running :)

Thanks!

-- 
View this message in context: http://old.nabble.com/Can%27t-build-rabbitmq-1.8.0...-beam-files-are-not-generated.-tp28947017p28949870.html
Sent from the RabbitMQ mailing list archive at Nabble.com.


From russell at borogove.org  Mon Jun 21 19:01:14 2010
From: russell at borogove.org (Russell Borogove)
Date: Mon, 21 Jun 2010 11:01:14 -0700
Subject: [rabbitmq-discuss] Error running rabbitmqctl
In-Reply-To: <4C1F670D.2000709@rabbitmq.com>
References: <DB5B9E94-F061-455E-87D2-FBAA71A02C68@borogove.org>
	<4C1F670D.2000709@rabbitmq.com>
Message-ID: <2EDF35A5-2C0A-4DC8-877E-D6991844C126@borogove.org>


On Jun 21, 2010, at 6:20 AM, Emile Joubert wrote:

> On 18/06/10 20:34, Russell Borogove wrote:
>> In order to coordinate rabbitmq with alice, I'm setting the cookie for both on the command line with '-setcookie 123'. This seems to work fine. 
>> 
>> When I try to run rabbitmq, though, it errors out trying to read the cookie from my home dir:
>> russell at shard ~: sudo rabbitmqctl -setcookie 123 stop
>> {error_logger,{{2010,6,18},{12,32,20}},"Error when reading /Users/russell/.erlang.cookie: eacces",[]}
>> 
>> Why is it looking for the cookie there?

> Regrettably "-setcookie" is not parameter that is accepted by
> rabbitmqctl. That is why erlang searches for a cookie file in
> $HOME/.erlang.cookie .

> You can solve this problem by getting $HOME/.erlang.cookie to be
> readable and containing the correct cookie value.


Unfortunately, making $HOME/.erlang.cookie readable and running rmq sudo seem to be incompatible. 
This is OS X by the way if it makes a difference:

russell at shard ~: rabbitmq-server
...

Only root or rabbitmq should run rabbitmq-server

russell at shard ~: sudo rabbitmq-server
Password:
{error_logger,{{2010,6,21},{10,51,25}},"Error when reading /Users/russell/.erlang.cookie: eacces",[]}
...

russell at shard ~: ls -al .erlang.cookie
-r--------  1 russell  staff  20 Jun 18 00:00 .erlang.cookie
russell at shard ~: chmod +r .erlang.cookie 
russell at shard ~: ls -al .erlang.cookie
-r--r--r--  1 russell  staff  20 Jun 18 00:00 .erlang.cookie

russell at shard ~: sudo rabbitmq-server
{error_logger,{{2010,6,21},{10,52,3}},"Cookie file /Users/russell/.erlang.cookie must be accessible by owner only",[]}
...

This is all exceptionally frustrating given that the installation guide says:
The rabbitmq-server, rabbitmqctl, and other RabbitMQ-related scripts on the path automatically (through sudo) run in the context of the rabbitmq user so that the Erlang cookie can be read from $MACPORTS_PREFIX/var/lib/rabbitmq/.erlang.cookie.

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20100621/5928f899/attachment.htm>

From russell at borogove.org  Mon Jun 21 19:24:28 2010
From: russell at borogove.org (Russell Borogove)
Date: Mon, 21 Jun 2010 11:24:28 -0700
Subject: [rabbitmq-discuss] Error running rabbitmqctl
In-Reply-To: <2EDF35A5-2C0A-4DC8-877E-D6991844C126@borogove.org>
References: <DB5B9E94-F061-455E-87D2-FBAA71A02C68@borogove.org>
	<4C1F670D.2000709@rabbitmq.com>
	<2EDF35A5-2C0A-4DC8-877E-D6991844C126@borogove.org>
Message-ID: <0C356678-FE8E-468D-897A-BC8AB4D9C84B@borogove.org>


On Jun 21, 2010, at 11:01 AM, Russell Borogove wrote:
> 
> On Jun 21, 2010, at 6:20 AM, Emile Joubert wrote:
> 
>> You can solve this problem by getting $HOME/.erlang.cookie to be
>> readable and containing the correct cookie value.

As soon as I replied I realized I needed to chown the cookie to user rabbitmq, and that worked - I can now get rabbitmq-server, rabbitmqctl, and alice to coordinate. 

I'm still unhappy that -setcookie doesn't work on rabbitmqctl and the documentation is misleading about the cookie location.



From lists at zopyx.com  Tue Jun 22 07:11:23 2010
From: lists at zopyx.com (Andreas Jung)
Date: Tue, 22 Jun 2010 08:11:23 +0200
Subject: [rabbitmq-discuss] Insertion of message into RabbitMQ without
	queues defined
Message-ID: <4C20540B.1040901@zopyx.com>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

Imagine the follow scenario:

- - fresh RabbitMQ installation, fresh database, no queues defined

- - a producer inserts a bunch of messages into RabbitMQ to some exchange

- - later a consumer attaches and defines a queue and attached to the same
exchange

In this scenario the consumer will not see the message that were
inserted earlier - intentional?

How can the consumer get hold of those messages or is it necessary
to declare the queues in any case before attaching the producers?
If yes: is it possible to define the queues through rabbitmqctl
(and not by firing all producers with their queue definitions
first)?

Andreas

-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.4.10 (Darwin)
Comment: Using GnuPG with Mozilla - http://enigmail.mozdev.org/

iEYEARECAAYFAkwgVAsACgkQCJIWIbr9KYzd5ACgp8Dj/BHFTx2bF/HdDWfOD6DR
LkQAoOuPKKwz+veTZPXFHnZy7prW7kWu
=fTVE
-----END PGP SIGNATURE-----
-------------- next part --------------
A non-text attachment was scrubbed...
Name: lists.vcf
Type: text/x-vcard
Size: 316 bytes
Desc: not available
URL: <http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20100622/5e5108a3/attachment.vcf>

From david at rabbitmq.com  Tue Jun 22 08:14:04 2010
From: david at rabbitmq.com (David Wragg)
Date: Tue, 22 Jun 2010 08:14:04 +0100
Subject: [rabbitmq-discuss] Insertion of message into RabbitMQ without
	queues defined
In-Reply-To: <4C20540B.1040901@zopyx.com> (Andreas Jung's message of "Tue, 22
	Jun 2010 08:11:23 +0200")
References: <4C20540B.1040901@zopyx.com>
Message-ID: <yrv4cpqzjh743.fsf@dwragg.eng.vmware.com>

Hi Andreas,

Andreas Jung <lists at zopyx.com> writes:
> Imagine the follow scenario:
>
> - fresh RabbitMQ installation, fresh database, no queues defined
>
> - a producer inserts a bunch of messages into RabbitMQ to some exchange
>
> - later a consumer attaches and defines a queue and attached to the same
> exchange
>
> In this scenario the consumer will not see the message that were
> inserted earlier - intentional?

Yes.  That is how AMQP is designed: Exchanges have no buffering
behaviour, and do not store messages.  Instead, that is the function of
queues.

> How can the consumer get hold of those messages or is it necessary
> to declare the queues in any case before attaching the producers?

Yes, you should declare the necessary queues before the producers
publish.

> If yes: is it possible to define the queues through rabbitmqctl
> (and not by firing all producers with their queue definitions
> first)?

rabbitmqctl cannot declare queues.  But there are many other ways that
you could declare the queues.  For example, you could modify your
consumer applications to separate out the queue declaration
functionality, so you can run that separately.

If you'd really like a command line tool to create the queues,
rabbitmq-c <http://hg.rabbitmq.com/rabbitmq-c/> includes an
amqp_declare_queue command, although currently you need to build it from
source.

David

-- 
David Wragg
Staff Engineer, RabbitMQ
SpringSource, a division of VMware

From matthias at rabbitmq.com  Tue Jun 22 16:32:54 2010
From: matthias at rabbitmq.com (Matthias Radestock)
Date: Tue, 22 Jun 2010 16:32:54 +0100
Subject: [rabbitmq-discuss] Insertion of message into RabbitMQ without
 queues defined
In-Reply-To: <yrv4cpqzjh743.fsf@dwragg.eng.vmware.com>
References: <4C20540B.1040901@zopyx.com>
	<yrv4cpqzjh743.fsf@dwragg.eng.vmware.com>
Message-ID: <4C20D7A6.9050406@rabbitmq.com>

On 22/06/10 08:14, David Wragg wrote:
> If you'd really like a command line tool to create the queues,
> rabbitmq-c<http://hg.rabbitmq.com/rabbitmq-c/>  includes an
> amqp_declare_queue command

There is also BQL - http://www.rabbitmq.com/rabbitmq-bql.html

Matthias.

From mvcalder at gmail.com  Wed Jun 23 11:48:25 2010
From: mvcalder at gmail.com (Matt Calder)
Date: Wed, 23 Jun 2010 06:48:25 -0400
Subject: [rabbitmq-discuss] Debugging rabbitmq crash
Message-ID: <AANLkTin7KhHRKPxlwQ83CiKyysbyMFVyw5ahcEEl2nWK@mail.gmail.com>

I am looking for guidance on how to debug a crash of rabbit. The
situation is this. There is a pair of processes running on a single
machine. One process sends a message to the other, and the other
responds. This is happening at ~20 message pairs per second. There is
a single direct exchange and two queues, one for messages going one
way, the other for messages going the other way. The queues are not
durable, and not auto delete. The processes run for ~15 hours without
issue over a single connection. Then the connection closes. Here is
the rabbit.log:

 =INFO REPORT==== 22-Jun-2010::18:03:03 ===
accepted TCP connection on 0.0.0.0:5672 from 127.0.0.1:55824

=INFO REPORT==== 22-Jun-2010::18:03:03 ===
starting TCP connection <0.15621.0> from 127.0.0.1:55824

=INFO REPORT==== 23-Jun-2010::01:59:00 ===
    alarm_handler: {set,{system_memory_high_watermark,[]}}

=INFO REPORT==== 23-Jun-2010::02:02:55 ===
    alarm_handler: {clear,system_memory_high_watermark}

=WARNING REPORT==== 23-Jun-2010::06:27:37 ===
exception on TCP connection <0.15425.0> from 127.0.0.1:47025
connection_closed_abruptly

=INFO REPORT==== 23-Jun-2010::06:27:37 ===
closing TCP connection <0.15425.0> from 127.0.0.1:47025

=WARNING REPORT==== 23-Jun-2010::06:27:37 ===
exception on TCP connection <0.15621.0> from 127.0.0.1:55824
connection_closed_abruptly

=INFO REPORT==== 23-Jun-2010::06:27:37 ===
closing TCP connection <0.15621.0> from 127.0.0.1:55824


So, there appeared to be a memory issue, but it also appeared to pass.
I watched the process on and off and it seemed to be using a steady
15% of available memory according to top. All the other logs are
either old, or empty. Specifically, rabbit-sasl.log was touched
apparently at the time of the crash.

-rw-r--r-- 1 rabbitmq rabbitmq     0 2010-06-23 06:27 rabbit-sasl.log

I can reproduce this, though it takes the 15 hours or so.

If anyone can guide me through the steps necessary to debugging this I
would appreciate it. Specific suggestions, like, "your problem is X",
are of course welcome, but I am also interested in process. Thank you,

Matt

From emile at rabbitmq.com  Wed Jun 23 12:00:15 2010
From: emile at rabbitmq.com (Emile Joubert)
Date: Wed, 23 Jun 2010 12:00:15 +0100
Subject: [rabbitmq-discuss] Error running rabbitmqctl
In-Reply-To: <0C356678-FE8E-468D-897A-BC8AB4D9C84B@borogove.org>
References: <DB5B9E94-F061-455E-87D2-FBAA71A02C68@borogove.org>
	<4C1F670D.2000709@rabbitmq.com>
	<2EDF35A5-2C0A-4DC8-877E-D6991844C126@borogove.org>
	<0C356678-FE8E-468D-897A-BC8AB4D9C84B@borogove.org>
Message-ID: <4C21E93F.5060007@rabbitmq.com>


Hi Russell,

On 21/06/10 19:24, Russell Borogove wrote:
> 
> On Jun 21, 2010, at 11:01 AM, Russell Borogove wrote:
>>
>> On Jun 21, 2010, at 6:20 AM, Emile Joubert wrote:
>>
>>> You can solve this problem by getting $HOME/.erlang.cookie to be
>>> readable and containing the correct cookie value.
> 
> As soon as I replied I realized I needed to chown the cookie to user rabbitmq, and that worked - I can now get rabbitmq-server, rabbitmqctl, and alice to coordinate. 
> 
> I'm still unhappy that -setcookie doesn't work on rabbitmqctl and the documentation is misleading about the cookie location.


I'm glad to hear that you found a solution, and I'd like to find out how
the documentation can be improved. Can you confirm whether you installed
rabbitmq from MacPorts or from source? The documentation that refers to
$MACPORTS_PREFIX/var/lib/rabbitmq/.erlang.cookie assumes MacPorts.

Regards

Emile

From majek04 at gmail.com  Wed Jun 23 13:40:53 2010
From: majek04 at gmail.com (Marek Majkowski)
Date: Wed, 23 Jun 2010 13:40:53 +0100
Subject: [rabbitmq-discuss] STOMP plugin problems (was: Claim on new
	ocamlmq broker...)
In-Reply-To: <AANLkTikUftXY-tDNwKVir_8fGlp3NapJoiIToSNf6DvW@mail.gmail.com>
References: <AANLkTikUftXY-tDNwKVir_8fGlp3NapJoiIToSNf6DvW@mail.gmail.com>
Message-ID: <AANLkTillYrOVl96RNdje67y9U1G27K0QXNlAFQu2Te6S@mail.gmail.com>

On Mon, Jun 21, 2010 at 15:16, Steven Davidson
<steven.davidson at physics.org> wrote:
> on ubuntu 10.04 LTS, the tests pass and I can use Orbited's handy STOMP test
> demo to verify everything is working from outside the server (connections
> passing through nginx to Orbited).

Great.

> I have also installed the ubuntu package via apt-get which according to the
> startup log is v1.7.2. However, I can't seem to install the stomp plugin
> into this installation: I copy the .ez file into a plugins directory, run
> rabbitmq-activate-plugins and start (or restart) rabbit. I get
[...]
> I've tried hg up-ping rabbitmq-server and codegen to the 1_7_2 tag (the
> other repositories don't have this tag), rebuilding and installing the
> resulting plugin but no luck so far.
> So my first question is: am I missing some step that would make this work?

You're doing everything correctly. Recent versions of stomp do not work
with old 1.7.2 rabbitmq-server. The simplest solution would be to run
rabbitmq from sources. Alternatively you can try to upgrade to 1.8
and a freshly compiled stomp plugin has high chances to work.

> (or alternatively are the plugins precompiled somewhere for different
> releases of the broker?)

We do not ship precompiled plugins.

> I decided some 6 months or more ago that STOMP was the way to go for my
> problem (then parked the problem ;-), but lately I've seen some posts about
> the rabbitmq-jsonrpc-channel that have me second-guessing myself.
> I'm looking to provide a queue per client (typically connecting over
> HTTP?using a long polling technique) for the delivery of text based messages
> (100% reliability not required). STOMP support is not a requirement for me
> so I'm wondering if I should investigate
> the?rabbitmq-jsonrpc-channel?approach and thus eliminate the Orbited
> component completely: any thoughts on this? And is
> the?rabbitmq-jsonrpc-channel plugin more loved/robust/stable ;-) ?

We, the computer geeks, often just can't love strongly enough. Our feelings
are changing too rapidly. So, unfortunately jsonrpc-channel is another
widowed project.

But, please, feel free to play with jsonrpc-channel and share your experiences!

Cheers!
  Marek Majkowski

From shane at digitalsanctum.com  Wed Jun 23 15:31:42 2010
From: shane at digitalsanctum.com (Shane)
Date: Wed, 23 Jun 2010 07:31:42 -0700 (PDT)
Subject: [rabbitmq-discuss] How to implement the Aggregator pattern?
Message-ID: <40410f93-93e4-4f56-b570-3821bbcdc63d@e5g2000yqn.googlegroups.com>

I'm trying to determine the best way to implement the Aggregator
pattern with RabbitMQ. For example, given consumers A, B and C, I need
to run C with the results of A and B.

Does anyone have any pointers for implementing this using the Java
client?

Thanks,
Shane

From scott at beamdog.com  Wed Jun 23 16:09:45 2010
From: scott at beamdog.com (Scott Brooks)
Date: Wed, 23 Jun 2010 09:09:45 -0600
Subject: [rabbitmq-discuss] Debugging rabbitmq crash
In-Reply-To: <AANLkTin7KhHRKPxlwQ83CiKyysbyMFVyw5ahcEEl2nWK@mail.gmail.com>
References: <AANLkTin7KhHRKPxlwQ83CiKyysbyMFVyw5ahcEEl2nWK@mail.gmail.com>
Message-ID: <AANLkTimQ7E9M_ag_JBaa82e9IWJ8QgKI7XqvmKcj5WCG@mail.gmail.com>

Which version of erlang are you running?  If you are not >= R13B03,
I'd recommend the upgrade.

Even though you are fully consuming all the messages, at that rate the
GC may not be aggressive enough to clean up that memory.
The erlang GC has seen some huge improvements, and if you are on R12,
that may be the problem.

Here is a post from lshift about even the differences between R13B02 and R13B03
http://www.lshift.net/blog/2009/12/01/garbage-collection-in-erlang

As far as debugging steps, I guess you could look at the memory usage
of your beam process and see how fast it is growing,
and also use
rabbitmqctl list_queues name messages messages_ready
messages_unacknowledged messages_uncommited memory
to watch the stats as far as RabbitMQ is concerned.

Scott

On Wed, Jun 23, 2010 at 4:48 AM, Matt Calder <mvcalder at gmail.com> wrote:
> I am looking for guidance on how to debug a crash of rabbit. The
> situation is this. There is a pair of processes running on a single
> machine. One process sends a message to the other, and the other
> responds. This is happening at ~20 message pairs per second. There is
> a single direct exchange and two queues, one for messages going one
> way, the other for messages going the other way. The queues are not
> durable, and not auto delete. The processes run for ~15 hours without
> issue over a single connection. Then the connection closes. Here is
> the rabbit.log:
>
> ?=INFO REPORT==== 22-Jun-2010::18:03:03 ===
> accepted TCP connection on 0.0.0.0:5672 from 127.0.0.1:55824
>
> =INFO REPORT==== 22-Jun-2010::18:03:03 ===
> starting TCP connection <0.15621.0> from 127.0.0.1:55824
>
> =INFO REPORT==== 23-Jun-2010::01:59:00 ===
> ? ?alarm_handler: {set,{system_memory_high_watermark,[]}}
>
> =INFO REPORT==== 23-Jun-2010::02:02:55 ===
> ? ?alarm_handler: {clear,system_memory_high_watermark}
>
> =WARNING REPORT==== 23-Jun-2010::06:27:37 ===
> exception on TCP connection <0.15425.0> from 127.0.0.1:47025
> connection_closed_abruptly
>
> =INFO REPORT==== 23-Jun-2010::06:27:37 ===
> closing TCP connection <0.15425.0> from 127.0.0.1:47025
>
> =WARNING REPORT==== 23-Jun-2010::06:27:37 ===
> exception on TCP connection <0.15621.0> from 127.0.0.1:55824
> connection_closed_abruptly
>
> =INFO REPORT==== 23-Jun-2010::06:27:37 ===
> closing TCP connection <0.15621.0> from 127.0.0.1:55824
>
>
> So, there appeared to be a memory issue, but it also appeared to pass.
> I watched the process on and off and it seemed to be using a steady
> 15% of available memory according to top. All the other logs are
> either old, or empty. Specifically, rabbit-sasl.log was touched
> apparently at the time of the crash.
>
> -rw-r--r-- 1 rabbitmq rabbitmq ? ? 0 2010-06-23 06:27 rabbit-sasl.log
>
> I can reproduce this, though it takes the 15 hours or so.
>
> If anyone can guide me through the steps necessary to debugging this I
> would appreciate it. Specific suggestions, like, "your problem is X",
> are of course welcome, but I am also interested in process. Thank you,
>
> Matt
> _______________________________________________
> rabbitmq-discuss mailing list
> rabbitmq-discuss at lists.rabbitmq.com
> http://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss
>

From matthias at rabbitmq.com  Wed Jun 23 19:14:18 2010
From: matthias at rabbitmq.com (Matthias Radestock)
Date: Wed, 23 Jun 2010 19:14:18 +0100
Subject: [rabbitmq-discuss] Debugging rabbitmq crash
In-Reply-To: <AANLkTin7KhHRKPxlwQ83CiKyysbyMFVyw5ahcEEl2nWK@mail.gmail.com>
References: <AANLkTin7KhHRKPxlwQ83CiKyysbyMFVyw5ahcEEl2nWK@mail.gmail.com>
Message-ID: <4C224EFA.7070608@rabbitmq.com>

Matt,

Matt Calder wrote:
> The processes run for ~15 hours without
> issue over a single connection. Then the connection closes.

So is the rabbit process actually crashing, or is it just closing the 
connection?

If it *is* crashing then there should be a crash dump somewhere.

Also, what version Erlang and Rabbit are you running?

Regards,

Matthias.

From mvcalder at gmail.com  Wed Jun 23 19:39:23 2010
From: mvcalder at gmail.com (Matt Calder)
Date: Wed, 23 Jun 2010 14:39:23 -0400
Subject: [rabbitmq-discuss] Debugging rabbitmq crash
In-Reply-To: <4C224EFA.7070608@rabbitmq.com>
References: <AANLkTin7KhHRKPxlwQ83CiKyysbyMFVyw5ahcEEl2nWK@mail.gmail.com> 
	<4C224EFA.7070608@rabbitmq.com>
Message-ID: <AANLkTilR3mULhJCgytozil6Fa-Z2o-Duyl2sUb-Tem8N@mail.gmail.com>

Thanks for the replies,

Both of you asked about versions, sorry, I should have included that:

rabbitmq: 1.7.2
erlang: R13B01

I upgraded erlang to R13B03 as per your suggestion and will rerun the
job. I can't be more specific on what I mean by crashed, beyond the
fact that both processes exited on an exception. I will turn up the
logging level on the next run. I'll also keep a closer eye on the
state of rabbit. I'll let you know, thank you.

Matt

On Wed, Jun 23, 2010 at 2:14 PM, Matthias Radestock
<matthias at rabbitmq.com> wrote:
> Matt,
>
> Matt Calder wrote:
>>
>> The processes run for ~15 hours without
>> issue over a single connection. Then the connection closes.
>
> So is the rabbit process actually crashing, or is it just closing the
> connection?
>
> If it *is* crashing then there should be a crash dump somewhere.
>
> Also, what version Erlang and Rabbit are you running?
>
> Regards,
>
> Matthias.
>

From matthias at rabbitmq.com  Wed Jun 23 19:52:08 2010
From: matthias at rabbitmq.com (Matthias Radestock)
Date: Wed, 23 Jun 2010 19:52:08 +0100
Subject: [rabbitmq-discuss] Debugging rabbitmq crash
In-Reply-To: <AANLkTilR3mULhJCgytozil6Fa-Z2o-Duyl2sUb-Tem8N@mail.gmail.com>
References: <AANLkTin7KhHRKPxlwQ83CiKyysbyMFVyw5ahcEEl2nWK@mail.gmail.com>
	<4C224EFA.7070608@rabbitmq.com>
	<AANLkTilR3mULhJCgytozil6Fa-Z2o-Duyl2sUb-Tem8N@mail.gmail.com>
Message-ID: <4C2257D8.4060203@rabbitmq.com>

Matt,

Matt Calder wrote:
> rabbitmq: 1.7.2
> erlang: R13B01
> 
> I upgraded erlang to R13B03 as per your suggestion and will rerun the
> job.

I strongly recommend you upgrade to rabbit 1.8.0 as well.

> I can't be more specific on what I mean by crashed, beyond the fact
> that both processes exited on an exception.

That's the producer and consumer, right? So actually rabbit might still 
be running happily? Did you try restarting the clients?


Regards,

Matthias.

From mvcalder at gmail.com  Wed Jun 23 20:20:44 2010
From: mvcalder at gmail.com (Matt Calder)
Date: Wed, 23 Jun 2010 15:20:44 -0400
Subject: [rabbitmq-discuss] Debugging rabbitmq crash
In-Reply-To: <4C2257D8.4060203@rabbitmq.com>
References: <AANLkTin7KhHRKPxlwQ83CiKyysbyMFVyw5ahcEEl2nWK@mail.gmail.com> 
	<4C224EFA.7070608@rabbitmq.com>
	<AANLkTilR3mULhJCgytozil6Fa-Z2o-Duyl2sUb-Tem8N@mail.gmail.com> 
	<4C2257D8.4060203@rabbitmq.com>
Message-ID: <AANLkTik1ev2dRlYM2ZjykiMPzYMM_yVTI9pk8u8ABXRE@mail.gmail.com>

Matthias,


On Wed, Jun 23, 2010 at 2:52 PM, Matthias Radestock
<matthias at rabbitmq.com> wrote:
> I strongly recommend you upgrade to rabbit 1.8.0 as well.
>

Will do.

> That's the producer and consumer, right? So actually rabbit might still be
> running happily? Did you try restarting the clients?
>

I believe it was still running because I recall seeing a message that
it was being stopped during the upgrade of erlang (I know, flimsy
evidence at best). I will be more diligent if I run into problems
again.

Matt

From russell at borogove.org  Wed Jun 23 21:46:20 2010
From: russell at borogove.org (Russell Borogove)
Date: Wed, 23 Jun 2010 13:46:20 -0700
Subject: [rabbitmq-discuss] Error running rabbitmqctl
In-Reply-To: <4C21E93F.5060007@rabbitmq.com>
References: <DB5B9E94-F061-455E-87D2-FBAA71A02C68@borogove.org>
	<4C1F670D.2000709@rabbitmq.com>
	<2EDF35A5-2C0A-4DC8-877E-D6991844C126@borogove.org>
	<0C356678-FE8E-468D-897A-BC8AB4D9C84B@borogove.org>
	<4C21E93F.5060007@rabbitmq.com>
Message-ID: <EA64611E-680A-4DAB-A14F-966226BAEBCD@borogove.org>


On Jun 23, 2010, at 4:00 AM, Emile Joubert wrote:

>> 
>> I'm still unhappy that -setcookie doesn't work on rabbitmqctl and the documentation is misleading about the cookie location.
> 
> 
> I'm glad to hear that you found a solution, and I'd like to find out how
> the documentation can be improved. Can you confirm whether you installed
> rabbitmq from MacPorts or from source? The documentation that refers to
> $MACPORTS_PREFIX/var/lib/rabbitmq/.erlang.cookie assumes MacPorts.

Yes, it's installed from MacPorts. 

The MACPORTS_PREFIX environment variable, however, doesn't appear to be 
defined - does rabbit in fact look for such an environment variable, rather than 
looking in a rabbitmq-server-relative location?

-Russell




From nico at nicocesar.com  Wed Jun 23 21:47:40 2010
From: nico at nicocesar.com (=?UTF-8?B?Tmljb2zDoXMgQ8Opc2Fy?=)
Date: Wed, 23 Jun 2010 17:47:40 -0300
Subject: [rabbitmq-discuss] Debugging rabbitmq crash
In-Reply-To: <AANLkTik1ev2dRlYM2ZjykiMPzYMM_yVTI9pk8u8ABXRE@mail.gmail.com>
References: <AANLkTin7KhHRKPxlwQ83CiKyysbyMFVyw5ahcEEl2nWK@mail.gmail.com> 
	<4C224EFA.7070608@rabbitmq.com>
	<AANLkTilR3mULhJCgytozil6Fa-Z2o-Duyl2sUb-Tem8N@mail.gmail.com> 
	<4C2257D8.4060203@rabbitmq.com>
	<AANLkTik1ev2dRlYM2ZjykiMPzYMM_yVTI9pk8u8ABXRE@mail.gmail.com>
Message-ID: <AANLkTim5JGJJRUUbCKsIkhxpAGnQZoGpcFcO8LMkjDdw@mail.gmail.com>

Simon told me once, It was helpful for me that time.:
-------------------------------------------
Well, there's erlang:memory/0.

If you're using the Debian packages, type:

$ sudo -u rabbitmq -H erl -remsh rabbit@`hostname` -sname foo

to establish a connection to the RabbitMQ Erlang process then at the Erlang
prompt:

memory().

to give some high level statistics about what's using memory.
---------------------------------------

My 2 cents.

2010/6/23 Matt Calder <mvcalder at gmail.com>

> Matthias,
>
>
> On Wed, Jun 23, 2010 at 2:52 PM, Matthias Radestock
> <matthias at rabbitmq.com> wrote:
> > I strongly recommend you upgrade to rabbit 1.8.0 as well.
> >
>
> Will do.
>
> > That's the producer and consumer, right? So actually rabbit might still
> be
> > running happily? Did you try restarting the clients?
> >
>
> I believe it was still running because I recall seeing a message that
> it was being stopped during the upgrade of erlang (I know, flimsy
> evidence at best). I will be more diligent if I run into problems
> again.
>
> Matt
> _______________________________________________
> rabbitmq-discuss mailing list
> rabbitmq-discuss at lists.rabbitmq.com
> http://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20100623/5e00436d/attachment.htm>

From shane at digitalsanctum.com  Wed Jun 23 23:28:53 2010
From: shane at digitalsanctum.com (Shane)
Date: Wed, 23 Jun 2010 15:28:53 -0700 (PDT)
Subject: [rabbitmq-discuss] status of available message buses compatible
	with Java client
Message-ID: <0f3476d2-74a8-4b6e-82d2-81e4c71d2d73@j8g2000yqd.googlegroups.com>

I'm still feeling my way around RabbitMQ (as you might have noticed
from the number of posts I've written lately). One decision I'm
wrestling with is what to use for message routing with the Java
client. I've started looking into the following:

- Writing my own helper classes with Spring
- Apache Camel
- Spring Integration with OpenCredo's contributions (amq template, amq
spring integration)

Since RabbitMQ was recently acquired by SpringSource, SI w/OpenCredo
seems like the natural choice but there hasn't been any development on
the OpenCredo stuff since March? (looking at github).

Although Apache Camel seems to be more mature, I'd rather go the
Spring Integration route since all of our apps already use Spring for
dependency injection, etc.

Can someone from Rabbit comment on the state of development with
respect to integration with Spring? Is the contributions from
OpenCredo going to be used?

I'm also interested in other message bus solutions people are using
with the Java client.

Thanks again,
Shane

From markfisher at vmware.com  Thu Jun 24 01:09:04 2010
From: markfisher at vmware.com (Mark Fisher)
Date: Wed, 23 Jun 2010 17:09:04 -0700
Subject: [rabbitmq-discuss] status of available message buses
	compatible	with Java client
In-Reply-To: <0f3476d2-74a8-4b6e-82d2-81e4c71d2d73@j8g2000yqd.googlegroups.com>
References: <0f3476d2-74a8-4b6e-82d2-81e4c71d2d73@j8g2000yqd.googlegroups.com>
Message-ID: <990C545C-A35B-458E-931F-1589B071B91A@vmware.com>

Shane, see my replies inline...

On Jun 23, 2010, at 6:28 PM, Shane wrote:

> I'm still feeling my way around RabbitMQ (as you might have noticed
> from the number of posts I've written lately). One decision I'm
> wrestling with is what to use for message routing with the Java
> client. I've started looking into the following:
> 
> - Writing my own helper classes with Spring
> - Apache Camel
> - Spring Integration with OpenCredo's contributions (amq template, amq
> spring integration)

We will soon be releasing the first milestone of our Spring AMQP project. That includes support at the same basic level as Spring's JMS support (AmqpTemplate, SimpleMessageListenerContainers for Message-driven POJOs, MessageConverter strategies, and more). We will be providing Spring Integration Channel Adapters, Gateways, etc. that will build on top of that functionality.

> 
> Since RabbitMQ was recently acquired by SpringSource, SI w/OpenCredo
> seems like the natural choice but there hasn't been any development on
> the OpenCredo stuff since March? (looking at github).

We're going to be collaborating with OpenCredo on the project I mentioned above, and that project is actually quite active already. However, as I mentioned, we're just now approaching the first milestone release. We'll be moving to Git any moment now, but until it's moved, you can browse the current codebase here: https://src.springsource.org/svn/se-amqp/trunk/ (after the move it will be at git.springsource.org/spring-amqp)

> 
> Although Apache Camel seems to be more mature, I'd rather go the
> Spring Integration route since all of our apps already use Spring for
> dependency injection, etc.

As the lead of Spring Integration, I'm a bit biased. That said, if your main concern is having a solid (and "mature" I might add) Spring foundation with implementations that are absolutely consistent with Spring, then Spring Integration is probably the best choice (and 2.0 GA is only a couple months away).

> 
> Can someone from Rabbit comment on the state of development with
> respect to integration with Spring? Is the contributions from
> OpenCredo going to be used?

Hopefully this question has been answered above. Let me know if there is anything that I missed.

Regards,
Mark

> 
> I'm also interested in other message bus solutions people are using
> with the Java client.
> 
> Thanks again,
> Shane
> _______________________________________________
> rabbitmq-discuss mailing list
> rabbitmq-discuss at lists.rabbitmq.com
> http://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss


From shane at digitalsanctum.com  Thu Jun 24 01:36:19 2010
From: shane at digitalsanctum.com (Shane)
Date: Wed, 23 Jun 2010 17:36:19 -0700 (PDT)
Subject: [rabbitmq-discuss] status of available message buses compatible
	with Java client
In-Reply-To: <990C545C-A35B-458E-931F-1589B071B91A@vmware.com>
References: <0f3476d2-74a8-4b6e-82d2-81e4c71d2d73@j8g2000yqd.googlegroups.com>
	<990C545C-A35B-458E-931F-1589B071B91A@vmware.com>
Message-ID: <2606241e-93c1-439e-aa81-af1fb613cc0c@d16g2000yqb.googlegroups.com>

Thanks for the thorough reply, Mark. I'm going to start looking at the
source.

Shane

On Jun 23, 8:09?pm, Mark Fisher <markfis... at vmware.com> wrote:
> Shane, see my replies inline...
>
> On Jun 23, 2010, at 6:28 PM, Shane wrote:
>
> > I'm still feeling my way around RabbitMQ (as you might have noticed
> > from the number of posts I've written lately). One decision I'm
> > wrestling with is what to use for message routing with the Java
> > client. I've started looking into the following:
>
> > - Writing my own helper classes with Spring
> > - Apache Camel
> > - Spring Integration with OpenCredo's contributions (amq template, amq
> > spring integration)
>
> We will soon be releasing the first milestone of our Spring AMQP project. That includes support at the same basic level as Spring's JMS support (AmqpTemplate, SimpleMessageListenerContainers for Message-driven POJOs, MessageConverter strategies, and more). We will be providing Spring Integration Channel Adapters, Gateways, etc. that will build on top of that functionality.
>
>
>
> > Since RabbitMQ was recently acquired by SpringSource, SI w/OpenCredo
> > seems like the natural choice but there hasn't been any development on
> > the OpenCredo stuff since March? (looking at github).
>
> We're going to be collaborating with OpenCredo on the project I mentioned above, and that project is actually quite active already. However, as I mentioned, we're just now approaching the first milestone release. We'll be moving to Git any moment now, but until it's moved, you can browse the current codebase here:https://src.springsource.org/svn/se-amqp/trunk/(after the move it will be at git.springsource.org/spring-amqp)
>
>
>
> > Although Apache Camel seems to be more mature, I'd rather go the
> > Spring Integration route since all of our apps already use Spring for
> > dependency injection, etc.
>
> As the lead of Spring Integration, I'm a bit biased. That said, if your main concern is having a solid (and "mature" I might add) Spring foundation with implementations that are absolutely consistent with Spring, then Spring Integration is probably the best choice (and 2.0 GA is only a couple months away).
>
>
>
> > Can someone from Rabbit comment on the state of development with
> > respect to integration with Spring? Is the contributions from
> > OpenCredo going to be used?
>
> Hopefully this question has been answered above. Let me know if there is anything that I missed.
>
> Regards,
> Mark
>
>
>
> > I'm also interested in other message bus solutions people are using
> > with the Java client.
>
> > Thanks again,
> > Shane
> > _______________________________________________
> > rabbitmq-discuss mailing list
> > rabbitmq-disc... at lists.rabbitmq.com
> >http://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss
>
> _______________________________________________
> rabbitmq-discuss mailing list
> rabbitmq-disc... at lists.rabbitmq.comhttp://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss

From frank.goenninger at consequor.de  Thu Jun 24 11:35:40 2010
From: frank.goenninger at consequor.de (=?iso-8859-1?Q?Frank_G=F6nninger?=)
Date: Thu, 24 Jun 2010 12:35:40 +0200
Subject: [rabbitmq-discuss] RabbitMQ C Client Intermediate Status Source Code
Message-ID: <C851C017-AE26-4BEA-BA7E-8212F5E297E4@consequor.de>

Hi all:

As said earlier in this place we intend to create an ANSI C compliant DLL/ Dynamic Library providing a C language interface to RabbitMQ. This code - in pure IN WORK - NOT FUNCTIONING AT ALL status - has been uploaded to

http://github.com/dg1sbg/RabbitMQ_C_VS_Unix

The code is based on the source code provided by RabbitMQ themselves and was modified to avoid GNU specialties wherever possible so far. Now we've hit a road block:

The files amqp_framing.c and amqp_framing.h are generated from the AMQP protocol spec. The utility used to do so is codegen.py, a python script.

Now, codegen.py emits GNU C specific code - that leaves us with "a lot of work" to modify codegen.py to

A. Either emit ANSI C code using pure functions and avoid C "macros", or

B. Emit the same #ifdef'ed code structure that has been used manually to adapt all other source and header files.

Meanwhile, due to presssing project deadlines, we stopped working on his approach and have resorted to the MINGW alternative for coding our application. In latest two months time, however, we will be facing a situation where we need to deliver a Visual Studio 2010 project used by the client to build the code (then to be deployed on a Windows Server 2008-based machine).

Any help, suggestions, comments, feedback, etc really appreciated.

So long -
   
    Frank





From mvcalder at gmail.com  Thu Jun 24 12:19:29 2010
From: mvcalder at gmail.com (Matt Calder)
Date: Thu, 24 Jun 2010 07:19:29 -0400
Subject: [rabbitmq-discuss] Debugging rabbitmq crash
In-Reply-To: <AANLkTim5JGJJRUUbCKsIkhxpAGnQZoGpcFcO8LMkjDdw@mail.gmail.com>
References: <AANLkTin7KhHRKPxlwQ83CiKyysbyMFVyw5ahcEEl2nWK@mail.gmail.com> 
	<4C224EFA.7070608@rabbitmq.com>
	<AANLkTilR3mULhJCgytozil6Fa-Z2o-Duyl2sUb-Tem8N@mail.gmail.com> 
	<4C2257D8.4060203@rabbitmq.com>
	<AANLkTik1ev2dRlYM2ZjykiMPzYMM_yVTI9pk8u8ABXRE@mail.gmail.com> 
	<AANLkTim5JGJJRUUbCKsIkhxpAGnQZoGpcFcO8LMkjDdw@mail.gmail.com>
Message-ID: <AANLkTil5gYdTEucaSjhO8dW62elN6TTs_epaWFd4n6O1@mail.gmail.com>

The second run stopped in the same manner. I was running rabbitmq
1.7.2 and erlang 13B03. I had started before I got Matthias's
suggestion to upgrade rabbit.  This time I captured the stack traces
of the two processes when they stopped.

The server process:

...
    self._mq_channel.basic_publish(amqp.Message(body), exchange =
self._mq_exchange, routing_key = "reply")
  File "build/bdist.linux-i686/egg/amqplib/client_0_8/channel.py",
line 2223, in basic_publish
  File "build/bdist.linux-i686/egg/amqplib/client_0_8/abstract_channel.py",
line 70, in _send_method
  File "build/bdist.linux-i686/egg/amqplib/client_0_8/method_framing.py",
line 240, in write_method
  File "build/bdist.linux-i686/egg/amqplib/client_0_8/transport.py",
line 125, in write_frame
  File "<string>", line 1, in sendall
socket.error: [Errno 32] Broken pipe

The client process:
...
    self.clientProcess._mq_channel.wait()
  File "build/bdist.linux-i686/egg/amqplib/client_0_8/abstract_channel.py",
line 89, in wait
  File "build/bdist.linux-i686/egg/amqplib/client_0_8/connection.py",
line 198, in _wait_method
  File "build/bdist.linux-i686/egg/amqplib/client_0_8/method_framing.py",
line 215, in read_method
IOError: Socket closed

I will rerun with rabbit 1.8.0.

Matt



2010/6/23 Nicol?s C?sar <nico at nicocesar.com>:
> Simon told me once, It was helpful for me that time.:
> -------------------------------------------
> Well, there's erlang:memory/0.
>
> If you're using the Debian packages, type:
>
> $ sudo -u rabbitmq -H erl -remsh rabbit@`hostname` -sname foo
>
> to establish a connection to the RabbitMQ Erlang process then at the Erlang
> prompt:
>
> memory().
>
> to give some high level statistics about what's using memory.
> ---------------------------------------
>
> My 2 cents.
>
> 2010/6/23 Matt Calder <mvcalder at gmail.com>
>>
>> Matthias,
>>
>>
>> On Wed, Jun 23, 2010 at 2:52 PM, Matthias Radestock
>> <matthias at rabbitmq.com> wrote:
>> > I strongly recommend you upgrade to rabbit 1.8.0 as well.
>> >
>>
>> Will do.
>>
>> > That's the producer and consumer, right? So actually rabbit might still
>> > be
>> > running happily? Did you try restarting the clients?
>> >
>>
>> I believe it was still running because I recall seeing a message that
>> it was being stopped during the upgrade of erlang (I know, flimsy
>> evidence at best). I will be more diligent if I run into problems
>> again.
>>
>> Matt
>> _______________________________________________
>> rabbitmq-discuss mailing list
>> rabbitmq-discuss at lists.rabbitmq.com
>> http://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss
>
>

From ozhurakousky at vmware.com  Thu Jun 24 13:15:01 2010
From: ozhurakousky at vmware.com (Oleg Zhurakousky)
Date: Thu, 24 Jun 2010 05:15:01 -0700
Subject: [rabbitmq-discuss] status of available message buses
	compatible	with Java client
In-Reply-To: <2606241e-93c1-439e-aa81-af1fb613cc0c@d16g2000yqb.googlegroups.com>
References: <0f3476d2-74a8-4b6e-82d2-81e4c71d2d73@j8g2000yqd.googlegroups.com>
	<990C545C-A35B-458E-931F-1589B071B91A@vmware.com>
	<2606241e-93c1-439e-aa81-af1fb613cc0c@d16g2000yqb.googlegroups.com>
Message-ID: <824F8EE7-E784-4BC8-86AE-5214CF3F893B@vmware.com>

Shane

I would question maturity of Camel as well as some of the statements they make especially when referring to EIP.
The major problem I see with Camel is the fact that they have completely missed a major piece of EIP that allows for loosely coupled, flexible wiring of the endpoints and that is Channel abstraction. However they claim support for it on their website http://camel.apache.org/message-channel.html which is misleading. Camel uses the concept of 'routs' via rout builders essentially hard wiring two endpoints together which IMHO is the same as directly invoking consumer endpoint methods from the producer endpoint (se below) tightly coupling the two together. They've also misrepresented the concept of routing which states: "... filter which consumes message from one channels and republishes it to a different channel(s) depending on the set of conditions..." - http://www.enterpriseintegrationpatterns.com/MessageRouter.html

<route>
      <from ref="inputEndpoint"/>
      <to uri="outputEndpoint"/>
</route>

On the flip side Spring Integration provides quite a number of Channels, Routers and other EIP implementations completely decoupling producers from the consumers while allowing one to manage the behavior of how message will be retrieved by the consuming endpoint without the knowledge of producing endpoint. It also allows one to introduce the change in such behavior by changing the type of channel (from direct-channel to publish-subscribe, queue etc... channel which have different semantics when it comes to message distribution) without affecting/changing neither producing nor consuming endpoint.

This integral piece (decoupling Producers from the Consumers) of Messaging architecture is obviously well represented in AMQP which creates a great synergy between SI and Rabbit as a distributed messaging system. Producers send messages to the exchanges where such messages are routed based on the exchange type to a different queues (channels in EIP terms) to be later retrieved by the Consumers. Neither producer nor the consumer have any awareness of each other structure, implementation and even existence at any given time.

Oleg

On Jun 23, 2010, at 8:36 PM, Shane wrote:

Thanks for the thorough reply, Mark. I'm going to start looking at the
source.

Shane

On Jun 23, 8:09 pm, Mark Fisher <markfis... at vmware.com> wrote:
Shane, see my replies inline...

On Jun 23, 2010, at 6:28 PM, Shane wrote:

I'm still feeling my way around RabbitMQ (as you might have noticed
from the number of posts I've written lately). One decision I'm
wrestling with is what to use for message routing with the Java
client. I've started looking into the following:

- Writing my own helper classes with Spring
- Apache Camel
- Spring Integration with OpenCredo's contributions (amq template, amq
spring integration)

We will soon be releasing the first milestone of our Spring AMQP project. That includes support at the same basic level as Spring's JMS support (AmqpTemplate, SimpleMessageListenerContainers for Message-driven POJOs, MessageConverter strategies, and more). We will be providing Spring Integration Channel Adapters, Gateways, etc. that will build on top of that functionality.



Since RabbitMQ was recently acquired by SpringSource, SI w/OpenCredo
seems like the natural choice but there hasn't been any development on
the OpenCredo stuff since March? (looking at github).

We're going to be collaborating with OpenCredo on the project I mentioned above, and that project is actually quite active already. However, as I mentioned, we're just now approaching the first milestone release. We'll be moving to Git any moment now, but until it's moved, you can browse the current codebase here:https://src.springsource.org/svn/se-amqp/trunk/(after the move it will be at git.springsource.org/spring-amqp<http://git.springsource.org/spring-amqp>)



Although Apache Camel seems to be more mature, I'd rather go the
Spring Integration route since all of our apps already use Spring for
dependency injection, etc.

As the lead of Spring Integration, I'm a bit biased. That said, if your main concern is having a solid (and "mature" I might add) Spring foundation with implementations that are absolutely consistent with Spring, then Spring Integration is probably the best choice (and 2.0 GA is only a couple months away).



Can someone from Rabbit comment on the state of development with
respect to integration with Spring? Is the contributions from
OpenCredo going to be used?

Hopefully this question has been answered above. Let me know if there is anything that I missed.

Regards,
Mark



I'm also interested in other message bus solutions people are using
with the Java client.

Thanks again,
Shane
_______________________________________________
rabbitmq-discuss mailing list
rabbitmq-disc... at lists.rabbitmq.com
http://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss

_______________________________________________
rabbitmq-discuss mailing list
rabbitmq-disc... at lists.rabbitmq.comhttp://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss
_______________________________________________
rabbitmq-discuss mailing list
rabbitmq-discuss at lists.rabbitmq.com<mailto:rabbitmq-discuss at lists.rabbitmq.com>
http://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss


From Alister.Morton at tradition.com  Thu Jun 24 13:26:39 2010
From: Alister.Morton at tradition.com (Alister Morton)
Date: Thu, 24 Jun 2010 13:26:39 +0100
Subject: [rabbitmq-discuss] RabbitMQ C Client Intermediate Status Source
	Code
In-Reply-To: <C851C017-AE26-4BEA-BA7E-8212F5E297E4@consequor.de>
References: <C851C017-AE26-4BEA-BA7E-8212F5E297E4@consequor.de>
Message-ID: <5A46D132C446C04B9EFE8AD14E7891068350E578FD@SVR-2K3-BH-EMC.tradition.int>

> Now, codegen.py emits GNU C specific code

That, I think, is a fatal mistake. The default should be to emit completely platform neutral ANSI C code, with the ability to tweak the output for a specific platform invoked via arguments. That way all platforms start equal and then others can tweak and optimise.

The information herein may have been obtained from various sources. Any opinion expressed may be that of the sender only, is subject to change without notice and should be independently evaluated. Nothing herein constitutes investment advice or an offer, or solicitation of an offer, to buy or sell any financial product. Any data consists of purely indicative prices and should not be relied upon to revalue any commercial positions held by any recipient. Tradition makes no warranty that the data represent or indicates prices at which transactions may be or have been made by any Tradition Group company. To the maximum extent of the law, Tradition accepts no responsibility for, and cannot and does not warrant the integrity, accuracy, quality, completeness, merchantability or suitability for a particular purpose or requirement of the information or data, even if arising out of the negligence of Tradition or otherwise. Tradition accepts no liability for any direct, indirect or other consequential loss arising out of any use of the information contained in this document or any omission from it. This communication is directed at Eligible Counterparties and Professional Clients as defined by the FSA. It is not for distribution to nor should it be relied upon by Private Clients. It is not intended for distribution to, or use by any person or entity in any jurisdiction or country where such distribution or use would be contrary to any applicable law or regulation. Please note that, for business or compliance reasons, we may monitor and read emails sent or received using our servers or equipment. Tradition (UK) Ltd (937647; FSA 139200), Tradition Financial Services Ltd (1046064; FSA 147543), TFS Derivatives Ltd (4051930; FSA 197244), Tradition London Clearing Ltd (3633863; FSA 190632) and TFS-ICAP Ltd (4025995; FSA 206018) registered in England at Beaufort House, 15 St Botolph Street, London EC3A 7QX; authorised and regulated by the Financial Services Authority. VAT No: GB 365 4639 27 except TFS-ICAP GB 766 0854 05.

From frank.goenninger at consequor.de  Thu Jun 24 13:49:19 2010
From: frank.goenninger at consequor.de (=?iso-8859-1?Q?Frank_G=F6nninger?=)
Date: Thu, 24 Jun 2010 14:49:19 +0200
Subject: [rabbitmq-discuss] RabbitMQ C Client Intermediate Status Source
	Code
In-Reply-To: <5A46D132C446C04B9EFE8AD14E7891068350E578FD@SVR-2K3-BH-EMC.tradition.int>
References: <C851C017-AE26-4BEA-BA7E-8212F5E297E4@consequor.de>
	<5A46D132C446C04B9EFE8AD14E7891068350E578FD@SVR-2K3-BH-EMC.tradition.int>
Message-ID: <64813F78-58A8-4D55-B59E-6CEEC090759D@consequor.de>

Hi Alister,

Am 24.06.2010 um 14:26 schrieb Alister Morton:

>> Now, codegen.py emits GNU C specific code
> 
> That, I think, is a fatal mistake. The default should be to emit completely platform neutral ANSI C code, with the ability to tweak the output for a specific platform invoked via arguments. That way all platforms start equal and then others can tweak and optimise.

I fully agree - but: codegen.py is the utility provided and used by the RabbitMQ folks - and so I can't simply change it without first discussing the implications ;-)#

Cheers
  Frank


--
  C o n s e q u o r   C o n s u l t i n g   A G
  Frank Goenninger

  E-Mail: frank.goenninger at consequor.de
  Phone: +49 711 781 181-10
  Fax:   +49 711 781 181-11

  Consequor Consulting AG
  Liebknechstr. 33
  D-70565 Stuttgart

  Vorstand: Frank G?nninger (Vors.), Martin Melcher
  Aufsichtsratsvorsitzender: Dipl.-Kfm. Matthias Filbinger
  Sitz der Gesellschaft: 70565 Stuttgart, Deutschland
  Registergericht Amtsgericht Stuttgart HRB 727446



From david at rabbitmq.com  Thu Jun 24 14:25:49 2010
From: david at rabbitmq.com (David Wragg)
Date: Thu, 24 Jun 2010 14:25:49 +0100
Subject: [rabbitmq-discuss] RabbitMQ C Client Intermediate Status Source
	Code
In-Reply-To: <C851C017-AE26-4BEA-BA7E-8212F5E297E4@consequor.de> ("Frank
	=?utf-8?Q?G=C3=B6nninger=22's?= message of "Thu, 24 Jun 2010 12:35:40
	+0200")
References: <C851C017-AE26-4BEA-BA7E-8212F5E297E4@consequor.de>
Message-ID: <yrv4cvd98pnoi.fsf@dwragg.eng.vmware.com>

Hi Frank,

Thanks for putting your code up.

Frank G?nninger <frank.goenninger at consequor.de> writes:
> [...]
>
> Now, codegen.py emits GNU C specific code - that leaves us with "a lot
> of work" to modify codegen.py to
>
> A. Either emit ANSI C code using pure functions and avoid C "macros", or
>
> B. Emit the same #ifdef'ed code structure that has been used manually
> to adapt all other source and header files.

I'd strongly suggest option A.

In fact, I'd suggest that approach throughout the codebase.  Preserving
the gccisms using ifdefs will just makes the code harder to maintain,
without providing any particular benefits (the gccisms in the rabbitmq-c
codebase are interesting experiments, but in the cold light of day seem
a bit gratuitous).

> Meanwhile, due to presssing project deadlines, we stopped working on
> his approach and have resorted to the MINGW alternative for coding our
> application. In latest two months time, however, we will be facing a
> situation where we need to deliver a Visual Studio 2010 project used
> by the client to build the code (then to be deployed on a Windows
> Server 2008-based machine).

I know the problem of balancing deadlines and ideal solutions well.

I propose we look at merging some of your changes back into the main
rabbitmq-c repo.  While this won't yet give a pure ANSI rabbitmq-c, it
will at least move us closer to that ideal, and form a basis for future
work towards that goal.  As mentioned above, I'd prefer to kill the
gccisms completely wherever possible.  That might be as simple as
deleting the code under "#ifdef __GNUC__".

To make it possible to pull your changes back into rabbitmq-c, we will
need you to sign a contributor agreement.  I'll send you the details
off-list.

David

-- 
David Wragg
Staff Engineer, RabbitMQ
SpringSource, a division of VMware

From Alister.Morton at tradition.com  Thu Jun 24 14:26:55 2010
From: Alister.Morton at tradition.com (Alister Morton)
Date: Thu, 24 Jun 2010 14:26:55 +0100
Subject: [rabbitmq-discuss] RabbitMQ C Client Intermediate Status
	Source	Code
In-Reply-To: <64813F78-58A8-4D55-B59E-6CEEC090759D@consequor.de>
References: <C851C017-AE26-4BEA-BA7E-8212F5E297E4@consequor.de>
	<5A46D132C446C04B9EFE8AD14E7891068350E578FD@SVR-2K3-BH-EMC.tradition.int>
	<64813F78-58A8-4D55-B59E-6CEEC090759D@consequor.de>
Message-ID: <5A46D132C446C04B9EFE8AD14E7891068350E57923@SVR-2K3-BH-EMC.tradition.int>

> I fully agree - but: codegen.py is the utility provided and used by the RabbitMQ folks - and so
> I can't simply change it without first discussing the implications ;-)#

I agree - you need the original authors to make the .py script emit ANSI compliant code rather than emitting code for one specific compiler on one (family of) platform(s).

Once the gnu specifics are removed, making the relatively minor changes such as changing the socket library function names will be a breeze.

Al.

The information herein may have been obtained from various sources. Any opinion expressed may be that of the sender only, is subject to change without notice and should be independently evaluated. Nothing herein constitutes investment advice or an offer, or solicitation of an offer, to buy or sell any financial product. Any data consists of purely indicative prices and should not be relied upon to revalue any commercial positions held by any recipient. Tradition makes no warranty that the data represent or indicates prices at which transactions may be or have been made by any Tradition Group company. To the maximum extent of the law, Tradition accepts no responsibility for, and cannot and does not warrant the integrity, accuracy, quality, completeness, merchantability or suitability for a particular purpose or requirement of the information or data, even if arising out of the negligence of Tradition or otherwise. Tradition accepts no liability for any direct, indirect or other consequential loss arising out of any use of the information contained in this document or any omission from it. This communication is directed at Eligible Counterparties and Professional Clients as defined by the FSA. It is not for distribution to nor should it be relied upon by Private Clients. It is not intended for distribution to, or use by any person or entity in any jurisdiction or country where such distribution or use would be contrary to any applicable law or regulation. Please note that, for business or compliance reasons, we may monitor and read emails sent or received using our servers or equipment. Tradition (UK) Ltd (937647; FSA 139200), Tradition Financial Services Ltd (1046064; FSA 147543), TFS Derivatives Ltd (4051930; FSA 197244), Tradition London Clearing Ltd (3633863; FSA 190632) and TFS-ICAP Ltd (4025995; FSA 206018) registered in England at Beaufort House, 15 St Botolph Street, London EC3A 7QX; authorised and regulated by the Financial Services Authority. VAT No: GB 365 4639 27 except TFS-ICAP GB 766 0854 05.

From david at rabbitmq.com  Thu Jun 24 14:35:47 2010
From: david at rabbitmq.com (David Wragg)
Date: Thu, 24 Jun 2010 14:35:47 +0100
Subject: [rabbitmq-discuss] RabbitMQ C Client Intermediate Status Source
	Code
In-Reply-To: <64813F78-58A8-4D55-B59E-6CEEC090759D@consequor.de> ("Frank
	=?utf-8?Q?G=C3=B6nninger=22's?= message of "Thu, 24 Jun 2010 14:49:19
	+0200")
References: <C851C017-AE26-4BEA-BA7E-8212F5E297E4@consequor.de>
	<5A46D132C446C04B9EFE8AD14E7891068350E578FD@SVR-2K3-BH-EMC.tradition.int>
	<64813F78-58A8-4D55-B59E-6CEEC090759D@consequor.de>
Message-ID: <yrv4cr5jwpn7w.fsf@dwragg.eng.vmware.com>

Frank G?nninger <frank.goenninger at consequor.de> writes:
> [...]
>
> I fully agree - but: codegen.py is the utility provided and used by
> the RabbitMQ folks - and so I can't simply change it without first
> discussing the implications ;-)

There's no substantial difference between modifications to codegen.py
and modifications to rest of the rabbitmq-c codebase!  codegen.py, and
the rabbitmq-codegen repo it refers to, are open source and licensed in
the same way as rabbitmq-c.

-- 
David Wragg
Staff Engineer, RabbitMQ
SpringSource, a division of VMware

From shane at digitalsanctum.com  Thu Jun 24 15:40:50 2010
From: shane at digitalsanctum.com (Shane)
Date: Thu, 24 Jun 2010 07:40:50 -0700 (PDT)
Subject: [rabbitmq-discuss] status of available message buses compatible
	with Java client
In-Reply-To: <990C545C-A35B-458E-931F-1589B071B91A@vmware.com>
References: <0f3476d2-74a8-4b6e-82d2-81e4c71d2d73@j8g2000yqd.googlegroups.com>
	<990C545C-A35B-458E-931F-1589B071B91A@vmware.com>
Message-ID: <35f922e0-5aea-4ff0-a07a-64306e7a15bd@u26g2000yqu.googlegroups.com>

Mark,

I've started looking at the code it's looking good. Any estimate on
when an initial public version will be available?

Shane

On Jun 23, 8:09?pm, Mark Fisher <markfis... at vmware.com> wrote:
> Shane, see my replies inline...
>
> On Jun 23, 2010, at 6:28 PM, Shane wrote:
>
> > I'm still feeling my way around RabbitMQ (as you might have noticed
> > from the number of posts I've written lately). One decision I'm
> > wrestling with is what to use for message routing with the Java
> > client. I've started looking into the following:
>
> > - Writing my own helper classes with Spring
> > - Apache Camel
> > - Spring Integration with OpenCredo's contributions (amq template, amq
> > spring integration)
>
> We will soon be releasing the first milestone of our Spring AMQP project. That includes support at the same basic level as Spring's JMS support (AmqpTemplate, SimpleMessageListenerContainers for Message-driven POJOs, MessageConverter strategies, and more). We will be providing Spring Integration Channel Adapters, Gateways, etc. that will build on top of that functionality.
>
>
>
> > Since RabbitMQ was recently acquired by SpringSource, SI w/OpenCredo
> > seems like the natural choice but there hasn't been any development on
> > the OpenCredo stuff since March? (looking at github).
>
> We're going to be collaborating with OpenCredo on the project I mentioned above, and that project is actually quite active already. However, as I mentioned, we're just now approaching the first milestone release. We'll be moving to Git any moment now, but until it's moved, you can browse the current codebase here:https://src.springsource.org/svn/se-amqp/trunk/(after the move it will be at git.springsource.org/spring-amqp)
>
>
>
> > Although Apache Camel seems to be more mature, I'd rather go the
> > Spring Integration route since all of our apps already use Spring for
> > dependency injection, etc.
>
> As the lead of Spring Integration, I'm a bit biased. That said, if your main concern is having a solid (and "mature" I might add) Spring foundation with implementations that are absolutely consistent with Spring, then Spring Integration is probably the best choice (and 2.0 GA is only a couple months away).
>
>
>
> > Can someone from Rabbit comment on the state of development with
> > respect to integration with Spring? Is the contributions from
> > OpenCredo going to be used?
>
> Hopefully this question has been answered above. Let me know if there is anything that I missed.
>
> Regards,
> Mark
>
>
>
> > I'm also interested in other message bus solutions people are using
> > with the Java client.
>
> > Thanks again,
> > Shane
> > _______________________________________________
> > rabbitmq-discuss mailing list
> > rabbitmq-disc... at lists.rabbitmq.com
> >http://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss
>
> _______________________________________________
> rabbitmq-discuss mailing list
> rabbitmq-disc... at lists.rabbitmq.comhttp://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss

From emile at rabbitmq.com  Thu Jun 24 15:42:04 2010
From: emile at rabbitmq.com (Emile Joubert)
Date: Thu, 24 Jun 2010 15:42:04 +0100
Subject: [rabbitmq-discuss] Error running rabbitmqctl
In-Reply-To: <EA64611E-680A-4DAB-A14F-966226BAEBCD@borogove.org>
References: <DB5B9E94-F061-455E-87D2-FBAA71A02C68@borogove.org>
	<4C1F670D.2000709@rabbitmq.com>
	<2EDF35A5-2C0A-4DC8-877E-D6991844C126@borogove.org>
	<0C356678-FE8E-468D-897A-BC8AB4D9C84B@borogove.org>
	<4C21E93F.5060007@rabbitmq.com>
	<EA64611E-680A-4DAB-A14F-966226BAEBCD@borogove.org>
Message-ID: <4C236EBC.8040002@rabbitmq.com>



Hi Russell,

On 23/06/10 21:46, Russell Borogove wrote:
> 
> On Jun 23, 2010, at 4:00 AM, Emile Joubert wrote:
> 
>>>
>>> I'm still unhappy that -setcookie doesn't work on rabbitmqctl and the documentation is misleading about the cookie location.
>>
>>
>> I'm glad to hear that you found a solution, and I'd like to find out how
>> the documentation can be improved. Can you confirm whether you installed
>> rabbitmq from MacPorts or from source? The documentation that refers to
>> $MACPORTS_PREFIX/var/lib/rabbitmq/.erlang.cookie assumes MacPorts.
> 
> Yes, it's installed from MacPorts. 
> 
> The MACPORTS_PREFIX environment variable, however, doesn't appear to be 
> defined - does rabbit in fact look for such an environment variable, rather than 
> looking in a rabbitmq-server-relative location?
> 
> -Russell

I'm not a MacPorts expert, but the details in the Portfile and on the
website seem to agree. If your prefix is not defined then there might be
something wrong with your MacPorts setup?

Regards

Emile

From david at rabbitmq.com  Thu Jun 24 16:04:33 2010
From: david at rabbitmq.com (David Wragg)
Date: Thu, 24 Jun 2010 16:04:33 +0100
Subject: [rabbitmq-discuss] Error running rabbitmqctl
In-Reply-To: <4C236EBC.8040002@rabbitmq.com> (Emile Joubert's message of "Thu, 
	24 Jun 2010 15:42:04 +0100")
References: <DB5B9E94-F061-455E-87D2-FBAA71A02C68@borogove.org>
	<4C1F670D.2000709@rabbitmq.com>
	<2EDF35A5-2C0A-4DC8-877E-D6991844C126@borogove.org>
	<0C356678-FE8E-468D-897A-BC8AB4D9C84B@borogove.org>
	<4C21E93F.5060007@rabbitmq.com>
	<EA64611E-680A-4DAB-A14F-966226BAEBCD@borogove.org>
	<4C236EBC.8040002@rabbitmq.com>
Message-ID: <yrv4ceifwpj3y.fsf@dwragg.eng.vmware.com>

Emile Joubert <emile at rabbitmq.com> writes:
> Hi Russell,
> On 23/06/10 21:46, Russell Borogove wrote:
>> On Jun 23, 2010, at 4:00 AM, Emile Joubert wrote:
>> The MACPORTS_PREFIX environment variable, however, doesn't appear to
>> be defined - does rabbit in fact look for such an environment
>> variable, rather than looking in a rabbitmq-server-relative location?
>
> I'm not a MacPorts expert, but the details in the Portfile and on the
> website seem to agree. If your prefix is not defined then there might be
> something wrong with your MacPorts setup?

I think the MACPORTS_PREFIX mentioned on the site is not a real
environment variable, but just an indication that you should insert your
macports installation location there (which is normally /opt/local)

David

-- 
David Wragg
Staff Engineer, RabbitMQ
SpringSource, a division of VMware

From markfisher at vmware.com  Thu Jun 24 16:30:03 2010
From: markfisher at vmware.com (Mark Fisher)
Date: Thu, 24 Jun 2010 08:30:03 -0700
Subject: [rabbitmq-discuss] status of available message buses
	compatible	with Java client
In-Reply-To: <35f922e0-5aea-4ff0-a07a-64306e7a15bd@u26g2000yqu.googlegroups.com>
References: <0f3476d2-74a8-4b6e-82d2-81e4c71d2d73@j8g2000yqd.googlegroups.com>
	<990C545C-A35B-458E-931F-1589B071B91A@vmware.com>,
	<35f922e0-5aea-4ff0-a07a-64306e7a15bd@u26g2000yqu.googlegroups.com>
Message-ID: <392922E81643B245A905B42E3E34C24014D35168F2@EXCH-MBX-1.vmware.com>

Shane,

We are planning to release the first milestone (1.0.0.M1) on Friday July 9th.

-Mark
________________________________________
From: rabbitmq-discuss-bounces at lists.rabbitmq.com [rabbitmq-discuss-bounces at lists.rabbitmq.com] On Behalf Of Shane [shane at digitalsanctum.com]
Sent: Thursday, June 24, 2010 10:40 AM
To: rabbitmq-discuss at lists.rabbitmq.com
Subject: Re: [rabbitmq-discuss] status of available message buses compatible    with Java client

Mark,

I've started looking at the code it's looking good. Any estimate on
when an initial public version will be available?

Shane

On Jun 23, 8:09 pm, Mark Fisher <markfis... at vmware.com> wrote:
> Shane, see my replies inline...
>
> On Jun 23, 2010, at 6:28 PM, Shane wrote:
>
> > I'm still feeling my way around RabbitMQ (as you might have noticed
> > from the number of posts I've written lately). One decision I'm
> > wrestling with is what to use for message routing with the Java
> > client. I've started looking into the following:
>
> > - Writing my own helper classes with Spring
> > - Apache Camel
> > - Spring Integration with OpenCredo's contributions (amq template, amq
> > spring integration)
>
> We will soon be releasing the first milestone of our Spring AMQP project. That includes support at the same basic level as Spring's JMS support (AmqpTemplate, SimpleMessageListenerContainers for Message-driven POJOs, MessageConverter strategies, and more). We will be providing Spring Integration Channel Adapters, Gateways, etc. that will build on top of that functionality.
>
>
>
> > Since RabbitMQ was recently acquired by SpringSource, SI w/OpenCredo
> > seems like the natural choice but there hasn't been any development on
> > the OpenCredo stuff since March? (looking at github).
>
> We're going to be collaborating with OpenCredo on the project I mentioned above, and that project is actually quite active already. However, as I mentioned, we're just now approaching the first milestone release. We'll be moving to Git any moment now, but until it's moved, you can browse the current codebase here:https://src.springsource.org/svn/se-amqp/trunk/(after the move it will be at git.springsource.org/spring-amqp)
>
>
>
> > Although Apache Camel seems to be more mature, I'd rather go the
> > Spring Integration route since all of our apps already use Spring for
> > dependency injection, etc.
>
> As the lead of Spring Integration, I'm a bit biased. That said, if your main concern is having a solid (and "mature" I might add) Spring foundation with implementations that are absolutely consistent with Spring, then Spring Integration is probably the best choice (and 2.0 GA is only a couple months away).
>
>
>
> > Can someone from Rabbit comment on the state of development with
> > respect to integration with Spring? Is the contributions from
> > OpenCredo going to be used?
>
> Hopefully this question has been answered above. Let me know if there is anything that I missed.
>
> Regards,
> Mark
>
>
>
> > I'm also interested in other message bus solutions people are using
> > with the Java client.
>
> > Thanks again,
> > Shane
> > _______________________________________________
> > rabbitmq-discuss mailing list
> > rabbitmq-disc... at lists.rabbitmq.com
> >http://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss
>
> _______________________________________________
> rabbitmq-discuss mailing list
> rabbitmq-disc... at lists.rabbitmq.comhttp://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss
_______________________________________________
rabbitmq-discuss mailing list
rabbitmq-discuss at lists.rabbitmq.com
http://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss

From russell at borogove.org  Thu Jun 24 17:40:01 2010
From: russell at borogove.org (Russell Borogove)
Date: Thu, 24 Jun 2010 09:40:01 -0700
Subject: [rabbitmq-discuss] Error running rabbitmqctl
In-Reply-To: <yrv4ceifwpj3y.fsf@dwragg.eng.vmware.com>
References: <DB5B9E94-F061-455E-87D2-FBAA71A02C68@borogove.org>
	<4C1F670D.2000709@rabbitmq.com>
	<2EDF35A5-2C0A-4DC8-877E-D6991844C126@borogove.org>
	<0C356678-FE8E-468D-897A-BC8AB4D9C84B@borogove.org>
	<4C21E93F.5060007@rabbitmq.com>
	<EA64611E-680A-4DAB-A14F-966226BAEBCD@borogove.org>
	<4C236EBC.8040002@rabbitmq.com>
	<yrv4ceifwpj3y.fsf@dwragg.eng.vmware.com>
Message-ID: <4246B409-A858-42DA-8957-873745146016@borogove.org>


On Jun 24, 2010, at 8:04 AM, David Wragg wrote:

> Emile Joubert <emile at rabbitmq.com> writes:
>> Hi Russell,
>> On 23/06/10 21:46, Russell Borogove wrote:
>>> On Jun 23, 2010, at 4:00 AM, Emile Joubert wrote:
>>> The MACPORTS_PREFIX environment variable, however, doesn't appear to
>>> be defined - does rabbit in fact look for such an environment
>>> variable, rather than looking in a rabbitmq-server-relative location?
>> 
>> I'm not a MacPorts expert, but the details in the Portfile and on the
>> website seem to agree. If your prefix is not defined then there might be
>> something wrong with your MacPorts setup?
> 
> I think the MACPORTS_PREFIX mentioned on the site is not a real
> environment variable, but just an indication that you should insert your
> macports installation location there (which is normally /opt/local)
> 

That's the impression I have as well, but I wouldn't stake real money on that.

The Portfile refers to ${prefix} but that's something that's set in macports.conf, 
not in the larger environment.

So I repeat my question -- does rabbit expect such an environment variable?




From david at rabbitmq.com  Thu Jun 24 17:57:40 2010
From: david at rabbitmq.com (David Wragg)
Date: Thu, 24 Jun 2010 17:57:40 +0100
Subject: [rabbitmq-discuss] Error running rabbitmqctl
In-Reply-To: <4246B409-A858-42DA-8957-873745146016@borogove.org> (Russell
	Borogove's message of "Thu, 24 Jun 2010 09:40:01 -0700")
References: <DB5B9E94-F061-455E-87D2-FBAA71A02C68@borogove.org>
	<4C1F670D.2000709@rabbitmq.com>
	<2EDF35A5-2C0A-4DC8-877E-D6991844C126@borogove.org>
	<0C356678-FE8E-468D-897A-BC8AB4D9C84B@borogove.org>
	<4C21E93F.5060007@rabbitmq.com>
	<EA64611E-680A-4DAB-A14F-966226BAEBCD@borogove.org>
	<4C236EBC.8040002@rabbitmq.com>
	<yrv4ceifwpj3y.fsf@dwragg.eng.vmware.com>
	<4246B409-A858-42DA-8957-873745146016@borogove.org>
Message-ID: <yrv4c1vbwpdvf.fsf@dwragg.eng.vmware.com>

Hi Russell,

Russell Borogove <russell at borogove.org> writes:
> On Jun 24, 2010, at 8:04 AM, David Wragg wrote:
>> I think the MACPORTS_PREFIX mentioned on the site is not a real
>> environment variable, but just an indication that you should insert your
>> macports installation location there (which is normally /opt/local)
>
> That's the impression I have as well, but I wouldn't stake real money on that.
>
> The Portfile refers to ${prefix} but that's something that's set in
> macports.conf, not in the larger environment.
>
> So I repeat my question -- does rabbit expect such an environment
> variable?

Rabbit does not look at MACPORTS_PREFIX.  As with other macports ports,
the rabbitmq-server portfile takes its prefix from the macports config.

David

-- 
David Wragg
Staff Engineer, RabbitMQ
SpringSource, a division of VMware

From russell at borogove.org  Thu Jun 24 18:56:43 2010
From: russell at borogove.org (Russell Borogove)
Date: Thu, 24 Jun 2010 10:56:43 -0700
Subject: [rabbitmq-discuss] Error running rabbitmqctl
In-Reply-To: <yrv4c1vbwpdvf.fsf@dwragg.eng.vmware.com>
References: <DB5B9E94-F061-455E-87D2-FBAA71A02C68@borogove.org>
	<4C1F670D.2000709@rabbitmq.com>
	<2EDF35A5-2C0A-4DC8-877E-D6991844C126@borogove.org>
	<0C356678-FE8E-468D-897A-BC8AB4D9C84B@borogove.org>
	<4C21E93F.5060007@rabbitmq.com>
	<EA64611E-680A-4DAB-A14F-966226BAEBCD@borogove.org>
	<4C236EBC.8040002@rabbitmq.com>
	<yrv4ceifwpj3y.fsf@dwragg.eng.vmware.com>
	<4246B409-A858-42DA-8957-873745146016@borogove.org>
	<yrv4c1vbwpdvf.fsf@dwragg.eng.vmware.com>
Message-ID: <B02AFC0B-4429-4B0D-B1E0-11B82CBD32F7@borogove.org>


On Jun 24, 2010, at 9:57 AM, David Wragg wrote:
>> 
>> 
>> So I repeat my question -- does rabbit expect [MACPORTS_PREFIX]?
> 
> Rabbit does not look at MACPORTS_PREFIX.  As with other macports ports,
> the rabbitmq-server portfile takes its prefix from the macports config.


I was asking more about the runtime cookie-seeking behavior.

My guess is the root of the problem here is that the environment, specifically $HOME, 
isn't changed when a regular user is interactively running 'sudo rabbitmq-server' per
http://www.rabbitmq.com/install.html#running-macports. $HOME remains ~russell, so 
that's where the cookie is found:

russell at shard ~: sudo su -m rabbitmq -c "echo $HOME"
/Users/russell



-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20100624/96ef46ff/attachment.html>

From shane at digitalsanctum.com  Thu Jun 24 21:32:51 2010
From: shane at digitalsanctum.com (Shane)
Date: Thu, 24 Jun 2010 13:32:51 -0700 (PDT)
Subject: [rabbitmq-discuss] status of available message buses compatible
	with Java client
In-Reply-To: <392922E81643B245A905B42E3E34C24014D35168F2@EXCH-MBX-1.vmware.com>
References: <0f3476d2-74a8-4b6e-82d2-81e4c71d2d73@j8g2000yqd.googlegroups.com>
	<990C545C-A35B-458E-931F-1589B071B91A@vmware.com>,
	<35f922e0-5aea-4ff0-a07a-64306e7a15bd@u26g2000yqu.googlegroups.com> 
	<392922E81643B245A905B42E3E34C24014D35168F2@EXCH-MBX-1.vmware.com>
Message-ID: <d4f75ded-77c4-40d1-ab9d-993f06dcf723@u26g2000yqu.googlegroups.com>

Awesome. I noticed that the code isn't currently compatible with
version 1.8 of the java client. Are you planning on supporting 1.8 in
the short term?


On Jun 24, 11:30?am, Mark Fisher <markfis... at vmware.com> wrote:
> Shane,
>
> We are planning to release the first milestone (1.0.0.M1) on Friday July 9th.
>
> -Mark
> ________________________________________
> From: rabbitmq-discuss-boun... at lists.rabbitmq.com [rabbitmq-discuss-boun... at lists.rabbitmq.com] On Behalf Of Shane [sh... at digitalsanctum.com]
> Sent: Thursday, June 24, 2010 10:40 AM
> To: rabbitmq-disc... at lists.rabbitmq.com
> Subject: Re: [rabbitmq-discuss] status of available message buses compatible ? ?with Java client
>
> Mark,
>
> I've started looking at the code it's looking good. Any estimate on
> when an initial public version will be available?
>
> Shane
>
> On Jun 23, 8:09 pm, Mark Fisher <markfis... at vmware.com> wrote:
>
>
>
> > Shane, see my replies inline...
>
> > On Jun 23, 2010, at 6:28 PM, Shane wrote:
>
> > > I'm still feeling my way around RabbitMQ (as you might have noticed
> > > from the number of posts I've written lately). One decision I'm
> > > wrestling with is what to use for message routing with the Java
> > > client. I've started looking into the following:
>
> > > - Writing my own helper classes with Spring
> > > - Apache Camel
> > > - Spring Integration with OpenCredo's contributions (amq template, amq
> > > spring integration)
>
> > We will soon be releasing the first milestone of our Spring AMQP project. That includes support at the same basic level as Spring's JMS support (AmqpTemplate, SimpleMessageListenerContainers for Message-driven POJOs, MessageConverter strategies, and more). We will be providing Spring Integration Channel Adapters, Gateways, etc. that will build on top of that functionality.
>
> > > Since RabbitMQ was recently acquired by SpringSource, SI w/OpenCredo
> > > seems like the natural choice but there hasn't been any development on
> > > the OpenCredo stuff since March? (looking at github).
>
> > We're going to be collaborating with OpenCredo on the project I mentioned above, and that project is actually quite active already. However, as I mentioned, we're just now approaching the first milestone release. We'll be moving to Git any moment now, but until it's moved, you can browse the current codebase here:https://src.springsource.org/svn/se-amqp/trunk/(afterthe move it will be at git.springsource.org/spring-amqp)
>
> > > Although Apache Camel seems to be more mature, I'd rather go the
> > > Spring Integration route since all of our apps already use Spring for
> > > dependency injection, etc.
>
> > As the lead of Spring Integration, I'm a bit biased. That said, if your main concern is having a solid (and "mature" I might add) Spring foundation with implementations that are absolutely consistent with Spring, then Spring Integration is probably the best choice (and 2.0 GA is only a couple months away).
>
> > > Can someone from Rabbit comment on the state of development with
> > > respect to integration with Spring? Is the contributions from
> > > OpenCredo going to be used?
>
> > Hopefully this question has been answered above. Let me know if there is anything that I missed.
>
> > Regards,
> > Mark
>
> > > I'm also interested in other message bus solutions people are using
> > > with the Java client.
>
> > > Thanks again,
> > > Shane
> > > _______________________________________________
> > > rabbitmq-discuss mailing list
> > > rabbitmq-disc... at lists.rabbitmq.com
> > >http://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss
>
> > _______________________________________________
> > rabbitmq-discuss mailing list
> > rabbitmq-disc... at lists.rabbitmq.comhttp://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss
>
> _______________________________________________
> rabbitmq-discuss mailing list
> rabbitmq-disc... at lists.rabbitmq.comhttp://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss
> _______________________________________________
> rabbitmq-discuss mailing list
> rabbitmq-disc... at lists.rabbitmq.comhttps://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss

From mpollack at vmware.com  Thu Jun 24 21:44:04 2010
From: mpollack at vmware.com (Mark Pollack)
Date: Thu, 24 Jun 2010 13:44:04 -0700
Subject: [rabbitmq-discuss] status of available message buses
	compatible	with Java client
In-Reply-To: <d4f75ded-77c4-40d1-ab9d-993f06dcf723@u26g2000yqu.googlegroups.com>
References: <0f3476d2-74a8-4b6e-82d2-81e4c71d2d73@j8g2000yqd.googlegroups.com>
	<990C545C-A35B-458E-931F-1589B071B91A@vmware.com>,
	<35f922e0-5aea-4ff0-a07a-64306e7a15bd@u26g2000yqu.googlegroups.com>
	<392922E81643B245A905B42E3E34C24014D35168F2@EXCH-MBX-1.vmware.com>
	<d4f75ded-77c4-40d1-ab9d-993f06dcf723@u26g2000yqu.googlegroups.com>
Message-ID: <806F700D7E08E9408413160B05EB66672A47466558@EXCH-MBX-1.vmware.com>

Hi,

Was not planning on it for M1.  We need to see what the impact is on the underlying APIs, but it will certainly be a roadmap item if not addressed in M1.

Mark

(yes - another Mark working on the same thing at SpringSource :)

 

> -----Original Message-----
> From: rabbitmq-discuss-bounces at lists.rabbitmq.com [mailto:rabbitmq-
> discuss-bounces at lists.rabbitmq.com] On Behalf Of Shane
> Sent: Thursday, June 24, 2010 4:33 PM
> To: rabbitmq-discuss at lists.rabbitmq.com
> Subject: Re: [rabbitmq-discuss] status of available message buses
> compatible with Java client
> 
> Awesome. I noticed that the code isn't currently compatible with
> version 1.8 of the java client. Are you planning on supporting 1.8 in
> the short term?
> 
> 
> On Jun 24, 11:30?am, Mark Fisher <markfis... at vmware.com> wrote:
> > Shane,
> >
> > We are planning to release the first milestone (1.0.0.M1) on Friday
> July 9th.
> >
> > -Mark
> > ________________________________________
> > From: rabbitmq-discuss-boun... at lists.rabbitmq.com [rabbitmq-discuss-
> boun... at lists.rabbitmq.com] On Behalf Of Shane
> [sh... at digitalsanctum.com]
> > Sent: Thursday, June 24, 2010 10:40 AM
> > To: rabbitmq-disc... at lists.rabbitmq.com
> > Subject: Re: [rabbitmq-discuss] status of available message buses
> compatible ? ?with Java client
> >
> > Mark,
> >
> > I've started looking at the code it's looking good. Any estimate on
> > when an initial public version will be available?
> >
> > Shane
> >
> > On Jun 23, 8:09 pm, Mark Fisher <markfis... at vmware.com> wrote:
> >
> >
> >
> > > Shane, see my replies inline...
> >
> > > On Jun 23, 2010, at 6:28 PM, Shane wrote:
> >
> > > > I'm still feeling my way around RabbitMQ (as you might have
> noticed
> > > > from the number of posts I've written lately). One decision I'm
> > > > wrestling with is what to use for message routing with the Java
> > > > client. I've started looking into the following:
> >
> > > > - Writing my own helper classes with Spring
> > > > - Apache Camel
> > > > - Spring Integration with OpenCredo's contributions (amq
> template, amq
> > > > spring integration)
> >
> > > We will soon be releasing the first milestone of our Spring AMQP
> project. That includes support at the same basic level as Spring's JMS
> support (AmqpTemplate, SimpleMessageListenerContainers for Message-
> driven POJOs, MessageConverter strategies, and more). We will be
> providing Spring Integration Channel Adapters, Gateways, etc. that will
> build on top of that functionality.
> >
> > > > Since RabbitMQ was recently acquired by SpringSource, SI
> w/OpenCredo
> > > > seems like the natural choice but there hasn't been any
> development on
> > > > the OpenCredo stuff since March? (looking at github).
> >
> > > We're going to be collaborating with OpenCredo on the project I
> mentioned above, and that project is actually quite active already.
> However, as I mentioned, we're just now approaching the first milestone
> release. We'll be moving to Git any moment now, but until it's moved,
> you can browse the current codebase
> here:https://src.springsource.org/svn/se-amqp/trunk/(afterthe move it
> will be at git.springsource.org/spring-amqp)
> >
> > > > Although Apache Camel seems to be more mature, I'd rather go the
> > > > Spring Integration route since all of our apps already use Spring
> for
> > > > dependency injection, etc.
> >
> > > As the lead of Spring Integration, I'm a bit biased. That said, if
> your main concern is having a solid (and "mature" I might add) Spring
> foundation with implementations that are absolutely consistent with
> Spring, then Spring Integration is probably the best choice (and 2.0 GA
> is only a couple months away).
> >
> > > > Can someone from Rabbit comment on the state of development with
> > > > respect to integration with Spring? Is the contributions from
> > > > OpenCredo going to be used?
> >
> > > Hopefully this question has been answered above. Let me know if
> there is anything that I missed.
> >
> > > Regards,
> > > Mark
> >
> > > > I'm also interested in other message bus solutions people are
> using
> > > > with the Java client.
> >
> > > > Thanks again,
> > > > Shane
> > > > _______________________________________________
> > > > rabbitmq-discuss mailing list
> > > > rabbitmq-disc... at lists.rabbitmq.com
> > > >http://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-
> discuss
> >
> > > _______________________________________________
> > > rabbitmq-discuss mailing list
> > > rabbitmq-disc... at lists.rabbitmq.comhttp://lists.rabbitmq.com/cgi-
> bin/mailman/listinfo/rabbitmq-discuss
> >
> > _______________________________________________
> > rabbitmq-discuss mailing list
> > rabbitmq-disc... at lists.rabbitmq.comhttp://lists.rabbitmq.com/cgi-
> bin/mailman/listinfo/rabbitmq-discuss
> > _______________________________________________
> > rabbitmq-discuss mailing list
> > rabbitmq-disc... at lists.rabbitmq.comhttps://lists.rabbitmq.com/cgi-
> bin/mailman/listinfo/rabbitmq-discuss
> _______________________________________________
> rabbitmq-discuss mailing list
> rabbitmq-discuss at lists.rabbitmq.com
> https://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss

From natester at gmail.com  Thu Jun 24 22:13:20 2010
From: natester at gmail.com (Nathaniel Haggard)
Date: Thu, 24 Jun 2010 15:13:20 -0600
Subject: [rabbitmq-discuss] ssl certificate to client lookup
Message-ID: <AANLkTimK1NSUevhDMV-62gTSgjKXrl4hMTJNzkkcRIpI@mail.gmail.com>

It would be nice if rabbitmq set a header in messages with some
metadata from the x509 certificate used to establish the ssl
connection.  I read someone say that feature would go beyond the spec
for amqp.

Also, why not make rabbitmqctl show ssl info for each connection.

I see no way to do either thing so far.


-Nate

From david at rabbitmq.com  Fri Jun 25 01:33:40 2010
From: david at rabbitmq.com (David Wragg)
Date: Fri, 25 Jun 2010 01:33:40 +0100
Subject: [rabbitmq-discuss] Error running rabbitmqctl
In-Reply-To: <B02AFC0B-4429-4B0D-B1E0-11B82CBD32F7@borogove.org> (Russell
	Borogove's message of "Thu, 24 Jun 2010 10:56:43 -0700")
References: <DB5B9E94-F061-455E-87D2-FBAA71A02C68@borogove.org>
	<4C1F670D.2000709@rabbitmq.com>
	<2EDF35A5-2C0A-4DC8-877E-D6991844C126@borogove.org>
	<0C356678-FE8E-468D-897A-BC8AB4D9C84B@borogove.org>
	<4C21E93F.5060007@rabbitmq.com>
	<EA64611E-680A-4DAB-A14F-966226BAEBCD@borogove.org>
	<4C236EBC.8040002@rabbitmq.com>
	<yrv4ceifwpj3y.fsf@dwragg.eng.vmware.com>
	<4246B409-A858-42DA-8957-873745146016@borogove.org>
	<yrv4c1vbwpdvf.fsf@dwragg.eng.vmware.com>
	<B02AFC0B-4429-4B0D-B1E0-11B82CBD32F7@borogove.org>
Message-ID: <yrv4cr5jwvtln.fsf@dwragg.eng.vmware.com>

Hi Russell,

Russell Borogove <russell at borogove.org> writes:
> On Jun 24, 2010, at 9:57 AM, David Wragg wrote:
>>> So I repeat my question -- does rabbit expect [MACPORTS_PREFIX]?
>> 
>> Rabbit does not look at MACPORTS_PREFIX.  As with other macports ports,
>> the rabbitmq-server portfile takes its prefix from the macports config.
>
> I was asking more about the runtime cookie-seeking behavior.

Rabbit never looks at MACPORTS_PREFIX for any reason.

> My guess is the root of the problem here is that the environment,
> specifically $HOME, isn't changed when a regular user is interactively
> running 'sudo rabbitmq-server' per
> http://www.rabbitmq.com/install.html#running-macports. $HOME remains
> ~russell, so that's where the cookie is found:

Sounds plausible.

> russell at shard ~: sudo su -m rabbitmq -c "echo $HOME"
> /Users/russell

Note that, because of the double quotes, $HOME will be substituted by
your shell running as your normal user, therefore it will always reflect
your normal home directory.  You want single quotes.

I think your point is that the su line in the wrapper script used by
rabbitmqctl, rabbitmq-server, etc., as reproduced in your command above,
does not set $HOME, but due to the cookie issue, it should?

I would expect the following command to yield /Users/rabbitmq for you:

$ sudo su rabbitmq -c 'echo $HOME'

If so, the fix might just be to remove the -m option.  Right now, I
don't grasp why that option was inclued in the wrapper script.

I'll file a bug for this as soon as I've reproduced your problem.
Testing rabbitmq-server on macports is a big awkward at the moment due
to the premature inclusion of erlang R14A, so this might take a few
days.

David

-- 
David Wragg
Staff Engineer, RabbitMQ
SpringSource, a division of VMware

From russell at borogove.org  Fri Jun 25 03:06:16 2010
From: russell at borogove.org (Russell Borogove)
Date: Thu, 24 Jun 2010 19:06:16 -0700
Subject: [rabbitmq-discuss] Error running rabbitmqctl
In-Reply-To: <yrv4cr5jwvtln.fsf@dwragg.eng.vmware.com>
References: <DB5B9E94-F061-455E-87D2-FBAA71A02C68@borogove.org>
	<4C1F670D.2000709@rabbitmq.com>
	<2EDF35A5-2C0A-4DC8-877E-D6991844C126@borogove.org>
	<0C356678-FE8E-468D-897A-BC8AB4D9C84B@borogove.org>
	<4C21E93F.5060007@rabbitmq.com>
	<EA64611E-680A-4DAB-A14F-966226BAEBCD@borogove.org>
	<4C236EBC.8040002@rabbitmq.com>
	<yrv4ceifwpj3y.fsf@dwragg.eng.vmware.com>
	<4246B409-A858-42DA-8957-873745146016@borogove.org>
	<yrv4c1vbwpdvf.fsf@dwragg.eng.vmware.com>
	<B02AFC0B-4429-4B0D-B1E0-11B82CBD32F7@borogove.org>
	<yrv4cr5jwvtln.fsf@dwragg.eng.vmware.com>
Message-ID: <3B59067D-A77C-4E4C-81B7-673FABF53962@borogove.org>


On Jun 24, 2010, at 5:33 PM, David Wragg wrote:
> Russell Borogove <russell at borogove.org> writes:
>> 
>> russell at shard ~: sudo su -m rabbitmq -c "echo $HOME"
>> /Users/russell
> 
> Note that, because of the double quotes, $HOME will be substituted by
> your shell running as your normal user, therefore it will always reflect
> your normal home directory.  You want single quotes.

Oy. I remain, after 22 years of using it, a unix novice. That makes perfect
sense.

> I would expect the following command to yield /Users/rabbitmq for you:
> 
> $ sudo su rabbitmq -c 'echo $HOME'

russell at shard ~: sudo su rabbitmq -c 'echo $HOME'
Password:
su: /dev/null: Permission denied
russell at shard ~: sudo su -m rabbitmq -c 'echo $HOME'
/Users/russell
russell at shard ~: 

The user rabbitmq has /dev/null listed as a shell. 

> If so, the fix might just be to remove the -m option.  Right now, I
> don't grasp why that option was inclued in the wrapper script.
> 
> I'll file a bug for this as soon as I've reproduced your problem.
> Testing rabbitmq-server on macports is a big awkward at the moment due
> to the premature inclusion of erlang R14A, so this might take a few
> days.

No hurry; I've given up on the MacPorts version of rabbitmq. Our new strategy
is to run our development servers on Ubuntu running in VMWare, and getting 
rabbit to run there was relatively painless.



From matthew at rabbitmq.com  Fri Jun 25 12:26:19 2010
From: matthew at rabbitmq.com (Matthew Sackman)
Date: Fri, 25 Jun 2010 12:26:19 +0100
Subject: [rabbitmq-discuss] Building RabbitMQ-server with make 3.80
Message-ID: <20100625112618.GQ14541@rabbitmq.com>

Hi,

Recently several people have reported issues with building the broker
with make 3.80. This seemed to affect at least people with some versions
of OS X / xcode as well as older RHEL/Centos releases.

This has now been fixed : the head of the default branch of
rabbitmq-server now builds correctly with versions of make as old as
3.80.

It turned out to be due to depending on a variable .DEFAULT_GOAL which
was only introduced in 3.81. We've worked around that problem, and also
have a meaningful explosion if anyone tries to compile with a version of
make older than 3.80.

Needless to say, this will appear in the next release.

Matthew

From matthew at rabbitmq.com  Fri Jun 25 13:54:09 2010
From: matthew at rabbitmq.com (Matthew Sackman)
Date: Fri, 25 Jun 2010 13:54:09 +0100
Subject: [rabbitmq-discuss] How to implement the Aggregator pattern?
In-Reply-To: <40410f93-93e4-4f56-b570-3821bbcdc63d@e5g2000yqn.googlegroups.com>
References: <40410f93-93e4-4f56-b570-3821bbcdc63d@e5g2000yqn.googlegroups.com>
Message-ID: <20100625125409.GU14541@rabbitmq.com>

Hi Shane,

On Wed, Jun 23, 2010 at 07:31:42AM -0700, Shane wrote:
> I'm trying to determine the best way to implement the Aggregator
> pattern with RabbitMQ. For example, given consumers A, B and C, I need
> to run C with the results of A and B.

If you have a consumer A and B, are you saying that they're actually
doing some transformation of the message(s), publishing that, and then C
needs to receive one message from A and one message from B before
starting any work?

If so, I suggest that A and B both publish the transformed message,
maybe via different exchanges, but that each message goes to a different
queue. C consumes from both queues, but sets qos prefetch to 1, and does
not ack any message until it has received one message from each queue.
If you want to be uber purist, you would wrap both of those acks in a
transaction to have them treated atomically.

But that's a fair guess from your original description so I might be
solving the wrong problem here!

Matthew

From matthew at rabbitmq.com  Fri Jun 25 13:56:27 2010
From: matthew at rabbitmq.com (Matthew Sackman)
Date: Fri, 25 Jun 2010 13:56:27 +0100
Subject: [rabbitmq-discuss] Debugging rabbitmq crash
In-Reply-To: <AANLkTil5gYdTEucaSjhO8dW62elN6TTs_epaWFd4n6O1@mail.gmail.com>
References: <AANLkTin7KhHRKPxlwQ83CiKyysbyMFVyw5ahcEEl2nWK@mail.gmail.com>
	<4C224EFA.7070608@rabbitmq.com>
	<AANLkTilR3mULhJCgytozil6Fa-Z2o-Duyl2sUb-Tem8N@mail.gmail.com>
	<4C2257D8.4060203@rabbitmq.com>
	<AANLkTik1ev2dRlYM2ZjykiMPzYMM_yVTI9pk8u8ABXRE@mail.gmail.com>
	<AANLkTim5JGJJRUUbCKsIkhxpAGnQZoGpcFcO8LMkjDdw@mail.gmail.com>
	<AANLkTil5gYdTEucaSjhO8dW62elN6TTs_epaWFd4n6O1@mail.gmail.com>
Message-ID: <20100625125626.GV14541@rabbitmq.com>

On Thu, Jun 24, 2010 at 07:19:29AM -0400, Matt Calder wrote:
> The second run stopped in the same manner. I was running rabbitmq
> 1.7.2 and erlang 13B03. I had started before I got Matthias's
> suggestion to upgrade rabbit.  This time I captured the stack traces
> of the two processes when they stopped.

Hmm, if Rabbit itself is in trouble then there should be entries in
Rabbit's logs. It's possible it's a memory exhaustion issue, or it could
be a client issue - there are many possibilities at this point. What
information is returned by commands such as "rabbitmqctl list_queues"
etc? The rabbit logs should be the most revealing though.

How are you getting on with 1.8.0?

Matthew

From matthew at rabbitmq.com  Fri Jun 25 14:03:14 2010
From: matthew at rabbitmq.com (Matthew Sackman)
Date: Fri, 25 Jun 2010 14:03:14 +0100
Subject: [rabbitmq-discuss] ssl certificate to client lookup
In-Reply-To: <AANLkTimK1NSUevhDMV-62gTSgjKXrl4hMTJNzkkcRIpI@mail.gmail.com>
References: <AANLkTimK1NSUevhDMV-62gTSgjKXrl4hMTJNzkkcRIpI@mail.gmail.com>
Message-ID: <20100625130314.GW14541@rabbitmq.com>

Hi Nate,

On Thu, Jun 24, 2010 at 03:13:20PM -0600, Nathaniel Haggard wrote:
> It would be nice if rabbitmq set a header in messages with some
> metadata from the x509 certificate used to establish the ssl
> connection.

Err, why? If you're using certificate validation (server and/or client
side) then you *should* be able to retrieve all information you need
from whatever client you're using. However, I could well believe that if
this information is only available via the socket then you'll have a
hard time digging that out.

What's your use case though - are you trying to identify the server's
identity by checking some header in messages received from the server?
Surely the "right" solution to identity is to restrict the certificate
the client accepts from the server when the connection is established,
no?

> Also, why not make rabbitmqctl show ssl info for each connection.

That's a good idea. I'll file a bug for that.

Matthew

From mvcalder at gmail.com  Fri Jun 25 14:19:27 2010
From: mvcalder at gmail.com (Matt Calder)
Date: Fri, 25 Jun 2010 09:19:27 -0400
Subject: [rabbitmq-discuss] Debugging rabbitmq crash
In-Reply-To: <20100625125626.GV14541@rabbitmq.com>
References: <AANLkTin7KhHRKPxlwQ83CiKyysbyMFVyw5ahcEEl2nWK@mail.gmail.com> 
	<4C224EFA.7070608@rabbitmq.com>
	<AANLkTilR3mULhJCgytozil6Fa-Z2o-Duyl2sUb-Tem8N@mail.gmail.com> 
	<4C2257D8.4060203@rabbitmq.com>
	<AANLkTik1ev2dRlYM2ZjykiMPzYMM_yVTI9pk8u8ABXRE@mail.gmail.com> 
	<AANLkTim5JGJJRUUbCKsIkhxpAGnQZoGpcFcO8LMkjDdw@mail.gmail.com> 
	<AANLkTil5gYdTEucaSjhO8dW62elN6TTs_epaWFd4n6O1@mail.gmail.com> 
	<20100625125626.GV14541@rabbitmq.com>
Message-ID: <AANLkTinaDacxofOHT_TtBz6VHMzfA6jpOeI5juid1YBU@mail.gmail.com>

So, I still get the same error with latest erlang and latest rabbitmq.
I sent a message yesterday that I think did not go through ( I got an
error message from the mail delivery system). Anyway that had the
stack trace from the two python apps doing the messaging. The server
process died thusly:

 File "build/bdist.linux-i686/egg/amqplib/client_0_8/transport.py",
line 125, in write_frame
 File "<string>", line 1, in sendall
socket.error: [Errno 32] Broken pipe

and the client:

 File "build/bdist.linux-i686/egg/amqplib/client_0_8/method_framing.py",
line 215, in read_method
IOError: Socket closed

Rabbit is still running and I can just restart the pair of processes
and they work (thanks Matthias for the suggestion to check that).

I don't think rabbit is the culprit in this. I should have mentioned,
I am running the messaging through stunnel (it is all local to one
machine at the moment, but will be deployed to more machines once it
has been tested). So, I am thinking that may be part of the problem
(nest step, turn off stunnelling).

If anyone has further suggestions at tests I can run, or logs I can
inspect, let me know. Thanks for the help,

Matt

On Fri, Jun 25, 2010 at 8:56 AM, Matthew Sackman <matthew at rabbitmq.com> wrote:
> On Thu, Jun 24, 2010 at 07:19:29AM -0400, Matt Calder wrote:
>> The second run stopped in the same manner. I was running rabbitmq
>> 1.7.2 and erlang 13B03. I had started before I got Matthias's
>> suggestion to upgrade rabbit. ?This time I captured the stack traces
>> of the two processes when they stopped.
>
> Hmm, if Rabbit itself is in trouble then there should be entries in
> Rabbit's logs. It's possible it's a memory exhaustion issue, or it could
> be a client issue - there are many possibilities at this point. What
> information is returned by commands such as "rabbitmqctl list_queues"
> etc? The rabbit logs should be the most revealing though.
>
> How are you getting on with 1.8.0?
>
> Matthew
> _______________________________________________
> rabbitmq-discuss mailing list
> rabbitmq-discuss at lists.rabbitmq.com
> https://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss
>

From matthew at rabbitmq.com  Fri Jun 25 15:12:45 2010
From: matthew at rabbitmq.com (Matthew Sackman)
Date: Fri, 25 Jun 2010 15:12:45 +0100
Subject: [rabbitmq-discuss] Debugging rabbitmq crash
In-Reply-To: <AANLkTinaDacxofOHT_TtBz6VHMzfA6jpOeI5juid1YBU@mail.gmail.com>
References: <AANLkTin7KhHRKPxlwQ83CiKyysbyMFVyw5ahcEEl2nWK@mail.gmail.com>
	<4C224EFA.7070608@rabbitmq.com>
	<AANLkTilR3mULhJCgytozil6Fa-Z2o-Duyl2sUb-Tem8N@mail.gmail.com>
	<4C2257D8.4060203@rabbitmq.com>
	<AANLkTik1ev2dRlYM2ZjykiMPzYMM_yVTI9pk8u8ABXRE@mail.gmail.com>
	<AANLkTim5JGJJRUUbCKsIkhxpAGnQZoGpcFcO8LMkjDdw@mail.gmail.com>
	<AANLkTil5gYdTEucaSjhO8dW62elN6TTs_epaWFd4n6O1@mail.gmail.com>
	<20100625125626.GV14541@rabbitmq.com>
	<AANLkTinaDacxofOHT_TtBz6VHMzfA6jpOeI5juid1YBU@mail.gmail.com>
Message-ID: <20100625141244.GX14541@rabbitmq.com>

Hi Matt,

On Fri, Jun 25, 2010 at 09:19:27AM -0400, Matt Calder wrote:
> If anyone has further suggestions at tests I can run, or logs I can
> inspect, let me know. Thanks for the help,

I would be curious if you checked the rabbit.log and rabbit-sasl.log
logs for entries around the time that the clients get disconnected.
You appear to be on a linux, so they should be in /var/log/rabbitmq/

Matthew

From emil.vladev at gmail.com  Fri Jun 25 15:37:54 2010
From: emil.vladev at gmail.com (=?UTF-8?B?0JXQvNC40Lsg0JjQstCw0L3QvtCyIC8gRW1pbCBJdmFub3Y=?=)
Date: Fri, 25 Jun 2010 17:37:54 +0300
Subject: [rabbitmq-discuss] rabbitmq-jsonrpc-chanel via mod_proxy
Message-ID: <AANLkTikyxaihxeMIHob_wpgiDVzuVdMnD0CgXXR918Gw@mail.gmail.com>

Good day,

Has anyone managed to get rabbitmq-jsonrpc-chanel working via
mod_proxy (apache)? I keep getting NotFound from Mochiweb

This is the rule in apache conf I'm using:

ProxyPass /rabbit http://localhost:55672/

But when I visit http://localhost/rabbit/test/index.html I get a 404
on index.html (with header Server: MochiWeb/1.0 (Any of you quaids got
a smint?))

http://localhost/rabbit/ gives 404 as well.

Regards,
Emil

-- 
My place to share my ideas:
http://bolddream.com (now live :)

From emile at rabbitmq.com  Fri Jun 25 16:04:16 2010
From: emile at rabbitmq.com (Emile Joubert)
Date: Fri, 25 Jun 2010 16:04:16 +0100
Subject: [rabbitmq-discuss] rabbitmq-jsonrpc-chanel via mod_proxy
In-Reply-To: <AANLkTikyxaihxeMIHob_wpgiDVzuVdMnD0CgXXR918Gw@mail.gmail.com>
References: <AANLkTikyxaihxeMIHob_wpgiDVzuVdMnD0CgXXR918Gw@mail.gmail.com>
Message-ID: <4C24C570.9090206@rabbitmq.com>


Hi ????,

Do you maybe need
ProxyPassReverse /rabbit http://localhost:55672/
as well?

Regards

Emile



On 25/06/10 15:37, ???? ?????? / Emil Ivanov wrote:
> Good day,
> 
> Has anyone managed to get rabbitmq-jsonrpc-chanel working via
> mod_proxy (apache)? I keep getting NotFound from Mochiweb
> 
> This is the rule in apache conf I'm using:
> 
> ProxyPass /rabbit http://localhost:55672/
> 
> But when I visit http://localhost/rabbit/test/index.html I get a 404
> on index.html (with header Server: MochiWeb/1.0 (Any of you quaids got
> a smint?))
> 
> http://localhost/rabbit/ gives 404 as well.
> 
> Regards,
> Emil
> 


From emil.vladev at gmail.com  Fri Jun 25 16:15:37 2010
From: emil.vladev at gmail.com (emil.vladev at gmail.com)
Date: Fri, 25 Jun 2010 15:15:37 +0000
Subject: [rabbitmq-discuss] rabbitmq-jsonrpc-chanel via mod_proxy
In-Reply-To: <4C24C570.9090206@rabbitmq.com>
Message-ID: <001485eb00e74e270f0489dc3e49@google.com>

I have forgotten it - but it doesn't help - same behaviour.

Regards

On Jun 25, 2010 6:04pm, Emile Joubert <emile at rabbitmq.com> wrote:


> Hi ????,



> Do you maybe need

> ProxyPassReverse /rabbit http://localhost:55672/

> as well?



> Regards



> Emile







> On 25/06/10 15:37, ???? ?????? / Emil Ivanov wrote:

> > Good day,

> >

> > Has anyone managed to get rabbitmq-jsonrpc-chanel working via

> > mod_proxy (apache)? I keep getting NotFound from Mochiweb

> >

> > This is the rule in apache conf I'm using:

> >

> > ProxyPass /rabbit http://localhost:55672/

> >

> > But when I visit http://localhost/rabbit/test/index.html I get a 404

> > on index.html (with header Server: MochiWeb/1.0 (Any of you quaids got

> > a smint?))

> >

> > http://localhost/rabbit/ gives 404 as well.

> >

> > Regards,

> > Emil

> >



-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20100625/7deb4279/attachment.htm>

From emil.vladev at gmail.com  Fri Jun 25 16:36:10 2010
From: emil.vladev at gmail.com (emil.vladev at gmail.com)
Date: Fri, 25 Jun 2010 15:36:10 +0000
Subject: [rabbitmq-discuss] rabbitmq-jsonrpc-chanel via mod_proxy
In-Reply-To: <001485eb00e74e270f0489dc3e49@google.com>
Message-ID: <001485f778b4c66a7f0489dc8793@google.com>

Ok, it seems that the problem is with the jsonrpc-chanel examples - paths  
to js files and css files are absolute. Maybe this should be changed so the  
examples are a bit more portable.

Regards

On Jun 25, 2010 6:15pm, emil.vladev at gmail.com wrote:
> I have forgotten it - but it doesn't help - same behaviour.

> Regards

> On Jun 25, 2010 6:04pm, Emile Joubert emile at rabbitmq.com> wrote:
> >
> >
> > Hi ????,
> >
> >
> >
> > Do you maybe need
> >
> > ProxyPassReverse /rabbit http://localhost:55672/
> >
> > as well?
> >
> >
> >
> > Regards
> >
> >
> >
> > Emile
> >
> >
> >
> >
> >
> >
> >
> > On 25/06/10 15:37, ???? ?????? / Emil Ivanov wrote:
> >
> > > Good day,
> >
> > >
> >
> > > Has anyone managed to get rabbitmq-jsonrpc-chanel working via
> >
> > > mod_proxy (apache)? I keep getting NotFound from Mochiweb
> >
> > >
> >
> > > This is the rule in apache conf I'm using:
> >
> > >
> >
> > > ProxyPass /rabbit http://localhost:55672/
> >
> > >
> >
> > > But when I visit http://localhost/rabbit/test/index.html I get a 404
> >
> > > on index.html (with header Server: MochiWeb/1.0 (Any of you quaids got
> >
> > > a smint?))
> >
> > >
> >
> > > http://localhost/rabbit/ gives 404 as well.
> >
> > >
> >
> > > Regards,
> >
> > > Emil
> >
> > >
> >
> >
> >
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20100625/4cd15daa/attachment.htm>

From mvcalder at gmail.com  Fri Jun 25 17:00:07 2010
From: mvcalder at gmail.com (Matt Calder)
Date: Fri, 25 Jun 2010 12:00:07 -0400
Subject: [rabbitmq-discuss] Debugging rabbitmq crash
In-Reply-To: <20100625141244.GX14541@rabbitmq.com>
References: <AANLkTin7KhHRKPxlwQ83CiKyysbyMFVyw5ahcEEl2nWK@mail.gmail.com> 
	<4C224EFA.7070608@rabbitmq.com>
	<AANLkTilR3mULhJCgytozil6Fa-Z2o-Duyl2sUb-Tem8N@mail.gmail.com> 
	<4C2257D8.4060203@rabbitmq.com>
	<AANLkTik1ev2dRlYM2ZjykiMPzYMM_yVTI9pk8u8ABXRE@mail.gmail.com> 
	<AANLkTim5JGJJRUUbCKsIkhxpAGnQZoGpcFcO8LMkjDdw@mail.gmail.com> 
	<AANLkTil5gYdTEucaSjhO8dW62elN6TTs_epaWFd4n6O1@mail.gmail.com> 
	<20100625125626.GV14541@rabbitmq.com>
	<AANLkTinaDacxofOHT_TtBz6VHMzfA6jpOeI5juid1YBU@mail.gmail.com> 
	<20100625141244.GX14541@rabbitmq.com>
Message-ID: <AANLkTim5D04r_ZYEtHYHyL_V9k9Kgs6QHxPLLWC1Y5dT@mail.gmail.com>

Matthew,

These were the rabbit logs, and the sasl log was empty. I am now
looking at turning stunnel off. I'll post an update when (if) that
dies.

Thanks,

Matt

=INFO REPORT==== 22-Jun-2010::18:03:03 ===
accepted TCP connection on 0.0.0.0:5672 from 127.0.0.1:55824

=INFO REPORT==== 22-Jun-2010::18:03:03 ===
starting TCP connection <0.15621.0> from 127.0.0.1:55824

=INFO REPORT==== 23-Jun-2010::01:59:00 ===
   alarm_handler: {set,{system_memory_high_watermark,[]}}

=INFO REPORT==== 23-Jun-2010::02:02:55 ===
   alarm_handler: {clear,system_memory_high_watermark}

=WARNING REPORT==== 23-Jun-2010::06:27:37 ===
exception on TCP connection <0.15425.0> from 127.0.0.1:47025
connection_closed_abruptly

=INFO REPORT==== 23-Jun-2010::06:27:37 ===
closing TCP connection <0.15425.0> from 127.0.0.1:47025

=WARNING REPORT==== 23-Jun-2010::06:27:37 ===
exception on TCP connection <0.15621.0> from 127.0.0.1:55824
connection_closed_abruptly

=INFO REPORT==== 23-Jun-2010::06:27:37 ===
closing TCP connection <0.15621.0> from 127.0.0.1:55824




On Fri, Jun 25, 2010 at 10:12 AM, Matthew Sackman <matthew at rabbitmq.com> wrote:
> Hi Matt,
>
> On Fri, Jun 25, 2010 at 09:19:27AM -0400, Matt Calder wrote:
>> If anyone has further suggestions at tests I can run, or logs I can
>> inspect, let me know. Thanks for the help,
>
> I would be curious if you checked the rabbit.log and rabbit-sasl.log
> logs for entries around the time that the clients get disconnected.
> You appear to be on a linux, so they should be in /var/log/rabbitmq/
>
> Matthew
>

From matthew at rabbitmq.com  Fri Jun 25 17:16:08 2010
From: matthew at rabbitmq.com (Matthew Sackman)
Date: Fri, 25 Jun 2010 17:16:08 +0100
Subject: [rabbitmq-discuss] Debugging rabbitmq crash
In-Reply-To: <AANLkTim5D04r_ZYEtHYHyL_V9k9Kgs6QHxPLLWC1Y5dT@mail.gmail.com>
References: <4C224EFA.7070608@rabbitmq.com>
	<AANLkTilR3mULhJCgytozil6Fa-Z2o-Duyl2sUb-Tem8N@mail.gmail.com>
	<4C2257D8.4060203@rabbitmq.com>
	<AANLkTik1ev2dRlYM2ZjykiMPzYMM_yVTI9pk8u8ABXRE@mail.gmail.com>
	<AANLkTim5JGJJRUUbCKsIkhxpAGnQZoGpcFcO8LMkjDdw@mail.gmail.com>
	<AANLkTil5gYdTEucaSjhO8dW62elN6TTs_epaWFd4n6O1@mail.gmail.com>
	<20100625125626.GV14541@rabbitmq.com>
	<AANLkTinaDacxofOHT_TtBz6VHMzfA6jpOeI5juid1YBU@mail.gmail.com>
	<20100625141244.GX14541@rabbitmq.com>
	<AANLkTim5D04r_ZYEtHYHyL_V9k9Kgs6QHxPLLWC1Y5dT@mail.gmail.com>
Message-ID: <20100625161607.GB21998@rabbitmq.com>

Hi Matt,

On Fri, Jun 25, 2010 at 12:00:07PM -0400, Matt Calder wrote:
> =INFO REPORT==== 23-Jun-2010::01:59:00 ===
>    alarm_handler: {set,{system_memory_high_watermark,[]}}
> 
> =INFO REPORT==== 23-Jun-2010::02:02:55 ===
>    alarm_handler: {clear,system_memory_high_watermark}
> 
> =WARNING REPORT==== 23-Jun-2010::06:27:37 ===
> exception on TCP connection <0.15425.0> from 127.0.0.1:47025
> connection_closed_abruptly
> 
> =INFO REPORT==== 23-Jun-2010::06:27:37 ===
> closing TCP connection <0.15425.0> from 127.0.0.1:47025

This is very interesting. Rabbit did run out of memory, but then later
recovered. And then some 4 hours later, the client was kicked off. The
python client doesn't handle channel.flow (the server raises this when
it runs out of memory which is asking the client to stop publishing
messages - see http://www.rabbitmq.com/extensions.html#memsup). Do you
have any evidence that the client managed to do anything at all between
2am and 6:30am? I wonder if there is some very long timeout somewhere
and that you're actually hitting a limitation in the python client which
for some reason takes 4.5 hours until the client gets kicked off. Lots
of guessing here though...

Matthew

From mvcalder at gmail.com  Fri Jun 25 17:32:37 2010
From: mvcalder at gmail.com (Matt Calder)
Date: Fri, 25 Jun 2010 12:32:37 -0400
Subject: [rabbitmq-discuss] Debugging rabbitmq crash
In-Reply-To: <20100625161607.GB21998@rabbitmq.com>
References: <4C224EFA.7070608@rabbitmq.com>
	<AANLkTilR3mULhJCgytozil6Fa-Z2o-Duyl2sUb-Tem8N@mail.gmail.com> 
	<4C2257D8.4060203@rabbitmq.com>
	<AANLkTik1ev2dRlYM2ZjykiMPzYMM_yVTI9pk8u8ABXRE@mail.gmail.com> 
	<AANLkTim5JGJJRUUbCKsIkhxpAGnQZoGpcFcO8LMkjDdw@mail.gmail.com> 
	<AANLkTil5gYdTEucaSjhO8dW62elN6TTs_epaWFd4n6O1@mail.gmail.com> 
	<20100625125626.GV14541@rabbitmq.com>
	<AANLkTinaDacxofOHT_TtBz6VHMzfA6jpOeI5juid1YBU@mail.gmail.com> 
	<20100625141244.GX14541@rabbitmq.com>
	<AANLkTim5D04r_ZYEtHYHyL_V9k9Kgs6QHxPLLWC1Y5dT@mail.gmail.com> 
	<20100625161607.GB21998@rabbitmq.com>
Message-ID: <AANLkTikZ-8t7A0qa7nUb7uBtdnP6NVFk0rEoaNQNo2qb@mail.gmail.com>

Matthew,

I had not checked, but, the client was writing right up to 6:27. The
client was processing a very large job at the time of the memory
warning, so, that makes sense. But it appears to have pushed on and
processed several hundred more jobs (each job results in 10-100+
message exchanges between client and server).

Matt



On Fri, Jun 25, 2010 at 12:16 PM, Matthew Sackman <matthew at rabbitmq.com> wrote:
> Hi Matt,
>
> On Fri, Jun 25, 2010 at 12:00:07PM -0400, Matt Calder wrote:
>> =INFO REPORT==== 23-Jun-2010::01:59:00 ===
>> ? ?alarm_handler: {set,{system_memory_high_watermark,[]}}
>>
>> =INFO REPORT==== 23-Jun-2010::02:02:55 ===
>> ? ?alarm_handler: {clear,system_memory_high_watermark}
>>
>> =WARNING REPORT==== 23-Jun-2010::06:27:37 ===
>> exception on TCP connection <0.15425.0> from 127.0.0.1:47025
>> connection_closed_abruptly
>>
>> =INFO REPORT==== 23-Jun-2010::06:27:37 ===
>> closing TCP connection <0.15425.0> from 127.0.0.1:47025
>
> This is very interesting. Rabbit did run out of memory, but then later
> recovered. And then some 4 hours later, the client was kicked off. The
> python client doesn't handle channel.flow (the server raises this when
> it runs out of memory which is asking the client to stop publishing
> messages - see http://www.rabbitmq.com/extensions.html#memsup). Do you
> have any evidence that the client managed to do anything at all between
> 2am and 6:30am? I wonder if there is some very long timeout somewhere
> and that you're actually hitting a limitation in the python client which
> for some reason takes 4.5 hours until the client gets kicked off. Lots
> of guessing here though...
>
> Matthew
>

From emil.vladev at gmail.com  Fri Jun 25 17:35:57 2010
From: emil.vladev at gmail.com (=?UTF-8?B?0JXQvNC40Lsg0JjQstCw0L3QvtCyIC8gRW1pbCBJdmFub3Y=?=)
Date: Fri, 25 Jun 2010 19:35:57 +0300
Subject: [rabbitmq-discuss] rabbitmq-jsonrpc-chanel via mod_proxy
In-Reply-To: <001485f778b4c66a7f0489dc8793@google.com>
References: <001485eb00e74e270f0489dc3e49@google.com>
	<001485f778b4c66a7f0489dc8793@google.com>
Message-ID: <AANLkTimqpONBhdK92KcU2rSlwL537CyTZnHgtTR7PlCF@mail.gmail.com>

But this is not the only problem - trying to access
/rabbit/rpc/rabbitmq json-rpc service returns 404 as well.

Is there any configuration that needs to be done so rabbitmq deals
well with the paths?

Regards

2010/6/25  <emil.vladev at gmail.com>:
> Ok, it seems that the problem is with the jsonrpc-chanel examples - paths to
> js files and css files are absolute. Maybe this should be changed so the
> examples are a bit more portable.
>
> Regards
>
> On Jun 25, 2010 6:15pm, emil.vladev at gmail.com wrote:
>> I have forgotten it - but it doesn't help - same behaviour.
>>
>> Regards
>>
>> On Jun 25, 2010 6:04pm, Emile Joubert emile at rabbitmq.com> wrote:
>> >
>> >
>> > Hi ????,
>> >
>> >
>> >
>> > Do you maybe need
>> >
>> > ProxyPassReverse /rabbit http://localhost:55672/
>> >
>> > as well?
>> >
>> >
>> >
>> > Regards
>> >
>> >
>> >
>> > Emile
>> >
>> >
>> >
>> >
>> >
>> >
>> >
>> > On 25/06/10 15:37, ???? ?????? / Emil Ivanov wrote:
>> >
>> > > Good day,
>> >
>> > >
>> >
>> > > Has anyone managed to get rabbitmq-jsonrpc-chanel working via
>> >
>> > > mod_proxy (apache)? I keep getting NotFound from Mochiweb
>> >
>> > >
>> >
>> > > This is the rule in apache conf I'm using:
>> >
>> > >
>> >
>> > > ProxyPass /rabbit http://localhost:55672/
>> >
>> > >
>> >
>> > > But when I visit http://localhost/rabbit/test/index.html I get a 404
>> >
>> > > on index.html (with header Server: MochiWeb/1.0 (Any of you quaids got
>> >
>> > > a smint?))
>> >
>> > >
>> >
>> > > http://localhost/rabbit/ gives 404 as well.
>> >
>> > >
>> >
>> > > Regards,
>> >
>> > > Emil
>> >
>> > >
>> >
>> >
>> >



-- 
My place to share my ideas:
http://bolddream.com (now live :)

From matthew at rabbitmq.com  Fri Jun 25 17:37:04 2010
From: matthew at rabbitmq.com (Matthew Sackman)
Date: Fri, 25 Jun 2010 17:37:04 +0100
Subject: [rabbitmq-discuss] Debugging rabbitmq crash
In-Reply-To: <AANLkTikZ-8t7A0qa7nUb7uBtdnP6NVFk0rEoaNQNo2qb@mail.gmail.com>
References: <4C2257D8.4060203@rabbitmq.com>
	<AANLkTik1ev2dRlYM2ZjykiMPzYMM_yVTI9pk8u8ABXRE@mail.gmail.com>
	<AANLkTim5JGJJRUUbCKsIkhxpAGnQZoGpcFcO8LMkjDdw@mail.gmail.com>
	<AANLkTil5gYdTEucaSjhO8dW62elN6TTs_epaWFd4n6O1@mail.gmail.com>
	<20100625125626.GV14541@rabbitmq.com>
	<AANLkTinaDacxofOHT_TtBz6VHMzfA6jpOeI5juid1YBU@mail.gmail.com>
	<20100625141244.GX14541@rabbitmq.com>
	<AANLkTim5D04r_ZYEtHYHyL_V9k9Kgs6QHxPLLWC1Y5dT@mail.gmail.com>
	<20100625161607.GB21998@rabbitmq.com>
	<AANLkTikZ-8t7A0qa7nUb7uBtdnP6NVFk0rEoaNQNo2qb@mail.gmail.com>
Message-ID: <20100625163703.GC21998@rabbitmq.com>

Matt,

On Fri, Jun 25, 2010 at 12:32:37PM -0400, Matt Calder wrote:
> I had not checked, but, the client was writing right up to 6:27. The
> client was processing a very large job at the time of the memory
> warning, so, that makes sense. But it appears to have pushed on and
> processed several hundred more jobs (each job results in 10-100+
> message exchanges between client and server).

Well in which case, I'm (temporarily) all out of ideas. Let us know what
happens with your stunnel experiment - I have no reason to suspect
stunnel, but you never know!

Matthew

From nick at blitware.com  Fri Jun 25 19:01:23 2010
From: nick at blitware.com (Nick Richardson)
Date: Fri, 25 Jun 2010 11:01:23 -0700
Subject: [rabbitmq-discuss] rabbitmq-server and stomp on debian
Message-ID: <AANLkTimGyjR8OtN_VAV8BBxeu_pKLJYapcLiOOhWRl54@mail.gmail.com>

Hello,

I am attempting to install rabbitmq-server and the Stomp adapter on a Debian
5.0 machine, and I cannot seem to get Stomp to compile.

Though outdated, this was the only tutorial I could find via Google:
http://blog.ibd.com/scalable-deployment/deploying-rabbitmq-and-stomp-on-ubuntu/

Following its instructions, I have installed rabbitmq-server successfully
via dpkg/apt-get.  I then checked out the rabbitmq-stomp code into the
folder /usr/lib/erlang/lib/ (again, as per instructions).  This is where
everything begins to fall apart :)

After checking out the rabbitmq-stomp code, I am to change dir into
/usr/lib/erlang/lib/rabbitmq-stomp and execute this:

make RABBIT_SERVER_SOURCE_ROOT=../rabbitmq_server-1.x.x all

It seems the rabbitmq-server source code should be located in
/usr/lib/erlang/lib/rabbitmq_server-x.x.x, buuut it's not.  Instead, it has
been placed in the directory /usr/lib/rabbitmq/lib/rabbitmq_server-1.8.0/.
 "No biggie, I will just specify that dir instead" I figured.  However, I'm
now met with this error:

RabbitMQ1:/usr/lib/erlang/lib/rabbitmq-stomp# make
RABBIT_SERVER_SOURCE_ROOT=/usr/lib/rabbitmq/lib/rabbitmq_server-1.8.0/
Makefile:10: ../include.mk: No such file or directory
make: *** No rule to make target `../include.mk'.  Stop.

I should note that I can set RABBIT_SERVER_SOURCE_ROOT to anything and I'm
met with the same error.

I have used "locate" to find include.mk, but I don't have a file of that
name on my system at all.

Has anyone else encountered this headache?  My only goal here is to get
rabbitmq-server running with the Stomp adapter on a Debian 5 system.  How do
I accomplish this?

Thanks in advance for any help you can provide,
-Nick
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20100625/a39730ff/attachment.htm>

From henry.baxter at gmail.com  Fri Jun 25 19:09:56 2010
From: henry.baxter at gmail.com (Henry Baxter)
Date: Fri, 25 Jun 2010 11:09:56 -0700
Subject: [rabbitmq-discuss] rabbitmq-server and stomp on debian
In-Reply-To: <AANLkTimGyjR8OtN_VAV8BBxeu_pKLJYapcLiOOhWRl54@mail.gmail.com>
References: <AANLkTimGyjR8OtN_VAV8BBxeu_pKLJYapcLiOOhWRl54@mail.gmail.com>
Message-ID: <AANLkTikjIaNybknQxhn_A2veqE1CDFePgRze7fECOOpn@mail.gmail.com>

Here is some good documentation:
http://hg.rabbitmq.com/rabbitmq-stomp/file/default/README

I would suggest building the server and the adapter from source. After that
it's just a matter of integrating it into your operating environment. On
Debian, since you already have apt-get installed it, you can see how the
package maintainers suggest things are layed out (do a `sudo which
rabbitmqctl` then read that to see what they're up to, also the
/etc/init.d/rabbitmq-server script).


Henry

On Fri, Jun 25, 2010 at 11:01, Nick Richardson <nick at blitware.com> wrote:

> Hello,
>
> I am attempting to install rabbitmq-server and the Stomp adapter on a
> Debian 5.0 machine, and I cannot seem to get Stomp to compile.
>
> Though outdated, this was the only tutorial I could find via Google:
> http://blog.ibd.com/scalable-deployment/deploying-rabbitmq-and-stomp-on-ubuntu/
>
> Following its instructions, I have installed rabbitmq-server successfully
> via dpkg/apt-get.  I then checked out the rabbitmq-stomp code into the
> folder /usr/lib/erlang/lib/ (again, as per instructions).  This is where
> everything begins to fall apart :)
>
> After checking out the rabbitmq-stomp code, I am to change dir into
> /usr/lib/erlang/lib/rabbitmq-stomp and execute this:
>
> make RABBIT_SERVER_SOURCE_ROOT=../rabbitmq_server-1.x.x all
>
> It seems the rabbitmq-server source code should be located in
> /usr/lib/erlang/lib/rabbitmq_server-x.x.x, buuut it's not.  Instead, it has
> been placed in the directory /usr/lib/rabbitmq/lib/rabbitmq_server-1.8.0/.
>  "No biggie, I will just specify that dir instead" I figured.  However, I'm
> now met with this error:
>
> RabbitMQ1:/usr/lib/erlang/lib/rabbitmq-stomp# make
> RABBIT_SERVER_SOURCE_ROOT=/usr/lib/rabbitmq/lib/rabbitmq_server-1.8.0/
> Makefile:10: ../include.mk: No such file or directory
> make: *** No rule to make target `../include.mk'.  Stop.
>
> I should note that I can set RABBIT_SERVER_SOURCE_ROOT to anything and I'm
> met with the same error.
>
> I have used "locate" to find include.mk, but I don't have a file of that
> name on my system at all.
>
> Has anyone else encountered this headache?  My only goal here is to get
> rabbitmq-server running with the Stomp adapter on a Debian 5 system.  How do
> I accomplish this?
>
> Thanks in advance for any help you can provide,
> -Nick
>
> _______________________________________________
> rabbitmq-discuss mailing list
> rabbitmq-discuss at lists.rabbitmq.com
> https://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20100625/30e52b98/attachment.htm>

From kapouer at melix.org  Fri Jun 25 19:15:43 2010
From: kapouer at melix.org (=?ISO-8859-1?Q?J=E9r=E9my_Lal?=)
Date: Fri, 25 Jun 2010 20:15:43 +0200
Subject: [rabbitmq-discuss] rabbitmq-server and stomp on debian
In-Reply-To: <AANLkTikjIaNybknQxhn_A2veqE1CDFePgRze7fECOOpn@mail.gmail.com>
References: <AANLkTimGyjR8OtN_VAV8BBxeu_pKLJYapcLiOOhWRl54@mail.gmail.com>
	<AANLkTikjIaNybknQxhn_A2veqE1CDFePgRze7fECOOpn@mail.gmail.com>
Message-ID: <4C24F24F.3060902@melix.org>

I just uploaded this :
http://mentors.debian.net/cgi-bin/sponsor-pkglist?action=details;package=rabbitmq-stomp

download the source and see how it compiles.

Regards,
J?r?my.

On 25/06/2010 20:09, Henry Baxter wrote:
> Here is some good documentation:
> http://hg.rabbitmq.com/rabbitmq-stomp/file/default/README
> 
> I would suggest building the server and the adapter from source. After that
> it's just a matter of integrating it into your operating environment. On
> Debian, since you already have apt-get installed it, you can see how the
> package maintainers suggest things are layed out (do a `sudo which
> rabbitmqctl` then read that to see what they're up to, also the
> /etc/init.d/rabbitmq-server script).
> 
> 
> Henry
> 
> On Fri, Jun 25, 2010 at 11:01, Nick Richardson <nick at blitware.com> wrote:
> 
>> Hello,
>>
>> I am attempting to install rabbitmq-server and the Stomp adapter on a
>> Debian 5.0 machine, and I cannot seem to get Stomp to compile.
>>
>> Though outdated, this was the only tutorial I could find via Google:
>> http://blog.ibd.com/scalable-deployment/deploying-rabbitmq-and-stomp-on-ubuntu/
>>
>> Following its instructions, I have installed rabbitmq-server successfully
>> via dpkg/apt-get.  I then checked out the rabbitmq-stomp code into the
>> folder /usr/lib/erlang/lib/ (again, as per instructions).  This is where
>> everything begins to fall apart :)
>>
>> After checking out the rabbitmq-stomp code, I am to change dir into
>> /usr/lib/erlang/lib/rabbitmq-stomp and execute this:
>>
>> make RABBIT_SERVER_SOURCE_ROOT=../rabbitmq_server-1.x.x all
>>
>> It seems the rabbitmq-server source code should be located in
>> /usr/lib/erlang/lib/rabbitmq_server-x.x.x, buuut it's not.  Instead, it has
>> been placed in the directory /usr/lib/rabbitmq/lib/rabbitmq_server-1.8.0/.
>>  "No biggie, I will just specify that dir instead" I figured.  However, I'm
>> now met with this error:
>>
>> RabbitMQ1:/usr/lib/erlang/lib/rabbitmq-stomp# make
>> RABBIT_SERVER_SOURCE_ROOT=/usr/lib/rabbitmq/lib/rabbitmq_server-1.8.0/
>> Makefile:10: ../include.mk: No such file or directory
>> make: *** No rule to make target `../include.mk'.  Stop.
>>
>> I should note that I can set RABBIT_SERVER_SOURCE_ROOT to anything and I'm
>> met with the same error.
>>
>> I have used "locate" to find include.mk, but I don't have a file of that
>> name on my system at all.
>>
>> Has anyone else encountered this headache?  My only goal here is to get
>> rabbitmq-server running with the Stomp adapter on a Debian 5 system.  How do
>> I accomplish this?
>>
>> Thanks in advance for any help you can provide,
>> -Nick
>>
>> _______________________________________________
>> rabbitmq-discuss mailing list
>> rabbitmq-discuss at lists.rabbitmq.com
>> https://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss
>>
>>
> 
> 
> 
> _______________________________________________
> rabbitmq-discuss mailing list
> rabbitmq-discuss at lists.rabbitmq.com
> https://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss


-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 198 bytes
Desc: OpenPGP digital signature
URL: <http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20100625/74c458e0/attachment.pgp>

From shane at digitalsanctum.com  Fri Jun 25 19:57:51 2010
From: shane at digitalsanctum.com (Shane)
Date: Fri, 25 Jun 2010 11:57:51 -0700 (PDT)
Subject: [rabbitmq-discuss] How to implement the Aggregator pattern?
In-Reply-To: <20100625125409.GU14541@rabbitmq.com>
References: <40410f93-93e4-4f56-b570-3821bbcdc63d@e5g2000yqn.googlegroups.com>
	<20100625125409.GU14541@rabbitmq.com>
Message-ID: <1439d16a-2bad-417d-adb6-c512ed7c6766@j8g2000yqd.googlegroups.com>

Matthew,

I think you interpreted my question correctly. A and B are actually
calculations on specific messages. C requires the result of the calcs
of A and B in order to do it's work (another calculation). If I do as
you suggested, then that seems to imply that I need to manage the
messages based on the content to correctly group them. Otherwise, the
calc of C might include calc results of arbitrary messages not related
to it. Based on what I've read, this generally means that a
persistence mechanism needs to be in place in order to hold the
grouping state of messages. Does this sound accurate?

I should also mention that C may or may not be necessary based on the
message content. So the flow may look something like this:

data(x): A, B
data(y): A, B, C

So in the case of data(x), C is not needed and in the case of data(y)
C needs the results of A and B.

Thanks,
Shane


On Jun 25, 8:54?am, Matthew Sackman <matt... at rabbitmq.com> wrote:
> Hi Shane,
>
> On Wed, Jun 23, 2010 at 07:31:42AM -0700, Shane wrote:
> > I'm trying to determine the best way to implement the Aggregator
> > pattern with RabbitMQ. For example, given consumers A, B and C, I need
> > to run C with the results of A and B.
>
> If you have a consumer A and B, are you saying that they're actually
> doing some transformation of the message(s), publishing that, and then C
> needs to receive one message from A and one message from B before
> starting any work?
>
> If so, I suggest that A and B both publish the transformed message,
> maybe via different exchanges, but that each message goes to a different
> queue. C consumes from both queues, but sets qos prefetch to 1, and does
> not ack any message until it has received one message from each queue.
> If you want to be uber purist, you would wrap both of those acks in a
> transaction to have them treated atomically.
>
> But that's a fair guess from your original description so I might be
> solving the wrong problem here!
>
> Matthew
> _______________________________________________
> rabbitmq-discuss mailing list
> rabbitmq-disc... at lists.rabbitmq.comhttps://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss

From irrer at umich.edu  Sat Jun 26 00:21:04 2010
From: irrer at umich.edu (Jim Irrer)
Date: Fri, 25 Jun 2010 19:21:04 -0400
Subject: [rabbitmq-discuss] RabbitMQ C library function
	amqp_simple_wait_frame takes 400 ms
Message-ID: <AANLkTimw1KyCa9L_-oQBCCRhG5HMDTiNrxSmOgyV6st9@mail.gmail.com>

Hi All -

I'm working on two functions that act as a client-server pair.  They
use two amq.direct queues to communicate.  When ever either of
them calls the amqp_simple_wait_frame function, it does not return
for 436618 microseconds.

Some other background info that might be relevant:

If I only send messages in one direction it's really fast.

Both processes are using separate connectors and different sockets.

I used the amqp_consumer.c amqp_producer.c code in
the examples directory as a reference.

Is there a way to avoid this delay?

Also ...

Could I use the same socket in each program as long as it was only
used by one thread at a time?

Could I use the same connection in each program if it was only
used by one thread at a time?

Thanks for any insights,

- Jim

Jim Irrer     irrer at umich.edu       (734) 647-4409
University of Michigan Hospital Radiation Oncology
519 W. William St.             Ann Arbor, MI 48103
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20100625/1af83da0/attachment.htm>

From david at rabbitmq.com  Sat Jun 26 00:54:19 2010
From: david at rabbitmq.com (David Wragg)
Date: Sat, 26 Jun 2010 00:54:19 +0100
Subject: [rabbitmq-discuss] RabbitMQ C library function
	amqp_simple_wait_frame takes 400 ms
In-Reply-To: <AANLkTimw1KyCa9L_-oQBCCRhG5HMDTiNrxSmOgyV6st9@mail.gmail.com>
	(Jim Irrer's message of "Fri, 25 Jun 2010 19:21:04 -0400")
References: <AANLkTimw1KyCa9L_-oQBCCRhG5HMDTiNrxSmOgyV6st9@mail.gmail.com>
Message-ID: <yrv4cfx0aact0.fsf@dwragg.eng.vmware.com>

Hi Jim,

Jim Irrer <irrer at umich.edu> writes:
> I'm working on two functions that act as a client-server pair.  They
> use two amq.direct queues to communicate.  When ever either of
> them calls the amqp_simple_wait_frame function, it does not return
> for 436618 microseconds.
>
> Some other background info that might be relevant:
>
> If I only send messages in one direction it's really fast.
>
> Both processes are using separate connectors and different sockets.
>
> I used the amqp_consumer.c amqp_producer.c code in
> the examples directory as a reference.
>
> Is there a way to avoid this delay?

I'm not sure what you are really asking here.  As its name suggests,
amqp_simple_wait_frame waits for a frame to arrive.  It will typically
attempt to read from the socket connected to the AMQP server.  If no
data is available, it will block until data is available.  The resulting
delays are thus an intrinsic feature of amqp_simple_wait_frame.

Are you sure that the 400ms delay does not simply reflect the wait for a
message to arrive?

I'm guessing, but perhaps the problem is that you want a single
application to publish and consume messages concurrently, and you are
finding that the synchronous nature of amqp_simple_wait_frame is an
obstacle?  If so, the simplest work around would be to have two threads,
one to publish and one to consume, and open a separate AMQP connection
in each thread.

> Also ...
>
> Could I use the same socket in each program as long as it was only
> used by one thread at a time?
>
> Could I use the same connection in each program if it was only
> used by one thread at a time?

What's the distinction between socket and connection here?

librabbitmq does not do anything to explicitly support multithreading,
but neither does it do anything to conflict with it.  If you, the
application programmer, ensure that for a given connection, only one
thread uses librabbitmq at a time, you should be safe.

-- 
David Wragg
Staff Engineer, RabbitMQ
SpringSource, a division of VMware

From brett.r.cameron at gmail.com  Sat Jun 26 02:57:17 2010
From: brett.r.cameron at gmail.com (Brett Cameron)
Date: Sat, 26 Jun 2010 13:57:17 +1200
Subject: [rabbitmq-discuss] RabbitMQ C library function
	amqp_simple_wait_frame takes 400 ms
In-Reply-To: <yrv4cfx0aact0.fsf@dwragg.eng.vmware.com>
References: <AANLkTimw1KyCa9L_-oQBCCRhG5HMDTiNrxSmOgyV6st9@mail.gmail.com>
	<yrv4cfx0aact0.fsf@dwragg.eng.vmware.com>
Message-ID: <AANLkTinLqWLJP6FSqp7iFVc2E5wrwIypgN1EL1ksxiBd@mail.gmail.com>

Jim,

I believe that you are looking at a TCP/IP issue here (which you may or may
not be able to address by modifying the libRabbitMQ code). My guess is that
if you set the TCP/IP kernel parameter tcpnodelack (or whatever it is called
on your operating system) to 1 (i.e. don't delay acknowledging TCP data),
you will see things improve rather significantly. Depending on what platform
you're using, you may be able to stick a setsockopt() call (using the option
TCP_NODELACK) in amqp_socket.c between the socket() call and the connect()
call instead of having to make the chnage globally by messing with the
kernel parameter.
For what it's worth, I encountered this problem with libRabbitMQ-C on
OpenVMS just last week.. Luky for me I've seen the problem before. Seem to
recall that you guys at umich.edu used to have some OpenVMS systems...

Regards,
Brett



On Sat, Jun 26, 2010 at 11:54 AM, David Wragg <david at rabbitmq.com> wrote:

> Hi Jim,
>
> Jim Irrer <irrer at umich.edu> writes:
> > I'm working on two functions that act as a client-server pair.  They
> > use two amq.direct queues to communicate.  When ever either of
> > them calls the amqp_simple_wait_frame function, it does not return
> > for 436618 microseconds.
> >
> > Some other background info that might be relevant:
> >
> > If I only send messages in one direction it's really fast.
> >
> > Both processes are using separate connectors and different sockets.
> >
> > I used the amqp_consumer.c amqp_producer.c code in
> > the examples directory as a reference.
> >
> > Is there a way to avoid this delay?
>
> I'm not sure what you are really asking here.  As its name suggests,
> amqp_simple_wait_frame waits for a frame to arrive.  It will typically
> attempt to read from the socket connected to the AMQP server.  If no
> data is available, it will block until data is available.  The resulting
> delays are thus an intrinsic feature of amqp_simple_wait_frame.
>
> Are you sure that the 400ms delay does not simply reflect the wait for a
> message to arrive?
>
> I'm guessing, but perhaps the problem is that you want a single
> application to publish and consume messages concurrently, and you are
> finding that the synchronous nature of amqp_simple_wait_frame is an
> obstacle?  If so, the simplest work around would be to have two threads,
> one to publish and one to consume, and open a separate AMQP connection
> in each thread.
>
> > Also ...
> >
> > Could I use the same socket in each program as long as it was only
> > used by one thread at a time?
> >
> > Could I use the same connection in each program if it was only
> > used by one thread at a time?
>
> What's the distinction between socket and connection here?
>
> librabbitmq does not do anything to explicitly support multithreading,
> but neither does it do anything to conflict with it.  If you, the
> application programmer, ensure that for a given connection, only one
> thread uses librabbitmq at a time, you should be safe.
>
> --
> David Wragg
> Staff Engineer, RabbitMQ
> SpringSource, a division of VMware
> _______________________________________________
> rabbitmq-discuss mailing list
> rabbitmq-discuss at lists.rabbitmq.com
> https://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20100626/a2ad68c0/attachment.htm>

From ovidiudeac at gmail.com  Mon Jun 28 00:06:55 2010
From: ovidiudeac at gmail.com (Ovidiu Deac)
Date: Mon, 28 Jun 2010 02:06:55 +0300
Subject: [rabbitmq-discuss] rabbitmq-bql cannot create queue
Message-ID: <AANLkTimP-XNufg9Q5I-FJUn8wg9VSHqvC2pzVdrIpVgA@mail.gmail.com>

Hi,

When I try to create a using bql client the command fails with the
following message:

$ ./bql
BQL> create queue myqueue
{'EXIT',{undef,[{rabbit_amqqueue,declare,
                                 [{resource,<<"/">>,queue,<<"myqueue">>},
                                  false,false,[]]},
                {bql_applicator,apply_command,2},
                {bql_applicator,'-apply_commands/3-lc$^0/1-0-',4},
                {bql_applicator,apply_commands,3},
                {bql_server,handle_message,1},
                {bql_server,handle_call,3},
                {gen_server,handle_msg,5},
                {proc_lib,init_p_do_apply,3}]}}

Can anybody help me with this?

Thanks in advance!
ovidiu

From alexandru at rabbitmq.com  Mon Jun 28 00:55:53 2010
From: alexandru at rabbitmq.com (Alexandru Scvortov)
Date: Mon, 28 Jun 2010 00:55:53 +0100
Subject: [rabbitmq-discuss] rabbitmq-bql cannot create queue
In-Reply-To: <AANLkTimP-XNufg9Q5I-FJUn8wg9VSHqvC2pzVdrIpVgA@mail.gmail.com>
References: <AANLkTimP-XNufg9Q5I-FJUn8wg9VSHqvC2pzVdrIpVgA@mail.gmail.com>
Message-ID: <4C27E509.4070703@rabbitmq.com>

Hi Ovidiu,

It looks like we've made some changes to the server, but not to bql.

I'm filing a bug for this.  We'll fix it as soon as we can.

Thanks for letting us know.

Cheers,
Alex


On 06/28/2010 12:06 AM, Ovidiu Deac wrote:
> Hi,
>
> When I try to create a using bql client the command fails with the
> following message:
>
> $ ./bql
> BQL> create queue myqueue
> {'EXIT',{undef,[{rabbit_amqqueue,declare,
>                                  [{resource,<<"/">>,queue,<<"myqueue">>},
>                                   false,false,[]]},
>                 {bql_applicator,apply_command,2},
>                 {bql_applicator,'-apply_commands/3-lc$^0/1-0-',4},
>                 {bql_applicator,apply_commands,3},
>                 {bql_server,handle_message,1},
>                 {bql_server,handle_call,3},
>                 {gen_server,handle_msg,5},
>                 {proc_lib,init_p_do_apply,3}]}}
>
> Can anybody help me with this?
>
> Thanks in advance!
> ovidiu
> _______________________________________________
> rabbitmq-discuss mailing list
> rabbitmq-discuss at lists.rabbitmq.com
> https://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss
>   


From pauljones23 at gmail.com  Mon Jun 28 02:31:36 2010
From: pauljones23 at gmail.com (Paul Jones)
Date: Mon, 28 Jun 2010 02:31:36 +0100
Subject: [rabbitmq-discuss] rabbitmq-bql cannot create queue
In-Reply-To: <AANLkTimP-XNufg9Q5I-FJUn8wg9VSHqvC2pzVdrIpVgA@mail.gmail.com>
References: <AANLkTimP-XNufg9Q5I-FJUn8wg9VSHqvC2pzVdrIpVgA@mail.gmail.com>
Message-ID: <AANLkTikiybefkuvsdBYK-zT0Sf36iz60t4CfnuR04Mjh@mail.gmail.com>

Hi Ovidiu,

I've got a branch of the BQL client at
http://bitbucket.org/paulj/rabbitmq-bql which fixes this problem. If you
clone that and switch to the bug22904 branch, then you should see the
problem go away.

Cheers,
Paul.

On Mon, Jun 28, 2010 at 12:06 AM, Ovidiu Deac <ovidiudeac at gmail.com> wrote:

> Hi,
>
> When I try to create a using bql client the command fails with the
> following message:
>
> $ ./bql
> BQL> create queue myqueue
> {'EXIT',{undef,[{rabbit_amqqueue,declare,
>                                 [{resource,<<"/">>,queue,<<"myqueue">>},
>                                  false,false,[]]},
>                {bql_applicator,apply_command,2},
>                {bql_applicator,'-apply_commands/3-lc$^0/1-0-',4},
>                {bql_applicator,apply_commands,3},
>                {bql_server,handle_message,1},
>                {bql_server,handle_call,3},
>                {gen_server,handle_msg,5},
>                {proc_lib,init_p_do_apply,3}]}}
>
> Can anybody help me with this?
>
> Thanks in advance!
> ovidiu
> _______________________________________________
> rabbitmq-discuss mailing list
> rabbitmq-discuss at lists.rabbitmq.com
> https://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20100628/ee373d08/attachment.htm>

From lionel.cons at cern.ch  Mon Jun 28 07:10:10 2010
From: lionel.cons at cern.ch (Lionel Cons)
Date: Mon, 28 Jun 2010 08:10:10 +0200
Subject: [rabbitmq-discuss] ssl certificate to client lookup
In-Reply-To: <20100625130314.GW14541@rabbitmq.com>
References: <AANLkTimK1NSUevhDMV-62gTSgjKXrl4hMTJNzkkcRIpI@mail.gmail.com>
	<20100625130314.GW14541@rabbitmq.com>
Message-ID: <vfqy6dzg01p.fsf@mercury.cern.ch>

Matthew Sackman <matthew at rabbitmq.com> writes:
> On Thu, Jun 24, 2010 at 03:13:20PM -0600, Nathaniel Haggard wrote:
> > It would be nice if rabbitmq set a header in messages with some
> > metadata from the x509 certificate used to establish the ssl
> > connection.
> 
> Err, why?

FWIW, we currently rely on this functionality: we use X.509 for
authetication and we need to track down who sent a given message
(think JMSXUserID as per http://activemq.apache.org/jmsxuserid.html).

Cheers,

Lionel

From lists at zopyx.com  Mon Jun 28 10:12:04 2010
From: lists at zopyx.com (Andreas Jung)
Date: Mon, 28 Jun 2010 11:12:04 +0200
Subject: [rabbitmq-discuss] Building RabbitMQ 1.8.0 with erlang 5.8
Message-ID: <4C286764.6040708@zopyx.com>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

Trying to install RabbitMQ 1.8.0 with erlang 5.8 (latest version from
Macports) on MacOSX:

rod.recipe.rabbitmq: RabbitMQ already installed.
erlc -I include -o ebin -Wall -v +debug_info -Duse_specs -pa ebin
src/rabbit_exchange.erl
src/rabbit_exchange.erl:103: badly formed define: missing closing right
parenthesis
src/rabbit_exchange.erl:237: undefined macro 'INFO_KEYS'
src/rabbit_exchange.erl:253: undefined macro 'INFO_KEYS'
src/rabbit_exchange.erl:36: function info/1 undefined
src/rabbit_exchange.erl:36: function info_keys/0 undefined
src/rabbit_exchange.erl:75: spec for undefined function
rabbit_exchange:info_keys/0
src/rabbit_exchange.erl:76: spec for undefined function
rabbit_exchange:info/1
src/rabbit_exchange.erl:257: function info/1 undefined
make: *** [ebin/rabbit_exchange.beam] Error 1


Is there an easy way to fix this?

Andreas


- -- 
ZOPYX Limited           | zopyx group
Charlottenstr. 37/1     | The full-service network for Zope & Plone
D-72070 T?bingen        | Produce & Publish
www.zopyx.com           | www.produce-and-publish.com
- ------------------------------------------------------------------------
E-Publishing, Python, Zope & Plone development, Consulting


-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.4.10 (Darwin)
Comment: Using GnuPG with Mozilla - http://enigmail.mozdev.org/

iEYEARECAAYFAkwoZ2QACgkQCJIWIbr9KYzJtgCfaYArLup2ROTfS0eF7/+8ZwKw
jJ0AoM8+ROiu7c5x0ycsR0TGXGqNhOGD
=Weok
-----END PGP SIGNATURE-----
-------------- next part --------------
A non-text attachment was scrubbed...
Name: lists.vcf
Type: text/x-vcard
Size: 316 bytes
Desc: not available
URL: <http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20100628/f7c3e213/attachment.vcf>

From alexandru at rabbitmq.com  Mon Jun 28 10:28:21 2010
From: alexandru at rabbitmq.com (Alexandru Scvortov)
Date: Mon, 28 Jun 2010 10:28:21 +0100
Subject: [rabbitmq-discuss] rabbitmq-bql cannot create queue
In-Reply-To: <AANLkTikiybefkuvsdBYK-zT0Sf36iz60t4CfnuR04Mjh@mail.gmail.com>
References: <AANLkTimP-XNufg9Q5I-FJUn8wg9VSHqvC2pzVdrIpVgA@mail.gmail.com>
	<AANLkTikiybefkuvsdBYK-zT0Sf36iz60t4CfnuR04Mjh@mail.gmail.com>
Message-ID: <4C286B35.3090102@rabbitmq.com>

Merged into default.

Ovidiu, if you rerun the BQL installation, everything should be fine now.

Please let us know if you run across any other problems.

Cheers,
Alex

On 06/28/2010 02:31 AM, Paul Jones wrote:
> Hi Ovidiu,
>
> I've got a branch of the BQL client at
> http://bitbucket.org/paulj/rabbitmq-bql which fixes this problem. If you
> clone that and switch to the bug22904 branch, then you should see the
> problem go away.
>
> Cheers,
> Paul.
>
> On Mon, Jun 28, 2010 at 12:06 AM, Ovidiu Deac <ovidiudeac at gmail.com> wrote:
>
>   
>> Hi,
>>
>> When I try to create a using bql client the command fails with the
>> following message:
>>
>> $ ./bql
>> BQL> create queue myqueue
>> {'EXIT',{undef,[{rabbit_amqqueue,declare,
>>                                 [{resource,<<"/">>,queue,<<"myqueue">>},
>>                                  false,false,[]]},
>>                {bql_applicator,apply_command,2},
>>                {bql_applicator,'-apply_commands/3-lc$^0/1-0-',4},
>>                {bql_applicator,apply_commands,3},
>>                {bql_server,handle_message,1},
>>                {bql_server,handle_call,3},
>>                {gen_server,handle_msg,5},
>>                {proc_lib,init_p_do_apply,3}]}}
>>
>> Can anybody help me with this?
>>
>> Thanks in advance!
>> ovidiu
>> _______________________________________________
>> rabbitmq-discuss mailing list
>> rabbitmq-discuss at lists.rabbitmq.com
>> https://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss
>>
>>     
>   
>
>
> _______________________________________________
> rabbitmq-discuss mailing list
> rabbitmq-discuss at lists.rabbitmq.com
> https://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss
>   


From david at rabbitmq.com  Mon Jun 28 10:48:45 2010
From: david at rabbitmq.com (David Wragg)
Date: Mon, 28 Jun 2010 10:48:45 +0100
Subject: [rabbitmq-discuss] Building RabbitMQ 1.8.0 with erlang 5.8
In-Reply-To: <4C286764.6040708@zopyx.com> (Andreas Jung's message of "Mon, 28
	Jun 2010 11:12:04 +0200")
References: <4C286764.6040708@zopyx.com>
Message-ID: <yrv4c1vbro5c2.fsf@dwragg.eng.vmware.com>

Andreas Jung <lists at zopyx.com> writes:
> Trying to install RabbitMQ 1.8.0 with erlang 5.8 (latest version from
> Macports) on MacOSX:
>
> rod.recipe.rabbitmq: RabbitMQ already installed.
> erlc -I include -o ebin -Wall -v +debug_info -Duse_specs -pa ebin
> src/rabbit_exchange.erl
> src/rabbit_exchange.erl:103: badly formed define: missing closing right
> parenthesis
> src/rabbit_exchange.erl:237: undefined macro 'INFO_KEYS'
> src/rabbit_exchange.erl:253: undefined macro 'INFO_KEYS'
> src/rabbit_exchange.erl:36: function info/1 undefined
> src/rabbit_exchange.erl:36: function info_keys/0 undefined
> src/rabbit_exchange.erl:75: spec for undefined function
> rabbit_exchange:info_keys/0
> src/rabbit_exchange.erl:76: spec for undefined function
> rabbit_exchange:info/1
> src/rabbit_exchange.erl:257: function info/1 undefined
> make: *** [ebin/rabbit_exchange.beam] Error 1
>
> Is there an easy way to fix this?

Unfortunately Macports switched to the R14A beta release of erlang - see
<http://trac.macports.org/ticket/25377>.  This is incompatible with all
released versions of rabbitmq.

To fix it, you'll currently need to get the latest rabbitmq-server
source code from our mercurial repository at
<http://hg.rabbitmq.com/rabbitmq-server/>.

David

-- 
David Wragg
Staff Engineer, RabbitMQ
SpringSource, a division of VMware

From matthew at rabbitmq.com  Mon Jun 28 10:49:00 2010
From: matthew at rabbitmq.com (Matthew Sackman)
Date: Mon, 28 Jun 2010 10:49:00 +0100
Subject: [rabbitmq-discuss] ssl certificate to client lookup
In-Reply-To: <vfqy6dzg01p.fsf@mercury.cern.ch>
References: <AANLkTimK1NSUevhDMV-62gTSgjKXrl4hMTJNzkkcRIpI@mail.gmail.com>
	<20100625130314.GW14541@rabbitmq.com>
	<vfqy6dzg01p.fsf@mercury.cern.ch>
Message-ID: <20100628094859.GD21998@rabbitmq.com>

On Mon, Jun 28, 2010 at 08:10:10AM +0200, Lionel Cons wrote:
> Matthew Sackman <matthew at rabbitmq.com> writes:
> > On Thu, Jun 24, 2010 at 03:13:20PM -0600, Nathaniel Haggard wrote:
> > > It would be nice if rabbitmq set a header in messages with some
> > > metadata from the x509 certificate used to establish the ssl
> > > connection.
> > 
> > Err, why?
> 
> FWIW, we currently rely on this functionality: we use X.509 for
> authetication and we need to track down who sent a given message

Ahh, yes there has been some discussion about this sort of thing
internally too - you're not the only people who want to know from whom a
message came. At the moment, the best I can suggest is to use
permissions to ensure each user can only publish to one exchange - have
an exchange per user. Then, in deliveries, the exchange is indicated,
which means when you receive a message, you can, from its exchange, know
who sent it.

Matthew

From emile at rabbitmq.com  Mon Jun 28 14:54:01 2010
From: emile at rabbitmq.com (Emile Joubert)
Date: Mon, 28 Jun 2010 14:54:01 +0100
Subject: [rabbitmq-discuss] rabbitmq-jsonrpc-chanel via mod_proxy
In-Reply-To: <AANLkTimqpONBhdK92KcU2rSlwL537CyTZnHgtTR7PlCF@mail.gmail.com>
References: <001485eb00e74e270f0489dc3e49@google.com>	<001485f778b4c66a7f0489dc8793@google.com>
	<AANLkTimqpONBhdK92KcU2rSlwL537CyTZnHgtTR7PlCF@mail.gmail.com>
Message-ID: <4C28A979.4060708@rabbitmq.com>


Hi ????,

The links to resources served under /rabbitmq_lib, /rabbithub and /rpc
are assumed to be absolute at the root and there is no configuration for
this at the moment. I suggest you use the default "/rpc/rabbitmq"
instead of "/rabbit/rpc/rabbitmq" to validate your installation first.
Your webserver error log may contain useful information if the proxy
configuration is faulty.

Regards

Emile



On 25/06/10 17:35, ???? ?????? / Emil Ivanov wrote:
> But this is not the only problem - trying to access
> /rabbit/rpc/rabbitmq json-rpc service returns 404 as well.
> 
> Is there any configuration that needs to be done so rabbitmq deals
> well with the paths?
> 
> Regards
> 
> 2010/6/25  <emil.vladev at gmail.com>:
>> Ok, it seems that the problem is with the jsonrpc-chanel examples - paths to
>> js files and css files are absolute. Maybe this should be changed so the
>> examples are a bit more portable.
>>
>> Regards

[...]

From matthias at rabbitmq.com  Mon Jun 28 16:56:43 2010
From: matthias at rabbitmq.com (Matthias Radestock)
Date: Mon, 28 Jun 2010 16:56:43 +0100
Subject: [rabbitmq-discuss] ssl certificate to client lookup
In-Reply-To: <vfqy6dzg01p.fsf@mercury.cern.ch>
References: <AANLkTimK1NSUevhDMV-62gTSgjKXrl4hMTJNzkkcRIpI@mail.gmail.com>	<20100625130314.GW14541@rabbitmq.com>
	<vfqy6dzg01p.fsf@mercury.cern.ch>
Message-ID: <4C28C63B.5000907@rabbitmq.com>

Lionel,

Lionel Cons wrote:
> Matthew Sackman <matthew at rabbitmq.com> writes:
>> On Thu, Jun 24, 2010 at 03:13:20PM -0600, Nathaniel Haggard wrote:
>>> It would be nice if rabbitmq set a header in messages with some
>>> metadata from the x509 certificate used to establish the ssl
>>> connection.
>> Err, why?
> 
> FWIW, we currently rely on this functionality: we use X.509 for
> authetication and we need to track down who sent a given message
> (think JMSXUserID as per http://activemq.apache.org/jmsxuserid.html).

Couldn't you simply get the sender to sign the message and the recipient 
to verify the signature? That requires the recipients to know the public 
keys of the senders, but I suspect in most systems where recipients care 
about the sender identity that would not be hard to arrange.

Matthias.

From david at rabbitmq.com  Mon Jun 28 18:04:55 2010
From: david at rabbitmq.com (David Wragg)
Date: Mon, 28 Jun 2010 18:04:55 +0100
Subject: [rabbitmq-discuss] rabbitmq-server in macports with erlang R14A
References: <4C286764.6040708@zopyx.com>
	<yrv4c1vbro5c2.fsf@dwragg.eng.vmware.com>
Message-ID: <yrv4cvd93ks08.fsf@dwragg.eng.vmware.com>

Because macports has switched to erlang R14A, it is impossible to build
any released version of rabbitmq-server (including 1.7.2, which is in
the central macports repository, or 1.8.0, which is in the rabbitmq
ports repository).

To provide a temporary solution for this problem, I have added a patch
to the rabbitmq-server port in our rabbitmq.com macports repository so
that it will build with Erlang R14A.  Follow the instructions at
<http://www.rabbitmq.com/macports.html> to use it.

Note that this build issue is not the only problem introduced by R14A,
though it is certainly the most significant.  I recommend that
rabbitmq-server users stick to the R13B releases until R14B is ready.
But macports users don't really have a choice at the moment.

David

-- 
David Wragg
Staff Engineer, RabbitMQ
SpringSource, a division of VMware

From nico at nicocesar.com  Mon Jun 28 18:06:25 2010
From: nico at nicocesar.com (=?UTF-8?B?Tmljb2zDoXMgQ8Opc2Fy?=)
Date: Mon, 28 Jun 2010 14:06:25 -0300
Subject: [rabbitmq-discuss] No period allowed in queue name in rabbit 1.8.0?
Message-ID: <AANLkTikASR9cBzSXvrG7KaLuij4Xzrc6oAdoCs2mr9We@mail.gmail.com>

I've updated to 1.8.0 and with the same code I get a 404 NOT_FOUND when i
use queue_declare

---------------------
Traceback (most recent call last):
(...)
  File "/usr/local/sbin/test2", line 138, in __init__
    self.chan_in.queue_declare(queue='st.test-o.com_q', durable=True,
exclusive=True, auto_delete=False)
  File "/usr/lib/pymodules/python2.5/amqplib/client_0_8/channel.py", line
1296, in queue_declare
    (50, 11),    # Channel.queue_declare_ok
  File
"/usr/lib/pymodules/python2.5/amqplib/client_0_8/abstract_channel.py", line
105, in wait
    return amqp_method(self, args)
  File "/usr/lib/pymodules/python2.5/amqplib/client_0_8/channel.py", line
274, in _close
    (class_id, method_id))
amqplib.client_0_8.exceptions.AMQPChannelException: (404, u"NOT_FOUND - no
queue 'st.test-o.com_q' in vhost '/'", (50, 10), 'Channel.queue_declare')
----------------------


I've changed st.test-o.com_q  to  st_test-o_com_q and had no problem...
periods are not allowed in queue names now?

Nico C?sar
http://blog.nicocesar.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20100628/d02a994e/attachment.htm>

From simon at rabbitmq.com  Mon Jun 28 18:15:59 2010
From: simon at rabbitmq.com (Simon MacMullen)
Date: Mon, 28 Jun 2010 18:15:59 +0100
Subject: [rabbitmq-discuss] No period allowed in queue name in rabbit
 1.8.0?
In-Reply-To: <AANLkTikASR9cBzSXvrG7KaLuij4Xzrc6oAdoCs2mr9We@mail.gmail.com>
References: <AANLkTikASR9cBzSXvrG7KaLuij4Xzrc6oAdoCs2mr9We@mail.gmail.com>
Message-ID: <4C28D8CF.50303@rabbitmq.com>

On 28/06/10 18:06, Nicol?s C?sar wrote:
<snip>
> I've changed st.test-o.com_q  to  st_test-o_com_q and had no problem...
> periods are not allowed in queue names now?

No, queue names can still have periods in.

ISTR the only way you can get a not-found when declaring a queue is in a 
clustering situation, if the queue exists on a node which is not 
running. Does that sound like it could be a possibility?

Cheers, Simon
-- 
Simon MacMullen
Staff Engineer, RabbitMQ
SpringSource, a division of VMware


From natester at gmail.com  Mon Jun 28 19:47:13 2010
From: natester at gmail.com (Nathaniel Haggard)
Date: Mon, 28 Jun 2010 12:47:13 -0600
Subject: [rabbitmq-discuss] ssl certificate to client lookup
In-Reply-To: <4C28C63B.5000907@rabbitmq.com>
References: <AANLkTimK1NSUevhDMV-62gTSgjKXrl4hMTJNzkkcRIpI@mail.gmail.com>
	<20100625130314.GW14541@rabbitmq.com>
	<vfqy6dzg01p.fsf@mercury.cern.ch> <4C28C63B.5000907@rabbitmq.com>
Message-ID: <AANLkTilUJ4umbKriIvlGAHJKfOkv6Btm5IFb1MWkVJmF@mail.gmail.com>

On Mon, Jun 28, 2010 at 9:56 AM, Matthias Radestock
<matthias at rabbitmq.com> wrote:
> Lionel,
>
> Lionel Cons wrote:
>>
>> Matthew Sackman <matthew at rabbitmq.com> writes:
>>>
>>> On Thu, Jun 24, 2010 at 03:13:20PM -0600, Nathaniel Haggard wrote:
>>>>
>>>> It would be nice if rabbitmq set a header in messages with some
>>>> metadata from the x509 certificate used to establish the ssl
>>>> connection.
>>>
>>> Err, why?
>>
>> FWIW, we currently rely on this functionality: we use X.509 for
>> authetication and we need to track down who sent a given message
>> (think JMSXUserID as per http://activemq.apache.org/jmsxuserid.html).
>
> Couldn't you simply get the sender to sign the message and the recipient to
> verify the signature? That requires the recipients to know the public keys
> of the senders, but I suspect in most systems where recipients care about
> the sender identity that would not be hard to arrange.
>
> Matthias.

For my use case I could do that, but RabbitMQ is already verifying
client certificates.  RabbitMQ is already verifying client
certificates.  See

[
 {rabbit, [
    {ssl_listeners, [{"0.0.0.0",5671}]},
    {ssl_options, [{cacertfile,"/opt/rabbitmq/keys/ca.crt"},
                   {certfile,"/opt/rabbitmq/keys/x.x.x.x.crt"},
                   {keyfile,"/opt/rabbitmq/keys/x.x.x.x.key"},
                   {verify,verify_peer},
                   {fail_if_no_peer_cert,true}]}
  ]}
].

We plan to have thousands of clients connecting to RabbitMQ each with
a different certificate and the same username.  Someone on this list
didn't recommend managing that many users.

Ideally Rabbit would pass along CNAME from a producer and the consumer
would verify CNAME is good.

(Sorry if you got this twice Matthias)

From msteele at beringmedia.com  Mon Jun 28 19:53:40 2010
From: msteele at beringmedia.com (Mark Steele)
Date: Mon, 28 Jun 2010 14:53:40 -0400
Subject: [rabbitmq-discuss] ssl certificate to client lookup
In-Reply-To: <AANLkTilUJ4umbKriIvlGAHJKfOkv6Btm5IFb1MWkVJmF@mail.gmail.com>
References: <AANLkTimK1NSUevhDMV-62gTSgjKXrl4hMTJNzkkcRIpI@mail.gmail.com> 
	<20100625130314.GW14541@rabbitmq.com> <vfqy6dzg01p.fsf@mercury.cern.ch>
	<4C28C63B.5000907@rabbitmq.com>
	<AANLkTilUJ4umbKriIvlGAHJKfOkv6Btm5IFb1MWkVJmF@mail.gmail.com>
Message-ID: <AANLkTimHKOvJbEwvNxti7HoJSeU2UfRKCJ_JXq9MhUBK@mail.gmail.com>

Here's a quick solution:

Just have your app load the client certificate on startup, extract the
common name, and add a header to your messages. It should be trivial to do
this in most programming languages.

The server is already validating that the certificate is valid at the
connection level, so there's no need for further verification.

Mark Steele
Director of development
Bering Media Inc.



On Mon, Jun 28, 2010 at 2:47 PM, Nathaniel Haggard <natester at gmail.com>wrote:

> On Mon, Jun 28, 2010 at 9:56 AM, Matthias Radestock
> <matthias at rabbitmq.com> wrote:
> > Lionel,
> >
> > Lionel Cons wrote:
> >>
> >> Matthew Sackman <matthew at rabbitmq.com> writes:
> >>>
> >>> On Thu, Jun 24, 2010 at 03:13:20PM -0600, Nathaniel Haggard wrote:
> >>>>
> >>>> It would be nice if rabbitmq set a header in messages with some
> >>>> metadata from the x509 certificate used to establish the ssl
> >>>> connection.
> >>>
> >>> Err, why?
> >>
> >> FWIW, we currently rely on this functionality: we use X.509 for
> >> authetication and we need to track down who sent a given message
> >> (think JMSXUserID as per http://activemq.apache.org/jmsxuserid.html).
> >
> > Couldn't you simply get the sender to sign the message and the recipient
> to
> > verify the signature? That requires the recipients to know the public
> keys
> > of the senders, but I suspect in most systems where recipients care about
> > the sender identity that would not be hard to arrange.
> >
> > Matthias.
>
> For my use case I could do that, but RabbitMQ is already verifying
> client certificates.  RabbitMQ is already verifying client
> certificates.  See
>
> [
>  {rabbit, [
>    {ssl_listeners, [{"0.0.0.0",5671}]},
>    {ssl_options, [{cacertfile,"/opt/rabbitmq/keys/ca.crt"},
>                   {certfile,"/opt/rabbitmq/keys/x.x.x.x.crt"},
>                   {keyfile,"/opt/rabbitmq/keys/x.x.x.x.key"},
>                   {verify,verify_peer},
>                   {fail_if_no_peer_cert,true}]}
>  ]}
> ].
>
> We plan to have thousands of clients connecting to RabbitMQ each with
> a different certificate and the same username.  Someone on this list
> didn't recommend managing that many users.
>
> Ideally Rabbit would pass along CNAME from a producer and the consumer
> would verify CNAME is good.
>
> (Sorry if you got this twice Matthias)
> _______________________________________________
> rabbitmq-discuss mailing list
> rabbitmq-discuss at lists.rabbitmq.com
> https://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20100628/a062ac50/attachment-0001.htm>

From mark-erlang at aufflick.com  Tue Jun 29 00:53:43 2010
From: mark-erlang at aufflick.com (Mark Aufflick)
Date: Tue, 29 Jun 2010 09:53:43 +1000
Subject: [rabbitmq-discuss] rabbitmq-server in macports with erlang R14A
In-Reply-To: <yrv4cvd93ks08.fsf@dwragg.eng.vmware.com>
References: <4C286764.6040708@zopyx.com>
	<yrv4c1vbro5c2.fsf@dwragg.eng.vmware.com> 
	<yrv4cvd93ks08.fsf@dwragg.eng.vmware.com>
Message-ID: <AANLkTimQfO6zHDBJgzv87XF-4ed1uucPH6vy4VxcYF11@mail.gmail.com>

Thanks David,

FWIW, I personally use MacPorts to install the dependencies for erlang
then install erlang and rabbitmq manually in a custom location. A
cheats way to get all erlang dependencies installed with a minimum of
pain is:

sudo port install erlang
sudo port uninstall erlang

This will leave all the dependencies installed, but remove erlang R14
itself to avoid confusion.

Mark.


On Tue, Jun 29, 2010 at 3:04 AM, David Wragg <david at rabbitmq.com> wrote:
> Because macports has switched to erlang R14A, it is impossible to build
> any released version of rabbitmq-server (including 1.7.2, which is in
> the central macports repository, or 1.8.0, which is in the rabbitmq
> ports repository).
>
> To provide a temporary solution for this problem, I have added a patch
> to the rabbitmq-server port in our rabbitmq.com macports repository so
> that it will build with Erlang R14A. ?Follow the instructions at
> <http://www.rabbitmq.com/macports.html> to use it.
>
> Note that this build issue is not the only problem introduced by R14A,
> though it is certainly the most significant. ?I recommend that
> rabbitmq-server users stick to the R13B releases until R14B is ready.
> But macports users don't really have a choice at the moment.
>
> David
>
> --
> David Wragg
> Staff Engineer, RabbitMQ
> SpringSource, a division of VMware
> _______________________________________________
> rabbitmq-discuss mailing list
> rabbitmq-discuss at lists.rabbitmq.com
> https://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss
>



-- 
Mark Aufflick
 contact info at http://pumptheory.com/about

 http://pumptheory.com
 iPhone and Enterprise software development

From lists at zopyx.com  Tue Jun 29 03:34:23 2010
From: lists at zopyx.com (Andreas Jung)
Date: Tue, 29 Jun 2010 04:34:23 +0200
Subject: [rabbitmq-discuss] rabbitmq-server in macports with erlang R14A
In-Reply-To: <AANLkTimQfO6zHDBJgzv87XF-4ed1uucPH6vy4VxcYF11@mail.gmail.com>
References: <4C286764.6040708@zopyx.com>	<yrv4c1vbro5c2.fsf@dwragg.eng.vmware.com>
	<yrv4cvd93ks08.fsf@dwragg.eng.vmware.com>
	<AANLkTimQfO6zHDBJgzv87XF-4ed1uucPH6vy4VxcYF11@mail.gmail.com>
Message-ID: <4C295BAF.5050004@zopyx.com>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

Mark Aufflick wrote:
> Thanks David,
> 
> FWIW, I personally use MacPorts to install the dependencies for erlang
> then install erlang and rabbitmq manually in a custom location. A
> cheats way to get all erlang dependencies installed with a minimum of
> pain is:
> 
> sudo port install erlang
> sudo port uninstall erlang
> 

You can also 'deacativate' the newest Erlang port and 'activate'
an older (working) version instead (instead of uninstalling erlang
completely).

Andreas
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.4.10 (Darwin)
Comment: Using GnuPG with Mozilla - http://enigmail.mozdev.org/

iEYEARECAAYFAkwpW68ACgkQCJIWIbr9KYxuNgCgjUoLEerIMhAVurLzZoEltkA3
iOEAnA1G4oJq1TUblfbwyY4llJU7Lz33
=Sn0N
-----END PGP SIGNATURE-----
-------------- next part --------------
A non-text attachment was scrubbed...
Name: lists.vcf
Type: text/x-vcard
Size: 316 bytes
Desc: not available
URL: <http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20100629/1a3fbcd3/attachment.vcf>

From lionel.cons at cern.ch  Tue Jun 29 06:46:53 2010
From: lionel.cons at cern.ch (Lionel Cons)
Date: Tue, 29 Jun 2010 07:46:53 +0200
Subject: [rabbitmq-discuss] ssl certificate to client lookup
In-Reply-To: <4C28C63B.5000907@rabbitmq.com>
References: <AANLkTimK1NSUevhDMV-62gTSgjKXrl4hMTJNzkkcRIpI@mail.gmail.com>
	<20100625130314.GW14541@rabbitmq.com>
	<vfqy6dzg01p.fsf@mercury.cern.ch> <4C28C63B.5000907@rabbitmq.com>
Message-ID: <19497.35021.831383.102680@mercury.cern.ch>

Matthias Radestock writes:
 > Couldn't you simply get the sender to sign the message and the recipient 
 > to verify the signature?

This would work in the cases where we control the clients.
Unfortunately, this is not always the case.

In case something bad happens (invalid message, too many messages...),
we want to know who sent the offending messages.

Cheers,

Lionel

From irmo.manie at gmail.com  Tue Jun 29 08:44:56 2010
From: irmo.manie at gmail.com (Irmo Manie)
Date: Tue, 29 Jun 2010 09:44:56 +0200
Subject: [rabbitmq-discuss] Passive versus active declaration of exchanges
	and queues
Message-ID: <AANLkTimaaNoW4Cqgv6sPD4Xni2AkxMOAQOFDEyKRLrmF@mail.gmail.com>

Since 1.8.0 the passive declaration is separated, taking only a name as
parameter and will not declare anything if the exchange or queue is not
there yet.
This does makes sense, so in theory, when wanting a passive declaration over
active, you would first try passive and then active.

Now the problem:

If passive declaration fails, it not only throws an exception, it also
closes the channel.

Questions:

- What is the added value of the Exchange.DeclareOk result?
- Why is there no API call available to check if an exchange exists (and
with which parameters) so that this exception can be prevented?

Cheers,
Irmo
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20100629/347cfe66/attachment.htm>

From simon at rabbitmq.com  Tue Jun 29 10:42:10 2010
From: simon at rabbitmq.com (Simon MacMullen)
Date: Tue, 29 Jun 2010 10:42:10 +0100
Subject: [rabbitmq-discuss] No period allowed in queue name in rabbit
 1.8.0?
In-Reply-To: <AANLkTim3KohPtkJ1uwuyM0osUCeHtP7OgMQePrT-pIrB@mail.gmail.com>
References: <AANLkTikASR9cBzSXvrG7KaLuij4Xzrc6oAdoCs2mr9We@mail.gmail.com>
	<4C28D8CF.50303@rabbitmq.com>
	<AANLkTim3KohPtkJ1uwuyM0osUCeHtP7OgMQePrT-pIrB@mail.gmail.com>
Message-ID: <4C29BFF2.50708@rabbitmq.com>

On 28/06/10 20:17, Nicol?s C?sar wrote:
> 2010/6/28 Simon MacMullen <simon at rabbitmq.com <mailto:simon at rabbitmq.com>>
>     ISTR the only way you can get a not-found when declaring a queue is
>     in a clustering situation, if the queue exists on a node which is
>     not running. Does that sound like it could be a possibility?
>
>
>
> Thanks Simon for your quick response. It's a single node. but when i've
> tried to check:
>
> # rabbitmqctl cluster
> Clustering node rabbit at sendsorium with [] ...
> Error: mnesia_unexpectedly_running
>
> what does mnesia_unexpectedly_running means??

It means pretty much what it says. rabbitmqctl cluster is used to set up 
a cluster, and should only be used when the rabbit application has been 
stopped (which stops mnesia too). See:

http://www.rabbitmq.com/rabbitmqctl.1.man.html#Cluster%20management

The command you're looking for is:

rabbitmqctl status

By the way, it's a good idea to keep the mailing list CCed so that if 
other people have the same problem they can find the thread...

Cheers, Simon

-- 
Simon MacMullen
Staff Engineer, RabbitMQ
SpringSource, a division of VMware


From emile at rabbitmq.com  Tue Jun 29 12:09:48 2010
From: emile at rabbitmq.com (Emile Joubert)
Date: Tue, 29 Jun 2010 12:09:48 +0100
Subject: [rabbitmq-discuss] RabbitMQ JSON-RPC via GET rather than POST
In-Reply-To: <b0fec7b6-0e51-474e-abc0-7f18aa8a1e78@q13g2000vbm.googlegroups.com>
References: <b0fec7b6-0e51-474e-abc0-7f18aa8a1e78@q13g2000vbm.googlegroups.com>
Message-ID: <4C29D47C.3050700@rabbitmq.com>


Hi Donovan,

Sorry for the delay in getting back to you. I can confirm that "open" is
not idempotent which means it is not permitted to be accessed via HTTP GET.

Unfortunately I don't have a good alternative suggestion. The use of a
proxy to get around the cross-domain restrictions on POST in jQuery may
work, but I can hardly recommend it as good practice.

Regards

Emile




On 02/06/10 16:04, Donovan wrote:
> Hi,
> 
> This:
> 
> curl "http://dev.rabbitmq.com/rpc/rabbitmq" -d '{"version":"1.1","id":
> 2,"method":"open","params":["guest","guest",5,null]}'
> 
> return this:
> 
> {"version":"1.1","id":2,"result":
> {"service":"6EEAADDC83484475E58A4AC1C5AB3D9D"}}
> 
> Quoting from here:
> http://hg.opensource.lshift.net/erlang-rfc4627/raw-file/a800c54e7ff3/doc/index.html
> 
> <Quote>
> Similarly, any idempotent methods provided by a service may be
> accessed via POST to the base URL for the service, or via GET to a URL
> of the form
> 
> http://localhost:5671/rpc/ServiceName/MethodName?arg=value&..
> </Quote>
> 
> I'm trying to create the equivalent GET version of the POST curl
> above, so that I can do JSON-RPC across domains. POST is not permitted
> by browsers when using jQuery, annoyingly!!!
> 
> I tried:
> 
> curl "http://dev.rabbitmq.com/rpc/rabbitmq/open?
> username=guest&password=guest&sessionTimeout=5"
> 
> and got:
> 
> {"version":"1.1","id":null,"error":{"name":"JSONRPCError","code":
> 403,"message":"Non-idempotent method","error":"open"}}
> 
> Any help much appreciated!!
> 
> Cheers,
> Donovan.
> 
> 
> _______________________________________________
> rabbitmq-discuss mailing list
> rabbitmq-discuss at lists.rabbitmq.com
> http://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss


From shane at digitalsanctum.com  Tue Jun 29 17:23:53 2010
From: shane at digitalsanctum.com (Shane)
Date: Tue, 29 Jun 2010 09:23:53 -0700 (PDT)
Subject: [rabbitmq-discuss] status of available message buses compatible
	with Java client
In-Reply-To: <806F700D7E08E9408413160B05EB66672A47466558@EXCH-MBX-1.vmware.com>
References: <0f3476d2-74a8-4b6e-82d2-81e4c71d2d73@j8g2000yqd.googlegroups.com>
	<990C545C-A35B-458E-931F-1589B071B91A@vmware.com>,
	<35f922e0-5aea-4ff0-a07a-64306e7a15bd@u26g2000yqu.googlegroups.com> 
	<392922E81643B245A905B42E3E34C24014D35168F2@EXCH-MBX-1.vmware.com> 
	<d4f75ded-77c4-40d1-ab9d-993f06dcf723@u26g2000yqu.googlegroups.com> 
	<806F700D7E08E9408413160B05EB66672A47466558@EXCH-MBX-1.vmware.com>
Message-ID: <be6f22d8-bc78-4065-b797-3497781d24d8@y4g2000yqy.googlegroups.com>

Hi Mark,

I appreciate your replies. You've helped to solidify some of my design
decisions including using your unreleased spring-amqp project. I've
noticed that there hasn't been any commits to the subversion repo you
pointed me to. Have you already moved to git? I also noticed the
documentation is not there yet and I assume you are working on that
now. I know you mentioned a July 9th date for an initial release but
I'd be interested in any other changes before then if that's cool?

Thanks again

On Jun 24, 4:44?pm, Mark Pollack <mpoll... at vmware.com> wrote:
> Hi,
>
> Was not planning on it for M1. ?We need to see what the impact is on the underlying APIs, but it will certainly be a roadmap item if not addressed in M1.
>
> Mark
>
> (yes - another Mark working on the same thing at SpringSource :)
>
>
>
>
>
> > -----Original Message-----
> > From: rabbitmq-discuss-boun... at lists.rabbitmq.com [mailto:rabbitmq-
> > discuss-boun... at lists.rabbitmq.com] On Behalf Of Shane
> > Sent: Thursday, June 24, 2010 4:33 PM
> > To: rabbitmq-disc... at lists.rabbitmq.com
> > Subject: Re: [rabbitmq-discuss] status of available message buses
> > compatible with Java client
>
> > Awesome. I noticed that the code isn't currently compatible with
> > version 1.8 of the java client. Are you planning on supporting 1.8 in
> > the short term?
>
> > On Jun 24, 11:30?am, Mark Fisher <markfis... at vmware.com> wrote:
> > > Shane,
>
> > > We are planning to release the first milestone (1.0.0.M1) on Friday
> > July 9th.
>
> > > -Mark
> > > ________________________________________
> > > From: rabbitmq-discuss-boun... at lists.rabbitmq.com [rabbitmq-discuss-
> > boun... at lists.rabbitmq.com] On Behalf Of Shane
> > [sh... at digitalsanctum.com]
> > > Sent: Thursday, June 24, 2010 10:40 AM
> > > To: rabbitmq-disc... at lists.rabbitmq.com
> > > Subject: Re: [rabbitmq-discuss] status of available message buses
> > compatible ? ?with Java client
>
> > > Mark,
>
> > > I've started looking at the code it's looking good. Any estimate on
> > > when an initial public version will be available?
>
> > > Shane
>
> > > On Jun 23, 8:09 pm, Mark Fisher <markfis... at vmware.com> wrote:
>
> > > > Shane, see my replies inline...
>
> > > > On Jun 23, 2010, at 6:28 PM, Shane wrote:
>
> > > > > I'm still feeling my way around RabbitMQ (as you might have
> > noticed
> > > > > from the number of posts I've written lately). One decision I'm
> > > > > wrestling with is what to use for message routing with the Java
> > > > > client. I've started looking into the following:
>
> > > > > - Writing my own helper classes with Spring
> > > > > - Apache Camel
> > > > > - Spring Integration with OpenCredo's contributions (amq
> > template, amq
> > > > > spring integration)
>
> > > > We will soon be releasing the first milestone of our Spring AMQP
> > project. That includes support at the same basic level as Spring's JMS
> > support (AmqpTemplate, SimpleMessageListenerContainers for Message-
> > driven POJOs, MessageConverter strategies, and more). We will be
> > providing Spring Integration Channel Adapters, Gateways, etc. that will
> > build on top of that functionality.
>
> > > > > Since RabbitMQ was recently acquired by SpringSource, SI
> > w/OpenCredo
> > > > > seems like the natural choice but there hasn't been any
> > development on
> > > > > the OpenCredo stuff since March? (looking at github).
>
> > > > We're going to be collaborating with OpenCredo on the project I
> > mentioned above, and that project is actually quite active already.
> > However, as I mentioned, we're just now approaching the first milestone
> > release. We'll be moving to Git any moment now, but until it's moved,
> > you can browse the current codebase
> > here:https://src.springsource.org/svn/se-amqp/trunk/(afterthemove it
> > will be at git.springsource.org/spring-amqp)
>
> > > > > Although Apache Camel seems to be more mature, I'd rather go the
> > > > > Spring Integration route since all of our apps already use Spring
> > for
> > > > > dependency injection, etc.
>
> > > > As the lead of Spring Integration, I'm a bit biased. That said, if
> > your main concern is having a solid (and "mature" I might add) Spring
> > foundation with implementations that are absolutely consistent with
> > Spring, then Spring Integration is probably the best choice (and 2.0 GA
> > is only a couple months away).
>
> > > > > Can someone from Rabbit comment on the state of development with
> > > > > respect to integration with Spring? Is the contributions from
> > > > > OpenCredo going to be used?
>
> > > > Hopefully this question has been answered above. Let me know if
> > there is anything that I missed.
>
> > > > Regards,
> > > > Mark
>
> > > > > I'm also interested in other message bus solutions people are
> > using
> > > > > with the Java client.
>
> > > > > Thanks again,
> > > > > Shane
> > > > > _______________________________________________
> > > > > rabbitmq-discuss mailing list
> > > > > rabbitmq-disc... at lists.rabbitmq.com
> > > > >http://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-
> > discuss
>
> > > > _______________________________________________
> > > > rabbitmq-discuss mailing list
> > > > rabbitmq-disc... at lists.rabbitmq.comhttp://lists.rabbitmq.com/cgi-
> > bin/mailman/listinfo/rabbitmq-discuss
>
> > > _______________________________________________
> > > rabbitmq-discuss mailing list
> > > rabbitmq-disc... at lists.rabbitmq.comhttp://lists.rabbitmq.com/cgi-
> > bin/mailman/listinfo/rabbitmq-discuss
> > > _______________________________________________
> > > rabbitmq-discuss mailing list
> > > rabbitmq-disc... at lists.rabbitmq.comhttps://lists.rabbitmq.com/cgi-
> > bin/mailman/listinfo/rabbitmq-discuss
> > _______________________________________________
> > rabbitmq-discuss mailing list
> > rabbitmq-disc... at lists.rabbitmq.com
> >https://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss
>
> _______________________________________________
> rabbitmq-discuss mailing list
> rabbitmq-disc... at lists.rabbitmq.comhttps://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss

From mpollack at vmware.com  Tue Jun 29 18:07:58 2010
From: mpollack at vmware.com (Mark Pollack)
Date: Tue, 29 Jun 2010 10:07:58 -0700
Subject: [rabbitmq-discuss] status of available message buses
	compatible	with Java client
In-Reply-To: <be6f22d8-bc78-4065-b797-3497781d24d8@y4g2000yqy.googlegroups.com>
References: <0f3476d2-74a8-4b6e-82d2-81e4c71d2d73@j8g2000yqd.googlegroups.com>
	<990C545C-A35B-458E-931F-1589B071B91A@vmware.com>,
	<35f922e0-5aea-4ff0-a07a-64306e7a15bd@u26g2000yqu.googlegroups.com>
	<392922E81643B245A905B42E3E34C24014D35168F2@EXCH-MBX-1.vmware.com>
	<d4f75ded-77c4-40d1-ab9d-993f06dcf723@u26g2000yqu.googlegroups.com>
	<806F700D7E08E9408413160B05EB66672A47466558@EXCH-MBX-1.vmware.com>
	<be6f22d8-bc78-4065-b797-3497781d24d8@y4g2000yqy.googlegroups.com>
Message-ID: <806F700D7E08E9408413160B05EB66672A47662910@EXCH-MBX-1.vmware.com>

Hi,

We are moving to git today/tomorrow.  There will be some changes in terms of moving some admin functionality around the maven modules and internal structuring of the erlang mappings to rabbit function.  

We are also going to shift to a simplistic resource model for M1 instead of caching channels as we need more time to get the resource management correct.  The issue is that we really need to cache connection/channels pairs since an error on a single channel ends up effecting the whole connection - this means all async consumers are effected and stop processing based on the behavior of one consumer.  

Yea, July 9th is still our target date, no docs yet and we need more integration testing as well :)

Mark


> -----Original Message-----
> From: rabbitmq-discuss-bounces at lists.rabbitmq.com [mailto:rabbitmq-
> discuss-bounces at lists.rabbitmq.com] On Behalf Of Shane
> Sent: Tuesday, June 29, 2010 12:24 PM
> To: rabbitmq-discuss at lists.rabbitmq.com
> Subject: Re: [rabbitmq-discuss] status of available message buses
> compatible with Java client
> 
> Hi Mark,
> 
> I appreciate your replies. You've helped to solidify some of my design
> decisions including using your unreleased spring-amqp project. I've
> noticed that there hasn't been any commits to the subversion repo you
> pointed me to. Have you already moved to git? I also noticed the
> documentation is not there yet and I assume you are working on that
> now. I know you mentioned a July 9th date for an initial release but
> I'd be interested in any other changes before then if that's cool?
> 
> Thanks again
> 
> On Jun 24, 4:44?pm, Mark Pollack <mpoll... at vmware.com> wrote:
> > Hi,
> >
> > Was not planning on it for M1. ?We need to see what the impact is on
> the underlying APIs, but it will certainly be a roadmap item if not
> addressed in M1.
> >
> > Mark
> >
> > (yes - another Mark working on the same thing at SpringSource :)
> >
> >
> >
> >
> >
> > > -----Original Message-----
> > > From: rabbitmq-discuss-boun... at lists.rabbitmq.com [mailto:rabbitmq-
> > > discuss-boun... at lists.rabbitmq.com] On Behalf Of Shane
> > > Sent: Thursday, June 24, 2010 4:33 PM
> > > To: rabbitmq-disc... at lists.rabbitmq.com
> > > Subject: Re: [rabbitmq-discuss] status of available message buses
> > > compatible with Java client
> >
> > > Awesome. I noticed that the code isn't currently compatible with
> > > version 1.8 of the java client. Are you planning on supporting 1.8
> in
> > > the short term?
> >
> > > On Jun 24, 11:30?am, Mark Fisher <markfis... at vmware.com> wrote:
> > > > Shane,
> >
> > > > We are planning to release the first milestone (1.0.0.M1) on
> Friday
> > > July 9th.
> >
> > > > -Mark
> > > > ________________________________________
> > > > From: rabbitmq-discuss-boun... at lists.rabbitmq.com [rabbitmq-
> discuss-
> > > boun... at lists.rabbitmq.com] On Behalf Of Shane
> > > [sh... at digitalsanctum.com]
> > > > Sent: Thursday, June 24, 2010 10:40 AM
> > > > To: rabbitmq-disc... at lists.rabbitmq.com
> > > > Subject: Re: [rabbitmq-discuss] status of available message buses
> > > compatible ? ?with Java client
> >
> > > > Mark,
> >
> > > > I've started looking at the code it's looking good. Any estimate
> on
> > > > when an initial public version will be available?
> >
> > > > Shane
> >
> > > > On Jun 23, 8:09 pm, Mark Fisher <markfis... at vmware.com> wrote:
> >
> > > > > Shane, see my replies inline...
> >
> > > > > On Jun 23, 2010, at 6:28 PM, Shane wrote:
> >
> > > > > > I'm still feeling my way around RabbitMQ (as you might have
> > > noticed
> > > > > > from the number of posts I've written lately). One decision
> I'm
> > > > > > wrestling with is what to use for message routing with the
> Java
> > > > > > client. I've started looking into the following:
> >
> > > > > > - Writing my own helper classes with Spring
> > > > > > - Apache Camel
> > > > > > - Spring Integration with OpenCredo's contributions (amq
> > > template, amq
> > > > > > spring integration)
> >
> > > > > We will soon be releasing the first milestone of our Spring
> AMQP
> > > project. That includes support at the same basic level as Spring's
> JMS
> > > support (AmqpTemplate, SimpleMessageListenerContainers for Message-
> > > driven POJOs, MessageConverter strategies, and more). We will be
> > > providing Spring Integration Channel Adapters, Gateways, etc. that
> will
> > > build on top of that functionality.
> >
> > > > > > Since RabbitMQ was recently acquired by SpringSource, SI
> > > w/OpenCredo
> > > > > > seems like the natural choice but there hasn't been any
> > > development on
> > > > > > the OpenCredo stuff since March? (looking at github).
> >
> > > > > We're going to be collaborating with OpenCredo on the project I
> > > mentioned above, and that project is actually quite active already.
> > > However, as I mentioned, we're just now approaching the first
> milestone
> > > release. We'll be moving to Git any moment now, but until it's
> moved,
> > > you can browse the current codebase
> > > here:https://src.springsource.org/svn/se-amqp/trunk/(afterthemove
> it
> > > will be at git.springsource.org/spring-amqp)
> >
> > > > > > Although Apache Camel seems to be more mature, I'd rather go
> the
> > > > > > Spring Integration route since all of our apps already use
> Spring
> > > for
> > > > > > dependency injection, etc.
> >
> > > > > As the lead of Spring Integration, I'm a bit biased. That said,
> if
> > > your main concern is having a solid (and "mature" I might add)
> Spring
> > > foundation with implementations that are absolutely consistent with
> > > Spring, then Spring Integration is probably the best choice (and
> 2.0 GA
> > > is only a couple months away).
> >
> > > > > > Can someone from Rabbit comment on the state of development
> with
> > > > > > respect to integration with Spring? Is the contributions from
> > > > > > OpenCredo going to be used?
> >
> > > > > Hopefully this question has been answered above. Let me know if
> > > there is anything that I missed.
> >
> > > > > Regards,
> > > > > Mark
> >
> > > > > > I'm also interested in other message bus solutions people are
> > > using
> > > > > > with the Java client.
> >
> > > > > > Thanks again,
> > > > > > Shane
> > > > > > _______________________________________________
> > > > > > rabbitmq-discuss mailing list
> > > > > > rabbitmq-disc... at lists.rabbitmq.com
> > > > > >http://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-
> > > discuss
> >
> > > > > _______________________________________________
> > > > > rabbitmq-discuss mailing list
> > > > > rabbitmq-
> disc... at lists.rabbitmq.comhttp://lists.rabbitmq.com/cgi-
> > > bin/mailman/listinfo/rabbitmq-discuss
> >
> > > > _______________________________________________
> > > > rabbitmq-discuss mailing list
> > > > rabbitmq-disc... at lists.rabbitmq.comhttp://lists.rabbitmq.com/cgi-
> > > bin/mailman/listinfo/rabbitmq-discuss
> > > > _______________________________________________
> > > > rabbitmq-discuss mailing list
> > > > rabbitmq-
> disc... at lists.rabbitmq.comhttps://lists.rabbitmq.com/cgi-
> > > bin/mailman/listinfo/rabbitmq-discuss
> > > _______________________________________________
> > > rabbitmq-discuss mailing list
> > > rabbitmq-disc... at lists.rabbitmq.com
> > >https://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss
> >
> > _______________________________________________
> > rabbitmq-discuss mailing list
> > rabbitmq-disc... at lists.rabbitmq.comhttps://lists.rabbitmq.com/cgi-
> bin/mailman/listinfo/rabbitmq-discuss
> _______________________________________________
> rabbitmq-discuss mailing list
> rabbitmq-discuss at lists.rabbitmq.com
> https://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss

From natester at gmail.com  Tue Jun 29 18:07:27 2010
From: natester at gmail.com (Nathaniel Haggard)
Date: Tue, 29 Jun 2010 11:07:27 -0600
Subject: [rabbitmq-discuss] ssl certificate to client lookup
In-Reply-To: <19497.35021.831383.102680@mercury.cern.ch>
References: <AANLkTimK1NSUevhDMV-62gTSgjKXrl4hMTJNzkkcRIpI@mail.gmail.com>
	<20100625130314.GW14541@rabbitmq.com>
	<vfqy6dzg01p.fsf@mercury.cern.ch> <4C28C63B.5000907@rabbitmq.com>
	<19497.35021.831383.102680@mercury.cern.ch>
Message-ID: <AANLkTimwqXR_-bCCPTDMFE8dmHLxhQsDCfceJwSmLnk-@mail.gmail.com>

On Mon, Jun 28, 2010 at 11:46 PM, Lionel Cons <lionel.cons at cern.ch> wrote:
> Matthias Radestock writes:
> ?> Couldn't you simply get the sender to sign the message and the recipient
> ?> to verify the signature?
>
> This would work in the cases where we control the clients.
> Unfortunately, this is not always the case.
>
> In case something bad happens (invalid message, too many messages...),
> we want to know who sent the offending messages.

So do we.

If rabbitmqctl list_connections showed the ssl common name in
client_properties then we could find the queue by joining
list_connections output with list_queues output on pid and owner_pid
respectively.  If we found a misbehaving client we would revoke its
certificate; though, CRL was not supported as of last year
http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/2009-July/004187.html.
 Is it now?

Matt,

Is client_properties where you plan to put the ssl information?


-Nate

From ovidiudeac at gmail.com  Tue Jun 29 22:33:10 2010
From: ovidiudeac at gmail.com (Ovidiu Deac)
Date: Wed, 30 Jun 2010 00:33:10 +0300
Subject: [rabbitmq-discuss] rabbitmq-bql cannot create queue
In-Reply-To: <4C286B35.3090102@rabbitmq.com>
References: <AANLkTimP-XNufg9Q5I-FJUn8wg9VSHqvC2pzVdrIpVgA@mail.gmail.com>
	<AANLkTikiybefkuvsdBYK-zT0Sf36iz60t4CfnuR04Mjh@mail.gmail.com>
	<4C286B35.3090102@rabbitmq.com>
Message-ID: <AANLkTilEgJAp1mt69tQ-6hKTxk1wQa0OuJam4FKJuLOo@mail.gmail.com>

I reinstalled and it worked just fine. Thanks!

Another problem that I noticed earlier was that selecting only a few
columns didn't work.
Example: "select name,messages from queues"

This is also fixed now.

Ovidiu

On Mon, Jun 28, 2010 at 12:28 PM, Alexandru Scvortov
<alexandru at rabbitmq.com> wrote:
> Merged into default.
>
> Ovidiu, if you rerun the BQL installation, everything should be fine now.
>
> Please let us know if you run across any other problems.
>
> Cheers,
> Alex
>
> On 06/28/2010 02:31 AM, Paul Jones wrote:
>> Hi Ovidiu,
>>
>> I've got a branch of the BQL client at
>> http://bitbucket.org/paulj/rabbitmq-bql which fixes this problem. If you
>> clone that and switch to the bug22904 branch, then you should see the
>> problem go away.
>>
>> Cheers,
>> Paul.
>>
>> On Mon, Jun 28, 2010 at 12:06 AM, Ovidiu Deac <ovidiudeac at gmail.com> wrote:
>>
>>
>>> Hi,
>>>
>>> When I try to create a using bql client the command fails with the
>>> following message:
>>>
>>> $ ./bql
>>> BQL> create queue myqueue
>>> {'EXIT',{undef,[{rabbit_amqqueue,declare,
>>> ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? [{resource,<<"/">>,queue,<<"myqueue">>},
>>> ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ?false,false,[]]},
>>> ? ? ? ? ? ? ? ?{bql_applicator,apply_command,2},
>>> ? ? ? ? ? ? ? ?{bql_applicator,'-apply_commands/3-lc$^0/1-0-',4},
>>> ? ? ? ? ? ? ? ?{bql_applicator,apply_commands,3},
>>> ? ? ? ? ? ? ? ?{bql_server,handle_message,1},
>>> ? ? ? ? ? ? ? ?{bql_server,handle_call,3},
>>> ? ? ? ? ? ? ? ?{gen_server,handle_msg,5},
>>> ? ? ? ? ? ? ? ?{proc_lib,init_p_do_apply,3}]}}
>>>
>>> Can anybody help me with this?
>>>
>>> Thanks in advance!
>>> ovidiu
>>> _______________________________________________
>>> rabbitmq-discuss mailing list
>>> rabbitmq-discuss at lists.rabbitmq.com
>>> https://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss
>>>
>>>
>>
>>
>>
>> _______________________________________________
>> rabbitmq-discuss mailing list
>> rabbitmq-discuss at lists.rabbitmq.com
>> https://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss
>>
>
> _______________________________________________
> rabbitmq-discuss mailing list
> rabbitmq-discuss at lists.rabbitmq.com
> https://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss
>

From ovidiudeac at gmail.com  Tue Jun 29 23:02:07 2010
From: ovidiudeac at gmail.com (Ovidiu Deac)
Date: Wed, 30 Jun 2010 01:02:07 +0300
Subject: [rabbitmq-discuss] rabbitmq-bql cannot create queue
In-Reply-To: <AANLkTilEgJAp1mt69tQ-6hKTxk1wQa0OuJam4FKJuLOo@mail.gmail.com>
References: <AANLkTimP-XNufg9Q5I-FJUn8wg9VSHqvC2pzVdrIpVgA@mail.gmail.com>
	<AANLkTikiybefkuvsdBYK-zT0Sf36iz60t4CfnuR04Mjh@mail.gmail.com>
	<4C286B35.3090102@rabbitmq.com>
	<AANLkTilEgJAp1mt69tQ-6hKTxk1wQa0OuJam4FKJuLOo@mail.gmail.com>
Message-ID: <AANLkTikSKWTkhY-Vg-XAzNwKRrCFyO4cp3d-_g_VNzvC@mail.gmail.com>

Another issue that I encountered was the fact that if I built
rabbitmq-public-umbrella and then I installed the bql plugin the bql
client didn't work.

In order to fix this I had to
1. build umbrella
2. cd to rabbitmq-bql
3. make clean && make
4. install the bql plugin

Then it worked just fine.

ovidiu

On Wed, Jun 30, 2010 at 12:33 AM, Ovidiu Deac <ovidiudeac at gmail.com> wrote:
> I reinstalled and it worked just fine. Thanks!
>
> Another problem that I noticed earlier was that selecting only a few
> columns didn't work.
> Example: "select name,messages from queues"
>
> This is also fixed now.
>
> Ovidiu
>
> On Mon, Jun 28, 2010 at 12:28 PM, Alexandru Scvortov
> <alexandru at rabbitmq.com> wrote:
>> Merged into default.
>>
>> Ovidiu, if you rerun the BQL installation, everything should be fine now.
>>
>> Please let us know if you run across any other problems.
>>
>> Cheers,
>> Alex
>>
>> On 06/28/2010 02:31 AM, Paul Jones wrote:
>>> Hi Ovidiu,
>>>
>>> I've got a branch of the BQL client at
>>> http://bitbucket.org/paulj/rabbitmq-bql which fixes this problem. If you
>>> clone that and switch to the bug22904 branch, then you should see the
>>> problem go away.
>>>
>>> Cheers,
>>> Paul.
>>>
>>> On Mon, Jun 28, 2010 at 12:06 AM, Ovidiu Deac <ovidiudeac at gmail.com> wrote:
>>>
>>>
>>>> Hi,
>>>>
>>>> When I try to create a using bql client the command fails with the
>>>> following message:
>>>>
>>>> $ ./bql
>>>> BQL> create queue myqueue
>>>> {'EXIT',{undef,[{rabbit_amqqueue,declare,
>>>> ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? [{resource,<<"/">>,queue,<<"myqueue">>},
>>>> ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ?false,false,[]]},
>>>> ? ? ? ? ? ? ? ?{bql_applicator,apply_command,2},
>>>> ? ? ? ? ? ? ? ?{bql_applicator,'-apply_commands/3-lc$^0/1-0-',4},
>>>> ? ? ? ? ? ? ? ?{bql_applicator,apply_commands,3},
>>>> ? ? ? ? ? ? ? ?{bql_server,handle_message,1},
>>>> ? ? ? ? ? ? ? ?{bql_server,handle_call,3},
>>>> ? ? ? ? ? ? ? ?{gen_server,handle_msg,5},
>>>> ? ? ? ? ? ? ? ?{proc_lib,init_p_do_apply,3}]}}
>>>>
>>>> Can anybody help me with this?
>>>>
>>>> Thanks in advance!
>>>> ovidiu
>>>> _______________________________________________
>>>> rabbitmq-discuss mailing list
>>>> rabbitmq-discuss at lists.rabbitmq.com
>>>> https://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss
>>>>
>>>>
>>>
>>>
>>>
>>> _______________________________________________
>>> rabbitmq-discuss mailing list
>>> rabbitmq-discuss at lists.rabbitmq.com
>>> https://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss
>>>
>>
>> _______________________________________________
>> rabbitmq-discuss mailing list
>> rabbitmq-discuss at lists.rabbitmq.com
>> https://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss
>>
>

From alexandru at rabbitmq.com  Wed Jun 30 09:37:21 2010
From: alexandru at rabbitmq.com (Alexandru Scvortov)
Date: Wed, 30 Jun 2010 09:37:21 +0100
Subject: [rabbitmq-discuss] rabbitmq-bql cannot create queue
In-Reply-To: <AANLkTikSKWTkhY-Vg-XAzNwKRrCFyO4cp3d-_g_VNzvC@mail.gmail.com>
References: <AANLkTimP-XNufg9Q5I-FJUn8wg9VSHqvC2pzVdrIpVgA@mail.gmail.com>	<AANLkTikiybefkuvsdBYK-zT0Sf36iz60t4CfnuR04Mjh@mail.gmail.com>	<4C286B35.3090102@rabbitmq.com>	<AANLkTilEgJAp1mt69tQ-6hKTxk1wQa0OuJam4FKJuLOo@mail.gmail.com>
	<AANLkTikSKWTkhY-Vg-XAzNwKRrCFyO4cp3d-_g_VNzvC@mail.gmail.com>
Message-ID: <4C2B0241.9060500@rabbitmq.com>

Hi Ovidiu,

I'm having trouble reproducing this. Building rabbitmq-public-umbrella,
activating the plugins, unzipping the new rabbitmq-bql-client.zip and
running bql works fine for me.

Cheers,
Alex

On 06/29/2010 11:02 PM, Ovidiu Deac wrote:
> Another issue that I encountered was the fact that if I built
> rabbitmq-public-umbrella and then I installed the bql plugin the bql
> client didn't work.
>
> In order to fix this I had to
> 1. build umbrella
> 2. cd to rabbitmq-bql
> 3. make clean && make
> 4. install the bql plugin
>
>   

From ovidiudeac at gmail.com  Wed Jun 30 15:39:56 2010
From: ovidiudeac at gmail.com (Ovidiu Deac)
Date: Wed, 30 Jun 2010 17:39:56 +0300
Subject: [rabbitmq-discuss] can I do a rabbitmq message pool?
Message-ID: <AANLkTim7xBv2_WvLmGFos4Co-Onx7Sp1n2fGMCPUtXBy@mail.gmail.com>

Hello,

I'm porting an application to use rabbitmq. The legacy code was using
an SQL db for messaging.

I'm facing the following problem which I'm not sure how to solve so I
hope you might give me an idea.

The module that I'm working on right now receives an input message M
makes an HTTP POST with some information contained in M and then
depending on the response it sends a message to the payment module and
also sends a message back to the caller.

I have a input module that consumes messages from an input queue,
sends the post parameters to the http queue from where the http module
will take it and make an http post request. When an http response is
available the response is placed in an http responses queue.

My problem is the matching between the http responses and the initial
messages so I can continue the processing.

Is it possible to retrieve a message from a queue based on an id? I
would need more like a pool then a queue.

I could do that in code but I want my message to be safe in case of a
crash so I would like to make use of the message persistence.

Thanks,
ovidiu

From ovidiudeac at gmail.com  Wed Jun 30 17:47:50 2010
From: ovidiudeac at gmail.com (Ovidiu Deac)
Date: Wed, 30 Jun 2010 19:47:50 +0300
Subject: [rabbitmq-discuss] rabbitmq-bql cannot create queue
In-Reply-To: <4C2B0241.9060500@rabbitmq.com>
References: <AANLkTimP-XNufg9Q5I-FJUn8wg9VSHqvC2pzVdrIpVgA@mail.gmail.com>
	<AANLkTikiybefkuvsdBYK-zT0Sf36iz60t4CfnuR04Mjh@mail.gmail.com>
	<4C286B35.3090102@rabbitmq.com>
	<AANLkTilEgJAp1mt69tQ-6hKTxk1wQa0OuJam4FKJuLOo@mail.gmail.com>
	<AANLkTikSKWTkhY-Vg-XAzNwKRrCFyO4cp3d-_g_VNzvC@mail.gmail.com>
	<4C2B0241.9060500@rabbitmq.com>
Message-ID: <AANLkTikMTRqBMEmf6g0yyH6ryxaaQ5T4AyPwj5CjTP1J@mail.gmail.com>

I can't reproduce it anymore. I guess I did something wrong in the first place.

On Wed, Jun 30, 2010 at 11:37 AM, Alexandru Scvortov
<alexandru at rabbitmq.com> wrote:
> Hi Ovidiu,
>
> I'm having trouble reproducing this. Building rabbitmq-public-umbrella,
> activating the plugins, unzipping the new rabbitmq-bql-client.zip and
> running bql works fine for me.
>
> Cheers,
> Alex
>
> On 06/29/2010 11:02 PM, Ovidiu Deac wrote:
>> Another issue that I encountered was the fact that if I built
>> rabbitmq-public-umbrella and then I installed the bql plugin the bql
>> client didn't work.
>>
>> In order to fix this I had to
>> 1. build umbrella
>> 2. cd to rabbitmq-bql
>> 3. make clean && make
>> 4. install the bql plugin
>>
>>
>

From david at rabbitmq.com  Wed Jun 30 17:52:19 2010
From: david at rabbitmq.com (David Wragg)
Date: Wed, 30 Jun 2010 17:52:19 +0100
Subject: [rabbitmq-discuss] can I do a rabbitmq message pool?
In-Reply-To: <AANLkTim7xBv2_WvLmGFos4Co-Onx7Sp1n2fGMCPUtXBy@mail.gmail.com>
	(Ovidiu Deac's message of "Wed, 30 Jun 2010 17:39:56 +0300")
References: <AANLkTim7xBv2_WvLmGFos4Co-Onx7Sp1n2fGMCPUtXBy@mail.gmail.com>
Message-ID: <yrv4caaqcbgzg.fsf@dwragg.eng.vmware.com>

Hi Ovidiu,

Ovidiu Deac <ovidiudeac at gmail.com> writes:
> [...]
> Is it possible to retrieve a message from a queue based on an id? I
> would need more like a pool then a queue.

Rabbit only supports obtaining messages from the head of a queue
(whether by consuming or by basic.get).  There is currently no way to
query or browse the messages within a queue.

> I could do that in code but I want my message to be safe in case of a
> crash so I would like to make use of the message persistence.

People normally use databases in your situation.  NoSQL key-value
databases work nicely here, because you can just store the message body
under the relevant ID without worrying about schemas.  But relational
DBs will work too.

David

-- 
David Wragg
Staff Engineer, RabbitMQ
SpringSource, a division of VMware

From simon at rabbitmq.com  Wed Jun 30 18:00:44 2010
From: simon at rabbitmq.com (Simon MacMullen)
Date: Wed, 30 Jun 2010 18:00:44 +0100
Subject: [rabbitmq-discuss] can I do a rabbitmq message pool?
In-Reply-To: <yrv4caaqcbgzg.fsf@dwragg.eng.vmware.com>
References: <AANLkTim7xBv2_WvLmGFos4Co-Onx7Sp1n2fGMCPUtXBy@mail.gmail.com>
	<yrv4caaqcbgzg.fsf@dwragg.eng.vmware.com>
Message-ID: <4C2B783C.7010502@rabbitmq.com>

On 30/06/10 17:52, David Wragg wrote:
> Hi Ovidiu,
>
> Ovidiu Deac<ovidiudeac at gmail.com>  writes:
>> [...]
>> Is it possible to retrieve a message from a queue based on an id? I
>> would need more like a pool then a queue.
>
> Rabbit only supports obtaining messages from the head of a queue
> (whether by consuming or by basic.get).  There is currently no way to
> query or browse the messages within a queue.

While what David says is true, another approach that sometimes makes 
sense is for each {thread, worker process, whatever} in the input module 
to declare a private queue for its replies, if it can cope with getting 
its own responses out of order (may not be a big deal; it may only have 
one request outstanding?)

Cheers, Simon

-- 
Simon MacMullen
Staff Engineer, RabbitMQ
SpringSource, a division of VMware


From shane at digitalsanctum.com  Wed Jun 30 18:45:05 2010
From: shane at digitalsanctum.com (Shane)
Date: Wed, 30 Jun 2010 10:45:05 -0700 (PDT)
Subject: [rabbitmq-discuss] status of available message buses compatible
	with Java client
In-Reply-To: <806F700D7E08E9408413160B05EB66672A47662910@EXCH-MBX-1.vmware.com>
References: <0f3476d2-74a8-4b6e-82d2-81e4c71d2d73@j8g2000yqd.googlegroups.com>
	<990C545C-A35B-458E-931F-1589B071B91A@vmware.com>,
	<35f922e0-5aea-4ff0-a07a-64306e7a15bd@u26g2000yqu.googlegroups.com> 
	<392922E81643B245A905B42E3E34C24014D35168F2@EXCH-MBX-1.vmware.com> 
	<d4f75ded-77c4-40d1-ab9d-993f06dcf723@u26g2000yqu.googlegroups.com> 
	<806F700D7E08E9408413160B05EB66672A47466558@EXCH-MBX-1.vmware.com> 
	<be6f22d8-bc78-4065-b797-3497781d24d8@y4g2000yqy.googlegroups.com> 
	<806F700D7E08E9408413160B05EB66672A47662910@EXCH-MBX-1.vmware.com>
Message-ID: <d6e375c8-8a7c-4433-bc61-e9b3d5c502de@y4g2000yqy.googlegroups.com>

Great. Would you mind posting the location of the git repo when it
becomes available? I'd like to stay on top of changes. Also, is there
a better way to communicate about spring amqp other than this
discussion thread?

Shane

On Jun 29, 1:07?pm, Mark Pollack <mpoll... at vmware.com> wrote:
> Hi,
>
> We are moving to git today/tomorrow. ?There will be some changes in terms of moving some admin functionality around the maven modules and internal structuring of the erlang mappings to rabbit function. ?
>
> We are also going to shift to a simplistic resource model for M1 instead of caching channels as we need more time to get the resource management correct. ?The issue is that we really need to cache connection/channels pairs since an error on a single channel ends up effecting the whole connection - this means all async consumers are effected and stop processing based on the behavior of one consumer. ?
>
> Yea, July 9th is still our target date, no docs yet and we need more integration testing as well :)
>
> Mark
>
>
>
>
>
> > -----Original Message-----
> > From: rabbitmq-discuss-boun... at lists.rabbitmq.com [mailto:rabbitmq-
> > discuss-boun... at lists.rabbitmq.com] On Behalf Of Shane
> > Sent: Tuesday, June 29, 2010 12:24 PM
> > To: rabbitmq-disc... at lists.rabbitmq.com
> > Subject: Re: [rabbitmq-discuss] status of available message buses
> > compatible with Java client
>
> > Hi Mark,
>
> > I appreciate your replies. You've helped to solidify some of my design
> > decisions including using your unreleased spring-amqp project. I've
> > noticed that there hasn't been any commits to the subversion repo you
> > pointed me to. Have you already moved to git? I also noticed the
> > documentation is not there yet and I assume you are working on that
> > now. I know you mentioned a July 9th date for an initial release but
> > I'd be interested in any other changes before then if that's cool?
>
> > Thanks again
>
> > On Jun 24, 4:44?pm, Mark Pollack <mpoll... at vmware.com> wrote:
> > > Hi,
>
> > > Was not planning on it for M1. ?We need to see what the impact is on
> > the underlying APIs, but it will certainly be a roadmap item if not
> > addressed in M1.
>
> > > Mark
>
> > > (yes - another Mark working on the same thing at SpringSource :)
>
> > > > -----Original Message-----
> > > > From: rabbitmq-discuss-boun... at lists.rabbitmq.com [mailto:rabbitmq-
> > > > discuss-boun... at lists.rabbitmq.com] On Behalf Of Shane
> > > > Sent: Thursday, June 24, 2010 4:33 PM
> > > > To: rabbitmq-disc... at lists.rabbitmq.com
> > > > Subject: Re: [rabbitmq-discuss] status of available message buses
> > > > compatible with Java client
>
> > > > Awesome. I noticed that the code isn't currently compatible with
> > > > version 1.8 of the java client. Are you planning on supporting 1.8
> > in
> > > > the short term?
>
> > > > On Jun 24, 11:30?am, Mark Fisher <markfis... at vmware.com> wrote:
> > > > > Shane,
>
> > > > > We are planning to release the first milestone (1.0.0.M1) on
> > Friday
> > > > July 9th.
>
> > > > > -Mark
> > > > > ________________________________________
> > > > > From: rabbitmq-discuss-boun... at lists.rabbitmq.com [rabbitmq-
> > discuss-
> > > > boun... at lists.rabbitmq.com] On Behalf Of Shane
> > > > [sh... at digitalsanctum.com]
> > > > > Sent: Thursday, June 24, 2010 10:40 AM
> > > > > To: rabbitmq-disc... at lists.rabbitmq.com
> > > > > Subject: Re: [rabbitmq-discuss] status of available message buses
> > > > compatible ? ?with Java client
>
> > > > > Mark,
>
> > > > > I've started looking at the code it's looking good. Any estimate
> > on
> > > > > when an initial public version will be available?
>
> > > > > Shane
>
> > > > > On Jun 23, 8:09 pm, Mark Fisher <markfis... at vmware.com> wrote:
>
> > > > > > Shane, see my replies inline...
>
> > > > > > On Jun 23, 2010, at 6:28 PM, Shane wrote:
>
> > > > > > > I'm still feeling my way around RabbitMQ (as you might have
> > > > noticed
> > > > > > > from the number of posts I've written lately). One decision
> > I'm
> > > > > > > wrestling with is what to use for message routing with the
> > Java
> > > > > > > client. I've started looking into the following:
>
> > > > > > > - Writing my own helper classes with Spring
> > > > > > > - Apache Camel
> > > > > > > - Spring Integration with OpenCredo's contributions (amq
> > > > template, amq
> > > > > > > spring integration)
>
> > > > > > We will soon be releasing the first milestone of our Spring
> > AMQP
> > > > project. That includes support at the same basic level as Spring's
> > JMS
> > > > support (AmqpTemplate, SimpleMessageListenerContainers for Message-
> > > > driven POJOs, MessageConverter strategies, and more). We will be
> > > > providing Spring Integration Channel Adapters, Gateways, etc. that
> > will
> > > > build on top of that functionality.
>
> > > > > > > Since RabbitMQ was recently acquired by SpringSource, SI
> > > > w/OpenCredo
> > > > > > > seems like the natural choice but there hasn't been any
> > > > development on
> > > > > > > the OpenCredo stuff since March? (looking at github).
>
> > > > > > We're going to be collaborating with OpenCredo on the project I
> > > > mentioned above, and that project is actually quite active already.
> > > > However, as I mentioned, we're just now approaching the first
> > milestone
> > > > release. We'll be moving to Git any moment now, but until it's
> > moved,
> > > > you can browse the current codebase
> > > > here:https://src.springsource.org/svn/se-amqp/trunk/(afterthemove
> > it
> > > > will be at git.springsource.org/spring-amqp)
>
> > > > > > > Although Apache Camel seems to be more mature, I'd rather go
> > the
> > > > > > > Spring Integration route since all of our apps already use
> > Spring
> > > > for
> > > > > > > dependency injection, etc.
>
> > > > > > As the lead of Spring Integration, I'm a bit biased. That said,
> > if
> > > > your main concern is having a solid (and "mature" I might add)
> > Spring
> > > > foundation with implementations that are absolutely consistent with
> > > > Spring, then Spring Integration is probably the best choice (and
> > 2.0 GA
> > > > is only a couple months away).
>
> > > > > > > Can someone from Rabbit comment on the state of development
> > with
> > > > > > > respect to integration with Spring? Is the contributions from
> > > > > > > OpenCredo going to be used?
>
> > > > > > Hopefully this question has been answered above. Let me know if
> > > > there is anything that I missed.
>
> > > > > > Regards,
> > > > > > Mark
>
> > > > > > > I'm also interested in other message bus solutions people are
> > > > using
> > > > > > > with the Java client.
>
> > > > > > > Thanks again,
> > > > > > > Shane
> > > > > > > _______________________________________________
> > > > > > > rabbitmq-discuss mailing list
> > > > > > > rabbitmq-disc... at lists.rabbitmq.com
> > > > > > >http://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-
> > > > discuss
>
> > > > > > _______________________________________________
> > > > > > rabbitmq-discuss mailing list
> > > > > > rabbitmq-
> > disc... at lists.rabbitmq.comhttp://lists.rabbitmq.com/cgi-
> > > > bin/mailman/listinfo/rabbitmq-discuss
>
> > > > > _______________________________________________
> > > > > rabbitmq-discuss mailing list
> > > > > rabbitmq-disc... at lists.rabbitmq.comhttp://lists.rabbitmq.com/cgi-
> > > > bin/mailman/listinfo/rabbitmq-discuss
> > > > > _______________________________________________
> > > > > rabbitmq-discuss mailing list
> > > > > rabbitmq-
> > disc... at lists.rabbitmq.comhttps://lists.rabbitmq.com/cgi-
> > > > bin/mailman/listinfo/rabbitmq-discuss
> > > > _______________________________________________
> > > > rabbitmq-discuss mailing list
> > > > rabbitmq-disc... at lists.rabbitmq.com
> > > >https://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss
>
> > > _______________________________________________
> > > rabbitmq-discuss mailing list
> > > rabbitmq-disc... at lists.rabbitmq.comhttps://lists.rabbitmq.com/cgi-
> > bin/mailman/listinfo/rabbitmq-discuss
> > _______________________________________________
> > rabbitmq-discuss mailing list
> > rabbitmq-disc... at lists.rabbitmq.com
> >https://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss
>
> _______________________________________________
> rabbitmq-discuss mailing list
> rabbitmq-disc... at lists.rabbitmq.comhttps://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss

From irrer at umich.edu  Wed Jun 30 21:54:55 2010
From: irrer at umich.edu (Jim Irrer)
Date: Wed, 30 Jun 2010 16:54:55 -0400
Subject: [rabbitmq-discuss] Fwd: RabbitMQ C library function
	amqp_simple_wait_frame takes 400 ms
In-Reply-To: <AANLkTinLqWLJP6FSqp7iFVc2E5wrwIypgN1EL1ksxiBd@mail.gmail.com>
References: <AANLkTimw1KyCa9L_-oQBCCRhG5HMDTiNrxSmOgyV6st9@mail.gmail.com>
	<yrv4cfx0aact0.fsf@dwragg.eng.vmware.com>
	<AANLkTinLqWLJP6FSqp7iFVc2E5wrwIypgN1EL1ksxiBd@mail.gmail.com>
Message-ID: <AANLkTila48OmbvUSp7po9Rppq4At2ZlhnPjVL0mEPa7k@mail.gmail.com>

What I'm trying to implement is a simple client-server paradigm where each
is single threaded.  The client sends a message to the server, and then
waits for a reply by posting a read on a separate reply queue.  When the
server gets the message, it processes it, builds a reply, and sends the
reply to the client.

I've re-built the rabbitmq-c-default library and inserted print statements
that show the time in microseconds, and the series of events is a loop that
basically does the following:

server waits on read

client sends message and then waits for reply

server gets message

server performs trivial processing

server sends reply

client gets reply

Below is a listing of events with timestamps in microseconds.  The initial
3172304
microsecond delay is the time it took me to start the client in a different
window
after starting the server.  When a process is "waiting on read", it is
actually the
system read call that is posted on the socket.  I put the print statement
inside the
AMQP library call.

relative   elapsed
  time      time    operation
--------   -------  ---------------------------------------
       0         0  server waiting on read
 3172304   3172304  client calling amqp_basic_publish
 3172331        27  client returned from amqp_basic_publish
 3172337         6  client waiting on read
 3383774    211437  server returned from read
 3383892       118  server 1 message: 1
 3383898         6  server calling amqp_basic_publish
 3383927        29  server returned from amqp_basic_publish
 3383938        11  server waiting on read
 3497244    113306  client returned from read
 3497279        35  client message: 1
 3497288         9  client calling amqp_basic_publish
 3497310        22  client returned from amqp_basic_publish
 3497315         5  client waiting on read
 3715343    218028  server returned from read
 3715374        31  server 2 message: 2
 3715378         4  server calling amqp_basic_publish
 3715400        22  server returned from amqp_basic_publish
 3715405         5  server waiting on read
 3934206    218801  client returned from read
 3934236        30  client message: 2
 3934243         7  client calling amqp_basic_publish
 3934265        22  client returned from amqp_basic_publish
 3934270         5  client waiting on read
 4153113    218843  server returned from read
 4153151        38  server 3 message: 3
 4153158         7  server calling amqp_basic_publish
 4153189        31  server returned from amqp_basic_publish
 4153197         8  server waiting on read
 4371982    218785  client returned from read
 4372017        35  client message: 3
 4372027        10  client calling amqp_basic_publish
 4372091        64  client returned from amqp_basic_publish
 4372099         8  client waiting on read
 4590627    218528  server returned from read
 4590657        30  server 4 message: 4
 4590661         4  server calling amqp_basic_publish
 4590682        21  server returned from amqp_basic_publish
 4590687         5  server waiting on read
 4809133    218446  client returned from read
 4809162        29  client message: 4
 4809169         7  client calling amqp_basic_publish
 4809190        21  client returned from amqp_basic_publish
 4809195         5  client waiting on read
 5028276    219081  server returned from read
 5028308        32  server 5 message: 5
 5028312         4  server calling amqp_basic_publish
 5028334        22  server returned from amqp_basic_publish
 5030059      1725  client returned from read
 5030077        18  client message: 5

Each side seems to be introducing a delay that is suspiciously close to 200
milliseconds, that may be some system configured value.

I tried TCP_NODELAY (it looks like TCP_NODELACK is only in AIX)
but it had no effect.  Setting this with setsockopt turns off Nagle's
algorithm which is set by default and tries to optimize socket performance
for large data transfers by deferring sends until either there is enough
data to send a full packet or a timeout occurs.  Oddly, I had to be root
to set this option.

If you have any idea as to why the extra delay is being introduced, please
let me know (and especially how to fix it :)  )

Thanks for any insights,

- Jim

Jim Irrer     irrer at umich.edu       (734) 647-4409
University of Michigan Hospital Radiation Oncology
519 W. William St.             Ann Arbor, MI 48103


---------- Forwarded message ----------
From: Brett Cameron <brett.r.cameron at gmail.com>
Date: Fri, Jun 25, 2010 at 9:57 PM
Subject: Re: [rabbitmq-discuss] RabbitMQ C library function
amqp_simple_wait_frame takes 400 ms
To: David Wragg <david at rabbitmq.com>, Jim Irrer <irrer at umich.edu>
Cc: rabbitmq-discuss <rabbitmq-discuss at lists.rabbitmq.com>


Jim,

I believe that you are looking at a TCP/IP issue here (which you may or may
not be able to address by modifying the libRabbitMQ code). My guess is that
if you set the TCP/IP kernel parameter tcpnodelack (or whatever it is called
on your operating system) to 1 (i.e. don't delay acknowledging TCP data),
you will see things improve rather significantly. Depending on what platform
you're using, you may be able to stick a setsockopt() call (using the option
TCP_NODELACK) in amqp_socket.c between the socket() call and the connect()
call instead of having to make the chnage globally by messing with the
kernel parameter.
 For what it's worth, I encountered this problem with libRabbitMQ-C on
OpenVMS just last week.. Luky for me I've seen the problem before. Seem to
recall that you guys at umich.edu used to have some OpenVMS systems...

Regards,
Brett



On Sat, Jun 26, 2010 at 11:54 AM, David Wragg <david at rabbitmq.com> wrote:

> Hi Jim,
>
> Jim Irrer <irrer at umich.edu> writes:
> > I'm working on two functions that act as a client-server pair.  They
> > use two amq.direct queues to communicate.  When ever either of
> > them calls the amqp_simple_wait_frame function, it does not return
> > for 436618 microseconds.
> >
> > Some other background info that might be relevant:
> >
> > If I only send messages in one direction it's really fast.
> >
> > Both processes are using separate connectors and different sockets.
> >
> > I used the amqp_consumer.c amqp_producer.c code in
> > the examples directory as a reference.
> >
> > Is there a way to avoid this delay?
>
> I'm not sure what you are really asking here.  As its name suggests,
> amqp_simple_wait_frame waits for a frame to arrive.  It will typically
> attempt to read from the socket connected to the AMQP server.  If no
> data is available, it will block until data is available.  The resulting
> delays are thus an intrinsic feature of amqp_simple_wait_frame.
>
> Are you sure that the 400ms delay does not simply reflect the wait for a
> message to arrive?
>
> I'm guessing, but perhaps the problem is that you want a single
> application to publish and consume messages concurrently, and you are
> finding that the synchronous nature of amqp_simple_wait_frame is an
> obstacle?  If so, the simplest work around would be to have two threads,
> one to publish and one to consume, and open a separate AMQP connection
> in each thread.
>
> > Also ...
> >
> > Could I use the same socket in each program as long as it was only
> > used by one thread at a time?
> >
> > Could I use the same connection in each program if it was only
> > used by one thread at a time?
>
> What's the distinction between socket and connection here?
>
> librabbitmq does not do anything to explicitly support multithreading,
> but neither does it do anything to conflict with it.  If you, the
> application programmer, ensure that for a given connection, only one
> thread uses librabbitmq at a time, you should be safe.
>
> --
> David Wragg
> Staff Engineer, RabbitMQ
> SpringSource, a division of VMware
> _______________________________________________
> rabbitmq-discuss mailing list
> rabbitmq-discuss at lists.rabbitmq.com
> https://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20100630/93db1b08/attachment-0001.htm>

From scott at beamdog.com  Wed Jun 30 22:14:33 2010
From: scott at beamdog.com (Scott Brooks)
Date: Wed, 30 Jun 2010 15:14:33 -0600
Subject: [rabbitmq-discuss] Fwd: RabbitMQ C library function
	amqp_simple_wait_frame takes 400 ms
In-Reply-To: <AANLkTila48OmbvUSp7po9Rppq4At2ZlhnPjVL0mEPa7k@mail.gmail.com>
References: <AANLkTimw1KyCa9L_-oQBCCRhG5HMDTiNrxSmOgyV6st9@mail.gmail.com>
	<yrv4cfx0aact0.fsf@dwragg.eng.vmware.com>
	<AANLkTinLqWLJP6FSqp7iFVc2E5wrwIypgN1EL1ksxiBd@mail.gmail.com>
	<AANLkTila48OmbvUSp7po9Rppq4At2ZlhnPjVL0mEPa7k@mail.gmail.com>
Message-ID: <AANLkTikRUsUKdCgLY2rYWcSuSR_A4gFnEZmo09cXEWM6@mail.gmail.com>

Could you post your sample code, or as simple as possible repro case?

Scott Brooks

On Wed, Jun 30, 2010 at 2:54 PM, Jim Irrer <irrer at umich.edu> wrote:
> What I'm trying to implement is a simple client-server paradigm where each
> is single threaded.? The client sends a message to the server, and then
> waits for a reply by posting a read on a separate reply queue.? When the
> server gets the message, it processes it, builds a reply, and sends the
> reply to the client.
>
> I've re-built the rabbitmq-c-default library and inserted print statements
> that show the time in microseconds, and the series of events is a loop that
> basically does the following:
>
> server waits on read
>
> client sends message and then waits for reply
>
> server gets message
>
> server performs trivial processing
>
> server sends reply
>
> client gets reply
>
> Below is a listing of events with timestamps in microseconds.? The initial
> 3172304
> microsecond delay is the time it took me to start the client in a different
> window
> after starting the server.? When a process is "waiting on read", it is
> actually the
> system read call that is posted on the socket.? I put the print statement
> inside the
> AMQP library call.
>
> relative?? elapsed
> ? time????? time??? operation
> --------?? -------? ---------------------------------------
> ?????? 0???????? 0? server waiting on read
> ?3172304?? 3172304? client calling amqp_basic_publish
> ?3172331??????? 27? client returned from amqp_basic_publish
> ?3172337???????? 6? client waiting on read
> ?3383774??? 211437? server returned from read
> ?3383892?????? 118? server 1 message: 1
> ?3383898???????? 6? server calling amqp_basic_publish
> ?3383927??????? 29? server returned from amqp_basic_publish
> ?3383938??????? 11? server waiting on read
> ?3497244??? 113306? client returned from read
> ?3497279??????? 35? client message: 1
> ?3497288???????? 9? client calling amqp_basic_publish
> ?3497310??????? 22? client returned from amqp_basic_publish
> ?3497315???????? 5? client waiting on read
> ?3715343??? 218028? server returned from read
> ?3715374??????? 31? server 2 message: 2
> ?3715378???????? 4? server calling amqp_basic_publish
> ?3715400??????? 22? server returned from amqp_basic_publish
> ?3715405???????? 5? server waiting on read
> ?3934206??? 218801? client returned from read
> ?3934236??????? 30? client message: 2
> ?3934243???????? 7? client calling amqp_basic_publish
> ?3934265??????? 22? client returned from amqp_basic_publish
> ?3934270???????? 5? client waiting on read
> ?4153113??? 218843? server returned from read
> ?4153151??????? 38? server 3 message: 3
> ?4153158???????? 7? server calling amqp_basic_publish
> ?4153189??????? 31? server returned from amqp_basic_publish
> ?4153197???????? 8? server waiting on read
> ?4371982??? 218785? client returned from read
> ?4372017??????? 35? client message: 3
> ?4372027??????? 10? client calling amqp_basic_publish
> ?4372091??????? 64? client returned from amqp_basic_publish
> ?4372099???????? 8? client waiting on read
> ?4590627??? 218528? server returned from read
> ?4590657??????? 30? server 4 message: 4
> ?4590661???????? 4? server calling amqp_basic_publish
> ?4590682??????? 21? server returned from amqp_basic_publish
> ?4590687???????? 5? server waiting on read
> ?4809133??? 218446? client returned from read
> ?4809162??????? 29? client message: 4
> ?4809169???????? 7? client calling amqp_basic_publish
> ?4809190??????? 21? client returned from amqp_basic_publish
> ?4809195???????? 5? client waiting on read
> ?5028276??? 219081? server returned from read
> ?5028308??????? 32? server 5 message: 5
> ?5028312???????? 4? server calling amqp_basic_publish
> ?5028334??????? 22? server returned from amqp_basic_publish
> ?5030059????? 1725? client returned from read
> ?5030077??????? 18? client message: 5
>
> Each side seems to be introducing a delay that is suspiciously close to 200
> milliseconds, that may be some system configured value.
>
> I tried TCP_NODELAY (it looks like TCP_NODELACK is only in AIX)
> but it had no effect.? Setting this with setsockopt turns off Nagle's
> algorithm which is set by default and tries to optimize socket performance
> for large data transfers by deferring sends until either there is enough
> data to send a full packet or a timeout occurs.? Oddly, I had to be root
> to set this option.
>
> If you have any idea as to why the extra delay is being introduced, please
> let me know (and especially how to fix it :)? )
>
> Thanks for any insights,
>
> - Jim
>
> Jim Irrer ? ? irrer at umich.edu ? ? ? (734) 647-4409
> University of Michigan Hospital Radiation Oncology
> 519 W. William St. ? ? ? ? ? ? Ann Arbor, MI 48103
>
>
> ---------- Forwarded message ----------
> From: Brett Cameron <brett.r.cameron at gmail.com>
> Date: Fri, Jun 25, 2010 at 9:57 PM
> Subject: Re: [rabbitmq-discuss] RabbitMQ C library function
> amqp_simple_wait_frame takes 400 ms
> To: David Wragg <david at rabbitmq.com>, Jim Irrer <irrer at umich.edu>
> Cc: rabbitmq-discuss <rabbitmq-discuss at lists.rabbitmq.com>
>
>
> Jim,
>
> I believe that you are looking at a TCP/IP issue here (which you may or may
> not be able to address by modifying the libRabbitMQ code).?My guess is that
> if you set the TCP/IP kernel parameter tcpnodelack?(or whatever it is called
> on your operating system) to 1 (i.e. don't delay acknowledging TCP data),
> you will see things improve rather significantly. Depending on what platform
> you're using, you may be able to stick a setsockopt() call (using the option
> TCP_NODELACK) in amqp_socket.c between the socket() call and the connect()
> call instead of having to make the chnage globally by messing with the
> kernel parameter.
> For what it's worth, I encountered this problem with libRabbitMQ-C on
> OpenVMS just last week.. Luky for me I've seen the problem before. Seem to
> recall that you guys at umich.edu used to have some OpenVMS systems...
>
> Regards,
> Brett
>
>
> On Sat, Jun 26, 2010 at 11:54 AM, David Wragg <david at rabbitmq.com> wrote:
>>
>> Hi Jim,
>>
>> Jim Irrer <irrer at umich.edu> writes:
>> > I'm working on two functions that act as a client-server pair. ?They
>> > use two amq.direct queues to communicate. ?When ever either of
>> > them calls the amqp_simple_wait_frame function, it does not return
>> > for 436618 microseconds.
>> >
>> > Some other background info that might be relevant:
>> >
>> > If I only send messages in one direction it's really fast.
>> >
>> > Both processes are using separate connectors and different sockets.
>> >
>> > I used the amqp_consumer.c amqp_producer.c code in
>> > the examples directory as a reference.
>> >
>> > Is there a way to avoid this delay?
>>
>> I'm not sure what you are really asking here. ?As its name suggests,
>> amqp_simple_wait_frame waits for a frame to arrive. ?It will typically
>> attempt to read from the socket connected to the AMQP server. ?If no
>> data is available, it will block until data is available. ?The resulting
>> delays are thus an intrinsic feature of amqp_simple_wait_frame.
>>
>> Are you sure that the 400ms delay does not simply reflect the wait for a
>> message to arrive?
>>
>> I'm guessing, but perhaps the problem is that you want a single
>> application to publish and consume messages concurrently, and you are
>> finding that the synchronous nature of amqp_simple_wait_frame is an
>> obstacle? ?If so, the simplest work around would be to have two threads,
>> one to publish and one to consume, and open a separate AMQP connection
>> in each thread.
>>
>> > Also ...
>> >
>> > Could I use the same socket in each program as long as it was only
>> > used by one thread at a time?
>> >
>> > Could I use the same connection in each program if it was only
>> > used by one thread at a time?
>>
>> What's the distinction between socket and connection here?
>>
>> librabbitmq does not do anything to explicitly support multithreading,
>> but neither does it do anything to conflict with it. ?If you, the
>> application programmer, ensure that for a given connection, only one
>> thread uses librabbitmq at a time, you should be safe.
>>
>> --
>> David Wragg
>> Staff Engineer, RabbitMQ
>> SpringSource, a division of VMware
>> _______________________________________________
>> rabbitmq-discuss mailing list
>> rabbitmq-discuss at lists.rabbitmq.com
>> https://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss
>
>
>
> _______________________________________________
> rabbitmq-discuss mailing list
> rabbitmq-discuss at lists.rabbitmq.com
> https://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss
>
>

From jon.brisbin at npcinternational.com  Wed Jun 30 22:28:49 2010
From: jon.brisbin at npcinternational.com (Jon Brisbin)
Date: Wed, 30 Jun 2010 16:28:49 -0500
Subject: [rabbitmq-discuss] Ruby AMQP client not 1.8.0 friendly
Message-ID: <2F12345F-E4A0-4D84-8DDA-83880F37A1CC@npcinternational.com>

Upgraded my RabbitMQ server the other day to 1.8.0. Java stuff works fine, of course, because I just bumped the version number in Maven. But Ruby AMQP gem (v. 0.6.7) is now complaining. Downloaded the amqp-0.9.1.json file and re-generated the spec.rb file, which made errors go away, but now it looks like queue subscriptions don't work.

I'm not 100% sure where to go from here (already posted on the ruby-amqp list) other than to downgrade to 1.7.2 server. I'm sure there's some hacking that needs to take place. It's likely in the code that actually issues the queue subscription. There are no errors returned, so I assume it's just not attaching itself to the right spot on the server side because the client isn't sending the right information (or sending the right stuff, but in the wrong order).

Thanks ahead of time for the help! :)

Jon Brisbin
Portal Webmaster
NPC International, Inc.




