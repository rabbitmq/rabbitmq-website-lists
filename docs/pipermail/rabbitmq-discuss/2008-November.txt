From anthony-rabbitmq at hogan.id.au  Sun Nov  2 03:42:35 2008
From: anthony-rabbitmq at hogan.id.au (Anthony)
Date: Sun, 2 Nov 2008 14:42:35 +1100
Subject: [rabbitmq-discuss] Nagios monitoring of AMQP server
Message-ID: <1bf8be120811012042k595f94d7nb9f0df5a656f9d39@mail.gmail.com>

I was wondering if anyone had written an AMQP check plugin for Nagios?

I can do a basic "see if the port's open" one pretty quick, but figured if
someone had done something a little more fully featured, there was no point
me reinventing the wheel :)
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20081102/7ad4569f/attachment.htm 

From 0x6e6562 at gmail.com  Sun Nov  2 09:56:05 2008
From: 0x6e6562 at gmail.com (Ben Hood)
Date: Sun, 2 Nov 2008 09:56:05 +0000
Subject: [rabbitmq-discuss] Nagios monitoring of AMQP server
In-Reply-To: <1bf8be120811012042k595f94d7nb9f0df5a656f9d39@mail.gmail.com>
References: <1bf8be120811012042k595f94d7nb9f0df5a656f9d39@mail.gmail.com>
Message-ID: <269388e30811020156n1d0795ci64ebc317ff50281a@mail.gmail.com>

Anthony,

On Sun, Nov 2, 2008 at 3:42 AM, Anthony <anthony-rabbitmq at hogan.id.au> wrote:
> I was wondering if anyone had written an AMQP check plugin for Nagios?
>
> I can do a basic "see if the port's open" one pretty quick, but figured if
> someone had done something a little more fully featured, there was no point
> me reinventing the wheel :)

I don't recall anybody having announced something this on the list, so
you *may* be the first.

HTH,

Ben



From 0x6e6562 at gmail.com  Sun Nov  2 10:02:02 2008
From: 0x6e6562 at gmail.com (Ben Hood)
Date: Sun, 2 Nov 2008 10:02:02 +0000
Subject: [rabbitmq-discuss] how to use Rabbitmq consumer and
	handledilvery
In-Reply-To: <c8d9c65b0810300302p7d7cdcdfv73d82d943d3d10f1@mail.gmail.com>
References: <c8d9c65b0810300302p7d7cdcdfv73d82d943d3d10f1@mail.gmail.com>
Message-ID: <269388e30811020202l708b893by16d2bb5b5385fdd6@mail.gmail.com>

Prasantha,

On Thu, Oct 30, 2008 at 10:02 AM, prasantha kumara
<jlprasantha at gmail.com> wrote:
> i have trouble in with coding the consumer part of the rabitmq que.what i
> want to do is the after automatic detection of the publishing massage to the
> que ,deliver to the receive,still what oi have done is run a infinite loop
> in th eclient to chech weathere there is a massage for that client.and if
> find request it.but i want to eliminate the above infinite cloop.with
> automatic deleverence.

If I understand you correctly, you are looking to replace queue
polling with a subscription.

If this is correct, you may want to peruse the documentation on this
subject: http://www.rabbitmq.com/api-guide.html#consuming

HTH,

Ben



From 0x6e6562 at gmail.com  Sun Nov  2 10:17:26 2008
From: 0x6e6562 at gmail.com (Ben Hood)
Date: Sun, 2 Nov 2008 10:17:26 +0000
Subject: [rabbitmq-discuss] Erlang client: function_clause error
In-Reply-To: <428FB46D-CC62-4E9F-87BA-277DBD4BFA7B@gmail.com>
References: <6c2563b20810261055h43e3d626x473bea349ddb40ad@mail.gmail.com>
	<269388e30810270504v7db69f97k5e20c5bf1bea940f@mail.gmail.com>
	<6c2563b20810270706o15a1051fo3ddb7ad0eaee8020@mail.gmail.com>
	<269388e30810270806w6d86de04t6edcce46bb435c9a@mail.gmail.com>
	<6c2563b20810270808r7fbb5409vc1229370a890229c@mail.gmail.com>
	<179A4906-2D71-494E-B593-ACCB102C29E4@gmail.com>
	<269388e30810280431u520f7d87sf977744eb9bbd430@mail.gmail.com>
	<428FB46D-CC62-4E9F-87BA-277DBD4BFA7B@gmail.com>
Message-ID: <269388e30811020217gfea344bqe11d127c19d72dab@mail.gmail.com>

Valentino,

On Thu, Oct 30, 2008 at 7:22 PM, Valentino Volonghi <dialtone at gmail.com> wrote:
> I've started doing this in the rabbitmq wiki, hopefully nobody will
> complain about it.
> Here's a link to the page: https://dev.rabbitmq.com/wiki/DiskOverflow
> Anyway should feel free to comment, edit, add new stuff, their usecases
> etc etc.

This is exactly what the wiki is for - to be able to transition
loosely structured discussions about new features into something
cohesive that you can use to implement the feature, as opposed to just
hacking it down.

I've just commented on this inline:

https://dev.rabbitmq.com/wiki/DiskOverflow/diff?v1=20081030214344-7b340-374fd9ac3526c09882d27bdebc00a9988b1c2f39.gz&v2=20081102101409-7b340-d967384f374748b08950ee77b934cca4bf5fa093.gz

For the information of others, you can subscribe to the page to
receive update notifications.

And BTW, thanks for making the effort, this kind of thing helps us out a lot.

Ben



From 0x6e6562 at gmail.com  Sun Nov  2 10:51:44 2008
From: 0x6e6562 at gmail.com (Ben Hood)
Date: Sun, 2 Nov 2008 10:51:44 +0000
Subject: [rabbitmq-discuss] Channel Flow
Message-ID: <269388e30811020251g1127eb76v18e191e6c809d625@mail.gmail.com>

Hey Barry,

One of the features in the next Rabbit release (ETA within a few
weeks) is the implementation of the Channel.Flow command.

This will announced properly in due course, but we have had some
non-list interest on this subject from people using py-amqplib and
would like to be able to use the Channel.Flow command with it.

So this is just a heads up to let you know that you may be getting a
new feature request.

Essentially Channel.Flow is a reverse RPC that the client should react
to by pausing the sending of any content carrying commands until the
broker notifies it that sending can be resumed.

This functionality exists for the server in the branch called 19468
and in the java client in branch 19559.

I'm not quite sure what implication this has for a non-blocking
client, hence I am kicking of a discussion.

Ben



From weaveinator at gmail.com  Mon Nov  3 01:08:23 2008
From: weaveinator at gmail.com (Steve Weaver)
Date: Sun, 2 Nov 2008 17:08:23 -0800
Subject: [rabbitmq-discuss] Checking number of messages in Queue
Message-ID: <c05e896e0811021708v62245c68n2f4c7394547e64ba@mail.gmail.com>

Hi -
Is there a way to determine how many messages are in a particular queue?  I
have looked threw the docs and not found anything.  Sorry if I should know
this one.

Thanks in advance for help.
Steve
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20081102/7dc23272/attachment.htm 

From weaveinator at gmail.com  Mon Nov  3 01:11:45 2008
From: weaveinator at gmail.com (Steve Weaver)
Date: Sun, 2 Nov 2008 17:11:45 -0800
Subject: [rabbitmq-discuss] Number of simultaneous connections an
	exchange/que can have?
Message-ID: <c05e896e0811021711p45a6df42ofafc5981812e7342@mail.gmail.com>

Does anyone know roughly how many simultaneous connections a single exchange
and que can have and is this configurable?

Thanks for any help!
Steve
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20081102/e512f555/attachment.htm 

From bp at barryp.org  Mon Nov  3 15:07:14 2008
From: bp at barryp.org (Barry Pederson)
Date: Mon, 03 Nov 2008 09:07:14 -0600
Subject: [rabbitmq-discuss] Channel Flow
In-Reply-To: <269388e30811020251g1127eb76v18e191e6c809d625@mail.gmail.com>
References: <269388e30811020251g1127eb76v18e191e6c809d625@mail.gmail.com>
Message-ID: <490F13A2.6040408@barryp.org>

Ben Hood wrote:
> Hey Barry,
> 
> One of the features in the next Rabbit release (ETA within a few
> weeks) is the implementation of the Channel.Flow command.
> 
> This will announced properly in due course, but we have had some
> non-list interest on this subject from people using py-amqplib and
> would like to be able to use the Channel.Flow command with it.
> 
> So this is just a heads up to let you know that you may be getting a
> new feature request.
> 
> Essentially Channel.Flow is a reverse RPC that the client should react
> to by pausing the sending of any content carrying commands until the
> broker notifies it that sending can be resumed.
> 
> This functionality exists for the server in the branch called 19468
> and in the java client in branch 19559.
> 
> I'm not quite sure what implication this has for a non-blocking
> client, hence I am kicking of a discussion.
> 
> Ben

Hmm, I've been pondering this for a day now, and don't think the client 
as it is structured now could really deal with flow control.  I think 
something's going to have to give - either pure single-threadedness, SSL 
support using the stock Python libraries, or SSL support with Python 
versions less than 2.6

I think the easiest thing to do would be to have an optional mode that 
made use of another thread.  That could also allow for some other things 
like timeouts when receiving.

Don't think I'll get a chance to work on this in the next few days (busy 
with election stuff), but I'll keep pondering it.

In the meantime, anyone have thoughts as to what should happen on the 
client when the broker calls for pause...should the client buffer 
messages locally? or block and wait for a resume from the broker?  I 
suppose ideally there'd be options for both, but if you had to choose..?

     Barry



From sustrik at imatix.com  Mon Nov  3 15:16:48 2008
From: sustrik at imatix.com (Martin Sustrik)
Date: Mon, 03 Nov 2008 16:16:48 +0100
Subject: [rabbitmq-discuss] Channel Flow
In-Reply-To: <490F13A2.6040408@barryp.org>
References: <269388e30811020251g1127eb76v18e191e6c809d625@mail.gmail.com>
	<490F13A2.6040408@barryp.org>
Message-ID: <490F15E0.2060704@imatix.com>


> In the meantime, anyone have thoughts as to what should happen on the 
> client when the broker calls for pause...should the client buffer 
> messages locally? or block and wait for a resume from the broker?  I 
> suppose ideally there'd be options for both, but if you had to choose..?

Normally, people try to avoid queueing on client to minimise the damage 
caused by client failure (all queued messages are lost).

Martin



From 0x6e6562 at gmail.com  Mon Nov  3 16:32:11 2008
From: 0x6e6562 at gmail.com (Ben Hood)
Date: Mon, 3 Nov 2008 16:32:11 +0000
Subject: [rabbitmq-discuss] Channel Flow
In-Reply-To: <490F13A2.6040408@barryp.org>
References: <269388e30811020251g1127eb76v18e191e6c809d625@mail.gmail.com>
	<490F13A2.6040408@barryp.org>
Message-ID: <269388e30811030832q7d9248e7p1143a470303ce75b@mail.gmail.com>

Barry,

On Mon, Nov 3, 2008 at 3:07 PM, Barry Pederson <bp at barryp.org> wrote:
> Hmm, I've been pondering this for a day now, and don't think the client as
> it is structured now could really deal with flow control.  I think
> something's going to have to give - either pure single-threadedness, SSL
> support using the stock Python libraries, or SSL support with Python
> versions less than 2.6
>
> I think the easiest thing to do would be to have an optional mode that made
> use of another thread.  That could also allow for some other things like
> timeouts when receiving.

Sure, that is what the Java client does.

An alternative option that may avoid using another thread is to fail
fast, i.e. notify the app that message that is requesting to send
won't/can't be sent, e.g. by raising an exception or by using some
special return value that the app would have to test.

> In the meantime, anyone have thoughts as to what should happen on the client
> when the broker calls for pause...should the client buffer messages locally?
> or block and wait for a resume from the broker?  I suppose ideally there'd
> be options for both, but if you had to choose..?

I would orientate my decision around the transfer of responsibility.
As Martin points out, if you do buffer things in the client, you
should make it clear to higher level code that you are doing so, so as
not to give the application the impression that the broker has
accepted responsibility for the message.

Another thing that I would consider is the role of back pressure in
this scenario. By issuing the channel.flow command, the broker is
blocking the client - maybe you would want to propagate this
resistence back to the calling app.

HTH,

Ben



From stevej at gmail.com  Mon Nov  3 18:56:40 2008
From: stevej at gmail.com (Steve Jenson)
Date: Mon, 3 Nov 2008 10:56:40 -0800
Subject: [rabbitmq-discuss] Questions about how best to use RabbitMQ
Message-ID: <81d74c280811031056h66920d7aw63718e05279f4030@mail.gmail.com>

Hi there,

I'm evaluating RabbitMQ for an upcoming project and am trying to
figure out the best way to implement things using RabbitMQ.

For my project, we're sending pubsub-style streams of near real-time
updates to our customers.

It seems like what I want is to setup a fanout exchange linked to one
queue per customer protected with user credentials. Previously I was
using realms and ACLs to do this but I understand that's going away.
What would be a better way to do this in RabbitMQ?

Thanks,
Steve



From 0x6e6562 at gmail.com  Mon Nov  3 19:27:17 2008
From: 0x6e6562 at gmail.com (Ben Hood)
Date: Mon, 3 Nov 2008 19:27:17 +0000
Subject: [rabbitmq-discuss] Questions about how best to use RabbitMQ
In-Reply-To: <81d74c280811031056h66920d7aw63718e05279f4030@mail.gmail.com>
References: <81d74c280811031056h66920d7aw63718e05279f4030@mail.gmail.com>
Message-ID: <269388e30811031127g2c16b6eah2e4af969b1914c65@mail.gmail.com>

Steve,

On Mon, Nov 3, 2008 at 6:56 PM, Steve Jenson <stevej at gmail.com> wrote:
> It seems like what I want is to setup a fanout exchange linked to one
> queue per customer protected with user credentials. Previously I was
> using realms and ACLs to do this but I understand that's going away.
> What would be a better way to do this in RabbitMQ?

ACLs and the rationale behind removing realms have been discussed on
this list, see this thread for example:

http://www.nabble.com/Access-control-documentation-td19506900.html

So the current vhost ACL mechanism is going to be too coarse grained
for what you want to achieve. With the current broker, you would have
to implement the access control in your application.

Having said that, implementing some useful access control mechanisms
are on the mid to long term roadmap. These would most likely be
orthogonal to the protocol and as indicated in a previous post, *may*
include a capability based mechanism.

Contributions in the form of requirements and analysis (e.g. by
contributing to our wiki) or in the form of code, would help
accelerate the implementation.

HTH,

Ben



From bsullivan at lindenlab.com  Mon Nov  3 19:37:54 2008
From: bsullivan at lindenlab.com (Brian Sullivan)
Date: Mon, 3 Nov 2008 11:37:54 -0800
Subject: [rabbitmq-discuss] Checking number of messages in Queue
In-Reply-To: <c05e896e0811021708v62245c68n2f4c7394547e64ba@mail.gmail.com>
References: <c05e896e0811021708v62245c68n2f4c7394547e64ba@mail.gmail.com>
Message-ID: <650F1BFF-1BE3-4252-961B-5BCE47D3A2A2@lindenlab.com>


Hi Steve,

There's currently an erl command you can use for this.

http://forum.trapexit.org/mailinglists/viewtopic.php?t=12946&sid=96a363ac36c59c8b14d7aa4c4f1d3c2f

Hope that helps,
Brian

On Nov 2, 2008, at 5:08 PM, Steve Weaver wrote:

> Hi -
> Is there a way to determine how many messages are in a particular  
> queue?  I have looked threw the docs and not found anything.  Sorry  
> if I should know this one.
>
> Thanks in advance for help.
> Steve
> _______________________________________________
> rabbitmq-discuss mailing list
> rabbitmq-discuss at lists.rabbitmq.com
> http://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss




From 0x6e6562 at gmail.com  Mon Nov  3 19:43:50 2008
From: 0x6e6562 at gmail.com (Ben Hood)
Date: Mon, 3 Nov 2008 19:43:50 +0000
Subject: [rabbitmq-discuss] Checking number of messages in Queue
In-Reply-To: <c05e896e0811021708v62245c68n2f4c7394547e64ba@mail.gmail.com>
References: <c05e896e0811021708v62245c68n2f4c7394547e64ba@mail.gmail.com>
Message-ID: <269388e30811031143n7856ca46ib0905873253a15be@mail.gmail.com>

Steve,

On Mon, Nov 3, 2008 at 1:08 AM, Steve Weaver <weaveinator at gmail.com> wrote:
> Hi -
> Is there a way to determine how many messages are in a particular queue?  I
> have looked threw the docs and not found anything.  Sorry if I should know
> this one.

You can use the Queue.Declare command. I explained how this works on
the AMQP Ruby list:

http://groups.google.com/group/ruby-amqp/browse_thread/thread/6cf43a2daa51c235

HTH,

Ben



From 0x6e6562 at gmail.com  Mon Nov  3 19:47:53 2008
From: 0x6e6562 at gmail.com (Ben Hood)
Date: Mon, 3 Nov 2008 19:47:53 +0000
Subject: [rabbitmq-discuss] Number of simultaneous connections an
	exchange/que can have?
In-Reply-To: <c05e896e0811021711p45a6df42ofafc5981812e7342@mail.gmail.com>
References: <c05e896e0811021711p45a6df42ofafc5981812e7342@mail.gmail.com>
Message-ID: <269388e30811031147v7d1305edvb22d1856f451855a@mail.gmail.com>

Steve,

On Mon, Nov 3, 2008 at 1:11 AM, Steve Weaver <weaveinator at gmail.com> wrote:
> Does anyone know roughly how many simultaneous connections a single exchange
> and que can have and is this configurable?

I think you can find part of the answer in the FAQs:
https://dev.rabbitmq.com/wiki/FrequentlyAskedQuestions#section_7

Having said that I must admit I don't completely understand your
question with regards to the configurability and how this pertains to
exchange and queue entities. Are you talking about limiting the amount
of concurrent connections? Do you mean this on a per-entity basis? Or
just connections to the broker itself?

HTH,

Ben



From stevej at gmail.com  Mon Nov  3 19:56:15 2008
From: stevej at gmail.com (Steve Jenson)
Date: Mon, 3 Nov 2008 11:56:15 -0800
Subject: [rabbitmq-discuss] Questions about how best to use RabbitMQ
In-Reply-To: <269388e30811031127g2c16b6eah2e4af969b1914c65@mail.gmail.com>
References: <81d74c280811031056h66920d7aw63718e05279f4030@mail.gmail.com>
	<269388e30811031127g2c16b6eah2e4af969b1914c65@mail.gmail.com>
Message-ID: <81d74c280811031156w1c01459t33506b8cf910da5d@mail.gmail.com>

On Mon, Nov 3, 2008 at 11:27 AM, Ben Hood <0x6e6562 at gmail.com> wrote:
> Steve,
>
> On Mon, Nov 3, 2008 at 6:56 PM, Steve Jenson <stevej at gmail.com> wrote:
>> It seems like what I want is to setup a fanout exchange linked to one
>> queue per customer protected with user credentials. Previously I was
>> using realms and ACLs to do this but I understand that's going away.
>> What would be a better way to do this in RabbitMQ?
>
> ACLs and the rationale behind removing realms have been discussed on
> this list, see this thread for example:
>
> http://www.nabble.com/Access-control-documentation-td19506900.html
>
> So the current vhost ACL mechanism is going to be too coarse grained
> for what you want to achieve. With the current broker, you would have
> to implement the access control in your application.

I see, so we wouldn't be able to take advantage of fanout exchanges?
Fanout exchanges seem efficiently implemented such that each queue
doesn't keep an individual copy of the message. If we can't use fanout
exchanges, that would seem to indiciate increased memory pressure on
the broker?

> Having said that, implementing some useful access control mechanisms
> are on the mid to long term roadmap. These would most likely be
> orthogonal to the protocol and as indicated in a previous post, *may*
> include a capability based mechanism.

Very interesting. Do you mean capabilities in the KeyKOS/E language sense?

> Contributions in the form of requirements and analysis (e.g. by
> contributing to our wiki) or in the form of code, would help
> accelerate the implementation.

I would be happy to give our motivations for we're hoping to achieve.
We want to be able to setup partners with access to queues where they
can read and ACK read items without being able to create new exchanges
or queues. We want a single user to be able to setup exchanges and
bind queues to that exchange.

Best,
Steve



From alexis.richardson at cohesiveft.com  Mon Nov  3 21:48:07 2008
From: alexis.richardson at cohesiveft.com (Alexis Richardson)
Date: Mon, 3 Nov 2008 21:48:07 +0000
Subject: [rabbitmq-discuss] question about cluster failover
Message-ID: <167204d20811031348l70c2ce79ra31f397582dff815@mail.gmail.com>

Hi all,

I am posting this question on behalf of a new RabbitMQ user who cannot
at this time post to the list - which is where we prefer to post
questions in order to build up the knowledge base.

-- Quote

I consider replacing Tibco EMS with Rabbit MQ for our application.
Fault tolerance and scalability are the most important features to
compare. I reviewed documentation of RabbitMQ regarding clustering as
well as the Java APIs, and I am still not sure how this works. I would
appreciate clarification.

Suppose I have two hosts with RabbitMQ installed on each of them and
configured to form a cluster. I want my Java application to connect to
the cluster.

What host parameter do I specify in ConnectionFactory API?

Assume subscriber application creates a number of subscriptions and
publisher application publishes on them. One of the hosts in the
cluster goes down. Is this transparent to my Java applications? Are
the subscriptions preserved on the second host in the cluster?

Assume I have many publishers messaging with many consumers at some
constant rate for each publisher. Will adding hosts to the cluster
increase the capacity of the system linearly in terms of max number of
consumers and producers? Can you explain?

-- End quote

Cheers,

alexis



From 0x6e6562 at gmail.com  Mon Nov  3 22:12:17 2008
From: 0x6e6562 at gmail.com (Ben Hood)
Date: Mon, 3 Nov 2008 22:12:17 +0000
Subject: [rabbitmq-discuss] Questions about how best to use RabbitMQ
In-Reply-To: <81d74c280811031156w1c01459t33506b8cf910da5d@mail.gmail.com>
References: <81d74c280811031056h66920d7aw63718e05279f4030@mail.gmail.com>
	<269388e30811031127g2c16b6eah2e4af969b1914c65@mail.gmail.com>
	<81d74c280811031156w1c01459t33506b8cf910da5d@mail.gmail.com>
Message-ID: <269388e30811031412p4dbf51b0m72f8f1e893bbc032@mail.gmail.com>

Steve,

On Mon, Nov 3, 2008 at 7:56 PM, Steve Jenson <stevej at gmail.com> wrote:
> I see, so we wouldn't be able to take advantage of fanout exchanges?
> Fanout exchanges seem efficiently implemented such that each queue
> doesn't keep an individual copy of the message. If we can't use fanout
> exchanges, that would seem to indiciate increased memory pressure on
> the broker?

I don't know if follow this. Are you saying that messages routed to
queues using a fanout exchange are not copied, rather each queue holds
a reference to each unique message?

> Very interesting. Do you mean capabilities in the KeyKOS/E language sense?

I guess, but I don't want put my hand in the fire because I am not an
expert on this subject.

Essentially I am referring to an alternative to plain jane ACLs, for
example as described here:
http://www.eros-os.org/essays/ACLSvCaps.html

> I would be happy to give our motivations for we're hoping to achieve.
> We want to be able to setup partners with access to queues where they
> can read and ACK read items without being able to create new exchanges
> or queues. We want a single user to be able to setup exchanges and
> bind queues to that exchange.

Sounds reasonable, plausible (and quite fine grained :-).

Hence there was an inclination to investigate capabilities - so that
access restrictions could be placed on an arbitrary entity as opposed
to having to classify types of objects and restrict them with an ACL.

Ben



From alexis.richardson at cohesiveft.com  Mon Nov  3 22:59:37 2008
From: alexis.richardson at cohesiveft.com (Alexis Richardson)
Date: Mon, 3 Nov 2008 22:59:37 +0000
Subject: [rabbitmq-discuss] Questions about how best to use RabbitMQ
In-Reply-To: <269388e30811031412p4dbf51b0m72f8f1e893bbc032@mail.gmail.com>
References: <81d74c280811031056h66920d7aw63718e05279f4030@mail.gmail.com>
	<269388e30811031127g2c16b6eah2e4af969b1914c65@mail.gmail.com>
	<81d74c280811031156w1c01459t33506b8cf910da5d@mail.gmail.com>
	<269388e30811031412p4dbf51b0m72f8f1e893bbc032@mail.gmail.com>
Message-ID: <167204d20811031459t1b3d64bdw9d7176c59852658e@mail.gmail.com>

Steve

On Mon, Nov 3, 2008 at 10:12 PM, Ben Hood <0x6e6562 at gmail.com> wrote:
> Steve,
>
> On Mon, Nov 3, 2008 at 7:56 PM, Steve Jenson <stevej at gmail.com> wrote:
>> I see, so we wouldn't be able to take advantage of fanout exchanges?
>> Fanout exchanges seem efficiently implemented such that each queue
>> doesn't keep an individual copy of the message. If we can't use fanout
>> exchanges, that would seem to indiciate increased memory pressure on
>> the broker?
>
> I don't know if follow this. Are you saying that messages routed to
> queues using a fanout exchange are not copied, rather each queue holds
> a reference to each unique message?

If I may intrude...

Steve - I think you are asking if using direct and topic exchanges in
a pubsub scenatio is more expensive from a memory consumption point of
view than using fanout.  IF SO... then the answer is to your question
is 'no'.. at least in the first approximation.

Suppose you have N queues on ONE node of RabbitMQ.  They are all bound
to an exchange X such that a given message M will be routed to ALL the
N queues.  This would happen if:

a) X is a fanout exchange
b) X is a direct exchange and all bindings use the same binding key
c) X is a topic exchange and all bindings use the same binding pattern

Then what happens is that for message bodies ('payloads') over a
certain size (64 bytes) there is only one copy of M's body per node.
In the above case this means that because all N queues are on one node
they (in effect) share access to the body of M.  You do NOT have N
copies of M just because there are N queues.

And - this is independent of exchange type.

Notes:

1. This is the first approximation - in fact there is a small amount
of identifier metadata (headers) copied to each queue.  But if your
scenario were (say) M>1Kb and N<1000 then your memory consumption is
'small'.  (I can make this more precise if you like)
2. The above is true per node.  So if you have K nodes and your N
queues are spread across all K nodes, then you will make K copies of
M.
3. Also, finally, note that for M sized below 64 bytes the message
bodies are copied.

This is all taken care of by the evm.

(BTW - I'd like to thank the engineering team for helping me
understand how all this work in detail :-)

Can you let us know if this has answered your question please?  Sorry
to be verbose - I wanted to get a definitive answer on list for the
record.

Best wishes

alexis



From 0x6e6562 at gmail.com  Mon Nov  3 23:42:33 2008
From: 0x6e6562 at gmail.com (Ben Hood)
Date: Mon, 3 Nov 2008 23:42:33 +0000
Subject: [rabbitmq-discuss] question about cluster failover
In-Reply-To: <167204d20811031348l70c2ce79ra31f397582dff815@mail.gmail.com>
References: <167204d20811031348l70c2ce79ra31f397582dff815@mail.gmail.com>
Message-ID: <269388e30811031542vd3aaa66x2e37fa05506aa692@mail.gmail.com>

Anonymous,

On Mon, Nov 3, 2008 at 9:48 PM, Alexis Richardson
<alexis.richardson at cohesiveft.com> wrote:
> What host parameter do I specify in ConnectionFactory API?

The host name or IP address of one of the brokers in the cluster. DNS
round robins may be a suitable strategy in this scenario.

There is no transparent failover mechanism in the Java client. For
architectural reasons, this problem *should* be handled by higher
level application or supervision code. Although this thread
(http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/2008-October/002105.html)
centers around the Erlang client, the reasoning is analogous for the
Java client.

> Assume subscriber application creates a number of subscriptions and
> publisher application publishes on them. One of the hosts in the
> cluster goes down. Is this transparent to my Java applications?

Not from the client library perspective, as indicated above.

> Are
> the subscriptions preserved on the second host in the cluster?

No, the subscriptions are local to the queue process, which may have
died if the queue resides on the node that died. There is a concept of
persistent sessions in 0-10, but I have no knowledge of this version.

> Assume I have many publishers messaging with many consumers at some
> constant rate for each publisher. Will adding hosts to the cluster
> increase the capacity of the system linearly in terms of max number of
> consumers and producers? Can you explain?

I am not aware of any empirical evidence about Rabbit that could
support such a claim.

However, by clustering, you can spread the load of ingress routing. On
egress, queues are not load balanced, meaning that queue entities
reside on one particular node, so in a pathological scenario, where
the entire message load is routed to one particular queue, clustering
will balance not balance this out. Wisely chosen routing keys or a
custom exchange may be able to solve this.

I recently answered a question that is related to this - the prospect
of a custom load balancing exchange in a global scale scenario - see
http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/2008-October/002136.html

As indicated in that thread, at global scale you may face the eventual
consistency dilemma.

But just to make sure that I understand your question correctly, are
you primarily interested in load balancing end to end message routing
or are you more concerned about the maximum number of clients that can
connect to the cluster (as indicated in your question)?

HTH,

Ben



From henric.larsson at gmail.com  Mon Nov  3 23:58:13 2008
From: henric.larsson at gmail.com (Henric Larsson)
Date: Tue, 4 Nov 2008 00:58:13 +0100
Subject: [rabbitmq-discuss] ShutdownListener not triggered on server shutdown
Message-ID: <14e61b7a0811031558s1e77f50aree2397a24f9c499a@mail.gmail.com>

Hi,
I'm using the rabbit java client and rabbitmq server for some simple
messaging and I can't seem to get the shutdown listener to work as expected.

Basically, I'm attaching a shutdownlistener to the connection and then start
sending messages every second. If I shutdown the server I would expect the
shutdownlistener to be invoked at some point on the client but this never
occurs. I only get an AlreadyClosedException when calling basicPublish on
the channel.

Test case:

package foobar;

import com.rabbitmq.client.*;

import java.io.IOException;


public class TestRabbitShutdownListener implements ShutdownListener,
Runnable
{
   private Connection connection;
   private Channel channel;
   private String exchange;
   private int ticket;

   public static void main(String[] args) throws IOException,
InterruptedException
   {
      ConnectionParameters cp = new ConnectionParameters();
      cp.setUsername("guest");
      cp.setPassword("guest");

      ConnectionFactory cf = new ConnectionFactory(cp);

      TestRabbitShutdownListener trsl = new TestRabbitShutdownListener(
              cf,
              "foobar"
      );

      Thread t = new Thread(trsl);
      t.start();
      t.join();
      Thread.sleep(5000);

   }

   public TestRabbitShutdownListener(ConnectionFactory connectionFactory,
                                     String exchange) throws IOException
   {
      this.exchange = exchange;
      this.connection = connectionFactory.newConnection("localhost");
      this.connection.addShutdownListener(this);

      setupChannel();
   }

   private void setupChannel() throws IOException
   {
      this.channel = connection.createChannel();
      this.ticket = channel.accessRequest("/data");

      channel.exchangeDeclare(
              ticket,
              exchange,
              "fanout"
      );
   }

   public void run()
   {
      while (true)
      {
         try
         {
            System.out.println("Sending msg..");

            channel.basicPublish(ticket, exchange, "",
MessageProperties.BASIC, new byte[]{});
            Thread.sleep(1000);
         }
         catch (IOException e)
         {
            e.printStackTrace();
            return;
         }
         catch (InterruptedException e)
         {
            System.out.println("thread interrupted");
            return;
         }
      }
   }

   public void shutdownCompleted(ShutdownSignalException e)
   {
      System.out.println("shutdownCompleted: " + e.getMessage());
      e.printStackTrace();
   }
}


-- 
.henric.larsson.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20081104/bd128294/attachment.htm 

From 0x6e6562 at gmail.com  Tue Nov  4 00:13:24 2008
From: 0x6e6562 at gmail.com (Ben Hood)
Date: Tue, 4 Nov 2008 00:13:24 +0000
Subject: [rabbitmq-discuss] ShutdownListener not triggered on server
	shutdown
In-Reply-To: <14e61b7a0811031558s1e77f50aree2397a24f9c499a@mail.gmail.com>
References: <14e61b7a0811031558s1e77f50aree2397a24f9c499a@mail.gmail.com>
Message-ID: <269388e30811031613q5af397a3t808d0fc2f9f9a137@mail.gmail.com>

Henric,

On Mon, Nov 3, 2008 at 11:58 PM, Henric Larsson
<henric.larsson at gmail.com> wrote:
> I'm using the rabbit java client and rabbitmq server for some simple
> messaging and I can't seem to get the shutdown listener to work as expected.
> Basically, I'm attaching a shutdownlistener to the connection and then start
> sending messages every second. If I shutdown the server I would expect the
> shutdownlistener to be invoked at some point on the client but this never
> occurs. I only get an AlreadyClosedException when calling basicPublish on
> the channel.

I've just run your testcase against the latest default branch in our
tree and the shutdownCompleted() method appears to get called.

Although I am not aware of the specifics, I know that Hubert has down
a lot of work on shutdown negotiation in the Java client subsequent to
the 1.4.0 release, so he *may* have encountered this scenario, but
I'll let him comment on that.

So your short term solution would be to get a copy of the latest
source and try that.

HTH,

Ben



From stevej at gmail.com  Tue Nov  4 00:23:20 2008
From: stevej at gmail.com (Steve Jenson)
Date: Mon, 3 Nov 2008 16:23:20 -0800
Subject: [rabbitmq-discuss] Questions about how best to use RabbitMQ
In-Reply-To: <167204d20811031459t1b3d64bdw9d7176c59852658e@mail.gmail.com>
References: <81d74c280811031056h66920d7aw63718e05279f4030@mail.gmail.com>
	<269388e30811031127g2c16b6eah2e4af969b1914c65@mail.gmail.com>
	<81d74c280811031156w1c01459t33506b8cf910da5d@mail.gmail.com>
	<269388e30811031412p4dbf51b0m72f8f1e893bbc032@mail.gmail.com>
	<167204d20811031459t1b3d64bdw9d7176c59852658e@mail.gmail.com>
Message-ID: <81d74c280811031623t62d3d56elb1e304803acc14bb@mail.gmail.com>

On Mon, Nov 3, 2008 at 2:59 PM, Alexis Richardson
<alexis.richardson at cohesiveft.com> wrote:
> Steve
>
> On Mon, Nov 3, 2008 at 10:12 PM, Ben Hood <0x6e6562 at gmail.com> wrote:
>> Steve,
>>
>> On Mon, Nov 3, 2008 at 7:56 PM, Steve Jenson <stevej at gmail.com> wrote:
>>> I see, so we wouldn't be able to take advantage of fanout exchanges?
>>> Fanout exchanges seem efficiently implemented such that each queue
>>> doesn't keep an individual copy of the message. If we can't use fanout
>>> exchanges, that would seem to indiciate increased memory pressure on
>>> the broker?
>>
>> I don't know if follow this. Are you saying that messages routed to
>> queues using a fanout exchange are not copied, rather each queue holds
>> a reference to each unique message?
>
> If I may intrude...
>
> Steve - I think you are asking if using direct and topic exchanges in
> a pubsub scenatio is more expensive from a memory consumption point of
> view than using fanout.  IF SO... then the answer is to your question
> is 'no'.. at least in the first approximation.

That was exactly what I was asking, I'm glad to see it's not the case.
That's very nice to hear.

Best,
Steve



From stevej at gmail.com  Tue Nov  4 00:34:50 2008
From: stevej at gmail.com (Steve Jenson)
Date: Mon, 3 Nov 2008 16:34:50 -0800
Subject: [rabbitmq-discuss] Questions about how best to use RabbitMQ
In-Reply-To: <269388e30811031412p4dbf51b0m72f8f1e893bbc032@mail.gmail.com>
References: <81d74c280811031056h66920d7aw63718e05279f4030@mail.gmail.com>
	<269388e30811031127g2c16b6eah2e4af969b1914c65@mail.gmail.com>
	<81d74c280811031156w1c01459t33506b8cf910da5d@mail.gmail.com>
	<269388e30811031412p4dbf51b0m72f8f1e893bbc032@mail.gmail.com>
Message-ID: <81d74c280811031634g28b24cdcq4b338bafd0e0f286@mail.gmail.com>

On Mon, Nov 3, 2008 at 2:12 PM, Ben Hood <0x6e6562 at gmail.com> wrote:
> Steve,
>
> On Mon, Nov 3, 2008 at 7:56 PM, Steve Jenson <stevej at gmail.com> wrote:
>> I see, so we wouldn't be able to take advantage of fanout exchanges?
>> Fanout exchanges seem efficiently implemented such that each queue
>> doesn't keep an individual copy of the message. If we can't use fanout
>> exchanges, that would seem to indiciate increased memory pressure on
>> the broker?
>
> I don't know if follow this. Are you saying that messages routed to
> queues using a fanout exchange are not copied, rather each queue holds
> a reference to each unique message?
>
>> Very interesting. Do you mean capabilities in the KeyKOS/E language sense?
>
> I guess, but I don't want put my hand in the fire because I am not an
> expert on this subject.
>
> Essentially I am referring to an alternative to plain jane ACLs, for
> example as described here:
> http://www.eros-os.org/essays/ACLSvCaps.html

Yeah, EROS was the successor to KeyKOS.

I think capability theory could work very well for this problem
domain. Please be sure to take a look at the E language, it's a hybrid
object-functional language with actors built on the JVM
(http://erights.org) that uses capability theory for secure
distributed computation. If you want to connect to a remote E server,
you need a key that you're given out-of-band (like via email, etc) and
the connection is made over SSL so nobody else should be able to steal
your key.

Also, the cap-talk[1] mailing list is fairly active and very helpful.
The world experts on capability security are all there.

Steve
[1]: http://www.eros-os.org/mailman/listinfo/cap-talk



From 0x6e6562 at gmail.com  Tue Nov  4 00:57:36 2008
From: 0x6e6562 at gmail.com (Ben Hood)
Date: Tue, 4 Nov 2008 00:57:36 +0000
Subject: [rabbitmq-discuss] ShutdownListener not triggered on server
	shutdown
In-Reply-To: <269388e30811031613q5af397a3t808d0fc2f9f9a137@mail.gmail.com>
References: <14e61b7a0811031558s1e77f50aree2397a24f9c499a@mail.gmail.com>
	<269388e30811031613q5af397a3t808d0fc2f9f9a137@mail.gmail.com>
Message-ID: <269388e30811031657w4029818h14a65ad58644cf0@mail.gmail.com>

Henric,

On Tue, Nov 4, 2008 at 12:13 AM, Ben Hood <0x6e6562 at gmail.com> wrote:
> Although I am not aware of the specifics, I know that Hubert has down
> a lot of work on shutdown negotiation in the Java client subsequent to
> the 1.4.0 release, so he *may* have encountered this scenario, but
> I'll let him comment on that.

I've just run this against this against the 1.4.0 release, and it
works as well. There is a slight difference in the way that the
shutdown event is propagated in 1.4.0 compared to the current version,
but in both cases, the handler does get called.

Can you package up a tarball and send it so that we can reproduce the issue?

Ben



From 0x6e6562 at gmail.com  Tue Nov  4 01:30:16 2008
From: 0x6e6562 at gmail.com (Ben Hood)
Date: Tue, 4 Nov 2008 01:30:16 +0000
Subject: [rabbitmq-discuss] Questions about how best to use RabbitMQ
In-Reply-To: <81d74c280811031634g28b24cdcq4b338bafd0e0f286@mail.gmail.com>
References: <81d74c280811031056h66920d7aw63718e05279f4030@mail.gmail.com>
	<269388e30811031127g2c16b6eah2e4af969b1914c65@mail.gmail.com>
	<81d74c280811031156w1c01459t33506b8cf910da5d@mail.gmail.com>
	<269388e30811031412p4dbf51b0m72f8f1e893bbc032@mail.gmail.com>
	<81d74c280811031634g28b24cdcq4b338bafd0e0f286@mail.gmail.com>
Message-ID: <269388e30811031730j5c624adevd5238f093800e566@mail.gmail.com>

Steve,

On Tue, Nov 4, 2008 at 12:34 AM, Steve Jenson <stevej at gmail.com> wrote:
> I think capability theory could work very well for this problem
> domain. Please be sure to take a look at the E language, it's a hybrid
> object-functional language with actors built on the JVM
> (http://erights.org) that uses capability theory for secure
> distributed computation. If you want to connect to a remote E server,
> you need a key that you're given out-of-band (like via email, etc) and
> the connection is made over SSL so nobody else should be able to steal
> your key.
>
> Also, the cap-talk[1] mailing list is fairly active and very helpful.
> The world experts on capability security are all there.

Thanks for the heads up. A deeper investigation of what capabilities
could buy us in the Rabbit sense is on our radar, but in terms of
priority, it is slightly lower down the list. As always,
re-prioritization is a function of persuasiveness.

Ben



From matthias at lshift.net  Tue Nov  4 07:51:57 2008
From: matthias at lshift.net (Matthias Radestock)
Date: Tue, 04 Nov 2008 07:51:57 +0000
Subject: [rabbitmq-discuss] Questions about how best to use RabbitMQ
In-Reply-To: <81d74c280811031634g28b24cdcq4b338bafd0e0f286@mail.gmail.com>
References: <81d74c280811031056h66920d7aw63718e05279f4030@mail.gmail.com>	<269388e30811031127g2c16b6eah2e4af969b1914c65@mail.gmail.com>	<81d74c280811031156w1c01459t33506b8cf910da5d@mail.gmail.com>	<269388e30811031412p4dbf51b0m72f8f1e893bbc032@mail.gmail.com>
	<81d74c280811031634g28b24cdcq4b338bafd0e0f286@mail.gmail.com>
Message-ID: <490FFF1D.7020304@lshift.net>

Steve,

Steve Jenson wrote:
> Please be sure to take a look at the E language

We have been following the development of E for many years. As you may 
know, there was some discussion with Mark Miller a while ago regarding 
the integration of the E concepts into Erlang.


Matthias.



From alexis.richardson at cohesiveft.com  Tue Nov  4 08:54:44 2008
From: alexis.richardson at cohesiveft.com (Alexis Richardson)
Date: Tue, 4 Nov 2008 08:54:44 +0000
Subject: [rabbitmq-discuss] question about cluster failover
In-Reply-To: <269388e30811031542vd3aaa66x2e37fa05506aa692@mail.gmail.com>
References: <167204d20811031348l70c2ce79ra31f397582dff815@mail.gmail.com>
	<269388e30811031542vd3aaa66x2e37fa05506aa692@mail.gmail.com>
Message-ID: <167204d20811040054g55b4abdal66440dd9e4a9faff@mail.gmail.com>

On Mon, Nov 3, 2008 at 11:42 PM, Ben Hood <0x6e6562 at gmail.com> wrote:
..
>
>> Assume I have many publishers messaging with many consumers at some
>> constant rate for each publisher. Will adding hosts to the cluster
>> increase the capacity of the system linearly in terms of max number of
>> consumers and producers? Can you explain?
>
> I am not aware of any empirical evidence about Rabbit that could
> support such a claim.
>
> However, by clustering, you can spread the load of ingress routing. On
> egress, queues are not load balanced, meaning that queue entities
> reside on one particular node, so in a pathological scenario, where
> the entire message load is routed to one particular queue, clustering
> will balance not balance this out. Wisely chosen routing keys or a
> custom exchange may be able to solve this.

Just to add some colour to what Ben said...

Re: linear scaling of capacity.

Based on our experiences to date, RabbitMQ scales *capacity* close to
linearly by adding more nodes to the cluster.  What happens is that
the nodes in the cluster share the routing table ("Exchange" in AMQP)
so that you can add as many producers as you like.  The nodes will
route messages on to the relevant queue.

As Ben points out this means that - for example - if you had only one
(shared) queue, then that would be a bottleneck because no matter
which node the messages arrived at, they would still get routed on to
the one node with that queue.  (Note that each queue is physically
bound to one node and not transactionally replicated to a back-up
node).   So, on the consumer side, the way to scale is to partition
your message flows into multiple queues.

In the last few months several people have described use cases which
suffer from being pathological in the sense Ben described.  These
folks have at least one shared queue that is so big that it may as
well be the only queue.  It is a place to which everything and
anything gets dumped, usually for logging or spam detection or
similar.  The way to deal with this case is to overflow the queue to a
second location - either another node or to disk.  Most people prefer
to see a page-to-disk solution in this case, because in effect the
queue is an archive.

alexis



From alexis.richardson at cohesiveft.com  Tue Nov  4 08:58:47 2008
From: alexis.richardson at cohesiveft.com (Alexis Richardson)
Date: Tue, 4 Nov 2008 08:58:47 +0000
Subject: [rabbitmq-discuss] jim larson article on erlang
Message-ID: <167204d20811040058u23dad93fsec1f7af622e52eaf@mail.gmail.com>

FYI, an article by Jim Larson (Google) on erlang:

http://www.acmqueue.org/modules.php?name=Content&pa=showpage&pid=556



From alexis.richardson at cohesiveft.com  Tue Nov  4 14:34:52 2008
From: alexis.richardson at cohesiveft.com (Alexis Richardson)
Date: Tue, 4 Nov 2008 14:34:52 +0000
Subject: [rabbitmq-discuss] Question about RabbitMQ camstream
Message-ID: <167204d20811040634w531c35b1vb3c1207b7fc53f@mail.gmail.com>

I am cross-posting this to the list, with the author's permission.

alexis


---------- Forwarded message ----------
From:  <Eric.DeFroment at swisscom.com>
Date: Tue, Nov 4, 2008 at 1:07 PM
Subject: camstream demo-capture of the video stream-message error
To: info at rabbitmq.com


Hello,
I wanted to test your camstream demo but unfortunately without success.
I am working under a Windows environment and I got a problem in
capturing the video while initiating the "camcaptureJMF.bat". The JMF
works fine, I checked it already. Connection to the server also. It
seems that the binary code you propose doesn't work well? Do you have
an answer to my problem?
Find enclosed a capture

Thanks for your feedback,

Eric




The message is ready to be sent with the following file or link attachments:

ScreenHunter_01 Nov. 03 18.18.gif


Note: To protect against computer viruses, e-mail programs may prevent
sending or receiving certain types of file attachments.  Check your
e-mail security settings to determine how attachments are handled.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: ScreenHunter_01 Nov. 03 18.18.gif
Type: image/gif
Size: 32679 bytes
Desc: not available
Url : http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20081104/9f93e547/attachment.gif 

From beenewilliamr at gmail.com  Tue Nov  4 22:05:09 2008
From: beenewilliamr at gmail.com (Beene, William R.)
Date: Tue, 4 Nov 2008 16:05:09 -0600
Subject: [rabbitmq-discuss] Question about configuration of queues
Message-ID: <f6c048390811041405w69379af1tbf8f739232e52130@mail.gmail.com>

Hi,
Is there anyway to preconfigure a queue in rabbitmq before my app that
needs the queue starts up.
I want data sent to the queue to be persisted so that the app can get
it when it starts up.
Does this use case make sense? Is this possible? Any pointers would be
greatly appreciated.

Thanks,
William Beene



From 0x6e6562 at gmail.com  Tue Nov  4 22:34:54 2008
From: 0x6e6562 at gmail.com (Ben Hood)
Date: Tue, 4 Nov 2008 22:34:54 +0000
Subject: [rabbitmq-discuss] Question about configuration of queues
In-Reply-To: <f6c048390811041405w69379af1tbf8f739232e52130@mail.gmail.com>
References: <f6c048390811041405w69379af1tbf8f739232e52130@mail.gmail.com>
Message-ID: <269388e30811041434l8a2f22ds5f76c38bf90d091e@mail.gmail.com>

William,

On Tue, Nov 4, 2008 at 10:05 PM, Beene, William R.
<beenewilliamr at gmail.com> wrote:
> Is there anyway to preconfigure a queue in rabbitmq before my app that
> needs the queue starts up.
> I want data sent to the queue to be persisted so that the app can get
> it when it starts up.
> Does this use case make sense? Is this possible? Any pointers would be
> greatly appreciated.

Why don't just declare the queue, send the messages that you want to
pre-populate the queue with (setting the persistent flag when sending)
and then after this has occurred, start a consumer to receive the
messages?

HTH,

Ben



From beenewilliamr at gmail.com  Tue Nov  4 22:41:33 2008
From: beenewilliamr at gmail.com (Beene, William R.)
Date: Tue, 4 Nov 2008 16:41:33 -0600
Subject: [rabbitmq-discuss] Question about configuration of queues
In-Reply-To: <269388e30811041434l8a2f22ds5f76c38bf90d091e@mail.gmail.com>
References: <f6c048390811041405w69379af1tbf8f739232e52130@mail.gmail.com>
	<269388e30811041434l8a2f22ds5f76c38bf90d091e@mail.gmail.com>
Message-ID: <f6c048390811041441i335ad258qde2fbb45cd3a177f@mail.gmail.com>

On Tue, Nov 4, 2008 at 4:34 PM, Ben Hood <0x6e6562 at gmail.com> wrote:
> William,
>
> On Tue, Nov 4, 2008 at 10:05 PM, Beene, William R.
> <beenewilliamr at gmail.com> wrote:
>> Is there anyway to preconfigure a queue in rabbitmq before my app that
>> needs the queue starts up.
>> I want data sent to the queue to be persisted so that the app can get
>> it when it starts up.
>> Does this use case make sense? Is this possible? Any pointers would be
>> greatly appreciated.
>
> Why don't just declare the queue, send the messages that you want to
> pre-populate the queue with (setting the persistent flag when sending)
> and then after this has occurred, start a consumer to receive the
> messages?
>
> HTH,
>
> Ben
>

Because then the producers would have to know about all of the consumers.
I would rather put this in a property file or something. It looks like
I may have to write a small program that reads a property file and creates
 the queues I need.

Thanks,
William Beene



From 0x6e6562 at gmail.com  Tue Nov  4 23:29:12 2008
From: 0x6e6562 at gmail.com (Ben Hood)
Date: Tue, 4 Nov 2008 23:29:12 +0000
Subject: [rabbitmq-discuss] Question about configuration of queues
In-Reply-To: <f6c048390811041437p41a91879v838e8959651c78d5@mail.gmail.com>
References: <f6c048390811041405w69379af1tbf8f739232e52130@mail.gmail.com>
	<269388e30811041434l8a2f22ds5f76c38bf90d091e@mail.gmail.com>
	<f6c048390811041437p41a91879v838e8959651c78d5@mail.gmail.com>
Message-ID: <269388e30811041529s482c108bscd20a6ab16305250@mail.gmail.com>

William,

On Tue, Nov 4, 2008 at 10:37 PM, Beene, William R.
<beenewilliamr at gmail.com> wrote:
> Because then the producers would have to know about all of the consumers.

That's a fair point - in general one would want to decouple production
from consumption.

It sounds to me that you are looking for some kind of trigger that is
based on queue depth - like you were maintaining a buffet at a
restaurant. Maybe you can elaborate on your actual use case so that we
can put this into context.

Should your application be contingent on a specific depth, you may
consider polling depth on a per-queue basis and conditionally starting
consumption.

If it is OTOH dependent on a batch of work being pre-initialized, then
you could consider sending a poison pill that would signify the
completion of the production phase.

HTH,

Ben



From beenewilliamr at gmail.com  Wed Nov  5 00:08:00 2008
From: beenewilliamr at gmail.com (Beene, William R.)
Date: Tue, 4 Nov 2008 18:08:00 -0600
Subject: [rabbitmq-discuss] Question about configuration of queues
In-Reply-To: <269388e30811041529s482c108bscd20a6ab16305250@mail.gmail.com>
References: <f6c048390811041405w69379af1tbf8f739232e52130@mail.gmail.com>
	<269388e30811041434l8a2f22ds5f76c38bf90d091e@mail.gmail.com>
	<f6c048390811041437p41a91879v838e8959651c78d5@mail.gmail.com>
	<269388e30811041529s482c108bscd20a6ab16305250@mail.gmail.com>
Message-ID: <f6c048390811041608r32df7b87pb994928f3fb6e764@mail.gmail.com>

On Tue, Nov 4, 2008 at 5:29 PM, Ben Hood <0x6e6562 at gmail.com> wrote:
> William,
>
> On Tue, Nov 4, 2008 at 10:37 PM, Beene, William R.
> <beenewilliamr at gmail.com> wrote:
>> Because then the producers would have to know about all of the consumers.
>
> That's a fair point - in general one would want to decouple production
> from consumption.
>
> It sounds to me that you are looking for some kind of trigger that is
> based on queue depth - like you were maintaining a buffet at a
> restaurant. Maybe you can elaborate on your actual use case so that we
> can put this into context.
>
> Should your application be contingent on a specific depth, you may
> consider polling depth on a per-queue basis and conditionally starting
> consumption.
>
> If it is OTOH dependent on a batch of work being pre-initialized, then
> you could consider sending a poison pill that would signify the
> completion of the production phase.
>
> HTH,
>
> Ben
>

Hi Ben,

I am not entirely sure what you mean by queue depth. This is my first
time dealing with
AMQP. Our scenario is that we have several producers of data and
several consumers.
All consumers want to get all of the data from all of the producers
for the most part.
I don't want to worry about start up order and I also don't want to
worry about how to
handle a consumer losing the connection and missing several messages
when it reconnects.
If possible I would like to be able to solve these using AMQP.

Thanks,
William



From 0x6e6562 at gmail.com  Wed Nov  5 00:45:02 2008
From: 0x6e6562 at gmail.com (Ben Hood)
Date: Wed, 5 Nov 2008 00:45:02 +0000
Subject: [rabbitmq-discuss] Question about configuration of queues
In-Reply-To: <f6c048390811041608r32df7b87pb994928f3fb6e764@mail.gmail.com>
References: <f6c048390811041405w69379af1tbf8f739232e52130@mail.gmail.com>
	<269388e30811041434l8a2f22ds5f76c38bf90d091e@mail.gmail.com>
	<f6c048390811041437p41a91879v838e8959651c78d5@mail.gmail.com>
	<269388e30811041529s482c108bscd20a6ab16305250@mail.gmail.com>
	<f6c048390811041608r32df7b87pb994928f3fb6e764@mail.gmail.com>
Message-ID: <269388e30811041645g5f761866j826c41cae36d3906@mail.gmail.com>

William,

On Wed, Nov 5, 2008 at 12:08 AM, Beene, William R.
<beenewilliamr at gmail.com> wrote:
> I am not entirely sure what you mean by queue depth. This is my first
> time dealing with
> AMQP.

Queue depth refers to the number of undelivered messages in a queue at
any point in time.

> Our scenario is that we have several producers of data and
> several consumers.
> All consumers want to get all of the data from all of the producers
> for the most part.

This could achieved by declaring a queue per consumer and setting up
your routing rules so that a copy of every message that gets published
is sent to each queue.

You *may* be interested in this background article about consumer
driven messaging:
http://hopper.squarespace.com/blog/2008/10/7/consumer-driven-messaging.html

> I don't want to worry about start up order and I also don't want to
> worry about how to
> handle a consumer losing the connection and missing several messages
> when it reconnects.

Unless you declare the queues to be auto-delete, the broker will
buffer up the messages for each client until they reconnect.

So I can I infer from this statement that you don't actually have a
requirement to complete a batch of production strictly before begin
consumption?

Futhermore, you may be interested in some of the FAQs:
https://dev.rabbitmq.com/wiki/FrequentlyAskedQuestions

HTH,

Ben



From rabbitmq-discuss_efine at usa.net  Wed Nov  5 03:46:20 2008
From: rabbitmq-discuss_efine at usa.net (Edwin Fine)
Date: Tue, 4 Nov 2008 22:46:20 -0500
Subject: [rabbitmq-discuss] Question about configuration of queues
In-Reply-To: <f6c048390811041441i335ad258qde2fbb45cd3a177f@mail.gmail.com>
References: <f6c048390811041405w69379af1tbf8f739232e52130@mail.gmail.com>
	<269388e30811041434l8a2f22ds5f76c38bf90d091e@mail.gmail.com>
	<f6c048390811041441i335ad258qde2fbb45cd3a177f@mail.gmail.com>
Message-ID: <6c2563b20811041946u5b27a4c4pb91430f18882e997@mail.gmail.com>

On Tue, Nov 4, 2008 at 5:41 PM, Beene, William R.
<beenewilliamr at gmail.com>wrote:

> On Tue, Nov 4, 2008 at 4:34 PM, Ben Hood <0x6e6562 at gmail.com> wrote:
> > William,
> >
> > On Tue, Nov 4, 2008 at 10:05 PM, Beene, William R.
> > <beenewilliamr at gmail.com> wrote:
> >> Is there anyway to preconfigure a queue in rabbitmq before my app that
> >> needs the queue starts up.
> >> I want data sent to the queue to be persisted so that the app can get
> >> it when it starts up.
> >> Does this use case make sense? Is this possible? Any pointers would be
> >> greatly appreciated.
> >
> > Why don't just declare the queue, send the messages that you want to
> > pre-populate the queue with (setting the persistent flag when sending)
> > and then after this has occurred, start a consumer to receive the
> > messages?
> >
> > HTH,
> >
> > Ben
> >
>
> Because then the producers would have to know about all of the consumers.
> I would rather put this in a property file or something. It looks like
> I may have to write a small program that reads a property file and creates
>  the queues I need.
>

William,

If I understood your question correctly, I don't see why the producers would
need to know all about the consumers.

The producers publish to an exchange using a routing key. In a simple
scenario, the routing key is just a queue name. The producers would have to
know the key to be able to publish to that queue.

You can set it up so that whichever actor (consumer or producer) first tries
to access the queue creates it (if the flags are set up to do this). If the
consumer gets there first, it will create an empty queue and sit and wait on
it, or come back later and try again. If it's the producer that first starts
up, it will create the queue, and as long as the messages you deliver are
flagged as persistent (assuming you want them to survive the rabbit server
restart), and not flagged for immediate delivery, the producer can happily
throw stuff in the queue (within reasonable memory limitations). The
consumer(s) may start up at any time and collect the messages. An
application I wrote works very much like this.

It may seem strange to let the consumers create the queues but, security
aspects aside (assuming that consumers are trusted), it's a very convenient
way to do what you want to do. (It can be confusing if the consumer uses the
wrong queue name, because it may create an empty queue and sit there forever
wondering why nobody is talking to it, but that's true of a lot of things in
general).

Does this help?

Regards,
Edwin Fine


>
> Thanks,
> William Beene
>
> _______________________________________________
> rabbitmq-discuss mailing list
> rabbitmq-discuss at lists.rabbitmq.com
> http://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20081104/c2d9bf3e/attachment.htm 

From 0x6e6562 at gmail.com  Thu Nov  6 17:55:14 2008
From: 0x6e6562 at gmail.com (Ben Hood)
Date: Thu, 6 Nov 2008 17:55:14 +0000
Subject: [rabbitmq-discuss] Release Process
Message-ID: <269388e30811060955m7b60e1b3mdd737988f53bfbbe@mail.gmail.com>

Hi all,

The Rabbit development team has a question which the community may be
able to help us with.

ATM we are going through the process of finishing off the last
remaining items for the next release.

After this release has been made we would like to continue the process
of separating the client releases from broker releases.

The reason why we want to do this is to make the release procedure
less monolithic and we don't want to have upgrade clients in a lock
step fashion.

This will (hopefully) increase the agility of the overall release
process and thereby increase the frequency of releasing new
functionality and bug fixes.

What we don't know is if we release clients at different intervals to
the broker, how is the average user going to know what version works
with what.


The Current Rabbit Ecosphere
--------------------------------------------

- Broker 1.4.x
- Java Client 1.4.x
- .NET Client 1.4.x


Where We May End Up
-----------------------------------

- Broker 1.x.y
- Java Client 2.m.n
- .NET Client 3.j.k
- (Erlang Client x.y) ?
- (Adapter p.q) ?


The problem with letting all of the different versions run free is
that knowing what works with what becomes less apparent to casual
observer.

So for example, how is the average person who doesn't know Rabbit from
a bar of soap supposed to work out that version 2.1.3 of the Java
client has been tested and verified against version 1.7.8 of the
broker?

Another way to view this would be a compatibility matrix, which would
give a slightly different perspective because it would be an overview
of every release, rather than just a slice through certain versions.

One initial thought is to make periodic group releases. These would be
bundles of the components that are known to work with each other. This
would be similar to say a Ubuntu release (e.g. version 8.10 contains
gcc 4.3.2, awk 3.1.6, grep 2.5.3 etc).

In this scenario, we would do a seasonal umbrella release with a
particular name or version. It could as simple as a web page that
contains links the particular versions of the consituent parts.

So if anybody has any thoughts about this or the release process in
general please let us know. It could as simple as telling us what
naming scheme for the umbrella would be the most appropriate, e.g.

- Ubuntu Style: Year-Month
- Erlang Style: 12B-4
- Use code names like Roger, Warren, Bugs, Eminem, ....., (your favourite name)
- ?

Any comments or suggestions are welcome.

Ben



From 0x6e6562 at gmail.com  Thu Nov  6 18:23:19 2008
From: 0x6e6562 at gmail.com (Ben Hood)
Date: Thu, 6 Nov 2008 18:23:19 +0000
Subject: [rabbitmq-discuss] Packaging
Message-ID: <269388e30811061023o552f6cf0l9a15cb1e613b31a5@mail.gmail.com>

Dear Lazyweb,

One of the tasks that we currently put a lot of effort into is
packaging Rabbit for various distributions. This is a very important
yet thankless piece of work, because it can be quite time consuming to
get right, and then at the end of it, *all* you have to show is an
installation of Rabbit.

We are currently maintaining packages for

- Debian
- RPM
- Windows

and we have noticed that there are community contributed packages for

- FreeBSD
- ArchLinux
- (maybe others?)

Furthermore, we started work on package for Macports, which worked
once, but this has since fallen into disrepair.

So this is call to the community to see if anybody themselves is
interested in producing/maintaining packages for their favorite OS.

This also applies to Debian, RPM and Windows - if there is anybody
interested in taking over this role, this would be great as well.

If there is any interest, let us know and we can think about how this
might work out.

BTW (if anybody has actually read this far :-) this would tie in with
the my previous post about letting the broker get released
independently of the clients, because the broker is something that you
typically install into the OS, whereas client libraries are downloaded
and put on the load path of your project.

Thx,

Your Rabbit Team



From orion.henry at gmail.com  Thu Nov  6 21:19:21 2008
From: orion.henry at gmail.com (Orion Henry)
Date: Thu, 6 Nov 2008 16:19:21 -0500
Subject: [rabbitmq-discuss] rabbitmq erlang client
Message-ID: <415a0600811061319y46677e12lb241c078d057ef22@mail.gmail.com>

Hello,

I'm trying to get the rabbitmq-erlang-client to work and I've not been
able.  My ruby client has been working great and is already in
production but currently my erlang app needs to os:cmd("publish.rb")
and I'd like to keep that in the erlang vm for obvious reasons.

My test code looks like this:

test_client() ->
    io:format("--- begin~n"),
    Connection =
amqp_connection:start_link("mylogin","mypass","127.0.0.1",<<"/myvhost">>),
    io:format("--- got Connection = ~p.~n",[Connection]),
    Channel = amqp_connection:open_channel(Connection),
    io:format("--- got Channel = ~p.~n",[Channel]).

this seems to work ok but I get a "Have a look into this one: closed"
message a split second later.   If I add anymore code, such as a

    X2 = lib_amqp:declare_exchange(Channel, <<"abc">>),

I get this error.  (I'm not very good yet at understanding erlang
error message so please forgive me if this is obvious).

=ERROR REPORT==== 6-Nov-2008::13:16:28 ===
Error in process <0.35.0> with exit value:
{badarg,[{rabbit_framing,encode_method_fields,1},{rabbit_binary_generator,build_simple_method_frame,2},{rabbit_writer,internal_send_command_async,3},{rabbit_writer,handle_message,2},{rabbit_writer,mainloop,1}]}

{"init terminating in
do_boot",{{function_clause,[{amqp_channel,handle_info,[{'EXIT',<0.35.0>,{badarg,[{rabbit_framing,encode_method_fields,1},{rabbit_binary_generator,build_simple_method_frame,2},{rabbit_writer,internal_send_command_async,3},{rabbit_writer,handle_message,2},{rabbit_writer,mainloop,1}]}},{channel_state,1,<0.28.0>,<0.32.0>,<0.35.0>,#Fun<amqp_network_driver.do.2>,#Fun<amqp_network_driver.do.3>,#Fun<amqp_network_driver.close_channel.1>,{[{{<0.1.0>,#Ref<0.0.0.36>},{'exchange.declare',undefined,<<3
bytes>>,<<6 bytes>>,false,false,false,false,false,[]}}],[]},{[],[]},{dict,0,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]}}},false,undefined,{dict,0,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]}}}}]},{gen_server,handle_msg,5},{proc_lib,init_p,5}]},{gen_server,call,[<0.34.0>,{call,{'exchange.declare',undefined,<<3
bytes>>,<<6 bytes>>,false,false,false,false,false,[]}}]}}}


I'm currently using erlang client 3a9ce636e283 and rabbitmq_server
200803291005.  That said I have not been able to get the erlang make
all_tests work against the rabbitmq server.



From 0x6e6562 at gmail.com  Thu Nov  6 23:13:36 2008
From: 0x6e6562 at gmail.com (Ben Hood)
Date: Thu, 6 Nov 2008 23:13:36 +0000
Subject: [rabbitmq-discuss] rabbitmq erlang client
In-Reply-To: <415a0600811061319y46677e12lb241c078d057ef22@mail.gmail.com>
References: <415a0600811061319y46677e12lb241c078d057ef22@mail.gmail.com>
Message-ID: <269388e30811061513j7a2fcbadrcfc99c20c78e06a5@mail.gmail.com>

[Orion|Henry],

On Thu, Nov 6, 2008 at 9:19 PM, Orion Henry <orion.henry at gmail.com> wrote:
> My test code looks like this:
>
> test_client() ->
>    io:format("--- begin~n"),
>    Connection =
> amqp_connection:start_link("mylogin","mypass","127.0.0.1",<<"/myvhost">>),
>    io:format("--- got Connection = ~p.~n",[Connection]),
>    Channel = amqp_connection:open_channel(Connection),
>    io:format("--- got Channel = ~p.~n",[Channel]).
>
> this seems to work ok but I get a "Have a look into this one: closed"
> message a split second later.   If I add anymore code, such as a
>
>    X2 = lib_amqp:declare_exchange(Channel, <<"abc">>),

I've run your test code with the client version you specified and it
seems fine :-(

The error log you are seeing "Have a look into this one: closed"
indicates that the TCP connection between the client and the broker
has been closed for some reason.

Maybe you can elaborate on your setup, like how you installed Rabbit,
the client and look into the server logs.


> I'm currently using erlang client 3a9ce636e283 and rabbitmq_server
> 200803291005.  That said I have not been able to get the erlang make
> all_tests work against the rabbitmq server.

What do you get when you run network_client_test:test/0 ?

Ben



From 0x6e6562 at gmail.com  Fri Nov  7 01:57:09 2008
From: 0x6e6562 at gmail.com (Ben Hood)
Date: Fri, 7 Nov 2008 01:57:09 +0000
Subject: [rabbitmq-discuss] Scalable Routing
Message-ID: <269388e30811061757k651111b3seb02b62fb1f15e80@mail.gmail.com>

All,

One of the things that we've spent a lot of time on since the 1.4.0
release is redesigning the core routing mechanisms of Rabbit to make
it scale with no worse than linear cost.

This work passed QA today and has been folded back in the default branch.

I described what the change involves and how it was measured in this article:

http://hopper.squarespace.com/blog/2008/11/7/measuring-scalability.html

For anybody who thinks that they have a use case that may test the
correctness of our approach, please check out the latest version of
the broker from hg.

For those who would prefer to wait, this change will form part of the
forthcoming 1.5.0 release, so you'll be able to get it then.

In the meantime, any tests from the community are welcome.

HTH,

Ben



From orion.henry at gmail.com  Fri Nov  7 07:09:23 2008
From: orion.henry at gmail.com (Orion Henry)
Date: Fri, 7 Nov 2008 02:09:23 -0500
Subject: [rabbitmq-discuss] rabbitmq erlang client
In-Reply-To: <269388e30811061513j7a2fcbadrcfc99c20c78e06a5@mail.gmail.com>
References: <415a0600811061319y46677e12lb241c078d057ef22@mail.gmail.com>
	<269388e30811061513j7a2fcbadrcfc99c20c78e06a5@mail.gmail.com>
Message-ID: <415a0600811062309n7cec7d6bi405e2d784dc561f3@mail.gmail.com>

Hey Ben,

Thanks so much for talking the time to help me work through this...

I decided to start over and wrote a shell script that did the whole
install and test....  here it is.

----------------------------------------
#!/bin/sh

tar xzvf rabbitmq-server-1.4.0.tar.gz
cd rabbitmq-server-1.4.0 ; make ; cd ..
sudo mv rabbitmq-server-1.4.0 /opt/local/lib/erlang/lib/rabbitmq_server-1.4.0
LOG_BASE=/tmp SKIP_HEART=true SKIP_LOG_ARGS=true
MNESIA_DIR=/tmp/rabbitmq_rabbit_test_direct_mnesia
RABBIT_ARGS="-detached -pa ./ebin" NODENAME=rabbit_test_direct
/opt/local/lib/erlang/lib/rabbitmq_server-1.4.0/scripts/rabbitmq-server

tar xzvf rabbitmq-erlang-client-3a9ce636e283.tar.gz
cd rabbitmq-erlang-client-3a9ce636e283; make; cd ..
sudo mv rabbitmq-erlang-client-3a9ce636e283
/opt/local/lib/erlang/lib/rabbitmq_client-3a9ce636e283

erl -noshell -eval 'network_client_test:test(),halt().'
----------------------------------------

I've attached its output to this email (its very long as a text file).
 It contains the 6 failed tests from network_client_test:test/0

Also I started doing a binary search of old releases of the client
software.  I found that very old versions worked and very new versions
didn't.  My search lead 16194802fe02 being the newest version of the
client to pass the tests as per my install script.  I'm working off
this build now.


On Thu, Nov 6, 2008 at 6:13 PM, Ben Hood <0x6e6562 at gmail.com> wrote:
> [Orion|Henry],
>
> On Thu, Nov 6, 2008 at 9:19 PM, Orion Henry <orion.henry at gmail.com> wrote:
>> My test code looks like this:
>>
>> test_client() ->
>>    io:format("--- begin~n"),
>>    Connection =
>> amqp_connection:start_link("mylogin","mypass","127.0.0.1",<<"/myvhost">>),
>>    io:format("--- got Connection = ~p.~n",[Connection]),
>>    Channel = amqp_connection:open_channel(Connection),
>>    io:format("--- got Channel = ~p.~n",[Channel]).
>>
>> this seems to work ok but I get a "Have a look into this one: closed"
>> message a split second later.   If I add anymore code, such as a
>>
>>    X2 = lib_amqp:declare_exchange(Channel, <<"abc">>),
>
> I've run your test code with the client version you specified and it
> seems fine :-(
>
> The error log you are seeing "Have a look into this one: closed"
> indicates that the TCP connection between the client and the broker
> has been closed for some reason.
>
> Maybe you can elaborate on your setup, like how you installed Rabbit,
> the client and look into the server logs.
>
>
>> I'm currently using erlang client 3a9ce636e283 and rabbitmq_server
>> 200803291005.  That said I have not been able to get the erlang make
>> all_tests work against the rabbitmq server.
>
> What do you get when you run network_client_test:test/0 ?
>
> Ben
>
-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: erlang_client_output.txt
Url: http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20081107/3a50eaa1/attachment.txt 

From vinorasmus at gmail.com  Fri Nov  7 09:19:32 2008
From: vinorasmus at gmail.com (Gavin Bong)
Date: Fri, 7 Nov 2008 17:19:32 +0800
Subject: [rabbitmq-discuss] rabbitmqctl crashes in vista
Message-ID: <33784a0c0811070119t1819b76fh7e0f1a8d68e04466@mail.gmail.com>

I started the broker and I encountered core dumps when trying to run
the rabbitmqctl command. Why is this so ?

C:\Users\gavin>echo %ERLANG_HOME%
C:\_programs\erl5.5.5

C:\Users\gavin>rabbitmqctl status
{"init terminating in do_boot",{undef,[{rabbit_control,start,[]},{init,start_it,
1},{init,start_em,1}]}}

Crash dump was written to: erl_crash.dump
init terminating in do_boot ()

Regards,

Gavin



From 0x6e6562 at gmail.com  Fri Nov  7 09:49:14 2008
From: 0x6e6562 at gmail.com (Ben Hood)
Date: Fri, 7 Nov 2008 09:49:14 +0000
Subject: [rabbitmq-discuss] rabbitmqctl crashes in vista
In-Reply-To: <33784a0c0811070119t1819b76fh7e0f1a8d68e04466@mail.gmail.com>
References: <33784a0c0811070119t1819b76fh7e0f1a8d68e04466@mail.gmail.com>
Message-ID: <269388e30811070149w9db7015n9e54d8557db7cafb@mail.gmail.com>

Gavin,

On Fri, Nov 7, 2008 at 9:19 AM, Gavin Bong <vinorasmus at gmail.com> wrote:
> I started the broker and I encountered core dumps when trying to run
> the rabbitmqctl command. Why is this so ?
>
> C:\Users\gavin>echo %ERLANG_HOME%
> C:\_programs\erl5.5.5
>
> C:\Users\gavin>rabbitmqctl status
> {"init terminating in do_boot",{undef,[{rabbit_control,start,[]},{init,start_it,
> 1},{init,start_em,1}]}}

That looks like it can't find the binaries for the the rabbit_control module.

Can you elaborate on how you set Rabbit up please?

Ben



From Henric.Larsson at igindex.co.uk  Fri Nov  7 12:03:11 2008
From: Henric.Larsson at igindex.co.uk (Henric Larsson)
Date: Fri, 7 Nov 2008 12:03:11 -0000
Subject: [rabbitmq-discuss] IOExceptions and the java client api
Message-ID: <2B33164C3494004A8E66365C092C3FDD0759988A@LMPRDEXC102.igi.ig.local>

Hi,

In the javadoc almost every method is documented as throwing the checked
IOException "if an error  is encountered", but there's no mention of the
unchecked exceptions that may be thrown.

My understanding after using the client for a while is that the
IOException isn't likely to be thrown. In the case of a server
disconnect the actual exception thrown would be the unchecked
com.rabbitmq.client.ShutdownSignalException or a derived exception.
Making any code that relies on catching IOException for failure handling
/ reconnect logic broken.

I think the javadoc should mention all exceptions that may be thrown and
when they would be expected.

Furthermore, I personally think that the IOException is almost as course
grained as declaring that all methods throws Exception - not only does
this make for unnecessary cluttered code when using the client, all
invocations must be wrapped in a try/catch block, but it doesn't give
any real information about the underlying problem; Server shutdown, pipe
broken, dodgy data on the wire.. 

My suggestion is to have a hierarchy of unchecked exceptions with real
meaning clearly documented in the api - giving users the option of
catching the exceptions that can be recovered from while allowing other
exceptions to be propagated to the caller.


Cheers,
Henric


The information contained in this email is strictly confidential and for the use of 

the addressee only, unless otherwise indicated. If you are not the intended recipient, please do not read, copy, use or 

disclose to others this message or any attachment. Please also notify the sender by replying to this email or by 

telephone (+44 (0)20 7896 0011) and then delete the email and any copies of it. Opinions, conclusions (etc.) that do 

not relate to the official business of this company shall be understood as neither given nor endorsed by it. IG Index 

plc is a company registered in England and Wales under number 01190902. VAT registration number 761 2978 07. Registered 

Office: Friars House, 157-168 Blackfriars Road, London SE1 8EZ. Authorised and regulated by the Financial Services 

Authority. FSA Register number 114059.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20081107/59aa3bb9/attachment.htm 

From vinorasmus at gmail.com  Fri Nov  7 12:23:14 2008
From: vinorasmus at gmail.com (Gavin Bong)
Date: Fri, 7 Nov 2008 20:23:14 +0800
Subject: [rabbitmq-discuss] rabbitmqctl crashes in vista
In-Reply-To: <269388e30811070149w9db7015n9e54d8557db7cafb@mail.gmail.com>
References: <33784a0c0811070119t1819b76fh7e0f1a8d68e04466@mail.gmail.com>
	<269388e30811070149w9db7015n9e54d8557db7cafb@mail.gmail.com>
Message-ID: <33784a0c0811070423w47209026i92642e5a8ade6961@mail.gmail.com>

Rabbit is installed in a separate directory
e.g. c:\_programs\rabbitmq-etc...

Erlang is installed in its own directory.

I set the ERLANG_HOME
I added the path to the sbin directory of the rabbitmq installation.

Then I run the rabbitmqctl command.
That's it. Nothing else.



2008/11/7 Ben Hood <0x6e6562 at gmail.com>:
> Gavin,
>
> On Fri, Nov 7, 2008 at 9:19 AM, Gavin Bong <vinorasmus at gmail.com> wrote:
>> I started the broker and I encountered core dumps when trying to run
>> the rabbitmqctl command. Why is this so ?
>>
>> C:\Users\gavin>echo %ERLANG_HOME%
>> C:\_programs\erl5.5.5
>>
>> C:\Users\gavin>rabbitmqctl status
>> {"init terminating in do_boot",{undef,[{rabbit_control,start,[]},{init,start_it,
>> 1},{init,start_em,1}]}}
>
> That looks like it can't find the binaries for the the rabbit_control module.
>
> Can you elaborate on how you set Rabbit up please?
>
> Ben
>



From emile at lshift.net  Fri Nov  7 12:43:24 2008
From: emile at lshift.net (Emile Joubert)
Date: Fri, 07 Nov 2008 12:43:24 +0000
Subject: [rabbitmq-discuss] rabbitmqctl crashes in vista
In-Reply-To: <33784a0c0811070423w47209026i92642e5a8ade6961@mail.gmail.com>
References: <33784a0c0811070119t1819b76fh7e0f1a8d68e04466@mail.gmail.com>	<269388e30811070149w9db7015n9e54d8557db7cafb@mail.gmail.com>
	<33784a0c0811070423w47209026i92642e5a8ade6961@mail.gmail.com>
Message-ID: <491437EC.4030200@lshift.net>


Hi Gavin,

The rabbitmqctl.bat script assumes that the current working directory is 
"sbin". The problem you reported should be solved if you set the current 
directory of the command shell to the sbin subdirectory of the main 
rabbit server directory before running.

Emile


Gavin Bong wrote:
> Rabbit is installed in a separate directory
> e.g. c:\_programs\rabbitmq-etc...
> 
> Erlang is installed in its own directory.
> 
> I set the ERLANG_HOME
> I added the path to the sbin directory of the rabbitmq installation.
> 
> Then I run the rabbitmqctl command.
> That's it. Nothing else.
> 
> 
> 
> 2008/11/7 Ben Hood <0x6e6562 at gmail.com>:
>> Gavin,
>>
>> On Fri, Nov 7, 2008 at 9:19 AM, Gavin Bong <vinorasmus at gmail.com> wrote:
>>> I started the broker and I encountered core dumps when trying to run
>>> the rabbitmqctl command. Why is this so ?
>>>
>>> C:\Users\gavin>echo %ERLANG_HOME%
>>> C:\_programs\erl5.5.5
>>>
>>> C:\Users\gavin>rabbitmqctl status
>>> {"init terminating in do_boot",{undef,[{rabbit_control,start,[]},{init,start_it,
>>> 1},{init,start_em,1}]}}
>> That looks like it can't find the binaries for the the rabbit_control module.
>>
>> Can you elaborate on how you set Rabbit up please?
>>
>> Ben
>>
> 
> _______________________________________________
> rabbitmq-discuss mailing list
> rabbitmq-discuss at lists.rabbitmq.com
> http://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss




From 0x6e6562 at gmail.com  Fri Nov  7 12:51:57 2008
From: 0x6e6562 at gmail.com (Ben Hood)
Date: Fri, 7 Nov 2008 12:51:57 +0000
Subject: [rabbitmq-discuss] IOExceptions and the java client api
In-Reply-To: <2B33164C3494004A8E66365C092C3FDD0759988A@LMPRDEXC102.igi.ig.local>
References: <2B33164C3494004A8E66365C092C3FDD0759988A@LMPRDEXC102.igi.ig.local>
Message-ID: <269388e30811070451s4125c37dt8370c571229d6a63@mail.gmail.com>

Henric,

On Fri, Nov 7, 2008 at 12:03 PM, Henric Larsson
<Henric.Larsson at igindex.co.uk> wrote:
> Furthermore, I personally think that the IOException is almost as course
> grained as declaring that all methods throws Exception - not only does this
> make for unnecessary cluttered code when using the client, all invocations
> must be wrapped in a try/catch block, but it doesn't give any real
> information about the underlying problem; Server shutdown, pipe broken,
> dodgy data on the wire.

Personally, I couldn't agree more. I think that unless somebody comes
up with a good reason why you need checked exceptions these days, I'd
like to remove them from the API.
.
> My suggestion is to have a hierarchy of unchecked exceptions with real
> meaning clearly documented in the api - giving users the option of catching
> the exceptions that can be recovered from while allowing other exceptions to
> be propagated to the caller.

This is a good point - in fact, we considered at some point in the
past as well - so we are going to revive an old bug (15786) and update
it with your suggestions.

Ben



From matthias at lshift.net  Fri Nov  7 12:58:28 2008
From: matthias at lshift.net (Matthias Radestock)
Date: Fri, 07 Nov 2008 12:58:28 +0000
Subject: [rabbitmq-discuss] rabbitmqctl crashes in vista
In-Reply-To: <491437EC.4030200@lshift.net>
References: <33784a0c0811070119t1819b76fh7e0f1a8d68e04466@mail.gmail.com>	<269388e30811070149w9db7015n9e54d8557db7cafb@mail.gmail.com>	<33784a0c0811070423w47209026i92642e5a8ade6961@mail.gmail.com>
	<491437EC.4030200@lshift.net>
Message-ID: <49143B74.3000305@lshift.net>

Emile Joubert wrote:
> The rabbitmqctl.bat script assumes that the current working directory is 
> "sbin".

This restriction is lifted in the upcoming release. See

http://hg.rabbitmq.com/rabbitmq-server/file/default/scripts/rabbitmqctl.bat

for the lastest version.


Matthias.



From bill at soudan.net  Fri Nov  7 16:08:33 2008
From: bill at soudan.net (Bill Soudan)
Date: Fri, 7 Nov 2008 11:08:33 -0500 (GMT-05:00)
Subject: [rabbitmq-discuss] Last value cache for pub/sub pattern
Message-ID: <9439637.3101226074113369.JavaMail.root@zimbra>

Hi all,

I see in the FAQ that support for a last value cache is planned:

http://www.rabbitmq.com/faq.html#last-message-on-topic

I'd like to use AMQP and I need this feature, so I'm going to take a crack at implementing it.

I do have one question though:  isn't there a race with the described implementation?  It seems possible to me that a new message may arrive from the bound exchange before the 'last-value' cache service responds with the most recent value.  Yes, I could fix this with some some of timestamp value or sequence value, but I would rather not push that responsibility onto the client.

Another idea: provide a new exchange type, 'x-rabbitmq.last-value-topic', which would store the most recent message published for each topic in an Mnesia table.  During exchange.bind, the value in the cache would be retrieved and delivered to the queue immediately.  If no cached value was present, a special 'no value' message would be delivered instead.  Thoughts?  I am relatively new to both AMQP and RabbitMQ, so I'd appreciate any guidance here.

Thanks,
Bill



From beenewilliamr at gmail.com  Fri Nov  7 16:22:10 2008
From: beenewilliamr at gmail.com (Beene, William R.)
Date: Fri, 7 Nov 2008 10:22:10 -0600
Subject: [rabbitmq-discuss] Question about configuration of queues
In-Reply-To: <6c2563b20811041946u5b27a4c4pb91430f18882e997@mail.gmail.com>
References: <f6c048390811041405w69379af1tbf8f739232e52130@mail.gmail.com>
	<269388e30811041434l8a2f22ds5f76c38bf90d091e@mail.gmail.com>
	<f6c048390811041441i335ad258qde2fbb45cd3a177f@mail.gmail.com>
	<6c2563b20811041946u5b27a4c4pb91430f18882e997@mail.gmail.com>
Message-ID: <f6c048390811070822v7c2f4a06maa01e8a9aa47ec13@mail.gmail.com>

On Tue, Nov 4, 2008 at 9:46 PM, Edwin Fine
<rabbitmq-discuss_efine at usa.net> wrote:
>
> On Tue, Nov 4, 2008 at 5:41 PM, Beene, William R. <beenewilliamr at gmail.com>
> wrote:
>>
>> On Tue, Nov 4, 2008 at 4:34 PM, Ben Hood <0x6e6562 at gmail.com> wrote:
>> > William,
>> >
>> > On Tue, Nov 4, 2008 at 10:05 PM, Beene, William R.
>> > <beenewilliamr at gmail.com> wrote:
>> >> Is there anyway to preconfigure a queue in rabbitmq before my app that
>> >> needs the queue starts up.
>> >> I want data sent to the queue to be persisted so that the app can get
>> >> it when it starts up.
>> >> Does this use case make sense? Is this possible? Any pointers would be
>> >> greatly appreciated.
>> >
>> > Why don't just declare the queue, send the messages that you want to
>> > pre-populate the queue with (setting the persistent flag when sending)
>> > and then after this has occurred, start a consumer to receive the
>> > messages?
>> >
>> > HTH,
>> >
>> > Ben
>> >
>>
>> Because then the producers would have to know about all of the consumers.
>> I would rather put this in a property file or something. It looks like
>> I may have to write a small program that reads a property file and creates
>>  the queues I need.
>
> William,
>
> If I understood your question correctly, I don't see why the producers would
> need to know all about the consumers.
>
> The producers publish to an exchange using a routing key. In a simple
> scenario, the routing key is just a queue name. The producers would have to
> know the key to be able to publish to that queue.
>
> You can set it up so that whichever actor (consumer or producer) first tries
> to access the queue creates it (if the flags are set up to do this). If the
> consumer gets there first, it will create an empty queue and sit and wait on
> it, or come back later and try again. If it's the producer that first starts
> up, it will create the queue, and as long as the messages you deliver are
> flagged as persistent (assuming you want them to survive the rabbit server
> restart), and not flagged for immediate delivery, the producer can happily
> throw stuff in the queue (within reasonable memory limitations). The
> consumer(s) may start up at any time and collect the messages. An
> application I wrote works very much like this.
>
> It may seem strange to let the consumers create the queues but, security
> aspects aside (assuming that consumers are trusted), it's a very convenient
> way to do what you want to do. (It can be confusing if the consumer uses the
> wrong queue name, because it may create an empty queue and sit there forever
> wondering why nobody is talking to it, but that's true of a lot of things in
> general).
>
> Does this help?
>
> Regards,
> Edwin Fine
>
>>
>> Thanks,
>> William Beene
>>
>> _______________________________________________
>> rabbitmq-discuss mailing list
>> rabbitmq-discuss at lists.rabbitmq.com
>> http://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss
>>
>
>

Edwin & Ben,

Thanks for your help. I think I can proceed now.

Thanks,
William



From rrabarg2 at yahoo.com.sg  Fri Nov  7 20:54:10 2008
From: rrabarg2 at yahoo.com.sg (rrabarg2)
Date: Sat, 08 Nov 2008 07:54:10 +1100
Subject: [rabbitmq-discuss] rabbitmq bugs and issue database
Message-ID: <4914AAF2.5050901@yahoo.com.sg>

We'd like evaluate rabbitmq for use in our organisation but I have been 
unable to locate the bugs and issues database.  Is this available? 

Graham



From rabbitmq-discuss_efine at usa.net  Fri Nov  7 22:31:12 2008
From: rabbitmq-discuss_efine at usa.net (Edwin Fine)
Date: Fri, 7 Nov 2008 17:31:12 -0500
Subject: [rabbitmq-discuss] Erlang client and properties
Message-ID: <6c2563b20811071431l2100e787y1db4eb9c64cf64bc@mail.gmail.com>

Hi all,

I'm using the Erlang client (2008/06/23 vintage, I think) and I've started
to need message-related properties like timestamp, expiration, and so on, to
avoid reinventing the wheel. The Java client's Javadoc I am not finding very
helpful for this set of questions. I know that the Erlang client is still
experimental, so I am asking for "documentation" here (* see the end of this
post before sending STFW messages, please :)

If the following questions are answered somewhere in a way that relates to
how to use it in the Erlang client (e.g. examples in Erlang), please point
me to it and disregard the rest of these questions.

My questions are:

   1. When I send a message with properties set to
   amqp_util:basic_properties(), and receive it using a basic.get, the message
   has only got property data in properties_bin, but properties is set to
   'none'. How do I decode what's in properties_bin? Alternatively, how do I
   get the properties to stay set in the unencoded 'properties' field?
   2. What is the format of the timestamp field, and how do I encode/decode
   it? I can't find a definition for its type "timestamp" in the AMQP spec.
   3. When and by what does the timestamp get set? I searched all the client
   code for 'timestamp' but could not find it, so when I create a new message,
   what sets this?
   4. What is the format of the expiration? The spec does not define it.
   5. What is the behavior when a message has expired? Does the client
   automatically throw it away when doing a basic.get or consume so I never see
   it?
   6. Does the message_id ever get set automatically to a unique value?
   7. What is the purpose of the 'type' property? The spec just writes
   "message type name"? Is this totally user-defined?
   8. How does one set and get message headers?

I am sure that I could work this all out if I read all the Rabbit code, all
the AMQP tutorials I can find, and so on, but it would take me days. It's
already taken hours so far. If anyone can help me shortcut this, I would be
very grateful.

Regards,
Edwin Fine
----------
* For those who believe I should RTFM or STFW, I hear you, and I have done
my best in the time I have available. This is what I have done and/or
learned:

I looked in the Erlang client and server code, too, but found little to
help, besides this in amqp_util.erl:

basic_properties() ->
    #'P_basic'{content_type = <<"application/octet-stream">>, delivery_mode
= 1, priority = 0}

>From rabbit_framing.hrl, I got this:

-record('P_basic', {content_type, content_encoding, headers, delivery_mode,
priority, correlation_id, reply_to, expiration, message_id, timestamp, type,
user_id, app_id, cluster_id}).

The above fields are described in the amqp0-8.xml document in terms of their
basic type (e.g. shortstr, whatever that is) and their purpose. The basic
types (shortstr, timestamp, etc) are not explained in the document, nor can
I find a reference to anything that does explain them. I saw in the Rabbit
code an assertion that shortstr length must be < 256, so now I know that :)

In the Javadoc, only the content_type, delivery_mode, and priority fields
seem to be used in the MessageProperties class. The descriptions of each of
the properties in Basic.Properties are absent.

I searched the Rabbit message list archives, too. One of the messages
pointed me to a tutorial in C, which was useful to see how some of the
properties were used (http://www.openamq.org/tutorial:soa). Now I understand
that I have to set the message_id myself, and that the routing key of the
sender should be put into reply_to if the sender requires a reply, in other
words, the routing key of the responder must be set to the sender's reply_to
property.

I am still looking through the C code tutorials, so maybe I will find out
more.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20081107/e88644de/attachment.htm 

From rabbitmq-discuss_efine at usa.net  Fri Nov  7 23:07:57 2008
From: rabbitmq-discuss_efine at usa.net (Edwin Fine)
Date: Fri, 7 Nov 2008 18:07:57 -0500
Subject: [rabbitmq-discuss] Erlang client and properties
In-Reply-To: <6c2563b20811071431l2100e787y1db4eb9c64cf64bc@mail.gmail.com>
References: <6c2563b20811071431l2100e787y1db4eb9c64cf64bc@mail.gmail.com>
Message-ID: <6c2563b20811071507r21db3de6sd3cea5448628a65d@mail.gmail.com>

Ok, I found the definitions for timestamp and so on. Seems like reading the
AMQP 0.8 XML document alone was a mistake; I needed to look at the low-level
protocol in the AMQP 0.8 PDF document. I was skipping between so many docs I
got a bit lost. So I guess RTFM comments would be deserved :) That being
said, is it just me, or is this set of specs a bit difficult to absorb?

So we can scratch question 2 and any questions about shortstr etc. I am
working on reading the rabbit code about message headers. Looks as if some
helper functions in the client might be useful, otherwise I'll be using
internal things like a list of tuples {FName, timestamp/other types, Value}
to create message headers. Is that what is supposed to be done?

On Fri, Nov 7, 2008 at 5:31 PM, Edwin Fine
<rabbitmq-discuss_efine at usa.net>wrote:

> Hi all,
>
> I'm using the Erlang client (2008/06/23 vintage, I think) and I've started
> to need message-related properties like timestamp, expiration, and so on, to
> avoid reinventing the wheel. The Java client's Javadoc I am not finding very
> helpful for this set of questions. I know that the Erlang client is still
> experimental, so I am asking for "documentation" here (* see the end of this
> post before sending STFW messages, please :)
>
> If the following questions are answered somewhere in a way that relates to
> how to use it in the Erlang client (e.g. examples in Erlang), please point
> me to it and disregard the rest of these questions.
>
> My questions are:
>
>    1. When I send a message with properties set to
>    amqp_util:basic_properties(), and receive it using a basic.get, the message
>    has only got property data in properties_bin, but properties is set to
>    'none'. How do I decode what's in properties_bin? Alternatively, how do I
>    get the properties to stay set in the unencoded 'properties' field?
>    2. What is the format of the timestamp field, and how do I
>    encode/decode it? I can't find a definition for its type "timestamp" in the
>    AMQP spec.
>    3. When and by what does the timestamp get set? I searched all the
>    client code for 'timestamp' but could not find it, so when I create a new
>    message, what sets this?
>    4. What is the format of the expiration? The spec does not define it.
>    5. What is the behavior when a message has expired? Does the client
>    automatically throw it away when doing a basic.get or consume so I never see
>    it?
>    6. Does the message_id ever get set automatically to a unique value?
>    7. What is the purpose of the 'type' property? The spec just writes
>    "message type name"? Is this totally user-defined?
>    8. How does one set and get message headers?
>
> I am sure that I could work this all out if I read all the Rabbit code, all
> the AMQP tutorials I can find, and so on, but it would take me days. It's
> already taken hours so far. If anyone can help me shortcut this, I would be
> very grateful.
>
> Regards,
> Edwin Fine
> ----------
> * For those who believe I should RTFM or STFW, I hear you, and I have done
> my best in the time I have available. This is what I have done and/or
> learned:
>
> I looked in the Erlang client and server code, too, but found little to
> help, besides this in amqp_util.erl:
>
> basic_properties() ->
>     #'P_basic'{content_type = <<"application/octet-stream">>, delivery_mode
> = 1, priority = 0}
>
> From rabbit_framing.hrl, I got this:
>
> -record('P_basic', {content_type, content_encoding, headers, delivery_mode,
> priority, correlation_id, reply_to, expiration, message_id, timestamp, type,
> user_id, app_id, cluster_id}).
>
> The above fields are described in the amqp0-8.xml document in terms of
> their basic type (e.g. shortstr, whatever that is) and their purpose. The
> basic types (shortstr, timestamp, etc) are not explained in the document,
> nor can I find a reference to anything that does explain them. I saw in the
> Rabbit code an assertion that shortstr length must be < 256, so now I know
> that :)
>
> In the Javadoc, only the content_type, delivery_mode, and priority fields
> seem to be used in the MessageProperties class. The descriptions of each of
> the properties in Basic.Properties are absent.
>
> I searched the Rabbit message list archives, too. One of the messages
> pointed me to a tutorial in C, which was useful to see how some of the
> properties were used (http://www.openamq.org/tutorial:soa). Now I
> understand that I have to set the message_id myself, and that the routing
> key of the sender should be put into reply_to if the sender requires a
> reply, in other words, the routing key of the responder must be set to the
> sender's reply_to property.
>
> I am still looking through the C code tutorials, so maybe I will find out
> more.
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20081107/f61e0be9/attachment.htm 

From 0x6e6562 at gmail.com  Sat Nov  8 01:02:58 2008
From: 0x6e6562 at gmail.com (Ben Hood)
Date: Sat, 8 Nov 2008 01:02:58 +0000
Subject: [rabbitmq-discuss] Last value cache for pub/sub pattern
In-Reply-To: <9439637.3101226074113369.JavaMail.root@zimbra>
References: <9439637.3101226074113369.JavaMail.root@zimbra>
Message-ID: <269388e30811071702g6f3b0799m5f72ba29753ee5d5@mail.gmail.com>

Bill,

On Fri, Nov 7, 2008 at 4:08 PM, Bill Soudan <bill at soudan.net> wrote:
> I see in the FAQ that support for a last value cache is planned:

Yes, well, many things are *planned* :-)

> I'd like to use AMQP and I need this feature, so I'm going to take a crack at implementing it.

Although this kind of thing is not (yet?) specified in the protocol, I
don't think it would too hard to do as a server specific extension.

> I do have one question though:  isn't there a race with the described implementation?  It seems possible to me that a new message may arrive from the bound exchange before the 'last-value' cache service responds with the most recent value.  Yes, I could fix this with some some of timestamp value or sequence value, but I would rather not push that responsibility onto the client.

I don't think that it would be an advantage to do this in the client,
since you can do this already. Also, the reason behind last value
caching is to be able to purge (semantically) obsolete messages from
the server without having to dequeue them.

> Another idea: provide a new exchange type, 'x-rabbitmq.last-value-topic', which would store the most recent message published for each topic in an Mnesia table.  During exchange.bind, the value in the cache would be retrieved and delivered to the queue immediately.  If no cached value was present, a special 'no value' message would be delivered instead.  Thoughts?  I am relatively new to both AMQP and RabbitMQ, so I'd appreciate any guidance here.

In terms of implementation, there may be a few ways to do this on the
server side:

- Maintain a queue per key and keep the max queue depth to 1 (crude,
but does the job)
- Maintain a priority search queue in the queue process that purges
the old value of a key when a new key arrives

In the second variant, you would somehow have to pass in the key to
the queue in a payload agnostic fashion - maybe you can use the
optional arguments parameter for publishing a message and (as you
suggest), use a special type of exchange.

One very simple way *could* be to use a hash map (you suggest mnesia,
which is a hash map on the heap) but you could equally just put stuff
into the process dictionary.

Having said that: how will you implement the FIFO semantics of the
queue? I don't know if a map will cut it in this scenario.

Also, what about message priorities and TTLs (which are not yet
implemented in Rabbit but I think that somebody in the community is
looking into this)?

BTW, what is the exchange.bind command?

I think that after considering all of these things, and investigating
some functional data structures, you will be able to come up with
something useful.

HTH,

Ben



From 0x6e6562 at gmail.com  Sat Nov  8 01:20:04 2008
From: 0x6e6562 at gmail.com (Ben Hood)
Date: Sat, 8 Nov 2008 01:20:04 +0000
Subject: [rabbitmq-discuss] rabbitmq erlang client
In-Reply-To: <415a0600811062309n7cec7d6bi405e2d784dc561f3@mail.gmail.com>
References: <415a0600811061319y46677e12lb241c078d057ef22@mail.gmail.com>
	<269388e30811061513j7a2fcbadrcfc99c20c78e06a5@mail.gmail.com>
	<415a0600811062309n7cec7d6bi405e2d784dc561f3@mail.gmail.com>
Message-ID: <269388e30811071720s5d132cf6x78d759675b42e03@mail.gmail.com>

Orion | Henry,

On Fri, Nov 7, 2008 at 7:09 AM, Orion Henry <orion.henry at gmail.com> wrote:

> I decided to start over and wrote a shell script that did the whole
> install and test....  here it is.
>
> ----------------------------------------
> #!/bin/sh
>
> tar xzvf rabbitmq-server-1.4.0.tar.gz
> cd rabbitmq-server-1.4.0 ; make ; cd ..
> sudo mv rabbitmq-server-1.4.0 /opt/local/lib/erlang/lib/rabbitmq_server-1.4.0
> LOG_BASE=/tmp SKIP_HEART=true SKIP_LOG_ARGS=true
> MNESIA_DIR=/tmp/rabbitmq_rabbit_test_direct_mnesia
> RABBIT_ARGS="-detached -pa ./ebin" NODENAME=rabbit_test_direct
> /opt/local/lib/erlang/lib/rabbitmq_server-1.4.0/scripts/rabbitmq-server
>
> tar xzvf rabbitmq-erlang-client-3a9ce636e283.tar.gz
> cd rabbitmq-erlang-client-3a9ce636e283; make; cd ..
> sudo mv rabbitmq-erlang-client-3a9ce636e283
> /opt/local/lib/erlang/lib/rabbitmq_client-3a9ce636e283
>
> erl -noshell -eval 'network_client_test:test(),halt().'
> ----------------------------------------
>
> I've attached its output to this email (its very long as a text file).
>  It contains the 6 failed tests from network_client_test:test/0

I've been able to reproduce your error: the problem is that the client
version you are using depends on a version of the broker later than
1.4.0. To reproduce this, I updated the broker back to the 1.4.0
release, rebuilt the client (rev 3a9ce636e283) and got exactly the
same error as you were getting.

So the solution is simple - upgrade to the latest version of the
server from the repo.

The reason why this is because the client reuses modules from the
broker in order to create a mirror image of a server side channel.

So the client is more intimately tied into the broker than the other
language clients are, which use the wire protocol and share no common
code base.

Until recently, the Erlang client has had an experimental status, but
due to increased interest, we have decided to promote this to a
properly support client. But there a number of issues that need to be
addressed before this goes 1.0.

In terms of ETA, this will only happen after the next release of the
server. Until then, you will just have to use the latest version from
the source tree.

HTH,

Ben



From 0x6e6562 at gmail.com  Sat Nov  8 01:43:16 2008
From: 0x6e6562 at gmail.com (Ben Hood)
Date: Sat, 8 Nov 2008 01:43:16 +0000
Subject: [rabbitmq-discuss] Erlang client and properties
In-Reply-To: <6c2563b20811071431l2100e787y1db4eb9c64cf64bc@mail.gmail.com>
References: <6c2563b20811071431l2100e787y1db4eb9c64cf64bc@mail.gmail.com>
Message-ID: <269388e30811071743if03074as11059604555a90c7@mail.gmail.com>

Edwin,

On Fri, Nov 7, 2008 at 10:31 PM, Edwin Fine
<rabbitmq-discuss_efine at usa.net> wrote:
>(* see the end of this
> post before sending STFW messages, please :)

What about RTFS :-)

> If the following questions are answered somewhere in a way that relates to
> how to use it in the Erlang client (e.g. examples in Erlang), please point
> me to it and disregard the rest of these questions.

As you pointed out yourself, the Erlang client is still experimental,
though it is getting better the more attention we give it.

Having said that, it does require some TLC wrt properties and flags,
so don't treat it as gospel.

Also, remember that it attempts to re-use as much code from the server
as it can - which is cool OTOH.....but originally, the server was not
decided with this in mind. So we may need to refactor some stuff
there, e.g. decoded properties vs. binary properties - for persistent
messages, the binary version is written to the journal, not the
decoded version. You would not have this in a client side only
construct.

> When I send a message with properties set to amqp_util:basic_properties(),
> and receive it using a basic.get, the message has only got property data in
> properties_bin, but properties is set to 'none'. How do I decode what's in
> properties_bin? Alternatively, how do I get the properties to stay set in
> the unencoded 'properties' field?

See answers above. Also - amqp_util is bit rotten and probably needs
cleaning up.

> What is the format of the timestamp field, and how do I encode/decode it? I
> can't find a definition for its type "timestamp" in the AMQP spec.
> When and by what does the timestamp get set? I searched all the client code
> for 'timestamp' but could not find it, so when I create a new message, what
> sets this?
> What is the format of the expiration? The spec does not define it.
> What is the behavior when a message has expired? Does the client
> automatically throw it away when doing a basic.get or consume so I never see
> it?
> Does the message_id ever get set automatically to a unique value?
> What is the purpose of the 'type' property? The spec just writes "message
> type name"? Is this totally user-defined?

I'll let Matthias answer these questions as he is reviewing the
upcoming 0.9.1 spec.

> How does one set and get message headers?

Create your own P_basic tuple and set all of the fields appropriately.

> I am sure that I could work this all out if I read all the Rabbit code, all
> the AMQP tutorials I can find, and so on, but it would take me days. It's
> already taken hours so far. If anyone can help me shortcut this, I would be
> very grateful.

You are quite rightfully identifying many ambiguities in the protocol
definition, which for good reason is not yet 1.0 (because it is
buggy).

You should try to implement an AMQP compliant broker one of these
days, as you have been able to gather from your initial investigation,
the protocol is still some off being conceptually sound.

Also, you must appreciate that RabbitMQ is not the official source of
the AMQP spec - this has been authored by the AMQP working group.

However, in the absence of any public forums for AMQP where
individuals can express their views, I think it is perfectly valid for
the community to use the Rabbit mailing list to discuss these issues.
After all, these are the real people using the protocol.

HTH,

Ben



From 0x6e6562 at gmail.com  Sat Nov  8 01:48:47 2008
From: 0x6e6562 at gmail.com (Ben Hood)
Date: Sat, 8 Nov 2008 01:48:47 +0000
Subject: [rabbitmq-discuss] rabbitmq bugs and issue database
In-Reply-To: <4914AAF2.5050901@yahoo.com.sg>
References: <4914AAF2.5050901@yahoo.com.sg>
Message-ID: <269388e30811071748l1a9af77n340a89aff228a815@mail.gmail.com>

Graham,

On Fri, Nov 7, 2008 at 8:54 PM, rrabarg2 <rrabarg2 at yahoo.com.sg> wrote:
> We'd like evaluate rabbitmq for use in our organisation but I have been
> unable to locate the bugs and issues database.  Is this available?

No.

We have an internal bug database, which is the source of the curious
branch names we have in the source tree.

But the only database that Joe The Plumber can use is the user list archives.

Part of the reason is that tradition bug databases seem to fill up
with junk that nobody cares about.

Also, we tend to react to issues posted on the list so it is a good
place to file bugs and search for issues other people have created.

HTH,

Ben



From rrabarg2 at yahoo.com.sg  Sat Nov  8 06:57:11 2008
From: rrabarg2 at yahoo.com.sg (rrabarg2)
Date: Sat, 08 Nov 2008 17:57:11 +1100
Subject: [rabbitmq-discuss] rabbitmq bugs and issue database
In-Reply-To: <269388e30811071748l1a9af77n340a89aff228a815@mail.gmail.com>
References: <4914AAF2.5050901@yahoo.com.sg>
	<269388e30811071748l1a9af77n340a89aff228a815@mail.gmail.com>
Message-ID: <49153847.6020203@yahoo.com.sg>

Could you give me an idea of how many bugs are on the database at the 
moment, and how many are critical and major?
Thanks
Graham

Ben Hood wrote:
> Graham,
>
> On Fri, Nov 7, 2008 at 8:54 PM, rrabarg2 <rrabarg2 at yahoo.com.sg> wrote:
>   
>> We'd like evaluate rabbitmq for use in our organisation but I have been
>> unable to locate the bugs and issues database.  Is this available?
>>     
>
> No.
>
> We have an internal bug database, which is the source of the curious
> branch names we have in the source tree.
>
> But the only database that Joe The Plumber can use is the user list archives.
>
> Part of the reason is that tradition bug databases seem to fill up
> with junk that nobody cares about.
>
> Also, we tend to react to issues posted on the list so it is a good
> place to file bugs and search for issues other people have created.
>
> HTH,
>
> Ben
>
>   

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20081108/2da90979/attachment.htm 

From matthias at lshift.net  Sat Nov  8 06:53:13 2008
From: matthias at lshift.net (Matthias Radestock)
Date: Sat, 08 Nov 2008 06:53:13 +0000
Subject: [rabbitmq-discuss] Erlang client and properties
In-Reply-To: <269388e30811071743if03074as11059604555a90c7@mail.gmail.com>
References: <6c2563b20811071431l2100e787y1db4eb9c64cf64bc@mail.gmail.com>
	<269388e30811071743if03074as11059604555a90c7@mail.gmail.com>
Message-ID: <49153759.8020004@lshift.net>

Ben Hood wrote:
 > I'll let Matthias answer these questions as he is reviewing the
 > upcoming 0.9.1 spec.

Err, thanks. 0-9-1 doesn't actually answer most of these, though some 
did come up during the 0-10 discussions.

>> What is the format of the timestamp field, and how do I encode/decode it?

"64-bit POSIX time_t format with an accuracy of seconds", according to 
the spec. 0-10 labels this type "datetime".

>> When and by what does the timestamp get set? I searched all the client code
>> for 'timestamp' but could not find it, so when I create a new message, what
>> sets this?

Nothing in the RabbitMQ code base sets the timestamp. It is up to 
application code.

>> What is the format of the expiration? The spec does not define it.

In 0-10 the type has changed to type "datetime".

>> What is the behavior when a message has expired? Does the client
>> automatically throw it away when doing a basic.get or consume so I never see
>> it?

The 0-10 spec says

"Messages that live longer than their expiration time will be discarded 
(or dead lettered)."

RabbitMQ currently does not implement this feature, but it is on our 
todo list.

>> Does the message_id ever get set automatically to a unique value?

No.

>> What is the purpose of the 'type' property? The spec just writes "message
>> type name"? Is this totally user-defined?

'type' is a user-defined field.


Matthias.



From matthias at lshift.net  Sat Nov  8 07:26:57 2008
From: matthias at lshift.net (Matthias Radestock)
Date: Sat, 08 Nov 2008 07:26:57 +0000
Subject: [rabbitmq-discuss] rabbitmq bugs and issue database
In-Reply-To: <49153847.6020203@yahoo.com.sg>
References: <4914AAF2.5050901@yahoo.com.sg>	<269388e30811071748l1a9af77n340a89aff228a815@mail.gmail.com>
	<49153847.6020203@yahoo.com.sg>
Message-ID: <49153F41.7090904@lshift.net>

Graham,

rrabarg2 wrote:
> Could you give me an idea of how many bugs are on the database at the 
> moment, and how many are critical and major?

What exactly do you mean by "bug"? In our bug database we track almost 
every single piece of work we (want to) do, whether that involves a 
genuine bug, a new feature, or tasks like discussing some aspect of the 
protocol with the working group, redesigning the rabbitmq web site, etc, 
etc.

Similarly, what do you mean by "critical" and "major"? Having seen 
bug/issue tracking systems in many organisations I can attest to the 
fact that there is a vast difference in how they are being used. 
Like-for-like comparisons are impossible.

In terms of evaluating rabbitmq for use in your organisation, do you 
have some specific metrics in mind?

Regards,

Matthias.



From vinorasmus at gmail.com  Sat Nov  8 08:21:53 2008
From: vinorasmus at gmail.com (Gavin Bong)
Date: Sat, 8 Nov 2008 16:21:53 +0800
Subject: [rabbitmq-discuss] (java) Is Connection pooling required ?
Message-ID: <33784a0c0811080021t690c9fc0sf84d6d4c960e50c7@mail.gmail.com>

Hi,

Scenario:

We have to support many concurrent client producer threads (in the
order of 30 threads) connecting to the same { broker/virtualhost/realm
}.

Concerns:

Should I attempt to pool Connections via an object pooling framework
(e.g. commons-pool) ? Has anyone attempted this and if yes, would you
please share your experiences/gotchas ?

Regards,

Gavin



From rrabarg2 at yahoo.com.sg  Sat Nov  8 08:52:11 2008
From: rrabarg2 at yahoo.com.sg (rrabarg2)
Date: Sat, 08 Nov 2008 19:52:11 +1100
Subject: [rabbitmq-discuss] rabbitmq bugs and issue database
In-Reply-To: <49153F41.7090904@lshift.net>
References: <4914AAF2.5050901@yahoo.com.sg>	<269388e30811071748l1a9af77n340a89aff228a815@mail.gmail.com>
	<49153847.6020203@yahoo.com.sg> <49153F41.7090904@lshift.net>
Message-ID: <4915533B.9050107@yahoo.com.sg>

Hi Matthias,

I take your point that like-for-like comparison is very hard; I'm only
attempting to get an impression;

For example, a colleague informs me that MULE has 679 open issues, 39 of
which are critical and 200 plus major. Those in progress (i.e being
worked on) is 8.  The "core" components appear to hold in excess of 200
of those issues. Core routing / filters alone has 45.

Terracotta has some 360+ open JIRAs, 5 critical, and only 5 in progress.

As you suggest 'critical' could mean something quite different in MULE
to Terracotta - but it does provide an important impression none-the-less.

Personally, I'd define a 'blocker' as being a high customer impact
defect which is the result of a core use-case failure with collateral
damage and for which there is no work-around.  'major' would be of
medium priority to customers and would result from a use-case defect
for which a workaround could be found, examples might include inaccurate
calculations.  'critical' would be somewhere in between.

However, for the purposes of my query, I'm interested in the number of
genuine bugs in your database and an indication of the numbers in the 
highest severity/priority categories - however you define them.

Regards

Graham

Matthias Radestock wrote:
> Graham,
>
> rrabarg2 wrote:
>> Could you give me an idea of how many bugs are on the database at the 
>> moment, and how many are critical and major?
>
> What exactly do you mean by "bug"? In our bug database we track almost 
> every single piece of work we (want to) do, whether that involves a 
> genuine bug, a new feature, or tasks like discussing some aspect of 
> the protocol with the working group, redesigning the rabbitmq web 
> site, etc, etc.
>
> Similarly, what do you mean by "critical" and "major"? Having seen 
> bug/issue tracking systems in many organisations I can attest to the 
> fact that there is a vast difference in how they are being used. 
> Like-for-like comparisons are impossible.
>
> In terms of evaluating rabbitmq for use in your organisation, do you 
> have some specific metrics in mind?
>
> Regards,
>
> Matthias.
>





From 0x6e6562 at gmail.com  Sat Nov  8 11:32:05 2008
From: 0x6e6562 at gmail.com (Ben Hood)
Date: Sat, 8 Nov 2008 11:32:05 +0000
Subject: [rabbitmq-discuss] rabbitmq bugs and issue database
In-Reply-To: <4915533B.9050107@yahoo.com.sg>
References: <4914AAF2.5050901@yahoo.com.sg>
	<269388e30811071748l1a9af77n340a89aff228a815@mail.gmail.com>
	<49153847.6020203@yahoo.com.sg> <49153F41.7090904@lshift.net>
	<4915533B.9050107@yahoo.com.sg>
Message-ID: <269388e30811080332g30b9d0a8rb0fd1f6c5de5cd47@mail.gmail.com>

Graham,

On Sat, Nov 8, 2008 at 8:52 AM, rrabarg2 <rrabarg2 at yahoo.com.sg> wrote:
> For example, a colleague informs me that MULE has 679 open issues, 39 of
> which are critical and 200 plus major. Those in progress (i.e being
> worked on) is 8.  The "core" components appear to hold in excess of 200
> of those issues. Core routing / filters alone has 45.
>
> Terracotta has some 360+ open JIRAs, 5 critical, and only 5 in progress.

I think this observation ties in with my previous conjecture "that
traditional bug databases seem to fill up
with junk that nobody cares about."

My suggestion would be to reformulate your question to the list and ask -

"Can anybody tell me about any issue that I reported to the Rabbit list that
a) was verified by the Rabbit team as a true defect and not as a nice to have;
b) has no workaround;
c) the Rabbit team has not yet bothered to try to fix it
?
"

Similarly, you could just people whether they think that Rabbit is
buggy in comparison to other systems.

And then only accept answers from people who are not on the Rabbit team :-)

> As you suggest 'critical' could mean something quite different in MULE
> to Terracotta - but it does provide an important impression none-the-less.
>
> Personally, I'd define a 'blocker' as being a high customer impact
> defect which is the result of a core use-case failure with collateral
> damage and for which there is no work-around.  'major' would be of
> medium priority to customers and would result from a use-case defect
> for which a workaround could be found, examples might include inaccurate
> calculations.  'critical' would be somewhere in between.
>
> However, for the purposes of my query, I'm interested in the number of
> genuine bugs in your database and an indication of the numbers in the
> highest severity/priority categories - however you define them.

I would take a military style approach to classifying P1 and not P1
bugs. A showstopper is anything that prevents you from using the
system for it's core purpose, anything else is just annoying. This is
very similar to what you are describing.

I am unaware of any such bugs at the moment, so IMHO, the critical
count would be zero (to give you a management figure :-)

Furthermore, I would say characterize Rabbit's development
prioritization philosophy as being "stability and predicitability"
over "performance and features". What this means practically is that
we are working on (some unreported) shortcomings that we think will
eventually rear their ugly heads, such as linear routing, disk
overflow, race conditions in shutdown, load balancing and flow
control.

HTH,

Ben



From 0x6e6562 at gmail.com  Sat Nov  8 11:37:09 2008
From: 0x6e6562 at gmail.com (Ben Hood)
Date: Sat, 8 Nov 2008 11:37:09 +0000
Subject: [rabbitmq-discuss] Erlang client and properties
In-Reply-To: <49153759.8020004@lshift.net>
References: <6c2563b20811071431l2100e787y1db4eb9c64cf64bc@mail.gmail.com>
	<269388e30811071743if03074as11059604555a90c7@mail.gmail.com>
	<49153759.8020004@lshift.net>
Message-ID: <269388e30811080337u3474b1a4sc052074924eb456f@mail.gmail.com>

Matthias

On Sat, Nov 8, 2008 at 6:53 AM, Matthias Radestock <matthias at lshift.net> wrote:
> Ben Hood wrote:
>  > I'll let Matthias answer these questions as he is reviewing the
>  > upcoming 0.9.1 spec.
>
> Err, thanks. 0-9-1 doesn't actually answer most of these, though some
> did come up during the 0-10 discussions.

This is exactly the answer I wanted to give Edwin ;-)

The reason being is it gives somebody who starts reading the current
spec an impression of why AMQP is not 1.0 yet - not only because of
directional issues but because of the many bugs in the spec.

The astute reader may then ask why we are not using 0-10 if it
apparently clarifies points in 0-8/0-9/0-9-1 :-)

Ben



From 0x6e6562 at gmail.com  Sat Nov  8 13:48:56 2008
From: 0x6e6562 at gmail.com (Ben Hood)
Date: Sat, 8 Nov 2008 13:48:56 +0000
Subject: [rabbitmq-discuss] (java) Is Connection pooling required ?
In-Reply-To: <33784a0c0811080021t690c9fc0sf84d6d4c960e50c7@mail.gmail.com>
References: <33784a0c0811080021t690c9fc0sf84d6d4c960e50c7@mail.gmail.com>
Message-ID: <269388e30811080548i18a9c1b8tbcfda2fcaff29b09@mail.gmail.com>

Gavin,

On Sat, Nov 8, 2008 at 8:21 AM, Gavin Bong <vinorasmus at gmail.com> wrote:
> Hi,
>
> Scenario:
>
> We have to support many concurrent client producer threads (in the
> order of 30 threads) connecting to the same { broker/virtualhost/realm
> }.
>
> Concerns:
>
> Should I attempt to pool Connections via an object pooling framework
> (e.g. commons-pool) ? Has anyone attempted this and if yes, would you
> please share your experiences/gotchas ?

For a general treatise, you could read this article:
http://hopper.squarespace.com/blog/2008/10/6/multithreading-amqp-clients.html

As the article points out you should be sharing the connection and
binding a channel to each thread.

HTH,

Ben



From holger at wizards.de  Sat Nov  8 14:30:28 2008
From: holger at wizards.de (=?ISO-8859-1?Q?Holger_Hoffst=E4tte?=)
Date: Sat, 08 Nov 2008 15:30:28 +0100
Subject: [rabbitmq-discuss] rabbitmq bugs and issue database
In-Reply-To: <49153F41.7090904@lshift.net>
References: <4914AAF2.5050901@yahoo.com.sg>	<269388e30811071748l1a9af77n340a89aff228a815@mail.gmail.com>	<49153847.6020203@yahoo.com.sg>
	<49153F41.7090904@lshift.net>
Message-ID: <4915A284.2030507@wizards.de>

Matthias Radestock wrote:
> What exactly do you mean by "bug"? In our bug database we track almost 
> every single piece of work we (want to) do, whether that involves a 
> genuine bug, a new feature, or tasks like discussing some aspect of the 
> protocol with the working group, redesigning the rabbitmq web site, etc, 
> etc.

You mean it will eventually fill up, just like a public tracker? :-)
(just kidding..I know the process makes all the difference).

But no matter how much I'd like to see a public tracker, there is -
unfortunately - a good reason against one: smear tactics by
(closed-source) commercial vendors, who use the public issue lists as
leverage in their customer negotations. I'm not kidding: they really do that.

Personally I'd see that as vindication that you're doing something right,
but that's probably just me.

Holger



From Peter.A.Silva at gmail.com  Sat Nov  8 15:36:57 2008
From: Peter.A.Silva at gmail.com (Peter Silva)
Date: Sat, 8 Nov 2008 10:36:57 -0500
Subject: [rabbitmq-discuss] whether the weather is right.
Message-ID: <4442b4720811080736h7e2a5d81p41321f644e7ab454@mail.gmail.com>

Hello,

introductory letter... I have been trying to figure out a place to learn
about AMQP for the past little while, and am playing around with py-amqplib
& rabbitmq on a laptop.  The protocol is kind of daunting to me, and rabbit
seems to be the place where I have some vague clue as to what people are
saying, and there is an active list.   very impressed with rabbitmq & erlang
from what I have read so far.  thinking about applications in weather
messaging.  Don't really understand how to map the two realms so far.

The weather messaging model is sort of pub/sub.   Every message has either a
header or a file name which is used as a routing key.   We have a routing
table (about 40k entries in an in-memory python dictionary/associative
array) which lists destinations to which the message will be queued for
transmission.  Regular expressions can be used in lots of interesting ways
in this process.  We ensure that downstream links are not overburdened (a
radar feed is about 6 mbs, some of our clients run 4800 bps.) and we take
care of permissions (some clients are not allowed to see certain data from
certain sources.)

I read Kirk Wylie's October thread about publishing with interest, as it
resonates strongly in my world.  I want the source of messages to have as
little as possible to say about how or where I (the MHS receiving messages)
will forward them.  The source should simply put a label on it to tell me
what it is.  The channel it arrives on tells me where it is coming from,
with the two pieces of information, the broker/exchange/MHS (I'm hoping all
three are synonymous) will make routing decisions.

To me, unicast/direct, multi-cast/topic, broadcast/fanout data distribution
has nothing to do with how the data arrived at the switch/broker/exchange.
Neither producer, nor consumer should have anything to say about that.
Producers describe what they are producing, consumers describe what they are
interested in, the MHS people could map producers and consumers together
masked by the routing table (which defines permissions)  and that would
include mapping particular exchanges onto 'topics'/'exchanges', etc... The
aggregation role includes categorization.  For example, we have groupings of
data accoring
to interest group... climatology, hydrology, aviation, road weather.  It
isn't the publisher of the information that knows (or is even aware of) who
is interested in their data.  The client won't necessarily know that the
data exists.   The aggregator/broker/MHS/exchange operator can try to bring
the two together.

I find routing tables a lot easier to understand than capabilities and
ACL's, and sufficient, if not elegant.  Has anyone looked at them as a
security mechanism?  I imagine the task is to do some sort of use case
mapping.    They might be applicable as one security model alongside others.

If there are any other weather people out there, would be interesting to
talk.

Just looking for now... but at least I've found a place to watch!
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20081108/6eed2479/attachment.htm 

From holger at wizards.de  Sat Nov  8 15:41:30 2008
From: holger at wizards.de (=?ISO-8859-1?Q?Holger_Hoffst=E4tte?=)
Date: Sat, 08 Nov 2008 16:41:30 +0100
Subject: [rabbitmq-discuss] Packaging
In-Reply-To: <269388e30811061023o552f6cf0l9a15cb1e613b31a5@mail.gmail.com>
References: <269388e30811061023o552f6cf0l9a15cb1e613b31a5@mail.gmail.com>
Message-ID: <4915B32A.3060703@wizards.de>

Ben Hood wrote:
> So this is call to the community to see if anybody themselves is
> interested in producing/maintaining packages for their favorite OS.

As I indicated in an exchange with Hubert (Oct.19, also on the internal
list) I can take care of the Gentoo "packaging", which would consist of a
small project in the publicly accessible Rabbit hg repo, which users can
then add to their local list of installation sources. See my mail to
Hubert for details. There's no real packaging going on, since it just uses
the existing generic Unix tarball for installation. Could also easily do
the same for the client libs or shovel.

> This also applies to Debian, RPM and Windows - if there is anybody
> interested in taking over this role, this would be great as well.

Does Windows really require a full-blown installer? It might be easier to
simply offer a zip and require installing the stock Erlang runtime package
separately, maybe with a hint to version compatibility or recommendation.
It's not *that* hard.

> BTW (if anybody has actually read this far :-) this would tie in with
> the my previous post about letting the broker get released
> independently of the clients, because the broker is something that you
> typically install into the OS, whereas client libraries are downloaded
> and put on the load path of your project.

Unfortunately I have no constructive ideas re. the versioning :(

Holger



From rabbitmq-discuss_efine at usa.net  Sat Nov  8 16:09:00 2008
From: rabbitmq-discuss_efine at usa.net (Edwin Fine)
Date: Sat, 8 Nov 2008 11:09:00 -0500
Subject: [rabbitmq-discuss] Erlang client and properties
In-Reply-To: <269388e30811080337u3474b1a4sc052074924eb456f@mail.gmail.com>
References: <6c2563b20811071431l2100e787y1db4eb9c64cf64bc@mail.gmail.com>
	<269388e30811071743if03074as11059604555a90c7@mail.gmail.com>
	<49153759.8020004@lshift.net>
	<269388e30811080337u3474b1a4sc052074924eb456f@mail.gmail.com>
Message-ID: <6c2563b20811080809u20404dcbs478223d2a7e53349@mail.gmail.com>

On Sat, Nov 8, 2008 at 6:37 AM, Ben Hood <0x6e6562 at gmail.com> wrote:

> Matthias
>
> On Sat, Nov 8, 2008 at 6:53 AM, Matthias Radestock <matthias at lshift.net>
> wrote:
> > Ben Hood wrote:
> >  > I'll let Matthias answer these questions as he is reviewing the
> >  > upcoming 0.9.1 spec.
> >
> > Err, thanks. 0-9-1 doesn't actually answer most of these, though some
> > did come up during the 0-10 discussions.
>
> This is exactly the answer I wanted to give Edwin ;-)
>
> The reason being is it gives somebody who starts reading the current
> spec an impression of why AMQP is not 1.0 yet - not only because of
> directional issues but because of the many bugs in the spec.
>

Thanks a lot, guys. This really helps.


>
> The astute reader may then ask why we are not using 0-10 if it
> apparently clarifies points in 0-8/0-9/0-9-1 :-)
>

Ok, then... why are you not using 0-10? :)


> Ben


Regards,
Ed
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20081108/a4093f3d/attachment.htm 

From 0x6e6562 at gmail.com  Sat Nov  8 17:15:53 2008
From: 0x6e6562 at gmail.com (Ben Hood)
Date: Sat, 8 Nov 2008 17:15:53 +0000
Subject: [rabbitmq-discuss] Fwd: Notification: RabbitMQ-server
In-Reply-To: <20081016102010.8301.78731@JNQ003.local>
References: <20081016102010.8301.78731@JNQ003.local>
Message-ID: <269388e30811080915g7ea1375cke266539eef5a522e@mail.gmail.com>

Dear List,

FYI - the guys from bitbucket.org are mirroring the main Rabbit repo
(see forwarded mail).

This may interesting for those who want to fork the code base.

Currently they only mirror the server, I guess if somebody need one of
the other repos, we could just ask.

Ben

PS Jesper - sorry for taking so long to say thanks - your mail somehow
landed in my trash :-(


---------- Forwarded message ----------
From:  <notifications-noreply at bitbucket.org>
Date: Thu, Oct 16, 2008 at 10:20 AM
Subject: Notification: RabbitMQ-server
To: 0x6e6562 at gmail.com


You have received a notification from jespern.

Hi 7234914,

Just to let you know, we're mirroring rabbitmq-server on Bitbucket now.

You can find the repository at http://www.bitbucket.org/mirror/rabbitmq-server/.

We'll pull in your repo every 15 minutes.


Jesper

You may read it and others on http://bitbucket.org/notifications/

--
This is a notification from bitbucket.org.
You are receiving this because you have email notifications enabled.



From 0x6e6562 at gmail.com  Sat Nov  8 17:38:26 2008
From: 0x6e6562 at gmail.com (Ben Hood)
Date: Sat, 8 Nov 2008 17:38:26 +0000
Subject: [rabbitmq-discuss] Packaging
In-Reply-To: <4915B32A.3060703@wizards.de>
References: <269388e30811061023o552f6cf0l9a15cb1e613b31a5@mail.gmail.com>
	<4915B32A.3060703@wizards.de>
Message-ID: <269388e30811080938j62d6bcfeh33f4916e6d963b07@mail.gmail.com>

Holger,

On Sat, Nov 8, 2008 at 3:41 PM, Holger Hoffst?tte <holger at wizards.de> wrote:
> As I indicated in an exchange with Hubert (Oct.19, also on the internal
> list) I can take care of the Gentoo "packaging", which would consist of a
> small project in the publicly accessible Rabbit hg repo, which users can
> then add to their local list of installation sources. See my mail to
> Hubert for details. There's no real packaging going on, since it just uses
> the existing generic Unix tarball for installation. Could also easily do
> the same for the client libs or shovel.

FTR, this is an excerpt of what Holger wrote to Hubert:

--snip--

That's exactly what I had in mind. Is there some urgent need for the
Gentoo packaging? ebuilds are either in the official package database
("portage", http://packages.gentoo.org/) or can be added to a
distributed
overlay infrastucture of additional mini-repos from the community
("overlays"). These can be added to a client machine's package
repository
via "layman" (http://layman.sourceforge.net/), the overlay manager. It
might make sense to host a Rabbit overlay in LShift's hg repo, which
could
then contain all related ebuilds. I briefly looked into making a
package
for the erlang client but wanted to wait until stable binary packages
are
available, otherwise I'd have to mess around with eUnit for
compilation
and test phase and whatnot.

--snip--

IMHO, Hubert should have cc'ed the Rabbit list instead of our internal
list - there is too much information on the internal list that should
really be public :-(

As for your suggestion, I think it would be coolest if that were in
portage, but of course, somebody has to maintain it.

As for using a repo on RabbitMQ com, I don't know if that's such a
good idea (bureaucratic overhead) and maybe it is unnecessary,
something like bitbucket could do the trick as well.

> Does Windows really require a full-blown installer? It might be easier to
> simply offer a zip and require installing the stock Erlang runtime package
> separately, maybe with a hint to version compatibility or recommendation.
> It's not *that* hard.

Holger, you're preaching to the converted, especially being somebody
who has never installed Rabbit themselves.

But personally I've only run Rabbit on BSD, Arch and OSX, so I am not
the right person to judge the ease of use from a Windows developer's
perspective.

I have received a few comments here and there that surround Windows installers.

So if there is somebody who runs Rabbit on Windows who thinks an
installer would be a good idea, may they step forward.

Ben



From 0x6e6562 at gmail.com  Sat Nov  8 17:45:13 2008
From: 0x6e6562 at gmail.com (Ben Hood)
Date: Sat, 8 Nov 2008 17:45:13 +0000
Subject: [rabbitmq-discuss] Erlang client and properties
In-Reply-To: <6c2563b20811080809u20404dcbs478223d2a7e53349@mail.gmail.com>
References: <6c2563b20811071431l2100e787y1db4eb9c64cf64bc@mail.gmail.com>
	<269388e30811071743if03074as11059604555a90c7@mail.gmail.com>
	<49153759.8020004@lshift.net>
	<269388e30811080337u3474b1a4sc052074924eb456f@mail.gmail.com>
	<6c2563b20811080809u20404dcbs478223d2a7e53349@mail.gmail.com>
Message-ID: <269388e30811080945j48f2f9fdpdeaa5c643720780a@mail.gmail.com>

Edwin,

On Sat, Nov 8, 2008 at 4:09 PM, Edwin Fine
<rabbitmq-discuss_efine at usa.net> wrote:
> Ok, then... why are you not using 0-10? :)

When discussing 0-10, you need to choose your words carefully, lest
you say something wrong about it, so here I go:

If you imagine the fingers on one hand were a set of bit flags, with
your thumb being at index 0 and your pinkie at index 4, what would
00100 spell?

Ben



From rabbitmq-discuss_efine at usa.net  Sat Nov  8 17:51:39 2008
From: rabbitmq-discuss_efine at usa.net (Edwin Fine)
Date: Sat, 8 Nov 2008 12:51:39 -0500
Subject: [rabbitmq-discuss] Erlang client and properties
In-Reply-To: <269388e30811080945j48f2f9fdpdeaa5c643720780a@mail.gmail.com>
References: <6c2563b20811071431l2100e787y1db4eb9c64cf64bc@mail.gmail.com>
	<269388e30811071743if03074as11059604555a90c7@mail.gmail.com>
	<49153759.8020004@lshift.net>
	<269388e30811080337u3474b1a4sc052074924eb456f@mail.gmail.com>
	<6c2563b20811080809u20404dcbs478223d2a7e53349@mail.gmail.com>
	<269388e30811080945j48f2f9fdpdeaa5c643720780a@mail.gmail.com>
Message-ID: <6c2563b20811080951v3e263ee4xf6b439587b49369e@mail.gmail.com>

Now is that directed at me or the spec? ;-)

On Sat, Nov 8, 2008 at 12:45 PM, Ben Hood <0x6e6562 at gmail.com> wrote:

> Edwin,
>
> On Sat, Nov 8, 2008 at 4:09 PM, Edwin Fine
> <rabbitmq-discuss_efine at usa.net> wrote:
> > Ok, then... why are you not using 0-10? :)
>
> When discussing 0-10, you need to choose your words carefully, lest
> you say something wrong about it, so here I go:
>
> If you imagine the fingers on one hand were a set of bit flags, with
> your thumb being at index 0 and your pinkie at index 4, what would
> 00100 spell?
>
> Ben
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20081108/0b207737/attachment.htm 

From holger at wizards.de  Sat Nov  8 18:02:37 2008
From: holger at wizards.de (=?ISO-8859-1?Q?Holger_Hoffst=E4tte?=)
Date: Sat, 08 Nov 2008 19:02:37 +0100
Subject: [rabbitmq-discuss] Packaging
In-Reply-To: <269388e30811080938j62d6bcfeh33f4916e6d963b07@mail.gmail.com>
References: <269388e30811061023o552f6cf0l9a15cb1e613b31a5@mail.gmail.com>	
	<4915B32A.3060703@wizards.de>
	<269388e30811080938j62d6bcfeh33f4916e6d963b07@mail.gmail.com>
Message-ID: <4915D43D.3080005@wizards.de>

Ben Hood wrote:
> As for your suggestion, I think it would be coolest if that were in
> portage, but of course, somebody has to maintain it.

I'm not an "official" Gentoo dev with commit rights to main portage,
merely a contributor/bug reporter/tester to packages that I use myself.

> As for using a repo on RabbitMQ com, I don't know if that's such a
> good idea (bureaucratic overhead) and maybe it is unnecessary,
> something like bitbucket could do the trick as well.

The point was that it has to be hosted somewhere. Right now it is on my
home server with DynDNS address, so it makes sense to have it in a more
permanent/accessible place.
The official repo for user-contributed ebuilds is the Sunrise overlay at
http://overlays.gentoo.org/proj/sunrise and would be just as good.

Holger



From rabbitmq-discuss_efine at usa.net  Sat Nov  8 18:09:17 2008
From: rabbitmq-discuss_efine at usa.net (Edwin Fine)
Date: Sat, 8 Nov 2008 13:09:17 -0500
Subject: [rabbitmq-discuss] Packaging
In-Reply-To: <269388e30811080938j62d6bcfeh33f4916e6d963b07@mail.gmail.com>
References: <269388e30811061023o552f6cf0l9a15cb1e613b31a5@mail.gmail.com>
	<4915B32A.3060703@wizards.de>
	<269388e30811080938j62d6bcfeh33f4916e6d963b07@mail.gmail.com>
Message-ID: <6c2563b20811081009j629a8929i21ee11cae00932e2@mail.gmail.com>

>
>
> > Does Windows really require a full-blown installer? It might be easier to
> > simply offer a zip and require installing the stock Erlang runtime
> package
> > separately, maybe with a hint to version compatibility or recommendation.
> > It's not *that* hard.
>
> Holger, you're preaching to the converted, especially being somebody
> who has never installed Rabbit themselves.
>
> But personally I've only run Rabbit on BSD, Arch and OSX, so I am not
> the right person to judge the ease of use from a Windows developer's
> perspective.
>
> I have received a few comments here and there that surround Windows
> installers.
>
> So if there is somebody who runs Rabbit on Windows who thinks an
> installer would be a good idea, may they step forward.
>

I'm not a fan of Windows installers, because they usually put things into
the registry. The uninstaller is supposed to remove these things, but too
often they just don't work, leaving you with dozens or even hundreds of
registry entries that you have to clean up somehow. Or, if you happen to
change the drive letter on which the software is installed (by moving the
software, for example), it breaks. Unless you use some third party tools.

One of the few times I would see a Windows installer as being useful in this
case, MAYBE, is if you want to install RabbitMQ as a Windows service to
start automatically when Windows starts, although how that plays with the
Erlang VM needing to be running first, I am not sure. Maybe there could be
some Windows code that starts the VM first. I'm sure there are better ways;
I hardly touch Windows these days except when I am forced to.

The bottom line is that a self-extracting .exe archive (rather than a zip,
which you could offer as well) with an expectation of a minimum running
version of Erlang, plus some good command (batch) scripts and installation
instructions would probably do the trick.

In terms of an earlier email about how to package the clients and server, I
see it like this: repackage (and optionally refactor) the server into
server-specific components and common components. Make the common components
a separate Erlang app; ditto for client and server, and have the server and
client depend on this app. Put in checks on both server and client side that
they are running with a suitable version of the common app, and fail with a
clear warning message if this is not the case. Make it easy for users to
know which version of the common app the client or server depend on,
preferably a simple script that invokes Erlang to delve into the guts and
bring out the answer.

Offer a number of packaging options: client, server, and common; client and
common; server and common; and common alone (for bug fixes and
improvements).

My 2c worth.

Ed


> Ben
>
> _______________________________________________
> rabbitmq-discuss mailing list
> rabbitmq-discuss at lists.rabbitmq.com
> http://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20081108/f0c84b02/attachment.htm 

From 0x6e6562 at gmail.com  Sat Nov  8 18:10:36 2008
From: 0x6e6562 at gmail.com (Ben Hood)
Date: Sat, 8 Nov 2008 18:10:36 +0000
Subject: [rabbitmq-discuss] whether the weather is right.
In-Reply-To: <4442b4720811080736h7e2a5d81p41321f644e7ab454@mail.gmail.com>
References: <4442b4720811080736h7e2a5d81p41321f644e7ab454@mail.gmail.com>
Message-ID: <269388e30811081010y736aa5dcl25a1261aa259c56f@mail.gmail.com>

Peter,

On Sat, Nov 8, 2008 at 3:36 PM, Peter Silva <Peter.A.Silva at gmail.com> wrote:
> The protocol is kind of daunting to me, and rabbit
> seems to be the place where I have some vague clue as to what people are
> saying, and there is an active list.

Can you elaborate on how you think the protocol is daunting? Is it too
complicated, too vague, too verbose or something else. It is always
interesting to hear why the spec is not very well received. Or is
something like the lack of ancillary supporting documentation or
examples?

> thinking about applications in weather
> messaging.  Don't really understand how to map the two realms so far.

Pardon my ignorance, but are you talking about sending meteorological
data via messages?

> The weather messaging model is sort of pub/sub.   Every message has either a
> header or a file name which is used as a routing key.   We have a routing
> table (about 40k entries in an in-memory python dictionary/associative
> array) which lists destinations to which the message will be queued for
> transmission.

If I understand you correctly, a destination in the weather domain
could map to a queue in AMQP.

A producer would send a message with a particular routing key to an
exchange and the broker evaluates to which endpoint it needs to route
the messages to based on queue-exchange bindings (see
http://hopper.squarespace.com/blog/2008/10/7/consumer-driven-messaging.html).

> We ensure that downstream links are not overburdened (a
> radar feed is about 6 mbs, some of our clients run 4800 bps.)

Producer flow control is now in the main Rabbit source tree, hence it
will be in the upcoming release.

If you are looking for fine grained egress balancing, you might search
this list for discussions about basic.qos.

> and we take
> care of permissions (some clients are not allowed to see certain data from
> certain sources.)

We're actually removing ACLs, because Rabbit was the only broker to
actually implement them and hence they were nuked from the spec :-(

Again, this is a sought after feature, which we'd like to put back
.... there are discussions on ACLs in the archives.


> I read Kirk Wylie's October thread about publishing with interest, as it
> resonates strongly in my world.

Kirk might embrace the discussion by actually answering my last post
on the subject ;-)

> I want the source of messages to have as
> little as possible to say about how or where I (the MHS receiving messages)
> will forward them.The source should simply put a label on it to tell me
> what it is.

And I would argue that all intents and purposes is the currently the
case - Kirk is just suggesting taking this thought to the next level -
I am questioning the doability of this - but he has come up something
yet other than "yes, of course, it's doable". See my (as yet still
unanswered) post from Oct 24.

> The channel it arrives on tells me where it is coming from,
> with the two pieces of information, the broker/exchange/MHS (I'm hoping all
> three are synonymous) will make routing decisions.

The is what currently happens.

> I find routing tables a lot easier to understand than capabilities and
> ACL's, and sufficient, if not elegant.  Has anyone looked at them as a
> security mechanism?

There is a post about this that Steve Jenson started on Nov 3. Also,
just search the list for ACL and capabilities, much has been said.

HTH,

Ben



From 0x6e6562 at gmail.com  Sat Nov  8 18:11:14 2008
From: 0x6e6562 at gmail.com (Ben Hood)
Date: Sat, 8 Nov 2008 18:11:14 +0000
Subject: [rabbitmq-discuss] Erlang client and properties
In-Reply-To: <6c2563b20811080951v3e263ee4xf6b439587b49369e@mail.gmail.com>
References: <6c2563b20811071431l2100e787y1db4eb9c64cf64bc@mail.gmail.com>
	<269388e30811071743if03074as11059604555a90c7@mail.gmail.com>
	<49153759.8020004@lshift.net>
	<269388e30811080337u3474b1a4sc052074924eb456f@mail.gmail.com>
	<6c2563b20811080809u20404dcbs478223d2a7e53349@mail.gmail.com>
	<269388e30811080945j48f2f9fdpdeaa5c643720780a@mail.gmail.com>
	<6c2563b20811080951v3e263ee4xf6b439587b49369e@mail.gmail.com>
Message-ID: <269388e30811081011p420486adoba73cc2c5cb45797@mail.gmail.com>

On Sat, Nov 8, 2008 at 5:51 PM, Edwin Fine
<rabbitmq-discuss_efine at usa.net> wrote:
> Now is that directed at me or the spec? ;-)

:-)



From matthias at lshift.net  Sat Nov  8 18:29:17 2008
From: matthias at lshift.net (Matthias Radestock)
Date: Sat, 08 Nov 2008 18:29:17 +0000
Subject: [rabbitmq-discuss] whether the weather is right.
In-Reply-To: <4442b4720811080736h7e2a5d81p41321f644e7ab454@mail.gmail.com>
References: <4442b4720811080736h7e2a5d81p41321f644e7ab454@mail.gmail.com>
Message-ID: <4915DA7D.2090409@lshift.net>

Peter Silva wrote:
> To me, unicast/direct, multi-cast/topic, broadcast/fanout data 
> distribution has nothing to do with how the data arrived at the 
> switch/broker/exchange.   Neither producer, nor consumer should have 
> anything to say about that.

Then who does? Some administrator? If so, just write a small AMQP client 
app that creates the exchanges, queues and bindings, and run that as the 
administrator. Producer then will just need to know the name of the 
exchange, and consumers the name of their queue.


Matthias.



From matthias at lshift.net  Sat Nov  8 18:34:18 2008
From: matthias at lshift.net (Matthias Radestock)
Date: Sat, 08 Nov 2008 18:34:18 +0000
Subject: [rabbitmq-discuss] Packaging
In-Reply-To: <4915D43D.3080005@wizards.de>
References: <269388e30811061023o552f6cf0l9a15cb1e613b31a5@mail.gmail.com>		<4915B32A.3060703@wizards.de>	<269388e30811080938j62d6bcfeh33f4916e6d963b07@mail.gmail.com>
	<4915D43D.3080005@wizards.de>
Message-ID: <4915DBAA.7090703@lshift.net>

Holger,

Holger Hoffst?tte wrote:
> The official repo for user-contributed ebuilds is the Sunrise overlay at
> http://overlays.gentoo.org/proj/sunrise and would be just as good.

It would be good to get RabbitMQ into that. Can you do that?


Matthias.



From 0x6e6562 at gmail.com  Sat Nov  8 18:41:38 2008
From: 0x6e6562 at gmail.com (Ben Hood)
Date: Sat, 8 Nov 2008 18:41:38 +0000
Subject: [rabbitmq-discuss] Exchanges, Routing, and AMQP
In-Reply-To: <8f10a9e00810250511p2f350327l3e15cc66614d2532@mail.gmail.com>
References: <8f10a9e00810200801k6c3040e3w568a9be9d062ff74@mail.gmail.com>
	<269388e30810201103q6529063djbe5e0641e7c6b047@mail.gmail.com>
	<8f10a9e00810210940x2991d29fidd942b75af333947@mail.gmail.com>
	<4901C714.7080103@lshift.net>
	<8f10a9e00810250511p2f350327l3e15cc66614d2532@mail.gmail.com>
Message-ID: <269388e30811081041i17102151qb4ec7760c6b81b3f@mail.gmail.com>

Kirk,

On Sat, Oct 25, 2008 at 12:11 PM, Kirk Wylie <kirk at kirkwylie.com> wrote:
>> Would your proposed model allow for routing decisions that are based on the
>> set of all bindings (or some subset thereof), rather than each individual
>> binding? Ben's example - an exchange that routes to the shorted queue -
>> requires the former.
>
> It would depend on the server-side implementation as to whether that
> was possible, since custom routing rules are outside the scope of the
> protocol itself.

Your riposte has been commented on:

http://hopper.squarespace.com/blog/2008/10/7/consumer-driven-messaging.html#comments

BTW Peter: Routing keys are in fact strings in AMQP :-)

Ben



From holger at wizards.de  Sat Nov  8 18:43:05 2008
From: holger at wizards.de (=?ISO-8859-1?Q?Holger_Hoffst=E4tte?=)
Date: Sat, 08 Nov 2008 19:43:05 +0100
Subject: [rabbitmq-discuss] Packaging
In-Reply-To: <4915DBAA.7090703@lshift.net>
References: <269388e30811061023o552f6cf0l9a15cb1e613b31a5@mail.gmail.com>		<4915B32A.3060703@wizards.de>	<269388e30811080938j62d6bcfeh33f4916e6d963b07@mail.gmail.com>
	<4915D43D.3080005@wizards.de> <4915DBAA.7090703@lshift.net>
Message-ID: <4915DDB9.5050206@wizards.de>

Matthias Radestock wrote:
> Holger,
> 
> Holger Hoffst?tte wrote:
>> The official repo for user-contributed ebuilds is the Sunrise overlay at
>> http://overlays.gentoo.org/proj/sunrise and would be just as good.
> 
> It would be good to get RabbitMQ into that. Can you do that?

Sure, that was the plan..as soon as I find some motivation. :{
Maybe for the upcoming 1.5.0 release.

cheers
Holger




From Peter.A.Silva at gmail.com  Sat Nov  8 19:29:20 2008
From: Peter.A.Silva at gmail.com (Peter Silva)
Date: Sat, 8 Nov 2008 14:29:20 -0500
Subject: [rabbitmq-discuss] Exchanges, Routing, and AMQP
In-Reply-To: <269388e30811081041i17102151qb4ec7760c6b81b3f@mail.gmail.com>
References: <8f10a9e00810200801k6c3040e3w568a9be9d062ff74@mail.gmail.com>
	<269388e30810201103q6529063djbe5e0641e7c6b047@mail.gmail.com>
	<8f10a9e00810210940x2991d29fidd942b75af333947@mail.gmail.com>
	<4901C714.7080103@lshift.net>
	<8f10a9e00810250511p2f350327l3e15cc66614d2532@mail.gmail.com>
	<269388e30811081041i17102151qb4ec7760c6b81b3f@mail.gmail.com>
Message-ID: <4442b4720811081129x7f4c108fj9a7e187eb95f5520@mail.gmail.com>

> BTW Peter: Routing keys are in fact strings in AMQP :-)

That's strange... maybe I'm just getting confused by
a client code... Here is an example from the demo in py-amqplib...

 ch.basic_publish(msg, EXCHANGE_NAME, routing_key=topic)

the 'routing_key' in this api, afaict, is one of three keywords: topic,
fanout, direct.   what is called exchange_type in the AMQP spec.

If the key is a string, and the exchange_type is opaque to the producers,
then that's cool.  So for my application.  An admin creates the exchange,
the producers post to it using AHL's or file names as routing keys,
oblivious to the routing method in use.
That's OK?

The next thing is that I need to be able to define routing to output queues
myself, (how the routing key is interpreted.) before the clients apply their
routing info, so I can say, no... my client talibanitravel.com has no access
to the weather ob from Kandahar airport, even if they say they want it.
They are perhaps allowed the ob from Peshawar, Moscow and Montreal.   So
data posted on the same exchange may or may not be allowed to be seen by
some clients.   I do that today with routing tables, others would use acl's
or capabilities.   per exchange permissions of some sort would work... do
they exist?

I guess that is a function outside of AMQP (not a protocol thing, but rather
a broker function?)  I get the impression permissions/ACL's
were something applied at the queue/exchange level.  Was there
something granular enough to apply to individual messages sent to an
exchange blocking posting to queues based on routing_key?





On Sat, Nov 8, 2008 at 1:41 PM, Ben Hood <0x6e6562 at gmail.com> wrote:

> Kirk,
>
> On Sat, Oct 25, 2008 at 12:11 PM, Kirk Wylie <kirk at kirkwylie.com> wrote:
> >> Would your proposed model allow for routing decisions that are based on
> the
> >> set of all bindings (or some subset thereof), rather than each
> individual
> >> binding? Ben's example - an exchange that routes to the shorted queue -
> >> requires the former.
> >
> > It would depend on the server-side implementation as to whether that
> > was possible, since custom routing rules are outside the scope of the
> > protocol itself.
>
> Your riposte has been commented on:
>
>
> http://hopper.squarespace.com/blog/2008/10/7/consumer-driven-messaging.html#comments
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20081108/0af160af/attachment.htm 

From 0x6e6562 at gmail.com  Sat Nov  8 20:15:15 2008
From: 0x6e6562 at gmail.com (Ben Hood)
Date: Sat, 8 Nov 2008 20:15:15 +0000
Subject: [rabbitmq-discuss] Exchanges, Routing, and AMQP
In-Reply-To: <4442b4720811081129x7f4c108fj9a7e187eb95f5520@mail.gmail.com>
References: <8f10a9e00810200801k6c3040e3w568a9be9d062ff74@mail.gmail.com>
	<269388e30810201103q6529063djbe5e0641e7c6b047@mail.gmail.com>
	<8f10a9e00810210940x2991d29fidd942b75af333947@mail.gmail.com>
	<4901C714.7080103@lshift.net>
	<8f10a9e00810250511p2f350327l3e15cc66614d2532@mail.gmail.com>
	<269388e30811081041i17102151qb4ec7760c6b81b3f@mail.gmail.com>
	<4442b4720811081129x7f4c108fj9a7e187eb95f5520@mail.gmail.com>
Message-ID: <269388e30811081215mb421a1bhb192dbfacd71fc82@mail.gmail.com>

Peter,

On Sat, Nov 8, 2008 at 7:29 PM, Peter Silva <Peter.A.Silva at gmail.com> wrote:
> That's strange... maybe I'm just getting confused by
> a client code... Here is an example from the demo in py-amqplib...
>
>  ch.basic_publish(msg, EXCHANGE_NAME, routing_key=topic)
>
> the 'routing_key' in this api, afaict, is one of three keywords: topic,
> fanout, direct.   what is called exchange_type in the AMQP spec.

Are you referring to amqp_clock.py?

If so, I think that the topic is a the name of a string variable:

TOPIC_PATTERN = '%Y.%m.%d.%w.%H.%M' # Python datetime.strftime() pattern
.....
topic = now.strftime(TOPIC_PATTERN)
ch.basic_publish(msg, EXCHANGE_NAME, routing_key=topic)

> If the key is a string, and the exchange_type is opaque to the producers,
> then that's cool.  So for my application.  An admin creates the exchange,
> the producers post to it using AHL's or file names as routing keys,
> oblivious to the routing method in use.
> That's OK?

Yes, that will work.

> The next thing is that I need to be able to define routing to output queues
> myself, (how the routing key is interpreted.) before the clients apply their
> routing info, so I can say, no... my client talibanitravel.com has no access
> to the weather ob from Kandahar airport, even if they say they want it.
> They are perhaps allowed the ob from Peshawar, Moscow and Montreal.   So
> data posted on the same exchange may or may not be allowed to be seen by
> some clients.   I do that today with routing tables, others would use acl's
> or capabilities.   per exchange permissions of some sort would work... do
> they exist?

No, there is no fine grained access restriction (as discussed in other
threads on this list).

> I guess that is a function outside of AMQP (not a protocol thing, but rather
> a broker function?)

Could be - again, a mechanism orthogonal to the protocol has been discussed.

>  I get the impression permissions/ACL's
> were something applied at the queue/exchange level.  Was there
> something granular enough to apply to individual messages sent to an
> exchange blocking posting to queues based on routing_key?

AFAIK something as fine grained as this has not yet been investigated in detail.

Ben



From 0x6e6562 at gmail.com  Sat Nov  8 20:24:36 2008
From: 0x6e6562 at gmail.com (Ben Hood)
Date: Sat, 8 Nov 2008 20:24:36 +0000
Subject: [rabbitmq-discuss] whether the weather is right.
In-Reply-To: <4442b4720811081054w38ecadfdg6228e731eb28e1fe@mail.gmail.com>
References: <4442b4720811080736h7e2a5d81p41321f644e7ab454@mail.gmail.com>
	<269388e30811081010y736aa5dcl25a1261aa259c56f@mail.gmail.com>
	<4442b4720811081054w38ecadfdg6228e731eb28e1fe@mail.gmail.com>
Message-ID: <269388e30811081224s1fb7fb9bs390457371c04850c@mail.gmail.com>

Peter,

On Sat, Nov 8, 2008 at 6:54 PM, Peter Silva <Peter.A.Silva at gmail.com> wrote:
> I don't quite grok where the AHL or file name fits into the AMQP model ...

Have you looked at the Queue.Bind command that creates routes between
an exchange and a queue?

Ben



From orion.henry at gmail.com  Sat Nov  8 23:17:52 2008
From: orion.henry at gmail.com (Orion Henry)
Date: Sat, 8 Nov 2008 18:17:52 -0500
Subject: [rabbitmq-discuss] rabbitmq erlang client
In-Reply-To: <269388e30811071720s5d132cf6x78d759675b42e03@mail.gmail.com>
References: <415a0600811061319y46677e12lb241c078d057ef22@mail.gmail.com>
	<269388e30811061513j7a2fcbadrcfc99c20c78e06a5@mail.gmail.com>
	<415a0600811062309n7cec7d6bi405e2d784dc561f3@mail.gmail.com>
	<269388e30811071720s5d132cf6x78d759675b42e03@mail.gmail.com>
Message-ID: <415a0600811081517k5e9395derec6ee3c741d487ad@mail.gmail.com>

Ben,

Thanks for the update.  Glad you guys are making the erlang client a
first class interface.  Its not going to be easy to convince ops to
let us run the edge version of the server in production.  Is there
some way I can compile the client against the edge headers but keep
the official release in production, since I'm using the network/wire
protocol?

If not I'm going to stick to old version of the client until rabbitmq
1.5 and client 1.0 are released.  So far its been working great. =)

Orion

On Fri, Nov 7, 2008 at 8:20 PM, Ben Hood <0x6e6562 at gmail.com> wrote:
> Orion | Henry,
>
> On Fri, Nov 7, 2008 at 7:09 AM, Orion Henry <orion.henry at gmail.com> wrote:
>
>> I decided to start over and wrote a shell script that did the whole
>> install and test....  here it is.
>>
>> ----------------------------------------
>> #!/bin/sh
>>
>> tar xzvf rabbitmq-server-1.4.0.tar.gz
>> cd rabbitmq-server-1.4.0 ; make ; cd ..
>> sudo mv rabbitmq-server-1.4.0 /opt/local/lib/erlang/lib/rabbitmq_server-1.4.0
>> LOG_BASE=/tmp SKIP_HEART=true SKIP_LOG_ARGS=true
>> MNESIA_DIR=/tmp/rabbitmq_rabbit_test_direct_mnesia
>> RABBIT_ARGS="-detached -pa ./ebin" NODENAME=rabbit_test_direct
>> /opt/local/lib/erlang/lib/rabbitmq_server-1.4.0/scripts/rabbitmq-server
>>
>> tar xzvf rabbitmq-erlang-client-3a9ce636e283.tar.gz
>> cd rabbitmq-erlang-client-3a9ce636e283; make; cd ..
>> sudo mv rabbitmq-erlang-client-3a9ce636e283
>> /opt/local/lib/erlang/lib/rabbitmq_client-3a9ce636e283
>>
>> erl -noshell -eval 'network_client_test:test(),halt().'
>> ----------------------------------------
>>
>> I've attached its output to this email (its very long as a text file).
>>  It contains the 6 failed tests from network_client_test:test/0
>
> I've been able to reproduce your error: the problem is that the client
> version you are using depends on a version of the broker later than
> 1.4.0. To reproduce this, I updated the broker back to the 1.4.0
> release, rebuilt the client (rev 3a9ce636e283) and got exactly the
> same error as you were getting.
>
> So the solution is simple - upgrade to the latest version of the
> server from the repo.
>
> The reason why this is because the client reuses modules from the
> broker in order to create a mirror image of a server side channel.
>
> So the client is more intimately tied into the broker than the other
> language clients are, which use the wire protocol and share no common
> code base.
>
> Until recently, the Erlang client has had an experimental status, but
> due to increased interest, we have decided to promote this to a
> properly support client. But there a number of issues that need to be
> addressed before this goes 1.0.
>
> In terms of ETA, this will only happen after the next release of the
> server. Until then, you will just have to use the latest version from
> the source tree.
>
> HTH,
>
> Ben
>



From Peter.A.Silva at gmail.com  Sat Nov  8 23:24:01 2008
From: Peter.A.Silva at gmail.com (Peter Silva)
Date: Sat, 8 Nov 2008 18:24:01 -0500
Subject: [rabbitmq-discuss] Exchanges, Routing, and AMQP
In-Reply-To: <269388e30811081215mb421a1bhb192dbfacd71fc82@mail.gmail.com>
References: <8f10a9e00810200801k6c3040e3w568a9be9d062ff74@mail.gmail.com>
	<269388e30810201103q6529063djbe5e0641e7c6b047@mail.gmail.com>
	<8f10a9e00810210940x2991d29fidd942b75af333947@mail.gmail.com>
	<4901C714.7080103@lshift.net>
	<8f10a9e00810250511p2f350327l3e15cc66614d2532@mail.gmail.com>
	<269388e30811081041i17102151qb4ec7760c6b81b3f@mail.gmail.com>
	<4442b4720811081129x7f4c108fj9a7e187eb95f5520@mail.gmail.com>
	<269388e30811081215mb421a1bhb192dbfacd71fc82@mail.gmail.com>
Message-ID: <4442b4720811081524p80eee6eva1ac540cb5c6b111@mail.gmail.com>

On Sat, Nov 8, 2008 at 3:15 PM, Ben Hood <0x6e6562 at gmail.com> wrote:

> Peter,
>
> On Sat, Nov 8, 2008 at 7:29 PM, Peter Silva <Peter.A.Silva at gmail.com>
> wrote:
> > That's strange... maybe I'm just getting confused by
> > a client code... Here is an example from the demo in py-amqplib...
> >
> >  ch.basic_publish(msg, EXCHANGE_NAME, routing_key=topic)
> >
> > the 'routing_key' in this api, afaict, is one of three keywords: topic,
> > fanout, direct.   what is called exchange_type in the AMQP spec.
>
> Are you referring to amqp_clock.py?
>
> If so, I think that the topic is a the name of a string variable:
>
> TOPIC_PATTERN = '%Y.%m.%d.%w.%H.%M' # Python datetime.strftime() pattern
> .....
> topic = now.strftime(TOPIC_PATTERN)
> ch.basic_publish(msg, EXCHANGE_NAME, routing_key=topic)
>

> > If the key is a string, and the exchange_type is opaque to the producers,
> > then that's cool.  So for my application.  An admin creates the exchange,
> > the producers post to it using AHL's or file names as routing keys,
> > oblivious to the routing method in use.
> > That's OK?
>
> Yes, that will work.
>

OK, I was just confused then.  cool!



>
> > The next thing is that I need to be able to define routing to output
> queues
> > myself, (how the routing key is interpreted.) before the clients apply
> their
> > routing info, so I can say, no... my client talibanitravel.com has no
> access
> > to the weather ob from Kandahar airport, even if they say they want it.
> > They are perhaps allowed the ob from Peshawar, Moscow and Montreal.   So
> > data posted on the same exchange may or may not be allowed to be seen by
> > some clients.   I do that today with routing tables, others would use
> acl's
> > or capabilities.   per exchange permissions of some sort would work... do
> > they exist?
>
> No, there is no fine grained access restriction (as discussed in other
> threads on this list).


OK... If you want to apply rules, then you have one
exchange for reception, an application will read, and then send subsets to
other exchanges where all the clients have the same access permissions.

Is that sounding right?




>
>
> > I guess that is a function outside of AMQP (not a protocol thing, but
> rather
> > a broker function?)
>
> Could be - again, a mechanism orthogonal to the protocol has been
> discussed.
>
> >  I get the impression permissions/ACL's
> > were something applied at the queue/exchange level.  Was there
> > something granular enough to apply to individual messages sent to an
> > exchange blocking posting to queues based on routing_key?
>
> AFAIK something as fine grained as this has not yet been investigated in
> detail.
>
> Ben
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20081108/ddcc23ad/attachment.htm 

From 0x6e6562 at gmail.com  Sun Nov  9 00:16:31 2008
From: 0x6e6562 at gmail.com (Ben Hood)
Date: Sun, 9 Nov 2008 00:16:31 +0000
Subject: [rabbitmq-discuss] rabbitmq erlang client
In-Reply-To: <415a0600811081517k5e9395derec6ee3c741d487ad@mail.gmail.com>
References: <415a0600811061319y46677e12lb241c078d057ef22@mail.gmail.com>
	<269388e30811061513j7a2fcbadrcfc99c20c78e06a5@mail.gmail.com>
	<415a0600811062309n7cec7d6bi405e2d784dc561f3@mail.gmail.com>
	<269388e30811071720s5d132cf6x78d759675b42e03@mail.gmail.com>
	<415a0600811081517k5e9395derec6ee3c741d487ad@mail.gmail.com>
Message-ID: <269388e30811081616n4b525fe4h7643797f215aa920@mail.gmail.com>

Orion,

On Sat, Nov 8, 2008 at 11:17 PM, Orion Henry <orion.henry at gmail.com> wrote:
> Thanks for the update.  Glad you guys are making the erlang client a
> first class interface.  Its not going to be easy to convince ops to
> let us run the edge version of the server in production.  Is there
> some way I can compile the client against the edge headers but keep
> the official release in production, since I'm using the network/wire
> protocol?
> If not I'm going to stick to old version of the client until rabbitmq
> 1.5 and client 1.0 are released.  So far its been working great. =)

I'm not sure I follow - maybe I'm being thick, but how do the *edge*
headers make a difference to the server version that has been
deployed?

If you are talking about the fact you need to run a non-released
version of the server to get the right version of the common libraries
for the client to work, and you are using the wire protocol, then all
you need to do is to have a different load path for the client and the
server. There are few easy ways to do this:

1) Run the client on a different machine :-)
2) Run the client and server as different OS users, and make sure the
client has the *edge* version of the common libraries in it's load
path;
3) With the same user, do the same as 2, but write your scripts to set
the load path appropriately.

This does however highlight some things we need to think about when we
release the client - Edwin started a thread about splitting out the
common libraries into a separate package (in fact, he commented on
this again today). I think one of the problems is the way that we
target Debian to a certain extent, but I'm not quite sure how it is
supposed to look yet.

HTH,

Ben



From 0x6e6562 at gmail.com  Sun Nov  9 00:19:59 2008
From: 0x6e6562 at gmail.com (Ben Hood)
Date: Sun, 9 Nov 2008 00:19:59 +0000
Subject: [rabbitmq-discuss] Exchanges, Routing, and AMQP
In-Reply-To: <4442b4720811081524p80eee6eva1ac540cb5c6b111@mail.gmail.com>
References: <8f10a9e00810200801k6c3040e3w568a9be9d062ff74@mail.gmail.com>
	<269388e30810201103q6529063djbe5e0641e7c6b047@mail.gmail.com>
	<8f10a9e00810210940x2991d29fidd942b75af333947@mail.gmail.com>
	<4901C714.7080103@lshift.net>
	<8f10a9e00810250511p2f350327l3e15cc66614d2532@mail.gmail.com>
	<269388e30811081041i17102151qb4ec7760c6b81b3f@mail.gmail.com>
	<4442b4720811081129x7f4c108fj9a7e187eb95f5520@mail.gmail.com>
	<269388e30811081215mb421a1bhb192dbfacd71fc82@mail.gmail.com>
	<4442b4720811081524p80eee6eva1ac540cb5c6b111@mail.gmail.com>
Message-ID: <269388e30811081619v4b4e1348la13481528bcf70b6@mail.gmail.com>

Peter,

On Sat, Nov 8, 2008 at 11:24 PM, Peter Silva <Peter.A.Silva at gmail.com> wrote:
> OK... If you want to apply rules, then you have one
> exchange for reception, an application will read, and then send subsets to
> other exchanges where all the clients have the same access permissions.
>
> Is that sounding right?

Yes, you could do something like that - it would be nicer to have the
broker implement ACLs or capabilities though :-(

Ben



From vinorasmus at gmail.com  Sun Nov  9 00:38:23 2008
From: vinorasmus at gmail.com (Gavin Bong)
Date: Sun, 9 Nov 2008 08:38:23 +0800
Subject: [rabbitmq-discuss] (java) Is Connection pooling required ?
In-Reply-To: <269388e30811080548i18a9c1b8tbcfda2fcaff29b09@mail.gmail.com>
References: <33784a0c0811080021t690c9fc0sf84d6d4c960e50c7@mail.gmail.com>
	<269388e30811080548i18a9c1b8tbcfda2fcaff29b09@mail.gmail.com>
Message-ID: <33784a0c0811081638m65c011e9nd30b09a0f1e2a4ac@mail.gmail.com>

Ben, Thanks for the pointer.

2008/11/8 Ben Hood <0x6e6562 at gmail.com>:
> For a general treatise, you could read this article:
> http://hopper.squarespace.com/blog/2008/10/6/multithreading-amqp-clients.html
>
> As the article points out you should be sharing the connection and
> binding a channel to each thread.

Regards,

Gavin



From 0x6e6562 at gmail.com  Sun Nov  9 12:34:32 2008
From: 0x6e6562 at gmail.com (Ben Hood)
Date: Sun, 9 Nov 2008 12:34:32 +0000
Subject: [rabbitmq-discuss] Scalable Routing
In-Reply-To: <491402F5.1090405@lshift.net>
References: <269388e30811061757k651111b3seb02b62fb1f15e80@mail.gmail.com>
	<491402F5.1090405@lshift.net>
Message-ID: <269388e30811090434m78627a6ftdb4db6bdb628d466@mail.gmail.com>

Martin asked:
> There are units missing in your results. Is it microseconds?

On Fri, Nov 7, 2008 at 2:03 AM, Terry Jones <terry at jon.es> wrote:
> "a linear cost curve will follow a flat line when plotted on a logarithmic scale."

On Fri, Nov 7, 2008 at 8:57 AM, Matthias Radestock <matthias at lshift.net> wrote:
> "each iteration of the benchmark is limited by the average exponent of each
> axis, i.e. (x+y) / 2."
>
> Actually, it's the max of the two. That way you always reach the max
> exponent of both axes.

Thanks to Terry, Martin and Matthias for pointing out bugs in the
article. I've updated it now.

Ben



From 0x6e6562 at gmail.com  Sun Nov  9 16:13:15 2008
From: 0x6e6562 at gmail.com (Ben Hood)
Date: Sun, 9 Nov 2008 16:13:15 +0000
Subject: [rabbitmq-discuss] Flow Control
Message-ID: <269388e30811090813h2df62980ib722b4816c60422d@mail.gmail.com>

Dear List,

A few days ago I posted to this list to talk about scalable routing
being one of the major pieces of work for the upcoming 1.5.0 release.

Apart from being just just FYI about the release, it gives any body
interested a chance to test it before we make the release.

The same applies to the second major feature of this release -
producer flow control.

This is not only relevant for people who are maintaining client
libraries - like me, who still has to handle it in the Erlang client
:-( , but also for people who have applications that might send more
messages than Rabbit can buffer in memory.

The client side handling has been implemented in the Rabbit Java client.

For those who are interested in the details, I've written this
article: http://hopper.squarespace.com/blog/2008/11/9/flow-control-in-rabbitmq.html

HTH,

Ben



From bp at barryp.org  Sun Nov  9 17:55:26 2008
From: bp at barryp.org (Barry Pederson)
Date: Sun, 09 Nov 2008 11:55:26 -0600
Subject: [rabbitmq-discuss] Exchanges, Routing, and AMQP
In-Reply-To: <269388e30811081215mb421a1bhb192dbfacd71fc82@mail.gmail.com>
References: <8f10a9e00810200801k6c3040e3w568a9be9d062ff74@mail.gmail.com>	<269388e30810201103q6529063djbe5e0641e7c6b047@mail.gmail.com>	<8f10a9e00810210940x2991d29fidd942b75af333947@mail.gmail.com>	<4901C714.7080103@lshift.net>	<8f10a9e00810250511p2f350327l3e15cc66614d2532@mail.gmail.com>	<269388e30811081041i17102151qb4ec7760c6b81b3f@mail.gmail.com>	<4442b4720811081129x7f4c108fj9a7e187eb95f5520@mail.gmail.com>
	<269388e30811081215mb421a1bhb192dbfacd71fc82@mail.gmail.com>
Message-ID: <4917240E.1090202@barryp.org>

Ben Hood wrote:
> Peter,
> 
> On Sat, Nov 8, 2008 at 7:29 PM, Peter Silva <Peter.A.Silva at gmail.com> wrote:
>> That's strange... maybe I'm just getting confused by
>> a client code... Here is an example from the demo in py-amqplib...
>>
>>  ch.basic_publish(msg, EXCHANGE_NAME, routing_key=topic)
>>
>> the 'routing_key' in this api, afaict, is one of three keywords: topic,
>> fanout, direct.   what is called exchange_type in the AMQP spec.
> 
> Are you referring to amqp_clock.py?
> 
> If so, I think that the topic is a the name of a string variable:
> 
> TOPIC_PATTERN = '%Y.%m.%d.%w.%H.%M' # Python datetime.strftime() pattern
> .....
> topic = now.strftime(TOPIC_PATTERN)
> ch.basic_publish(msg, EXCHANGE_NAME, routing_key=topic)

Peter:

I can see where that could be a bit confusing to have a variable with 
the same name as an exchange type.

I've updated the example in Mercurial to use a different variable name 
so it now says:

   ...
   msg_topic = now.strftime(TOPIC_PATTERN)
   ch.basic_publish(msg, EXCHANGE_NAME, routing_key=msg_topic)

	Barry



From rabbitmq-discuss_efine at usa.net  Sun Nov  9 18:58:50 2008
From: rabbitmq-discuss_efine at usa.net (Edwin Fine)
Date: Sun, 9 Nov 2008 13:58:50 -0500
Subject: [rabbitmq-discuss] Flow Control
In-Reply-To: <269388e30811090813h2df62980ib722b4816c60422d@mail.gmail.com>
References: <269388e30811090813h2df62980ib722b4816c60422d@mail.gmail.com>
Message-ID: <6c2563b20811091058r1ac35570n1ea716ee6995b344@mail.gmail.com>

Ben,

This is greatly welcome news! I look forward to the implementation of this
in the Erlang client, so that I can pause my producers when I get the
channel.flow command from the broker and avoid any possibility of exhausting
Rabbit's memory. Any ETA?

Regards,
Ed

On Sun, Nov 9, 2008 at 11:13 AM, Ben Hood <0x6e6562 at gmail.com> wrote:

> Dear List,
>
> A few days ago I posted to this list to talk about scalable routing
> being one of the major pieces of work for the upcoming 1.5.0 release.
>
> Apart from being just just FYI about the release, it gives any body
> interested a chance to test it before we make the release.
>
> The same applies to the second major feature of this release -
> producer flow control.
>
> This is not only relevant for people who are maintaining client
> libraries - like me, who still has to handle it in the Erlang client
> :-( , but also for people who have applications that might send more
> messages than Rabbit can buffer in memory.
>
> The client side handling has been implemented in the Rabbit Java client.
>
> For those who are interested in the details, I've written this
> article:
> http://hopper.squarespace.com/blog/2008/11/9/flow-control-in-rabbitmq.html
>
> HTH,
>
> Ben
>
> _______________________________________________
> rabbitmq-discuss mailing list
> rabbitmq-discuss at lists.rabbitmq.com
> http://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20081109/68adc8cf/attachment.htm 

From 0x6e6562 at gmail.com  Sun Nov  9 22:28:10 2008
From: 0x6e6562 at gmail.com (Ben Hood)
Date: Sun, 9 Nov 2008 22:28:10 +0000
Subject: [rabbitmq-discuss] Flow Control
In-Reply-To: <6c2563b20811091058r1ac35570n1ea716ee6995b344@mail.gmail.com>
References: <269388e30811090813h2df62980ib722b4816c60422d@mail.gmail.com>
	<6c2563b20811091058r1ac35570n1ea716ee6995b344@mail.gmail.com>
Message-ID: <269388e30811091428t8eabd21l10e61a3bd451037b@mail.gmail.com>

Edwin,

On Sun, Nov 9, 2008 at 6:58 PM, Edwin Fine
<rabbitmq-discuss_efine at usa.net> wrote:
> This is greatly welcome news! I look forward to the implementation of this
> in the Erlang client, so that I can pause my producers when I get the
> channel.flow command from the broker and avoid any possibility of exhausting
> Rabbit's memory. Any ETA?

Not really. But I have knocked up a first version that works - 19560
refers. The only I am not sure about yet is the fact that publish
function uses gen_server:cast/2 under the covers, making it difficult
to on this invocation. My first thought was to keep the cast/2
invocation as it is and just send out {pause,resume} atoms to a
registered flow control handler, but this means more code on the
client side. I suppose you could add a convenience function to
encapsulate the blocking receive when you're in the pause state, but
there may be a simpler way to do this. Have a look at the code
yourself and maybe you have an idea.

HTH,

Ben



From rabbitmq-discuss_efine at usa.net  Sun Nov  9 23:00:16 2008
From: rabbitmq-discuss_efine at usa.net (Edwin Fine)
Date: Sun, 9 Nov 2008 18:00:16 -0500
Subject: [rabbitmq-discuss] Flow Control
In-Reply-To: <269388e30811091428t8eabd21l10e61a3bd451037b@mail.gmail.com>
References: <269388e30811090813h2df62980ib722b4816c60422d@mail.gmail.com>
	<6c2563b20811091058r1ac35570n1ea716ee6995b344@mail.gmail.com>
	<269388e30811091428t8eabd21l10e61a3bd451037b@mail.gmail.com>
Message-ID: <6c2563b20811091500o1c242b54nbd5e11d46811f73a@mail.gmail.com>

Ben,

Truly, I always felt uncomfortable with using a cast on publish because you
can't tell directly if there was a problem. I'd prefer a call.

Maybe this is a hare-brained idea, but can't the broker just send a
channel.flow to the producer; the Erlang client just forwards it on to the
producer in precisely the same way as it sends a basic.receive to a
consumer? The publishing application would just need to write a handle_info
for channel.flow just like a consumer does for basic.receive, or have I
missed the point?

I realize that this means that publishing applications can choose to ignore
channel.flow commands, but that would be shooting themselves in the foot. In
the 0.8 spec it says "The peer that requests a Channel.Flow method MAY
disconnect and/or ban a peer that does not respect the request.", so the
server could just drop the channel if the publisher ignores it.

Now I am not sure what is meant by a "peer", if that's the client itself or
the application that is using the client. Either way, I believe that the
Erlang client simply forwarding the channel.flow command to the application
and requiring it to respond with the ok (and stop sending) is within the
spirit of the spec, and should (?) be simple to do in the client.

Can you see any issues with doing it like this?

Regards,
Ed

On Sun, Nov 9, 2008 at 5:28 PM, Ben Hood <0x6e6562 at gmail.com> wrote:

> Edwin,
>
> On Sun, Nov 9, 2008 at 6:58 PM, Edwin Fine
> <rabbitmq-discuss_efine at usa.net> wrote:
> > This is greatly welcome news! I look forward to the implementation of
> this
> > in the Erlang client, so that I can pause my producers when I get the
> > channel.flow command from the broker and avoid any possibility of
> exhausting
> > Rabbit's memory. Any ETA?
>
> Not really. But I have knocked up a first version that works - 19560
> refers. The only I am not sure about yet is the fact that publish
> function uses gen_server:cast/2 under the covers, making it difficult
> to on this invocation. My first thought was to keep the cast/2
> invocation as it is and just send out {pause,resume} atoms to a
> registered flow control handler, but this means more code on the
> client side. I suppose you could add a convenience function to
> encapsulate the blocking receive when you're in the pause state, but
> there may be a simpler way to do this. Have a look at the code
> yourself and maybe you have an idea.
>
> HTH,
>
> Ben
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20081109/062eb915/attachment.htm 

From preston at synergy-solutions.biz  Mon Nov 10 02:46:18 2008
From: preston at synergy-solutions.biz (Preston Marshall)
Date: Sun, 9 Nov 2008 20:46:18 -0600
Subject: [rabbitmq-discuss] Pid Files for Monit Tracking?
Message-ID: <11D84367-6571-40B9-84C5-50E7A9AEE5C0@synergy-solutions.biz>

Does anyone know how to get Rabbit to put its pid files somewhere so i  
can track it with monit?  Even better, a monit example?  FYI I am  
using the FreeBSD port of rabbit, net/rabbitmq, which is at version  
1.4.0.

Thanks,
Preston Marshall
-------------- next part --------------
A non-text attachment was scrubbed...
Name: smime.p7s
Type: application/pkcs7-signature
Size: 2441 bytes
Desc: not available
Url : http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20081109/7a820537/attachment.bin 

From holger at wizards.de  Mon Nov 10 02:57:22 2008
From: holger at wizards.de (=?ISO-8859-1?Q?Holger_Hoffst=E4tte?=)
Date: Mon, 10 Nov 2008 03:57:22 +0100
Subject: [rabbitmq-discuss] Pid Files for Monit Tracking?
In-Reply-To: <11D84367-6571-40B9-84C5-50E7A9AEE5C0@synergy-solutions.biz>
References: <11D84367-6571-40B9-84C5-50E7A9AEE5C0@synergy-solutions.biz>
Message-ID: <4917A312.2020701@wizards.de>

Preston Marshall wrote:
> Does anyone know how to get Rabbit to put its pid files somewhere so i
> can track it with monit?  Even better, a monit example?  FYI I am using
> the FreeBSD port of rabbit, net/rabbitmq, which is at version 1.4.0.

Thread:
http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/2008-April/thread.html#1058

-h



From holger at wizards.de  Mon Nov 10 03:24:59 2008
From: holger at wizards.de (=?ISO-8859-1?Q?Holger_Hoffst=E4tte?=)
Date: Mon, 10 Nov 2008 04:24:59 +0100
Subject: [rabbitmq-discuss] Pid Files for Monit Tracking?
In-Reply-To: <3044CFA0-E536-4650-B993-C6B46DB97962@synergy-solutions.biz>
References: <11D84367-6571-40B9-84C5-50E7A9AEE5C0@synergy-solutions.biz>
	<4917A312.2020701@wizards.de>
	<3044CFA0-E536-4650-B993-C6B46DB97962@synergy-solutions.biz>
Message-ID: <4917A98B.7030408@wizards.de>

Preston Marshall wrote:
> The problem is that there isnt anything in /var/lib/rabbitmq/pids, as
> the sed script looks for.

meh..you're right, FreeBSD is probably using the generic startup script
and it doesn't save the pids. my bad.
Maybe you can add an "echo $1" to the script after the start of the VM.

-h



From alex.arnon at gmail.com  Mon Nov 10 13:36:25 2008
From: alex.arnon at gmail.com (Alex Arnon)
Date: Mon, 10 Nov 2008 15:36:25 +0200
Subject: [rabbitmq-discuss] Support for distributed transactions (dtx).
Message-ID: <944da41d0811100536v678ec3bybb2ccd8f931fa349@mail.gmail.com>

Hi Guys,

Can you outline the status of support for transactions in RabbitMQ,
specifically distributed (XA) transactions?

Cheers,
Alex.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20081110/4cc1e09e/attachment.htm 

From alexis.richardson at cohesiveft.com  Mon Nov 10 13:43:58 2008
From: alexis.richardson at cohesiveft.com (Alexis Richardson)
Date: Mon, 10 Nov 2008 13:43:58 +0000
Subject: [rabbitmq-discuss] Support for distributed transactions (dtx).
In-Reply-To: <944da41d0811100536v678ec3bybb2ccd8f931fa349@mail.gmail.com>
References: <944da41d0811100536v678ec3bybb2ccd8f931fa349@mail.gmail.com>
Message-ID: <167204d20811100543p1296de73gcb235dac699054df@mail.gmail.com>

Alex

RabbitMQ supports the TX model as described in AMQP 0-8.  If you look
in the list archives for 'TX' then you will see background on this.
In effect TX lets clients state visibility and ack boundaries around
message groups.

AMQP 0-10 adds DTX support and XA participation.  This is not yet
supported in RabbitMQ.  Our plan is to track the evolution of the 1.0
spec rather than AMQP 0-10.

Best wishes

alexis


On Mon, Nov 10, 2008 at 1:36 PM, Alex Arnon <alex.arnon at gmail.com> wrote:
> Hi Guys,
>
> Can you outline the status of support for transactions in RabbitMQ,
> specifically distributed (XA) transactions?
>
> Cheers,
> Alex.
>
>
> _______________________________________________
> rabbitmq-discuss mailing list
> rabbitmq-discuss at lists.rabbitmq.com
> http://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss
>
>



From alexis.richardson at cohesiveft.com  Mon Nov 10 14:02:28 2008
From: alexis.richardson at cohesiveft.com (Alexis Richardson)
Date: Mon, 10 Nov 2008 14:02:28 +0000
Subject: [rabbitmq-discuss] Workling - a Rails workrunner using RabbitMQ
Message-ID: <167204d20811100602j589e7bcdn968cbdd11c42f0e0@mail.gmail.com>

Hi guys,

Rany Keddo from play/type has released Workling which integrates with
RabbitMQ to deliver a workrunner.

http://playtype.net/past/2008/11/7/workling_0_4_0_is_out_with_rabbitmq_ampq_support/

Rany says "rails users can now easily use rabbitmq with rails to push
their work into the background".

Thanks Rany!

alexis



From vinorasmus at gmail.com  Mon Nov 10 14:06:54 2008
From: vinorasmus at gmail.com (Gavin Bong)
Date: Mon, 10 Nov 2008 22:06:54 +0800
Subject: [rabbitmq-discuss] Support for distributed transactions (dtx).
In-Reply-To: <167204d20811100543p1296de73gcb235dac699054df@mail.gmail.com>
References: <944da41d0811100536v678ec3bybb2ccd8f931fa349@mail.gmail.com>
	<167204d20811100543p1296de73gcb235dac699054df@mail.gmail.com>
Message-ID: <33784a0c0811100606u7d5b1e3ap6a7349d6e2fa8c33@mail.gmail.com>

Alexis,

Pardon me for hijacking this thread, but I have 2 transaction related questions.

1) If I am just sending one message per client invocation, does it
matter whether I use transactions ?
e.g. the server receives a request to create an account, I add that
request to a Q.
It seems to me that transactions are only useful if I want a group of
messages to appear (perhaps in an ordered fashion) in the queue. I'm
speaking from a one-phase commit viewpoint.

2) In one of the overload method signatures for Channel.basicPublish,
2 parameters "immediate" and "mandatory" confuse me. Are they in
anyway related to transactions ? Are they hints to control the
visibility of the message in the queue vis ? vis database isolation
levels. ?

Thanks a lot.

Regards,

Gavin


2008/11/10 Alexis Richardson <alexis.richardson at cohesiveft.com>:
> Alex
>
> RabbitMQ supports the TX model as described in AMQP 0-8.  If you look
> in the list archives for 'TX' then you will see background on this.
> In effect TX lets clients state visibility and ack boundaries around
> message groups.
>



From alexis.richardson at cohesiveft.com  Mon Nov 10 14:07:01 2008
From: alexis.richardson at cohesiveft.com (Alexis Richardson)
Date: Mon, 10 Nov 2008 14:07:01 +0000
Subject: [rabbitmq-discuss] Workling - a Rails workrunner using RabbitMQ
In-Reply-To: <860776F70ED22948A735AA54EC782E480DCDE6610C@exchange.intellect-security.local>
References: <167204d20811100602j589e7bcdn968cbdd11c42f0e0@mail.gmail.com>
	<860776F70ED22948A735AA54EC782E480DCDE6610C@exchange.intellect-security.local>
Message-ID: <167204d20811100607n54d324e0xf33b566dddae9c51@mail.gmail.com>

Carl

Not sure - but Rany responds to comments on his blog and I have
suggested he join this list.

Cheers

alexis


On Mon, Nov 10, 2008 at 2:04 PM, Carl Bourne <cbourne at intellect.co.uk> wrote:
> Does anybody know if this is able to use JRuby?
>
> Carl Bourne
> Intellect Security Ltd
>
> DDI: +44 1491 842502
> M: +44 7770 284294
>
>
>
>
>
> -----Original Message-----
> From: rabbitmq-discuss-bounces at lists.rabbitmq.com [mailto:rabbitmq-discuss-bounces at lists.rabbitmq.com] On Behalf Of Alexis Richardson
> Sent: 10 November 2008 14:02
> To: rabbitmq
> Subject: [rabbitmq-discuss] Workling - a Rails workrunner using RabbitMQ
>
> Hi guys,
>
> Rany Keddo from play/type has released Workling which integrates with
> RabbitMQ to deliver a workrunner.
>
> http://playtype.net/past/2008/11/7/workling_0_4_0_is_out_with_rabbitmq_ampq_support/
>
> Rany says "rails users can now easily use rabbitmq with rails to push
> their work into the background".
>
> Thanks Rany!
>
> alexis
>
> _______________________________________________
> rabbitmq-discuss mailing list
> rabbitmq-discuss at lists.rabbitmq.com
> http://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss
>
> No virus found in this incoming message.
> Checked by AVG - http://www.avg.com
> Version: 8.0.175 / Virus Database: 270.8.6/1766 - Release Date: 10/11/2008 07:53
>



From alexis.richardson at cohesiveft.com  Mon Nov 10 14:09:37 2008
From: alexis.richardson at cohesiveft.com (Alexis Richardson)
Date: Mon, 10 Nov 2008 14:09:37 +0000
Subject: [rabbitmq-discuss] a rabbitmq use case - soundcloud
Message-ID: <167204d20811100609r4f1a3a4bj36c2c582cc7a8ca1@mail.gmail.com>

All,

I went to the Amazon AWS Start Up event in London last week and was
delighted to see the following presentation from SoundCloud:

http://www.slideshare.net/ericw/soundcloud-presentation-aws-startup-event-london-presentation

Cheers,

alexis



From alexis.richardson at cohesiveft.com  Mon Nov 10 14:15:38 2008
From: alexis.richardson at cohesiveft.com (Alexis Richardson)
Date: Mon, 10 Nov 2008 14:15:38 +0000
Subject: [rabbitmq-discuss] Support for distributed transactions (dtx).
In-Reply-To: <33784a0c0811100606u7d5b1e3ap6a7349d6e2fa8c33@mail.gmail.com>
References: <944da41d0811100536v678ec3bybb2ccd8f931fa349@mail.gmail.com>
	<167204d20811100543p1296de73gcb235dac699054df@mail.gmail.com>
	<33784a0c0811100606u7d5b1e3ap6a7349d6e2fa8c33@mail.gmail.com>
Message-ID: <167204d20811100615g1942f505s7f22dda5948b32c1@mail.gmail.com>

Gavin,

On Mon, Nov 10, 2008 at 2:06 PM, Gavin Bong <vinorasmus at gmail.com> wrote:
> Alexis,
>
> Pardon me for hijacking this thread, but I have 2 transaction related questions.
>
> 1) If I am just sending one message per client invocation, does it
> matter whether I use transactions ?
> e.g. the server receives a request to create an account, I add that
> request to a Q.
> It seems to me that transactions are only useful if I want a group of
> messages to appear (perhaps in an ordered fashion) in the queue. I'm
> speaking from a one-phase commit viewpoint.

My understanding is that you can use TX to force a publication ack,
even in one message cases.



> 2) In one of the overload method signatures for Channel.basicPublish,
> 2 parameters "immediate" and "mandatory" confuse me. Are they in
> anyway related to transactions ? Are they hints to control the
> visibility of the message in the queue vis ? vis database isolation
> levels. ?

They are orthogonal to transactions but in fact interplay with them in
fiddly ways.  Some of this will be clarified in future specs or tidied
up completely.  For now, I'd suggest using them independently of TX,
or if you must use them in combination, feel free to describe your use
cases on this list.

Cheers,

alexis




> Thanks a lot.
>
> Regards,
>
> Gavin
>
>
> 2008/11/10 Alexis Richardson <alexis.richardson at cohesiveft.com>:
>> Alex
>>
>> RabbitMQ supports the TX model as described in AMQP 0-8.  If you look
>> in the list archives for 'TX' then you will see background on this.
>> In effect TX lets clients state visibility and ack boundaries around
>> message groups.
>>
>



From 0x6e6562 at gmail.com  Mon Nov 10 15:24:56 2008
From: 0x6e6562 at gmail.com (Ben Hood)
Date: Mon, 10 Nov 2008 15:24:56 +0000
Subject: [rabbitmq-discuss] Flow Control
In-Reply-To: <6c2563b20811091500o1c242b54nbd5e11d46811f73a@mail.gmail.com>
References: <269388e30811090813h2df62980ib722b4816c60422d@mail.gmail.com>
	<6c2563b20811091058r1ac35570n1ea716ee6995b344@mail.gmail.com>
	<269388e30811091428t8eabd21l10e61a3bd451037b@mail.gmail.com>
	<6c2563b20811091500o1c242b54nbd5e11d46811f73a@mail.gmail.com>
Message-ID: <269388e30811100724r64614b89lb28c76f6ad102760@mail.gmail.com>

Edwin,

On Sun, Nov 9, 2008 at 11:00 PM, Edwin Fine
<rabbitmq-discuss_efine at usa.net> wrote:
> Truly, I always felt uncomfortable with using a cast on publish because you
> can't tell directly if there was a problem. I'd prefer a call.

Interesting that you should touch on the issue of transfer of
responsibility in this context. I guess the question you need to ask
is if there is a case where you can do a gen_server:cast and either
loose the message full stop or loose the ordering. My initial thought
is that all practical cases, this is not a problem, but I am following
this up with a question on the Erlang list (which you've probably seen
already).

At this point in time I would be reticent to turn this is into a
gen_server:call/3 because cast/2

a) matches the asynchronous semantics of the publish command;
b) is a lot quicker than a call;
c) it is pending clarification as to whether there are actually
reordering issues.

Also, even if you use a call, how will you know that the message
hasn't been binned by the gen_server instance that you invoked
quasi-synchronously?

In general if you want to make sure that you are not losing messages,
you should consider using transactions. Or what would be even better
would be to have an application level acknowledgement.


> Maybe this is a hare-brained idea, but can't the broker just send a
> channel.flow to the producer; the Erlang client just forwards it on to the
> producer in precisely the same way as it sends a basic.receive to a
> consumer? The publishing application would just need to write a handle_info
> for channel.flow just like a consumer does for basic.receive, or have I
> missed the point?

When you say basic.receive, I assume you mean basic.deliver.

Have you looked at the test that I wrote for this in the test_util
module - it does pretty much what you describe.

> I realize that this means that publishing applications can choose to ignore
> channel.flow commands, but that would be shooting themselves in the foot. In
> the 0.8 spec it says "The peer that requests a Channel.Flow method MAY
> disconnect and/or ban a peer that does not respect the request.", so the
> server could just drop the channel if the publisher ignores it.

That's what it will eventually do.

> Now I am not sure what is meant by a "peer", if that's the client itself or
> the application that is using the client. Either way, I believe that the
> Erlang client simply forwarding the channel.flow command to the application
> and requiring it to respond with the ok (and stop sending) is within the
> spirit of the spec, and should (?) be simple to do in the client.

ATM the client sends the ack back after it has asynchronously notified
the sending application. The registration for this is analogous to the
return listener registration process (in fact it's copy and paste). If
the flag is set, any invocation of the cast function will silently
discard the message.

I think that doing it this way round would be cooler than turning the
cast into a call in order to be able to read the state of the channel
flow flag.

The only issue I see is the added complexity involved in the
application - it would have to have a receive loop that matches on the
pause and resume atoms sent to it by the channel process.

Maybe there is a way to build a convenience function for this in lib_amqp?

Ben



From 0x6e6562 at gmail.com  Mon Nov 10 15:48:21 2008
From: 0x6e6562 at gmail.com (Ben Hood)
Date: Mon, 10 Nov 2008 15:48:21 +0000
Subject: [rabbitmq-discuss] Packaging
In-Reply-To: <6c2563b20811081009j629a8929i21ee11cae00932e2@mail.gmail.com>
References: <269388e30811061023o552f6cf0l9a15cb1e613b31a5@mail.gmail.com>
	<4915B32A.3060703@wizards.de>
	<269388e30811080938j62d6bcfeh33f4916e6d963b07@mail.gmail.com>
	<6c2563b20811081009j629a8929i21ee11cae00932e2@mail.gmail.com>
Message-ID: <269388e30811100748p446adfd6qdbdfae7c10945546@mail.gmail.com>

Edwin,

On Sat, Nov 8, 2008 at 6:09 PM, Edwin Fine
<rabbitmq-discuss_efine at usa.net> wrote:
> In terms of an earlier email about how to package the clients and server, I
> see it like this: repackage (and optionally refactor) the server into
> server-specific components and common components. Make the common components
> a separate Erlang app; ditto for client and server, and have the server and
> client depend on this app. Put in checks on both server and client side that
> they are running with a suitable version of the common app, and fail with a
> clear warning message if this is not the case. Make it easy for users to
> know which version of the common app the client or server depend on,
> preferably a simple script that invokes Erlang to delve into the guts and
> bring out the answer.

I for one would be interested to see if there is any value in turning
Rabbit into a proper Erlang release. My knowledge on the subject is
surface deep at best but it seems that there may be some nice to haves
(e.g. code upgrades). At the end of the day, I shouldn't imagine that
most users mind where the binaries sit and where the log file goes,
just as long as there's an easy way to start and stop it, run
rabbitmqctl and have the server boot on startup. Given the work that
you've done in this context, could you map out in more concrete terms
what this would look like?

Ben



From terry at jon.es  Mon Nov 10 16:11:08 2008
From: terry at jon.es (Terry Jones)
Date: Mon, 10 Nov 2008 17:11:08 +0100
Subject: [rabbitmq-discuss] Stopping
Message-ID: <18712.23836.825642.466271@jon.es>

Earlier, Matthias wrote:

>>>>> "Matthias" == Matthias Radestock <matthias at lshift.net> writes:
Matthias> For starting a several nodes with unrelated names and ports I
Matthias> recommend using the rabbitmq-server script, rather than
Matthias> rabbitmq-multi. You can stop the nodes individually with
Matthias> rabbitmqctl.

I'm now automating some starting/stopping of rabbit, and looking in
rabbitmqctl_real I see this:

MNESIA_BASE=/var/lib/rabbitmq/mnesia
LOG_BASE=/var/log/rabbitmq
ERL_ARGS=
MNESIA_DIR=${MNESIA_BASE}/${NODENAME}

These variables are simply set brute force. They don't give the caller a
chance to pass values in (the way other Rabbitmq scripts tend to).

And... the variables are not even used in the script.

So I'm wondering if they should be there at all. If it's the case that the
erl process uses them, they should also be exported. If I happen to have
exported them in my environment, you overwrite my settings.

My guess is they shouldn't be there at all. I'd be happy to know for sure,
as I'm starting rabbitmq via passing it a custom value for LOG_BASE. BTW,
does /var/lib/rabbitmq get created when Rabbitmq is installed? It doesn't
look like there's anything in there that grows bigger over time. Right?

Regards,
Terry



From rabbitmq-discuss_efine at usa.net  Mon Nov 10 16:18:19 2008
From: rabbitmq-discuss_efine at usa.net (Edwin Fine)
Date: Mon, 10 Nov 2008 11:18:19 -0500
Subject: [rabbitmq-discuss] Flow Control
In-Reply-To: <269388e30811100724r64614b89lb28c76f6ad102760@mail.gmail.com>
References: <269388e30811090813h2df62980ib722b4816c60422d@mail.gmail.com>
	<6c2563b20811091058r1ac35570n1ea716ee6995b344@mail.gmail.com>
	<269388e30811091428t8eabd21l10e61a3bd451037b@mail.gmail.com>
	<6c2563b20811091500o1c242b54nbd5e11d46811f73a@mail.gmail.com>
	<269388e30811100724r64614b89lb28c76f6ad102760@mail.gmail.com>
Message-ID: <6c2563b20811100818u1f744d21m784147a4f046217a@mail.gmail.com>

On Mon, Nov 10, 2008 at 10:24 AM, Ben Hood <0x6e6562 at gmail.com> wrote:

> Edwin,
>
> On Sun, Nov 9, 2008 at 11:00 PM, Edwin Fine
> <rabbitmq-discuss_efine at usa.net> wrote:
> > Truly, I always felt uncomfortable with using a cast on publish because
> you
> > can't tell directly if there was a problem. I'd prefer a call.
>
> Interesting that you should touch on the issue of transfer of
> responsibility in this context. I guess the question you need to ask
> is if there is a case where you can do a gen_server:cast and either
> loose the message full stop or loose the ordering. My initial thought
> is that all practical cases, this is not a problem, but I am following
> this up with a question on the Erlang list (which you've probably seen
> already).
>
> At this point in time I would be reticent to turn this is into a
> gen_server:call/3 because cast/2
>
> a) matches the asynchronous semantics of the publish command;
> b) is a lot quicker than a call;
> c) it is pending clarification as to whether there are actually
> reordering issues.
>
> Also, even if you use a call, how will you know that the message
> hasn't been binned by the gen_server instance that you invoked
> quasi-synchronously?
>

Because the call will return an ok?


>
> In general if you want to make sure that you are not losing messages,
> you should consider using transactions. Or what would be even better
> would be to have an application level acknowledgement.
>

Application level acknowldgement, meaning that my consumer explicitly sends
an application-level acknowledgement message to the producer? Let me
hopefully not annoy you by again comparing with WebSphere MQ. When you PUT a
message to the queue manager, you get a return code which, if it is a
success, means that the queue manager has got your message and it's all
good. No app level acks needed. No transactions needed. With using a cast to
send a message to the broker, if the client has a problem with the message
(this happened to me recently), the producer has no idea of this. I only
found out by seeing errors in my log file. Or at least, I don't know of a
way to find out other than by starting a transaction, which I am loath to do
because of performance concerns.

What happened is that I refactored some code and in doing so created a bug
that tried to send a record instead of a list in the basic.publish. Yes, my
fault, but I would have liked to have known about it at the code level. The
message was lost because there apparently was no way to detect this, let
alone recover from it (except maybe the txn, which I have not tried).

== 8-Nov-2008::20:08:59 == ERROR -  emulator
Error in process <0.191.0> on node 'xhg_rel at ender' with exit value:
{badarg,[{erlang,list_to_binary,[{frame_rec,<<217
bytes>>,1226192940,0,active,ok,0,undefined,0,<<33
bytes>>}]},{rabbit_binary_generator,create_frame,3},{rabbit_binary_generator,build_content_frames,5},{rabbit_binary_generator,build_simple_content_frames...



> Maybe this is a hare-brained idea, but can't the broker just send a
> channel.flow to the producer; the Erlang client just forwards it on to the
> producer in precisely the same way as it sends a basic.receive to a
> consumer? The publishing application would just need to write a
handle_info
> for channel.flow just like a consumer does for basic.receive, or have I
> missed the point?

When you say basic.receive, I assume you mean basic.deliver.
>
Yes, sorry.


>
> Have you looked at the test that I wrote for this in the test_util
> module - it does pretty much what you describe.
>

I have looked at the test, but it does not do anything like what I was
trying to describe :)

What I was trying to describe was having a gen_server or gen_fsm that has a
clause something like this;

handle_info(#'channel.flow'{active = false}, State) ->
    {noreply, State#state{channel_flow = false}};

handle_info(#'channel.flow'{active = true}, State) ->
    {noreply, State#state{channel_flow = true}};

When receiving the "down" signal, the producer can then go into an idle
state voluntarily. I don't like the idea of the client silently throwing
away producer messages.



> > I realize that this means that publishing applications can choose to
> ignore
> > channel.flow commands, but that would be shooting themselves in the foot.
> In
> > the 0.8 spec it says "The peer that requests a Channel.Flow method MAY
> > disconnect and/or ban a peer that does not respect the request.", so the
> > server could just drop the channel if the publisher ignores it.
>
> That's what it will eventually do.
>
> > Now I am not sure what is meant by a "peer", if that's the client itself
> or
> > the application that is using the client. Either way, I believe that the
> > Erlang client simply forwarding the channel.flow command to the
> application
> > and requiring it to respond with the ok (and stop sending) is within the
> > spirit of the spec, and should (?) be simple to do in the client.
>
> ATM the client sends the ack back after it has asynchronously notified
> the sending application. The registration for this is analogous to the
> return listener registration process (in fact it's copy and paste). If
> the flag is set, any invocation of the cast function will silently
> discard the message.
>

I really don't like the sound of that. I don't like silent discards in
general.


> I think that doing it this way round would be cooler than turning the
> cast into a call in order to be able to read the state of the channel
> flow flag.
>

Well, how about what I suggested above? Just let the client pass the
channel.flow on to the app. Why not?

>
> The only issue I see is the added complexity involved in the
> application - it would have to have a receive loop that matches on the
> pause and resume atoms sent to it by the channel process.
>

Not if done the way I suggested. Then it just becomes another handle_info
clause and state change.


>
> Maybe there is a way to build a convenience function for this in lib_amqp?
>
> Ben
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20081110/c51b5e05/attachment.htm 

From rabbitmq-discuss_efine at usa.net  Mon Nov 10 16:46:31 2008
From: rabbitmq-discuss_efine at usa.net (Edwin Fine)
Date: Mon, 10 Nov 2008 11:46:31 -0500
Subject: [rabbitmq-discuss] Packaging
In-Reply-To: <269388e30811100748p446adfd6qdbdfae7c10945546@mail.gmail.com>
References: <269388e30811061023o552f6cf0l9a15cb1e613b31a5@mail.gmail.com>
	<4915B32A.3060703@wizards.de>
	<269388e30811080938j62d6bcfeh33f4916e6d963b07@mail.gmail.com>
	<6c2563b20811081009j629a8929i21ee11cae00932e2@mail.gmail.com>
	<269388e30811100748p446adfd6qdbdfae7c10945546@mail.gmail.com>
Message-ID: <6c2563b20811100846r409fafa5o565779adf391d463@mail.gmail.com>

On Mon, Nov 10, 2008 at 10:48 AM, Ben Hood <0x6e6562 at gmail.com> wrote:

> Edwin,
>
> On Sat, Nov 8, 2008 at 6:09 PM, Edwin Fine
> <rabbitmq-discuss_efine at usa.net> wrote:
> > In terms of an earlier email about how to package the clients and server,
> I
> > see it like this: repackage (and optionally refactor) the server into
> > server-specific components and common components. Make the common
> components
> > a separate Erlang app; ditto for client and server, and have the server
> and
> > client depend on this app. Put in checks on both server and client side
> that
> > they are running with a suitable version of the common app, and fail with
> a
> > clear warning message if this is not the case. Make it easy for users to
> > know which version of the common app the client or server depend on,
> > preferably a simple script that invokes Erlang to delve into the guts and
> > bring out the answer.
>
> I for one would be interested to see if there is any value in turning
> Rabbit into a proper Erlang release. My knowledge on the subject is
> surface deep at best but it seems that there may be some nice to haves
> (e.g. code upgrades). At the end of the day, I shouldn't imagine that
> most users mind where the binaries sit and where the log file goes,
> just as long as there's an easy way to start and stop it, run
> rabbitmqctl and have the server boot on startup. Given the work that
> you've done in this context, could you map out in more concrete terms
> what this would look like?
>

I use Erlware's sinan and faxien for packaging and distribution. They create
"proper" Erlang releases, and make the whole thing much easier than trying
to do it just with OTP. However, like any evolving open-source product,
there are some rough edges and glitches, and less than perfect
documentation, but overall I couldn't live without them. One downside is
that I don't think it supports building on Windows - or is that an upside?
;)

Currently, I have two packaged applications that are rabbit-related, plus
the off-the-shelf Rabbit server/broker itself, which runs on a different
Erlang node. I've done nothing to the broker, which is installed and built
the usual way.

Here's part of the output of my application:which_applications() - slightly
enchanced to include the compile times of all apps - showing the two
"home-grown" rabbit modules. The version numbers are added by me, based on
1.4.0, with any local modifications I have done bumping them up.

[{kernel,"ERTS  CXC 138 10  2008-06-13 02:44:58 UTC",  "2.12.3"},
 {mnesia,"MNESIA  CXC 138 12  2008-06-10 18:33:37 UTC",  "4.4.3"},
 {eunit,"EUnit  2008-07-15 04:40:42 UTC","2.0"},
 {ibrowse,"HTTP client application  2008-11-07 22:48:03 UTC", "1.4"},
 {stdlib,"ERTS  CXC 138 10  2008-06-10 18:29:39 UTC", "1.15.3"},
... snip ...
* {erlang_client,"RabbitMQ Erlang Client.  2008-11-07 22:48:03 UTC", "
1.4.0.2"},
 {rabbitmq_common,"RabbitMQ modules common to client and server  2008-09-09
09:20:25 UTC",  "1.4.0"},
* {yaws,"yaws WWW server  2008-11-07 22:47:59 UTC","1.77"},
 {sasl,"SASL  CXC 138 11  2008-06-10 18:27:34 UTC", "2.1.5.3"}]

The contents of the rabbitmq_common directory are as follows:

./lib
./lib/rabbitmq_common
./lib/rabbitmq_common/include
./lib/rabbitmq_common/include/rabbit_framing_spec.hrl
./lib/rabbitmq_common/include/rabbit.hrl
./lib/rabbitmq_common/include/rabbit_framing.hrl
./lib/rabbitmq_common/src
./lib/rabbitmq_common/src/rabbit_framing_channel.erl
./lib/rabbitmq_common/src/rabbit_misc.erl
./lib/rabbitmq_common/src/rabbit_writer.erl
./lib/rabbitmq_common/src/rabbit_heartbeat.erl
./lib/rabbitmq_common/src/rabbit_binary_parser.erl
./lib/rabbitmq_common/src/rabbit_reader.erl
./lib/rabbitmq_common/src/rabbit_amqqueue.erl
./lib/rabbitmq_common/src/rabbit_framing.erl
./lib/rabbitmq_common/src/rabbit_channel.erl
./lib/rabbitmq_common/src/rabbit_binary_generator.erl
./lib/rabbitmq_common/ebin
./lib/rabbitmq_common/ebin/rabbitmq_common.app ---> I had to write this one,
but it's very simple
./_build.cfg
./control

The _build.cfg is for the Sinan Erlang build application and looks like
this:

project : {
   name : rabbitmq_common,
   vsn  : "1.4.0"
},
repositories : ["http://0.0.0.0/erlware", "http://repo.erlware.org/pub"],
build_dir : _build,
ignore_dirs : ["_", "."],
ignore_apps : [],
default_task :  build

To build, I type in:

$ sinan
Starting run
[check_depends] start
[depends] Pulling eunit-2.0 from repository if non-local
[depends] Pulling stdlib-1.15.3 from repository if non-local
[depends] Pulling kernel-2.12.3 from repository if non-local
[check_depends] stop
[build] start
[build] Building
/home/efine/work/integrat/rabbitmq_common/otp/lib/rabbitmq_common/src/rabbit_writer.erl
[build] Building
/home/efine/work/integrat/rabbitmq_common/otp/lib/rabbitmq_common/src/rabbit_reader.erl
[build] Building
/home/efine/work/integrat/rabbitmq_common/otp/lib/rabbitmq_common/src/rabbit_misc.erl
[build] Building
/home/efine/work/integrat/rabbitmq_common/otp/lib/rabbitmq_common/src/rabbit_heartbeat.erl
[build] Building
/home/efine/work/integrat/rabbitmq_common/otp/lib/rabbitmq_common/src/rabbit_framing.erl
[build] Building
/home/efine/work/integrat/rabbitmq_common/otp/lib/rabbitmq_common/src/rabbit_framing_channel.erl
[build] Building
/home/efine/work/integrat/rabbitmq_common/otp/lib/rabbitmq_common/src/rabbit_channel.erl
[build] Building
/home/efine/work/integrat/rabbitmq_common/otp/lib/rabbitmq_common/src/rabbit_binary_parser.erl
[build] Building
/home/efine/work/integrat/rabbitmq_common/otp/lib/rabbitmq_common/src/rabbit_binary_generator.erl
[build] Building
/home/efine/work/integrat/rabbitmq_common/otp/lib/rabbitmq_common/src/rabbit_amqqueue.erl
[build] stop
run complete

To create a distribution package, I type in

$ sinan dist

To publish the package to the repository servers (which are WebDAV-enabled
Web servers), I just enter

$ faxien publish

To pull down the latest release from the repository servers on a server
somewhere else in the world:

$ faxien install rabbitmq_common

The same goes for the erlang client.

One thing that must be mentioned is that sinan and faxien detect exactly
which Erlang/OTP modules are being used and package only those modules with
the application. That means that the application (e.g. rabbitmq_common)
becomes completely standalone (embedded, really) and does not rely on
whichever version of Erlang is actually installed on the target server.

Then, in my main application, my app file includes the following:

... snip ...
        {applications,
            [
                kernel,
                stdlib,
                sasl,
                mnesia,
                yaws,
                erlang_client, % RabbitMQ client
                rabbitmq_common, % Needed by above client!
                hglib,
                ibrowse
            ]},

I could send you the contents of the directories of the rabbit_common and
erlang_client (after all, it IS your code, just massaged a bit) if you want.

More later, gotta run.

Regards,
Ed

>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20081110/4680ab0e/attachment.htm 

From matthias at lshift.net  Mon Nov 10 16:54:19 2008
From: matthias at lshift.net (Matthias Radestock)
Date: Mon, 10 Nov 2008 16:54:19 +0000
Subject: [rabbitmq-discuss] Stopping
In-Reply-To: <18712.23836.825642.466271@jon.es>
References: <18712.23836.825642.466271@jon.es>
Message-ID: <4918673B.9060202@lshift.net>

Terry,

Terry Jones wrote:
> I'm now automating some starting/stopping of rabbit, and looking in
> rabbitmqctl_real I see this:
> 
> MNESIA_BASE=/var/lib/rabbitmq/mnesia
> LOG_BASE=/var/log/rabbitmq
> ERL_ARGS=
> MNESIA_DIR=${MNESIA_BASE}/${NODENAME}
> 
> [...]
> 
> the variables are not even used in the script.

Well spotted. I have created a bug to get these removed.

> BTW, does /var/lib/rabbitmq get created when Rabbitmq is installed?

Yes, on all the Unix-y packagings of RabbitMQ I am aware of.

> It doesn't look like there's anything in there that grows bigger over
> time. Right?

The mnesia databases and persister logs go there. And these definitely 
can grow.


Matthias.



From terry at jon.es  Mon Nov 10 17:01:27 2008
From: terry at jon.es (Terry Jones)
Date: Mon, 10 Nov 2008 18:01:27 +0100
Subject: [rabbitmq-discuss] Stopping
In-Reply-To: Your message at 16:54:19 on Monday, 10 November 2008
References: <18712.23836.825642.466271@jon.es>
	<4918673B.9060202@lshift.net>
Message-ID: <18712.26855.421843.91925@jon.es>

Thanks Matthias, that's very helpful.  BTW, it's great to get such prompt
replies. It makes a big difference when you're trying to get something
going as you don't lose much momentum or context while waiting for an
answer.

Terry



From 0x6e6562 at gmail.com  Mon Nov 10 17:36:22 2008
From: 0x6e6562 at gmail.com (Ben Hood)
Date: Mon, 10 Nov 2008 17:36:22 +0000
Subject: [rabbitmq-discuss] Flow Control
In-Reply-To: <6c2563b20811100818u1f744d21m784147a4f046217a@mail.gmail.com>
References: <269388e30811090813h2df62980ib722b4816c60422d@mail.gmail.com>
	<6c2563b20811091058r1ac35570n1ea716ee6995b344@mail.gmail.com>
	<269388e30811091428t8eabd21l10e61a3bd451037b@mail.gmail.com>
	<6c2563b20811091500o1c242b54nbd5e11d46811f73a@mail.gmail.com>
	<269388e30811100724r64614b89lb28c76f6ad102760@mail.gmail.com>
	<6c2563b20811100818u1f744d21m784147a4f046217a@mail.gmail.com>
Message-ID: <269388e30811100936m22335278lb21c0c3ae18228b0@mail.gmail.com>

Ed,

On Mon, Nov 10, 2008 at 4:18 PM, Edwin Fine
<rabbitmq-discuss_efine at usa.net> wrote:
>> Also, even if you use a call, how will you know that the message
>> hasn't been binned by the gen_server instance that you invoked
>> quasi-synchronously?
>
> Because the call will return an ok?

Sure, but all that means is that the gen_server instance has received
your message and said ok, it doesn't mean that the broker has accepted
responsibility for it.

> Application level acknowldgement, meaning that my consumer explicitly sends
> an application-level acknowledgement message to the producer? Let me
> hopefully not annoy you by again comparing with WebSphere MQ. When you PUT a
> message to the queue manager, you get a return code which, if it is a
> success, means that the queue manager has got your message and it's all
> good. No app level acks needed. No transactions needed. With using a cast to
> send a message to the broker, if the client has a problem with the message
> (this happened to me recently), the producer has no idea of this. I only
> found out by seeing errors in my log file. Or at least, I don't know of a
> way to find out other than by starting a transaction, which I am loath to do
> because of performance concerns.

Ok, there are few separate issues here:

1) I said that in general app level acknowledgements are the best
thing to have in terms of responsibility transfer - but they are not
always practical or possible (e.g. fire and forget semantics) and they
not strictly necessary;

2) You are describing responsibility transfer in terms of MQ series -
the comparison to make would between sending messages on a per-message
ack basis to MQ series and wrapping a whole of AMQP basic.publish
commands in a TX - and measure the different

3) Are you aware of what overhead using AMQP transactions has in your
particular use case? Remember that the semantics of a TX in AMQP is
not necessarily identical to that of MQ series.

4) I agree that using a cast will swallow bugs whereas a call will be
reported inline to the invocation. However, cast is lot cheaper than
call (weren't you talking about TX's being expensive?)

> What happened is that I refactored some code and in doing so created a bug
> that tried to send a record instead of a list in the basic.publish. Yes, my
> fault, but I would have liked to have known about it at the code level. The
> message was lost because there apparently was no way to detect this, let
> alone recover from it (except maybe the txn, which I have not tried).
>
> == 8-Nov-2008::20:08:59 == ERROR -  emulator
> Error in process <0.191.0> on node 'xhg_rel at ender' with exit value:
> {badarg,[{erlang,list_to_binary,[{frame_rec,<<217
> bytes>>,1226192940,0,active,ok,0,undefined,0,<<33
> bytes>>}]},{rabbit_binary_generator,create_frame,3},{rabbit_binary_generator,build_content_frames,5},{rabbit_binary_generator,build_simple_content_frames...


That is a fair point. May I suggest that we let the application choose
what it wants to do - adding an equivalent call command would be
trivial. What do you think?

>> Have you looked at the test that I wrote for this in the test_util
>> module - it does pretty much what you describe.
>
> I have looked at the test, but it does not do anything like what I was
> trying to describe :)
>
> What I was trying to describe was having a gen_server or gen_fsm that has a
> clause something like this;
>
> handle_info(#'channel.flow'{active = false}, State) ->
>     {noreply, State#state{channel_flow = false}};
>
> handle_info(#'channel.flow'{active = true}, State) ->
>     {noreply, State#state{channel_flow = true}};

Sure, but this is all on the receiving process' side, so whether it
handles it as a gen_server or as a plain jane receive block *should*
be irrelevant. Furthermore, the receiving process may just ignore the
notification or it may not register itself in the first place.

So I think the more important side of things is how the channel
process propagates the event that it receives from the broker.

And this is what I have done - when the amqp_channel receives the
#'channel.flow'{active = false} from the broker, it sends the
registered listener a pause atom - in the reverse it sends it a resume
atom.

Hence what you are suggesting is equivalent to what I have already done :-)

> When receiving the "down" signal, the producer can then go into an idle
> state voluntarily. I don't like the idea of the client silently throwing
> away producer messages.

See the comment above giving the app the choice between the "really
safe" call and the "really cool" cast.

> I really don't like the sound of that. I don't like silent discards in
> general.

Is this a re-transmission issue in your mail ;-)

>> The only issue I see is the added complexity involved in the
>> application - it would have to have a receive loop that matches on the
>> pause and resume atoms sent to it by the channel process.
>
> Not if done the way I suggested. Then it just becomes another handle_info
> clause and state change.

As indicated above, this can easily be processed by the app as a
gen_server callback, but that is down to the client. Having said that,
what you are suggesting is sensible and probably would consitute best
practice.

Ben



From 0x6e6562 at gmail.com  Mon Nov 10 17:42:04 2008
From: 0x6e6562 at gmail.com (Ben Hood)
Date: Mon, 10 Nov 2008 17:42:04 +0000
Subject: [rabbitmq-discuss] Packaging
In-Reply-To: <6c2563b20811100846r409fafa5o565779adf391d463@mail.gmail.com>
References: <269388e30811061023o552f6cf0l9a15cb1e613b31a5@mail.gmail.com>
	<4915B32A.3060703@wizards.de>
	<269388e30811080938j62d6bcfeh33f4916e6d963b07@mail.gmail.com>
	<6c2563b20811081009j629a8929i21ee11cae00932e2@mail.gmail.com>
	<269388e30811100748p446adfd6qdbdfae7c10945546@mail.gmail.com>
	<6c2563b20811100846r409fafa5o565779adf391d463@mail.gmail.com>
Message-ID: <269388e30811100942g1e355297x419db2976025c672@mail.gmail.com>

Ed,

On Mon, Nov 10, 2008 at 4:46 PM, Edwin Fine
<rabbitmq-discuss_efine at usa.net> wrote:
> I could send you the contents of the directories of the rabbit_common and
> erlang_client (after all, it IS your code, just massaged a bit) if you want.

Cool. I'm just wondering if it is better to say put it on something
like bitbucket rather than just lobbing it over the fence - that way
it may remain tractable for other people - and you might be able to
just clone the existing Rabbit repo there.

> More later, gotta run.

BTW how do you start and stop Rabbit, or make it come up on boot?

Ben



From rabbitmq-discuss_efine at usa.net  Mon Nov 10 18:56:46 2008
From: rabbitmq-discuss_efine at usa.net (Edwin Fine)
Date: Mon, 10 Nov 2008 13:56:46 -0500
Subject: [rabbitmq-discuss] Flow Control
In-Reply-To: <269388e30811100936m22335278lb21c0c3ae18228b0@mail.gmail.com>
References: <269388e30811090813h2df62980ib722b4816c60422d@mail.gmail.com>
	<6c2563b20811091058r1ac35570n1ea716ee6995b344@mail.gmail.com>
	<269388e30811091428t8eabd21l10e61a3bd451037b@mail.gmail.com>
	<6c2563b20811091500o1c242b54nbd5e11d46811f73a@mail.gmail.com>
	<269388e30811100724r64614b89lb28c76f6ad102760@mail.gmail.com>
	<6c2563b20811100818u1f744d21m784147a4f046217a@mail.gmail.com>
	<269388e30811100936m22335278lb21c0c3ae18228b0@mail.gmail.com>
Message-ID: <6c2563b20811101056i2d563338u40af40eefde25c98@mail.gmail.com>

>
> > == 8-Nov-2008::20:08:59 == ERROR -  emulator
> > Error in process <0.191.0> on node 'xhg_rel at ender' with exit value:
> > {badarg,[{erlang,list_to_binary,[{frame_rec,<<217
> > bytes>>,1226192940,0,active,ok,0,undefined,0,<<33
> >
> bytes>>}]},{rabbit_binary_generator,create_frame,3},{rabbit_binary_generator,build_content_frames,5},{rabbit_binary_generator,build_simple_content_frames...
>
>
> That is a fair point. May I suggest that we let the application choose
> what it wants to do - adding an equivalent call command would be
> trivial. What do you think?
>

I think that's a very fair compromise.


> > What I was trying to describe was having a gen_server or gen_fsm that has
> a
> > clause something like this;
> >
> > handle_info(#'channel.flow'{active = false}, State) ->
> >     {noreply, State#state{channel_flow = false}};
> >
> > handle_info(#'channel.flow'{active = true}, State) ->
> >     {noreply, State#state{channel_flow = true}};
>
> Sure, but this is all on the receiving process' side, so whether it
> handles it as a gen_server or as a plain jane receive block *should*
> be irrelevant. Furthermore, the receiving process may just ignore the
> notification or it may not register itself in the first place.
>
> So I think the more important side of things is how the channel
> process propagates the event that it receives from the broker.
>
> And this is what I have done - when the amqp_channel receives the
> #'channel.flow'{active = false} from the broker, it sends the
> registered listener a pause atom - in the reverse it sends it a resume
> atom.
>
> Hence what you are suggesting is equivalent to what I have already done :-)


So does that mean that when a consumer wants to perform a channel.flow,
there will be a call made available on the channel, say
amqp_channel:flow(true|false)? Otherwise, if the consumer sends a
channel.flow command directly, it is inconsistent on an API level with the
producer, which only receives  pause and resume atoms. (a) Do you agree and
(b) How do you plan to handle that side of it?

Is this a re-transmission issue in your mail ;-)

No, it's a re-transmission issue in my brain :)

Ed
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20081110/8437835d/attachment.htm 

From rabbitmq-discuss_efine at usa.net  Mon Nov 10 19:12:42 2008
From: rabbitmq-discuss_efine at usa.net (Edwin Fine)
Date: Mon, 10 Nov 2008 14:12:42 -0500
Subject: [rabbitmq-discuss] Packaging
In-Reply-To: <269388e30811100942g1e355297x419db2976025c672@mail.gmail.com>
References: <269388e30811061023o552f6cf0l9a15cb1e613b31a5@mail.gmail.com>
	<4915B32A.3060703@wizards.de>
	<269388e30811080938j62d6bcfeh33f4916e6d963b07@mail.gmail.com>
	<6c2563b20811081009j629a8929i21ee11cae00932e2@mail.gmail.com>
	<269388e30811100748p446adfd6qdbdfae7c10945546@mail.gmail.com>
	<6c2563b20811100846r409fafa5o565779adf391d463@mail.gmail.com>
	<269388e30811100942g1e355297x419db2976025c672@mail.gmail.com>
Message-ID: <6c2563b20811101112m6f319473l8cfa2b9f7627299c@mail.gmail.com>

On Mon, Nov 10, 2008 at 12:42 PM, Ben Hood <0x6e6562 at gmail.com> wrote:

> Ed,
>
> On Mon, Nov 10, 2008 at 4:46 PM, Edwin Fine
> <rabbitmq-discuss_efine at usa.net> wrote:
> > I could send you the contents of the directories of the rabbit_common and
> > erlang_client (after all, it IS your code, just massaged a bit) if you
> want.
>
> Cool. I'm just wondering if it is better to say put it on something
> like bitbucket rather than just lobbing it over the fence - that way
> it may remain tractable for other people - and you might be able to
> just clone the existing Rabbit repo there.


Ah, sorry, I didn't mean send it to you for the purpose of publication, I
meant send it to you for you to see how I've structured it. I don't want to
repackage rabbit for public consumption, unless it is using faxien and
sinan, because then it's as simple as adding one more DAV http address to my
publication repositories. Also, sometimes I have to slightly modify the
client to suit my circumstances, and it's nekulturny to publish your own
mods as an "official" Rabbit build. I would be leery of downloading
something like that!


> BTW how do you start and stop Rabbit, or make it come up on boot?


I use a pretty vanilla  /etc/init.d script, and put a call to it into
boot.local, e.g. /etc/init.d/rabbitmq start. To start and stop from the
command line I call the same script. The only downside to this technique is
that if, for some reason, rabbit takes longer than expected to come up (say,
due to recovery of some sort), TCP/IP client applications that come up
before it's ready and depend on it are going to have problems when they try
to use it, so quite a bit of error detection and recovery are necessary
(anyway, that is needed for the case where rabbit may get taken down without
taking the apps down first).

Ed
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20081110/3d06685f/attachment.htm 

From rabbitmq-discuss_efine at usa.net  Mon Nov 10 19:17:27 2008
From: rabbitmq-discuss_efine at usa.net (Edwin Fine)
Date: Mon, 10 Nov 2008 14:17:27 -0500
Subject: [rabbitmq-discuss] Stopping
In-Reply-To: <18712.26855.421843.91925@jon.es>
References: <18712.23836.825642.466271@jon.es> <4918673B.9060202@lshift.net>
	<18712.26855.421843.91925@jon.es>
Message-ID: <6c2563b20811101117h59015164pa2f867b6ae8e9c7d@mail.gmail.com>

On Mon, Nov 10, 2008 at 12:01 PM, Terry Jones <terry at jon.es> wrote:

> Thanks Matthias, that's very helpful.  BTW, it's great to get such prompt
> replies. It makes a big difference when you're trying to get something
> going as you don't lose much momentum or context while waiting for an
> answer.
>

I'll second that. I think you Rabbit folk are doing a great job, especially
with the code and with looking after the people on this list. Thanks.

 Ed
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20081110/0d73792a/attachment.htm 

From Sreeni.Kankanala at palm.com  Mon Nov 10 19:20:15 2008
From: Sreeni.Kankanala at palm.com (Sreeni Kankanala)
Date: Mon, 10 Nov 2008 11:20:15 -0800
Subject: [rabbitmq-discuss] could you please remove me from the list
Message-ID: <7D1D3CEE146B8D4D9388279CAB0416F63D25C826@ushqwmb01.palm1.palmone.com>

Thanks
Sreeni
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20081110/917d7758/attachment.htm 

From Peter.Silva at ec.gc.ca  Mon Nov 10 22:03:36 2008
From: Peter.Silva at ec.gc.ca (Peter Silva)
Date: Mon, 10 Nov 2008 22:03:36 +0000
Subject: [rabbitmq-discuss] whether the weather is right.
Message-ID: <4918AFB8.8050509@ec.gc.ca>

*Matthias Radestock*  <mailto:rabbitmq-discuss%40lists.rabbitmq.com?Subject=%5Brabbitmq-discuss%5D%20whether%20the%20weather%20is%20right.&In-Reply-To=4442b4720811080736h7e2a5d81p41321f644e7ab454%40mail.gmail.com>/wrote:///    

> Peter Silva wrote:
> >/ To me, unicast/direct, multi-cast/topic, broadcast/fanout data 
/> >/ distribution has nothing to do with how the data arrived at the 
/> >/ switch/broker/exchange.   Neither producer, nor consumer should have 
/> >/ anything to say about that.
/> 
> Then who does? Some administrator? If so, just write a small AMQP client 
> app that creates the exchanges, queues and bindings, and run that as the 
> administrator. Producer then will just need to know the name of the 
> exchange, and consumers the name of their queue.

Will the consumers be able to change the bindings when they connect?


-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20081110/7af3fc00/attachment.htm 

From 0x6e6562 at gmail.com  Tue Nov 11 00:48:41 2008
From: 0x6e6562 at gmail.com (Ben Hood)
Date: Tue, 11 Nov 2008 00:48:41 +0000
Subject: [rabbitmq-discuss] Flow Control
In-Reply-To: <6c2563b20811101056i2d563338u40af40eefde25c98@mail.gmail.com>
References: <269388e30811090813h2df62980ib722b4816c60422d@mail.gmail.com>
	<6c2563b20811091058r1ac35570n1ea716ee6995b344@mail.gmail.com>
	<269388e30811091428t8eabd21l10e61a3bd451037b@mail.gmail.com>
	<6c2563b20811091500o1c242b54nbd5e11d46811f73a@mail.gmail.com>
	<269388e30811100724r64614b89lb28c76f6ad102760@mail.gmail.com>
	<6c2563b20811100818u1f744d21m784147a4f046217a@mail.gmail.com>
	<269388e30811100936m22335278lb21c0c3ae18228b0@mail.gmail.com>
	<6c2563b20811101056i2d563338u40af40eefde25c98@mail.gmail.com>
Message-ID: <269388e30811101648j7eed31edj793a570dd1922fc5@mail.gmail.com>

Ed,

On Mon, Nov 10, 2008 at 6:56 PM, Edwin Fine
<rabbitmq-discuss_efine at usa.net> wrote:
> I think that's a very fair compromise.

Ok, sold.

>
> So does that mean that when a consumer wants to perform a channel.flow,
> there will be a call made available on the channel, say
> amqp_channel:flow(true|false)? Otherwise, if the consumer sends a
> channel.flow command directly, it is inconsistent on an API level with the
> producer, which only receives  pause and resume atoms. (a) Do you agree and
> (b) How do you plan to handle that side of it?

ATM the client can't initiate a channel.flow command, only the broker
(I mentioned this in the article).

Ben



From 0x6e6562 at gmail.com  Tue Nov 11 00:52:16 2008
From: 0x6e6562 at gmail.com (Ben Hood)
Date: Tue, 11 Nov 2008 00:52:16 +0000
Subject: [rabbitmq-discuss] whether the weather is right.
In-Reply-To: <4918AFB8.8050509@ec.gc.ca>
References: <4918AFB8.8050509@ec.gc.ca>
Message-ID: <269388e30811101652g7b20b24bi1d706f8653c2df4e@mail.gmail.com>

Peter,

On Mon, Nov 10, 2008 at 10:03 PM, Peter Silva <Peter.Silva at ec.gc.ca> wrote:
> Will the consumers be able to change the bindings when they connect?

A client that has access to a channel *should* be able to bind and
unbind queues. Which client API are you looking at?

Ben



From 0x6e6562 at gmail.com  Tue Nov 11 00:53:33 2008
From: 0x6e6562 at gmail.com (Ben Hood)
Date: Tue, 11 Nov 2008 00:53:33 +0000
Subject: [rabbitmq-discuss] could you please remove me from the list
In-Reply-To: <7D1D3CEE146B8D4D9388279CAB0416F63D25C826@ushqwmb01.palm1.palmone.com>
References: <7D1D3CEE146B8D4D9388279CAB0416F63D25C826@ushqwmb01.palm1.palmone.com>
Message-ID: <269388e30811101653o3261b14rbbbc7e8ea558485e@mail.gmail.com>

Sreeni,

On Mon, Nov 10, 2008 at 7:20 PM, Sreeni Kankanala
<Sreeni.Kankanala at palm.com> wrote:
> Thanks

You can use mailman to unsubscribe:
http://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss

Ben



From rabbitmq-discuss_efine at usa.net  Tue Nov 11 01:03:40 2008
From: rabbitmq-discuss_efine at usa.net (Edwin Fine)
Date: Mon, 10 Nov 2008 20:03:40 -0500
Subject: [rabbitmq-discuss] Flow Control
In-Reply-To: <269388e30811101648j7eed31edj793a570dd1922fc5@mail.gmail.com>
References: <269388e30811090813h2df62980ib722b4816c60422d@mail.gmail.com>
	<6c2563b20811091058r1ac35570n1ea716ee6995b344@mail.gmail.com>
	<269388e30811091428t8eabd21l10e61a3bd451037b@mail.gmail.com>
	<6c2563b20811091500o1c242b54nbd5e11d46811f73a@mail.gmail.com>
	<269388e30811100724r64614b89lb28c76f6ad102760@mail.gmail.com>
	<6c2563b20811100818u1f744d21m784147a4f046217a@mail.gmail.com>
	<269388e30811100936m22335278lb21c0c3ae18228b0@mail.gmail.com>
	<6c2563b20811101056i2d563338u40af40eefde25c98@mail.gmail.com>
	<269388e30811101648j7eed31edj793a570dd1922fc5@mail.gmail.com>
Message-ID: <6c2563b20811101703t75d8fa50i6bf6a18df881b427@mail.gmail.com>

Ben,


> > So does that mean that when a consumer wants to perform a channel.flow,
> > there will be a call made available on the channel, say
> > amqp_channel:flow(true|false)? Otherwise, if the consumer sends a
> > channel.flow command directly, it is inconsistent on an API level with
> the
> > producer, which only receives  pause and resume atoms. (a) Do you agree
> and
> > (b) How do you plan to handle that side of it?
>
> ATM the client can't initiate a channel.flow command, only the broker
> (I mentioned this in the article).
>

I have to be really careful how I ask you questions, I can see that :)

I should have phrased it like this, I suppose: How do you envisage the
consumer application will call the client when the client DOES support
initiating a channel.flow command?

Ed.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20081110/f32cd8e4/attachment.htm 

From anthony-rabbitmq at hogan.id.au  Tue Nov 11 04:41:08 2008
From: anthony-rabbitmq at hogan.id.au (Anthony)
Date: Tue, 11 Nov 2008 15:41:08 +1100
Subject: [rabbitmq-discuss] Stopping
In-Reply-To: <1bf8be120811102038h2d358dc9j39eaa8ed23f1c8be@mail.gmail.com>
References: <18712.23836.825642.466271@jon.es> <4918673B.9060202@lshift.net>
	<18712.26855.421843.91925@jon.es>
	<6c2563b20811101117h59015164pa2f867b6ae8e9c7d@mail.gmail.com>
	<1bf8be120811102038h2d358dc9j39eaa8ed23f1c8be@mail.gmail.com>
Message-ID: <1bf8be120811102041w30606ea6qbd7281b0ed851cc@mail.gmail.com>

Have noticed that even when RabbitMQ is stopped, there's an erlang server
process that keeps going and the only way to stop it seems to be to kill it.

Arguably speaking, if the service is started by Rabbit, it should be stopped
by Rabbit, no? ... Or is the same instance potentially used by other Erlang
apps?

~# ps ax | grep erl
 3050 ?        S      0:00 /usr/lib/erlang/erts-5.6.3/bin/epmd -daemon
 3062 ?        Sl     0:01 /usr/lib/erlang/erts-5.6.3/bin/beam -W w -K true
-A30 -- -root /usr/lib/erlang -progname erl -- -home /var/lib/rabbitmq -pa
/usr/sbin/../ebin -noshell -noinput -s rabbit -sname rabbit -boot start_sasl
-kernel inet_default_listen_options [{sndbuf,16384},{recbuf,4096}] -rabbit
tcp_listeners [{"0.0.0.0", 5672}] -sasl errlog_type error -kernel
error_logger {file,"/var/log/rabbitmq/rabbit.log"} -sasl sasl_error_logger
{file,"/var/log/rabbitmq/rabbit-sasl.log"} -os_mon start_cpu_sup true
-os_mon start_disksup false -os_mon start_memsup false -os_mon start_os_sup
false -mnesia dir "/var/lib/rabbitmq/mnesia/rabbit" -noshell -noinput
 3104 ?        Ss     0:00 /usr/lib/erlang/lib/os_mon-2.1.6/priv/bin/cpu_sup
 4253 pts/0    R+     0:00 grep erl
~# /etc/init.d/rabbitmq-server stop
Stopping rabbitmq-server: rabbitmq-server.
~# ps ax | grep erl
 3050 ?        S      0:00 /usr/lib/erlang/erts-5.6.3/bin/epmd -daemon
 4280 pts/0    S+     0:00 grep erl
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20081111/06d5a568/attachment.htm 

From Peter.A.Silva at gmail.com  Tue Nov 11 04:42:42 2008
From: Peter.A.Silva at gmail.com (Peter Silva)
Date: Mon, 10 Nov 2008 23:42:42 -0500
Subject: [rabbitmq-discuss] Exchanges, Routing, and AMQP
In-Reply-To: <4442b4720811091019k5553fcd4g37467f04556c766c@mail.gmail.com>
References: <8f10a9e00810200801k6c3040e3w568a9be9d062ff74@mail.gmail.com>
	<269388e30810201103q6529063djbe5e0641e7c6b047@mail.gmail.com>
	<8f10a9e00810210940x2991d29fidd942b75af333947@mail.gmail.com>
	<4901C714.7080103@lshift.net>
	<8f10a9e00810250511p2f350327l3e15cc66614d2532@mail.gmail.com>
	<269388e30811081041i17102151qb4ec7760c6b81b3f@mail.gmail.com>
	<4442b4720811081129x7f4c108fj9a7e187eb95f5520@mail.gmail.com>
	<269388e30811081215mb421a1bhb192dbfacd71fc82@mail.gmail.com>
	<4917240E.1090202@barryp.org>
	<4442b4720811091019k5553fcd4g37467f04556c766c@mail.gmail.com>
Message-ID: <4442b4720811102042s580f7c4ei222cf482ac7ed1fb@mail.gmail.com>

OK, so I have looked over the spec a little more thoroughly now,  thinking
about my application.  It's still very hypothetical for me at this point.
I can easily see using it for some of the simpler
applications, but the most troubling thing I noticed in 0-10, is that
"header exchange type" support is optional.   Having optional bits in a spec
is bad, especially when they are the bits I want, and rabbit doesn't
implement them :-)

I found the FAQ explanation that though fanout/topic/direct are successive
specializations, having it in the spec permits broker side optimizations
unconvincing.  If people keep bringing it up, then maybe it's a sign that
the spec is doing something that violates the principle of least surprise.
The broker could just perform optimizations on the bindings in place and not
clutter up the standard.  The really general thing to do is the header type,
using a matching syntax.

Nor do I grasp why an exchange is anything special.   The exchange name
could easily be the first element of the routing key to apply the pattern
to.  One can bind to all exchanges or a pattern of exchanges, rather than
having to specify each exchange individually.  If you make an exchange name
part of the binding key, you could even add the queue to the end of it, so
you get binding patterns that look like:

bind.add <exchange>.<topic>.<sub-topic>....<queue>   to <queue>

and bindings become stand-alone entities, potentially with permissions,
separate from exchanges and queues. Bindings essentially become entries in a
global routing table.   All the Exchange types naturally specialize from
it.  the above example is obviously topic routing, below are the others.

<exchange>.#   <-- fanout
<exchange>.<random stuff>.   <-- header routing, trailing dot means last
element not a queue.
<exchange>.<queue>             <-- direct: note, no trailing dot --> the
last item is a queue.

Lastly, the pattern matching is a bit too simple. would really prefer the
ability to use full regular expressions, rather than just word matching.
of course then '.' becomes a significant symbol and you want to use
something else as a separator.  ':' is a good choice.   On the other hand,
going through long lists of regular expression evaluations can kill
performance.

and now for something completely different...

The switching system I'm used to is actually remarkably similar to the AMQP
model.  It has exactly the same concept of exchanges (called receivers), and
queues (called senders)
but has much more flexible/powerful matching/routing, while retaining
sufficient (for my application!) performance.   In this other MSS, you
define, using full regular expressions, a series of key_extraction bindings
for each exchange.  The first matching extraction derives a routing key for
the message.  You then look up the derived key in a table (associative array
in python, quite fast lookup) and it gives you a list of queues to route to
(what do you call that... multiple direct routing?).  We have a only two
such tables for a few dozen exchanges, but one can use per exchange tables
if desired, and regular expressions can be used there as well.   Once the
messages' queues are selected, the queue specific bindings are applied to
winnow down further.

The above may sound complicated, but it is the only thing that could achieve
the generality we needed, and the speed is good enough (if you don't need
all the various bindings, then just have a null set of them and there should
be no performance penalty.)

Does anyone else use complicated routing like us?  Does it sound like
something that AMQP might get to later?





On Sun, Nov 9, 2008 at 1:19 PM, Peter Silva <Peter.A.Silva at gmail.com> wrote:

> cool!
>
>
>
> On Sun, Nov 9, 2008 at 12:55 PM, Barry Pederson <bp at barryp.org> wrote:
>
>> Ben Hood wrote:
>>
>>> Peter,
>>>
>>> On Sat, Nov 8, 2008 at 7:29 PM, Peter Silva <Peter.A.Silva at gmail.com>
>>> wrote:
>>>
>>>> That's strange... maybe I'm just getting confused by
>>>> a client code... Here is an example from the demo in py-amqplib...
>>>>
>>>>  ch.basic_publish(msg, EXCHANGE_NAME, routing_key=topic)
>>>>
>>>> the 'routing_key' in this api, afaict, is one of three keywords: topic,
>>>> fanout, direct.   what is called exchange_type in the AMQP spec.
>>>>
>>>
>>> Are you referring to amqp_clock.py?
>>>
>>> If so, I think that the topic is a the name of a string variable:
>>>
>>> TOPIC_PATTERN = '%Y.%m.%d.%w.%H.%M' # Python datetime.strftime() pattern
>>> .....
>>> topic = now.strftime(TOPIC_PATTERN)
>>> ch.basic_publish(msg, EXCHANGE_NAME, routing_key=topic)
>>>
>>
>> Peter:
>>
>> I can see where that could be a bit confusing to have a variable with the
>> same name as an exchange type.
>>
>> I've updated the example in Mercurial to use a different variable name so
>> it now says:
>>
>>  ...
>>  msg_topic = now.strftime(TOPIC_PATTERN)
>>  ch.basic_publish(msg, EXCHANGE_NAME, routing_key=msg_topic)
>>
>>        Barry
>>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20081110/58ee4f6f/attachment.htm 

From holger at wizards.de  Tue Nov 11 05:00:10 2008
From: holger at wizards.de (=?ISO-8859-1?Q?Holger_Hoffst=E4tte?=)
Date: Tue, 11 Nov 2008 06:00:10 +0100
Subject: [rabbitmq-discuss] Stopping
In-Reply-To: <1bf8be120811102041w30606ea6qbd7281b0ed851cc@mail.gmail.com>
References: <18712.23836.825642.466271@jon.es>
	<4918673B.9060202@lshift.net>	<18712.26855.421843.91925@jon.es>	<6c2563b20811101117h59015164pa2f867b6ae8e9c7d@mail.gmail.com>	<1bf8be120811102038h2d358dc9j39eaa8ed23f1c8be@mail.gmail.com>
	<1bf8be120811102041w30606ea6qbd7281b0ed851cc@mail.gmail.com>
Message-ID: <4919115A.3010608@wizards.de>

Anthony wrote:
> Arguably speaking, if the service is started by Rabbit, it should be
> stopped by Rabbit, no? ... Or is the same instance potentially used by
> other Erlang apps?

Yes, epmd is used by other erlang apps as well and is harmless, you can
keep it running.

-h



From holger at wizards.de  Tue Nov 11 05:22:57 2008
From: holger at wizards.de (=?ISO-8859-1?Q?Holger_Hoffst=E4tte?=)
Date: Tue, 11 Nov 2008 06:22:57 +0100
Subject: [rabbitmq-discuss] Stopping
In-Reply-To: <1bf8be120811102107w34a3981bwcc61635c361792da@mail.gmail.com>
References: <18712.23836.825642.466271@jon.es> <4918673B.9060202@lshift.net>	
	<18712.26855.421843.91925@jon.es>	
	<6c2563b20811101117h59015164pa2f867b6ae8e9c7d@mail.gmail.com>	
	<1bf8be120811102038h2d358dc9j39eaa8ed23f1c8be@mail.gmail.com>	
	<1bf8be120811102041w30606ea6qbd7281b0ed851cc@mail.gmail.com>	
	<4919115A.3010608@wizards.de>
	<1bf8be120811102107w34a3981bwcc61635c361792da@mail.gmail.com>
Message-ID: <491916B1.9000309@wizards.de>


Please always reply to the list..

Anthony wrote:
> If I want to gracefully shut down epmd, how does one do it?
> 
> Or is a kill in order?

The man page says: epmd -kill, though manual kill works fine too - there's
nothing that gets lost, provided you don't have any erlang apps running
any longer.

-h



From 0x6e6562 at gmail.com  Tue Nov 11 08:52:48 2008
From: 0x6e6562 at gmail.com (Ben Hood)
Date: Tue, 11 Nov 2008 08:52:48 +0000
Subject: [rabbitmq-discuss] whether the weather is right.
In-Reply-To: <4442b4720811101754g50f9b7ebtb6916ce7101d7705@mail.gmail.com>
References: <4918AFB8.8050509@ec.gc.ca>
	<269388e30811101652g7b20b24bi1d706f8653c2df4e@mail.gmail.com>
	<4442b4720811101754g50f9b7ebtb6916ce7101d7705@mail.gmail.com>
Message-ID: <269388e30811110052w3e215bedv57543526ed2450c0@mail.gmail.com>

Peter,

On Tue, Nov 11, 2008 at 1:54 AM, Peter Silva <Peter.A.Silva at gmail.com> wrote:
> the context was to match behaviour of another system, where the equivalent
> of bindings are set by an administrator.  The purpose is to permit some
> recipients
> access to some messages arriving on an exchange, but not others.
>
> The proposal I got was to have a separate application create the queues, and
> bindings, and just have the producers and consumers connect.   That will
> work fine, provided that the consumers have no permission to modify
> bindings.
>
> Is that an easy/standard thing to do with rabbit?

All of the functionality you mention is available from within a client
library, including the ability to modify bindings. ATM Rabbit does not
have any access restriction mechanism surrounding the modification of
entities (exchanges, queues and bindings) within a virtual host. For
your application, I would suggest that you name your exchanges such
that they would be unguessable by anybody other than the
administrator. This is security through obscurity, but it is mildly
reminiscent of security capabilities (see separate discussion topics
on capabilities).

HTH,

Ben



From 0x6e6562 at gmail.com  Tue Nov 11 08:57:59 2008
From: 0x6e6562 at gmail.com (Ben Hood)
Date: Tue, 11 Nov 2008 08:57:59 +0000
Subject: [rabbitmq-discuss] Stopping
In-Reply-To: <491916B1.9000309@wizards.de>
References: <18712.23836.825642.466271@jon.es> <4918673B.9060202@lshift.net>
	<18712.26855.421843.91925@jon.es>
	<6c2563b20811101117h59015164pa2f867b6ae8e9c7d@mail.gmail.com>
	<1bf8be120811102038h2d358dc9j39eaa8ed23f1c8be@mail.gmail.com>
	<1bf8be120811102041w30606ea6qbd7281b0ed851cc@mail.gmail.com>
	<4919115A.3010608@wizards.de>
	<1bf8be120811102107w34a3981bwcc61635c361792da@mail.gmail.com>
	<491916B1.9000309@wizards.de>
Message-ID: <269388e30811110057p27a21b29j1867e7764fc425e0@mail.gmail.com>

Holger,

On Tue, Nov 11, 2008 at 5:22 AM, Holger Hoffst?tte <holger at wizards.de> wrote:
> The man page says: epmd -kill, though manual kill works fine too - there's
> nothing that gets lost, provided you don't have any erlang apps running
> any longer.

The guys at ejabberd have an FAQ about epmd: http://www.ejabberd.im/epmd

Ben



From 0x6e6562 at gmail.com  Tue Nov 11 11:35:31 2008
From: 0x6e6562 at gmail.com (Ben Hood)
Date: Tue, 11 Nov 2008 11:35:31 +0000
Subject: [rabbitmq-discuss] Exchanges, Routing, and AMQP
In-Reply-To: <4442b4720811102042s580f7c4ei222cf482ac7ed1fb@mail.gmail.com>
References: <8f10a9e00810200801k6c3040e3w568a9be9d062ff74@mail.gmail.com>
	<8f10a9e00810210940x2991d29fidd942b75af333947@mail.gmail.com>
	<4901C714.7080103@lshift.net>
	<8f10a9e00810250511p2f350327l3e15cc66614d2532@mail.gmail.com>
	<269388e30811081041i17102151qb4ec7760c6b81b3f@mail.gmail.com>
	<4442b4720811081129x7f4c108fj9a7e187eb95f5520@mail.gmail.com>
	<269388e30811081215mb421a1bhb192dbfacd71fc82@mail.gmail.com>
	<4917240E.1090202@barryp.org>
	<4442b4720811091019k5553fcd4g37467f04556c766c@mail.gmail.com>
	<4442b4720811102042s580f7c4ei222cf482ac7ed1fb@mail.gmail.com>
Message-ID: <269388e30811110335k65c0c5f6q79182327237a0f8c@mail.gmail.com>

Peter,

On Tue, Nov 11, 2008 at 4:42 AM, Peter Silva <Peter.A.Silva at gmail.com> wrote:
> I found the FAQ explanation that though fanout/topic/direct are successive
> specializations, having it in the spec permits broker side optimizations
> unconvincing.  If people keep bringing it up, then maybe it's a sign that
> the spec is doing something that violates the principle of least surprise.

In general you may have a point, if after closer inspection the
ultimate reason for surprise is counterintuitive for many people.

> The broker could just perform optimizations on the bindings in place and not
> clutter up the standard.  The really general thing to do is the header type,
> using a matching syntax.

Fine, but it's one thing to specify something and another to actually
implement it. Whilst probably not being rocket science I don't think
that implementing that the headers exchange in a scalable fashion is
as straight forward as you infer.

> Nor do I grasp why an exchange is anything special.   The exchange name
> could easily be the first element of the routing key to apply the pattern
> to.  One can bind to all exchanges or a pattern of exchanges, rather than
> having to specify each exchange individually.

This discussion (as an extension to the thread Kirk started) is going
on too long. If defering the routing type to the bindings is as
trivial as you maintain, then please enlighten me with a proof of
concept written in a language of your choice. It would have not have
to be AMQP specific, just something that shows the basr fundamental
routing lookup mechanism based on the data structures you are
proposing.

Code speaks louder than words and I would love to be proven wrong.

> On the other hand,
> going through long lists of regular expression evaluations can kill
> performance.

:-)

> Does anyone else use complicated routing like us?  Does it sound like
> something that AMQP might get to later?

Regex exchanges have been discussed before and it would be reasonably
straight forward to implement, it would proabably look like the
current topic exchange. As you indicate, unless you something really
funky with your index, this would incur a linear scan of the bindings.

Ben



From 0x6e6562 at gmail.com  Tue Nov 11 12:05:20 2008
From: 0x6e6562 at gmail.com (Ben Hood)
Date: Tue, 11 Nov 2008 12:05:20 +0000
Subject: [rabbitmq-discuss] Flow Control
In-Reply-To: <6c2563b20811101703t75d8fa50i6bf6a18df881b427@mail.gmail.com>
References: <269388e30811090813h2df62980ib722b4816c60422d@mail.gmail.com>
	<6c2563b20811091058r1ac35570n1ea716ee6995b344@mail.gmail.com>
	<269388e30811091428t8eabd21l10e61a3bd451037b@mail.gmail.com>
	<6c2563b20811091500o1c242b54nbd5e11d46811f73a@mail.gmail.com>
	<269388e30811100724r64614b89lb28c76f6ad102760@mail.gmail.com>
	<6c2563b20811100818u1f744d21m784147a4f046217a@mail.gmail.com>
	<269388e30811100936m22335278lb21c0c3ae18228b0@mail.gmail.com>
	<6c2563b20811101056i2d563338u40af40eefde25c98@mail.gmail.com>
	<269388e30811101648j7eed31edj793a570dd1922fc5@mail.gmail.com>
	<6c2563b20811101703t75d8fa50i6bf6a18df881b427@mail.gmail.com>
Message-ID: <269388e30811110405g39d86ad4y297c3abe5520a967@mail.gmail.com>

Ed,

On Tue, Nov 11, 2008 at 1:03 AM, Edwin Fine
<rabbitmq-discuss_efine at usa.net> wrote:
> I have to be really careful how I ask you questions, I can see that :)

Sorry for being so tempermental :-)

> I should have phrased it like this, I suppose: How do you envisage the
> consumer application will call the client when the client DOES support
> initiating a channel.flow command?

Probably in the way you indicated above, should we implement the
handling of this in the server.

Having said this, for this scenario you may be more interested in the
basic.qos command (which in Rabbit is vaporware as well).

Ben



From vinorasmus at gmail.com  Tue Nov 11 15:25:55 2008
From: vinorasmus at gmail.com (Gavin Bong)
Date: Tue, 11 Nov 2008 23:25:55 +0800
Subject: [rabbitmq-discuss] Connecting over a highly unreliable connection
Message-ID: <33784a0c0811110725hcb534bcxa20307b8288fe0aa@mail.gmail.com>

Hi,

I'm trying to connect to a rabbitmq server on a line that has 30% drop
packets and average ping times of around 350ms.

I get successfull connections in 6 our of 10 consecutive tries. And I
get a few missed heartbeat exceptions.

Is there a rule of thumb of how to set the heartbeat ? Currently it is
set to the default, which is 3 seconds.
In any case, what's the actual definition of the heartbeat parameter ?
Does it mean that we expect some packets to roundtrip or replies to
come back in that duration ?

Thanks

Gavin



From matthias at lshift.net  Tue Nov 11 15:44:04 2008
From: matthias at lshift.net (Matthias Radestock)
Date: Tue, 11 Nov 2008 15:44:04 +0000
Subject: [rabbitmq-discuss] Connecting over a highly unreliable
	connection
In-Reply-To: <33784a0c0811110725hcb534bcxa20307b8288fe0aa@mail.gmail.com>
References: <33784a0c0811110725hcb534bcxa20307b8288fe0aa@mail.gmail.com>
Message-ID: <4919A844.5070701@lshift.net>

Gavin,

Gavin Bong wrote:
> In any case, what's the actual definition of the heartbeat parameter ?
> Does it mean that we expect some packets to roundtrip or replies to
> come back in that duration ?

Here is the current draft of the heartbeat logic taken from the upcoming 
AMQP 0-9-1 spec:

<quote>

Heartbeat frames tell the recipient that the sender is still alive.  The 
rate and timing of heartbeat frames is negotiated during connection tuning.

Guidelines for implementers:
- Heartbeat frames MUST have a channel number of zero.  A peer that 
receives an invalid heartbeat frame MUST raise a connection exception 
with reply code 501 (frame error).

- If the peer does not support heartbeating it MUST discard the 
heartbeat frame without signalling any error or fault.

- The client should start sending heartbeats after receiving a 
Connection.Tune method, and start monitoring heartbeats after receiving 
Connection.Open.  The server should start sending and monitoring 
heartbeats after receiving Connection.Tune-Ok.

- The peer should make a best effort to send heartbeats at specified 
intervals. Heartbeats can be sent at any time. Any sent octet is a valid 
substitute for a heartbeat, thus heartbeats only have to be sent if no 
non-heartbeat AMQP traffic is sent for longer than one heartbeat 
interval. If a peer detects no incoming traffic (i.e. received octets) 
for two heartbeat intervals or longer, it should close the connection 
without following the Connection.Close/Close-Ok handshaking, and log an 
error.

- Heartbeating should continue until the connection socket is closed, 
including during and after Connection.Close/Close-Ok handshaking.

</quote>

HTH,

Matthias.



From alexis.richardson at cohesiveft.com  Tue Nov 11 16:17:29 2008
From: alexis.richardson at cohesiveft.com (Alexis Richardson)
Date: Tue, 11 Nov 2008 16:17:29 +0000
Subject: [rabbitmq-discuss] Exchanges, Routing, and AMQP
In-Reply-To: <269388e30811110335k65c0c5f6q79182327237a0f8c@mail.gmail.com>
References: <8f10a9e00810200801k6c3040e3w568a9be9d062ff74@mail.gmail.com>
	<4901C714.7080103@lshift.net>
	<8f10a9e00810250511p2f350327l3e15cc66614d2532@mail.gmail.com>
	<269388e30811081041i17102151qb4ec7760c6b81b3f@mail.gmail.com>
	<4442b4720811081129x7f4c108fj9a7e187eb95f5520@mail.gmail.com>
	<269388e30811081215mb421a1bhb192dbfacd71fc82@mail.gmail.com>
	<4917240E.1090202@barryp.org>
	<4442b4720811091019k5553fcd4g37467f04556c766c@mail.gmail.com>
	<4442b4720811102042s580f7c4ei222cf482ac7ed1fb@mail.gmail.com>
	<269388e30811110335k65c0c5f6q79182327237a0f8c@mail.gmail.com>
Message-ID: <167204d20811110817k63451734pc3fdf90980aeb1f1@mail.gmail.com>

All,

Some ideas for simplifying the exchange-binding model to address (NPI)
issues raised by eg Kirk, are being looked at for AMQP 1.0.  Although
we as a community are talking about code - and this is good - please
keep the use cases coming as people working on the spec will benefit
from them and may jump in.

Peter, in relation to routing patterns for headers or other content,
or indeed generalised active queries: the aim is to keep the core use
cases compact so that a reader can grok the spec in one or two reads.
Extensibility and pluggability and layering are hence the get-out for
enabling more cases while keeping a simple core.

What is wrong with extensible protocols?  Implementors may effectively
'fork' them by specialising in different add-ons.  But then these are
not ubiquitous (or even prevalent) and so do not get as much use.  So
there really is an incentive for implementors to make sure the *right*
core is there for widespread adoption - favouring a simple core.

In the case of RabbitMQ extensions a neat trick is to use the embedded
client to filter and relay in a 'smart' way, and process messages
without an extra network hop.  This is good.

alexis


On Tue, Nov 11, 2008 at 11:35 AM, Ben Hood <0x6e6562 at gmail.com> wrote:
> Peter,
>
> On Tue, Nov 11, 2008 at 4:42 AM, Peter Silva <Peter.A.Silva at gmail.com> wrote:
>> I found the FAQ explanation that though fanout/topic/direct are successive
>> specializations, having it in the spec permits broker side optimizations
>> unconvincing.  If people keep bringing it up, then maybe it's a sign that
>> the spec is doing something that violates the principle of least surprise.
>
> In general you may have a point, if after closer inspection the
> ultimate reason for surprise is counterintuitive for many people.
>
>> The broker could just perform optimizations on the bindings in place and not
>> clutter up the standard.  The really general thing to do is the header type,
>> using a matching syntax.
>
> Fine, but it's one thing to specify something and another to actually
> implement it. Whilst probably not being rocket science I don't think
> that implementing that the headers exchange in a scalable fashion is
> as straight forward as you infer.
>
>> Nor do I grasp why an exchange is anything special.   The exchange name
>> could easily be the first element of the routing key to apply the pattern
>> to.  One can bind to all exchanges or a pattern of exchanges, rather than
>> having to specify each exchange individually.
>
> This discussion (as an extension to the thread Kirk started) is going
> on too long. If defering the routing type to the bindings is as
> trivial as you maintain, then please enlighten me with a proof of
> concept written in a language of your choice. It would have not have
> to be AMQP specific, just something that shows the basr fundamental
> routing lookup mechanism based on the data structures you are
> proposing.
>
> Code speaks louder than words and I would love to be proven wrong.
>
>> On the other hand,
>> going through long lists of regular expression evaluations can kill
>> performance.
>
> :-)
>
>> Does anyone else use complicated routing like us?  Does it sound like
>> something that AMQP might get to later?
>
> Regex exchanges have been discussed before and it would be reasonably
> straight forward to implement, it would proabably look like the
> current topic exchange. As you indicate, unless you something really
> funky with your index, this would incur a linear scan of the bindings.
>
> Ben
>
> _______________________________________________
> rabbitmq-discuss mailing list
> rabbitmq-discuss at lists.rabbitmq.com
> http://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss
>



From alexis.richardson at cohesiveft.com  Tue Nov 11 20:53:18 2008
From: alexis.richardson at cohesiveft.com (Alexis Richardson)
Date: Tue, 11 Nov 2008 20:53:18 +0000
Subject: [rabbitmq-discuss] AMQP paper
In-Reply-To: <4919ED72.5020200@imatix.com>
References: <4919ED72.5020200@imatix.com>
Message-ID: <167204d20811111253j7f4b4a8ev6999d22014f48c9b@mail.gmail.com>

Hi all,

You are invited to enjoy the following survey paper on AMQP -

http://www.cse.ohio-state.edu/~narravul/papers/subramoni_whpcf08.pdf

RabbitMQ features as - alas - only an aside.  Yet the paper still
contains a few interesting points.  Comments welcomed.

Cheers,

alexis



From vinorasmus at gmail.com  Wed Nov 12 03:11:36 2008
From: vinorasmus at gmail.com (Gavin Bong)
Date: Wed, 12 Nov 2008 11:11:36 +0800
Subject: [rabbitmq-discuss] Connecting over a highly unreliable
	connection
In-Reply-To: <4919A844.5070701@lshift.net>
References: <33784a0c0811110725hcb534bcxa20307b8288fe0aa@mail.gmail.com>
	<4919A844.5070701@lshift.net>
Message-ID: <33784a0c0811111911l45ea9fe2n6f10a6c9eb2616ea@mail.gmail.com>

Matthias,

Thanks for the explanation. It helps.

Regards,

Gavin

2008/11/11 Matthias Radestock <matthias at lshift.net>:
> Here is the current draft of the heartbeat logic taken from the upcoming
> AMQP 0-9-1 spec:



From alexis.richardson at cohesiveft.com  Wed Nov 12 07:59:06 2008
From: alexis.richardson at cohesiveft.com (Alexis Richardson)
Date: Wed, 12 Nov 2008 07:59:06 +0000
Subject: [rabbitmq-discuss] Using RabbitMQ Beyond Queueing
Message-ID: <167204d20811112359m37771b40m2e403e65535e09d9@mail.gmail.com>

A neat summary article by Dmitriy, which touches on some of the use
cases people ask about on this list..

http://somic.org/2008/11/11/using-rabbitmq-beyond-queueing/



From 0x6e6562 at gmail.com  Wed Nov 12 10:51:53 2008
From: 0x6e6562 at gmail.com (Ben Hood)
Date: Wed, 12 Nov 2008 10:51:53 +0000
Subject: [rabbitmq-discuss]  Exchanges, Routing, and AMQP
In-Reply-To: <4442b4720811111412t1b193ec4p7b6e60886afb28c8@mail.gmail.com>
References: <8f10a9e00810200801k6c3040e3w568a9be9d062ff74@mail.gmail.com>
	<8f10a9e00810250511p2f350327l3e15cc66614d2532@mail.gmail.com>
	<269388e30811081041i17102151qb4ec7760c6b81b3f@mail.gmail.com>
	<4442b4720811081129x7f4c108fj9a7e187eb95f5520@mail.gmail.com>
	<269388e30811081215mb421a1bhb192dbfacd71fc82@mail.gmail.com>
	<4917240E.1090202@barryp.org>
	<4442b4720811091019k5553fcd4g37467f04556c766c@mail.gmail.com>
	<4442b4720811102042s580f7c4ei222cf482ac7ed1fb@mail.gmail.com>
	<269388e30811110335k65c0c5f6q79182327237a0f8c@mail.gmail.com>
	<4442b4720811111412t1b193ec4p7b6e60886afb28c8@mail.gmail.com>
Message-ID: <269388e30811120251y67454c37x9586ac6135170764@mail.gmail.com>

Hey Peter,

I'm just keeping the list in the loop.

Ben


---------- Forwarded message ----------
From: Peter Silva <Peter.A.Silva at gmail.com>
Date: Tue, Nov 11, 2008 at 10:12 PM
Subject: Re: [rabbitmq-discuss] Exchanges, Routing, and AMQP
To: Ben Hood <0x6e6562 at gmail.com>


On Tue, Nov 11, 2008 at 6:35 AM, Ben Hood <0x6e6562 at gmail.com> wrote:
>
> Peter,
>
> On Tue, Nov 11, 2008 at 4:42 AM, Peter Silva <Peter.A.Silva at gmail.com> wrote:
>
> This discussion (as an extension to the thread Kirk started) is going
> on too long. If defering the routing type to the bindings is as
> trivial as you maintain, then please enlighten me with a proof of
> concept written in a language of your choice. It would have not have
> to be AMQP specific, just something that shows the basr fundamental
> routing lookup mechanism based on the data structures you are
> proposing.
>
> Code speaks louder than words and I would love to be proven wrong.

Funny you should ask!

I would really appreciate someone who understands switching having a
look at our switch.  We've only used it internally so far, but I
whipped up some .deb's in honour of your request:

http://metpx.sf.net

It's a third generation switch, build from blackbox re-engineering of
the other two generations.  There is developer documentation to get a
loopback configuration working for testing, it's very weather oriented
right now.   We've been working on it for a few years, but the weather
messaging community is, well, kind of scattered, so the installed base
is 1.  It's a very enthusiastic 1, mind you :-)

concept mapping:

AMQP           MetPX
---------            -----------
Exchange      Receiver
Queue           Sender
Binding          Routing

bindings work with two verbs, accept and reject.
We differentiate between regex's and direct mappings for efficiency
reasons (use a table for the direct ones.)
and yeah, we're stuck with a linear search through regex's, which we
try to minimize.

We didn't do routing that matches to exchanges, but almost all the
exchanges use the same routing tables. It implements the rest of the
routing algorithms I have described in python.  Ruthless simplicity
meant that our first database was done using 1 file per message on a
raw file system.  It turns out we can deliver hundreds of messages per
second with that storage and FTP, which was good enough for us.

The packaging is kind of rough, internal people use it a little
differently.  We've been using debian packages for a few months, but
file layout is a little different.

The routing is actually a very small part of the code a few hundred
lines at most.  Most of it is protocol drivers.

The reason for me asking these questions is to understand how to add
AMQP support to metpx.

ready to answer questions, on or offline.


>
>
> > On the other hand,
> > going through long lists of regular expression evaluations can kill
> > performance.
>
> :-)

the key is minimizing the number that have to be searched for each
routing event.   If you treasure speed over flexibility, then just
don't put any regex's in your routing.

Another difference in the design point, is that metpx came from
dealing with existing exchanges, and did not have the luxury of
defining it's own key syntax.   Data producers are often limited in
the names they can supply, and consumers with what they receive
(remember, we deal with files, our keys are essentially file names.)

If we insisted on file naming conventions, we ended up having to
implement separate glue elsewhere to rename things we received into
the file naming convention the switch required.
  It made sense to add regex comprehension to the switch itself to
derive routing keys from the arbitrary file names we would receive.



From 0x6e6562 at gmail.com  Wed Nov 12 11:03:06 2008
From: 0x6e6562 at gmail.com (Ben Hood)
Date: Wed, 12 Nov 2008 11:03:06 +0000
Subject: [rabbitmq-discuss] Exchanges, Routing, and AMQP
In-Reply-To: <4442b4720811111412t1b193ec4p7b6e60886afb28c8@mail.gmail.com>
References: <8f10a9e00810200801k6c3040e3w568a9be9d062ff74@mail.gmail.com>
	<8f10a9e00810250511p2f350327l3e15cc66614d2532@mail.gmail.com>
	<269388e30811081041i17102151qb4ec7760c6b81b3f@mail.gmail.com>
	<4442b4720811081129x7f4c108fj9a7e187eb95f5520@mail.gmail.com>
	<269388e30811081215mb421a1bhb192dbfacd71fc82@mail.gmail.com>
	<4917240E.1090202@barryp.org>
	<4442b4720811091019k5553fcd4g37467f04556c766c@mail.gmail.com>
	<4442b4720811102042s580f7c4ei222cf482ac7ed1fb@mail.gmail.com>
	<269388e30811110335k65c0c5f6q79182327237a0f8c@mail.gmail.com>
	<4442b4720811111412t1b193ec4p7b6e60886afb28c8@mail.gmail.com>
Message-ID: <269388e30811120303y2fbafcbejfdcdb715a19bfc7c@mail.gmail.com>

Peter,

On Tue, Nov 11, 2008 at 10:12 PM, Peter Silva <Peter.A.Silva at gmail.com> wrote:
> I would really appreciate someone who understands switching having a look at
> our switch.  We've only used it internally so far, but I whipped up some
> .deb's in honour of your request:

I don't know If I'm the best qualified person to do this. Due to the
fact however that I have a large backlog of Rabbit specific items to
get through, this will have to be appended to that queue, so I won't
be able to look at this straight away. You might get a response from
somebody else on the list, hence why I forwarded this mail.

> The reason for me asking these questions is to understand how to add AMQP
> support to metpx.

Are you more interested in implementing some form of the AMQP
model/codec in metpx or are you interested in being a consumer of AMQP
(e.g. via Rabbit)?

If the former is the case, then maybe approaching the AMQP working
group might prove more fruitful that speaking to an implementer of
AMQP.

Ben



From Peter.A.Silva at gmail.com  Wed Nov 12 11:48:18 2008
From: Peter.A.Silva at gmail.com (Peter Silva)
Date: Wed, 12 Nov 2008 06:48:18 -0500
Subject: [rabbitmq-discuss] Exchanges, Routing, and AMQP
In-Reply-To: <269388e30811120303y2fbafcbejfdcdb715a19bfc7c@mail.gmail.com>
References: <8f10a9e00810200801k6c3040e3w568a9be9d062ff74@mail.gmail.com>
	<269388e30811081041i17102151qb4ec7760c6b81b3f@mail.gmail.com>
	<4442b4720811081129x7f4c108fj9a7e187eb95f5520@mail.gmail.com>
	<269388e30811081215mb421a1bhb192dbfacd71fc82@mail.gmail.com>
	<4917240E.1090202@barryp.org>
	<4442b4720811091019k5553fcd4g37467f04556c766c@mail.gmail.com>
	<4442b4720811102042s580f7c4ei222cf482ac7ed1fb@mail.gmail.com>
	<269388e30811110335k65c0c5f6q79182327237a0f8c@mail.gmail.com>
	<4442b4720811111412t1b193ec4p7b6e60886afb28c8@mail.gmail.com>
	<269388e30811120303y2fbafcbejfdcdb715a19bfc7c@mail.gmail.com>
Message-ID: <4442b4720811120348r4b79bfey17862abd83e35e1a@mail.gmail.com>

On Wed, Nov 12, 2008 at 6:03 AM, Ben Hood <0x6e6562 at gmail.com> wrote:

> Peter,
>
> On Tue, Nov 11, 2008 at 10:12 PM, Peter Silva <Peter.A.Silva at gmail.com>
> wrote:
> > I would really appreciate someone who understands switching having a look
> at
> > our switch.  We've only used it internally so far, but I whipped up some
> > .deb's in honour of your request:
>
> I don't know If I'm the best qualified person to do this. Due to the
> fact however that I have a large backlog of Rabbit specific items to
> get through, this will have to be appended to that queue, so I won't
> be able to look at this straight away. You might get a response from
> somebody else on the list, hence why I forwarded this mail.
>

um... ok...
I guess one should't say 'show me the code' if one isn't prepared to look at
it.  OTOH, being presented with the whole pile is a bit much to chew off...
maybe it can be easier...

if you install the package (It doesn't run by default) and do a man of
pxReceiver, there is a section 'PRODUCT ROUTING OPTIONS' which describes the
algorithm from the AMQP 'exchange' point of view in a paragraph or two.   In
the pxSender man page, there is an analogous section, called 'PRODUCT
SELECTION OPTIONS' which is two paragraphs.    The code implements what is
in the two sections, and that's all.

but hey, this is a rabbit list, I only brought it up in order to share
impressions about how the bindings are defined in AMQP.



> > The reason for me asking these questions is to understand how to add AMQP
> > support to metpx.
>
> Are you more interested in implementing some form of the AMQP
> model/codec in metpx or are you interested in being a consumer of AMQP
> (e.g. via Rabbit)?


I'm hoping one of my developers can do a producer to speak to rabbit.   I
would send a single, un-differentiated product stream, and pilot having a
few clients (internal first, external later) use the consumer of their
choice to acquire the messages.   I have a business need that no other
package (including metpx) currently fills, that rabbit seems, at first
blush, perfect for.

It is likely that we have to implement a consumer just to test the sender
with metpx.   Adding amqp service/broker functions doesn't seem like much of
a stretch, but there isn't a business case right now (rabbit exists!)  just
use what's there for what it's good for.

What could be in it for rabbit...
Does rabbit want some protocol drivers?  We have solid ones for FTP and
SFTP. I doubt you'd be interested in the others...  similarly to the way I
was looking at using rabbit to provide functionality that isn't in metpx.
rabbit might just want to use metpx as a realy sympathetic protocol driver.
  Just looking for win-win... ymmv.


>
> If the former is the case, then maybe approaching the AMQP working
> group might prove more fruitful that speaking to an implementer of
> AMQP.


I would, except when I went to the AMQP lists I could see, they were dead.
maybe I didn't find the right ones.  The action seems to be over here, plus
the whole routing thing was just an aside from reading the above, my aim is
what was described above.



>
>
> Ben
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20081112/7bd58849/attachment.htm 

From Peter.A.Silva at gmail.com  Wed Nov 12 11:54:59 2008
From: Peter.A.Silva at gmail.com (Peter Silva)
Date: Wed, 12 Nov 2008 06:54:59 -0500
Subject: [rabbitmq-discuss] Using RabbitMQ Beyond Queueing
In-Reply-To: <167204d20811112359m37771b40m2e403e65535e09d9@mail.gmail.com>
References: <167204d20811112359m37771b40m2e403e65535e09d9@mail.gmail.com>
Message-ID: <4442b4720811120354x48c6601frada949b1b471f714@mail.gmail.com>

read about no_ack=false...
you mean there is no window for acknowledgements?
you send one, wait for acknowledgment, then send the next?

latency will really kill bandwidth on long links.  was hoping that one could
send a large number of messages, and have them acknowledged later (like TCP
does.)

The AMQP spec seems to allow for that, I took it for granted that rabbit did
that....

On Wed, Nov 12, 2008 at 2:59 AM, Alexis Richardson <
alexis.richardson at cohesiveft.com> wrote:

> A neat summary article by Dmitriy, which touches on some of the use
> cases people ask about on this list..
>
> http://somic.org/2008/11/11/using-rabbitmq-beyond-queueing/
>
> _______________________________________________
> rabbitmq-discuss mailing list
> rabbitmq-discuss at lists.rabbitmq.com
> http://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20081112/2c2e492e/attachment.htm 

From alexis.richardson at cohesiveft.com  Wed Nov 12 12:18:02 2008
From: alexis.richardson at cohesiveft.com (Alexis Richardson)
Date: Wed, 12 Nov 2008 12:18:02 +0000
Subject: [rabbitmq-discuss] Exchanges, Routing, and AMQP
In-Reply-To: <4442b4720811120348r4b79bfey17862abd83e35e1a@mail.gmail.com>
References: <8f10a9e00810200801k6c3040e3w568a9be9d062ff74@mail.gmail.com>
	<4442b4720811081129x7f4c108fj9a7e187eb95f5520@mail.gmail.com>
	<269388e30811081215mb421a1bhb192dbfacd71fc82@mail.gmail.com>
	<4917240E.1090202@barryp.org>
	<4442b4720811091019k5553fcd4g37467f04556c766c@mail.gmail.com>
	<4442b4720811102042s580f7c4ei222cf482ac7ed1fb@mail.gmail.com>
	<269388e30811110335k65c0c5f6q79182327237a0f8c@mail.gmail.com>
	<4442b4720811111412t1b193ec4p7b6e60886afb28c8@mail.gmail.com>
	<269388e30811120303y2fbafcbejfdcdb715a19bfc7c@mail.gmail.com>
	<4442b4720811120348r4b79bfey17862abd83e35e1a@mail.gmail.com>
Message-ID: <167204d20811120418n1048f171ld3340138372bf442@mail.gmail.com>

Peter,

On Wed, Nov 12, 2008 at 11:48 AM, Peter Silva <Peter.A.Silva at gmail.com> wrote:
>
> but hey, this is a rabbit list, I only brought it up in order to share
> impressions about how the bindings are defined in AMQP.

And thank-you for doing so.  As I mentioned this issue is very
valuable for 1.0 -- of which I hope to be able to say more soon.


>> > The reason for me asking these questions is to understand how to add
>> > AMQP
>> > support to metpx.
>>
>> Are you more interested in implementing some form of the AMQP
>> model/codec in metpx or are you interested in being a consumer of AMQP
>> (e.g. via Rabbit)?
>
> I'm hoping one of my developers can do a producer to speak to rabbit.   I
> would send a single, un-differentiated product stream, and pilot having a
> few clients (internal first, external later) use the consumer of their
> choice to acquire the messages.   I have a business need that no other
> package (including metpx) currently fills, that rabbit seems, at first
> blush, perfect for.

Sounds most excellent :-)


> What could be in it for rabbit...
> Does rabbit want some protocol drivers?  We have solid ones for FTP and
> SFTP. I doubt you'd be interested in the others...

I am extremely interested in protocol drivers including file transfer.
 They are just .... useful!

As you may have noticed there are others - see the RabbitMQ universe
in the presentation here:
http://google-ukdev.blogspot.com/2008/09/rabbitmq-tech-talk-at-google-london.html



> rabbit might just want to use metpx as a realy sympathetic protocol driver.
>   Just looking for win-win... ymmv.

We often find unexpected benefits from providing adaptors.  Often it's
best to not predict and just put up an example and see what happens.

alexis




>>
>>
>> If the former is the case, then maybe approaching the AMQP working
>> group might prove more fruitful that speaking to an implementer of
>> AMQP.
>
> I would, except when I went to the AMQP lists I could see, they were dead.
> maybe I didn't find the right ones.  The action seems to be over here, plus
> the whole routing thing was just an aside from reading the above, my aim is
> what was described above.
>
>
>>
>>
>> Ben
>
>
> _______________________________________________
> rabbitmq-discuss mailing list
> rabbitmq-discuss at lists.rabbitmq.com
> http://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss
>
>



From Peter.A.Silva at gmail.com  Wed Nov 12 12:22:46 2008
From: Peter.A.Silva at gmail.com (Peter Silva)
Date: Wed, 12 Nov 2008 07:22:46 -0500
Subject: [rabbitmq-discuss] Fwd:  Exchanges, Routing, and AMQP
In-Reply-To: <4442b4720811111412t1b193ec4p7b6e60886afb28c8@mail.gmail.com>
References: <8f10a9e00810200801k6c3040e3w568a9be9d062ff74@mail.gmail.com>
	<8f10a9e00810250511p2f350327l3e15cc66614d2532@mail.gmail.com>
	<269388e30811081041i17102151qb4ec7760c6b81b3f@mail.gmail.com>
	<4442b4720811081129x7f4c108fj9a7e187eb95f5520@mail.gmail.com>
	<269388e30811081215mb421a1bhb192dbfacd71fc82@mail.gmail.com>
	<4917240E.1090202@barryp.org>
	<4442b4720811091019k5553fcd4g37467f04556c766c@mail.gmail.com>
	<4442b4720811102042s580f7c4ei222cf482ac7ed1fb@mail.gmail.com>
	<269388e30811110335k65c0c5f6q79182327237a0f8c@mail.gmail.com>
	<4442b4720811111412t1b193ec4p7b6e60886afb28c8@mail.gmail.com>
Message-ID: <4442b4720811120422t6d6f5e4fl5d366715540fb843@mail.gmail.com>

reply instead of reply to all...
Thank you ben...


On Tue, Nov 11, 2008 at 6:35 AM, Ben Hood <0x6e6562 at gmail.com> wrote:

> Peter,
>
> On Tue, Nov 11, 2008 at 4:42 AM, Peter Silva <Peter.A.Silva at gmail.com>
> wrote:
>
> This discussion (as an extension to the thread Kirk started) is going
> on too long. If defering the routing type to the bindings is as
> trivial as you maintain, then please enlighten me with a proof of
> concept written in a language of your choice. It would have not have
> to be AMQP specific, just something that shows the basr fundamental
> routing lookup mechanism based on the data structures you are
> proposing.
>
> Code speaks louder than words and I would love to be proven wrong.
>

Funny you should ask!

I would really appreciate someone who understands switching having a look at
our switch.  We've only used it internally so far, but I whipped up some
.deb's in honour of your request:

http://metpx.sf.net

It's a third generation switch, build from blackbox re-engineering of the
other two generations.  There is developer documentation to get a loopback
configuration working for testing, it's very weather oriented right now.
We've been working on it for a few years, but the weather messaging
community is, well, kind of scattered, so the installed base is 1.  It's a
very enthusiastic 1, mind you :-)

concept mapping:

AMQP           MetPX
---------            -----------
Exchange      Receiver
Queue           Sender
Binding          Routing

bindings work with two verbs, accept and reject.
We differentiate between regex's and direct mappings for efficiency reasons
(use a table for the direct ones.)
and yeah, we're stuck with a linear search through regex's, which we try to
minimize.

We didn't do routing that matches to exchanges, but almost all the exchanges
use the same routing tables. It implements the rest of the routing
algorithms I have described in python.  Ruthless simplicity meant that our
first database was done using 1 file per message on a raw file system.  It
turns out we can deliver hundreds of messages per second with that storage
and FTP, which was good enough for us.

The packaging is kind of rough, internal people use it a little
differently.  We've been using debian packages for a few months, but file
layout is a little different.

The routing is actually a very small part of the code a few hundred lines at
most.  Most of it is protocol drivers.

The reason for me asking these questions is to understand how to add AMQP
support to metpx.

ready to answer questions, on or offline.



>
> > On the other hand,
> > going through long lists of regular expression evaluations can kill
> > performance.
>
> :-)


the key is minimizing the number that have to be searched for each routing
event.   If you treasure speed over flexibility, then just don't put any
regex's in your routing.

Another difference in the design point, is that metpx came from dealing with
existing exchanges, and did not have the luxury of defining it's own key
syntax.   Data producers are often limited in the names they can supply, and
consumers with what they receive (remember, we deal with files, our keys are
essentially file names.)

If we insisted on file naming conventions, we ended up having to implement
separate glue elsewhere to rename things we received into the file naming
convention the switch required.
  It made sense to add regex comprehension to the switch itself to derive
routing keys from the arbitrary file names we would receive.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20081112/2f171d84/attachment.htm 

From 0x6e6562 at gmail.com  Wed Nov 12 12:30:29 2008
From: 0x6e6562 at gmail.com (Ben Hood)
Date: Wed, 12 Nov 2008 12:30:29 +0000
Subject: [rabbitmq-discuss] Exchanges, Routing, and AMQP
In-Reply-To: <4442b4720811120348r4b79bfey17862abd83e35e1a@mail.gmail.com>
References: <8f10a9e00810200801k6c3040e3w568a9be9d062ff74@mail.gmail.com>
	<4442b4720811081129x7f4c108fj9a7e187eb95f5520@mail.gmail.com>
	<269388e30811081215mb421a1bhb192dbfacd71fc82@mail.gmail.com>
	<4917240E.1090202@barryp.org>
	<4442b4720811091019k5553fcd4g37467f04556c766c@mail.gmail.com>
	<4442b4720811102042s580f7c4ei222cf482ac7ed1fb@mail.gmail.com>
	<269388e30811110335k65c0c5f6q79182327237a0f8c@mail.gmail.com>
	<4442b4720811111412t1b193ec4p7b6e60886afb28c8@mail.gmail.com>
	<269388e30811120303y2fbafcbejfdcdb715a19bfc7c@mail.gmail.com>
	<4442b4720811120348r4b79bfey17862abd83e35e1a@mail.gmail.com>
Message-ID: <269388e30811120430k3e4fa7cby2db4d9636cf317eb@mail.gmail.com>

Peter,

On Wed, Nov 12, 2008 at 11:48 AM, Peter Silva <Peter.A.Silva at gmail.com> wrote:
> um... ok...
> I guess one should't say 'show me the code' if one isn't prepared to look at
> it.

I didn't say that I wouldn't look at it, I just said that I have a lot
of things to do on Rabbit and need to spread my efforts to be fair to
eveybody :-)

> but hey, this is a rabbit list, I only brought it up in order to share
> impressions about how the bindings are defined in AMQP.

It's perfectly fine to discuss this on the Rabbit list, IMHO.

> What could be in it for rabbit...
> Does rabbit want some protocol drivers?  We have solid ones for FTP and
> SFTP. I doubt you'd be interested in the others...  similarly to the way I
> was looking at using rabbit to provide functionality that isn't in metpx.
> rabbit might just want to use metpx as a realy sympathetic protocol driver.
>   Just looking for win-win... ymmv.

This is good to know.

> I would, except when I went to the AMQP lists I could see, they were dead.
> maybe I didn't find the right ones.  The action seems to be over here, plus
> the whole routing thing was just an aside from reading the above, my aim is
> what was described above.

I can't help you with the AMQP lists either, I don't know who runs
them. By posting to this list, you might get an answer, if it's not
official.

Ben



From 0x6e6562 at gmail.com  Wed Nov 12 12:36:28 2008
From: 0x6e6562 at gmail.com (Ben Hood)
Date: Wed, 12 Nov 2008 12:36:28 +0000
Subject: [rabbitmq-discuss] Using RabbitMQ Beyond Queueing
In-Reply-To: <4442b4720811120354x48c6601frada949b1b471f714@mail.gmail.com>
References: <167204d20811112359m37771b40m2e403e65535e09d9@mail.gmail.com>
	<4442b4720811120354x48c6601frada949b1b471f714@mail.gmail.com>
Message-ID: <269388e30811120436q2efcd42ap55e069df0c11a1e8@mail.gmail.com>

Peter,

On Wed, Nov 12, 2008 at 11:54 AM, Peter Silva <Peter.A.Silva at gmail.com> wrote:
> read about no_ack=false...
> you mean there is no window for acknowledgements?
> you send one, wait for acknowledgment, then send the next?
>
> latency will really kill bandwidth on long links.  was hoping that one could
> send a large number of messages, and have them acknowledged later (like TCP
> does.)
>
> The AMQP spec seems to allow for that, I took it for granted that rabbit did
> that....

I don't *think* that Dmitriy was implying that there has to be a lock step.

This is what the protocol says about the basic.ack command:

"If set to 1, the delivery tag is treated as "up to and including", so
that the client can acknowledge multiple
messages with a single method. If set to zero, the delivery tag refers
to a single message. If the multiple
field is 1, and the delivery tag is zero, tells the server to
acknowledge all outstanding messages. "

HTH,

Ben



From Peter.A.Silva at gmail.com  Wed Nov 12 12:58:55 2008
From: Peter.A.Silva at gmail.com (Peter Silva)
Date: Wed, 12 Nov 2008 07:58:55 -0500
Subject: [rabbitmq-discuss] Using RabbitMQ Beyond Queueing
In-Reply-To: <269388e30811120436q2efcd42ap55e069df0c11a1e8@mail.gmail.com>
References: <167204d20811112359m37771b40m2e403e65535e09d9@mail.gmail.com>
	<4442b4720811120354x48c6601frada949b1b471f714@mail.gmail.com>
	<269388e30811120436q2efcd42ap55e069df0c11a1e8@mail.gmail.com>
Message-ID: <4442b4720811120458k3f7979a2p89f9241253226799@mail.gmail.com>

On Wed, Nov 12, 2008 at 7:36 AM, Ben Hood <0x6e6562 at gmail.com> wrote:

> Peter,
>
> On Wed, Nov 12, 2008 at 11:54 AM, Peter Silva <Peter.A.Silva at gmail.com>
> wrote:
> > read about no_ack=false...
> > you mean there is no window for acknowledgements?
> > you send one, wait for acknowledgment, then send the next?
> >
> > latency will really kill bandwidth on long links.  was hoping that one
> could
> > send a large number of messages, and have them acknowledged later (like
> TCP
> > does.)
> >
> > The AMQP spec seems to allow for that, I took it for granted that rabbit
> did
> > that....
>
> I don't *think* that Dmitriy was implying that there has to be a lock step.
>
> This is what the protocol says about the basic.ack command:
>
> "If set to 1, the delivery tag is treated as "up to and including", so
> that the client can acknowledge multiple
> messages with a single method. If set to zero, the delivery tag refers
> to a single message. If the multiple
> field is 1, and the delivery tag is zero, tells the server to
> acknowledge all outstanding messages. "
>
> HTH,
>

say you have a 5000 km. link.  you can fit oh... several hundred messages in
flight (on the fibre between the two points.)  It would be better to issue
periodic group acknowledgements, but single message acknowledgements would
work.  I don't get how 'acknowledge all outstanding messages'  works.  How
does the receiver know what is in-flight?
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20081112/9cb5a2e7/attachment.htm 

From alexis.richardson at cohesiveft.com  Wed Nov 12 13:03:37 2008
From: alexis.richardson at cohesiveft.com (Alexis Richardson)
Date: Wed, 12 Nov 2008 13:03:37 +0000
Subject: [rabbitmq-discuss] Using RabbitMQ Beyond Queueing
In-Reply-To: <4442b4720811120458k3f7979a2p89f9241253226799@mail.gmail.com>
References: <167204d20811112359m37771b40m2e403e65535e09d9@mail.gmail.com>
	<4442b4720811120354x48c6601frada949b1b471f714@mail.gmail.com>
	<269388e30811120436q2efcd42ap55e069df0c11a1e8@mail.gmail.com>
	<4442b4720811120458k3f7979a2p89f9241253226799@mail.gmail.com>
Message-ID: <167204d20811120503t54086365t8bcdfff286f2b7c7@mail.gmail.com>

On Wed, Nov 12, 2008 at 12:58 PM, Peter Silva <Peter.A.Silva at gmail.com> wrote:
> On Wed, Nov 12, 2008 at 7:36 AM, Ben Hood <0x6e6562 at gmail.com> wrote:
>
>> This is what the protocol says about the basic.ack command:
>>
>> "If set to 1, the delivery tag is treated as "up to and including", so
>> that the client can acknowledge multiple
>> messages with a single method. If set to zero, the delivery tag refers
>> to a single message. If the multiple
>> field is 1, and the delivery tag is zero, tells the server to
>> acknowledge all outstanding messages. "
>
> say you have a 5000 km. link.  you can fit oh... several hundred messages in
> flight (on the fibre between the two points.)  It would be better to issue
> periodic group acknowledgements, but single message acknowledgements would
> work.  I don't get how 'acknowledge all outstanding messages'  works.  How
> does the receiver know what is in-flight?

It doesn't need to - it is telling the server to do something based on
what the server believes.

Apologies - the spec(s) is (are) not always worded to prevent all
possible misinterpretations.

alexis



From dmitriy.samovskiy at cohesiveft.com  Wed Nov 12 15:45:25 2008
From: dmitriy.samovskiy at cohesiveft.com (Dmitriy Samovskiy)
Date: Wed, 12 Nov 2008 09:45:25 -0600
Subject: [rabbitmq-discuss] Using RabbitMQ Beyond Queueing
In-Reply-To: <167204d20811120503t54086365t8bcdfff286f2b7c7@mail.gmail.com>
References: <167204d20811112359m37771b40m2e403e65535e09d9@mail.gmail.com>	<4442b4720811120354x48c6601frada949b1b471f714@mail.gmail.com>	<269388e30811120436q2efcd42ap55e069df0c11a1e8@mail.gmail.com>	<4442b4720811120458k3f7979a2p89f9241253226799@mail.gmail.com>
	<167204d20811120503t54086365t8bcdfff286f2b7c7@mail.gmail.com>
Message-ID: <491AFA15.7060506@cohesiveft.com>



Alexis Richardson wrote:
> On Wed, Nov 12, 2008 at 12:58 PM, Peter Silva <Peter.A.Silva at gmail.com> wrote:

> 
> Apologies - the spec(s) is (are) not always worded to prevent all
> possible misinterpretations.
> 
Thanks Peter for pointing this out, and thanks to Ben and Alexis for detailed overview.

Unlike the spec, a blog post can easily be adjusted and re-worded :)
I rewrote it as follows (additions are marked with underscores).

Failover

In no_ack=false mode, a consumer must _eventually_ explicitly acknowledge receipt of each 
message, _individually or as a group (this does not mean that a message must be ack?ed 
before next one can be received)_. If a consumer disconnects without acknowledging, 
_unack?ed_ messages are automatically re-queued for another consumer. This helps achieve 
consumer failover in response to crashes or loss of network connectivity.



I think this sounds clearer now.

- Dmitriy



From yferrety at gmail.com  Thu Nov 13 12:57:07 2008
From: yferrety at gmail.com (ferrety ferrety)
Date: Thu, 13 Nov 2008 13:57:07 +0100
Subject: [rabbitmq-discuss] RabbitMQ starting problem on Ubuntu
Message-ID: <5327a2e30811130457l3679e07auc4a6663d5c1af313@mail.gmail.com>

Hi List,

I'm failing to start RabbitMQ on Ubuntu/7.10 (gutsy) due to a
"recovery" error (see below).

---------------------------------------------------------------------------------------
[...]
+ CLUSTER_CONFIG=
+ dirname /usr/lib/erlang/lib/rabbitmq-server-1.4.0/scripts/rabbitmq-server
+ erl -pa /usr/lib/erlang/lib/rabbitmq-server-1.4.0/scripts/../ebin
-noinput -s rabbit -sname rabbit -boot start_sasl +W w +K true +A30
-kernel inet_default_listen_options [{sndbuf,16384},{recbuf,4096}]
-rabbit tcp_listeners [{"0.0.0.0", 5672}] -sasl errlog_type error
-kernel error_logger {file,"/var/log/rabbitmq/rabbit.log"} -sasl
sasl_error_logger {file,"/var/log/rabbitmq/rabbit-sasl.log"} -os_mon
start_cpu_sup true -os_mon start_disksup false -os_mon start_memsup
false -os_mon start_os_sup false -mnesia dir
"/var/lib/rabbitmq/mnesia/rabbit"
RabbitMQ 1.4.0 (AMQP 8-0)
Copyright (C) 2007-2008 LShift Ltd., Cohesive Financial Technologies
LLC., and Rabbit Technologies Ltd.
Licensed under the MPL.  See http://www.rabbitmq.com/

Logging to "/var/log/rabbitmq/rabbit.log"
SASL logging to "/var/log/rabbitmq/rabbit-sasl.log"

starting database             ...done
starting core processes       ...done
starting recovery             ...Erlang has closed     <========== THE
ERROR IS HERE

{"init terminating in
do_boot",{{nocatch,{error,{cannot_start_application,rabbit,{{bad_type,realm_exchange,{realm_resource,'_',<<10
bytes>>}},{rabbit,start,[normal,[]]}}}}},[{init,start_it,1},{init,start_em,1}]}}

Crash dump was written to: erl_crash.dump
init terminating in do_boot ()

---------------------------------------------------------------------------------------

Please find enclosed with this email the "erl_crash.dump".

I'm using Erlang v5.6.5 under Ubuntu/7.10 (gutsy) with "gcc" version 4.1.3 :

$ erl +Ktrue +A8
Erlang (BEAM) emulator version 5.6.5 [source] [smp:2]
[async-threads:8] [hipe] [kernel-poll:true]
Eshell V5.6.5  (abort with ^G)
1>

Need help guys?

What's stange is that RabbitMQ works perfectly on all my other
machines (MacOSX, Fedora and a home made Linux).

Thanks in advance

Regards
Ferret
-------------- next part --------------
A non-text attachment was scrubbed...
Name: erl_crash.dump.gz
Type: application/x-gzip
Size: 90987 bytes
Desc: not available
Url : http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20081113/f4cdf950/attachment.bin 

From weaveinator at gmail.com  Thu Nov 13 18:57:21 2008
From: weaveinator at gmail.com (Steve Weaver)
Date: Thu, 13 Nov 2008 10:57:21 -0800
Subject: [rabbitmq-discuss] Sending and Receiving to same queue
Message-ID: <c05e896e0811131057p39b2fd0eme0c4b26953458a7@mail.gmail.com>

Hi All -
I am having a problem with sending to a queue while another process is
pulling from the same queue.  I am using Basic.Publish to put the message
and Basic.Get.  Nothing fancy, queue is durable and messages are
persistent.  Two processes (applications) running on same machine, one
receives a message (from remoting) and puts it on queue using
Basic.Publish.  Another process that runs every 5 minutes or so, wakes up
and checks the queue using Basic.Get.  If there is a message it enters a
loop which sends the message down the pipe and then tries to get another
message using same channel, until no more messages then closes channel and
disconnects and goes back to sleep for another 5 minutes.

This all works until the processes line up - sending to queue at same time
as trying to pull from queue.  Then rabbit dies with a (badrpc,nodedown)
status.  If I restart rabbit, all the messages sent are still there
(thankfully) but, I have to restart in order to send / receive another batch
of messages.

So long winded question - I assume there should be no reason a queue cant
send and receive messages at the same time, but is there some sort of
setting or flag I need to check first or a syncronizing process I have to
do?

Thanks very much for any help!!!
Steve
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20081113/cf7b17b3/attachment.htm 

From NGerakines at ea.com  Thu Nov 13 20:39:52 2008
From: NGerakines at ea.com (Gerakines, Nick)
Date: Thu, 13 Nov 2008 12:39:52 -0800
Subject: [rabbitmq-discuss] Error installing and running rabbitmq
Message-ID: <C541D098.BE%NGerakines@ea.com>


I'm hitting a wall trying to get a local installation of rabbitmq-server up and running. I'm on an Intel Mac with Erlang/OTP r12-5. I've followed the installation instructions and the rabbitmq server lives in /usr/local/lib/erlang/lib/rabbitmq_server-1.4.0/ . Why starting it up with the sbin/rabbitmq-server script, I get this error.

BEGIN
RabbitMQ 1.4.0 (AMQP 8-0)
Copyright (C) 2007-2008 LShift Ltd., Cohesive Financial Technologies LLC., and Rabbit Technologies Ltd.
Licensed under the MPL.  See http://www.rabbitmq.com/

Logging to "/var/log/rabbitmq/rabbit.log"
SASL logging to "/var/log/rabbitmq/rabbit-sasl.log"

starting database             ...done
starting core processes       ...done
starting recovery             ...{"init terminating in do_boot",{{nocatch,{error,{cannot_start_application,rabbit,{{bad_type,realm_exchange,{realm_resource,'_',<<10 bytes>>}},{rabbit,start,[normal,[]]}}}}},[{init,start_it,1},{init,start_em,1}]}}

Crash dump was written to: erl_crash.dump
init terminating in do_boot ()
END

Any insight?

# Nick Gerakines
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20081113/7525eef7/attachment.htm 

From kirk at kirkwylie.com  Thu Nov 13 22:21:17 2008
From: kirk at kirkwylie.com (Kirk Wylie)
Date: Thu, 13 Nov 2008 22:21:17 +0000
Subject: [rabbitmq-discuss] whether the weather is right.
In-Reply-To: <269388e30811081010y736aa5dcl25a1261aa259c56f@mail.gmail.com>
References: <4442b4720811080736h7e2a5d81p41321f644e7ab454@mail.gmail.com>
	<269388e30811081010y736aa5dcl25a1261aa259c56f@mail.gmail.com>
Message-ID: <75ACC2D7-26FD-4A77-941D-D41594FA6840@kirkwylie.com>

Hi. I'm still alive. :-)

On 8 Nov 2008, at 18:10, Ben Hood wrote:

> Kirk might embrace the discussion by actually answering my last post
> on the subject ;-)

> And I would argue that all intents and purposes is the currently the
> case - Kirk is just suggesting taking this thought to the next level -
> I am questioning the doability of this - but he has come up something
> yet other than "yes, of course, it's doable". See my (as yet still
> unanswered) post from Oct 24.
>

Yes, and I've actually come up with a response. Expect it shortly.  
Sorry, the non-AMQP-world called briefly.

Kirk



From kirk at kirkwylie.com  Thu Nov 13 22:56:33 2008
From: kirk at kirkwylie.com (Kirk Wylie)
Date: Thu, 13 Nov 2008 22:56:33 +0000
Subject: [rabbitmq-discuss] Exchanges, Routing, and AMQP
In-Reply-To: <269388e30810240650o22240ef0pc3a3a89822c73d10@mail.gmail.com>
References: <8f10a9e00810200801k6c3040e3w568a9be9d062ff74@mail.gmail.com>
	<269388e30810201103q6529063djbe5e0641e7c6b047@mail.gmail.com>
	<8f10a9e00810210940x2991d29fidd942b75af333947@mail.gmail.com>
	<269388e30810240650o22240ef0pc3a3a89822c73d10@mail.gmail.com>
Message-ID: <487A62E7-CBAE-4C66-82D8-754541DF6270@kirkwylie.com>

I came up with a reasonable design for this a couple of weeks ago, but  
I originally wanted to allow the passions to die down a little before  
responded, and then The Real World (e.g. where I'm not paid to blather  
on about MOM) interfered.

The solution is actually somewhat simple conceptually. Essentially,  
assume that you have the following organization:

- Exchange (namespace for messages)
feeds into
- Router (distributor of messages)
feeds into
- Queue (deliverer of messages)

Each one of these is a 0..n relationship.

The key difference here is that an exchange feeds messages as-is to  
all relevant router instances. And you have one router instance per  
TYPE of routing logic (e.g. topic, fanout, direct, least-full).  
Binding results in a modification to a router instance to support that  
binding, which might result in an additional exchange-->router binding.

So let's consider the degenerate case where there are no subscribers,  
but a publisher onto Exchange1. A new subscriber comes in.
1) Consumer asserts Queue1. This doesn't exist, so it's constructed.
2) Consumer asserts a binding between Queue1 to Exchange1 using Direct  
routing on namespace Foo.Bar.Baz.
    2a) There is no Direct Router instantiated, so a new instance is  
instantiated
    2b) DirectRouter instance is bound to receive all messages from  
Exchange1
    2c) DirectRouter is configured to deliver Foo.Bar.Baz to Queue1.
3) Message flows from Exchange1 to DirectRouter, which determines  
whether or not to deliver to Queue1 based on the message topic.

In this case, you have an O(nRoutingTypes) operation on delivery (the  
number of different router instances configured to listen to messages  
from that exchange), but this in C could be extremely optimized by  
passing a ref-counted pointer to the message from the Exchange to the  
Router, meaning that you don't even have a memory copy involved. O(n)  
on copies of pointers I don't consider meaningful. In addition, you  
have whatever logic the router needs to map to its queues. But that's  
non-unique, because that complexity you need no matter what.

So let's assume we have the same scenario as at the end of Step 3  
above, but now we add some LeastFull logic.
4) Consumer asserts Queue2. This doesn't exist, so it's constructed.
5) Consumer asserts Queue3. This doesn't exist, so it's constructed.
6) Consumer asserts a binding between Queue2 to Exchange1 using  
LeastFull routing with QueueGroup parameter set to #1
    6a) There is no LeastFull Router instantiated, so a new instance  
is instantiated
    6b) LeastFull Router instance is bound to receive all messages  
from Exchange1
    6c) LeastFull Router is configured to add Queue2 to the queue  
group parameter #1
7) Consumer asserts a binding between Queue3 to Exchange1 using  
LeastFull routing with QueueGroup parameter set to #1
    7a) Already existing LeastFull Router is configured to add Queue3  
to the queue group parameter #1
8) Message is delivered to Exchange1
    8a) Message is delivered to DirectRouter, which processes as per  
(3) above
    8b) Message is delivered to LeastFullRouter, which chooses either  
Queue2 or Queue3 to deliver based on existing queue size

Again, you have the message internally delivered (through pointer copy  
with ref counting) twice (O(nRoutingTypes==2)). LeastFullRouter has an  
O(nQueueGroups * nQueuesPerGroup) operation, which in this case is  
O(1*2).

The key thing here is that the act of binding arbitrarily establishes  
a router instance and binds that instance to an exchange, and that the  
act of delivery between an exchange and a router is deliver-all-to- 
all. This is going to be a fast operation, and then any additional  
complexity is up to the internal operation of the router.

You end up being able to support extremely fast (e.g. Direct) routing  
types with fast delivery, and slower (e.g. Topic) routing types with  
more complex logic, but only take that cost if a binding is done, and  
not have it affect the delivery latency on the fast delivery modes.

You are definitely right, in that no particular router would be able  
to make global decisions with respect to bindings that haven't been  
made to it. However, if a particular queue hasn't said that it's  
interested in receiving messages subject to a particular set of  
routing logic, why should that routing logic be able to affect  
delivery to that queue? It sounds almost like you're arguing that if I  
bind Exchange2 to Queue4, that should be allowed to affect flow from  
Exchange1 to Queue2. That shouldn't be allowed: the client in charge  
of Queue2 needs to have the ability to control flow of messages to  
Queue2. So the global operation needs to be within the confines of  
cooperating clients, who have explicitly said that they want to allow  
global decisions to be made.

Yes, I know code speaks more highly than words, but this isn't  
something that I think I have time to code up, and I think the basic  
conceptual framework that a fast solution potentially exists is one  
which allows the spec to move forward.

Also, I know this is a little rambling. If this isn't clear, let's  
pick apart individual parts and tomorrow I should have more time to  
clarify what's unclear.

Kirk

(original context below. Digest subscribers, apologies, but I wanted  
to maintain full history here and not line-by-line it as it's a  
complex argument).

On 24 Oct 2008, at 14:50, Ben Hood wrote:

> Kirk,
>
> On Tue, Oct 21, 2008 at 5:40 PM, Kirk Wylie <kirk at kirkwylie.com>  
> wrote:
>> Well, no, actually, that's not true. That's only true of a naive
>> implementation of a binding-based system. The RabbitMQ-based
>> implementation where you're modelling all the primitive AMQP concepts
>> as direct Erlang processes would definitely suffer from this problem,
>> but I'm sure you could work out a system where invoking a binding
>> dynamically modifies the routing table of the exchange.
>
> Don't get me wrong, the thing I that I would love the most is to be
> proven wrong on this point.
>
> The reason why I say this is because I have an interest in pushing
> back the boundaries with Rabbit so I would quite humbly accept the
> suggestion of an algorithm that allows you to match routes in
> sublinear time over an arbitrarily large routing table whilst
> deferring the specification of the algorithm to the bindings.
>
> So if you really think that I do not possess the level of abstraction
> required to think beyond the implementation I am currently working on,
> please set me straight.
>
> And lets set a few things straight, lest untruths manifest themselves
> as technical arguments :-)
>
> - Rabbit does not model every AMQP concept as a process - bindings or
> routes are not modeled as processes;
> - What do you mean excatly by "invoking a binding"?
> - The routing table is dynamically modified by issuing the Bind and
> Unbind commands to the broker.
>
> Setting the rebuttal aside now to concentrate on the real design and
> engineering concerns, do you think you can come up with a simple model
> on paper for this?
>
> Here's a suggestion of where one *may* start (requires a fixed width  
> font):
>
>                        -----------
>                        | Message |
>                        | key = x |
>                        -----------
>                             |
>                             |
>                        ------------
>                        | Exchange |
>                        | name = y |
>                        ------------
>                             |
>        ------------------------------------------
>        |                    |                   |
> ------------------  ------------------  ------------------
> | Binding        |  | Binding        |  | Binding        |
> | key = foo      |  | key = bar      |  | key = baz      |
> | algorithm = A1 |  | algorithm = A2 |  | algorithm = A3 |
> ------------------  ------------------  ------------------
>
> My point is that by deferring the algorithm to the bindings you are
> removing any potential of using root metadata in when you compute the
> routing graph.
>
> Although this is slightly OT, this is reminiscent of the way that svn
> stores metadata on a per-directory basis as opposed to storing it in
> the root - the difference being the ease to which you can compute the
> transitive closure of the graph.
>
>>> Furthermore, you can bring the consumer driven-ness into the realm  
>>> of
>>> your app by having a convention that prevents a producer from
>>> declaring exchanges - if the exchange doesn't exist, then the  
>>> producer
>>> will not be able to send messages to it.
>>
>> Then the "createExchange" call shouldn't be an assertion, it should
>> check for a pre-defined configuration point.
>
> You can currently use the passive flag to achieve this.
>
> Ben




From kirk at kirkwylie.com  Thu Nov 13 22:59:21 2008
From: kirk at kirkwylie.com (Kirk Wylie)
Date: Thu, 13 Nov 2008 22:59:21 +0000
Subject: [rabbitmq-discuss] Exchanges, Routing, and AMQP
In-Reply-To: <269388e30811081041i17102151qb4ec7760c6b81b3f@mail.gmail.com>
References: <8f10a9e00810200801k6c3040e3w568a9be9d062ff74@mail.gmail.com>
	<269388e30810201103q6529063djbe5e0641e7c6b047@mail.gmail.com>
	<8f10a9e00810210940x2991d29fidd942b75af333947@mail.gmail.com>
	<4901C714.7080103@lshift.net>
	<8f10a9e00810250511p2f350327l3e15cc66614d2532@mail.gmail.com>
	<269388e30811081041i17102151qb4ec7760c6b81b3f@mail.gmail.com>
Message-ID: <C3D51D09-EFAC-4C6E-BC93-4A9673AD92C9@kirkwylie.com>

And some clarifications requested there as well.

Seriously, sorry I had to disappear from the list for a while.

Kirk

On 8 Nov 2008, at 18:41, Ben Hood wrote:

> Kirk,
>
> On Sat, Oct 25, 2008 at 12:11 PM, Kirk Wylie <kirk at kirkwylie.com>  
> wrote:
>>> Would your proposed model allow for routing decisions that are  
>>> based on the
>>> set of all bindings (or some subset thereof), rather than each  
>>> individual
>>> binding? Ben's example - an exchange that routes to the shorted  
>>> queue -
>>> requires the former.
>>
>> It would depend on the server-side implementation as to whether that
>> was possible, since custom routing rules are outside the scope of the
>> protocol itself.
>
> Your riposte has been commented on:
>
> http://hopper.squarespace.com/blog/2008/10/7/consumer-driven-messaging.html#comments
>
> BTW Peter: Routing keys are in fact strings in AMQP :-)
>
> Ben




From matthias at lshift.net  Thu Nov 13 23:40:54 2008
From: matthias at lshift.net (Matthias Radestock)
Date: Thu, 13 Nov 2008 23:40:54 +0000
Subject: [rabbitmq-discuss] RabbitMQ starting problem on R12B-5
In-Reply-To: <5327a2e30811130457l3679e07auc4a6663d5c1af313@mail.gmail.com>
References: <5327a2e30811130457l3679e07auc4a6663d5c1af313@mail.gmail.com>
Message-ID: <491CBB06.5000100@lshift.net>

Dmitriy, Ferret, Nick,

Dmitriy Samovskiy wrote:
 > When I try to start rabbitmq broker 1.4.0 on debian etch with erlang
 > R12B-5, it fails

ferrety ferrety wrote:
> I'm failing to start RabbitMQ on Ubuntu/7.10 (gutsy) [...]
> I'm using Erlang v5.6.5 under Ubuntu/7.10 (gutsy)

Gerakines, Nick wrote
> I?m hitting a wall trying to get a local installation of rabbitmq-server 
> up and running. I?m on an Intel Mac with Erlang/OTP r12-5.


I think I can spot a pattern here ...

I am pretty sure the problem stems from the removal of a mis-feature in 
Erlang R212B-5 that the RabbitMQ server 1.4.0 is depending on, namely

     OTP-7524  Disallowed match patterns ('_', and '$n') as argument to
	      mnesia:delete_object/1 and friends.

Annoyingly it was actually us who reported this.


So your options are:
- use R12B-4 or earlier
- wait for RabbitMQ 1.5.0
- build the RabbitMQ server from the current default head in the hg 
repository


Apologies for the inconvenience.


Matthias.



From yferrety at gmail.com  Fri Nov 14 01:03:12 2008
From: yferrety at gmail.com (ferrety ferrety)
Date: Fri, 14 Nov 2008 02:03:12 +0100
Subject: [rabbitmq-discuss] RabbitMQ starting problem on R12B-5
In-Reply-To: <491CBB06.5000100@lshift.net>
References: <5327a2e30811130457l3679e07auc4a6663d5c1af313@mail.gmail.com>
	<491CBB06.5000100@lshift.net>
Message-ID: <5327a2e30811131703x28b58782we3d3db01c33cad39@mail.gmail.com>

Hi Mathias,

Thanks for the pointer. I'll try with "hg" source and let you know if
the problem is solved
by sunday.

Regards
Ferret

On Fri, Nov 14, 2008 at 12:40 AM, Matthias Radestock
<matthias at lshift.net> wrote:
> Dmitriy, Ferret, Nick,
>
> Dmitriy Samovskiy wrote:
>> When I try to start rabbitmq broker 1.4.0 on debian etch with erlang
>> R12B-5, it fails
>
> ferrety ferrety wrote:
>>
>> I'm failing to start RabbitMQ on Ubuntu/7.10 (gutsy) [...]
>> I'm using Erlang v5.6.5 under Ubuntu/7.10 (gutsy)
>
> Gerakines, Nick wrote
>>
>> I'm hitting a wall trying to get a local installation of rabbitmq-server
>> up and running. I'm on an Intel Mac with Erlang/OTP r12-5.
>
>
> I think I can spot a pattern here ...
>
> I am pretty sure the problem stems from the removal of a mis-feature in
> Erlang R212B-5 that the RabbitMQ server 1.4.0 is depending on, namely
>
>    OTP-7524  Disallowed match patterns ('_', and '$n') as argument to
>              mnesia:delete_object/1 and friends.
>
> Annoyingly it was actually us who reported this.
>
>
> So your options are:
> - use R12B-4 or earlier
> - wait for RabbitMQ 1.5.0
> - build the RabbitMQ server from the current default head in the hg
> repository
>
>
> Apologies for the inconvenience.
>
>
> Matthias.
>



From 0x6e6562 at gmail.com  Fri Nov 14 10:42:38 2008
From: 0x6e6562 at gmail.com (Ben Hood)
Date: Fri, 14 Nov 2008 10:42:38 +0000
Subject: [rabbitmq-discuss] RabbitMQ starting problem on R12B-5
In-Reply-To: <5327a2e30811131703x28b58782we3d3db01c33cad39@mail.gmail.com>
References: <5327a2e30811130457l3679e07auc4a6663d5c1af313@mail.gmail.com>
	<491CBB06.5000100@lshift.net>
	<5327a2e30811131703x28b58782we3d3db01c33cad39@mail.gmail.com>
Message-ID: <269388e30811140242m27176331m41e744122e2bfd60@mail.gmail.com>

Matthias

> On Fri, Nov 14, 2008 at 12:40 AM, Matthias Radestock
> <matthias at lshift.net> wrote:
>> I am pretty sure the problem stems from the removal of a mis-feature in
>> Erlang R212B-5 that the RabbitMQ server 1.4.0 is depending on, namely
>>
>>    OTP-7524  Disallowed match patterns ('_', and '$n') as argument to
>>              mnesia:delete_object/1 and friends.
>>
>> Annoyingly it was actually us who reported this.

:-(

Maybe we should have kept quiet about this.

For anybody wanting more detail about the root cause of this, refer to
this thread on the Erlang list:
http://www.erlang.org/pipermail/erlang-questions/2008-October/038831.html

Ben



From 0x6e6562 at gmail.com  Fri Nov 14 11:01:32 2008
From: 0x6e6562 at gmail.com (Ben Hood)
Date: Fri, 14 Nov 2008 11:01:32 +0000
Subject: [rabbitmq-discuss] Sending and Receiving to same queue
In-Reply-To: <c05e896e0811131057p39b2fd0eme0c4b26953458a7@mail.gmail.com>
References: <c05e896e0811131057p39b2fd0eme0c4b26953458a7@mail.gmail.com>
Message-ID: <269388e30811140301i20145a22ub28156fc208009ed@mail.gmail.com>

Steve,

On Thu, Nov 13, 2008 at 6:57 PM, Steve Weaver <weaveinator at gmail.com> wrote:
> So long winded question - I assume there should be no reason a queue cant
> send and receive messages at the same time, but is there some sort of
> setting or flag I need to check first or a syncronizing process I have to
> do?

Not that I know of. Can you send the code that reproduces this problem
so we can look into it?

Ben



From ilya at aiderss.com  Sat Nov 15 16:08:27 2008
From: ilya at aiderss.com (Ilya Grigorik)
Date: Sat, 15 Nov 2008 11:08:27 -0500
Subject: [rabbitmq-discuss] Persister crashes Rabbit
Message-ID: <57cfcbc70811150808r2c1bfd04wbb7fc30d2a250bb8@mail.gmail.com>

I'm doing some load testing on Rabbit and I'm bumping into the following
scenario:

Fanout exchange > Durable queue

I'm pushing ~300~350 message/s into Rabbit, each ~10kb/s. Watching the
network pipe, the input is fluctuating around 3.5mb/s. Comparing these
numbers to the docs, they seem to be consistent with the documented number
of 4000m/s at 1kb each. (or at least in the same ballpark).

Rabbit seems to become unstable once the persister.LOG crosses the 1GB
limit. Disk syncs are taking longer and longer (for obvious reasons), and
memory starts to fluctuate all over the map - from 2GB to 7GB (I am seeing
high memory watermark warnings). Then, without any warnings in the log file,
the process falls over and everyone gets disconnected. On the rabbit node, I
still see epmd and beam.smp processes running, but the node is reported as
down. Running the node in the foreground, I get:

broker running
/usr/local/lib/erlang/lib/os_mon-2.1.8/priv/bin/memsup: Erlang has closed.
Erlang has closed

(Tried disabling memsup and lowering the mem watermark to 0.7, same thing..
Erlang closed)

Looking at the persister logs (no .previous):
-rw-r--r-- 1 root root 2.0G Nov 15 10:24 rabbit_persister.LOG

At this point I can't even restart the node. The only way to get it back up
is to remove the persister logs and let is start clean.

I've scanned the irc logs [1], and it does seem that persister is still up
in the air.. Having said that, any ideas or recommendations?

[1] http://dev.rabbitmq.com/irclog/index.php?date=2008-07-31

P.S. Running latest version of RabbitMQ from trunk (as of Nov 14th), erl:
R12B-5
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20081115/25b58c25/attachment.htm 

From matthias at lshift.net  Sat Nov 15 16:24:27 2008
From: matthias at lshift.net (Matthias Radestock)
Date: Sat, 15 Nov 2008 16:24:27 +0000
Subject: [rabbitmq-discuss] Persister crashes Rabbit
In-Reply-To: <57cfcbc70811150808r2c1bfd04wbb7fc30d2a250bb8@mail.gmail.com>
References: <57cfcbc70811150808r2c1bfd04wbb7fc30d2a250bb8@mail.gmail.com>
Message-ID: <491EF7BB.5000707@lshift.net>

Ilya,

Ilya Grigorik wrote:
> I'm doing some load testing on Rabbit and I'm bumping into the following 
> scenario:
> 
> Fanout exchange > Durable queue
> 
> I'm pushing ~300~350 message/s into Rabbit, each ~10kb/s.

What client are you using to publish the messages?

> Rabbit seems to become unstable once the persister.LOG crosses the 1GB 
> limit. Disk syncs are taking longer and longer (for obvious reasons), 
> and memory starts to fluctuate all over the map - from 2GB to 7GB (I am 
> seeing high memory watermark warnings). Then, without any warnings in 
> the log file, the process falls over and everyone gets disconnected.

Persistent messages still have copies in memory, so if you have no 
consumers or the rate of consumption is lower than the publishing rate 
eventually rabbit will run out of memory.

> P.S. Running latest version of RabbitMQ from trunk (as of Nov 14th), 

The flow control in that version should tell the producers to stop 
sending messages when memory becomes critical. However, it does require 
a cooperating client. Hence my question above about what client you are 
using. At present the trunk version of the Java client is the only one 
that handles flow control correctly.


Regards,

Matthias.



From ilya at aiderss.com  Sat Nov 15 16:48:07 2008
From: ilya at aiderss.com (Ilya Grigorik)
Date: Sat, 15 Nov 2008 11:48:07 -0500
Subject: [rabbitmq-discuss] Persister crashes Rabbit
In-Reply-To: <491EF7BB.5000707@lshift.net>
References: <57cfcbc70811150808r2c1bfd04wbb7fc30d2a250bb8@mail.gmail.com>
	<491EF7BB.5000707@lshift.net>
Message-ID: <57cfcbc70811150848x2184ec52vc71cb9604619ac37@mail.gmail.com>

>
> What client are you using to publish the messages?
>

I'm using Aman's ruby library [1], and a simple publisher client. [2]

[1] http://github.com/tmm1/amqp
[2] http://pastie.org/315607

Rabbit seems to become unstable once the persister.LOG crosses the 1GB
> limit. Disk syncs are taking longer and longer (for obvious reasons), and
> memory starts to fluctuate all over the map - from 2GB to 7GB (I am seeing
> high memory watermark warnings). Then, without any warnings in the log file,
> the process falls over and everyone gets disconnected.
>
> Persistent messages still have copies in memory, so if you have no
> consumers or the rate of consumption is lower than the publishing rate
> eventually rabbit will run out of memory.
>

So the messages don't get flushed out to disk at all? Right now, I'm running
two publishers and no consumers.. I would expect RabbitMQ to keep a stack of
messages in memory and overflow to disk - is this wrong? Hmm, now that I
think about it, this would explain the log rollover pattern I'm seeing:
.previous is removed from disk, and full log file is dumped from memory. I
was surprised by this pattern, but if it's always doing a full memory flush,
that would make sense.

- That would also mean that the number of messages we can queue is
essentially limited by the amount of available RAM?
- Is there any way to do an incremental append to the logfile, instead of a
full flush?
- I've seen a few mentions of RDBMS hooks for persistence, how far away are
we from this?

P.S. Running latest version of RabbitMQ from trunk (as of Nov 14th),
>
> The flow control in that version should tell the producers to stop sending
> messages when memory becomes critical. However, it does require a
> cooperating client. Hence my question above about what client you are using.
> At present the trunk version of the Java client is the only one that handles
> flow control correctly.
>

Ah, interesting, I'll ping Aman on that.

Cheers,
Ilya
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20081115/312a1d45/attachment.htm 

From matthias at lshift.net  Sat Nov 15 17:13:35 2008
From: matthias at lshift.net (Matthias Radestock)
Date: Sat, 15 Nov 2008 17:13:35 +0000
Subject: [rabbitmq-discuss] Persister crashes Rabbit
In-Reply-To: <e1c05edd0811150853r6bf1c629m431e48ebf0067fb1@mail.gmail.com>
References: <57cfcbc70811150808r2c1bfd04wbb7fc30d2a250bb8@mail.gmail.com>	<491EF7BB.5000707@lshift.net>
	<e1c05edd0811150853r6bf1c629m431e48ebf0067fb1@mail.gmail.com>
Message-ID: <491F033F.1070509@lshift.net>

Aman,

Aman Gupta wrote:
>> The flow control in that version should tell the producers to stop
>> sending messages when memory becomes critical. However, it does require
>> a cooperating client. Hence my question above about what client you are
>> using. At present the trunk version of the Java client is the only one
>> that handles flow control correctly.
> 
> Do I just need to send a Basic.Qos(prefetch_count: 1, global: true) ?

No. Basic.Qos allows the consumer to control the flow of messages from 
the broker. That's still on our todo list. The upcoming release of the 
broker implements one half of AMQP's channel.flow, where the broker 
tells clients to stop sending messages when it is overloaded.

See Ben's article at

http://hopper.squarespace.com/blog/2008/11/9/flow-control-in-rabbitmq.html

for more details.


Matthias.



From 0x6e6562 at gmail.com  Sat Nov 15 17:21:17 2008
From: 0x6e6562 at gmail.com (Ben Hood)
Date: Sat, 15 Nov 2008 17:21:17 +0000
Subject: [rabbitmq-discuss] Persister crashes Rabbit
In-Reply-To: <491EF7BB.5000707@lshift.net>
References: <57cfcbc70811150808r2c1bfd04wbb7fc30d2a250bb8@mail.gmail.com>
	<491EF7BB.5000707@lshift.net>
Message-ID: <269388e30811150921p7d14b642y6ae1011c2d7e643f@mail.gmail.com>

FYI:

On Sat, Nov 15, 2008 at 4:24 PM, Matthias Radestock <matthias at lshift.net> wrote:
> At present the trunk version of the Java client is the only one
> that handles flow control correctly.

This has also been implemented in the Erlang client (branch 19560
refers) but it has not gone through QA yet, hence it is not yet on the
default branch.

HTH,

Ben



From 0x6e6562 at gmail.com  Sat Nov 15 17:29:46 2008
From: 0x6e6562 at gmail.com (Ben Hood)
Date: Sat, 15 Nov 2008 17:29:46 +0000
Subject: [rabbitmq-discuss] Persister crashes Rabbit
In-Reply-To: <57cfcbc70811150848x2184ec52vc71cb9604619ac37@mail.gmail.com>
References: <57cfcbc70811150808r2c1bfd04wbb7fc30d2a250bb8@mail.gmail.com>
	<491EF7BB.5000707@lshift.net>
	<57cfcbc70811150848x2184ec52vc71cb9604619ac37@mail.gmail.com>
Message-ID: <269388e30811150929t6121f0dfuddd9ac9cf9ac361a@mail.gmail.com>

Ilya,

On Sat, Nov 15, 2008 at 4:48 PM, Ilya Grigorik <ilya at aiderss.com> wrote:
> So the messages don't get flushed out to disk at all? Right now, I'm running
> two publishers and no consumers.. I would expect RabbitMQ to keep a stack of
> messages in memory and overflow to disk - is this wrong?

Persistent messages are made persistent, this is part of the transfer
of responsibility. What you are observing is the fact the messages are
resident in memory as well.

There have been a number of discussions about disk overflow and paging
on this list, so it is feature we'd like to get around to addressing
at some stage.

Valentino has started a design document on this, and Tony has already
started knocking up some experimental code, but, as always, there is
no ETA on this feature.

> - That would also mean that the number of messages we can queue is
> essentially limited by the amount of available RAM?

ATM yes, hence why we have implemented producer flow control (see article).

> - I've seen a few mentions of RDBMS hooks for persistence, how far away are
> we from this?

I don't really recall anything concrete on this topic, apart from the
holy grail of pluggable queues - I would say that we're still a way
off this ATM.

HTH,

Ben



From ilya at aiderss.com  Sat Nov 15 18:43:57 2008
From: ilya at aiderss.com (Ilya Grigorik)
Date: Sat, 15 Nov 2008 13:43:57 -0500
Subject: [rabbitmq-discuss] Persister crashes Rabbit
In-Reply-To: <269388e30811150929t6121f0dfuddd9ac9cf9ac361a@mail.gmail.com>
References: <57cfcbc70811150808r2c1bfd04wbb7fc30d2a250bb8@mail.gmail.com>
	<491EF7BB.5000707@lshift.net>
	<57cfcbc70811150848x2184ec52vc71cb9604619ac37@mail.gmail.com>
	<269388e30811150929t6121f0dfuddd9ac9cf9ac361a@mail.gmail.com>
Message-ID: <57cfcbc70811151043y3fdfaec9ieb2c580ee27d043e@mail.gmail.com>

Thanks Ben, that clears it up. On a related note, would clustering help in
this case? I'm still new to Rabbit, so bear with me..

- If we connect multiple nodes together (without persistence), and then
create an exchange, the in-memory queues will be replicated across all
nodes?
- Assuming the cluster is running, is it up to the client to determine which
node it wants to connect to (either explicitly, or through some load
balancer in between)?
- Now, if we add persistence to the queue, will a copy of the queue be
stored on each node in the cluster?

ig
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20081115/f9a9aa0f/attachment.htm 

From 0x6e6562 at gmail.com  Sat Nov 15 19:18:40 2008
From: 0x6e6562 at gmail.com (Ben Hood)
Date: Sat, 15 Nov 2008 19:18:40 +0000
Subject: [rabbitmq-discuss] Persister crashes Rabbit
In-Reply-To: <57cfcbc70811151043y3fdfaec9ieb2c580ee27d043e@mail.gmail.com>
References: <57cfcbc70811150808r2c1bfd04wbb7fc30d2a250bb8@mail.gmail.com>
	<491EF7BB.5000707@lshift.net>
	<57cfcbc70811150848x2184ec52vc71cb9604619ac37@mail.gmail.com>
	<269388e30811150929t6121f0dfuddd9ac9cf9ac361a@mail.gmail.com>
	<57cfcbc70811151043y3fdfaec9ieb2c580ee27d043e@mail.gmail.com>
Message-ID: <269388e30811151118p5c1d002bp581a373785164028@mail.gmail.com>

Ilya,

On Sat, Nov 15, 2008 at 6:43 PM, Ilya Grigorik <ilya at aiderss.com> wrote:
> - If we connect multiple nodes together (without persistence), and then
> create an exchange, the in-memory queues will be replicated across all
> nodes?

No, only broker entities are replicated (exchanges, queues and
bindings), but not the actual messages as indicated in the clustering
guide: http://www.rabbitmq.com/clustering.html

The reason for this is primarily the cost of inter-node message replication.

> - Assuming the cluster is running, is it up to the client to determine which
> node it wants to connect to (either explicitly, or through some load
> balancer in between)?

Yes.

> - Now, if we add persistence to the queue, will a copy of the queue be
> stored on each node in the cluster?

You a queue only exists on one node in the cluster. Persistent
messages that are routed to a queue are written to disk on the node
where the queue exists. Also you need to differentiate between
persistent messages (a property that the publisher sets) and
persistent queue (a property that is set when creating a queue). The
implication is that you can send persistent messages to a transient
queue and vice versa.

HTH,

Ben



From 0x6e6562 at gmail.com  Sat Nov 15 20:22:52 2008
From: 0x6e6562 at gmail.com (Ben Hood)
Date: Sat, 15 Nov 2008 20:22:52 +0000
Subject: [rabbitmq-discuss] Persister crashes Rabbit
In-Reply-To: <57cfcbc70811151149o4173171exb929e6cbcc124e3@mail.gmail.com>
References: <57cfcbc70811150808r2c1bfd04wbb7fc30d2a250bb8@mail.gmail.com>
	<491EF7BB.5000707@lshift.net>
	<57cfcbc70811150848x2184ec52vc71cb9604619ac37@mail.gmail.com>
	<269388e30811150929t6121f0dfuddd9ac9cf9ac361a@mail.gmail.com>
	<57cfcbc70811151043y3fdfaec9ieb2c580ee27d043e@mail.gmail.com>
	<269388e30811151118p5c1d002bp581a373785164028@mail.gmail.com>
	<57cfcbc70811151149o4173171exb929e6cbcc124e3@mail.gmail.com>
Message-ID: <269388e30811151222l6284b83bpf0ab17c220e5d579@mail.gmail.com>

Ilya,

On Sat, Nov 15, 2008 at 7:49 PM, Ilya Grigorik <ilya at aiderss.com> wrote:
> Ah, I see. So if the queue (let's call it 'Q') is created on node A, and the
> client connects to node B, and subscribes to Q, the messages will be proxied
> from A to B and then to the client?

Yep.

> Another question: if multiple durable queues are attached to a fanout and
> the messages are flagged as persistent, will there only be one copy of each
> message in memory? It look like the persister only stores one copy on disc,
> plus a map of which queues each message belongs to. Is this how it's handled
> in memory as well?

Functionally no, but effectively yes, because Erlang will reference
count binaries larger than 64 bytes rather than duplicating memory.

HTH,

Ben



From fw at deneb.enyo.de  Sat Nov 15 21:14:45 2008
From: fw at deneb.enyo.de (Florian Weimer)
Date: Sat, 15 Nov 2008 22:14:45 +0100
Subject: [rabbitmq-discuss] Persister crashes Rabbit
In-Reply-To: <57cfcbc70811150808r2c1bfd04wbb7fc30d2a250bb8@mail.gmail.com>
	(Ilya Grigorik's message of "Sat, 15 Nov 2008 11:08:27 -0500")
References: <57cfcbc70811150808r2c1bfd04wbb7fc30d2a250bb8@mail.gmail.com>
Message-ID: <87myg0het6.fsf@mid.deneb.enyo.de>

* Ilya Grigorik:

> broker running
> /usr/local/lib/erlang/lib/os_mon-2.1.8/priv/bin/memsup: Erlang has closed.
> Erlang has closed
>
> (Tried disabling memsup and lowering the mem watermark to 0.7, same thing..
> Erlang closed)
>
> Looking at the persister logs (no .previous):
> -rw-r--r-- 1 root root 2.0G Nov 15 10:24 rabbit_persister.LOG

Is this on GNU/Linux i386?  Could it be that the Erlang process
receives SIGXFSZ because the log file crossed the 2 GB boundary?



From rrabarg2 at yahoo.com.sg  Sat Nov 15 21:47:36 2008
From: rrabarg2 at yahoo.com.sg (rrabarg2)
Date: Sun, 16 Nov 2008 08:47:36 +1100
Subject: [rabbitmq-discuss] Persister crashes Rabbit
In-Reply-To: <269388e30811151118p5c1d002bp581a373785164028@mail.gmail.com>
References: <57cfcbc70811150808r2c1bfd04wbb7fc30d2a250bb8@mail.gmail.com>	<491EF7BB.5000707@lshift.net>	<57cfcbc70811150848x2184ec52vc71cb9604619ac37@mail.gmail.com>	<269388e30811150929t6121f0dfuddd9ac9cf9ac361a@mail.gmail.com>	<57cfcbc70811151043y3fdfaec9ieb2c580ee27d043e@mail.gmail.com>
	<269388e30811151118p5c1d002bp581a373785164028@mail.gmail.com>
Message-ID: <491F4378.3090001@yahoo.com.sg>

Ben,

We have a system which includes a homogeneous set of message producers 
(we call switches) and a backoffice application which consumes these 
messages.  We have a guaranteed delivery requirement for the messages, 
we also require that the switches can continue to operate unhindered 
(assuming infinite disk space) during long periods of slow or 
non-consumption of messages by the backoffice.  I'm not familiar with 
rabbitMQ, but the implication I take from this thread is that rabbitMQ 
would not meet our requirements (at least not without significant extra 
bespoke work)  - is that a fair statement?

Regards

Graham

Ben Hood wrote:
> Ilya,
>
> On Sat, Nov 15, 2008 at 6:43 PM, Ilya Grigorik <ilya at aiderss.com> wrote:
>   
>> - If we connect multiple nodes together (without persistence), and then
>> create an exchange, the in-memory queues will be replicated across all
>> nodes?
>>     
>
> No, only broker entities are replicated (exchanges, queues and
> bindings), but not the actual messages as indicated in the clustering
> guide: http://www.rabbitmq.com/clustering.html
>
> The reason for this is primarily the cost of inter-node message replication.
>
>   
>> - Assuming the cluster is running, is it up to the client to determine which
>> node it wants to connect to (either explicitly, or through some load
>> balancer in between)?
>>     
>
> Yes.
>
>   
>> - Now, if we add persistence to the queue, will a copy of the queue be
>> stored on each node in the cluster?
>>     
>
> You a queue only exists on one node in the cluster. Persistent
> messages that are routed to a queue are written to disk on the node
> where the queue exists. Also you need to differentiate between
> persistent messages (a property that the publisher sets) and
> persistent queue (a property that is set when creating a queue). The
> implication is that you can send persistent messages to a transient
> queue and vice versa.
>
> HTH,
>
> Ben
>
> _______________________________________________
> rabbitmq-discuss mailing list
> rabbitmq-discuss at lists.rabbitmq.com
> http://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss
>
>   

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20081116/7ae01bc7/attachment.htm 

From 0x6e6562 at gmail.com  Sat Nov 15 22:22:18 2008
From: 0x6e6562 at gmail.com (Ben Hood)
Date: Sat, 15 Nov 2008 22:22:18 +0000
Subject: [rabbitmq-discuss] Persister crashes Rabbit
In-Reply-To: <87myg0het6.fsf@mid.deneb.enyo.de>
References: <57cfcbc70811150808r2c1bfd04wbb7fc30d2a250bb8@mail.gmail.com>
	<87myg0het6.fsf@mid.deneb.enyo.de>
Message-ID: <269388e30811151422i2efe4553k90d021d351a37f0@mail.gmail.com>

Florian,

On Sat, Nov 15, 2008 at 9:14 PM, Florian Weimer <fw at deneb.enyo.de> wrote:
> Is this on GNU/Linux i386?  Could it be that the Erlang process
> receives SIGXFSZ because the log file crossed the 2 GB boundary?

I can't comment on this, I've really only load tested Rabbit/Penguin
with a 64-bit kernel (don't know if that makes a difference). If you
or anybody else who knows about this signal can enlighten me that
would great.

Ben



From fw at deneb.enyo.de  Sat Nov 15 22:29:49 2008
From: fw at deneb.enyo.de (Florian Weimer)
Date: Sat, 15 Nov 2008 23:29:49 +0100
Subject: [rabbitmq-discuss] Persister crashes Rabbit
In-Reply-To: <269388e30811151422i2efe4553k90d021d351a37f0@mail.gmail.com> (Ben
	Hood's message of "Sat, 15 Nov 2008 22:22:18 +0000")
References: <57cfcbc70811150808r2c1bfd04wbb7fc30d2a250bb8@mail.gmail.com>
	<87myg0het6.fsf@mid.deneb.enyo.de>
	<269388e30811151422i2efe4553k90d021d351a37f0@mail.gmail.com>
Message-ID: <873ahsfwrm.fsf@mid.deneb.enyo.de>

* Ben Hood:

> Florian,
>
> On Sat, Nov 15, 2008 at 9:14 PM, Florian Weimer <fw at deneb.enyo.de> wrote:
>> Is this on GNU/Linux i386?  Could it be that the Erlang process
>> receives SIGXFSZ because the log file crossed the 2 GB boundary?
>
> I can't comment on this, I've really only load tested Rabbit/Penguin
> with a 64-bit kernel (don't know if that makes a difference). If you
> or anybody else who knows about this signal can enlighten me that
> would great.

Ilya mentioned something about 7 GB of memory, so we can scratch the
32 bit theory.

On i386, processes receive SIGXFSZ by default if writing to a file
would push it past the 2 GB barrier.  This used to happen with some
syslog implementations.  But it's probably unrelated given that Ilya
is not on a 32-bit system.



From 0x6e6562 at gmail.com  Sat Nov 15 22:30:49 2008
From: 0x6e6562 at gmail.com (Ben Hood)
Date: Sat, 15 Nov 2008 22:30:49 +0000
Subject: [rabbitmq-discuss] Persister crashes Rabbit
In-Reply-To: <491F4378.3090001@yahoo.com.sg>
References: <57cfcbc70811150808r2c1bfd04wbb7fc30d2a250bb8@mail.gmail.com>
	<491EF7BB.5000707@lshift.net>
	<57cfcbc70811150848x2184ec52vc71cb9604619ac37@mail.gmail.com>
	<269388e30811150929t6121f0dfuddd9ac9cf9ac361a@mail.gmail.com>
	<57cfcbc70811151043y3fdfaec9ieb2c580ee27d043e@mail.gmail.com>
	<269388e30811151118p5c1d002bp581a373785164028@mail.gmail.com>
	<491F4378.3090001@yahoo.com.sg>
Message-ID: <269388e30811151430r1a893bafr39cc9ac0b2693e46@mail.gmail.com>

Graham,

On Sat, Nov 15, 2008 at 9:47 PM, rrabarg2 <rrabarg2 at yahoo.com.sg> wrote:
> We have a system which includes a homogeneous set of message producers (we
> call switches) and a backoffice application which consumes these messages.
> We have a guaranteed delivery requirement for the messages, we also require
> that the switches can continue to operate unhindered (assuming infinite disk
> space) during long periods of slow or non-consumption of messages by the
> backoffice.  I'm not familiar with rabbitMQ, but the implication I take from
> this thread is that rabbitMQ would not meet our requirements (at least not
> without significant extra bespoke work)  - is that a fair statement?

Yes, that's fair.

If you require true store and forward guarantees (assuming - as you
point out -  unlimited disk space), and you don't want to do producer
flow control using the channel.flow command, then Rabbit is not the
right thing for you ATM.

This has been a topic of discussion lately (look for posts on the
subject by Edwin and Valentino) and obviously we're looking into this
feature (as indicated in my earlier thread), but there is no ETA.

HTH,

Ben



From 0x6e6562 at gmail.com  Sat Nov 15 22:35:59 2008
From: 0x6e6562 at gmail.com (Ben Hood)
Date: Sat, 15 Nov 2008 22:35:59 +0000
Subject: [rabbitmq-discuss] Running Rabbit on OSX
Message-ID: <269388e30811151435h65a98452v1f61ef5b009ed45e@mail.gmail.com>

Guys,

A little while ago, Rany Keddo wrote this article
(http://playtype.net/past/2008/10/9/installing_rabbitmq_on_osx/) about
how to get RabbitMQ up and running on OSX.

Since I do half of my development on OSX, I thought I'd share how I
run Rabbit: http://hopper.squarespace.com/blog/2008/11/15/how-i-install-rabbitmq-on-osx.html

If you are looking for a super easy way to install RabbitMQ, please
read his article rather than mine.

HTH,

Ben



From 0x6e6562 at gmail.com  Sat Nov 15 22:59:56 2008
From: 0x6e6562 at gmail.com (Ben Hood)
Date: Sat, 15 Nov 2008 22:59:56 +0000
Subject: [rabbitmq-discuss] Queue Paging - Disk Overflow
Message-ID: <269388e30811151459j45c2a6a0k6875227f6e2756@mail.gmail.com>

Guys,

There has been a lot of discussion about overflowing messages to disk
when memory is scarce (as opposed to throttling producers):

http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/2008-November/002386.html
http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/2008-September/001858.html
http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/2008-October/002212.html

The long and the short of it is that it would realistically take one
of the Rabbit dev team 3 working weeks to implement this properly
(with QA).

The unfortunate reality is that at LShift we have to do paid work in
order to fill the fridge.

So the situation on guaranteed store and forward is either:

1. We'll get around to it some time, or:
2. If everybody who wants disk overflow chips in with a fiver, then
when we get the money together, we can dedicate solid uninterrupted
time to this task.

Ben



From ilya at aiderss.com  Sat Nov 15 23:45:10 2008
From: ilya at aiderss.com (Ilya Grigorik)
Date: Sat, 15 Nov 2008 18:45:10 -0500
Subject: [rabbitmq-discuss] Persister crashes Rabbit
In-Reply-To: <873ahsfwrm.fsf@mid.deneb.enyo.de>
References: <57cfcbc70811150808r2c1bfd04wbb7fc30d2a250bb8@mail.gmail.com>
	<87myg0het6.fsf@mid.deneb.enyo.de>
	<269388e30811151422i2efe4553k90d021d351a37f0@mail.gmail.com>
	<873ahsfwrm.fsf@mid.deneb.enyo.de>
Message-ID: <57cfcbc70811151545q4c43f77fhe5cb1e0fb2d310e3@mail.gmail.com>

Florian / Ben,

I'm testing Rabbit on a 'large EC2 instance':
Linux ip-10-251-102-223 2.6.16.33-xenU #2 SMP Wed Aug 15 17:27:36 SAST 2007
x86_64 x86_64 x86_64 GNU/Linux

The basics specs are: 7.5 GB memory, 2 cores, 64-bit, CentOS 5.

On the 2GB log file: I can reliably reproduce the crash behavior, but it's
not always at 2GB mark, a few times it was 1.7, once at 1.5.

What bothers me most is that I can't recover the log file after it crashes.
Rabbit refuses to start unless I wipe the persister.LOG and let it recreate
it.

ig
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20081115/67881249/attachment.htm 

From 0x6e6562 at gmail.com  Sat Nov 15 23:49:20 2008
From: 0x6e6562 at gmail.com (Ben Hood)
Date: Sat, 15 Nov 2008 23:49:20 +0000
Subject: [rabbitmq-discuss] Persister crashes Rabbit
In-Reply-To: <57cfcbc70811151545q4c43f77fhe5cb1e0fb2d310e3@mail.gmail.com>
References: <57cfcbc70811150808r2c1bfd04wbb7fc30d2a250bb8@mail.gmail.com>
	<87myg0het6.fsf@mid.deneb.enyo.de>
	<269388e30811151422i2efe4553k90d021d351a37f0@mail.gmail.com>
	<873ahsfwrm.fsf@mid.deneb.enyo.de>
	<57cfcbc70811151545q4c43f77fhe5cb1e0fb2d310e3@mail.gmail.com>
Message-ID: <269388e30811151549r45a22a20j4387fdd295920732@mail.gmail.com>

Ilya,

On Sat, Nov 15, 2008 at 11:45 PM, Ilya Grigorik <ilya at aiderss.com> wrote:
> What bothers me most is that I can't recover the log file after it crashes.
> Rabbit refuses to start unless I wipe the persister.LOG and let it recreate

What do you mean by refuse to start? Do you mean that it is slow or it
just doesn't start?

BTW we have noticed a speed up in recovery in the latest version from
source control compared to the 1.4.0 release.

HTH,

Ben



From dialtone at gmail.com  Sun Nov 16 00:03:48 2008
From: dialtone at gmail.com (Valentino Volonghi)
Date: Sat, 15 Nov 2008 16:03:48 -0800
Subject: [rabbitmq-discuss] Persister crashes Rabbit
In-Reply-To: <269388e30811151430r1a893bafr39cc9ac0b2693e46@mail.gmail.com>
References: <57cfcbc70811150808r2c1bfd04wbb7fc30d2a250bb8@mail.gmail.com>
	<491EF7BB.5000707@lshift.net>
	<57cfcbc70811150848x2184ec52vc71cb9604619ac37@mail.gmail.com>
	<269388e30811150929t6121f0dfuddd9ac9cf9ac361a@mail.gmail.com>
	<57cfcbc70811151043y3fdfaec9ieb2c580ee27d043e@mail.gmail.com>
	<269388e30811151118p5c1d002bp581a373785164028@mail.gmail.com>
	<491F4378.3090001@yahoo.com.sg>
	<269388e30811151430r1a893bafr39cc9ac0b2693e46@mail.gmail.com>
Message-ID: <F9728FBC-F8F0-4742-B5A0-0F78D2F3DD2D@gmail.com>


On Nov 15, 2008, at 2:30 PM, Ben Hood wrote:

> This has been a topic of discussion lately (look for posts on the
> subject by Edwin and Valentino) and obviously we're looking into this
> feature (as indicated in my earlier thread), but there is no ETA.


And the initial design document is available here:

https://dev.rabbitmq.com/wiki/DiskOverflow

Comment and add suggestions if any.

-- 
Valentino Volonghi aka Dialtone
Now running MacOS X 10.5
Home Page: http://www.twisted.it
http://www.adroll.com

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20081115/27a69936/attachment.htm 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: PGP.sig
Type: application/pgp-signature
Size: 194 bytes
Desc: This is a digitally signed message part
Url : http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20081115/27a69936/attachment.pgp 

From Peter.A.Silva at gmail.com  Sun Nov 16 03:21:28 2008
From: Peter.A.Silva at gmail.com (Peter Silva)
Date: Sat, 15 Nov 2008 22:21:28 -0500
Subject: [rabbitmq-discuss] Persister crashes Rabbit
In-Reply-To: <491F4378.3090001@yahoo.com.sg>
References: <57cfcbc70811150808r2c1bfd04wbb7fc30d2a250bb8@mail.gmail.com>
	<491EF7BB.5000707@lshift.net>
	<57cfcbc70811150848x2184ec52vc71cb9604619ac37@mail.gmail.com>
	<269388e30811150929t6121f0dfuddd9ac9cf9ac361a@mail.gmail.com>
	<57cfcbc70811151043y3fdfaec9ieb2c580ee27d043e@mail.gmail.com>
	<269388e30811151118p5c1d002bp581a373785164028@mail.gmail.com>
	<491F4378.3090001@yahoo.com.sg>
Message-ID: <4442b4720811151921x25e60f9ctdda963db92a16440@mail.gmail.com>

would a slower broker (<1000msg/sec), that provides infinite message storage
fit the bill?

If there were an option in rabbit to store all messages on disk,
and forget them there, then reload them when ready to send, then
the retention and queuing limits go away (if queues are also on disk.)
basically if no-one is consuming from a queue for a certain amount of
time... say minutes, those queues should flush to disk, and free up memory
for active queues.

I'm not suggesting rabbit modify their high speed way of doing things, but
there might be another mode... the trivially primitive way to do it:
ie.
exchange stores into directory tree:

db/2008/11/08/23/59/msg324 msg325...

the routing algorithm makes links for the queues:

queues/myqueue/msg324 --> unix hard link, to msg324 in the db tree.
                          msg325...

etc...
we timed a reasonably linux server a few years ago at being able to perform
20,000 file creations per second, which was enough to support the messaging
rate we needed.

yes, you need a single file system for the message store.  We run such db's
with upwards of 20,000,000 messages in an ext3, with decent performance.
LRU is a wonderful gift from the paging system and buffer cache that you get
for free.  It manages what to keep in memory completely transparently to the
application code.

when I can get away with a trivially primitive implementation, I take it.

(before someone says show me the code... http://metpx.sf.net, and no it
doesn't do AMQP... but the ideas are vanishingly alike.)



On Sat, Nov 15, 2008 at 4:47 PM, rrabarg2 <rrabarg2 at yahoo.com.sg> wrote:

>  Ben,
>
> We have a system which includes a homogeneous set of message producers (we
> call switches) and a backoffice application which consumes these messages.
> We have a guaranteed delivery requirement for the messages, we also require
> that the switches can continue to operate unhindered (assuming infinite disk
> space) during long periods of slow or non-consumption of messages by the
> backoffice.  I'm not familiar with rabbitMQ, but the implication I take from
> this thread is that rabbitMQ would not meet our requirements (at least not
> without significant extra bespoke work)  - is that a fair statement?
>
> Regards
>
> Graham
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20081115/b741c7d1/attachment.htm 

From vinorasmus at gmail.com  Sun Nov 16 06:50:49 2008
From: vinorasmus at gmail.com (Gavin Bong)
Date: Sun, 16 Nov 2008 14:50:49 +0800
Subject: [rabbitmq-discuss] What does "Lax ticket check mode" mean ?
Message-ID: <33784a0c0811152250l737ef2fbm2326fb4ea189c728@mail.gmail.com>

Hello,

After making a successfull connection to a rabbitmq instance, I see
the following in the logs.

=WARNING REPORT==== 16-Nov-2008::06:48:59 ===
Lax ticket check mode: ignoring cross-realm access for ticket 101

=WARNING REPORT==== 16-Nov-2008::06:49:00 ===
Lax ticket check mode: ignoring cross-realm access for ticket 101

Anything I should be worried about ? What causes this ?

Thanks

Regards,

Gavin



From 0x6e6562 at gmail.com  Sun Nov 16 12:29:19 2008
From: 0x6e6562 at gmail.com (Ben Hood)
Date: Sun, 16 Nov 2008 12:29:19 +0000
Subject: [rabbitmq-discuss] What does "Lax ticket check mode" mean ?
In-Reply-To: <33784a0c0811152250l737ef2fbm2326fb4ea189c728@mail.gmail.com>
References: <33784a0c0811152250l737ef2fbm2326fb4ea189c728@mail.gmail.com>
Message-ID: <269388e30811160429h65d09eefr8755a38b8b83396b@mail.gmail.com>

Gavin,

On Sun, Nov 16, 2008 at 6:50 AM, Gavin Bong <vinorasmus at gmail.com> wrote:
> =WARNING REPORT==== 16-Nov-2008::06:49:00 ===
> Lax ticket check mode: ignoring cross-realm access for ticket 101
>
> Anything I should be worried about ? What causes this ?

This is a cosmetic bug in 1.4.0 which has subsequently been fixed,
i.e. by removing the concept of realms all together.

Ben



From 0x6e6562 at gmail.com  Sun Nov 16 14:22:17 2008
From: 0x6e6562 at gmail.com (Ben Hood)
Date: Sun, 16 Nov 2008 14:22:17 +0000
Subject: [rabbitmq-discuss] How To Care For Your Rabbit
Message-ID: <269388e30811160622t471e743dj6499e5dc6db2a9f0@mail.gmail.com>

Hi all,

I've started a new experiment to investigate how best to manage
frequently re-occurring questions about Rabbit.

It's an FAQ-o-matic and is available here: http://lettuce.squarespace.com/

So what I'd like to start doing to is put questions like

"What does lax ticket check mode mean?"

into a searchable FAQ list.

This is no essentially no different to the FAQ list we have on the
wiki, I'm just trying to see if it's easier to use and manage in a
different way.

HTH,

Ben



From ilya at aiderss.com  Sun Nov 16 15:26:32 2008
From: ilya at aiderss.com (Ilya Grigorik)
Date: Sun, 16 Nov 2008 10:26:32 -0500
Subject: [rabbitmq-discuss] rabbitmq-discuss Digest, Vol 18, Issue 34
In-Reply-To: <mailman.1.1226836801.12531.rabbitmq-discuss@lists.rabbitmq.com>
References: <mailman.1.1226836801.12531.rabbitmq-discuss@lists.rabbitmq.com>
Message-ID: <57cfcbc70811160726jc0de7a9n18daa72dad5448ef@mail.gmail.com>

Ben, I may be running out of patience on the recovery of the queue (after
the crash), I'll try overloading it once more later tonight and report on my
findings.

https://dev.rabbitmq.com/wiki/DiskOverflow
>
> Comment and add suggestions if any.


Lots of great ideas in there, a few things that stood out to me:

1. I would love to have control of overflow conditions at at queue level.
Having said that it's a double edged sword. Once you're that granular it
also becomes painful do resource planning (woops, forgot a queue) and server
has gone to hell - though I think it's a fair tradeoff.

2. I really like the idea of being able to fix the maximum size on a queue,
as that would allow me to plan for the amount of available memory + disk and
guarantee some QoS thresholds. Drop, Trip, Warn would be perfect for a hard
limit, and I imagine TTL could be an interesting solution to anyone working
with time-sensitive data.

> Filling up a SAN though can be considered an exceptional and absolutely
unavoidable last barrier, after all if you manage to fill up to
> 500GB of space of an average consumer disk probably you forgot that the
server even exists.

Not entirely true, based on my calculations we (AideRSS) would need ~250GB
of space to buffer a day's worth of messages, and that is something we're
aiming for. (Though we may be an edge case)

ig
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20081116/e4ff3b11/attachment.htm 

From 0x6e6562 at gmail.com  Sun Nov 16 16:45:28 2008
From: 0x6e6562 at gmail.com (Ben Hood)
Date: Sun, 16 Nov 2008 16:45:28 +0000
Subject: [rabbitmq-discuss] rabbitmq-discuss Digest, Vol 18, Issue 34
In-Reply-To: <57cfcbc70811160726jc0de7a9n18daa72dad5448ef@mail.gmail.com>
References: <mailman.1.1226836801.12531.rabbitmq-discuss@lists.rabbitmq.com>
	<57cfcbc70811160726jc0de7a9n18daa72dad5448ef@mail.gmail.com>
Message-ID: <269388e30811160845r12f68b87s836b0092b0f5d9fa@mail.gmail.com>

Ilya,

On Sun, Nov 16, 2008 at 3:26 PM, Ilya Grigorik <ilya at aiderss.com> wrote:
> Ben, I may be running out of patience on the recovery of the queue (after
> the crash), I'll try overloading it once more later tonight and report on my
> findings.

Is this running 1.4.0 or the latest development version?

> 1. I would love to have control of overflow conditions at at queue level.
> Having said that it's a double edged sword. Once you're that granular it
> also becomes painful do resource planning (woops, forgot a queue) and server
> has gone to hell - though I think it's a fair tradeoff.

Producer flow control (with behaving clients) would prevent the server
going to hell, you just might not have transparent overflow on that
particular queue that you misconfigured.

> 2. I really like the idea of being able to fix the maximum size on a queue,
> as that would allow me to plan for the amount of available memory + disk and
> guarantee some QoS thresholds. Drop, Trip, Warn would be perfect for a hard
> limit, and I imagine TTL could be an interesting solution to anyone working
> with time-sensitive data.

TTLs are on the mid-term radar.


>> Filling up a SAN though can be considered an exceptional and absolutely
>> unavoidable last barrier, after all if you manage to fill up to
>> 500GB of space of an average consumer disk probably you forgot that the
>> server even exists.
>
> Not entirely true, based on my calculations we (AideRSS) would need ~250GB
> of space to buffer a day's worth of messages, and that is something we're
> aiming for. (Though we may be an edge case)

That was Valentino's (I think :-) answer to my question about what to
do when your SAN fills up, which I've seen happen.

Ben



From dialtone at gmail.com  Sun Nov 16 18:06:59 2008
From: dialtone at gmail.com (Valentino Volonghi)
Date: Sun, 16 Nov 2008 10:06:59 -0800
Subject: [rabbitmq-discuss] rabbitmq-discuss Digest, Vol 18, Issue 34
In-Reply-To: <57cfcbc70811160726jc0de7a9n18daa72dad5448ef@mail.gmail.com>
References: <mailman.1.1226836801.12531.rabbitmq-discuss@lists.rabbitmq.com>
	<57cfcbc70811160726jc0de7a9n18daa72dad5448ef@mail.gmail.com>
Message-ID: <265000AE-C2F2-4E4E-82C6-005EE10C2E45@gmail.com>


On Nov 16, 2008, at 7:26 AM, Ilya Grigorik wrote:

> > Filling up a SAN though can be considered an exceptional and  
> absolutely unavoidable last barrier, after all if you manage to fill  
> up to
> > 500GB of space of an average consumer disk probably you forgot  
> that the server even exists.
>
> Not entirely true, based on my calculations we (AideRSS) would need  
> ~250GB of space to buffer a day's worth of messages, and that is  
> something we're aiming for. (Though we may be an edge case)


Wow, point taken I guess, It's also true that SAN are usually bigger  
than 500GB though.
That point was referring to filling up the disk space on the machine,  
of course in that
case there's nothing rabbitmq can do to avoid crashing other than  
start dropping messages
and so on.

-- 
Valentino Volonghi aka Dialtone
Now running MacOS X 10.5
Home Page: http://www.twisted.it
http://www.adroll.com

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20081116/05f2dc5d/attachment.htm 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: PGP.sig
Type: application/pgp-signature
Size: 194 bytes
Desc: This is a digitally signed message part
Url : http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20081116/05f2dc5d/attachment.pgp 

From alexis.richardson at cohesiveft.com  Sun Nov 16 18:26:52 2008
From: alexis.richardson at cohesiveft.com (Alexis Richardson)
Date: Sun, 16 Nov 2008 18:26:52 +0000
Subject: [rabbitmq-discuss] rabbitmq-discuss Digest, Vol 18, Issue 34
In-Reply-To: <57cfcbc70811160726jc0de7a9n18daa72dad5448ef@mail.gmail.com>
References: <mailman.1.1226836801.12531.rabbitmq-discuss@lists.rabbitmq.com>
	<57cfcbc70811160726jc0de7a9n18daa72dad5448ef@mail.gmail.com>
Message-ID: <167204d20811161026x6f5ac0a5q9b8b54e52272aae4@mail.gmail.com>

Ilya

I recommend persisting with this.  (sorry, I could not resist that)

Can you say a bit more on the list about the case in which you need to
buffer a day's worth of messages please?

* I am assuming flow control does not solve your problem - I think you
have made that clear, but can I just check?
* How often do you expect the 250Gb case to happen - do you consider
it exceptional or normal?
* What about 2Gb, 8Gb, ...?
* Do you have ordering constraints, and/or must all the messages be on one queue
* In the case where you need to page to disk due to a lack of machine
memory, and because your queues are not being drained by consumers,
does it matter what the latency of message delivery is once the
consumers come back?

The point being that there may be some workaround that you can try,
depending on the answer to the above.  You may be able to see where I
am going by the last question... ;-)

alexis


On Sun, Nov 16, 2008 at 3:26 PM, Ilya Grigorik <ilya at aiderss.com> wrote:
> Ben, I may be running out of patience on the recovery of the queue (after
> the crash), I'll try overloading it once more later tonight and report on my
> findings.
>
>> https://dev.rabbitmq.com/wiki/DiskOverflow
>>
>> Comment and add suggestions if any.
>
> Lots of great ideas in there, a few things that stood out to me:
>
> 1. I would love to have control of overflow conditions at at queue level.
> Having said that it's a double edged sword. Once you're that granular it
> also becomes painful do resource planning (woops, forgot a queue) and server
> has gone to hell - though I think it's a fair tradeoff.
>
> 2. I really like the idea of being able to fix the maximum size on a queue,
> as that would allow me to plan for the amount of available memory + disk and
> guarantee some QoS thresholds. Drop, Trip, Warn would be perfect for a hard
> limit, and I imagine TTL could be an interesting solution to anyone working
> with time-sensitive data.
>
>> Filling up a SAN though can be considered an exceptional and absolutely
>> unavoidable last barrier, after all if you manage to fill up to
>> 500GB of space of an average consumer disk probably you forgot that the
>> server even exists.
>
> Not entirely true, based on my calculations we (AideRSS) would need ~250GB
> of space to buffer a day's worth of messages, and that is something we're
> aiming for. (Though we may be an edge case)
>
> ig
>
> _______________________________________________
> rabbitmq-discuss mailing list
> rabbitmq-discuss at lists.rabbitmq.com
> http://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss
>
>



From 0x6e6562 at gmail.com  Sun Nov 16 20:41:28 2008
From: 0x6e6562 at gmail.com (Ben Hood)
Date: Sun, 16 Nov 2008 20:41:28 +0000
Subject: [rabbitmq-discuss] Queue Paging - Disk Overflow
In-Reply-To: <FAF264B3-7EAC-49AC-B0CE-B83754ED94D0@engineyard.com>
References: <269388e30811151459j45c2a6a0k6875227f6e2756@mail.gmail.com>
	<FAF264B3-7EAC-49AC-B0CE-B83754ED94D0@engineyard.com>
Message-ID: <269388e30811161241m78b53eb6ma8bc73e1ccba8db6@mail.gmail.com>

Ez,

On Sun, Nov 16, 2008 at 7:36 PM, Ezra Zygmuntowicz <ez at engineyard.com> wrote:
>        I got 5 on it ;)

Maybe we need to get one of those Paypal Donate buttons........ ;-)

Ben



From ilya at aiderss.com  Sun Nov 16 23:59:03 2008
From: ilya at aiderss.com (Ilya Grigorik)
Date: Sun, 16 Nov 2008 18:59:03 -0500
Subject: [rabbitmq-discuss] rabbitmq-discuss Digest, Vol 18, Issue 34
In-Reply-To: <167204d20811161026x6f5ac0a5q9b8b54e52272aae4@mail.gmail.com>
References: <mailman.1.1226836801.12531.rabbitmq-discuss@lists.rabbitmq.com>
	<57cfcbc70811160726jc0de7a9n18daa72dad5448ef@mail.gmail.com>
	<167204d20811161026x6f5ac0a5q9b8b54e52272aae4@mail.gmail.com>
Message-ID: <57cfcbc70811161559k7796daeft674120283c7fdf22@mail.gmail.com>

Ben: running latest version as of this past Friday (much better than 1.4.0,
which I tried at first)

I recommend persisting with this.  (sorry, I could not resist that)
>

;-)


> * I am assuming flow control does not solve your problem - I think you
> have made that clear, but can I just check?


Yep, in fact, I would much rather not throttle the producers - the queue
becomes a leaky abstraction. I like to think of Rabbit (or any other
router/queue in between) as a buffer, hence it should accept and fan out the
messages without exposing the lag on the consumer side.

I may be conflating two different requirements, but here is an interesting
scenario to think about: our entire infrastructure is deployed on EC2, and
time and time again we've found SQS (simple queue service) a life savior for
big data migrations or general maintenance. We're generating a lot of
real-time data, and SQS allows us to reroute all of it into a temporary
queue, and let it accumulate (we've pushed hundreds of GB's of data into it)
while we do our work, and once we're done, we just flush the queue. No
additional infrastructure required. (same thing for aggregate jobs, or even
one-off trial projects)

Arguably, we could use a different piece of infrastructure to cover this
case (another rabbit consumer which stores data into a database), but if
Rabbit could handle this, life is much easier.

(Wild idea: provide an SQS adapter to reroute packets into at a certain
threshold.. Perhaps not so wild if we get a pluggable interface)

* How often do you expect the 250Gb case to happen - do you consider
> it exceptional or normal?


250GB is an exception, but smaller amounts (1-5Gb) are fairly frequent
(which is theoretically possible even with the current pure memory
deployment).


> * Do you have ordering constraints, and/or must all the messages be on one
> queue


Depends on the data. Most of it is order agnostic, but there is some data
which only makes sense when delivered in order.


> * In the case where you need to page to disk due to a lack of machine
> memory, and because your queues are not being drained by consumers,
> does it matter what the latency of message delivery is once the
> consumers come back?
>

No - within reason, of course. ;-)

The point being that there may be some workaround that you can try,
> depending on the answer to the above.  You may be able to see where I
> am going by the last question... ;-)
>

Absolutely. I'm not saying Rabbit should do all of the things I've described
either. Of course the more the better, but even more importantly I'd like to
see some sane overflow conditions: ttl, max queue size, etc. That I can plan
for, crashing.. won't work. ;-)

ig
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20081116/044fe282/attachment.htm 

From rabbitmq-discuss_efine at usa.net  Mon Nov 17 00:15:29 2008
From: rabbitmq-discuss_efine at usa.net (Edwin Fine)
Date: Sun, 16 Nov 2008 19:15:29 -0500
Subject: [rabbitmq-discuss] Queue Paging - Disk Overflow
In-Reply-To: <269388e30811161241m78b53eb6ma8bc73e1ccba8db6@mail.gmail.com>
References: <269388e30811151459j45c2a6a0k6875227f6e2756@mail.gmail.com>
	<FAF264B3-7EAC-49AC-B0CE-B83754ED94D0@engineyard.com>
	<269388e30811161241m78b53eb6ma8bc73e1ccba8db6@mail.gmail.com>
Message-ID: <6c2563b20811161615i99c80f4j3661f873d85dded0@mail.gmail.com>

Count me in too. Heck, (he said generously), make it $10!

Seriously, though, I don't want to be an ass about this, but I would think
that there are now enough people (namely, non-paying customers ;) with
enough valid use cases making enough noise about this particular issue, to
warrant bumping it to the top of the Rabbit architectural issues list. When
someone cannot even restart a node to drain the persister log after the node
crashes with OOM, and has to delete the persister log, you know that there's
a significant design deficiency to be remedied post-haste.

Please believe me when I tell you that I am not trying to beat you up about
it or be nasty or unfair - I have great regard for the
Cohesive/LShift/Rabbit team - but I think it's reasonable to say that it's
time to spend the estimated 3 work-weeks (I assume 120 work-hours) to remedy
this. The cost of this should not be extreme. Let me put my project-manager
hat on here... unless I am badly out of touch, one of your team shouldn't
cost much more than, say, $80/hour at contract rates, so you are talking
$10K to fix this (if I am wrong, and the rates are higher than that, PLEASE
can I work for you? ;). Is there a way you could beg, borrow or
venture-capital this to fast-track it? Or, being more constructive, how
about 50 Rabbit users contributing $200 each? 25 @ $400? I would gladly
contribute US$200-$400 to get this done (really). I wish I had $10K to just
pay for this but sadly I don't.

What do you say, Rabbit list? Would 49 of you PayPal $200 to get this done?

I agree there is *maybe* a workaround by bumping up the swap space to a big
number, but I see that as an emergency measure. I tried an experiment last
night where I started an Erlang node in smp -disable mode (so that I had
some free CPUs to kill it if things got hairy), and ran a tight loop that
grew a list very quickly. I have a 20GB swap partition on Ubuntu x86_64,
4-core, 8GB RAM. The Erlang node to got 8GB resident, and just before (and
after) that, Linux starting trimming the working sets of the other processes
to feed the hungry node. If I read the "top" display right, it managed to
trim the working sets of most other processes down to around 5 - 10MB each
(amazing!). The swap space used went up to 10GB, the Erlang node up to
14.5GB of virtual memory, 6.5GB of resident memory. At that point the system
ran like an anaesthetized snail, even though there were 3 almost idle CPUs.
Command-line and GUI response times went sky-high, probably because
everything was swapped half to death. The Erlang shell of the memory hog
didn't even respond to Ctrl-C any more. It almost seemed as the node hung,
but I can't swear to that. The good news is that I was able to kill the
gluttonous node, and the system didn't crash (although it likely would have
if it ran out of swap space) and it recovered perfectly. Did I mention I
love Linux?

I'd like to repeat this test using Rabbit, by feeding it a metric grillion
persistent messages without draining, stopping it before it crashes, and
seeing if I can get it to recover once the swap file is almost full (by
starting consumers). Unless someone has done this already?

I suppose if one did run out of swap and got a panic crash, one could add a
big fat terabyte disc (or logical volume) to the machine and put a humongous
swap partition there, then restart and let Rabbit try to recover the
persister log. Theoretically, it should be able to do so - eventually -
because the swap space should now be large enough to take the entire
persister log's memory-resident bits. One might need to set up the Linux
kernel flags suitably to prevent the process killer from killing the Rabbit
process before it has a chance to drain the swamp, I mean queue.

Just to reiterate: Rabbit is a great product and you are a great team. This
is not a "moan".

Regards,
Edwin


On Sun, Nov 16, 2008 at 3:41 PM, Ben Hood <0x6e6562 at gmail.com> wrote:

> Ez,
>
> On Sun, Nov 16, 2008 at 7:36 PM, Ezra Zygmuntowicz <ez at engineyard.com>
> wrote:
> >        I got 5 on it ;)
>
> Maybe we need to get one of those Paypal Donate buttons........ ;-)
>
> Ben
>
> _______________________________________________
> rabbitmq-discuss mailing list
> rabbitmq-discuss at lists.rabbitmq.com
> http://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20081116/8ebbddec/attachment.htm 

From 0x6e6562 at gmail.com  Mon Nov 17 01:00:44 2008
From: 0x6e6562 at gmail.com (Ben Hood)
Date: Mon, 17 Nov 2008 01:00:44 +0000
Subject: [rabbitmq-discuss] Queue Paging - Disk Overflow
In-Reply-To: <6c2563b20811161615i99c80f4j3661f873d85dded0@mail.gmail.com>
References: <269388e30811151459j45c2a6a0k6875227f6e2756@mail.gmail.com>
	<FAF264B3-7EAC-49AC-B0CE-B83754ED94D0@engineyard.com>
	<269388e30811161241m78b53eb6ma8bc73e1ccba8db6@mail.gmail.com>
	<6c2563b20811161615i99c80f4j3661f873d85dded0@mail.gmail.com>
Message-ID: <269388e30811161700s1f8caf95j3f3cbfb3476dc64c@mail.gmail.com>

Ed,
Ed,

On Mon, Nov 17, 2008 at 12:15 AM, Edwin Fine
<rabbitmq-discuss_efine at usa.net> wrote:
> Count me in too. Heck, (he said generously), make it $10!

OK, I've added a donate button to the lettuce site so that you can
take care of your Rabbit :-)

> Seriously, though, I don't want to be an ass about this, but I would think
> that there are now enough people (namely, non-paying customers ;) with
> enough valid use cases making enough noise about this particular issue, to
> warrant bumping it to the top of the Rabbit architectural issues list. When
> someone cannot even restart a node to drain the persister log after the node
> crashes with OOM, and has to delete the persister log, you know that there's
> a significant design deficiency to be remedied post-haste.

That wasn't a design deficiency, that's just how we chose to implement
it. Design-wise, it is reasonably easy to incorporate.

>- but I think it's reasonable to say that it's
> time to spend the estimated 3 work-weeks (I assume 120 work-hours) to remedy
> this. The cost of this should not be extreme. Let me put my project-manager
> hat on here... unless I am badly out of touch, one of your team shouldn't
> cost much more than, say, $80/hour at contract rates, so you are talking
> $10K to fix this (if I am wrong, and the rates are higher than that, PLEASE
> can I work for you? ;).

10K would probably do it, but that's not our daily rate -   we'd do it
because of the cause.

Yes, we could probably outsource some AS/400 stuff to you ;-)

> Is there a way you could beg, borrow or
> venture-capital this to fast-track it?

:-)

Ben



From 0x6e6562 at gmail.com  Mon Nov 17 01:09:22 2008
From: 0x6e6562 at gmail.com (Ben Hood)
Date: Mon, 17 Nov 2008 01:09:22 +0000
Subject: [rabbitmq-discuss] rabbitmq-discuss Digest, Vol 18, Issue 34
In-Reply-To: <57cfcbc70811161559k7796daeft674120283c7fdf22@mail.gmail.com>
References: <mailman.1.1226836801.12531.rabbitmq-discuss@lists.rabbitmq.com>
	<57cfcbc70811160726jc0de7a9n18daa72dad5448ef@mail.gmail.com>
	<167204d20811161026x6f5ac0a5q9b8b54e52272aae4@mail.gmail.com>
	<57cfcbc70811161559k7796daeft674120283c7fdf22@mail.gmail.com>
Message-ID: <269388e30811161709w655bfcc0g9372b01e73b17ff3@mail.gmail.com>

Ilya,

On Sun, Nov 16, 2008 at 11:59 PM, Ilya Grigorik <ilya at aiderss.com> wrote:
> Ben: running latest version as of this past Friday (much better than 1.4.0,
> which I tried at first)

Good to know. Let us know how the recovery fairs.

As for the other points, they arose out of a discussion with Alexis,
so I'll him answer them.

Ben



From 0x6e6562 at gmail.com  Mon Nov 17 01:10:25 2008
From: 0x6e6562 at gmail.com (Ben Hood)
Date: Mon, 17 Nov 2008 01:10:25 +0000
Subject: [rabbitmq-discuss] rabbitmq-discuss Digest, Vol 18, Issue 34
In-Reply-To: <269388e30811161709w655bfcc0g9372b01e73b17ff3@mail.gmail.com>
References: <mailman.1.1226836801.12531.rabbitmq-discuss@lists.rabbitmq.com>
	<57cfcbc70811160726jc0de7a9n18daa72dad5448ef@mail.gmail.com>
	<167204d20811161026x6f5ac0a5q9b8b54e52272aae4@mail.gmail.com>
	<57cfcbc70811161559k7796daeft674120283c7fdf22@mail.gmail.com>
	<269388e30811161709w655bfcc0g9372b01e73b17ff3@mail.gmail.com>
Message-ID: <269388e30811161710w219baacdm295bcfdf681dd8f9@mail.gmail.com>

On Mon, Nov 17, 2008 at 1:09 AM, Ben Hood <0x6e6562 at gmail.com> wrote:
> As for the other points, they arose out of a discussion with Alexis,
> so I'll him answer them.

s/him/let him/



From ilya at aiderss.com  Mon Nov 17 04:25:07 2008
From: ilya at aiderss.com (Ilya Grigorik)
Date: Sun, 16 Nov 2008 23:25:07 -0500
Subject: [rabbitmq-discuss] rabbitmq-discuss Digest, Vol 18, Issue 34
In-Reply-To: <269388e30811161709w655bfcc0g9372b01e73b17ff3@mail.gmail.com>
References: <mailman.1.1226836801.12531.rabbitmq-discuss@lists.rabbitmq.com>
	<57cfcbc70811160726jc0de7a9n18daa72dad5448ef@mail.gmail.com>
	<167204d20811161026x6f5ac0a5q9b8b54e52272aae4@mail.gmail.com>
	<57cfcbc70811161559k7796daeft674120283c7fdf22@mail.gmail.com>
	<269388e30811161709w655bfcc0g9372b01e73b17ff3@mail.gmail.com>
Message-ID: <57cfcbc70811162025ka5106cdw23d2f69dd8e4acce@mail.gmail.com>

Man, I feel silly.. I don't know how I haven't caught this before, but the
box I'm running the tests on has no swap partition - completely disabled, I
must have booted the wrong image!

Long story short:

/usr/sbin/rabbitmq-server: line 76: 28477 Killed                  erl -pa
"`dirname $0`/../ebin" ${START_RABBIT} -sname ${NODENAME} -boot start_sasl
+W w ${ERL_ARGS} -rabbit tcp_listeners '[{"'${NODE_IP_ADDRESS}'",
'${NODE_PORT}'}]' -sasl errlog_type error -kernel error_logger
'{file,"'${LOGS}'"}' -sasl sasl_error_logger '{file,"'${SASL_LOGS}'"}'
-os_mon start_cpu_sup true -os_mon start_disksup false -os_mon start_memsup
true -os_mon start_os_sup false -os_mon memsup_system_only true -os_mon
system_memory_high_watermark 0.90 -mnesia dir "\"${MNESIA_DIR}\""
${CLUSTER_CONFIG} ${RABBIT_ARGS} "$@"

---
Nov 16 04:11:45 ip-10-251-102-223 kernel: Out of Memory: Kill process 28470
(rabbitmq-server) score 1084241 and children.
Nov 16 04:11:45 ip-10-251-102-223 kernel: Out of memory: Killed process
28477 (beam.smp).
Nov 16 04:11:45 ip-10-251-102-223 kernel: oom-killer: gfp_mask=0x201d2,
order=0
---

-rw-r--r-- 1 root root    8 Nov 16 04:11 rabbit_persister.LOG
-rw-r--r-- 1 root root 368M Nov 16 04:11 rabbit_persister.LOG.previous

---

Needless to say, nothing to recover in the first log file (the process must
have been killed while dumping from memory). Renaming the .previous file
brought rabbit back online in ~30 seconds. What's interesting is that the
persister size is really small, not sure how the process could have run out
of memory? All messages sent to it very marked as persistent. (it was
running overnight)

I'll do some testing with SWAP tomorrow.

ig
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20081116/0d19718a/attachment.htm 

From dialtone at gmail.com  Mon Nov 17 08:56:48 2008
From: dialtone at gmail.com (Valentino Volonghi)
Date: Mon, 17 Nov 2008 00:56:48 -0800
Subject: [rabbitmq-discuss] Queue Paging - Disk Overflow
In-Reply-To: <6c2563b20811161615i99c80f4j3661f873d85dded0@mail.gmail.com>
References: <269388e30811151459j45c2a6a0k6875227f6e2756@mail.gmail.com>
	<FAF264B3-7EAC-49AC-B0CE-B83754ED94D0@engineyard.com>
	<269388e30811161241m78b53eb6ma8bc73e1ccba8db6@mail.gmail.com>
	<6c2563b20811161615i99c80f4j3661f873d85dded0@mail.gmail.com>
Message-ID: <79F62EDE-F371-4F68-9ADA-133454360861@gmail.com>


On Nov 16, 2008, at 4:15 PM, Edwin Fine wrote:

> What do you say, Rabbit list? Would 49 of you PayPal $200 to get  
> this done?


I'll talk with my CTO tomorrow and see what we can put together. If it  
were just
up to me I'd be in for a grand actually.

-- 
Valentino Volonghi aka Dialtone
Now running MacOS X 10.5
Home Page: http://www.twisted.it
http://www.adroll.com

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20081117/d6afe429/attachment.htm 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: PGP.sig
Type: application/pgp-signature
Size: 194 bytes
Desc: This is a digitally signed message part
Url : http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20081117/d6afe429/attachment.pgp 

From 0x6e6562 at gmail.com  Mon Nov 17 10:01:35 2008
From: 0x6e6562 at gmail.com (Ben Hood)
Date: Mon, 17 Nov 2008 10:01:35 +0000
Subject: [rabbitmq-discuss] Queue Paging - Disk Overflow
In-Reply-To: <79F62EDE-F371-4F68-9ADA-133454360861@gmail.com>
References: <269388e30811151459j45c2a6a0k6875227f6e2756@mail.gmail.com>
	<FAF264B3-7EAC-49AC-B0CE-B83754ED94D0@engineyard.com>
	<269388e30811161241m78b53eb6ma8bc73e1ccba8db6@mail.gmail.com>
	<6c2563b20811161615i99c80f4j3661f873d85dded0@mail.gmail.com>
	<79F62EDE-F371-4F68-9ADA-133454360861@gmail.com>
Message-ID: <269388e30811170201g3c017cc0h8b776329cb85a805@mail.gmail.com>

Dear Rabbit Community,

On Mon, Nov 17, 2008 at 8:56 AM, Valentino Volonghi <dialtone at gmail.com> wrote:
> I'll talk with my CTO tomorrow and see what we can put together. If it were
> just
> up to me I'd be in for a grand actually.

Thanks for looking into this, you'll make a bunny happy  :-)

BTW - Many thanks to those who have already donated - I was surprised
at the reaction that we got just after I added the link to the page.
We'll have to see what comes together, but I will keep you informed as
to how this is going to get publicized and more importantly, when
feature X is going to be delivered.

Thanks for the support!

Ben



From alexis.richardson at cohesiveft.com  Mon Nov 17 12:11:58 2008
From: alexis.richardson at cohesiveft.com (Alexis Richardson)
Date: Mon, 17 Nov 2008 12:11:58 +0000
Subject: [rabbitmq-discuss] rabbitmq-discuss Digest, Vol 18, Issue 34
In-Reply-To: <57cfcbc70811161559k7796daeft674120283c7fdf22@mail.gmail.com>
References: <mailman.1.1226836801.12531.rabbitmq-discuss@lists.rabbitmq.com>
	<57cfcbc70811160726jc0de7a9n18daa72dad5448ef@mail.gmail.com>
	<167204d20811161026x6f5ac0a5q9b8b54e52272aae4@mail.gmail.com>
	<57cfcbc70811161559k7796daeft674120283c7fdf22@mail.gmail.com>
Message-ID: <167204d20811170411p5840edecx93709e39afd15b14@mail.gmail.com>

Ilya

Thanks very much for your input and detail on this.


On Sun, Nov 16, 2008 at 11:59 PM, Ilya Grigorik <ilya at aiderss.com> wrote:
>>
>> * I am assuming flow control does not solve your problem - I think you
>> have made that clear, but can I just check?
>
>
> Yep, in fact, I would much rather not throttle the producers - the queue
> becomes a leaky abstraction.

Good - that is what I thought.


> I like to think of Rabbit (or any other
> router/queue in between) as a buffer, hence it should accept and fan out the
> messages without exposing the lag on the consumer side.

Absolutely.  You'll appreciate of course that when we began the
RabbitMQ project we assumed that the use cases would align well with
those which led to the original AMQP spec.  Of course since then we
have learnt that AMQP really does has have potential for widespread
applicability as a true 'internet protocol'.  And for general purpose
messaging this can include the use case where vast numbers of messages
must be persisted for a long time, because there are no consumers
available.  Although supporting this case is a natural extension of
the broker, let's see if we cannot find a workaround in the meantime.

(Incidentally, at an early stage in AMQP's design it was intended to
include file streaming as a core use case but this has been postponed
at least at the protocol level.)



> I may be conflating two different requirements, but here is an interesting
> scenario to think about: our entire infrastructure is deployed on EC2, and
> time and time again we've found SQS (simple queue service) a life savior for
> big data migrations or general maintenance. We're generating a lot of
> real-time data, and SQS allows us to reroute all of it into a temporary
> queue, and let it accumulate (we've pushed hundreds of GB's of data into it)
> while we do our work, and once we're done, we just flush the queue. No
> additional infrastructure required. (same thing for aggregate jobs, or even
> one-off trial projects)

The SQS use case is interesting and it is one that I am tracking.

I think you have illustrated that you are not conflating requirements
and that the notion of a buffer does not necessarily imply eager
consumption.




> Arguably, we could use a different piece of infrastructure to cover this
> case (another rabbit consumer which stores data into a database), but if
> Rabbit could handle this, life is much easier.

Well - this is where I was going - for a workaround.  I know of people
who have done this and have been trying to tease these use cases into
the public domain and on list..  Bear with us.



> (Wild idea: provide an SQS adapter to reroute packets into at a certain
> threshold.. Perhaps not so wild if we get a pluggable interface)

Interesting, I'd prefer to address your core problem though.


>> * How often do you expect the 250Gb case to happen - do you consider
>> it exceptional or normal?
>
> 250GB is an exception, but smaller amounts (1-5Gb) are fairly frequent
> (which is theoretically possible even with the current pure memory
> deployment).

So for 5Gb where the messages do not all need to be on one queue, you
should be fine with a cluster of 1-4 broker nodes.  Obviously these
would be persisted in the normal way.

For cases where you do not have enough memory: You could use Ben's
producer control flow to deliver an alert when a memory threshold is
breached.  Then you could drain the messages into a data store.  This
is workaround provided ordering and latency issues do not create
bottlenecks or other problems at high scale.


>> * Do you have ordering constraints, and/or must all the messages be on one
>> queue
>
> Depends on the data. Most of it is order agnostic, but there is some data
> which only makes sense when delivered in order.

Ok, then you could use multiple queues and rely on them for ordering.

My general advice to people with cast amounts of data where consumers
may need to recover production order later, is to attach application
level identifiers to each message.  That way you can use as many
queues as you like, in extremis, across any number of nodes and
message storage locations.



>> * In the case where you need to page to disk due to a lack of machine
>> memory, and because your queues are not being drained by consumers,
>> does it matter what the latency of message delivery is once the
>> consumers come back?
>
> No - within reason, of course. ;-)

So, it would be tolerable (performance wise) to retrieve your 250Gb of
messages as a stream, which would be reconstructed from the putative
overflow store.

This is all pending a proper page-to-disk solution of course.


>> The point being that there may be some workaround that you can try,
>> depending on the answer to the above.  You may be able to see where I
>> am going by the last question... ;-)
>
> Absolutely. I'm not saying Rabbit should do all of the things I've described
> either. Of course the more the better, but even more importantly I'd like to
> see some sane overflow conditions: ttl, max queue size, etc. That I can plan
> for, crashing.. won't work. ;-)

Yes I think we are ALL on the same page here  (aargh, sorry ..)

alexis



From ilya at aiderss.com  Mon Nov 17 22:53:09 2008
From: ilya at aiderss.com (Ilya Grigorik)
Date: Mon, 17 Nov 2008 17:53:09 -0500
Subject: [rabbitmq-discuss] rabbitmq-discuss Digest, Vol 18, Issue 34
In-Reply-To: <167204d20811170411p5840edecx93709e39afd15b14@mail.gmail.com>
References: <mailman.1.1226836801.12531.rabbitmq-discuss@lists.rabbitmq.com>
	<57cfcbc70811160726jc0de7a9n18daa72dad5448ef@mail.gmail.com>
	<167204d20811161026x6f5ac0a5q9b8b54e52272aae4@mail.gmail.com>
	<57cfcbc70811161559k7796daeft674120283c7fdf22@mail.gmail.com>
	<167204d20811170411p5840edecx93709e39afd15b14@mail.gmail.com>
Message-ID: <57cfcbc70811171453maa0937fg16ebc0bd587ad4a1@mail.gmail.com>

I've been running more benchmarks on Rabbit today, few more questions popped
up:

Any rules of thumb for memory requirements on Rabbit? I've setup a simple
consumer which pushes ~10kb/s into a Rabbit queue, and the persister file is
growing at an expected rate, but the memory appears to be fluctuating all
over the map. My persister got up to 386MB, but resident side of rabbit shot
up to 3.5GB.

Also, I've added a liberal swap partition to the box, but I'm still seeing
same behavior as before: rabbit died at around 2.2GB in the perister.log.
Kernel logs are not showing anything suspicious, and the node doesn't spit
out anything useful either:

=INFO REPORT==== 17-Nov-2008::17:46:00 ===
    alarm_handler: {clear,system_memory_high_watermark}

=INFO REPORT==== 17-Nov-2008::17:46:26 ===
Rolling persister log to
"/var/lib/rabbitmq/mnesia/rabbit/rabbit_persister.LOG.previous"

---

Erlang has closed
/usr/local/lib/erlang/lib/os_mon-2.1.8/priv/bin/memsup: Erlang has closed.

Is there a debug mode I could enable?

ig

P.S. I'm in for pitching in to fix this stuff. ;-)
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20081117/cf5ea860/attachment.htm 

From matthias at lshift.net  Mon Nov 17 23:13:04 2008
From: matthias at lshift.net (Matthias Radestock)
Date: Mon, 17 Nov 2008 23:13:04 +0000
Subject: [rabbitmq-discuss] rabbitmq-discuss Digest, Vol 18, Issue 34
In-Reply-To: <57cfcbc70811171453maa0937fg16ebc0bd587ad4a1@mail.gmail.com>
References: <mailman.1.1226836801.12531.rabbitmq-discuss@lists.rabbitmq.com>	<57cfcbc70811160726jc0de7a9n18daa72dad5448ef@mail.gmail.com>	<167204d20811161026x6f5ac0a5q9b8b54e52272aae4@mail.gmail.com>	<57cfcbc70811161559k7796daeft674120283c7fdf22@mail.gmail.com>	<167204d20811170411p5840edecx93709e39afd15b14@mail.gmail.com>
	<57cfcbc70811171453maa0937fg16ebc0bd587ad4a1@mail.gmail.com>
Message-ID: <4921FA80.5000003@lshift.net>

Ilya Grigorik wrote:
> I've setup a 
> simple consumer which pushes ~10kb/s into a Rabbit queue,

Presumably you mean a *producer*. Is that producer publishing the 
messages as fast as it can, or is it rate-limited?

And how did you measure the rate?

> the memory appears to be fluctuating all over the map.

Large fluctuations in memory are nothing unusual in most 
garbage-collected languages.

> Also, I've added a liberal swap partition to the box, but I'm still 
> seeing same behavior as before: rabbit died at around 2.2GB in the 
> perister.log.

If the producer isn't rate-limited then message backlogs can build up in 
various places throughout the system, before they ever get to the 
persister. Furthermore, unless you use transactions, messages are 
persisted asynchronously. So consequently you may have many more 
messages in memory than have been written to disk.



Matthias.



From rabbitmq-discuss_efine at usa.net  Mon Nov 17 23:19:57 2008
From: rabbitmq-discuss_efine at usa.net (Edwin Fine)
Date: Mon, 17 Nov 2008 18:19:57 -0500
Subject: [rabbitmq-discuss] rabbitmq-discuss Digest, Vol 18, Issue 34
In-Reply-To: <57cfcbc70811171453maa0937fg16ebc0bd587ad4a1@mail.gmail.com>
References: <mailman.1.1226836801.12531.rabbitmq-discuss@lists.rabbitmq.com>
	<57cfcbc70811160726jc0de7a9n18daa72dad5448ef@mail.gmail.com>
	<167204d20811161026x6f5ac0a5q9b8b54e52272aae4@mail.gmail.com>
	<57cfcbc70811161559k7796daeft674120283c7fdf22@mail.gmail.com>
	<167204d20811170411p5840edecx93709e39afd15b14@mail.gmail.com>
	<57cfcbc70811171453maa0937fg16ebc0bd587ad4a1@mail.gmail.com>
Message-ID: <6c2563b20811171519r428a621g479e0f84ae45d753@mail.gmail.com>

Ilya,

Are you using Linux? If so, did the Linux OOM killer maybe zap the Erlang
node?

You could try this:

$ sudo sysctl vm.overcommit_memory=2
vm.overcommit_memory = 2

Also take a look at overcommit_ratio and swappiness.

HTH.
Ed

On Mon, Nov 17, 2008 at 5:53 PM, Ilya Grigorik <ilya at aiderss.com> wrote:

> I've been running more benchmarks on Rabbit today, few more questions
> popped up:
>
> Any rules of thumb for memory requirements on Rabbit? I've setup a simple
> consumer which pushes ~10kb/s into a Rabbit queue, and the persister file is
> growing at an expected rate, but the memory appears to be fluctuating all
> over the map. My persister got up to 386MB, but resident side of rabbit shot
> up to 3.5GB.
>
> Also, I've added a liberal swap partition to the box, but I'm still seeing
> same behavior as before: rabbit died at around 2.2GB in the perister.log.
> Kernel logs are not showing anything suspicious, and the node doesn't spit
> out anything useful either:
>
> =INFO REPORT==== 17-Nov-2008::17:46:00 ===
>     alarm_handler: {clear,system_memory_high_watermark}
>
> =INFO REPORT==== 17-Nov-2008::17:46:26 ===
> Rolling persister log to
> "/var/lib/rabbitmq/mnesia/rabbit/rabbit_persister.LOG.previous"
>
> ---
>
> Erlang has closed
> /usr/local/lib/erlang/lib/os_mon-2.1.8/priv/bin/memsup: Erlang has closed.
>
> Is there a debug mode I could enable?
>
> ig
>
> P.S. I'm in for pitching in to fix this stuff. ;-)
>
> _______________________________________________
> rabbitmq-discuss mailing list
> rabbitmq-discuss at lists.rabbitmq.com
> http://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20081117/1c11fedd/attachment.htm 

From ilya at aiderss.com  Tue Nov 18 03:23:04 2008
From: ilya at aiderss.com (Ilya Grigorik)
Date: Mon, 17 Nov 2008 22:23:04 -0500
Subject: [rabbitmq-discuss] rabbitmq-discuss Digest, Vol 18, Issue 34
In-Reply-To: <4921FA80.5000003@lshift.net>
References: <mailman.1.1226836801.12531.rabbitmq-discuss@lists.rabbitmq.com>
	<57cfcbc70811160726jc0de7a9n18daa72dad5448ef@mail.gmail.com>
	<167204d20811161026x6f5ac0a5q9b8b54e52272aae4@mail.gmail.com>
	<57cfcbc70811161559k7796daeft674120283c7fdf22@mail.gmail.com>
	<167204d20811170411p5840edecx93709e39afd15b14@mail.gmail.com>
	<57cfcbc70811171453maa0937fg16ebc0bd587ad4a1@mail.gmail.com>
	<4921FA80.5000003@lshift.net>
Message-ID: <57cfcbc70811171923q2e2b38caic71c1fe02d5e028c@mail.gmail.com>

>
> I've setup a simple consumer which pushes ~10kb/s into a Rabbit queue,
>>
>
> Presumably you mean a *producer*. Is that producer publishing the messages
> as fast as it can, or is it rate-limited?
>

Yes, my bad, should have said 'producer'.


> And how did you measure the rate?
>

Monitoring network IO with collectl on the RabbitMQ box.


> the memory appears to be fluctuating all over the map.
>
> Large fluctuations in memory are nothing unusual in most garbage-collected
> languages.
>

Sure, though order of magnitude? 300 working set to 3GB? You're probably
right.. in which case, damn!


> Also, I've added a liberal swap partition to the box, but I'm still seeing
> same behavior as before: rabbit died at around 2.2GB in the perister.log.
>
> If the producer isn't rate-limited then message backlogs can build up in
> various places throughout the system, before they ever get to the persister.
> Furthermore, unless you use transactions, messages are persisted
> asynchronously. So consequently you may have many more messages in memory
> than have been written to disk.
>

Interesting, I thought the semantics of 'persistent' flag guaranteed that
each messages has been committed to a journal?
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20081117/0fcd8004/attachment.htm 

From ilya at aiderss.com  Tue Nov 18 03:52:18 2008
From: ilya at aiderss.com (Ilya Grigorik)
Date: Mon, 17 Nov 2008 22:52:18 -0500
Subject: [rabbitmq-discuss] rabbitmq-discuss Digest, Vol 18, Issue 34
In-Reply-To: <6c2563b20811171519r428a621g479e0f84ae45d753@mail.gmail.com>
References: <mailman.1.1226836801.12531.rabbitmq-discuss@lists.rabbitmq.com>
	<57cfcbc70811160726jc0de7a9n18daa72dad5448ef@mail.gmail.com>
	<167204d20811161026x6f5ac0a5q9b8b54e52272aae4@mail.gmail.com>
	<57cfcbc70811161559k7796daeft674120283c7fdf22@mail.gmail.com>
	<167204d20811170411p5840edecx93709e39afd15b14@mail.gmail.com>
	<57cfcbc70811171453maa0937fg16ebc0bd587ad4a1@mail.gmail.com>
	<6c2563b20811171519r428a621g479e0f84ae45d753@mail.gmail.com>
Message-ID: <57cfcbc70811171952td1532c3hbfefcb238b1f88e0@mail.gmail.com>

> Are you using Linux? If so, did the Linux OOM killer maybe zap the Erlang
> node?
>

That's what I thought, but can't find any trace of it.

You could try this:
>
> $ sudo sysctl vm.overcommit_memory=2
> vm.overcommit_memory = 2
>

Interesting, this helped a bit. Got up to 2.7GB in persister, then killed
the Erlang node once again. No kernel logs, no nothing. Grrr!

Another interesting observation (not surprising), while swapping to disk,
the accept throughput drops to the floor. I'm sending messages with ack's
disabled, so I'm assuming the vast majority simply never make it to the
queue, here's a quick snapshot (9th column is the KBin .. top half shows
swapping to disk, then once some memory is available it once again resumes
at ~3.5mbs/):

   4   3  2191    995      0      0   9224   1036   1458   1098     36
562
   2   2  1257    212      0      0   6636    599     49     49      5
29
   0   0   305     90      0      0   2399    148      0      5      3
6
   7   7  1247    336      0      0   7323    523     87     79      5
42
   3   3  2729   1023      0      0   8192   1137    986    901     34
481
   6   6  1024    320      0      0  10760    620    248    220     10
119
   2   2   630    146      0      0   7544    596    824    667     28
354
   0   0  1617    683      0      0   3712    918      0      1      0
1
   2   2   889    125      0      0   9280    881      1      9      3
10
#<--------CPU--------><----------Disks-----------><----------Network---------->
#cpu sys inter  ctxsw KBRead  Reads KBWrit Writes   KBIn  PktIn  KBOut
PktOut
   9   8   902    355     94     10  11713    775     17     21      4
19
  37  24  1807    478    503     33   2974    145    172    153      9
82
  21  20  1221    944    448     14      0      0   1600   1187     40
589
   4   3  2443   1881    669     21      0      0   2750   2289     78
1169
   0   0  3624   2931   1865     58      0      0   4444   3772    126
1926
   0   0  2060   1660   1726     54      0      0   2704   2148     71
1059
   2   1  2872   2361   1791     57      0      0   3728   2963     99
1497
   2   1  3299   2679   1821     61      0      0   3927   3325    112
1688

Also take a look at overcommit_ratio and swappiness.
>

Swappiness is at default (60), and overcommit_ratio at 50.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20081117/10c0ebc0/attachment.htm 

From chime at mu.dk  Tue Nov 18 07:19:41 2008
From: chime at mu.dk (Michael Arnoldus)
Date: Tue, 18 Nov 2008 08:19:41 +0100
Subject: [rabbitmq-discuss] RabbitMQ capabilities
Message-ID: <63697693-BD0B-44E6-941A-CD567B7E8313@mu.dk>

Hi,

Last night I was rereading the AMQP 0.8 spec in connection with some  
architectural refactoring. I want to ask you how Rabbit supports these:

1. Returning unroutable messages (page 20 line 2-3)
2. Returning messages with no consumers (page 20 line 10-11)
3. Chained bindings (page 25 line 22-...)
4. Message selectors (page 26 line 24-...)

Regards,

Michael Arnoldus

-------------- next part --------------
A non-text attachment was scrubbed...
Name: smime.p7s
Type: application/pkcs7-signature
Size: 1912 bytes
Desc: not available
Url : http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20081118/ddf233f9/attachment.bin 

From matthias at lshift.net  Tue Nov 18 07:55:07 2008
From: matthias at lshift.net (Matthias Radestock)
Date: Tue, 18 Nov 2008 07:55:07 +0000
Subject: [rabbitmq-discuss] rabbitmq-discuss Digest, Vol 18, Issue 34
In-Reply-To: <57cfcbc70811171923q2e2b38caic71c1fe02d5e028c@mail.gmail.com>
References: <mailman.1.1226836801.12531.rabbitmq-discuss@lists.rabbitmq.com>	<57cfcbc70811160726jc0de7a9n18daa72dad5448ef@mail.gmail.com>	<167204d20811161026x6f5ac0a5q9b8b54e52272aae4@mail.gmail.com>	<57cfcbc70811161559k7796daeft674120283c7fdf22@mail.gmail.com>	<167204d20811170411p5840edecx93709e39afd15b14@mail.gmail.com>	<57cfcbc70811171453maa0937fg16ebc0bd587ad4a1@mail.gmail.com>	<4921FA80.5000003@lshift.net>
	<57cfcbc70811171923q2e2b38caic71c1fe02d5e028c@mail.gmail.com>
Message-ID: <492274DB.4000405@lshift.net>

Ilya,

Ilya Grigorik wrote:
>     If the producer isn't rate-limited then message backlogs can build
>     up in various places throughout the system, before they ever get to
>     the persister. Furthermore, unless you use transactions, messages
>     are persisted asynchronously. So consequently you may have many more
>     messages in memory than have been written to disk.
> 
> 
> Interesting, I thought the semantics of 'persistent' flag guaranteed 
> that each messages has been committed to a journal?

basic.publish is an asynchronous method, and quite deliberately so; it 
does not solicit a reply from the server. So while the server ensures 
that each persistent message is *eventually* committed to a journal, 
there is no way for the server to tell the producer when that has been done.

Use of tx.{select,commit,rollback} changes that. The server guarantees 
that by the time it sends a tx.commit-ok all persistent messages 
published inside the preceding tx have been written to disk.


Matthias.



From matthias at lshift.net  Tue Nov 18 08:07:01 2008
From: matthias at lshift.net (Matthias Radestock)
Date: Tue, 18 Nov 2008 08:07:01 +0000
Subject: [rabbitmq-discuss] RabbitMQ capabilities
In-Reply-To: <63697693-BD0B-44E6-941A-CD567B7E8313@mu.dk>
References: <63697693-BD0B-44E6-941A-CD567B7E8313@mu.dk>
Message-ID: <492277A5.2040409@lshift.net>

Michael,

Michael Arnoldus wrote:
> I want to ask you how Rabbit supports these:
> 
> 1. Returning unroutable messages (page 20 line 2-3)

When the 'mandatory' flag is set in basic.publish, any messages that 
cannot be routed to a queue is returned to the publishing client with 
basic.return.

> 2. Returning messages with no consumers (page 20 line 10-11)

When the 'immediate' flag is set in basic.publish, any messages that 
cannot be immediately sent to some consumer is returned to the 
publishing client with basic.return.

> 3. Chained bindings (page 25 line 22-...)

The 0-8/9 versions of the protocol define no mechanisms to do this.

> 4. Message selectors (page 26 line 24-...)

These are not defined in 0-8. The 0-9 spec introduces a "headers" 
exchange that supports selectors. This is on the RabbitMQ roadmap; we've 
got some designs for it but nothing has been implemented yet.


Matthias.



From chime at mu.dk  Tue Nov 18 08:57:38 2008
From: chime at mu.dk (Michael Arnoldus)
Date: Tue, 18 Nov 2008 09:57:38 +0100
Subject: [rabbitmq-discuss] RabbitMQ capabilities
In-Reply-To: <492277A5.2040409@lshift.net>
References: <63697693-BD0B-44E6-941A-CD567B7E8313@mu.dk>
	<492277A5.2040409@lshift.net>
Message-ID: <09FB6352-2973-4EBB-8838-A6B7A79BB7B8@mu.dk>

Hi Matthias,

Thanks for your answers. Just what I needed :-)

Michael

On Nov 18, 2008, at 9:07 , Matthias Radestock wrote:

> Michael,
>
> Michael Arnoldus wrote:
>> I want to ask you how Rabbit supports these:
>> 1. Returning unroutable messages (page 20 line 2-3)
>
> When the 'mandatory' flag is set in basic.publish, any messages that  
> cannot be routed to a queue is returned to the publishing client  
> with basic.return.
>
>> 2. Returning messages with no consumers (page 20 line 10-11)
>
> When the 'immediate' flag is set in basic.publish, any messages that  
> cannot be immediately sent to some consumer is returned to the  
> publishing client with basic.return.
>
>> 3. Chained bindings (page 25 line 22-...)
>
> The 0-8/9 versions of the protocol define no mechanisms to do this.
>
>> 4. Message selectors (page 26 line 24-...)
>
> These are not defined in 0-8. The 0-9 spec introduces a "headers"  
> exchange that supports selectors. This is on the RabbitMQ roadmap;  
> we've got some designs for it but nothing has been implemented yet.
>
>
> Matthias.

-------------- next part --------------
A non-text attachment was scrubbed...
Name: smime.p7s
Type: application/pkcs7-signature
Size: 1912 bytes
Desc: not available
Url : http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20081118/bea4a321/attachment.bin 

From matthias at lshift.net  Tue Nov 18 11:27:01 2008
From: matthias at lshift.net (Matthias Radestock)
Date: Tue, 18 Nov 2008 11:27:01 +0000
Subject: [rabbitmq-discuss] RabbitMQ capabilities
In-Reply-To: <007A42CF-64A6-4EE5-86CB-DF79AF0E5010@mu.dk>
References: <63697693-BD0B-44E6-941A-CD567B7E8313@mu.dk>	<492277A5.2040409@lshift.net>
	<007A42CF-64A6-4EE5-86CB-DF79AF0E5010@mu.dk>
Message-ID: <4922A685.4000100@lshift.net>

Michael,

Michael Arnoldus wrote:
> Actually - reading through this one more time
>>
>>> 2. Returning messages with no consumers (page 20 line 10-11)
>>
>> When the 'immediate' flag is set in basic.publish, any messages that 
>> cannot be immediately sent to some consumer is returned to the 
>> publishing client with basic.return.
> 
> But immediatly isn't exactly the same as no consumer is it?

Correct. 'immediate' handles the case of no *ready* consumer.

> If the message can be routed to a queue that has a consumer, but
> there's a message buildup on the queue so it can't be delivered
> immediately, what then?

In that case the message will be returned with basic.return.

There is no flag/mechanism to have a message returned only when no 
consumers are present.


Matthias.



From 0x6e6562 at gmail.com  Tue Nov 18 12:12:47 2008
From: 0x6e6562 at gmail.com (Ben Hood)
Date: Tue, 18 Nov 2008 12:12:47 +0000
Subject: [rabbitmq-discuss] rabbitmq-discuss Digest, Vol 18, Issue 34
In-Reply-To: <57cfcbc70811171952td1532c3hbfefcb238b1f88e0@mail.gmail.com>
References: <mailman.1.1226836801.12531.rabbitmq-discuss@lists.rabbitmq.com>
	<57cfcbc70811160726jc0de7a9n18daa72dad5448ef@mail.gmail.com>
	<167204d20811161026x6f5ac0a5q9b8b54e52272aae4@mail.gmail.com>
	<57cfcbc70811161559k7796daeft674120283c7fdf22@mail.gmail.com>
	<167204d20811170411p5840edecx93709e39afd15b14@mail.gmail.com>
	<57cfcbc70811171453maa0937fg16ebc0bd587ad4a1@mail.gmail.com>
	<6c2563b20811171519r428a621g479e0f84ae45d753@mail.gmail.com>
	<57cfcbc70811171952td1532c3hbfefcb238b1f88e0@mail.gmail.com>
Message-ID: <269388e30811180412x2db2f615j9bcf1a8a5c2c8e65@mail.gmail.com>

Ilya,

On Tue, Nov 18, 2008 at 3:52 AM, Ilya Grigorik <ilya at aiderss.com> wrote:
> Interesting, this helped a bit. Got up to 2.7GB in persister, then killed
> the Erlang node once again. No kernel logs, no nothing. Grrr!

This is probably my ignorance, but I'm getting slightly confused about
what exact cause and effect you are investigating.

So forgive me if these comments are irrelevant.

If you don't use producer flow control (the channel.flow command) to
throttle message sending, eventually you will run out of resources and
you will see the behaviour that you are reporting.

Marking messages as persistent is not going to help with the current
implementation.

When a message is marked as persistent, it means that there is an
additional replica of the message on disk. The purpose of the replica
is to be requeued as part of the queue recovery process, if the
message was not subsequently ack'ed by a consumer.

ATM Rabbit is not smart enough to piggy back off the journal to smooth
out memory consumption.

Also, it is questionable as to whether this would be the best way to
solve the infamous queue paging problem.

(Just trying to save you some time :-)

Ben



From ilya at aiderss.com  Tue Nov 18 15:02:13 2008
From: ilya at aiderss.com (Ilya Grigorik)
Date: Tue, 18 Nov 2008 10:02:13 -0500
Subject: [rabbitmq-discuss] rabbitmq-discuss Digest, Vol 18, Issue 34
In-Reply-To: <269388e30811180412x2db2f615j9bcf1a8a5c2c8e65@mail.gmail.com>
References: <mailman.1.1226836801.12531.rabbitmq-discuss@lists.rabbitmq.com>
	<57cfcbc70811160726jc0de7a9n18daa72dad5448ef@mail.gmail.com>
	<167204d20811161026x6f5ac0a5q9b8b54e52272aae4@mail.gmail.com>
	<57cfcbc70811161559k7796daeft674120283c7fdf22@mail.gmail.com>
	<167204d20811170411p5840edecx93709e39afd15b14@mail.gmail.com>
	<57cfcbc70811171453maa0937fg16ebc0bd587ad4a1@mail.gmail.com>
	<6c2563b20811171519r428a621g479e0f84ae45d753@mail.gmail.com>
	<57cfcbc70811171952td1532c3hbfefcb238b1f88e0@mail.gmail.com>
	<269388e30811180412x2db2f615j9bcf1a8a5c2c8e65@mail.gmail.com>
Message-ID: <57cfcbc70811180702h101ce477iff6e3b39924234ed@mail.gmail.com>

> This is probably my ignorance, but I'm getting slightly confused about
> what exact cause and effect you are investigating.
>

Ben, I think we're on the same page. I understand the current limitations,
and now I'm trying to figure out the ceiling thresholds for setting up a
production node: memory usage patterns, how it performs when swapping, etc.
Also found a few bugs in the Ruby client, working on addressing those. :)

If you don't use producer flow control (the channel.flow command) to
> throttle message sending, eventually you will run out of resources and
> you will see the behaviour that you are reporting.
>

Yep.

Marking messages as persistent is not going to help with the current
> implementation.
>
> When a message is marked as persistent, it means that there is an
> additional replica of the message on disk. The purpose of the replica
> is to be requeued as part of the queue recovery process, if the
> message was not subsequently ack'ed by a consumer.
>


> ATM Rabbit is not smart enough to piggy back off the journal to smooth
> out memory consumption.
>


> Also, it is questionable as to whether this would be the best way to
> solve the infamous queue paging problem.
>

Yep, good points. I think we'll go ahead an implement our own backup
strategy for time being, but I do hope that we'll see some sane overflow
conditions make it to RabbitMQ sooner rather than later (number of messages,
ttl, whichever).

Cheers,
ig
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20081118/2395d07d/attachment.htm 

From alexis.richardson at cohesiveft.com  Tue Nov 18 15:18:32 2008
From: alexis.richardson at cohesiveft.com (Alexis Richardson)
Date: Tue, 18 Nov 2008 15:18:32 +0000
Subject: [rabbitmq-discuss] rabbitmq-discuss Digest, Vol 18, Issue 34
In-Reply-To: <57cfcbc70811180702h101ce477iff6e3b39924234ed@mail.gmail.com>
References: <mailman.1.1226836801.12531.rabbitmq-discuss@lists.rabbitmq.com>
	<57cfcbc70811160726jc0de7a9n18daa72dad5448ef@mail.gmail.com>
	<167204d20811161026x6f5ac0a5q9b8b54e52272aae4@mail.gmail.com>
	<57cfcbc70811161559k7796daeft674120283c7fdf22@mail.gmail.com>
	<167204d20811170411p5840edecx93709e39afd15b14@mail.gmail.com>
	<57cfcbc70811171453maa0937fg16ebc0bd587ad4a1@mail.gmail.com>
	<6c2563b20811171519r428a621g479e0f84ae45d753@mail.gmail.com>
	<57cfcbc70811171952td1532c3hbfefcb238b1f88e0@mail.gmail.com>
	<269388e30811180412x2db2f615j9bcf1a8a5c2c8e65@mail.gmail.com>
	<57cfcbc70811180702h101ce477iff6e3b39924234ed@mail.gmail.com>
Message-ID: <167204d20811180718j3de9a16fw35081c6b6158bdf8@mail.gmail.com>

Ilya,

On Tue, Nov 18, 2008 at 3:02 PM, Ilya Grigorik <ilya at aiderss.com> wrote:
>
>>
>> Also, it is questionable as to whether this would be the best way to
>> solve the infamous queue paging problem.
>
> Yep, good points. I think we'll go ahead an implement our own backup
> strategy for time being, but I do hope that we'll see some sane overflow
> conditions make it to RabbitMQ sooner rather than later (number of messages,
> ttl, whichever).

Great - please keep sending detailed feature requests on the overflow
conditions to the list.

All,

At the RabbitMQ meet up in San Francisco recently I asked people for
their top 'wanted' features.  The answers were:

- qos
- pluggable queues / disk paging
- management
- even simpler 'send' + 'get' type clients

Any other things - or are these still the 'top few'?

alexis



From 0x6e6562 at gmail.com  Tue Nov 18 16:00:26 2008
From: 0x6e6562 at gmail.com (Ben Hood)
Date: Tue, 18 Nov 2008 16:00:26 +0000
Subject: [rabbitmq-discuss] rabbitmq-discuss Digest, Vol 18, Issue 34
In-Reply-To: <57cfcbc70811180702h101ce477iff6e3b39924234ed@mail.gmail.com>
References: <mailman.1.1226836801.12531.rabbitmq-discuss@lists.rabbitmq.com>
	<57cfcbc70811160726jc0de7a9n18daa72dad5448ef@mail.gmail.com>
	<167204d20811161026x6f5ac0a5q9b8b54e52272aae4@mail.gmail.com>
	<57cfcbc70811161559k7796daeft674120283c7fdf22@mail.gmail.com>
	<167204d20811170411p5840edecx93709e39afd15b14@mail.gmail.com>
	<57cfcbc70811171453maa0937fg16ebc0bd587ad4a1@mail.gmail.com>
	<6c2563b20811171519r428a621g479e0f84ae45d753@mail.gmail.com>
	<57cfcbc70811171952td1532c3hbfefcb238b1f88e0@mail.gmail.com>
	<269388e30811180412x2db2f615j9bcf1a8a5c2c8e65@mail.gmail.com>
	<57cfcbc70811180702h101ce477iff6e3b39924234ed@mail.gmail.com>
Message-ID: <269388e30811180800t331ae786n6a570382b7f132e0@mail.gmail.com>

Ilya,

On Tue, Nov 18, 2008 at 3:02 PM, Ilya Grigorik <ilya at aiderss.com> wrote:
> Ben, I think we're on the same page. I understand the current limitations,
> and now I'm trying to figure out the ceiling thresholds for setting up a
> production node: memory usage patterns, how it performs when swapping, etc.

Cool. So effectively you are calibrating your system :-)

It would be interesting to see what metrics you get when playing
around with swap.

> Also found a few bugs in the Ruby client, working on addressing those. :)

I assume that you've spoken to Aman.....

> Yep, good points. I think we'll go ahead an implement our own backup
> strategy for time being, but I do hope that we'll see some sane overflow
> conditions make it to RabbitMQ sooner rather than later (number of messages,
> ttl, whichever).

Yesterday I spoke to the person who wants to implement TTL for us, and
kindly reminded him of his promise ;-)

As for disk overflow, based on the current donations, we have reached
2% of our fund raising target.

Ben



From 0x6e6562 at gmail.com  Tue Nov 18 17:56:22 2008
From: 0x6e6562 at gmail.com (Ben Hood)
Date: Tue, 18 Nov 2008 17:56:22 +0000
Subject: [rabbitmq-discuss] Queue Paging - Disk Overflow
In-Reply-To: <79F62EDE-F371-4F68-9ADA-133454360861@gmail.com>
References: <269388e30811151459j45c2a6a0k6875227f6e2756@mail.gmail.com>
	<FAF264B3-7EAC-49AC-B0CE-B83754ED94D0@engineyard.com>
	<269388e30811161241m78b53eb6ma8bc73e1ccba8db6@mail.gmail.com>
	<6c2563b20811161615i99c80f4j3661f873d85dded0@mail.gmail.com>
	<79F62EDE-F371-4F68-9ADA-133454360861@gmail.com>
Message-ID: <269388e30811180956oa7e2ebbo72e1d49bff173bbf@mail.gmail.com>

Dear List,

On Mon, Nov 17, 2008 at 8:56 AM, Valentino Volonghi <dialtone at gmail.com> wrote:
>
> On Nov 16, 2008, at 4:15 PM, Edwin Fine wrote:
>
> What do you say, Rabbit list? Would 49 of you PayPal $200 to get this done?
>
> I'll talk with my CTO tomorrow and see what we can put together. If it were
> just
> up to me I'd be in for a grand actually.

I have been asked off-list whether they can send a cheque instead of
using Paypal. The only reason why I went for a Paypal Donate button
was because of the speed at which you can set this up, and I didn't
really expect much response, so I am pleasantly surprised at this :-)

I you do prefer to go down the paper route, send it to me at the office:

LShift Ltd
6 Rufus St,
London N1 6PE
UK

BTW, I am still thinking about how to visualize the fund raiser -
maybe as a progress bar a la curl? Any ideas or widgets?

Ben



From dialtone at gmail.com  Wed Nov 19 02:03:17 2008
From: dialtone at gmail.com (Valentino Volonghi)
Date: Tue, 18 Nov 2008 18:03:17 -0800
Subject: [rabbitmq-discuss] Queue Paging - Disk Overflow
In-Reply-To: <269388e30811180956oa7e2ebbo72e1d49bff173bbf@mail.gmail.com>
References: <269388e30811151459j45c2a6a0k6875227f6e2756@mail.gmail.com>
	<FAF264B3-7EAC-49AC-B0CE-B83754ED94D0@engineyard.com>
	<269388e30811161241m78b53eb6ma8bc73e1ccba8db6@mail.gmail.com>
	<6c2563b20811161615i99c80f4j3661f873d85dded0@mail.gmail.com>
	<79F62EDE-F371-4F68-9ADA-133454360861@gmail.com>
	<269388e30811180956oa7e2ebbo72e1d49bff173bbf@mail.gmail.com>
Message-ID: <A472B735-3055-435D-A76B-CF2FDB03C723@gmail.com>


On Nov 18, 2008, at 9:56 AM, Ben Hood wrote:

> Dear List,
>
> On Mon, Nov 17, 2008 at 8:56 AM, Valentino Volonghi <dialtone at gmail.com 
> > wrote:
>>
>> On Nov 16, 2008, at 4:15 PM, Edwin Fine wrote:
>>
>> What do you say, Rabbit list? Would 49 of you PayPal $200 to get  
>> this done?
>>
>> I'll talk with my CTO tomorrow and see what we can put together. If  
>> it were
>> just
>> up to me I'd be in for a grand actually.
>
> I have been asked off-list whether they can send a cheque instead of
> using Paypal. The only reason why I went for a Paypal Donate button
> was because of the speed at which you can set this up, and I didn't
> really expect much response, so I am pleasantly surprised at this :-)
>
> I you do prefer to go down the paper route, send it to me at the  
> office:
>
> LShift Ltd
> 6 Rufus St,
> London N1 6PE
> UK
>
> BTW, I am still thinking about how to visualize the fund raiser -
> maybe as a progress bar a la curl? Any ideas or widgets?


The simplest possible:

<html>
<head>

<style type="text/css" media="screen">
     .progressbar {
         width: 1000px;
         height: 20px;
         border: solid 1px #000;
     }
     .progressbar span {
         background: blue;
         height: 20px;
         display: block;
     }
</style>
</head>
<body>
<div class="progressbar"><span style="width: 30%"></span></div>
</body>
</html>

Or if you want to be more fancy:

http://cssglobe.com/lab/progress_bar/

:)

-- 
Valentino Volonghi aka Dialtone
Now running MacOS X 10.5
Home Page: http://www.twisted.it
http://www.adroll.com

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20081118/50cd9931/attachment.htm 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: PGP.sig
Type: application/pgp-signature
Size: 194 bytes
Desc: This is a digitally signed message part
Url : http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20081118/50cd9931/attachment.pgp 

From rabbitmq-discuss_efine at usa.net  Wed Nov 19 07:07:57 2008
From: rabbitmq-discuss_efine at usa.net (Edwin Fine)
Date: Wed, 19 Nov 2008 02:07:57 -0500
Subject: [rabbitmq-discuss] [BUG] Erlang client network driver crashes if
	sent unexpected message
Message-ID: <6c2563b20811182307y28efab1au2256ae4e10c94390@mail.gmail.com>

This is for quite an early version of the Erlang client, certainly not the
head, but I wonder if this doesn't still lurk in there somewhere.

I was testing the effect of "multicasting" a message, when this came up:

>process_info(pid(0,148,0)).
[{current_function,{amqp_network_driver,reader_loop,4}},[...]
>pid(0,148,0) ! some_bum_message.
>process_info(pid(0,148,0)).
undefined

rabbit.log:

=ERROR REPORT==== 19-Nov-2008::01:55:02 ===
error on TCP connection <0.2162.43> from 127.0.0.1:23482
connection_closed_abruptly

=INFO REPORT==== 19-Nov-2008::01:55:02 ===
closing TCP connection <0.2162.43> from 127.0.0.1:23482

I would think that all processes need to handle unexpected messages
gracefully, at the very least by ignoring them or reporting an error, e.g.

== 19-Nov-2008::02:01:53 == ERROR -  <0.42.0>
Mnesia(foo at bar): ** ERROR ** mnesia_subscr got unexpected info:
some_bum_message

This might be a good test for all processes. I am going to incorporate it
into my testing somehow.

Regards,
Edwin Fine
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20081119/a4bdf4bc/attachment.htm 

From chime at mu.dk  Wed Nov 19 10:44:59 2008
From: chime at mu.dk (Michael Arnoldus)
Date: Wed, 19 Nov 2008 11:44:59 +0100
Subject: [rabbitmq-discuss] Error in log file
References: <D29AD068-EF46-407F-85C1-37FBB76CBA13@wiinz.com>
Message-ID: <CF97ED06-8433-4391-9771-68FD9D2A33C5@mu.dk>

A few times a day we see an error like the one below. Could this be  
caused by a known bug in rabbit (we're running 1.4.0) or or is it more  
likely something in the client lib or a race condition?

Michael

>
> =ERROR REPORT==== 19-Nov-2008::00:11:50 ===
> connection <0.29976.37> (running), channel 10 - error:
> {amqp,command_invalid,
>       "expected content body, got non content body frame instead",
>       none}
>
>

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20081119/ceb3bb3d/attachment.htm 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: smime.p7s
Type: application/pkcs7-signature
Size: 1912 bytes
Desc: not available
Url : http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20081119/ceb3bb3d/attachment.bin 

From chime at mu.dk  Wed Nov 19 10:50:40 2008
From: chime at mu.dk (Michael Arnoldus)
Date: Wed, 19 Nov 2008 11:50:40 +0100
Subject: [rabbitmq-discuss] Error in log file
References: <D29AD068-EF46-407F-85C1-37FBB76CBA13@wiinz.com>
Message-ID: <022EB69C-E1CF-4D1D-9ABD-3BF4ADA7D958@mu.dk>

And somtimes also this one

=ERROR REPORT==== 15-Nov-2008::03:35:50 ===
connection <0.29003.20> (running), channel 10 - error:
{amqp,command_invalid,
       "expected content header for class 60, got non content header  
frame instead",
       none}
=INFO REPORT==== 15-Nov-2008::03:35:51 ===
closing TCP connection <0.29003.20> from 127.0.0.1:42952


A few times a day we see an error like the one below. Could this be  
caused by a known bug in rabbit (we're running 1.4.0) or or is it more  
likely something in the client lib or a race condition?

Michael

>
> =ERROR REPORT==== 19-Nov-2008::00:11:50 ===
> connection <0.29976.37> (running), channel 10 - error:
> {amqp,command_invalid,
>       "expected content body, got non content body frame instead",
>       none}
>
>

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20081119/5393e1d7/attachment.htm 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: smime.p7s
Type: application/pkcs7-signature
Size: 1912 bytes
Desc: not available
Url : http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20081119/5393e1d7/attachment.bin 

From 0x6e6562 at gmail.com  Wed Nov 19 10:51:03 2008
From: 0x6e6562 at gmail.com (Ben Hood)
Date: Wed, 19 Nov 2008 10:51:03 +0000
Subject: [rabbitmq-discuss] Error in log file
In-Reply-To: <CF97ED06-8433-4391-9771-68FD9D2A33C5@mu.dk>
References: <D29AD068-EF46-407F-85C1-37FBB76CBA13@wiinz.com>
	<CF97ED06-8433-4391-9771-68FD9D2A33C5@mu.dk>
Message-ID: <269388e30811190251k2418c856kb1418fa2e9819380@mail.gmail.com>

Michael,

On Wed, Nov 19, 2008 at 10:44 AM, Michael Arnoldus <chime at mu.dk> wrote:
> A few times a day we see an error like the one below. Could this be caused
> by a known bug in rabbit (we're running 1.4.0) or or is it more likely
> something in the client lib or a race condition?

It does look like frames have been interleaved within a single channel
by the client.

What client are you using?

Are you able to send some code in order for us to reproduce this?

Ben



From 0x6e6562 at gmail.com  Wed Nov 19 10:55:22 2008
From: 0x6e6562 at gmail.com (Ben Hood)
Date: Wed, 19 Nov 2008 10:55:22 +0000
Subject: [rabbitmq-discuss] [BUG] Erlang client network driver crashes
	if sent unexpected message
In-Reply-To: <6c2563b20811182307y28efab1au2256ae4e10c94390@mail.gmail.com>
References: <6c2563b20811182307y28efab1au2256ae4e10c94390@mail.gmail.com>
Message-ID: <269388e30811190255x60c7ed2co13d4491c00756188@mail.gmail.com>

Ed,

On Wed, Nov 19, 2008 at 7:07 AM, Edwin Fine
<rabbitmq-discuss_efine at usa.net> wrote:
> This is for quite an early version of the Erlang client, certainly not the
> head, but I wonder if this doesn't still lurk in there somewhere.

ATM the current version will do the same - you can see this in the
last cause of the reader_loop in the network driver. I'll have to
think about what is the better behaviour - either exit the loop when
something sends you something bogus or just log the bogus message and
continue to loop. I suppose you could do something in the middle as
well.

Will get back to you on this.

Ben



From 0x6e6562 at gmail.com  Wed Nov 19 10:57:43 2008
From: 0x6e6562 at gmail.com (Ben Hood)
Date: Wed, 19 Nov 2008 10:57:43 +0000
Subject: [rabbitmq-discuss] Error in log file
In-Reply-To: <022EB69C-E1CF-4D1D-9ABD-3BF4ADA7D958@mu.dk>
References: <D29AD068-EF46-407F-85C1-37FBB76CBA13@wiinz.com>
	<022EB69C-E1CF-4D1D-9ABD-3BF4ADA7D958@mu.dk>
Message-ID: <269388e30811190257l7a33fa29n6958a0891b2ca10a@mail.gmail.com>

Michael,

On Wed, Nov 19, 2008 at 10:50 AM, Michael Arnoldus <chime at mu.dk> wrote:
> And somtimes also this one
> =ERROR REPORT==== 15-Nov-2008::03:35:50 ===
> connection <0.29003.20> (running), channel 10 - error:
> {amqp,command_invalid,
>       "expected content header for class 60, got non content header frame
> instead",
>       none}

This symptom has been described here:
http://hopper.squarespace.com/blog/2008/10/6/multithreading-amqp-clients.html

Whether or not this is actually interleaving due to a race condition
would have to be proven. Without knowing anything about the client
library or app, I can't make any kind of qualified judgement :-)

Ben



From chime at mu.dk  Wed Nov 19 11:06:16 2008
From: chime at mu.dk (Michael Arnoldus)
Date: Wed, 19 Nov 2008 12:06:16 +0100
Subject: [rabbitmq-discuss] Error in log file
In-Reply-To: <269388e30811190257l7a33fa29n6958a0891b2ca10a@mail.gmail.com>
References: <D29AD068-EF46-407F-85C1-37FBB76CBA13@wiinz.com>
	<022EB69C-E1CF-4D1D-9ABD-3BF4ADA7D958@mu.dk>
	<269388e30811190257l7a33fa29n6958a0891b2ca10a@mail.gmail.com>
Message-ID: <44D2CCC2-5037-4A16-A00E-33C255FC057F@mu.dk>

Hi Ben,

On Nov 19, 2008, at 11:57 , Ben Hood wrote:

> Michael,
>
> On Wed, Nov 19, 2008 at 10:50 AM, Michael Arnoldus <chime at mu.dk>  
> wrote:
>> And somtimes also this one
>> =ERROR REPORT==== 15-Nov-2008::03:35:50 ===
>> connection <0.29003.20> (running), channel 10 - error:
>> {amqp,command_invalid,
>>      "expected content header for class 60, got non content header  
>> frame
>> instead",
>>      none}
>
> This symptom has been described here:
> http://hopper.squarespace.com/blog/2008/10/6/multithreading-amqp-clients.html
>
> Whether or not this is actually interleaving due to a race condition
> would have to be proven. Without knowing anything about the client
> library or app, I can't make any kind of qualified judgement :-)

Of course not :-)

However I just needed to make sure this is not a known Rabbit bug -  
and you have just confirmed my own suspicion, so I'll go with that.

And no worries - if I find reason to believe that this is not our own  
problem but actually a rabbit bug, I'll be sure to let you know :-)

Thanks!

Michael

-------------- next part --------------
A non-text attachment was scrubbed...
Name: smime.p7s
Type: application/pkcs7-signature
Size: 1912 bytes
Desc: not available
Url : http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20081119/5a0ce3d0/attachment.bin 

From alexis.richardson at cohesiveft.com  Wed Nov 19 12:43:49 2008
From: alexis.richardson at cohesiveft.com (Alexis Richardson)
Date: Wed, 19 Nov 2008 12:43:49 +0000
Subject: [rabbitmq-discuss] rabbitmq-discuss Digest, Vol 18, Issue 34
In-Reply-To: <334D5E2B-8015-427F-A295-FBC527A724CD@engineyard.com>
References: <mailman.1.1226836801.12531.rabbitmq-discuss@lists.rabbitmq.com>
	<57cfcbc70811161559k7796daeft674120283c7fdf22@mail.gmail.com>
	<167204d20811170411p5840edecx93709e39afd15b14@mail.gmail.com>
	<57cfcbc70811171453maa0937fg16ebc0bd587ad4a1@mail.gmail.com>
	<6c2563b20811171519r428a621g479e0f84ae45d753@mail.gmail.com>
	<57cfcbc70811171952td1532c3hbfefcb238b1f88e0@mail.gmail.com>
	<269388e30811180412x2db2f615j9bcf1a8a5c2c8e65@mail.gmail.com>
	<57cfcbc70811180702h101ce477iff6e3b39924234ed@mail.gmail.com>
	<167204d20811180718j3de9a16fw35081c6b6158bdf8@mail.gmail.com>
	<334D5E2B-8015-427F-A295-FBC527A724CD@engineyard.com>
Message-ID: <167204d20811190443na52c194l8958d9db3d9888a@mail.gmail.com>

On Tue, Nov 18, 2008 at 4:11 PM, Ezra Zygmuntowicz <ez at engineyard.com> wrote:
>>
>> At the RabbitMQ meet up in San Francisco recently I asked people for
>> Their top 'wanted' features.  The answers were:
>>
>> - qos
>> - pluggable queues / disk paging
>> - management
>> - even simpler 'send' + 'get' type clients
>>
>> Any other things - or are these still the 'top few'?
>
>        I'd really like to see some sort of read/write ACL's for queues or
> exchanges. My use case is for my nanite project. I want to have limited
> producers that can publish to an exchange but cannot read from said exchange
> so they cannot see what other agents are posting.

Thanks Ezra.

I think something like this is definitely needed if 'frequency of
request' is anything to go by.

What about web interfaces?  By which I mean accessing RabbitMQ over
HTTP.  This is possible using the embedded server today, but could be
taken further in terms of what operations are supported.

alexis



From alexis.richardson at cohesiveft.com  Wed Nov 19 12:43:49 2008
From: alexis.richardson at cohesiveft.com (Alexis Richardson)
Date: Wed, 19 Nov 2008 12:43:49 +0000
Subject: [rabbitmq-discuss] rabbitmq-discuss Digest, Vol 18, Issue 34
In-Reply-To: <334D5E2B-8015-427F-A295-FBC527A724CD@engineyard.com>
References: <mailman.1.1226836801.12531.rabbitmq-discuss@lists.rabbitmq.com>
	<57cfcbc70811161559k7796daeft674120283c7fdf22@mail.gmail.com>
	<167204d20811170411p5840edecx93709e39afd15b14@mail.gmail.com>
	<57cfcbc70811171453maa0937fg16ebc0bd587ad4a1@mail.gmail.com>
	<6c2563b20811171519r428a621g479e0f84ae45d753@mail.gmail.com>
	<57cfcbc70811171952td1532c3hbfefcb238b1f88e0@mail.gmail.com>
	<269388e30811180412x2db2f615j9bcf1a8a5c2c8e65@mail.gmail.com>
	<57cfcbc70811180702h101ce477iff6e3b39924234ed@mail.gmail.com>
	<167204d20811180718j3de9a16fw35081c6b6158bdf8@mail.gmail.com>
	<334D5E2B-8015-427F-A295-FBC527A724CD@engineyard.com>
Message-ID: <167204d20811190443na52c194l8958d9db3d9888a@mail.gmail.com>

On Tue, Nov 18, 2008 at 4:11 PM, Ezra Zygmuntowicz <ez at engineyard.com> wrote:
>>
>> At the RabbitMQ meet up in San Francisco recently I asked people for
>> Their top 'wanted' features.  The answers were:
>>
>> - qos
>> - pluggable queues / disk paging
>> - management
>> - even simpler 'send' + 'get' type clients
>>
>> Any other things - or are these still the 'top few'?
>
>        I'd really like to see some sort of read/write ACL's for queues or
> exchanges. My use case is for my nanite project. I want to have limited
> producers that can publish to an exchange but cannot read from said exchange
> so they cannot see what other agents are posting.

Thanks Ezra.

I think something like this is definitely needed if 'frequency of
request' is anything to go by.

What about web interfaces?  By which I mean accessing RabbitMQ over
HTTP.  This is possible using the embedded server today, but could be
taken further in terms of what operations are supported.

alexis



From eran.sandler at gmail.com  Wed Nov 19 14:48:12 2008
From: eran.sandler at gmail.com (Eran Sandler)
Date: Wed, 19 Nov 2008 16:48:12 +0200
Subject: [rabbitmq-discuss] Release Process
In-Reply-To: <269388e30811060955m7b60e1b3mdd737988f53bfbbe@mail.gmail.com>
References: <269388e30811060955m7b60e1b3mdd737988f53bfbbe@mail.gmail.com>
Message-ID: <4924272C.9090000@gmail.com>

I think I prefer the Ubuntu style.


Whenever a new RabbitMQ server is about to be released all clients that 
should be bundled should be "frozen" so that all compatibility issues 
with these clients can be verified/fixed for the specific server release.


More advanced users can continue to advance in client versions if there 
are improvements/fixes/etc.


On the next server release the same process repeats to "freeze" the 
versions of clients that will be used in the server release.


Regarding code names, we need Bunny names ;-)

Or maybe Bunny breed names 
(http://en.wikipedia.org/wiki/List_of_rabbit_breeds) :-)


Eran


Ben Hood wrote:

> Hi all,
>
> The Rabbit development team has a question which the community may be
> able to help us with.
>
> ATM we are going through the process of finishing off the last
> remaining items for the next release.
>
> After this release has been made we would like to continue the process
> of separating the client releases from broker releases.
>
> The reason why we want to do this is to make the release procedure
> less monolithic and we don't want to have upgrade clients in a lock
> step fashion.
>
> This will (hopefully) increase the agility of the overall release
> process and thereby increase the frequency of releasing new
> functionality and bug fixes.
>
> What we don't know is if we release clients at different intervals to
> the broker, how is the average user going to know what version works
> with what.
>
>
> The Current Rabbit Ecosphere
> --------------------------------------------
>
> - Broker 1.4.x
> - Java Client 1.4.x
> - .NET Client 1.4.x
>
>
> Where We May End Up
> -----------------------------------
>
> - Broker 1.x.y
> - Java Client 2.m.n
> - .NET Client 3.j.k
> - (Erlang Client x.y) ?
> - (Adapter p.q) ?
>
>
> The problem with letting all of the different versions run free is
> that knowing what works with what becomes less apparent to casual
> observer.
>
> So for example, how is the average person who doesn't know Rabbit from
> a bar of soap supposed to work out that version 2.1.3 of the Java
> client has been tested and verified against version 1.7.8 of the
> broker?
>
> Another way to view this would be a compatibility matrix, which would
> give a slightly different perspective because it would be an overview
> of every release, rather than just a slice through certain versions.
>
> One initial thought is to make periodic group releases. These would be
> bundles of the components that are known to work with each other. This
> would be similar to say a Ubuntu release (e.g. version 8.10 contains
> gcc 4.3.2, awk 3.1.6, grep 2.5.3 etc).
>
> In this scenario, we would do a seasonal umbrella release with a
> particular name or version. It could as simple as a web page that
> contains links the particular versions of the consituent parts.
>
> So if anybody has any thoughts about this or the release process in
> general please let us know. It could as simple as telling us what
> naming scheme for the umbrella would be the most appropriate, e.g.
>
> - Ubuntu Style: Year-Month
> - Erlang Style: 12B-4
> - Use code names like Roger, Warren, Bugs, Eminem, ....., (your favourite name)
> - ?
>
> Any comments or suggestions are welcome.
>
> Ben
>
> _______________________________________________
> rabbitmq-discuss mailing list
> rabbitmq-discuss at lists.rabbitmq.com
> http://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss
>   

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20081119/d0535560/attachment.htm 

From alexis.richardson at cohesiveft.com  Wed Nov 19 14:56:32 2008
From: alexis.richardson at cohesiveft.com (Alexis Richardson)
Date: Wed, 19 Nov 2008 14:56:32 +0000
Subject: [rabbitmq-discuss] Release Process
In-Reply-To: <4924272C.9090000@gmail.com>
References: <269388e30811060955m7b60e1b3mdd737988f53bfbbe@mail.gmail.com>
	<4924272C.9090000@gmail.com>
Message-ID: <167204d20811190656n2209c9b0v20d8231cbbd550fb@mail.gmail.com>

On Wed, Nov 19, 2008 at 2:48 PM, Eran Sandler <eran.sandler at gmail.com> wrote:
>
> Regarding code names, we need Bunny names ;-)
>
> Or maybe Bunny breed names
> (http://en.wikipedia.org/wiki/List_of_rabbit_breeds) :-)

This is an excellent suggestion.

Of course the next Ubuntu release is jaunty jackalope too.

alexis













> The Rabbit development team has a question which the community may be
> able to help us with.
>
> ATM we are going through the process of finishing off the last
> remaining items for the next release.
>
> After this release has been made we would like to continue the process
> of separating the client releases from broker releases.
>
> The reason why we want to do this is to make the release procedure
> less monolithic and we don't want to have upgrade clients in a lock
> step fashion.
>
> This will (hopefully) increase the agility of the overall release
> process and thereby increase the frequency of releasing new
> functionality and bug fixes.
>
> What we don't know is if we release clients at different intervals to
> the broker, how is the average user going to know what version works
> with what.
>
>
> The Current Rabbit Ecosphere
> --------------------------------------------
>
> - Broker 1.4.x
> - Java Client 1.4.x
> - .NET Client 1.4.x
>
>
> Where We May End Up
> -----------------------------------
>
> - Broker 1.x.y
> - Java Client 2.m.n
> - .NET Client 3.j.k
> - (Erlang Client x.y) ?
> - (Adapter p.q) ?
>
>
> The problem with letting all of the different versions run free is
> that knowing what works with what becomes less apparent to casual
> observer.
>
> So for example, how is the average person who doesn't know Rabbit from
> a bar of soap supposed to work out that version 2.1.3 of the Java
> client has been tested and verified against version 1.7.8 of the
> broker?
>
> Another way to view this would be a compatibility matrix, which would
> give a slightly different perspective because it would be an overview
> of every release, rather than just a slice through certain versions.
>
> One initial thought is to make periodic group releases. These would be
> bundles of the components that are known to work with each other. This
> would be similar to say a Ubuntu release (e.g. version 8.10 contains
> gcc 4.3.2, awk 3.1.6, grep 2.5.3 etc).
>
> In this scenario, we would do a seasonal umbrella release with a
> particular name or version. It could as simple as a web page that
> contains links the particular versions of the consituent parts.
>
> So if anybody has any thoughts about this or the release process in
> general please let us know. It could as simple as telling us what
> naming scheme for the umbrella would be the most appropriate, e.g.
>
> - Ubuntu Style: Year-Month
> - Erlang Style: 12B-4
> - Use code names like Roger, Warren, Bugs, Eminem, ....., (your favourite
> name)
> - ?
>
> Any comments or suggestions are welcome.
>
> Ben
>
> _______________________________________________
> rabbitmq-discuss mailing list
> rabbitmq-discuss at lists.rabbitmq.com
> http://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss
>
>
> _______________________________________________
> rabbitmq-discuss mailing list
> rabbitmq-discuss at lists.rabbitmq.com
> http://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss
>
>



From alexis.richardson at cohesiveft.com  Wed Nov 19 15:01:33 2008
From: alexis.richardson at cohesiveft.com (Alexis Richardson)
Date: Wed, 19 Nov 2008 15:01:33 +0000
Subject: [rabbitmq-discuss] Release Process
In-Reply-To: <167204d20811190656n2209c9b0v20d8231cbbd550fb@mail.gmail.com>
References: <269388e30811060955m7b60e1b3mdd737988f53bfbbe@mail.gmail.com>
	<4924272C.9090000@gmail.com>
	<167204d20811190656n2209c9b0v20d8231cbbd550fb@mail.gmail.com>
Message-ID: <167204d20811190701m2502346cy51150a38e86184c@mail.gmail.com>

All,

On a related note we have an excess of large t-shirts but no mediums
or XLs.  I am tempted to print some more.  Any takers.  These fine
garments are black with the logo "Go forth and multiply" and four
RabbitMQ logos in a bouncy rabbity configuration.

As an alternative it has been suggested that we create a LOLrabbit
t-shirt with the logo "WE CAN HAS".  Any takers for this?

alexis


On Wed, Nov 19, 2008 at 2:56 PM, Alexis Richardson
<alexis.richardson at cohesiveft.com> wrote:
> On Wed, Nov 19, 2008 at 2:48 PM, Eran Sandler <eran.sandler at gmail.com> wrote:
>>
>> Regarding code names, we need Bunny names ;-)
>>
>> Or maybe Bunny breed names
>> (http://en.wikipedia.org/wiki/List_of_rabbit_breeds) :-)
>
> This is an excellent suggestion.
>
> Of course the next Ubuntu release is jaunty jackalope too.
>
> alexis
>
>
>
>
>
>
>
>
>
>
>
>
>
>> The Rabbit development team has a question which the community may be
>> able to help us with.
>>
>> ATM we are going through the process of finishing off the last
>> remaining items for the next release.
>>
>> After this release has been made we would like to continue the process
>> of separating the client releases from broker releases.
>>
>> The reason why we want to do this is to make the release procedure
>> less monolithic and we don't want to have upgrade clients in a lock
>> step fashion.
>>
>> This will (hopefully) increase the agility of the overall release
>> process and thereby increase the frequency of releasing new
>> functionality and bug fixes.
>>
>> What we don't know is if we release clients at different intervals to
>> the broker, how is the average user going to know what version works
>> with what.
>>
>>
>> The Current Rabbit Ecosphere
>> --------------------------------------------
>>
>> - Broker 1.4.x
>> - Java Client 1.4.x
>> - .NET Client 1.4.x
>>
>>
>> Where We May End Up
>> -----------------------------------
>>
>> - Broker 1.x.y
>> - Java Client 2.m.n
>> - .NET Client 3.j.k
>> - (Erlang Client x.y) ?
>> - (Adapter p.q) ?
>>
>>
>> The problem with letting all of the different versions run free is
>> that knowing what works with what becomes less apparent to casual
>> observer.
>>
>> So for example, how is the average person who doesn't know Rabbit from
>> a bar of soap supposed to work out that version 2.1.3 of the Java
>> client has been tested and verified against version 1.7.8 of the
>> broker?
>>
>> Another way to view this would be a compatibility matrix, which would
>> give a slightly different perspective because it would be an overview
>> of every release, rather than just a slice through certain versions.
>>
>> One initial thought is to make periodic group releases. These would be
>> bundles of the components that are known to work with each other. This
>> would be similar to say a Ubuntu release (e.g. version 8.10 contains
>> gcc 4.3.2, awk 3.1.6, grep 2.5.3 etc).
>>
>> In this scenario, we would do a seasonal umbrella release with a
>> particular name or version. It could as simple as a web page that
>> contains links the particular versions of the consituent parts.
>>
>> So if anybody has any thoughts about this or the release process in
>> general please let us know. It could as simple as telling us what
>> naming scheme for the umbrella would be the most appropriate, e.g.
>>
>> - Ubuntu Style: Year-Month
>> - Erlang Style: 12B-4
>> - Use code names like Roger, Warren, Bugs, Eminem, ....., (your favourite
>> name)
>> - ?
>>
>> Any comments or suggestions are welcome.
>>
>> Ben
>>
>> _______________________________________________
>> rabbitmq-discuss mailing list
>> rabbitmq-discuss at lists.rabbitmq.com
>> http://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss
>>
>>
>> _______________________________________________
>> rabbitmq-discuss mailing list
>> rabbitmq-discuss at lists.rabbitmq.com
>> http://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss
>>
>>
>



From eran.sandler at gmail.com  Wed Nov 19 15:07:04 2008
From: eran.sandler at gmail.com (Eran Sandler)
Date: Wed, 19 Nov 2008 17:07:04 +0200
Subject: [rabbitmq-discuss] Release Process
In-Reply-To: <167204d20811190701m2502346cy51150a38e86184c@mail.gmail.com>
References: <269388e30811060955m7b60e1b3mdd737988f53bfbbe@mail.gmail.com>	
	<4924272C.9090000@gmail.com>	
	<167204d20811190656n2209c9b0v20d8231cbbd550fb@mail.gmail.com>
	<167204d20811190701m2502346cy51150a38e86184c@mail.gmail.com>
Message-ID: <49242B98.5040905@gmail.com>

Do you have a picture of the current T-Shirt or a design of the next one?


That might help jog some people.


Eran


Alexis Richardson wrote:

> All,
>
> On a related note we have an excess of large t-shirts but no mediums
> or XLs.  I am tempted to print some more.  Any takers.  These fine
> garments are black with the logo "Go forth and multiply" and four
> RabbitMQ logos in a bouncy rabbity configuration.
>
> As an alternative it has been suggested that we create a LOLrabbit
> t-shirt with the logo "WE CAN HAS".  Any takers for this?
>
> alexis
>
>
> On Wed, Nov 19, 2008 at 2:56 PM, Alexis Richardson
> <alexis.richardson at cohesiveft.com> wrote:
>   
>> On Wed, Nov 19, 2008 at 2:48 PM, Eran Sandler <eran.sandler at gmail.com> wrote:
>>     
>>> Regarding code names, we need Bunny names ;-)
>>>
>>> Or maybe Bunny breed names
>>> (http://en.wikipedia.org/wiki/List_of_rabbit_breeds) :-)
>>>       
>> This is an excellent suggestion.
>>
>> Of course the next Ubuntu release is jaunty jackalope too.
>>
>> alexis
>>
>>
>>
>>
>>
>>
>>
>>
>>
>>
>>
>>
>>
>>     
>>> The Rabbit development team has a question which the community may be
>>> able to help us with.
>>>
>>> ATM we are going through the process of finishing off the last
>>> remaining items for the next release.
>>>
>>> After this release has been made we would like to continue the process
>>> of separating the client releases from broker releases.
>>>
>>> The reason why we want to do this is to make the release procedure
>>> less monolithic and we don't want to have upgrade clients in a lock
>>> step fashion.
>>>
>>> This will (hopefully) increase the agility of the overall release
>>> process and thereby increase the frequency of releasing new
>>> functionality and bug fixes.
>>>
>>> What we don't know is if we release clients at different intervals to
>>> the broker, how is the average user going to know what version works
>>> with what.
>>>
>>>
>>> The Current Rabbit Ecosphere
>>> --------------------------------------------
>>>
>>> - Broker 1.4.x
>>> - Java Client 1.4.x
>>> - .NET Client 1.4.x
>>>
>>>
>>> Where We May End Up
>>> -----------------------------------
>>>
>>> - Broker 1.x.y
>>> - Java Client 2.m.n
>>> - .NET Client 3.j.k
>>> - (Erlang Client x.y) ?
>>> - (Adapter p.q) ?
>>>
>>>
>>> The problem with letting all of the different versions run free is
>>> that knowing what works with what becomes less apparent to casual
>>> observer.
>>>
>>> So for example, how is the average person who doesn't know Rabbit from
>>> a bar of soap supposed to work out that version 2.1.3 of the Java
>>> client has been tested and verified against version 1.7.8 of the
>>> broker?
>>>
>>> Another way to view this would be a compatibility matrix, which would
>>> give a slightly different perspective because it would be an overview
>>> of every release, rather than just a slice through certain versions.
>>>
>>> One initial thought is to make periodic group releases. These would be
>>> bundles of the components that are known to work with each other. This
>>> would be similar to say a Ubuntu release (e.g. version 8.10 contains
>>> gcc 4.3.2, awk 3.1.6, grep 2.5.3 etc).
>>>
>>> In this scenario, we would do a seasonal umbrella release with a
>>> particular name or version. It could as simple as a web page that
>>> contains links the particular versions of the consituent parts.
>>>
>>> So if anybody has any thoughts about this or the release process in
>>> general please let us know. It could as simple as telling us what
>>> naming scheme for the umbrella would be the most appropriate, e.g.
>>>
>>> - Ubuntu Style: Year-Month
>>> - Erlang Style: 12B-4
>>> - Use code names like Roger, Warren, Bugs, Eminem, ....., (your favourite
>>> name)
>>> - ?
>>>
>>> Any comments or suggestions are welcome.
>>>
>>> Ben
>>>
>>> _______________________________________________
>>> rabbitmq-discuss mailing list
>>> rabbitmq-discuss at lists.rabbitmq.com
>>> http://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss
>>>
>>>
>>> _______________________________________________
>>> rabbitmq-discuss mailing list
>>> rabbitmq-discuss at lists.rabbitmq.com
>>> http://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss
>>>
>>>
>>>       

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20081119/5e3a9671/attachment.htm 

From chime at mu.dk  Wed Nov 19 15:15:31 2008
From: chime at mu.dk (Michael Arnoldus)
Date: Wed, 19 Nov 2008 16:15:31 +0100
Subject: [rabbitmq-discuss] Release Process
In-Reply-To: <4924272C.9090000@gmail.com>
References: <269388e30811060955m7b60e1b3mdd737988f53bfbbe@mail.gmail.com>
	<4924272C.9090000@gmail.com>
Message-ID: <CC6CB931-8729-4B93-AE2C-59E64C68C704@mu.dk>

Just a small but for me rather important question: How will this be  
connected to AMQP versions and interoperability with other brokers and  
clients?

Michael

On Nov 19, 2008, at 15:48 , Eran Sandler wrote:

> I think I prefer the Ubuntu style.
>
> Whenever a new RabbitMQ server is about to be released all clients  
> that should be bundled should be "frozen" so that all compatibility  
> issues with these clients can be verified/fixed for the specific  
> server release.
>
> More advanced users can continue to advance in client versions if  
> there are improvements/fixes/etc.
>
> On the next server release the same process repeats to "freeze" the  
> versions of clients that will be used in the server release.
>
> Regarding code names, we need Bunny names ;-)
> Or maybe Bunny breed names (http://en.wikipedia.org/wiki/List_of_rabbit_breeds 
> ) :-)
>
> Eran
>
> Ben Hood wrote:
>> Hi all,
>>
>> The Rabbit development team has a question which the community may be
>> able to help us with.
>>
>> ATM we are going through the process of finishing off the last
>> remaining items for the next release.
>>
>> After this release has been made we would like to continue the  
>> process
>> of separating the client releases from broker releases.
>>
>> The reason why we want to do this is to make the release procedure
>> less monolithic and we don't want to have upgrade clients in a lock
>> step fashion.
>>
>> This will (hopefully) increase the agility of the overall release
>> process and thereby increase the frequency of releasing new
>> functionality and bug fixes.
>>
>> What we don't know is if we release clients at different intervals to
>> the broker, how is the average user going to know what version works
>> with what.
>>
>>
>> The Current Rabbit Ecosphere
>> --------------------------------------------
>>
>> - Broker 1.4.x
>> - Java Client 1.4.x
>> - .NET Client 1.4.x
>>
>>
>> Where We May End Up
>> -----------------------------------
>>
>> - Broker 1.x.y
>> - Java Client 2.m.n
>> - .NET Client 3.j.k
>> - (Erlang Client x.y) ?
>> - (Adapter p.q) ?
>>
>>
>> The problem with letting all of the different versions run free is
>> that knowing what works with what becomes less apparent to casual
>> observer.
>>
>> So for example, how is the average person who doesn't know Rabbit  
>> from
>> a bar of soap supposed to work out that version 2.1.3 of the Java
>> client has been tested and verified against version 1.7.8 of the
>> broker?
>>
>> Another way to view this would be a compatibility matrix, which would
>> give a slightly different perspective because it would be an overview
>> of every release, rather than just a slice through certain versions.
>>
>> One initial thought is to make periodic group releases. These would  
>> be
>> bundles of the components that are known to work with each other.  
>> This
>> would be similar to say a Ubuntu release (e.g. version 8.10 contains
>> gcc 4.3.2, awk 3.1.6, grep 2.5.3 etc).
>>
>> In this scenario, we would do a seasonal umbrella release with a
>> particular name or version. It could as simple as a web page that
>> contains links the particular versions of the consituent parts.
>>
>> So if anybody has any thoughts about this or the release process in
>> general please let us know. It could as simple as telling us what
>> naming scheme for the umbrella would be the most appropriate, e.g.
>>
>> - Ubuntu Style: Year-Month
>> - Erlang Style: 12B-4
>> - Use code names like Roger, Warren, Bugs, Eminem, ....., (your  
>> favourite name)
>> - ?
>>
>> Any comments or suggestions are welcome.
>>
>> Ben
>>
>> _______________________________________________
>> rabbitmq-discuss mailing list
>> rabbitmq-discuss at lists.rabbitmq.com
>> http://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss
>>
>
> _______________________________________________
> rabbitmq-discuss mailing list
> rabbitmq-discuss at lists.rabbitmq.com
> http://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20081119/036ebfa1/attachment.htm 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: smime.p7s
Type: application/pkcs7-signature
Size: 1912 bytes
Desc: not available
Url : http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20081119/036ebfa1/attachment.bin 

From 0x6e6562 at gmail.com  Wed Nov 19 15:17:16 2008
From: 0x6e6562 at gmail.com (Ben Hood)
Date: Wed, 19 Nov 2008 15:17:16 +0000
Subject: [rabbitmq-discuss] Release Process
In-Reply-To: <49242B98.5040905@gmail.com>
References: <269388e30811060955m7b60e1b3mdd737988f53bfbbe@mail.gmail.com>
	<4924272C.9090000@gmail.com>
	<167204d20811190656n2209c9b0v20d8231cbbd550fb@mail.gmail.com>
	<167204d20811190701m2502346cy51150a38e86184c@mail.gmail.com>
	<49242B98.5040905@gmail.com>
Message-ID: <269388e30811190717x56b8bfc2p9d0a6c47268e3c3a@mail.gmail.com>

On Wed, Nov 19, 2008 at 3:07 PM, Eran Sandler <eran.sandler at gmail.com> wrote:
> Do you have a picture of the current T-Shirt or a design of the next one?

https://dev.rabbitmq.com/wiki/EndlessSummerOfCode#section_1



From eran.sandler at gmail.com  Wed Nov 19 15:20:31 2008
From: eran.sandler at gmail.com (Eran Sandler)
Date: Wed, 19 Nov 2008 17:20:31 +0200
Subject: [rabbitmq-discuss] Release Process
In-Reply-To: <269388e30811190717x56b8bfc2p9d0a6c47268e3c3a@mail.gmail.com>
References: <269388e30811060955m7b60e1b3mdd737988f53bfbbe@mail.gmail.com>	
	<4924272C.9090000@gmail.com>	
	<167204d20811190656n2209c9b0v20d8231cbbd550fb@mail.gmail.com>	
	<167204d20811190701m2502346cy51150a38e86184c@mail.gmail.com>	
	<49242B98.5040905@gmail.com>
	<269388e30811190717x56b8bfc2p9d0a6c47268e3c3a@mail.gmail.com>
Message-ID: <49242EBF.9090606@gmail.com>

Looks cool, but I think I need to participate more with the code to 
deserve it :-)


(I have a question about that, that I'll ask later on).


Eran


Ben Hood wrote:

> On Wed, Nov 19, 2008 at 3:07 PM, Eran Sandler <eran.sandler at gmail.com> wrote:
>   
>> Do you have a picture of the current T-Shirt or a design of the next one?
>>     
>
> https://dev.rabbitmq.com/wiki/EndlessSummerOfCode#section_1
>   

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20081119/96d5b365/attachment.htm 

From eran.sandler at gmail.com  Wed Nov 19 15:24:43 2008
From: eran.sandler at gmail.com (Eran Sandler)
Date: Wed, 19 Nov 2008 17:24:43 +0200
Subject: [rabbitmq-discuss] Dev Env for RabbitMQ and some Erlang tips
Message-ID: <49242FBB.9030003@gmail.com>

Hi all,


While I'm not at all new to programming I am new to Erlang and want to 
help the project (specifically with the flow to disk issue which is also 
important to me).


What is the dev env you usually use for Erlang?


I saw you use Mercurial for source control.


I'm assuming the Mac people use TextMate or Emacs/VI for code editing 
(is there an Eclipse plugin that is worth while for Erlang?)


Do you have some nice Erlang tutorials? Is there a nice debugger for Erlang?


Eran


-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20081119/eea77e7e/attachment.htm 

From 0x6e6562 at gmail.com  Wed Nov 19 15:30:57 2008
From: 0x6e6562 at gmail.com (Ben Hood)
Date: Wed, 19 Nov 2008 15:30:57 +0000
Subject: [rabbitmq-discuss] Release Process
In-Reply-To: <CC6CB931-8729-4B93-AE2C-59E64C68C704@mu.dk>
References: <269388e30811060955m7b60e1b3mdd737988f53bfbbe@mail.gmail.com>
	<4924272C.9090000@gmail.com>
	<CC6CB931-8729-4B93-AE2C-59E64C68C704@mu.dk>
Message-ID: <269388e30811190730s2d8e8bafvbf6f6c7af87db305@mail.gmail.com>

Michael,

On Wed, Nov 19, 2008 at 3:15 PM, Michael Arnoldus <chime at mu.dk> wrote:
> Just a small but for me rather important question: How will this be
> connected to AMQP versions and interoperability with other brokers and
> clients?

The general idea behind the grouping is to define a meta-release, i.e.
to draw a line accross a set of clients that have all been tested
against one known version of the server. Subsequent to such a line in
the sand, you want to let each component evolve free of the others and
get re-released, until such a time that you want to make a new
meta-release.

Hence the similarity to a Linux distro release - when you get a major
release, you effectively get a set of bits and pieces that are known
to work with each other - but you use curl instead of wget, you may
want to keep up to date with the bleeding edge of curl but couldn't
care less about having a modern version of wget. (No curl vs. wget
flamewar intended :-)

As for the protocol, well, version negotiation is (for all intents and
purposes, please don't quote me on this) part of the protocol, so each
AMQP component should know wether they can gel with another AMQP peer.

So you *could* theoretically do without a meta-release and just rely
on a statement in a log file saying something like version mismatch,
but we feel that it would make it more apparent if we did a publiclly
visible grouping on a periodic basis, e.g. twice per year.

As for 3rd party libraries, it would be down to them to indicate compatibility.

And as for compatibility to other brokers, I think this would have to
indicated on a per-client basis.

Does that answer your question?

Ben



From 0x6e6562 at gmail.com  Wed Nov 19 15:40:59 2008
From: 0x6e6562 at gmail.com (Ben Hood)
Date: Wed, 19 Nov 2008 15:40:59 +0000
Subject: [rabbitmq-discuss] Dev Env for RabbitMQ and some Erlang tips
In-Reply-To: <49242FBB.9030003@gmail.com>
References: <49242FBB.9030003@gmail.com>
Message-ID: <269388e30811190740y18ba17dcp80794a811300246f@mail.gmail.com>

Eran,

On Wed, Nov 19, 2008 at 3:24 PM, Eran Sandler <eran.sandler at gmail.com> wrote:
> What is the dev env you usually use for Erlang?

I think this is quite developer specific and will vary - I described
the way I do it here, but it's only my way of doing things:
http://hopper.squarespace.com/blog/2008/11/15/how-i-install-rabbitmq-on-osx.html

> I'm assuming the Mac people use TextMate or Emacs/VI for code editing (is
> there an Eclipse plugin that is worth while for Erlang?)

At LShift most people use Emacs. I use vi on Linux and TextMate on
OSX. I have tried the Eclipse IDE, but overall, the tool of choice is
down to personal preference.

> Do you have some nice Erlang tutorials?

I'm not aware that we've written any.

>Is there a nice debugger for Erlang?

Depends what you mean by nice.

You can use the non-graphical dbg module or the TCL based UI debugger.

HTH,

Ben



From eran.sandler at gmail.com  Wed Nov 19 16:10:51 2008
From: eran.sandler at gmail.com (Eran Sandler)
Date: Wed, 19 Nov 2008 18:10:51 +0200
Subject: [rabbitmq-discuss] Dev Env for RabbitMQ and some Erlang tips
In-Reply-To: <269388e30811190740y18ba17dcp80794a811300246f@mail.gmail.com>
References: <49242FBB.9030003@gmail.com>
	<269388e30811190740y18ba17dcp80794a811300246f@mail.gmail.com>
Message-ID: <49243A8B.9060407@gmail.com>

Ben Hood wrote:

>> Do you have some nice Erlang tutorials?
>>     
>
> I'm not aware that we've written any.
>   
Not necessarily things you have written, but maybe tutorials on the net 
that you have used or books you have read when you started using Erlang.

> You can use the non-graphical dbg module or the TCL based UI debugger.
>   
What do you use to debug Erlang (other than printf debugging, that is :-) )

Eran
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20081119/30a6f364/attachment.htm 

From chime at mu.dk  Wed Nov 19 16:20:14 2008
From: chime at mu.dk (Michael Arnoldus)
Date: Wed, 19 Nov 2008 17:20:14 +0100
Subject: [rabbitmq-discuss] Release Process
In-Reply-To: <269388e30811190730s2d8e8bafvbf6f6c7af87db305@mail.gmail.com>
References: <269388e30811060955m7b60e1b3mdd737988f53bfbbe@mail.gmail.com>
	<4924272C.9090000@gmail.com>
	<CC6CB931-8729-4B93-AE2C-59E64C68C704@mu.dk>
	<269388e30811190730s2d8e8bafvbf6f6c7af87db305@mail.gmail.com>
Message-ID: <1C0B1284-2444-40A9-B7F5-B39DD5F50578@mu.dk>

Ben,

Yes and no :-)

In a perfect world it ought to be sufficient to state the version of  
the protocol the broker and the clients implements to assure they can  
talk to each other. If that didn't work it should be possible to find  
the misbehaving party and fix that like a bug. This would mean no meta  
release until the components comply with a new AMQP version.

While I do understand that the world doesn't work like this, I also  
think it is the right ideal to work towards. In fact I wouldn't  
surprise myself a lot if I some day claimed that not striving towards  
this ideal is the primary reason that many standards aren't worth the  
bytes used to store their description in.

So I guess what I'm worried about is that you will change your focus  
to much towards maintaining internal consistency between your own  
components and forget the standard compliance that should be a very  
important part of this.

Michael

On Nov 19, 2008, at 16:30 , Ben Hood wrote:

> Michael,
>
> On Wed, Nov 19, 2008 at 3:15 PM, Michael Arnoldus <chime at mu.dk> wrote:
>> Just a small but for me rather important question: How will this be
>> connected to AMQP versions and interoperability with other brokers  
>> and
>> clients?
>
> The general idea behind the grouping is to define a meta-release, i.e.
> to draw a line accross a set of clients that have all been tested
> against one known version of the server. Subsequent to such a line in
> the sand, you want to let each component evolve free of the others and
> get re-released, until such a time that you want to make a new
> meta-release.
>
> Hence the similarity to a Linux distro release - when you get a major
> release, you effectively get a set of bits and pieces that are known
> to work with each other - but you use curl instead of wget, you may
> want to keep up to date with the bleeding edge of curl but couldn't
> care less about having a modern version of wget. (No curl vs. wget
> flamewar intended :-)
>
> As for the protocol, well, version negotiation is (for all intents and
> purposes, please don't quote me on this) part of the protocol, so each
> AMQP component should know wether they can gel with another AMQP peer.
>
> So you *could* theoretically do without a meta-release and just rely
> on a statement in a log file saying something like version mismatch,
> but we feel that it would make it more apparent if we did a publiclly
> visible grouping on a periodic basis, e.g. twice per year.
>
> As for 3rd party libraries, it would be down to them to indicate  
> compatibility.
>
> And as for compatibility to other brokers, I think this would have to
> indicated on a per-client basis.
>
> Does that answer your question?
>
> Ben

-------------- next part --------------
A non-text attachment was scrubbed...
Name: smime.p7s
Type: application/pkcs7-signature
Size: 1912 bytes
Desc: not available
Url : http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20081119/be4162b5/attachment.bin 

From 0x6e6562 at gmail.com  Wed Nov 19 16:26:20 2008
From: 0x6e6562 at gmail.com (Ben Hood)
Date: Wed, 19 Nov 2008 16:26:20 +0000
Subject: [rabbitmq-discuss] Dev Env for RabbitMQ and some Erlang tips
In-Reply-To: <49243A8B.9060407@gmail.com>
References: <49242FBB.9030003@gmail.com>
	<269388e30811190740y18ba17dcp80794a811300246f@mail.gmail.com>
	<49243A8B.9060407@gmail.com>
Message-ID: <269388e30811190826o531c8913oa99a41886f4ce02e@mail.gmail.com>

Eran,

On Wed, Nov 19, 2008 at 4:10 PM, Eran Sandler <eran.sandler at gmail.com> wrote:
> Ben Hood wrote:
> Not necessarily things you have written, but maybe tutorials on the net that
> you have used or books you have read when you started using Erlang.

Joe Armstrong's latest book is a nice read and after all, he did
originally hack Erlang.

Googling the erlang-questions list and reading trapexit can help as well.

> You can use the non-graphical dbg module or the TCL based UI debugger.
>
>
> What do you use to debug Erlang (other than printf debugging, that is :-) )

As indicated above, the dbg module (RTFM :-) or the TCL frontend (type
in toolbar:start() in the shell click on the bug icon).

Ben



From 0x6e6562 at gmail.com  Wed Nov 19 16:56:22 2008
From: 0x6e6562 at gmail.com (Ben Hood)
Date: Wed, 19 Nov 2008 16:56:22 +0000
Subject: [rabbitmq-discuss] Changes to the Java client API
Message-ID: <269388e30811190856r1708da7btc5f58f3d3d05f0dc@mail.gmail.com>

Dear List,

Just as a heads up, tickets have been removed from the Java API and
this change is now been merged into the mainline source tree.

This will soon be followed by the C# library.

These changes will be released as part of Rabbit 1.5.

Ben



From yferrety at gmail.com  Wed Nov 19 17:35:15 2008
From: yferrety at gmail.com (ferrety ferrety)
Date: Wed, 19 Nov 2008 18:35:15 +0100
Subject: [rabbitmq-discuss] RabbitMQ starting problem on R12B-5
In-Reply-To: <5327a2e30811131703x28b58782we3d3db01c33cad39@mail.gmail.com>
References: <5327a2e30811130457l3679e07auc4a6663d5c1af313@mail.gmail.com>
	<491CBB06.5000100@lshift.net>
	<5327a2e30811131703x28b58782we3d3db01c33cad39@mail.gmail.com>
Message-ID: <5327a2e30811190935p1f598d72la1af147189e9e546@mail.gmail.com>

Hi List,

I tried the (2) solutions provided by Mathias, but without luck.
Even RB12R5 and rabbitmq from mercurial failed to run.
Moreover, I'm unable now to fallback and get it running with R12B4
and rabbitmq-1.4.0 as before.

Any fix guys as we're actually choosing between various AMQP
implentations to use in our production environment . If RabbitMQ can't
even be installed correctly, hmmmm ...

=CRASH REPORT==== 19-Nov-2008::16:58:38 ===
  crasher:
    pid: <0.103.0>
    registered_name: []
    exception exit: {{bad_type,realm_exchange,
                               {realm_resource,'_',<<"mjw.exchange">>}},
                     {rabbit,start,[normal,[]]}}
      in function  application_master:init/4
    initial call: application_master:init(<0.6.0>,<0.102.0>,
                                          {appl_data,rabbit,
                                           [rabbit_amqqueue_sup,rabbit_log,
                                            rabbit_node_monitor,
                                            rabbit_persister,rabbit_router,
                                            rabbit_sup,rabbit_tcp_client_sup],
                                           undefined,
                                           {rabbit,[]},
                                           [rabbit,buffering_proxy,
                                            rabbit_access_control,
                                            rabbit_amqqueue,
                                            rabbit_amqqueue_process,
                                            rabbit_amqqueue_sup,
                                            rabbit_binary_generator,
                                            rabbit_binary_parser,
                                            rabbit_channel,rabbit_control,
                                            rabbit_error_logger,
                                            rabbit_exchange,rabbit_framing,
                                            rabbit_framing_channel,
                                            rabbit_heartbeat,rabbit_load,
                                            rabbit_log,rabbit_misc,
                                            rabbit_mnesia,rabbit_networking,
                                            rabbit_node_monitor,
                                            rabbit_persister,rabbit_reader,
                                            rabbit_realm,rabbit_router,
                                            rabbit_sup,rabbit_tests,
                                            rabbit_ticket,rabbit_tracer,
                                            rabbit_writer,tcp_acceptor,
                                            tcp_acceptor_sup,tcp_client_sup,
                                            tcp_listener,tcp_listener_sup],
                                           [],infinity,infinity},
                                          normal)
    ancestors: [<0.102.0>]
    messages: [{'EXIT',<0.104.0>,normal}]
    links: [<0.102.0>,<0.6.0>]
    dictionary: []
    trap_exit: true
    status: running
    heap_size: 1597
    stack_size: 23
    reductions: 179

Regards
Ferret



From matthias at lshift.net  Wed Nov 19 18:42:59 2008
From: matthias at lshift.net (Matthias Radestock)
Date: Wed, 19 Nov 2008 18:42:59 +0000
Subject: [rabbitmq-discuss] RabbitMQ starting problem on R12B-5
In-Reply-To: <5327a2e30811190935p1f598d72la1af147189e9e546@mail.gmail.com>
References: <5327a2e30811130457l3679e07auc4a6663d5c1af313@mail.gmail.com>	<491CBB06.5000100@lshift.net>	<5327a2e30811131703x28b58782we3d3db01c33cad39@mail.gmail.com>
	<5327a2e30811190935p1f598d72la1af147189e9e546@mail.gmail.com>
Message-ID: <49245E33.1070009@lshift.net>

Ferret,

ferrety ferrety wrote:
> Even RB12R5 and rabbitmq from mercurial failed to run.

What error are you getting when trying the Erlang R12B-5 / 
rabbitmq-from-mercurial combination?

My colleagues have been using that combination without any problems.

> I'm unable now to fallback and get it running with R12B4
> and rabbitmq-1.4.0 as before.

Again, what error are you seeing? We know of several people who are 
running the R12B-4 / 1.4.0 combination, so it definitely works.

> =CRASH REPORT==== 19-Nov-2008::16:58:38 ===
> [...]

That looks like rabbitmq-1.4.0 running on R12B-5, which won't work.


I recommend performing an installation of Erlang R12B-4 and 
rabbitmq-1.4.0 on a "clean" system, i.e. a system that has never had 
Erlang or RabbitMQ installed on it. If that works, which it hopefully 
will, then we can try working out what went wrong previously.


Regards,

Matthias.



From eran.sandler at gmail.com  Wed Nov 19 18:47:56 2008
From: eran.sandler at gmail.com (Eran Sandler)
Date: Wed, 19 Nov 2008 20:47:56 +0200
Subject: [rabbitmq-discuss] Dev Env for RabbitMQ and some Erlang tips
In-Reply-To: <269388e30811190826o531c8913oa99a41886f4ce02e@mail.gmail.com>
References: <49242FBB.9030003@gmail.com>	
	<269388e30811190740y18ba17dcp80794a811300246f@mail.gmail.com>	
	<49243A8B.9060407@gmail.com>
	<269388e30811190826o531c8913oa99a41886f4ce02e@mail.gmail.com>
Message-ID: <49245F5C.5060609@gmail.com>

Thanks for the info :-)


Eran


Ben Hood wrote:

> Eran,
>
> On Wed, Nov 19, 2008 at 4:10 PM, Eran Sandler <eran.sandler at gmail.com> wrote:
>   
>> Ben Hood wrote:
>> Not necessarily things you have written, but maybe tutorials on the net that
>> you have used or books you have read when you started using Erlang.
>>     
>
> Joe Armstrong's latest book is a nice read and after all, he did
> originally hack Erlang.
>
> Googling the erlang-questions list and reading trapexit can help as well.
>
>   
>> You can use the non-graphical dbg module or the TCL based UI debugger.
>>
>>
>> What do you use to debug Erlang (other than printf debugging, that is :-) )
>>     
>
> As indicated above, the dbg module (RTFM :-) or the TCL frontend (type
> in toolbar:start() in the shell click on the bug icon).
>
> Ben
>   

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20081119/81f60deb/attachment.htm 

From holger at wizards.de  Wed Nov 19 20:00:24 2008
From: holger at wizards.de (=?ISO-8859-1?Q?Holger_Hoffst=E4tte?=)
Date: Wed, 19 Nov 2008 21:00:24 +0100
Subject: [rabbitmq-discuss] JSON dependency for codegen - suggestion
Message-ID: <49247058.3080000@wizards.de>

Hi,

I decided to check out what's new in the Java client, but oh noes! Python
errors. So I tried the same with the server and got the helpful message
that JSON is now required. Dropping that into the codegen project worked
for building the broker but not for the Java client lib, apparently since
the parent codegen script is called directly and json.py is not on the
relative path..or something like that. Dropping json.py into the
java-client project worked (everything built fine).
Would it be possible to add the json.py to the -codegen project? That
would make things much easier, probably also for the other client libs.

thanks :)
Holger




From alexis.richardson at cohesiveft.com  Wed Nov 19 21:14:17 2008
From: alexis.richardson at cohesiveft.com (Alexis Richardson)
Date: Wed, 19 Nov 2008 21:14:17 +0000
Subject: [rabbitmq-discuss] video - Joe on Erlang
Message-ID: <167204d20811191314m5c2eb976uc60472b46223a2ba@mail.gmail.com>

Hi,

May be of interest to some on this list -

http://www.infoq.com/interviews/Erlang-Joe-Armstrong

"In this interview filmed during QCon London 2008, Joe Armstrong,
designer of Erlang, speaks on various aspects of the Erlang language,
presenting its roots, how it compares with other languages and why it
has become popular these days due to its native ability to scale on
multi core systems".

alexis



From holger at wizards.de  Wed Nov 19 21:57:57 2008
From: holger at wizards.de (=?ISO-8859-1?Q?Holger_Hoffst=E4tte?=)
Date: Wed, 19 Nov 2008 22:57:57 +0100
Subject: [rabbitmq-discuss] JSON dependency for codegen - suggestion
In-Reply-To: <49247058.3080000@wizards.de>
References: <49247058.3080000@wizards.de>
Message-ID: <49248BE5.5000301@wizards.de>


Replying to myself as usual ;)

> I decided to check out what's new in the Java client, but oh noes! Python
> errors. So I tried the same with the server and got the helpful message
> that JSON is now required. Dropping that into the codegen project worked
> for building the broker but not for the Java client lib, apparently since
> the parent codegen script is called directly and json.py is not on the
> relative path..or something like that.

Nope..the codegen project is appended to the python path and dropping the
json.py in there works just fine for both the broker and the java client
projects...just not with python 2.6 on Windows, which is of course what I
tried :(

C:\home\holger\Projects\rabbitmq-java-client\build.xml:55: Generation of
AMQP.java failed with message:
Traceback (most recent call last):
  File "codegen.py", line 393, in <module>
    do_main(generateJavaApi, generateJavaImpl)
  File "../rabbitmq-codegen\amqp_codegen.py", line 166, in do_main
    header_fn(sys.argv[2])
  File "codegen.py", line 387, in generateJavaApi
    genJavaApi(AmqpSpec(specPath))
  File "../rabbitmq-codegen\amqp_codegen.py", line 48, in __init__
    self.spec = json.read(file(filename).read())
AttributeError: 'module' object has no attribute 'read'

Any python wiz who knows what changed from 2.5 to 2.6 that could cause
such breakage?

> Would it be possible to add the json.py to the -codegen project? That
> would make things much easier, probably also for the other client libs.

That would still be nice, provided we can figure out how to make it work
with python 2.6.

-h




From 0x6e6562 at gmail.com  Wed Nov 19 22:12:46 2008
From: 0x6e6562 at gmail.com (Ben Hood)
Date: Wed, 19 Nov 2008 22:12:46 +0000
Subject: [rabbitmq-discuss] RabbitMQ starting problem on R12B-5
In-Reply-To: <5327a2e30811190935p1f598d72la1af147189e9e546@mail.gmail.com>
References: <5327a2e30811130457l3679e07auc4a6663d5c1af313@mail.gmail.com>
	<491CBB06.5000100@lshift.net>
	<5327a2e30811131703x28b58782we3d3db01c33cad39@mail.gmail.com>
	<5327a2e30811190935p1f598d72la1af147189e9e546@mail.gmail.com>
Message-ID: <269388e30811191412n3390d627hbfb2699411c7caaa@mail.gmail.com>

Ferrety,

On Wed, Nov 19, 2008 at 5:35 PM, ferrety ferrety <yferrety at gmail.com> wrote:
> Any fix guys as we're actually choosing between various AMQP
> implentations to use in our production environment . If RabbitMQ can't
> even be installed correctly, hmmmm ...

The mainline tree works for me on OSX and Penguin using R12B-5 - what
OS are you using?

>    exception exit: {{bad_type,realm_exchange,
>                               {realm_resource,'_',<<"mjw.exchange">>}},

This can't be a recent version of the main tree since realms have long
since disappeared.

I suspect you may be running Rabbit 1.4.0 on R12B-n with n < 5, which
won't work with the current tree because of the bug that Ericsson
fixed in R12B-5.

HTH,

Ben



From 0x6e6562 at gmail.com  Wed Nov 19 22:15:51 2008
From: 0x6e6562 at gmail.com (Ben Hood)
Date: Wed, 19 Nov 2008 22:15:51 +0000
Subject: [rabbitmq-discuss] RabbitMQ starting problem on R12B-5
In-Reply-To: <269388e30811191412n3390d627hbfb2699411c7caaa@mail.gmail.com>
References: <5327a2e30811130457l3679e07auc4a6663d5c1af313@mail.gmail.com>
	<491CBB06.5000100@lshift.net>
	<5327a2e30811131703x28b58782we3d3db01c33cad39@mail.gmail.com>
	<5327a2e30811190935p1f598d72la1af147189e9e546@mail.gmail.com>
	<269388e30811191412n3390d627hbfb2699411c7caaa@mail.gmail.com>
Message-ID: <269388e30811191415l13f634a8ncdaba41b2a6371cd@mail.gmail.com>

Ferrety,

On Wed, Nov 19, 2008 at 10:12 PM, Ben Hood <0x6e6562 at gmail.com> wrote:
> I suspect you may be running Rabbit 1.4.0 on R12B-n with n < 5, which
> won't work with the current tree because of the bug that Ericsson
> fixed in R12B-5.

Sorry, you could in theory actually be running version R12B-5 based on
what you are saying.

But I doubt that you are running the latest source version of Rabbit,
as indicated before.

Ben



From dmitriy.samovskiy at cohesiveft.com  Wed Nov 19 22:17:03 2008
From: dmitriy.samovskiy at cohesiveft.com (Dmitriy Samovskiy)
Date: Wed, 19 Nov 2008 16:17:03 -0600
Subject: [rabbitmq-discuss] JSON dependency for codegen - suggestion
In-Reply-To: <49248BE5.5000301@wizards.de>
References: <49247058.3080000@wizards.de> <49248BE5.5000301@wizards.de>
Message-ID: <4924905F.1020309@cohesiveft.com>


Hi Holger,

Holger Hoffst?tte wrote:
> 
> Any python wiz who knows what changed from 2.5 to 2.6 that could cause
> such breakage?
Looks to me like python2.6 ships with json based on simplejson, which might be different 
from old json.py?

http://bob.pythonmac.org/archives/2008/10/02/python-26-released-now-with-json/

switch to json.loads() instead of json.read() maybe?

- Dmitriy



From 0x6e6562 at gmail.com  Wed Nov 19 22:24:00 2008
From: 0x6e6562 at gmail.com (Ben Hood)
Date: Wed, 19 Nov 2008 22:24:00 +0000
Subject: [rabbitmq-discuss] JSON dependency for codegen - suggestion
In-Reply-To: <4924905F.1020309@cohesiveft.com>
References: <49247058.3080000@wizards.de> <49248BE5.5000301@wizards.de>
	<4924905F.1020309@cohesiveft.com>
Message-ID: <269388e30811191424w7a7894a2hbc666cebcba103c9@mail.gmail.com>

Guys,

On Wed, Nov 19, 2008 at 10:17 PM, Dmitriy Samovskiy
<dmitriy.samovskiy at cohesiveft.com> wrote:
>
> Hi Holger,
>
> Holger Hoffst?tte wrote:
>>
>> Any python wiz who knows what changed from 2.5 to 2.6 that could cause
>> such breakage?
> Looks to me like python2.6 ships with json based on simplejson, which might be different
> from old json.py?

I had this happen to me at a presentation this week - I had upgraded
to 2.6 and just did an hg clone at the presentation.

I didn't look into it because I was trying to demo something in front
of an audience, so I just copied an old version of json.py into the
rabbitmq-codegen directory and got on with it.

But from what I can tell is that the API that ships with 2.6 is
different from that of the json.py module.

A python expert may be able to assist.....

Ben



From esteve at sindominio.net  Wed Nov 19 22:26:42 2008
From: esteve at sindominio.net (Esteve Fernandez)
Date: Wed, 19 Nov 2008 23:26:42 +0100
Subject: [rabbitmq-discuss] JSON dependency for codegen - suggestion
In-Reply-To: <49248BE5.5000301@wizards.de>
References: <49247058.3080000@wizards.de> <49248BE5.5000301@wizards.de>
Message-ID: <200811192326.42639.esteve@sindominio.net>

On Wednesday 19 November 2008 22:57:57 Holger Hoffst?tte wrote:
> Any python wiz who knows what changed from 2.5 to 2.6 that could cause
> such breakage?

Not that I would consider myself a wiz, but the problem is that 2.6 comes with 
a built-in json module.

However, the json module that codegen depends upon (python-json) is not the 
actual Python 2.6. I think codegen should use python-simplejson, which became 
the default json module in Python 2.6.

I'm attaching a patch which makes codegen use simplejson, hope that helps.

Cheers.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: amqp_codegen_py26.patch
Type: text/x-diff
Size: 1830 bytes
Desc: not available
Url : http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20081119/8f0a6e4f/attachment.patch 

From holger at wizards.de  Wed Nov 19 22:52:17 2008
From: holger at wizards.de (=?ISO-8859-1?Q?Holger_Hoffst=E4tte?=)
Date: Wed, 19 Nov 2008 23:52:17 +0100
Subject: [rabbitmq-discuss] JSON dependency for codegen - suggestion
In-Reply-To: <200811192326.42639.esteve@sindominio.net>
References: <49247058.3080000@wizards.de> <49248BE5.5000301@wizards.de>
	<200811192326.42639.esteve@sindominio.net>
Message-ID: <492498A1.7030907@wizards.de>

Esteve Fernandez wrote:
> On Wednesday 19 November 2008 22:57:57 Holger Hoffst?tte wrote:
>> Any python wiz who knows what changed from 2.5 to 2.6 that could cause
>> such breakage?
> 
> Not that I would consider myself a wiz, but the problem is that 2.6 comes with 
> a built-in json module.

That's exactly what I just figured out as well after reading Dmitriy's
link. Thanks for the confirmation guys. Apparently 2.6 also has changes to
the import mechanism and whatnot..no wonder I'm chasing ghosts here.

> I'm attaching a patch which makes codegen use simplejson, hope that helps.

sort of.. :}

The patch is missing a closing " but after fixing that I get:

C:\home\holger\Projects\rabbitmq-java-client\build.xml:55: Generation of
AMQP.java failed with message:
Traceback (most recent call last):
  File "codegen.py", line 393, in <module>
    do_main(generateJavaApi, generateJavaImpl)
  File "../rabbitmq-codegen\amqp_codegen.py", line 169, in do_main
    header_fn(sys.argv[2])
  File "codegen.py", line 387, in generateJavaApi
    genJavaApi(AmqpSpec(specPath))
  File "../rabbitmq-codegen\amqp_codegen.py", line 51, in __init__
    self.spec = json.load(file(filename))
  File "C:\Developer\Python\lib\json\__init__.py", line 267, in load
    parse_constant=parse_constant, **kw)
  File "C:\Developer\Python\lib\json\__init__.py", line 307, in loads
    return _default_decoder.decode(s)
  File "C:\Developer\Python\lib\json\decoder.py", line 319, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "C:\Developer\Python\lib\json\decoder.py", line 338, in raw_decode
    raise ValueError("No JSON object could be decoded")
ValueError: No JSON object could be decoded

The above is with 2.6; I get exactly the same message on 2.5/Linux after
installing simplejson, so at least it's consistent.

Yeah, JSON is really awesome. :->

-h
(scnr)



From esteve at sindominio.net  Wed Nov 19 23:08:06 2008
From: esteve at sindominio.net (Esteve Fernandez)
Date: Thu, 20 Nov 2008 00:08:06 +0100
Subject: [rabbitmq-discuss] JSON dependency for codegen - suggestion
In-Reply-To: <492498A1.7030907@wizards.de>
References: <49247058.3080000@wizards.de>
	<200811192326.42639.esteve@sindominio.net>
	<492498A1.7030907@wizards.de>
Message-ID: <200811200008.06929.esteve@sindominio.net>

On Wednesday 19 November 2008 23:52:17 Holger Hoffst?tte wrote:
> The above is with 2.6; I get exactly the same message on 2.5/Linux after
> installing simplejson, so at least it's consistent.

simplejson doesn't seem to like the comment at the top of the file, if you 
remove it, codegen.py will definitely work.

Cheers.



From holger at wizards.de  Wed Nov 19 23:15:51 2008
From: holger at wizards.de (=?ISO-8859-1?Q?Holger_Hoffst=E4tte?=)
Date: Thu, 20 Nov 2008 00:15:51 +0100
Subject: [rabbitmq-discuss] JSON dependency for codegen - suggestion
In-Reply-To: <49248BE5.5000301@wizards.de>
References: <49247058.3080000@wizards.de> <49248BE5.5000301@wizards.de>
Message-ID: <49249E27.9060504@wizards.de>

>> Would it be possible to add the json.py to the -codegen project? That
>> would make things much easier, probably also for the other client libs.
> 
> That would still be nice, provided we can figure out how to make it work
> with python 2.6.

OK so the quick & easy workaround is to add the old json-py to the codegen
project AND rename it to (say) amqp_json.py. That prevents the name clash
with the 2.6 version and allows using one working (?) version everywhere.

Still curious why (simple)json complains - isn't this supposed to be easy
to parse?

-h



From esteve at sindominio.net  Wed Nov 19 23:26:51 2008
From: esteve at sindominio.net (Esteve Fernandez)
Date: Thu, 20 Nov 2008 00:26:51 +0100
Subject: [rabbitmq-discuss] JSON dependency for codegen - suggestion
In-Reply-To: <49249E27.9060504@wizards.de>
References: <49247058.3080000@wizards.de> <49248BE5.5000301@wizards.de>
	<49249E27.9060504@wizards.de>
Message-ID: <20081119232651.GA2984@sindominio.net>

On Thu, Nov 20, 2008 at 12:15:51AM +0100, Holger Hoffst?tte wrote:
> >> Would it be possible to add the json.py to the -codegen project? That
> >> would make things much easier, probably also for the other client libs.
> > 
> > That would still be nice, provided we can figure out how to make it work
> > with python 2.6.
> 
> OK so the quick & easy workaround is to add the old json-py to the codegen
> project AND rename it to (say) amqp_json.py. That prevents the name clash
> with the 2.6 version and allows using one working (?) version everywhere.
> 
> Still curious why (simple)json complains - isn't this supposed to be easy
> to parse?

Actually, the AMQP spec file is not standard, as JSON doesn't support
comments.

Cheers.



From yferrety at gmail.com  Wed Nov 19 23:30:46 2008
From: yferrety at gmail.com (ferrety ferrety)
Date: Thu, 20 Nov 2008 00:30:46 +0100
Subject: [rabbitmq-discuss] RabbitMQ starting problem on R12B-5
In-Reply-To: <49245E33.1070009@lshift.net>
References: <5327a2e30811130457l3679e07auc4a6663d5c1af313@mail.gmail.com>
	<491CBB06.5000100@lshift.net>
	<5327a2e30811131703x28b58782we3d3db01c33cad39@mail.gmail.com>
	<5327a2e30811190935p1f598d72la1af147189e9e546@mail.gmail.com>
	<49245E33.1070009@lshift.net>
Message-ID: <5327a2e30811191530y40f48077g798806ff9f40a149@mail.gmail.com>

Hi Mathias,

>> Even RB12R5 and rabbitmq from mercurial failed to run.
>
> What error are you getting when trying the Erlang R12B-5 /
> rabbitmq-from-mercurial combination?

On R12B-4, here's the problem:

$ /etc/init.d/rabbitd start
RabbitMQ 1.4.0 (AMQP 8-0)
Copyright (C) 2007-2008 LShift Ltd., Cohesive Financial Technologies
LLC., and Rabbit Technologies Ltd.
Licensed under the MPL.  See http://www.rabbitmq.com/

Logging to "/var/log/rabbitmq/rabbit.log"
SASL logging to "/var/log/rabbitmq/rabbit-sasl.log"

starting database             ...done
starting core processes       ...done
starting recovery             ...Erlang has closed
{"init terminating in
do_boot",{{nocatch,{error,{cannot_start_application,rabbit,{{bad_type,realm_exchange,{realm_resource,'_',<<12
bytes>>}},{rabbit,start,[normal,[]]}}}}},[{init,start_it,1},{init,start_em,1}]}}

Crash dump was written to: erl_crash.dump
init terminating in do_boot ()

>
> My colleagues have been using that combination without any problems.

We did it too. But when movinf to R12-B5 we noticed that Rabbit failed to run.
So, we want to come back to R12-B4 with no success.

>> I'm unable now to fallback and get it running with R12B4
>> and rabbitmq-1.4.0 as before.
>
> Again, what error are you seeing? We know of several people who are running
> the R12B-4 / 1.4.0 combination, so it definitely works.

Something is definitly related to Rabbit Mathias.
All our Erlang apps run perfectly when moving to R12-B5. And they are
running very well when we decide to
fallback to R12-B4.

So?

>> =CRASH REPORT==== 19-Nov-2008::16:58:38 ===
>> [...]
>
> That looks like rabbitmq-1.4.0 running on R12B-5, which won't work.
>
>
> I recommend performing an installation of Erlang R12B-4 and rabbitmq-1.4.0
> on a "clean" system, i.e. a system that has never had Erlang or RabbitMQ
> installed on it. If that works, which it hopefully will, then we can try
> working out what went wrong previously.

We did that 2 times today Mathias. Same result on 2 diffrent machines
under Linux :
* Linux Fedora 2.6.18-1.2849.fc6 #1 SMP Fri Nov 10 12:45:28 EST 2006
i686 i686 i386 GNU/Linux
* gcc 4.1.1
* Bi Intel(R) Xeon(TM) CPU 2.80GHz
* 1Go

No other application is running on these two boxes except our Erlang
app's and the expected RabbitMQ.

> Regards,

Any advices?

N.B: I've already send the "erl_crash.dump" last time I reported that.

Regards
Ferret



From holger at wizards.de  Wed Nov 19 23:32:25 2008
From: holger at wizards.de (=?ISO-8859-1?Q?Holger_Hoffst=E4tte?=)
Date: Thu, 20 Nov 2008 00:32:25 +0100
Subject: [rabbitmq-discuss] JSON dependency for codegen - suggestion
In-Reply-To: <200811200008.06929.esteve@sindominio.net>
References: <49247058.3080000@wizards.de>	<200811192326.42639.esteve@sindominio.net>	<492498A1.7030907@wizards.de>
	<200811200008.06929.esteve@sindominio.net>
Message-ID: <4924A209.6010206@wizards.de>

Esteve Fernandez wrote:
> On Wednesday 19 November 2008 23:52:17 Holger Hoffst?tte wrote:
>> The above is with 2.6; I get exactly the same message on 2.5/Linux after
>> installing simplejson, so at least it's consistent.
> 
> simplejson doesn't seem to like the comment at the top of the file, if you 
> remove it, codegen.py will definitely work.

You're right - the validator at http://www.jsonlint.com/ also complains,
so it seems that Patrick Logan's json-py silently ignores comments whereas
the newer parsers correctly throw errors. Good to know.

-h




From 0x6e6562 at gmail.com  Wed Nov 19 23:33:37 2008
From: 0x6e6562 at gmail.com (Ben Hood)
Date: Wed, 19 Nov 2008 23:33:37 +0000
Subject: [rabbitmq-discuss] RabbitMQ starting problem on R12B-5
In-Reply-To: <5327a2e30811191530y40f48077g798806ff9f40a149@mail.gmail.com>
References: <5327a2e30811130457l3679e07auc4a6663d5c1af313@mail.gmail.com>
	<491CBB06.5000100@lshift.net>
	<5327a2e30811131703x28b58782we3d3db01c33cad39@mail.gmail.com>
	<5327a2e30811190935p1f598d72la1af147189e9e546@mail.gmail.com>
	<49245E33.1070009@lshift.net>
	<5327a2e30811191530y40f48077g798806ff9f40a149@mail.gmail.com>
Message-ID: <269388e30811191533o3634f0d7pe622e5a731d38529@mail.gmail.com>

Ferrety,

On Wed, Nov 19, 2008 at 11:30 PM, ferrety ferrety <yferrety at gmail.com> wrote:
> {"init terminating in
> do_boot",{{nocatch,{error,{cannot_start_application,rabbit,{{bad_type,realm_exchange,{realm_resource,'_',<<12
> bytes>>}},{rabbit,start,[normal,[]]}}}}},[{init,start_it,1},{init,start_em,1}]}}

The database format has changed since 1.4.0 was released. This is not
upgradeable. You will need to nuke the directory containing mnesia and
then reboot rabbit.

HTH,

Ben



From matthias at lshift.net  Wed Nov 19 23:47:44 2008
From: matthias at lshift.net (Matthias Radestock)
Date: Wed, 19 Nov 2008 23:47:44 +0000
Subject: [rabbitmq-discuss] RabbitMQ starting problem on R12B-5
In-Reply-To: <5327a2e30811191530y40f48077g798806ff9f40a149@mail.gmail.com>
References: <5327a2e30811130457l3679e07auc4a6663d5c1af313@mail.gmail.com>	<491CBB06.5000100@lshift.net>	<5327a2e30811131703x28b58782we3d3db01c33cad39@mail.gmail.com>	<5327a2e30811190935p1f598d72la1af147189e9e546@mail.gmail.com>	<49245E33.1070009@lshift.net>
	<5327a2e30811191530y40f48077g798806ff9f40a149@mail.gmail.com>
Message-ID: <4924A5A0.3090405@lshift.net>

Ferret,

ferrety ferrety wrote:
> On R12B-4, here's the problem:
> 
> $ /etc/init.d/rabbitd start
> [...]
> {"init terminating in
> do_boot",{{nocatch,{error,{cannot_start_application,rabbit,{{bad_type,realm_exchange,{realm_resource,'_',<<12
> bytes>>}},{rabbit,start,[normal,[]]}}}}},[{init,start_it,1},{init,start_em,1}]}}

Are you *sure* that is R12B-4?

Please run
   erlang:system_info(version).
   code:which(mnesia).
in an Erlang shell and send me the results.

>> My colleagues have been using that combination without any problems.
> 
> We did it too.

Are you saying that R12B-4 + 1.4.0 actually worked for you at some point?

>> I recommend performing an installation of Erlang R12B-4 and rabbitmq-1.4.0
>> on a "clean" system
> We did that 2 times today Mathias. Same result on 2 diffrent machines
> No other application is running on these two boxes except our Erlang
> app's and the expected RabbitMQ.

And these were clean machines, with *no previous Erlang or RabbitMQ 
installation*?


Matthias.



From holger at wizards.de  Thu Nov 20 00:32:49 2008
From: holger at wizards.de (=?ISO-8859-1?Q?Holger_Hoffst=E4tte?=)
Date: Thu, 20 Nov 2008 01:32:49 +0100
Subject: [rabbitmq-discuss] JSON dependency for codegen - suggestion
In-Reply-To: <5ad109e90811191607y36a4aca1n40ac4b9af39948f2@mail.gmail.com>
References: <49247058.3080000@wizards.de> <49248BE5.5000301@wizards.de>	
	<49249E27.9060504@wizards.de>
	<20081119232651.GA2984@sindominio.net>
	<5ad109e90811191607y36a4aca1n40ac4b9af39948f2@mail.gmail.com>
Message-ID: <4924B031.7050104@wizards.de>


Good news!

[..bla bla..]
>   File "codegen.py", line 295, in fillField
>     conv_fn = erlangDefaultValueTypeConvMap[type(field.defaultvalue)]
> KeyError: <type 'unicode'>
> make: *** [src/rabbit_framing.erl] Error 1

Caused by simplejson-1.9.whatever it installed, fixed by updating to the
latest 2.0.4 [1]. Server now builds fine again. I win. :)

So +1 for fixing the spec json file and requiring simplejson.

cheers
Holger

[1] http://bugs.gentoo.org/show_bug.cgi?id=246070



From vinorasmus at gmail.com  Thu Nov 20 07:24:42 2008
From: vinorasmus at gmail.com (Gavin Bong)
Date: Thu, 20 Nov 2008 15:24:42 +0800
Subject: [rabbitmq-discuss] Peek into a queue
Message-ID: <33784a0c0811192324r24f13894x8dc2ea21f5a536e7@mail.gmail.com>

Hi,

Does AMQP support the ability to peek into the contents of a Queue
without actually dequeueing ?

I tried doing this and but it is doing an actual dequeue.

            channel.txSelect();
            GetResponse response = channel.basicGet( tuple.ticket, Q, true );

            String s = new String( response.getBody(), "UTF-8" );
            System.out.println( "received = " + s );

            channel.txRollback();

Thanks.

Regards,

Gavin



From 0x6e6562 at gmail.com  Thu Nov 20 08:36:43 2008
From: 0x6e6562 at gmail.com (Ben Hood)
Date: Thu, 20 Nov 2008 08:36:43 +0000
Subject: [rabbitmq-discuss] Peek into a queue
In-Reply-To: <33784a0c0811192324r24f13894x8dc2ea21f5a536e7@mail.gmail.com>
References: <33784a0c0811192324r24f13894x8dc2ea21f5a536e7@mail.gmail.com>
Message-ID: <269388e30811200036j175f7dbbi8f0fe69adcc1f3ef@mail.gmail.com>

Gavin,

On Thu, Nov 20, 2008 at 7:24 AM, Gavin Bong <vinorasmus at gmail.com> wrote:
> Hi,
>
> Does AMQP support the ability to peek into the contents of a Queue
> without actually dequeueing ?

No, ATM you have to do a basic.get either in the way you are already
doing it or by turning the auto ack off and just not sending the ack
back.

Ben



From yferrety at gmail.com  Thu Nov 20 08:47:16 2008
From: yferrety at gmail.com (ferrety ferrety)
Date: Thu, 20 Nov 2008 09:47:16 +0100
Subject: [rabbitmq-discuss] RabbitMQ starting problem on R12B-5
In-Reply-To: <4924A5A0.3090405@lshift.net>
References: <5327a2e30811130457l3679e07auc4a6663d5c1af313@mail.gmail.com>
	<491CBB06.5000100@lshift.net>
	<5327a2e30811131703x28b58782we3d3db01c33cad39@mail.gmail.com>
	<5327a2e30811190935p1f598d72la1af147189e9e546@mail.gmail.com>
	<49245E33.1070009@lshift.net>
	<5327a2e30811191530y40f48077g798806ff9f40a149@mail.gmail.com>
	<4924A5A0.3090405@lshift.net>
Message-ID: <5327a2e30811200047p2f360444nb499f84c8cefd2@mail.gmail.com>

Hi Mathias,


> Are you *sure* that is R12B-4?

Yes I'm.

> Please run
>  erlang:system_info(version).

1> erlang:system_info(version).
"5.6.4"

>  code:which(mnesia).

2> code:which(mnesia).
"/usr/lib/erlang/lib/mnesia-4.4.7/ebin/mnesia.beam"

>
> Are you saying that R12B-4 + 1.4.0 actually worked for you at some point?

Yes, this is exactly what happen to us. The first time we installed
Rabbit, it just worked without any problem.
When moving to R12B-5, problems started and it' wasn't possible to
return to R12B-4 and get it run anymore.

> And these were clean machines, with *no previous Erlang or RabbitMQ
> installation*?

The first time we installed Rabbit 1.4.0 was on clean machine with
R12B-4. But it worked fine.

Regards
Ferret



From matthias at lshift.net  Thu Nov 20 09:06:24 2008
From: matthias at lshift.net (Matthias Radestock)
Date: Thu, 20 Nov 2008 09:06:24 +0000
Subject: [rabbitmq-discuss] RabbitMQ starting problem on R12B-5
In-Reply-To: <5327a2e30811200047p2f360444nb499f84c8cefd2@mail.gmail.com>
References: <5327a2e30811130457l3679e07auc4a6663d5c1af313@mail.gmail.com>	<491CBB06.5000100@lshift.net>	<5327a2e30811131703x28b58782we3d3db01c33cad39@mail.gmail.com>	<5327a2e30811190935p1f598d72la1af147189e9e546@mail.gmail.com>	<49245E33.1070009@lshift.net>	<5327a2e30811191530y40f48077g798806ff9f40a149@mail.gmail.com>	<4924A5A0.3090405@lshift.net>
	<5327a2e30811200047p2f360444nb499f84c8cefd2@mail.gmail.com>
Message-ID: <49252890.7080906@lshift.net>

Ferret,

ferrety ferrety wrote:

> 1> erlang:system_info(version).
> "5.6.4"

So far so good, but ...

> 2> code:which(mnesia).
> "/usr/lib/erlang/lib/mnesia-4.4.7/ebin/mnesia.beam"

That is R12B-5's version of mnesia.

>> Are you saying that R12B-4 + 1.4.0 actually worked for you at some point?
> 
> Yes, this is exactly what happen to us. The first time we installed
> Rabbit, it just worked without any problem.
> When moving to R12B-5, problems started and it' wasn't possible to
> return to R12B-4 and get it run anymore.

I suspect that when you downgraded to R12B-4 you simply installed it 
over R12B-5, which may have left the R12B-5 libraries in place alongside 
the R12B-4 libraries. You will probably find that you have several 
mnesia-* dirs under usr/lib/erlang/lib. If so, please remove all of 
/usr/lib/erlang and re-install R12B-4 after that.


Matthias.



From alexis.richardson at cohesiveft.com  Thu Nov 20 11:15:12 2008
From: alexis.richardson at cohesiveft.com (Alexis Richardson)
Date: Thu, 20 Nov 2008 11:15:12 +0000
Subject: [rabbitmq-discuss] AMQP 0-9-1 released
Message-ID: <167204d20811200315y5509aac7k3be80eb12384b9ea@mail.gmail.com>

Hi,

The RabbitMQ team is very pleased to announce that the AMQP 0-9-1
specification was approved by the AMQP Working Group in a vote
yesterday.

The need for AMQP 0-9-1 arose from the AMQP community and AMQP
customers.  The community wants interoperability - indeed this is a
major goal of AMQP.  People frequently try to download a broker from
one implementor, and use it with a client from another implementor.
Even when both sets of code implement the same specification, this has
not always worked 'out of the box'.

Frequently asked questions have included "how to I do I .."

* get OpenAMQ's C client working with RabbitMQ,
* or get RabbitMQ's Java client to work with OpenAMQ
* use QPid's M2.1 JMS-style Java client with RabbitMQ

This has all been possible and people have done it, but in each case
it has been a few hours of coding to get it working, without the
assurance you want from a fully QAd or regression-tested and certified
package.

So I think we all want interop to work out of the box and many people
have said they expect this too.  Interop would also remove cost from
"business to business" integration projects.

AMQP 0-9-1 was created to meet that need.  It is a simplified 'interop
release' that starts from the 0-9 specification and then fixes interop
bugs and removes a lot of unused material.  For reasons of backwards
compatibility with certain existing deployments, the 0-9-1 spec will
work with 0-9 wire frames.  This means that the community can expect
to get what it demands: a set of brokers and clients that work
together.

The work to achieve this clean up was a collective effort and
represents 18 months of 'lessons learnt in production' by all the
major AMQP implementations in the 0-8/0-9 family.  Documents should
appear on http://www.amqp.org imminently.  Thank-you to all those
involved on behalf of the RabbitMQ team.

I should also explain what AMQP 0-9-1 is *not*.  It does not
interoperate with AMQP 0-10.  AMQP 0-10 introduces technology for
transactional 'once and only once' delivery within the protocol.
Similar features are planned for AMQP 1.0 which is currently under
development by the Working Group.  So please see 0-9-1 as a
stabilisation of earlier spec work, based on hard experience in
production with the 0-8 and 0-9 protocols.  Current and future
protocol work concerns the step up to the 1.0 business requirements as
published on http://www.amqp.org.

What does this mean for RabbitMQ users?

Interop is good news for RabbitMQ because we think messaging should
'just work'.  RabbitMQ will implement AMQP 0-9-1 on the 1.x tree.
AMQP 0-9-1 is absurdly similar to 0-8 and 0-9, which is one reason we
found the 'interop delta' so frustrating.

For RabbitMQ users this means a migration path not much more complex
than (say) moving from RabbitMQ 1.3 to 1.4.  Existing deployments will
continue to work but some methods - eg. access tickets - are now
formally deprecated.  For implementors of clients, the cost of
upgrading to 0-9-1 should not be more than a day's coding in most
cases.  RabbitMQ will provide updated client codegen tools when an
0-9-1 broker is released.

In terms of timing and details of the RabbitMQ 1.x broker roadmap, I
refer you to the development team.  For discussions on this as well as
packaging dependencies, and client release plans, we strongly urge the
community to come forward with comments, questions and offers of
assistance.

We hope the RabbitMQ community places a high value on 0-9-1 interop -
as high as we do as providers of the product.  I cannot speak here for
the other implementations but we have good reason to believe that
their respective communities will value 0-9-1 interop equally highly.
But if you see gaps - please jump in and help with some code or
requirements.  Or - even better - provide some test harnesses.  And if
you see any errata then you can also list them here.

What about 2009?

With interest growing in AMQP around the community, and the Working
Group being joined by Microsoft, we think AMQP is in good shape for
the future.

Members of the RabbitMQ community who wish to contribute to the
development of the protocol as we move towards 1.0, should not be shy
of speaking up on this list.  We aim to track this spec and invite
implementation ideas for RabbitMQ 2.0.  We don't want to rush things -
RabbitMQ's existing implementations set a high bar.  Stability at
scale, and ease of use, are of the utmost importance.

So - finally - I think this is a very good time to say a big thank-you
to everyone who has made RabbitMQ successful so far.   Thank-you!

Best wishes,

alexis



From alex.graul at bloomsburyqi.com  Thu Nov 20 14:01:39 2008
From: alex.graul at bloomsburyqi.com (Alex Graul)
Date: Thu, 20 Nov 2008 14:01:39 +0000
Subject: [rabbitmq-discuss] Maximum erlang processes & dead channels
Message-ID: <57C4F5EB-B0AD-489F-887C-6922937D6CEC@bloomsburyqi.com>

Hello,

I'm about to give some of our employees a framework for accessing and  
manipulating data from various resources in Ruby, some of which are  
accessed over AMQP/RabbitMQ 1.4.0. By the nature of what they're doing  
and how they're going to be using it, these scripts are likely to be  
crashed a heck of a lot of time, which usually wouldn't be a problem.  
However during heavy testing I ran into the errors consistent with the  
'too many processes' problem (see: http://www.nabble.com/Too-many-processes-td19706977.html 
  ). I think hard crashes mean the channel doesn't get closed, so  
eventually the max number of erlang processes is hit. Is there some  
mechanism by which these consumers/channels can be auto-timed out to  
stop this happening? Apologies if I'm missing something obvious.

Thanks for all the incredible work on RabbitMQ, it's a lovely system  
to work with.
-alex



From 0x6e6562 at gmail.com  Thu Nov 20 18:09:14 2008
From: 0x6e6562 at gmail.com (Ben Hood)
Date: Thu, 20 Nov 2008 18:09:14 +0000
Subject: [rabbitmq-discuss] Maximum erlang processes & dead channels
In-Reply-To: <57C4F5EB-B0AD-489F-887C-6922937D6CEC@bloomsburyqi.com>
References: <57C4F5EB-B0AD-489F-887C-6922937D6CEC@bloomsburyqi.com>
Message-ID: <269388e30811201009v23487bf1xc6d277ca6eac8727@mail.gmail.com>

Alex,

On Thu, Nov 20, 2008 at 2:01 PM, Alex Graul <alex.graul at bloomsburyqi.com> wrote:
>  ). I think hard crashes mean the channel doesn't get closed, so
> eventually the max number of erlang processes is hit.

What value did you set the max processes to?

Ben



From yferrety at gmail.com  Thu Nov 20 19:58:08 2008
From: yferrety at gmail.com (ferrety ferrety)
Date: Thu, 20 Nov 2008 20:58:08 +0100
Subject: [rabbitmq-discuss] RabbitMQ starting problem on R12B-5
In-Reply-To: <49252890.7080906@lshift.net>
References: <5327a2e30811130457l3679e07auc4a6663d5c1af313@mail.gmail.com>
	<491CBB06.5000100@lshift.net>
	<5327a2e30811131703x28b58782we3d3db01c33cad39@mail.gmail.com>
	<5327a2e30811190935p1f598d72la1af147189e9e546@mail.gmail.com>
	<49245E33.1070009@lshift.net>
	<5327a2e30811191530y40f48077g798806ff9f40a149@mail.gmail.com>
	<4924A5A0.3090405@lshift.net>
	<5327a2e30811200047p2f360444nb499f84c8cefd2@mail.gmail.com>
	<49252890.7080906@lshift.net>
Message-ID: <5327a2e30811201158kffcfba8i6fd985f1cbefa32a@mail.gmail.com>

Hi Mathias,

Works now. Thanks.

Regards
Ferret

On Thu, Nov 20, 2008 at 10:06 AM, Matthias Radestock
<matthias at lshift.net> wrote:
> Ferret,
>
> ferrety ferrety wrote:
>
>> 1> erlang:system_info(version).
>> "5.6.4"
>
> So far so good, but ...
>
>> 2> code:which(mnesia).
>> "/usr/lib/erlang/lib/mnesia-4.4.7/ebin/mnesia.beam"
>
> That is R12B-5's version of mnesia.
>
>>> Are you saying that R12B-4 + 1.4.0 actually worked for you at some point?
>>
>> Yes, this is exactly what happen to us. The first time we installed
>> Rabbit, it just worked without any problem.
>> When moving to R12B-5, problems started and it' wasn't possible to
>> return to R12B-4 and get it run anymore.
>
> I suspect that when you downgraded to R12B-4 you simply installed it over
> R12B-5, which may have left the R12B-5 libraries in place alongside the
> R12B-4 libraries. You will probably find that you have several mnesia-* dirs
> under usr/lib/erlang/lib. If so, please remove all of /usr/lib/erlang and
> re-install R12B-4 after that.
>
>
> Matthias.
>



From 0x6e6562 at gmail.com  Thu Nov 20 22:55:48 2008
From: 0x6e6562 at gmail.com (Ben Hood)
Date: Thu, 20 Nov 2008 22:55:48 +0000
Subject: [rabbitmq-discuss] Form Submission - Add A Question
In-Reply-To: <199B1EFC-9BFC-492A-BBFA-879D652ADC6A@soundcloud.com>
References: <24034744.598691227004627209.JavaMail.root@web2>
	<269388e30811180255n118356e6l2e2dcc9860f51439@mail.gmail.com>
	<199B1EFC-9BFC-492A-BBFA-879D652ADC6A@soundcloud.com>
Message-ID: <269388e30811201455g71b3794fqae2133fb86c57b91@mail.gmail.com>

Sean,

On Thu, Nov 20, 2008 at 12:55 PM, Sean Treadway <sean at soundcloud.com> wrote:
> Thanks Ben, it does indeed help.  For example, I didn't know that Basic.Get
> automatically Acks a message.

http://lettuce.squarespace.com/faq/receiving-messages/does-basicget-automatically-acknowledge-a-message.html

> Also, from someone approaching RabbitMQ without a strong background in
> messaging I'm still trying to map out the differences in terminology -
> particularly with regards to queue depth, and consumers vs connections vs
> clients.  I read 'queue depth' as 'queue size', as 'how many messages have
> been published waiting for acknowledgment'. But 'queue size' probably means
> about 10 different things to you :)

http://lettuce.squarespace.com/faq/queues/what-is-queue-depth.html

> I'll try to describe my confusion with
> an example:
>
> Publish 1
> Publish 2
> Publish 3
> Client A: checks depth with Queue.Declare passive
>
> Client A gets a queue depth of 3.

If this was the only interaction with the queue, then you could
feasibly expect this response.

> But the way RabbitMQ (and possibly AMQP) works is not very obvious:
>
> Publish 1
> Publish 2
> Publish 3
> Client B: sends Basic.Consume
> Client B: receives Basic.Deliver 1
> Client B: sends Bacic.Ack 1
> Client A: checks depth
>
> I would assume that the queue depth should be 2, but what is returned is 0.
>  Without the Ack, I would still assume the queue depth to be 3.

Everything is asynchronous here and it is not clear whether

a) The the order of events over time from the broker's perspective
actually matches the client's perception;
b) The remaining 2 messages that you are supposedly missing are
actually in mid-flight somewhere.

This will depend in part on how your client behaves, e.g. whether it
absorbs socket back pressure or not.

Two questions:

a) Which statistic are you referring to when you are reporting the queue depth?
b) What library are you using?

> I write this here, because I've been trying to formulate a question but
> can't really come up with one.  Maybe something like "how is queue depth
> calculated?"  or "how do you measure the queue depth of all un-ack'd
> messages?"  Or even something as simple as a glossary of common messaging
> terminology and what each vendor uses for the terms.

Please see the linked FAQ.

> Another issue that I took much time to debug was failing to understand how
> messages are delivered to clients, where I am assuming a fair distribution
> to clients.  Example:
>
> Publish 1
> Client A: Basic.Consume
> Publish 2
> Publish 3
> Publsih 4
> Client B: Basic.Consume
> Publish 5
> Publish 6
>
> The delivered order I would assume would be close to this:
>
> Client A: Deliver/Ack 1
> Client B: Deliver/Ack 2
> Client A: Deliver/Ack 3
> Client B: Deliver/Ack 4
> Client A: Deliver/Ack 5
> Client B: Deliver/Ack 6
>
> But is actually:
>
> Client A: Deliver/Ack 1
> Client B: Deliver/Ack 5
> Client A: Deliver/Ack 2
> Client A: Deliver/Ack 3
> Client A: Deliver/Ack 4
> Client A: Deliver/Ack 6

Do client A and B have their own channel or do they share a channel?

> Client B never sees 2,3 or 4.  In the use case of load balancing - we need
> to start more clients when the queue depth grows, but this behavior prevents
> the new clients to catch up on the previous messages.  Do you have any
> suggestions for how to accomplish fair distribution to 'late comer' clients?
>  Is this even possible, or are there best practices that I'm missing?  Or
> are there ways of configuring RabbitMQ to deliver messages like in the 1st
> example?

Yes, it's a command that is called basic.qos whereby you set a
per-channel pre-fetch window and basically credit consumers
proportionally to the number of acks they send back.

It's currently in development ATM (branch 18577 refers).

HTH,

Ben



From 0x6e6562 at gmail.com  Thu Nov 20 23:56:36 2008
From: 0x6e6562 at gmail.com (Ben Hood)
Date: Thu, 20 Nov 2008 23:56:36 +0000
Subject: [rabbitmq-discuss] Catching channel disconnect
In-Reply-To: <269388e30810150909h5f992ad5i2626d8988e7a992b@mail.gmail.com>
References: <FC677D6A-0C6E-47BE-ABD0-346C42FF2E13@gmail.com>
	<269388e30810141554n74aa1360h58e6be51a7c6145b@mail.gmail.com>
	<83A9E39B-2CBE-4BF2-A085-502321291597@gmail.com>
	<269388e30810150108s5819c474pc1f96748763d1a5c@mail.gmail.com>
	<6CCA7377-6E1F-4D40-896C-7721AB3133DF@gmail.com>
	<269388e30810150315x2d0715d4jeb63cea17e20d530@mail.gmail.com>
	<8E6122DB-EEB8-40CE-9E89-247C2EC80028@gmail.com>
	<269388e30810150909h5f992ad5i2626d8988e7a992b@mail.gmail.com>
Message-ID: <269388e30811201556s30cb097as5108829c416c639f@mail.gmail.com>

Valentino,

On Wed, Oct 15, 2008 at 4:09 PM, Ben Hood <0x6e6562 at gmail.com> wrote:
> On Wed, Oct 15, 2008 at 4:21 PM, Valentino Volonghi <dialtone at gmail.com> wrote:
>> -----BEGIN PGP SIGNED MESSAGE-----
>> Hash: SHA1
>>
>>
>> On Oct 15, 2008, at 3:15 AM, Ben Hood wrote:
>>
>>> Are you saying that when the client sends a tx_select, this crashes the
>>> broker?
>>
>> No, it crashes the unpatched client if it's not actually connected to the
>> broker.

It's taken a while but this patch has now been QA'ed and merged into
the mainline.

In the run up to the Erlang client release, there are still a few
patches pending QA on the Erlang client, hopefully these will be
accepted into the main tree sometime soon.

HTH,

Ben



From bsullivan at lindenlab.com  Fri Nov 21 00:02:32 2008
From: bsullivan at lindenlab.com (Brian Sullivan)
Date: Thu, 20 Nov 2008 16:02:32 -0800
Subject: [rabbitmq-discuss] until clients support Channel.Flow in 1.5.0+...
Message-ID: <07CAE072-3099-475F-A212-79306576EAFF@lindenlab.com>


Can we assume that if a client doesn't support Channel.Flow in 1.5.0  
onwards, that it will get an error from the broker if the client  
continues to try to send messages?

Thanks,
Brian



From 0x6e6562 at gmail.com  Fri Nov 21 00:14:26 2008
From: 0x6e6562 at gmail.com (Ben Hood)
Date: Fri, 21 Nov 2008 00:14:26 +0000
Subject: [rabbitmq-discuss] until clients support Channel.Flow in
	1.5.0+...
In-Reply-To: <07CAE072-3099-475F-A212-79306576EAFF@lindenlab.com>
References: <07CAE072-3099-475F-A212-79306576EAFF@lindenlab.com>
Message-ID: <269388e30811201614r407d24e0xdc92324b1dfe2c79@mail.gmail.com>

Brian

On Fri, Nov 21, 2008 at 12:02 AM, Brian Sullivan
<bsullivan at lindenlab.com> wrote:
>
> Can we assume that if a client doesn't support Channel.Flow in 1.5.0
> onwards, that it will get an error from the broker if the client
> continues to try to send messages?

If the client ignores the server initiated command, then the server
will just accept this until it dies.

We could fix this, I suppose.

Ben



From bsullivan at lindenlab.com  Fri Nov 21 00:22:45 2008
From: bsullivan at lindenlab.com (Brian Sullivan)
Date: Thu, 20 Nov 2008 16:22:45 -0800
Subject: [rabbitmq-discuss] until clients support Channel.Flow in
	1.5.0+...
In-Reply-To: <269388e30811201614r407d24e0xdc92324b1dfe2c79@mail.gmail.com>
References: <07CAE072-3099-475F-A212-79306576EAFF@lindenlab.com>
	<269388e30811201614r407d24e0xdc92324b1dfe2c79@mail.gmail.com>
Message-ID: <5964582F-D17F-4104-87FE-08BBF80605D7@lindenlab.com>

Is there any reason we *wouldn't* want that behavior?  I might be  
coming from a paranoid place where I fear my ProducersOfDeath, but it  
really seems like a better idea to protect the server from crashing in  
these cases...

This fix is small enough to include in 1.5.0, I hope?

On Nov 20, 2008, at 4:14 PM, Ben Hood wrote:

> Brian
>
> On Fri, Nov 21, 2008 at 12:02 AM, Brian Sullivan
> <bsullivan at lindenlab.com> wrote:
>>
>> Can we assume that if a client doesn't support Channel.Flow in 1.5.0
>> onwards, that it will get an error from the broker if the client
>> continues to try to send messages?
>
> If the client ignores the server initiated command, then the server
> will just accept this until it dies.
>
> We could fix this, I suppose.
>
> Ben




From clemesha at ucsd.edu  Fri Nov 21 01:27:39 2008
From: clemesha at ucsd.edu (Alex Clemesha)
Date: Thu, 20 Nov 2008 17:27:39 -0800
Subject: [rabbitmq-discuss] RabbitMQ ejabberd gateway
Message-ID: <d272f0690811201727v6c6e2f9cgfd3ca23a79de496c@mail.gmail.com>

Hi,

I'm doing some work using the RabbitMQ gateway module for ejabberd
(http://hg.rabbitmq.com/rabbitmq-xmpp/raw-file/tip/doc/overview-summary.html)
and I have a couple basic questions.


Things are going pretty well in the sense that I can do this:
Send and receive AMQP messages via XMPP, i.e. I can
make "amq.topic at rabbitmq.my.host.edu" a buddy in my
chat client or google talk and send and receive messages.

but, the issues that I'm having are these:

1) I can *only* use the exchange 'amq.topic' to perform the above
example where I send messages from XMPP to AMQP and vice-versa.
There *are* other exchanges in my AMQP network, because all
my AMQP producers and consumers use them at the same time I'm
trying the XMPP gateway, it just seems as though I can't make them
XMPP buddies.
(I believe this is a fairly simple config or auth problem, I just
haven't be able to find the solution yet.)


2) I'm also playing with a neat javascript XMPP client called Strophe
(http://code.stanziq.com/strophe/).
The basic examples work fine for me when I use ejabberd users that I
have created,
and thus know the password that ejabberd has for these users.
The simple Strophe examples all require a password for a given JID, so
my question
is this: what would the password be for the JID
"amq.topic at rabbitmq.my.host.edu" that comes
into existence via the RabbitMQ gateway module for ejabberd?

(With this question I believe that I may be just missing something
about how Strophe
works ... also with Strophe I'm using the BOSH connection manager
Punjab http://code.stanziq.com/punjab,
so the problem could certainly lie there as well, but I thought I'd
just mention the issue just in case
someone knows of a solution.)



Thanks very much for any clues!
-Alex



-- 
Alex Clemesha
clemesha.org



From tsuraan at gmail.com  Fri Nov 21 01:50:20 2008
From: tsuraan at gmail.com (tsuraan)
Date: Thu, 20 Nov 2008 19:50:20 -0600
Subject: [rabbitmq-discuss] py-amqplib status messages
Message-ID: <84fb38e30811201750l2d5dd947vb30a96c1afc8b72b@mail.gmail.com>

How does py-amqplib return results to the user?  For example,
basic_publish has a mandatory flag, which says that if the server
cannot route a message, it gives an unroutable message back.  How does
the user of py-amqplib get this message?  It seems like every method
returns None all the time with the exception of basic_get, so how can
I get server responses?

The reason I ask is that if I do 1000 basic_publish calls, the first
several hundred (used to be ~600, closer to 800 with the latest hg
tip) messages get inserted, but the rest do not (this is the same
problem that I was having a month or so ago, but I finally got time to
pick this up again, so I'm starting fresh-ish).  The call is being
made a thousand times with messages whose bodies are the value of a
simple integer counter, and I never get any sort of failure report or
anything, but I really don't have any idea how to get status
messages...


Code samples:
message inserter, which is run first:

def main():
  conn = A.Connection('localhost', userid='tsuraan', password='tsuraan')
  chan = conn.channel()

  for i in range(1000):
    m = A.Message(str(i), delivery_mode=2)
    chan.basic_publish(m, 'rawmsg', 'standard', mandatory=True, immediate=False)

if __name__ == "__main__":
  main()

message consumer, which is run after the inserter is run (I know
that's not realistic, but I want to know why I'm silently losing
messages):

def main():
  conn = A.Connection('localhost', userid='tsuraan', password='tsuraan')
  chan = conn.channel()

  nums = []
  while True:
    chan.tx_select()
    msg = chan.basic_get("msgq", no_ack=True)
    if msg is None:
      print 'all done'
      break
    else:
      print 'got message', msg.body
      nums.append(msg.body)

    dtag = msg.delivery_info['delivery_tag']
    chan.basic_ack(dtag)
    chan.tx_commit()

  print len(nums)

if __name__ == "__main__":
  main()

When the first program is run, it runs for a moment, and then exits
without any errors.  The second program is run, and it only gets a few
hundred messages.  The ids that it gets are always sequential numbers,
starting with 0.  It's as though the last couple of hundred messages
just never happened, although they were published.



From matthias at lshift.net  Fri Nov 21 08:03:28 2008
From: matthias at lshift.net (Matthias Radestock)
Date: Fri, 21 Nov 2008 08:03:28 +0000
Subject: [rabbitmq-discuss] until clients support Channel.Flow in
	1.5.0+...
In-Reply-To: <5964582F-D17F-4104-87FE-08BBF80605D7@lindenlab.com>
References: <07CAE072-3099-475F-A212-79306576EAFF@lindenlab.com>	<269388e30811201614r407d24e0xdc92324b1dfe2c79@mail.gmail.com>
	<5964582F-D17F-4104-87FE-08BBF80605D7@lindenlab.com>
Message-ID: <49266B50.7060404@lshift.net>

Brian,

Ben wrote:
> If the client ignores the server initiated command, then the server
> will just accept this until it dies.
> We could fix this, I suppose.

and then Brian Sullivan wrote:

> Is there any reason we *wouldn't* want that behavior?  I might be  
> coming from a paranoid place where I fear my ProducersOfDeath, but it  
> really seems like a better idea to protect the server from crashing in  
> these cases...
> 
> This fix is small enough to include in 1.5.0, I hope?

The main difficulty is figuring out that the client really is ignoring 
the request from the server, rather than just being a bit slow in 
dealing with it.

We do know a client is not respecting the request if it either 
explicitly rejects the channel.flow request or accepts it and then 
continues to send messages.

But when a client does not respond to channel.flow at all and just keeps 
sending messages then we simply have no idea whether that is because it 
is ignoring the server's request or because it just has not gotten round 
to dealing with it yet.

We could introduce some sort of timeout to handle this case. There may 
be other approaches too.

Implementation-wise that is all far more complex to deal with than what 
we currently have. So for 1.5.0 the channel.flow implementation will 
depend on compliant clients. All the clients we ship will be compliant. 
Furthermore, in our experience it is not very difficult to incorporate 
channel.flow handling in an existing client.


Regards,

Matthias.



From matthias at lshift.net  Fri Nov 21 08:18:08 2008
From: matthias at lshift.net (Matthias Radestock)
Date: Fri, 21 Nov 2008 08:18:08 +0000
Subject: [rabbitmq-discuss] py-amqplib status messages
In-Reply-To: <84fb38e30811201750l2d5dd947vb30a96c1afc8b72b@mail.gmail.com>
References: <84fb38e30811201750l2d5dd947vb30a96c1afc8b72b@mail.gmail.com>
Message-ID: <49266EC0.9000903@lshift.net>

Tsuraan,

tsuraan wrote:
> Code samples:
> message inserter, which is run first:
> 
> def main():
>   conn = A.Connection('localhost', userid='tsuraan', password='tsuraan')
>   chan = conn.channel()
> 
>   for i in range(1000):
>     m = A.Message(str(i), delivery_mode=2)
>     chan.basic_publish(m, 'rawmsg', 'standard', mandatory=True, immediate=False)
> 
> if __name__ == "__main__":
>   main()

The above program exits without closing the channel or connection 
properly first. As a result, any messages that are "in flight" will be lost.

> def main():
>   conn = A.Connection('localhost', userid='tsuraan', password='tsuraan')
>   chan = conn.channel()
> 
>   nums = []
>   while True:
>     chan.tx_select()
>     msg = chan.basic_get("msgq", no_ack=True)
>     if msg is None:
>       print 'all done'
>       break
>     else:
>       print 'got message', msg.body
>       nums.append(msg.body)
> 
>     dtag = msg.delivery_info['delivery_tag']
>     chan.basic_ack(dtag)
>     chan.tx_commit()
> 
>   print len(nums)
> 
> if __name__ == "__main__":
>   main()

Why are you using tx in the above? It won't do any harm, but it doesn't 
seem to serve any purpose.

As above, you should close the channel and connection properly before 
exiting.

> When the first program is run, it runs for a moment, and then exits
> without any errors.  The second program is run, and it only gets a few
> hundred messages.  The ids that it gets are always sequential numbers,
> starting with 0.  It's as though the last couple of hundred messages
> just never happened, although they were published.

That is most likely due to the lack of proper channel/connection closure 
in the producer code.


Matthias.



From alex.graul at bloomsburyqi.com  Fri Nov 21 09:57:35 2008
From: alex.graul at bloomsburyqi.com (Alex Graul)
Date: Fri, 21 Nov 2008 09:57:35 +0000
Subject: [rabbitmq-discuss] Maximum erlang processes & dead channels
In-Reply-To: <269388e30811201009v23487bf1xc6d277ca6eac8727@mail.gmail.com>
References: <57C4F5EB-B0AD-489F-887C-6922937D6CEC@bloomsburyqi.com>
	<269388e30811201009v23487bf1xc6d277ca6eac8727@mail.gmail.com>
Message-ID: <5413D01F-1FC5-4705-8A18-9067DA4BE973@bloomsburyqi.com>

Ben,
>
> What value did you set the max processes to?


Default. I could up it with the flag in that previous conversation but  
that feels like a band-aid, not a solution. Am I right in that in an  
unexpected client failure scenario the channel (and thus process) does  
remain open?
-alex




From matthias at lshift.net  Fri Nov 21 10:07:36 2008
From: matthias at lshift.net (Matthias Radestock)
Date: Fri, 21 Nov 2008 10:07:36 +0000
Subject: [rabbitmq-discuss] Maximum erlang processes & dead channels
In-Reply-To: <5413D01F-1FC5-4705-8A18-9067DA4BE973@bloomsburyqi.com>
References: <57C4F5EB-B0AD-489F-887C-6922937D6CEC@bloomsburyqi.com>	<269388e30811201009v23487bf1xc6d277ca6eac8727@mail.gmail.com>
	<5413D01F-1FC5-4705-8A18-9067DA4BE973@bloomsburyqi.com>
Message-ID: <49268868.30007@lshift.net>

Alex Graul wrote:
> Am I right in that in an  
> unexpected client failure scenario the channel (and thus process) does  
> remain open?

What exactly do you mean by "unexpected client failure"? When an AMQP 
connection is dropped then its server-side resources, including all 
associated channel processes, are purged.


Matthias.



From alex.graul at bloomsburyqi.com  Fri Nov 21 10:32:57 2008
From: alex.graul at bloomsburyqi.com (Alex Graul)
Date: Fri, 21 Nov 2008 10:32:57 +0000
Subject: [rabbitmq-discuss] Maximum erlang processes & dead channels
In-Reply-To: <49268868.30007@lshift.net>
References: <57C4F5EB-B0AD-489F-887C-6922937D6CEC@bloomsburyqi.com>	<269388e30811201009v23487bf1xc6d277ca6eac8727@mail.gmail.com>
	<5413D01F-1FC5-4705-8A18-9067DA4BE973@bloomsburyqi.com>
	<49268868.30007@lshift.net>
Message-ID: <7E6441B7-590C-4144-8527-62C81F211390@bloomsburyqi.com>

Matthias,

> What exactly do you mean by "unexpected client failure"? When an  
> AMQP connection is dropped then its server-side resources, including  
> all associated channel processes, are purged.
>
Ah, hm, that makes the source of the error I found a little more  
perplexing. I understand there aren't at the moment any robust  
mechanisms for monitoring open channels/queues are there?

-alex




From 0x6e6562 at gmail.com  Fri Nov 21 11:15:56 2008
From: 0x6e6562 at gmail.com (Ben Hood)
Date: Fri, 21 Nov 2008 11:15:56 +0000
Subject: [rabbitmq-discuss] Maximum erlang processes & dead channels
In-Reply-To: <5413D01F-1FC5-4705-8A18-9067DA4BE973@bloomsburyqi.com>
References: <57C4F5EB-B0AD-489F-887C-6922937D6CEC@bloomsburyqi.com>
	<269388e30811201009v23487bf1xc6d277ca6eac8727@mail.gmail.com>
	<5413D01F-1FC5-4705-8A18-9067DA4BE973@bloomsburyqi.com>
Message-ID: <269388e30811210315w7c591a8fn9d767f358d537ed6@mail.gmail.com>

Alex,

On Fri, Nov 21, 2008 at 9:57 AM, Alex Graul <alex.graul at bloomsburyqi.com> wrote:
> Default. I could up it with the flag in that previous conversation but that
> feels like a band-aid, not a solution.

I don't necessarily agree. The default of 32768 is just a number and
I'm not aware of it's actual significance. The effect that it has is
to put an upper bound on the amount of memory that the VM uses to
manage concurrent processes. For all we know, it may well have been
some arbitrary limit that the original Erlang interpreter had back in
the eighties. Maybe an Erlang historian can fill us in on this.

I think that this setting is analogous to way that you configure
memory management in an interpreted language. For example, in many
Java applications, if you don't give the interpreter more heap than
the default, you will run out of memory. The practice of configuring
the heap size is not frowned upon in Java circles, as, IMOH, upping
the maximum number of processes is not frowned upon in Erlang circles.

Moreover, Rabbit uses a process per queue, so if you want to use 10
Million queues, you'll have to allow Erlang to use 10 Million+
processes. I've tested Rabbit with 10 Million queues (and stopped
there because I got bored) and it was fine.

> Am I right in that in an unexpected
> client failure scenario the channel (and thus process) does remain open?

No. If a client goes AWOL, the server will reclaim all resources that
were directly attributed to it.

If I want to speculate, I can imagine a scenario whereby you are
declaring either non-exclusive or non-auto-delete queues, doing some
stuff with them and nuking the client without removing the queue.
Because your declaration semantics forbid the server from cleaning
stuff up, in this scenario you will be left with a process for each
queue that you created.

However, this is pure speculation. It would be more objective if you
could send us some code that illustrates the behaviour you are
experiencing.

HTH,

Ben



From 0x6e6562 at gmail.com  Fri Nov 21 12:13:48 2008
From: 0x6e6562 at gmail.com (Ben Hood)
Date: Fri, 21 Nov 2008 12:13:48 +0000
Subject: [rabbitmq-discuss] Maximum erlang processes & dead channels
In-Reply-To: <7E6441B7-590C-4144-8527-62C81F211390@bloomsburyqi.com>
References: <57C4F5EB-B0AD-489F-887C-6922937D6CEC@bloomsburyqi.com>
	<269388e30811201009v23487bf1xc6d277ca6eac8727@mail.gmail.com>
	<5413D01F-1FC5-4705-8A18-9067DA4BE973@bloomsburyqi.com>
	<49268868.30007@lshift.net>
	<7E6441B7-590C-4144-8527-62C81F211390@bloomsburyqi.com>
Message-ID: <269388e30811210413r204ec245i73af2da2c9893c0c@mail.gmail.com>

Alex,

On Fri, Nov 21, 2008 at 10:32 AM, Alex Graul
<alex.graul at bloomsburyqi.com> wrote:
> I understand there aren't at the moment any robust mechanisms for monitoring
> open channels/queues are there?

http://lettuce.squarespace.com/faq/management/are-there-any-mechanisms-for-monitoring-open-channels-or-que-1.html

Ben



From tsuraan at gmail.com  Fri Nov 21 15:27:06 2008
From: tsuraan at gmail.com (tsuraan)
Date: Fri, 21 Nov 2008 09:27:06 -0600
Subject: [rabbitmq-discuss] py-amqplib status messages
In-Reply-To: <49266EC0.9000903@lshift.net>
References: <84fb38e30811201750l2d5dd947vb30a96c1afc8b72b@mail.gmail.com>
	<49266EC0.9000903@lshift.net>
Message-ID: <84fb38e30811210727g766ae5bfx5523e3914d70878b@mail.gmail.com>

> Why are you using tx in the above? It won't do any harm, but it doesn't
> seem to serve any purpose.

It's a stripped-down version of a larger program that does use a
transaction in a less wasteful fashion.

> That is most likely due to the lack of proper channel/connection closure
> in the producer code.

Yup, putting in chan.close() and conn.close() gets all the messages
delivered.  Is there a way to ensure message delivery without using a
transaction or closing the channel?  Some sort of flush method, or
another flag on the basic_publish method that I didn't notice?  I've
noticed the wait() methods, but I'm not really clear on what they do,
or how to use them.



From 0x6e6562 at gmail.com  Fri Nov 21 16:34:12 2008
From: 0x6e6562 at gmail.com (Ben Hood)
Date: Fri, 21 Nov 2008 16:34:12 +0000
Subject: [rabbitmq-discuss] py-amqplib status messages
In-Reply-To: <84fb38e30811210727g766ae5bfx5523e3914d70878b@mail.gmail.com>
References: <84fb38e30811201750l2d5dd947vb30a96c1afc8b72b@mail.gmail.com>
	<49266EC0.9000903@lshift.net>
	<84fb38e30811210727g766ae5bfx5523e3914d70878b@mail.gmail.com>
Message-ID: <269388e30811210834o1f50e118n4474cf83ae95f9a0@mail.gmail.com>

Tsuraan,

On Fri, Nov 21, 2008 at 3:27 PM, tsuraan <tsuraan at gmail.com> wrote:
>> Why are you using tx in the above? It won't do any harm, but it doesn't
>> seem to serve any purpose.
>
> It's a stripped-down version of a larger program that does use a
> transaction in a less wasteful fashion.

That still doesn't explain why you're using it though. It is for
intents and purposes, a semantic NOOP.

> Yup, putting in chan.close() and conn.close() gets all the messages
> delivered.  Is there a way to ensure message delivery without using a
> transaction or closing the channel?  Some sort of flush method, or
> another flag on the basic_publish method that I didn't notice?  I've
> noticed the wait() methods, but I'm not really clear on what they do,
> or how to use them.

I'm slightly confused. You're now talking about about the sending side
but your code beforehand was an example of a consumer.

As an aside, on the sending side, you could use the immediate or
mandatory flags to get the broker to *indicate it's inability* to
deliver a message without you having to use a transaction, but I'm not
sure those are the semantics you want.

Ben



From Peter.Silva at ec.gc.ca  Fri Nov 21 16:46:53 2008
From: Peter.Silva at ec.gc.ca (Peter Silva)
Date: Fri, 21 Nov 2008 16:46:53 +0000
Subject: [rabbitmq-discuss] py-amqplib status messages
In-Reply-To: <269388e30811210834o1f50e118n4474cf83ae95f9a0@mail.gmail.com>
References: <84fb38e30811201750l2d5dd947vb30a96c1afc8b72b@mail.gmail.com>	<49266EC0.9000903@lshift.net>	<84fb38e30811210727g766ae5bfx5523e3914d70878b@mail.gmail.com>
	<269388e30811210834o1f50e118n4474cf83ae95f9a0@mail.gmail.com>
Message-ID: <4926E5FD.1040609@ec.gc.ca>

Ben Hood wrote:
> Tsuraan,
>
> On Fri, Nov 21, 2008 at 3:27 PM, tsuraan <tsuraan at gmail.com> wrote:
>   
>>> Why are you using tx in the above? It won't do any harm, but it doesn't
>>> seem to serve any purpose.
>>>       
>> It's a stripped-down version of a larger program that does use a
>> transaction in a less wasteful fashion.
>>     
>
> That still doesn't explain why you're using it though. It is for
> intents and purposes, a semantic NOOP.
>
>   
>> Yup, putting in chan.close() and conn.close() gets all the messages
>> delivered.  Is there a way to ensure message delivery without using a
>> transaction or closing the channel?  Some sort of flush method, or
>> another flag on the basic_publish method that I didn't notice?  I've
>> noticed the wait() methods, but I'm not really clear on what they do,
>> or how to use them.
>>     
>
> I'm slightly confused. You're now talking about about the sending side
> but your code beforehand was an example of a consumer.
>
> As an aside, on the sending side, you could use the immediate or
> mandatory flags to get the broker to *indicate it's inability* to
> deliver a message without you having to use a transaction, but I'm not
> sure those are the semantics you want.
>
> Ben
>   
my guess...

It sounds like he just wants to know at some point whether all messages
sent were actually received.    The acknowledgements go on at the
protocol level, well and good.   It isn?t clear how the client 
application will ?know?
that the messages sent were acknowledged.

is there a configuration where ?wait? will block until all pending 
messages are acknowledged ?



> _______________________________________________
> rabbitmq-discuss mailing list
> rabbitmq-discuss at lists.rabbitmq.com
> http://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss
>   

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20081121/2bcfa094/attachment.htm 

From tsuraan at gmail.com  Fri Nov 21 16:56:34 2008
From: tsuraan at gmail.com (tsuraan)
Date: Fri, 21 Nov 2008 10:56:34 -0600
Subject: [rabbitmq-discuss] py-amqplib status messages
In-Reply-To: <269388e30811210834o1f50e118n4474cf83ae95f9a0@mail.gmail.com>
References: <84fb38e30811201750l2d5dd947vb30a96c1afc8b72b@mail.gmail.com>
	<49266EC0.9000903@lshift.net>
	<84fb38e30811210727g766ae5bfx5523e3914d70878b@mail.gmail.com>
	<269388e30811210834o1f50e118n4474cf83ae95f9a0@mail.gmail.com>
Message-ID: <84fb38e30811210856g7e187e9br60390d91a8194d43@mail.gmail.com>

> That still doesn't explain why you're using it though. It is for
> intents and purposes, a semantic NOOP.

In the real program, the consumer pulls a message off that queue and
adds a bunch of messages to other queues, in a transaction.  I wasn't
getting all the messages I thought I was sending, and I didn't know
why, so I started ripping all the functionality out of both programs
until I had a minimal test case.  I guess it wasn't entirely minimal
because the test case does have that pointless transaction, but it was
small enough for me to post at that point.

> I'm slightly confused. You're now talking about about the sending side
> but your code beforehand was an example of a consumer.

Both the producer and consumer sources are in the original message.

> As an aside, on the sending side, you could use the immediate or
> mandatory flags to get the broker to *indicate it's inability* to
> deliver a message without you having to use a transaction, but I'm not
> sure those are the semantics you want.

I am using mandatory; immediate isn't desired in my case.  My original
question was actually along the lines of how does py-amqplib indicate
to the caller the broker's inability to deliver a message.  Perhaps it
does just raise an exception or something similar; I've apparently
never actually triggered that case.



From 0x6e6562 at gmail.com  Fri Nov 21 18:19:38 2008
From: 0x6e6562 at gmail.com (Ben Hood)
Date: Fri, 21 Nov 2008 18:19:38 +0000
Subject: [rabbitmq-discuss] py-amqplib status messages
In-Reply-To: <84fb38e30811210856g7e187e9br60390d91a8194d43@mail.gmail.com>
References: <84fb38e30811201750l2d5dd947vb30a96c1afc8b72b@mail.gmail.com>
	<49266EC0.9000903@lshift.net>
	<84fb38e30811210727g766ae5bfx5523e3914d70878b@mail.gmail.com>
	<269388e30811210834o1f50e118n4474cf83ae95f9a0@mail.gmail.com>
	<84fb38e30811210856g7e187e9br60390d91a8194d43@mail.gmail.com>
Message-ID: <269388e30811211019u2454bc75rf2ee2225d4ba25f@mail.gmail.com>

Tsuraan,

On Fri, Nov 21, 2008 at 4:56 PM, tsuraan <tsuraan at gmail.com> wrote:
> I am using mandatory; immediate isn't desired in my case.  My original
> question was actually along the lines of how does py-amqplib indicate
> to the caller the broker's inability to deliver a message.  Perhaps it
> does just raise an exception or something similar; I've apparently
> never actually triggered that case.

If you set the mandatory flag and the message cannot be routed, the
server will send the client a basic.return command. I'm not sure
whether a callback handler is exposed in the python library. Barry may
be able to help out with this.

Ben



From 0x6e6562 at gmail.com  Fri Nov 21 18:21:24 2008
From: 0x6e6562 at gmail.com (Ben Hood)
Date: Fri, 21 Nov 2008 18:21:24 +0000
Subject: [rabbitmq-discuss] py-amqplib status messages
In-Reply-To: <4926E5FD.1040609@ec.gc.ca>
References: <84fb38e30811201750l2d5dd947vb30a96c1afc8b72b@mail.gmail.com>
	<49266EC0.9000903@lshift.net>
	<84fb38e30811210727g766ae5bfx5523e3914d70878b@mail.gmail.com>
	<269388e30811210834o1f50e118n4474cf83ae95f9a0@mail.gmail.com>
	<4926E5FD.1040609@ec.gc.ca>
Message-ID: <269388e30811211021he71e83cr979c93297859051e@mail.gmail.com>

Peter,

On Fri, Nov 21, 2008 at 4:46 PM, Peter Silva <Peter.Silva at ec.gc.ca> wrote:
> is there a configuration where ?wait? will block until all pending messages
> are acknowledged ?

tx.commit will do this for you. Tsuraan was asking about how to detect
*failure* without a transaction though.

Ben



From bsullivan at lindenlab.com  Fri Nov 21 19:38:52 2008
From: bsullivan at lindenlab.com (Brian Sullivan)
Date: Fri, 21 Nov 2008 11:38:52 -0800
Subject: [rabbitmq-discuss] timing out during startup in etch
Message-ID: <3FF292DC-7235-42C3-BCCE-6796FB1EC134@lindenlab.com>

Hi,

We're having some trouble getting the server started on some new  
debian servers (etch) we're looking to migrate to.  We had no trouble  
running the broker on our prior boxes (running sarge).  Not sure if  
it's package related, but that's my suspicion - can anyone tell what  
we don't have installed correctly?  It looks like it's timing out on  
the database.

% sudo invoke-rc.d rabbitmq-server start
Starting rabbitmq-server: FAILED - check /var/log/rabbitmq/ 
startup.log, .err
invoke-rc.d: initscript rabbitmq-server, action "start" failed.

-------- from /var/log/rabbitmq/startup.log------

starting database             ...{"init terminating in do_boot", 
{{nocatch,{error,{cannot_start_application,rabbit, 
{{timeout_waiting_for_tables, 
[user,user_vhost,vhost,vhost_realm,realm,realm_exchange,realm_queue,user_realm,exclusive_realm_visitor,realm_visitor,rabbit_config,listener,binding,durable_exchanges,exchange,durable_queues,amqqueue]},{rabbit,start,[normal,[]]}}}}},[{init,start_it,1},{init,start_em,1}]}}

rabbit_multi action start_all failed:
{node_start_failed,normal}
[

------

Any ideas?

Thanks,
Brian

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20081121/d99db666/attachment.htm 

From matthias at lshift.net  Fri Nov 21 20:14:12 2008
From: matthias at lshift.net (Matthias Radestock)
Date: Fri, 21 Nov 2008 20:14:12 +0000
Subject: [rabbitmq-discuss] timing out during startup in etch
In-Reply-To: <3FF292DC-7235-42C3-BCCE-6796FB1EC134@lindenlab.com>
References: <3FF292DC-7235-42C3-BCCE-6796FB1EC134@lindenlab.com>
Message-ID: <49271694.5030401@lshift.net>

Brian,

Brian Sullivan wrote:
> We're having some trouble getting the server started on some new debian 
> servers (etch) we're looking to migrate to.   We had no trouble running
> the broker on our prior boxes (running sarge).

What version of Erlang/OTP are you running now (on etch), and previously 
(on sarge)?

> *timeout_waiting_for_tables*

Are you running in a clustered configuration? If so, rabbit might be 
waiting for the other nodes to come up.

Alternatively, perhaps your mnesia dir (/var/lib/rabbitmq/mnesia/rabbit) 
got into a a weird state. Try clearing it.


Matthias.



From sean at soundcloud.com  Fri Nov 21 21:30:22 2008
From: sean at soundcloud.com (Sean Treadway)
Date: Fri, 21 Nov 2008 22:30:22 +0100
Subject: [rabbitmq-discuss] Form Submission - Add A Question
In-Reply-To: <269388e30811201455g71b3794fqae2133fb86c57b91@mail.gmail.com>
References: <24034744.598691227004627209.JavaMail.root@web2>
	<269388e30811180255n118356e6l2e2dcc9860f51439@mail.gmail.com>
	<199B1EFC-9BFC-492A-BBFA-879D652ADC6A@soundcloud.com>
	<269388e30811201455g71b3794fqae2133fb86c57b91@mail.gmail.com>
Message-ID: <A5DDED21-0EF4-47CB-8E2F-4E51764569D7@soundcloud.com>

On Nov 20, 2008, at 23: 55, Ben Hood wrote:
> http://lettuce.squarespace.com/faq/receiving-messages/does-basicget-automatically-acknowledge-a-message.html
> http://lettuce.squarespace.com/faq/queues/what-is-queue-depth.html

Thanks for formulating these two into the FAQs.

>> Publish 1
>> Publish 2
>> Publish 3
>> Client B: sends Basic.Consume
>> Client B: receives Basic.Deliver 1
>> Client B: sends Bacic.Ack 1
>> Client A: checks depth
>>
>> I would assume that the queue depth should be 2, but what is  
>> returned is 0.
>> Without the Ack, I would still assume the queue depth to be 3.
>
> Everything is asynchronous here and it is not clear whether
>
> a) The the order of events over time from the broker's perspective
> actually matches the client's perception;

 From what I was testing, enough time was passing between each event  
that the order of events was reasonably predictable.

> b) The remaining 2 messages that you are supposedly missing are
> actually in mid-flight somewhere.

What qualifies as "mid-flight" and how/when does that happen?

> This will depend in part on how your client behaves, e.g. whether it
> absorbs socket back pressure or not.

I don't believe I can control any socket options with the library I'm  
using.

> Two questions:
>
> a) Which statistic are you referring to when you are reporting the  
> queue depth?
> b) What library are you using?

I'm using the result returned by Queue.Declare passive=1 from RabbitMQ  
1.4.0 using Aman's Ruby library from http://github.com/tmm1/amqp/commits/d2cbf1e48eacdd3a6708212ced4bc1a204d5ae21

The test case that I'm basing my observations on is zipped up with  
instructions in the README.  The tests require the EventMachine gem,  
and amqp 0.5.9 or source to be installed.

>> Another issue that I took much time to debug was failing to  
>> understand how
>> messages are delivered to clients, where I am assuming a fair  
>> distribution
>> to clients.  Example:
>>
>> Publish 1
>> Client A: Basic.Consume
>> Publish 2
>> Publish 3
>> Publsih 4
>> Client B: Basic.Consume
>> Publish 5
>> Publish 6
>>
>> The delivered order I would assume would be close to this:
>>
>> Client A: Deliver/Ack 1
>> Client B: Deliver/Ack 2
>> Client A: Deliver/Ack 3
>> Client B: Deliver/Ack 4
>> Client A: Deliver/Ack 5
>> Client B: Deliver/Ack 6
>>
>> But is actually:
>>
>> Client A: Deliver/Ack 1
>> Client B: Deliver/Ack 5
>> Client A: Deliver/Ack 2
>> Client A: Deliver/Ack 3
>> Client A: Deliver/Ack 4
>> Client A: Deliver/Ack 6
>
> Do client A and B have their own channel or do they share a channel?

A and B have different channels, they are running on separate processes.

>> Client B never sees 2,3 or 4.  In the use case of load balancing -  
>> we need
>> to start more clients when the queue depth grows, but this behavior  
>> prevents
>> the new clients to catch up on the previous messages.  Do you have  
>> any
>> suggestions for how to accomplish fair distribution to 'late comer'  
>> clients?
>> Is this even possible, or are there best practices that I'm  
>> missing?  Or
>> are there ways of configuring RabbitMQ to deliver messages like in  
>> the 1st
>> example?
>
> Yes, it's a command that is called basic.qos whereby you set a
> per-channel pre-fetch window and basically credit consumers
> proportionally to the number of acks they send back.
>
> It's currently in development ATM (branch 18577 refers).

Excellent to hear.

I'm sure that Basic.Get can be used, but in my rough tests, I couldn't  
get un-ack'd messages redelivered.  I believe I was failing to close  
my channel to get them redelivered.  I'll also take another look at  
Basic.Get with no_ack=true.

Thanks!

-Sean



-------------- next part --------------
A non-text attachment was scrubbed...
Name: queue_depth.tgz
Type: application/octet-stream
Size: 1663 bytes
Desc: not available
Url : http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20081121/9982af4d/attachment.obj 
-------------- next part --------------




From tsuraan at gmail.com  Fri Nov 21 22:09:36 2008
From: tsuraan at gmail.com (tsuraan)
Date: Fri, 21 Nov 2008 16:09:36 -0600
Subject: [rabbitmq-discuss] py-amqplib basic_consume
Message-ID: <84fb38e30811211409o32c5bc37u5327d23529b4d42@mail.gmail.com>

Ok, so now I'm trying to get basic_consume to work, and it's behaving
very strangely.  As before, I first run a producer that puts 1000
messages into a queue called toshred.  Once that has run, I run my new
consumer code, which just prints that it got something to consume.  It
doesn't acknowledge the message, it doesn't do anything the slightest
bit useful.  However, it does appear to devour messages like mad.
Every time I run this "consumer", it calls the consume method once,
but over 200 messages will be gone from the toshred queue (as
determined by a passive declaration of that queue).  If I run the
consumer first, and then put messages in the toshred queue, all but
five messages are enqueued, and the consumer exits after the first
call to consume.

Two questions: why are messages being removed from the queue?  It
doesn't seem like any messages are being acknowledged, so I wouldn't
expect any messages to be dequeued.  Also, what is the expected usage
for basic_consume?  Do you call it and channel.wait() in a loop, in
the same way that basic_get is used?

Consumer code:

import amqplib.client_0_8 as A

def consume(msg):
  print 'consuming', msg

def main():
  conn = A.Connection('localhost', userid='tsuraan', password='tsuraan')
  chan = conn.channel()

  chan.basic_consume('toshred', no_ack=True, callback=consume)
  print 'waiting'
  chan.wait()
  chan.close()
  conn.close()

if __name__ == "__main__":
  main()



From matthias at lshift.net  Fri Nov 21 22:53:37 2008
From: matthias at lshift.net (Matthias Radestock)
Date: Fri, 21 Nov 2008 22:53:37 +0000
Subject: [rabbitmq-discuss] py-amqplib basic_consume
In-Reply-To: <84fb38e30811211409o32c5bc37u5327d23529b4d42@mail.gmail.com>
References: <84fb38e30811211409o32c5bc37u5327d23529b4d42@mail.gmail.com>
Message-ID: <49273BF1.9050309@lshift.net>

Tsuraan,

tsuraan wrote:
> Ok, so now I'm trying to get basic_consume to work, and it's behaving
> very strangely.  As before, I first run a producer that puts 1000
> messages into a queue called toshred.  Once that has run, I run my new
> consumer code, which just prints that it got something to consume.  It
> doesn't acknowledge the message, it doesn't do anything the slightest
> bit useful.  However, it does appear to devour messages like mad.
> Every time I run this "consumer", it calls the consume method once,
> but over 200 messages will be gone from the toshred queue (as
> determined by a passive declaration of that queue).

The passive declaration of a queue tells you the number of messages 
present in the queue (and committed if the channel on which they were 
published is transacted) *that are not awaiting acknowledgement*.

When a client has subscribed to a queue with basic.consume, the queue 
will send it messages as fast as it can, until network back pressure 
kicks in.

So it is perfectly normal for there to be a discrepancy between the 
number of messages published vs the number of messages received + the 
message count returned by queue.declare-ok - the difference is accounted 
for by messages "in flight".

> Two questions: why are messages being removed from the queue?

They are not actually being removed until an ack is received, but they 
are unavailable for consumption by another consumer.

> It doesn't seem like any messages are being acknowledged, so I wouldn't
> expect any messages to be dequeued.

Actually, in your example you are using ...

>   chan.basic_consume('toshred', no_ack=True, callback=consume)

with the no_ack flag set to True. That causes messages to be 
automatically "self-acknowledged" by the server. In other words, as soon 
as the queue has sent them on their way they are removed from the queue 
and gone for good.


Matthias.



From matthias at lshift.net  Fri Nov 21 22:59:21 2008
From: matthias at lshift.net (Matthias Radestock)
Date: Fri, 21 Nov 2008 22:59:21 +0000
Subject: [rabbitmq-discuss] Form Submission - Add A Question
In-Reply-To: <A5DDED21-0EF4-47CB-8E2F-4E51764569D7@soundcloud.com>
References: <24034744.598691227004627209.JavaMail.root@web2>	<269388e30811180255n118356e6l2e2dcc9860f51439@mail.gmail.com>	<199B1EFC-9BFC-492A-BBFA-879D652ADC6A@soundcloud.com>	<269388e30811201455g71b3794fqae2133fb86c57b91@mail.gmail.com>
	<A5DDED21-0EF4-47CB-8E2F-4E51764569D7@soundcloud.com>
Message-ID: <49273D49.1000201@lshift.net>

Sean,

Sean Treadway wrote:
>>> Publish 1
>>> Publish 2
>>> Publish 3
>>> Client B: sends Basic.Consume
>>> Client B: receives Basic.Deliver 1
>>> Client B: sends Bacic.Ack 1
>>> Client A: checks depth
>>>
>>> I would assume that the queue depth should be 2, but what is returned 
>>> is 0.
>>> Without the Ack, I would still assume the queue depth to be 3.

See the answer I just gave tsuraan.


Matthias.



From tsuraan at gmail.com  Fri Nov 21 23:13:04 2008
From: tsuraan at gmail.com (tsuraan)
Date: Fri, 21 Nov 2008 17:13:04 -0600
Subject: [rabbitmq-discuss] py-amqplib basic_consume
In-Reply-To: <49273BF1.9050309@lshift.net>
References: <84fb38e30811211409o32c5bc37u5327d23529b4d42@mail.gmail.com>
	<49273BF1.9050309@lshift.net>
Message-ID: <84fb38e30811211513h526dafebp566b5ab4c6a1e2a@mail.gmail.com>

> Actually, in your example you are using ...
>
>>   chan.basic_consume('toshred', no_ack=True, callback=consume)
>
> with the no_ack flag set to True. That causes messages to be
> automatically "self-acknowledged" by the server. In other words, as soon
> as the queue has sent them on their way they are removed from the queue
> and gone for good.

Ah, there's my problem; I thought no_ack told the client not to
automatically-ack the messages.  Apparently it's a message to the
server that we don't need any acks.  That makes a bit more sense...

Does py-amqplib have the same limitation as the rabbitmq java
consumer, where it calling methods on the channel or connection from
the callback will cause deadlock?  If so, how are messages
acknowledged in basic_consume?



From bsullivan at lindenlab.com  Fri Nov 21 23:22:35 2008
From: bsullivan at lindenlab.com (Brian Sullivan)
Date: Fri, 21 Nov 2008 15:22:35 -0800
Subject: [rabbitmq-discuss] timing out during startup in etch
In-Reply-To: <49271694.5030401@lshift.net>
References: <3FF292DC-7235-42C3-BCCE-6796FB1EC134@lindenlab.com>
	<49271694.5030401@lshift.net>
Message-ID: <670A2698-F060-4E3D-B3E1-7C76C3F76CDD@lindenlab.com>


On Nov 21, 2008, at 12:14 PM, Matthias Radestock wrote:

> What version of Erlang/OTP are you running now (on etch), and  
> previously (on sarge)?

Same on both - here's what i get from init:script_id():
{"OTP  APN 181 01","R11B"}

> Are you running in a clustered configuration? If so, rabbit might be  
> waiting for the other nodes to come up.

No.  Just starting a standalone node.

> Alternatively, perhaps your mnesia dir (/var/lib/rabbitmq/mnesia/ 
> rabbit) got into a a weird state. Try clearing it.

Unlikely - I've had this happen on a number of machines, all clean  
installs from our image.

What would be my next steps for troubleshooting this?

Thanks!
Brian




From 0x6e6562 at gmail.com  Fri Nov 21 23:28:56 2008
From: 0x6e6562 at gmail.com (Ben Hood)
Date: Fri, 21 Nov 2008 23:28:56 +0000
Subject: [rabbitmq-discuss] timing out during startup in etch
In-Reply-To: <670A2698-F060-4E3D-B3E1-7C76C3F76CDD@lindenlab.com>
References: <3FF292DC-7235-42C3-BCCE-6796FB1EC134@lindenlab.com>
	<49271694.5030401@lshift.net>
	<670A2698-F060-4E3D-B3E1-7C76C3F76CDD@lindenlab.com>
Message-ID: <269388e30811211528x50a22c0fn4885c203fc6b01f1@mail.gmail.com>

Brian,

On Fri, Nov 21, 2008 at 11:22 PM, Brian Sullivan
<bsullivan at lindenlab.com> wrote:
>
> On Nov 21, 2008, at 12:14 PM, Matthias Radestock wrote:
>
>> What version of Erlang/OTP are you running now (on etch), and
>> previously (on sarge)?
>
> Same on both - here's what i get from init:script_id():
> {"OTP  APN 181 01","R11B"}

What version of Rabbit are you running?

Ben



From 0x6e6562 at gmail.com  Fri Nov 21 23:38:38 2008
From: 0x6e6562 at gmail.com (Ben Hood)
Date: Fri, 21 Nov 2008 23:38:38 +0000
Subject: [rabbitmq-discuss] py-amqplib basic_consume
In-Reply-To: <84fb38e30811211513h526dafebp566b5ab4c6a1e2a@mail.gmail.com>
References: <84fb38e30811211409o32c5bc37u5327d23529b4d42@mail.gmail.com>
	<49273BF1.9050309@lshift.net>
	<84fb38e30811211513h526dafebp566b5ab4c6a1e2a@mail.gmail.com>
Message-ID: <269388e30811211538r2c41aed0tc38d7b5f0cd737c0@mail.gmail.com>

Tsuraan,

On Fri, Nov 21, 2008 at 11:13 PM, tsuraan <tsuraan at gmail.com> wrote:
> Does py-amqplib have the same limitation as the rabbitmq java
> consumer, where it calling methods on the channel or connection from
> the callback will cause deadlock?

I wouldn't necessarily call this a limitation of the Java client per
se, just an observation of the surrounding mechanics in reference to
the protocol. This is the kind of thing I discussed in the
multithreading article.

> If so, how are messages
> acknowledged in basic_consume?

http://lettuce.squarespace.com/faq/receiving-messages/how-are-messages-acknowledged-when-using-basicconsume.html

Ben



From 0x6e6562 at gmail.com  Fri Nov 21 23:54:30 2008
From: 0x6e6562 at gmail.com (Ben Hood)
Date: Fri, 21 Nov 2008 23:54:30 +0000
Subject: [rabbitmq-discuss] Form Submission - Add A Question
In-Reply-To: <A5DDED21-0EF4-47CB-8E2F-4E51764569D7@soundcloud.com>
References: <24034744.598691227004627209.JavaMail.root@web2>
	<269388e30811180255n118356e6l2e2dcc9860f51439@mail.gmail.com>
	<199B1EFC-9BFC-492A-BBFA-879D652ADC6A@soundcloud.com>
	<269388e30811201455g71b3794fqae2133fb86c57b91@mail.gmail.com>
	<A5DDED21-0EF4-47CB-8E2F-4E51764569D7@soundcloud.com>
Message-ID: <269388e30811211554u283a5da6s88e300b9009666bb@mail.gmail.com>

Sean,

On Fri, Nov 21, 2008 at 9:30 PM, Sean Treadway <sean at soundcloud.com> wrote:

> What qualifies as "mid-flight" and how/when does that happen?

http://lettuce.squarespace.com/faq/flow-control/what-is-a-message-in-mid-flight.html

>> This will depend in part on how your client behaves, e.g. whether it
>> absorbs socket back pressure or not.
>
> I don't believe I can control any socket options with the library I'm using.

Exactly my point. If you don't what your client is doing under the
covers, you are not in a good position to reason with the behavior of
the broker :-(

>> b) What library are you using?
>
> I'm using the result returned by Queue.Declare passive=1 from RabbitMQ 1.4.0
> using Aman's Ruby library from

Matthias has already answered this question.

> http://github.com/tmm1/amqp/commits/d2cbf1e48eacdd3a6708212ced4bc1a204d5ae21

That old chestnut :-)

> The test case that I'm basing my observations on is zipped up with
> instructions in the README.  The tests require the EventMachine gem, and
> amqp 0.5.9 or source to be installed.

OK, I'll try to have a look at this.

>> Do client A and B have their own channel or do they share a channel?
>
> A and B have different channels, they are running on separate processes.

OK

> Excellent to hear.
>
> I'm sure that Basic.Get can be used, but in my rough tests, I couldn't get
> un-ack'd messages redelivered.  I believe I was failing to close my channel
> to get them redelivered.  I'll also take another look at Basic.Get with
> no_ack=true.

http://lettuce.squarespace.com/faq/flow-control/how-long-does-it-take-to-redeliver-an-un-acknowledged-messag.html

Ben



From matthias at lshift.net  Sat Nov 22 00:19:51 2008
From: matthias at lshift.net (Matthias Radestock)
Date: Sat, 22 Nov 2008 00:19:51 +0000
Subject: [rabbitmq-discuss] timing out during startup in etch
In-Reply-To: <670A2698-F060-4E3D-B3E1-7C76C3F76CDD@lindenlab.com>
References: <3FF292DC-7235-42C3-BCCE-6796FB1EC134@lindenlab.com>	<49271694.5030401@lshift.net>
	<670A2698-F060-4E3D-B3E1-7C76C3F76CDD@lindenlab.com>
Message-ID: <49275027.80906@lshift.net>

Brian,

Brian Sullivan wrote:
> 
> On Nov 21, 2008, at 12:14 PM, Matthias Radestock wrote:
> 
>> What version of Erlang/OTP are you running now (on etch), and 
>> previously (on sarge)?
> 
> Same on both - here's what i get from init:script_id():
> {"OTP  APN 181 01","R11B"}

What version does the Erlang shell report when started?

>> Alternatively, perhaps your mnesia dir 
>> (/var/lib/rabbitmq/mnesia/rabbit) got into a a weird state. Try 
>> clearing it.
> 
> Unlikely - I've had this happen on a number of machines, all clean 
> installs from our image.

And that image has not had any previous rabbit installation?

> What would be my next steps for troubleshooting this?

I'd definitely try clearing the mnesia dir.


Matthias.



From bsullivan at lindenlab.com  Sat Nov 22 00:45:21 2008
From: bsullivan at lindenlab.com (Brian Sullivan)
Date: Fri, 21 Nov 2008 16:45:21 -0800
Subject: [rabbitmq-discuss] timing out during startup in etch
In-Reply-To: <269388e30811211528x50a22c0fn4885c203fc6b01f1@mail.gmail.com>
References: <3FF292DC-7235-42C3-BCCE-6796FB1EC134@lindenlab.com>
	<49271694.5030401@lshift.net>
	<670A2698-F060-4E3D-B3E1-7C76C3F76CDD@lindenlab.com>
	<269388e30811211528x50a22c0fn4885c203fc6b01f1@mail.gmail.com>
Message-ID: <0D2BEBFF-4952-48EA-BCA9-08FBC9EDCBE4@lindenlab.com>

1.4.0

On Nov 21, 2008, at 3:28 PM, Ben Hood wrote:

> Brian,
>
> On Fri, Nov 21, 2008 at 11:22 PM, Brian Sullivan
> <bsullivan at lindenlab.com> wrote:
>>
>> On Nov 21, 2008, at 12:14 PM, Matthias Radestock wrote:
>>
>>> What version of Erlang/OTP are you running now (on etch), and
>>> previously (on sarge)?
>>
>> Same on both - here's what i get from init:script_id():
>> {"OTP  APN 181 01","R11B"}
>
> What version of Rabbit are you running?
>
> Ben




From bsullivan at lindenlab.com  Sat Nov 22 00:50:13 2008
From: bsullivan at lindenlab.com (Brian Sullivan)
Date: Fri, 21 Nov 2008 16:50:13 -0800
Subject: [rabbitmq-discuss] timing out during startup in etch
In-Reply-To: <49275027.80906@lshift.net>
References: <3FF292DC-7235-42C3-BCCE-6796FB1EC134@lindenlab.com>	<49271694.5030401@lshift.net>
	<670A2698-F060-4E3D-B3E1-7C76C3F76CDD@lindenlab.com>
	<49275027.80906@lshift.net>
Message-ID: <224FD28D-179C-4862-8784-538445FB5D23@lindenlab.com>


On Nov 21, 2008, at 4:19 PM, Matthias Radestock wrote:

>> What would be my next steps for troubleshooting this?
>
> I'd definitely try clearing the mnesia dir.
>

Persistence [on your part] pays!  Yes, the dates on the mnesia dir  
were really old - turns out that is in our image for some reason.   
Redirecting to live in a better place on this host.

Thanks so much.  I had reached a dead end on this.  :)

Have a great weekend, you guys.

Brian




From bp at barryp.org  Sat Nov 22 17:14:23 2008
From: bp at barryp.org (Barry Pederson)
Date: Sat, 22 Nov 2008 11:14:23 -0600
Subject: [rabbitmq-discuss] py-amqplib status messages
In-Reply-To: <84fb38e30811201750l2d5dd947vb30a96c1afc8b72b@mail.gmail.com>
References: <84fb38e30811201750l2d5dd947vb30a96c1afc8b72b@mail.gmail.com>
Message-ID: <49283DEF.60005@barryp.org>

Wow, I see there's a whole big thread about the py-amqplib, I'll to 
combine my comments into this one message...

----------------

tsuraan wrote:
> How does py-amqplib return results to the user?  For example,
> basic_publish has a mandatory flag, which says that if the server
> cannot route a message, it gives an unroutable message back.  How does
> the user of py-amqplib get this message?  It seems like every method
> returns None all the time with the exception of basic_get, so how can
> I get server responses?

Frankly, py-amqplib doesn't deal with those return messages.  The 
difficulty lies in the asynchronous nature of basic_publish - the broker 
*may* return a message or you may never hear anything about it, so you 
can't really count on a response as to whether your message was 
delivered or not.

It's really the same problem as implementing flow-control, being able to 
handle messages you're not explicitly waiting for.

----------------

tsuraan wrote:
 > Matthias Radestock wrote:
 >> That is most likely due to the lack of proper channel/connection closure
 >> in the producer code.
 >
 > Yup, putting in chan.close() and conn.close() gets all the messages
 > delivered.  Is there a way to ensure message delivery without using a
 > transaction or closing the channel?  Some sort of flush method, or
 > another flag on the basic_publish method that I didn't notice?  I've
 > noticed the wait() methods, but I'm not really clear on what they do,
 > or how to use them.

The client doesn't do any buffering of outgoing messages, and py-amqplib 
does make flush() calls to the outgoing stream, so I'd think messages 
should be fully transmitted by the time basic_publish returns.

wait() is generally used to wait for basic_deliver messages from the 
broker, or internally for synchronous replies to certain methods like 
basic_get.  It's not suited for waiting for messages that may never 
arrive (like basic_return) because it doesn't support any kind of timeout.

----------------

Ben Hood wrote:
 > If you set the mandatory flag and the message cannot be routed, the
 > server will send the client a basic.return command. I'm not sure
 > whether a callback handler is exposed in the python library. Barry may
 > be able to help out with this.

Ben is right about a handler not being exposed.  But even if there were 
a handler, something would need to wait for those messages (which may 
never come) and dispatch to the handler.  I think py-amqplib would have 
to expand to make use of threading to handle those features.

-----------------

tsuraan wrote:

> Also, what is the expected usage
> for basic_consume?  Do you call it and channel.wait() in a loop, in
> the same way that basic_get is used?

The demo/demo_receive.py sample shows how basic_consume and wait are 
used.  You'd generally call basic_consume one time to tell the broker to 
start sending messages.  wait() processes a single message, so you'd 
want to call that repeatedly in a loop.


------------------


tsuraan wrote:

 > Does py-amqplib have the same limitation as the rabbitmq java
 > consumer, where it calling methods on the channel or connection from
 > the callback will cause deadlock?  If so, how are messages
 > acknowledged in basic_consume?

Using version 0.5 or higher of py-amqplib, you should be able to call 
methods from a callback without worrying about deadlock.  So you can 
explicitly acknowledge messages in a callback, which is shown in 
demo/demo_receive.py

	Barry



From 0x6e6562 at gmail.com  Sun Nov 23 18:08:29 2008
From: 0x6e6562 at gmail.com (Ben Hood)
Date: Sun, 23 Nov 2008 18:08:29 +0000
Subject: [rabbitmq-discuss] [lord@codeminders.com: problems running
	rabbitmq on macos]
In-Reply-To: <20081123162640.GB27019@silentbob.lshift.net>
References: <20081123162640.GB27019@silentbob.lshift.net>
Message-ID: <269388e30811231008v4b95c3ao795ebde518658f1c@mail.gmail.com>

Vadim,

I'm answering this question via the Rabbit discussion list.

On Sun, Nov 23, 2008 at 4:26 PM, Ben Hood <ben at lshift.net> wrote:
> I am trying to run rabbitmq under MacOS. I have installed it using
> macports port.
> The server starts:
>
> mbenzi /Users/lord# /opt/local/sbin/rabbitmq-server start
.....

> However rabbitmqctl fails:
>
> mbenzi /opt/local/var/log/rabbitmq# /opt/local/sbin/rabbitmqctl status
> Status of node rabbit at mbenzi ...
> {badrpc,nodedown}
> done.

I'm not an expert at the macports version of Rabbit, but I think this
may be due to fact that the rabbitmq-server command and the
rabbitmqctl commands we executed by different users.

AFAICT the installed version of rabbitmqctl does an su to the rabbitmq user.

At a wild guess, I would say that /etc/default/rabbitmq may start the
server as the rabbitmq user, but I'm not a lawyer.

We're going to get clarification from the author of the port, so I'll
get back to you on this.

In the meantime, I can suggest three things (in descending order of ease):

1. Run the server as su rabbitmq;
2. Have a look at another way to install Rabbit on OSX here:
http://playtype.net/past/2008/10/9/installing_rabbitmq_on_osx/
3. Yet a another way to get Rabbit going on OSX:
http://hopper.squarespace.com/blog/2008/11/15/how-i-install-rabbitmq-on-osx.html

> 70736   ??  S      0:00.02 /opt/local/lib/erlang/erts-5.6.5/bin/epmd -

You're using R12B-5 - can I assume that this was installed by macports for you?

BTW, be aware the macports version of Rabbit is quite old - 1.4.0 is
the current release and there will soon be a new release.

HTH,

Ben



From 0x6e6562 at gmail.com  Sun Nov 23 18:12:22 2008
From: 0x6e6562 at gmail.com (Ben Hood)
Date: Sun, 23 Nov 2008 18:12:22 +0000
Subject: [rabbitmq-discuss] [woodhull@gmail.com: Trouble Installing
	RabbitMQ]
In-Reply-To: <20081123162625.GA27019@silentbob.lshift.net>
References: <20081123162625.GA27019@silentbob.lshift.net>
Message-ID: <269388e30811231012j4d197bb4i83f700694eb1cb2a@mail.gmail.com>

Nathan,

I'm answering this via the Rabbit discussion list:

> ----- Forwarded message from Nathan Woodhull <woodhull at gmail.com> -----
> I'm trying to install rabbitmq for the first time, and am having some
> trouble. I'm running mac os x 10.5.5.  I'm new to both erlang &
> rabbitmq, so help would be greatly appreciated.
>
> when I try and startup the app I get this output:
>
> NathanLaptop-2:rabbitmq-server-1.4.0 nathan$ ./scripts/rabbitmq-server
> RabbitMQ 1.4.0 (AMQP 8-0)
> Copyright (C) 2007-2008 LShift Ltd., Cohesive Financial Technologies
> LLC., and Rabbit Technologies Ltd.
> Licensed under the MPL.  See http://www.rabbitmq.com/
>
> Logging to "/var/log/rabbitmq/rabbit.log"
> SASL logging to "/var/log/rabbitmq/rabbit-sasl.log"
>
> starting database             ...done
> starting core processes       ...done
> starting recovery             ...{"init terminating in
> do_boot",{{nocatch,{error,{cannot_start_application,rabbit,{{bad_type,realm_exchange,{realm_resource,'_',<<10
> bytes>>}},{rabbit,start,[normal,[]]}}}}},[{init,start_it,1},{init,start_em,1}]}}
>
> Crash dump was written to: erl_crash.dump
> init terminating in do_boot ()

There is a general FAQ about this here:
http://lettuce.squarespace.com/faq/troubleshooting/why-does-rabbit-complain-about-realm_exchange-being-a-bad_ty.html

What version of Erlang are you running?

Ben



From 0x6e6562 at gmail.com  Sun Nov 23 18:26:29 2008
From: 0x6e6562 at gmail.com (Ben Hood)
Date: Sun, 23 Nov 2008 18:26:29 +0000
Subject: [rabbitmq-discuss] [lord@codeminders.com: problems running
	rabbitmq on macos]
In-Reply-To: <12F3CD87-610F-4B41-A32C-8E4C98F7F45D@codeminders.com>
References: <20081123162640.GB27019@silentbob.lshift.net>
	<269388e30811231008v4b95c3ao795ebde518658f1c@mail.gmail.com>
	<12F3CD87-610F-4B41-A32C-8E4C98F7F45D@codeminders.com>
Message-ID: <269388e30811231026i1fb34116g229346539015330e@mail.gmail.com>

Vadim,

On Sun, Nov 23, 2008 at 6:18 PM, Vadim Zaliva <lord at codeminders.com> wrote:
>> I'm not an expert at the macports version of Rabbit, but I think this
>> may be due to fact that the rabbitmq-server command and the
>> rabbitmqctl commands we executed by different users.
>
> I was running rabbitmq-server as 'root'.
> However 'rabbitmqctl' script have 'su rabbitmq' inside it.
>
> Indeed, that was the problem. Running serve as root solved my problem.
>
> I was surprised by that, since it was starting OK and listening to the
> socket
> without reporting any errors to log.
>
> Anyway, the problem fixed.

Good to know.

>> We're going to get clarification from the author of the port, so I'll
>> get back to you on this.
>
> I guess port should be modifed to run server as this user.

Yes, we'll look into this.

Ben



From andresr83 at gmail.com  Mon Nov 24 03:54:15 2008
From: andresr83 at gmail.com (Andres Rodriguez)
Date: Sun, 23 Nov 2008 22:54:15 -0500
Subject: [rabbitmq-discuss] Strange behavior found under Mac OS X
Message-ID: <19728F05-A125-46A9-9D16-F39DC8F2A903@gmail.com>

Hi, I found something pretty interesting when trying to run any kind  
of AMQP client under Max OS X. I tried with java, python and ruby  
clients and none of them were working.

Suspecting it could be my Rabbitmq or Erlang installs I tried  
different setups:

* Erlang from source and macports
* Rabbitmq from source, tarball and macports

Same result with any combination.

With the help of tmm1 (AMQP client ruby gem creator) we discovered  
that in line 67 of rabbitmq-server:

     -os_mon start_cpu_sup true \

Changing start_cpu_sup to false:

     -os_mon start_cpu_sup false \

made everything to work.

Now my Rabbitmq broker is running pretty nice.

Since I'm a newbie in these Erlang topics I wanted to share this info  
and would like to know if someone expert at this subject could  
identify an incompatibility in my machine's hardware since I already  
found out that this cpu_sup thing is related to the processor (http://www.erlang.org/doc/man/cpu_sup.html 
).

FWIW, I have a white macbook with a 2.4GHz Core 2 Duo (T8300).

Thanks a lot!

Andres.



From andresr83 at gmail.com  Mon Nov 24 03:57:08 2008
From: andresr83 at gmail.com (Andres Rodriguez)
Date: Sun, 23 Nov 2008 22:57:08 -0500
Subject: [rabbitmq-discuss] Strange behavior found under Mac OS X
In-Reply-To: <19728F05-A125-46A9-9D16-F39DC8F2A903@gmail.com>
References: <19728F05-A125-46A9-9D16-F39DC8F2A903@gmail.com>
Message-ID: <F764B8B0-28DA-4766-9760-F000785BB073@gmail.com>

Additional info, Rabbitmq logs:

=CRASH REPORT==== 19-Nov-2008::17:31:58 ===
   crasher:
     pid: <0.217.0>
     registered_name: []
     exception error: bad argument in an arithmetic expression
       in function  rabbit_load:pick/0
       in call from rabbit_reader:compute_redirects/1
       in call from rabbit_reader:handle_method0/2
       in call from rabbit_reader:handle_method0/3
       in call from rabbit_reader:handle_input/3
       in call from rabbit_reader:mainloop/3
       in call from rabbit_reader:start_connection/3
     initial call: rabbit_reader:init(<0.185.0>)
     ancestors: [rabbit_tcp_client_sup,rabbit_sup,<0.81.0>]
     messages: []
     links: [#Port<0.277>,<0.185.0>]
     dictionary: []
     trap_exit: true
     status: running
     heap_size: 987
     stack_size: 23
     reductions: 706
   neighbours:

=SUPERVISOR REPORT==== 19-Nov-2008::17:31:58 ===
      Supervisor: {local,rabbit_tcp_client_sup}
      Context:    child_terminated
      Reason:     badarith
      Offender:   [{pid,<0.217.0>},
                   {name,tcp_client},
                   {mfa,{rabbit_reader,start_link,[]}},
                   {restart_type,temporary},
                   {shutdown,brutal_kill},
                   {child_type,worker}]


=INFO REPORT==== 19-Nov-2008::17:28:01 ===
accepted TCP connection on 0.0.0.0:5672 from 127.0.0.1:56603

=INFO REPORT==== 19-Nov-2008::17:28:01 ===
starting TCP connection <0.212.0> from 127.0.0.1:56603

=ERROR REPORT==== 19-Nov-2008::17:28:01 ===
Error in process <0.195.0> on node 'rabbit at andres-rodriguezs-macbook'  
with exit value: {{badmatch,{error,{fread,float}}}, 
[{cpu_sup,get_uint32_measurement,2},{cpu_sup,measurement_server_loop, 
1}]}


=INFO REPORT==== 19-Nov-2008::17:28:06 ===
closing TCP connection <0.212.0> from 127.0.0.1:56603



On Nov 23, 2008, at 10:54 PM, Andres Rodriguez wrote:

> Hi, I found something pretty interesting when trying to run any kind  
> of AMQP client under Max OS X. I tried with java, python and ruby  
> clients and none of them were working.
>
> Suspecting it could be my Rabbitmq or Erlang installs I tried  
> different setups:
>
> * Erlang from source and macports
> * Rabbitmq from source, tarball and macports
>
> Same result with any combination.
>
> With the help of tmm1 (AMQP client ruby gem creator) we discovered  
> that in line 67 of rabbitmq-server:
>
>    -os_mon start_cpu_sup true \
>
> Changing start_cpu_sup to false:
>
>    -os_mon start_cpu_sup false \
>
> made everything to work.
>
> Now my Rabbitmq broker is running pretty nice.
>
> Since I'm a newbie in these Erlang topics I wanted to share this  
> info and would like to know if someone expert at this subject could  
> identify an incompatibility in my machine's hardware since I already  
> found out that this cpu_sup thing is related to the processor (http://www.erlang.org/doc/man/cpu_sup.html 
> ).
>
> FWIW, I have a white macbook with a 2.4GHz Core 2 Duo (T8300).
>
> Thanks a lot!
>
> Andres.




From 0x6e6562 at gmail.com  Mon Nov 24 06:39:31 2008
From: 0x6e6562 at gmail.com (Ben Hood)
Date: Mon, 24 Nov 2008 06:39:31 +0000
Subject: [rabbitmq-discuss] Strange behavior found under Mac OS X
In-Reply-To: <F764B8B0-28DA-4766-9760-F000785BB073@gmail.com>
References: <19728F05-A125-46A9-9D16-F39DC8F2A903@gmail.com>
	<F764B8B0-28DA-4766-9760-F000785BB073@gmail.com>
Message-ID: <269388e30811232239u33a43abblf4a22a1e986c86d1@mail.gmail.com>

Andres,

On Mon, Nov 24, 2008 at 3:57 AM, Andres Rodriguez <andresr83 at gmail.com> wrote:
> =ERROR REPORT==== 19-Nov-2008::17:28:01 ===
> Error in process <0.195.0> on node 'rabbit at andres-rodriguezs-macbook'
> with exit value: {{badmatch,{error,{fread,float}}},
> [{cpu_sup,get_uint32_measurement,2},{cpu_sup,measurement_server_loop,
> 1}]}

What locale are you using?

This looks like the same error I reported to the Erlang list a while
back: http://www.erlang.org/pipermail/erlang-questions/2008-May/034794.html

The upshot of the discussion is that Ericsson decided that it probably
wasn't worth fixing.

HTH,

Ben



From 0x6e6562 at gmail.com  Mon Nov 24 06:51:43 2008
From: 0x6e6562 at gmail.com (Ben Hood)
Date: Mon, 24 Nov 2008 06:51:43 +0000
Subject: [rabbitmq-discuss] Strange behavior found under Mac OS X
In-Reply-To: <269388e30811232239u33a43abblf4a22a1e986c86d1@mail.gmail.com>
References: <19728F05-A125-46A9-9D16-F39DC8F2A903@gmail.com>
	<F764B8B0-28DA-4766-9760-F000785BB073@gmail.com>
	<269388e30811232239u33a43abblf4a22a1e986c86d1@mail.gmail.com>
Message-ID: <269388e30811232251t6b94b169lac95d4c10dd0955c@mail.gmail.com>

Andres,

On Mon, Nov 24, 2008 at 6:39 AM, Ben Hood <0x6e6562 at gmail.com> wrote:
> On Mon, Nov 24, 2008 at 3:57 AM, Andres Rodriguez <andresr83 at gmail.com> wrote:
>> =ERROR REPORT==== 19-Nov-2008::17:28:01 ===
>> Error in process <0.195.0> on node 'rabbit at andres-rodriguezs-macbook'
>> with exit value: {{badmatch,{error,{fread,float}}},
>> [{cpu_sup,get_uint32_measurement,2},{cpu_sup,measurement_server_loop,
>> 1}]}
> The upshot of the discussion is that Ericsson decided that it probably
> wasn't worth fixing.

Since this is not the first time this has been reported, I've turned
this into a FAQ:
http://lettuce.squarespace.com/faq/troubleshooting/why-does-rabbit-fail-to-run-and-complain-about-get_uint32_me.html

Ben



From sean at soundcloud.com  Mon Nov 24 13:09:04 2008
From: sean at soundcloud.com (Sean Treadway)
Date: Mon, 24 Nov 2008 14:09:04 +0100
Subject: [rabbitmq-discuss] Form Submission - Add A Question
In-Reply-To: <269388e30811211554u283a5da6s88e300b9009666bb@mail.gmail.com>
References: <24034744.598691227004627209.JavaMail.root@web2>
	<269388e30811180255n118356e6l2e2dcc9860f51439@mail.gmail.com>
	<199B1EFC-9BFC-492A-BBFA-879D652ADC6A@soundcloud.com>
	<269388e30811201455g71b3794fqae2133fb86c57b91@mail.gmail.com>
	<A5DDED21-0EF4-47CB-8E2F-4E51764569D7@soundcloud.com>
	<269388e30811211554u283a5da6s88e300b9009666bb@mail.gmail.com>
Message-ID: <05C51FE5-19DE-46BC-9D05-432CA78CCD2F@soundcloud.com>

Ben,

On Nov 22, 2008, at 00: 54, Ben Hood wrote:
>> I don't believe I can control any socket options with the library  
>> I'm using.
>
> Exactly my point. If you don't what your client is doing under the
> covers, you are not in a good position to reason with the behavior of
> the broker :-(

If I could control the consumer's channel's socket to minimize the  
number of mid-flight messages, what socket options should I set?

>> The test case that I'm basing my observations on is zipped up with
>> instructions in the README.  The tests require the EventMachine  
>> gem, and
>> amqp 0.5.9 or source to be installed.
>
> OK, I'll try to have a look at this.

Matthias answered the question that this test case covered, so there's  
no need to check the code here.

I understand better how the socket, channel and consumer behave in  
terms of what I'm thinking of as a "client".  Quite a bit more  
involved than a simple FIFO buffer ;)

I had assumed that since these mid-flight, un-acked messages would  
still exist in the broker, ready to be retried or persisted if they  
were published with delivery-mode=2, they should should be counted  
towards the 'message count'.  I assumed that only when the persistence  
rules would remove the message from the queue the message count would  
also decrement.

This makes it clearer: http://lettuce.squarespace.com/faq/queues/when-declaring-a-queue-what-does-the-message-count-field-mea.html 
   But on a practical level, I think it's important to remind  
explicitly that mid-flight messages for a consumer with no_ack=false  
are not included in this count.  And the maximum number of messages  
sent to a consumer is determined by the basic.qos branch which is  
currently pending QA, so at the moment, it's only limited by the  
number of bytes buffered by the transport layer.

On small scale testing (0-10 messages like I was using) it wasn't  
obvious that the message count was 0 because the 10 published, un- 
acked messages lived in my consumer's socket buffer.  Whereas for  
larger tests, where the number of mid-flight messages are a smaller  
proportion of the total messages, this statistic becomes more obvious  
(and useful).

One our use cases, parallelizing long running jobs, emphasizes  
reliability and accountability over throughput, so we would like to  
measure all unacknowledged messages in a queue or limit the number of  
messages consumed to one at a time.  Our goal is to keep the queue  
depth around 0-20 un-ack'd messages by controlling the number  
consumers..

It looks like branch 19684 (rabbitmqctl list_queues messages_ready)  
gives us the statistic we can use to tune our consumer pools.  Are  
there any plans of also exposing the 'messages_ready' statistic over  
AMQP?

Or would branch 18577 (basic.qos) with pre-fetch set to 1 give us the  
count of un-acknowledged messages we're looking for from a passive  
queue.declare?

>> I'm sure that Basic.Get can be used, but in my rough tests, I  
>> couldn't get
>> un-ack'd messages redelivered.  I believe I was failing to close my  
>> channel
>> to get them redelivered.  I'll also take another look at Basic.Get  
>> with
>> no_ack=true.
>
> http://lettuce.squarespace.com/faq/flow-control/how-long-does-it-take-to-redeliver-an-un-acknowledged-messag.html

:) A question about this answer... When you say "this can be done  
_manually_ with basic.get", does this imply that the redelivered  
message will be prioritized to the channel that issued the basic.get  
over a channel with a consumer?

Thanks,
Sean



From alexis.richardson at cohesiveft.com  Mon Nov 24 15:51:39 2008
From: alexis.richardson at cohesiveft.com (Alexis Richardson)
Date: Mon, 24 Nov 2008 15:51:39 +0000
Subject: [rabbitmq-discuss] AMQP 0-9-1 released
In-Reply-To: <167204d20811200315y5509aac7k3be80eb12384b9ea@mail.gmail.com>
References: <167204d20811200315y5509aac7k3be80eb12384b9ea@mail.gmail.com>
Message-ID: <167204d20811240751q299766a1kf69748c77d3412cd@mail.gmail.com>

Hi,

The 0-9-1 spec docs are now available, here:
http://jira.amqp.org/confluence/display/AMQP/Download

alexis


On Thu, Nov 20, 2008 at 11:15 AM, Alexis Richardson
<alexis.richardson at cohesiveft.com> wrote:
> Hi,
>
> The RabbitMQ team is very pleased to announce that the AMQP 0-9-1
> specification was approved by the AMQP Working Group in a vote
> yesterday.
>
> The need for AMQP 0-9-1 arose from the AMQP community and AMQP
> customers.  The community wants interoperability - indeed this is a
> major goal of AMQP.  People frequently try to download a broker from
> one implementor, and use it with a client from another implementor.
> Even when both sets of code implement the same specification, this has
> not always worked 'out of the box'.
>
> Frequently asked questions have included "how to I do I .."
>
> * get OpenAMQ's C client working with RabbitMQ,
> * or get RabbitMQ's Java client to work with OpenAMQ
> * use QPid's M2.1 JMS-style Java client with RabbitMQ
>
> This has all been possible and people have done it, but in each case
> it has been a few hours of coding to get it working, without the
> assurance you want from a fully QAd or regression-tested and certified
> package.
>
> So I think we all want interop to work out of the box and many people
> have said they expect this too.  Interop would also remove cost from
> "business to business" integration projects.
>
> AMQP 0-9-1 was created to meet that need.  It is a simplified 'interop
> release' that starts from the 0-9 specification and then fixes interop
> bugs and removes a lot of unused material.  For reasons of backwards
> compatibility with certain existing deployments, the 0-9-1 spec will
> work with 0-9 wire frames.  This means that the community can expect
> to get what it demands: a set of brokers and clients that work
> together.
>
> The work to achieve this clean up was a collective effort and
> represents 18 months of 'lessons learnt in production' by all the
> major AMQP implementations in the 0-8/0-9 family.  Documents should
> appear on http://www.amqp.org imminently.  Thank-you to all those
> involved on behalf of the RabbitMQ team.
>
> I should also explain what AMQP 0-9-1 is *not*.  It does not
> interoperate with AMQP 0-10.  AMQP 0-10 introduces technology for
> transactional 'once and only once' delivery within the protocol.
> Similar features are planned for AMQP 1.0 which is currently under
> development by the Working Group.  So please see 0-9-1 as a
> stabilisation of earlier spec work, based on hard experience in
> production with the 0-8 and 0-9 protocols.  Current and future
> protocol work concerns the step up to the 1.0 business requirements as
> published on http://www.amqp.org.
>
> What does this mean for RabbitMQ users?
>
> Interop is good news for RabbitMQ because we think messaging should
> 'just work'.  RabbitMQ will implement AMQP 0-9-1 on the 1.x tree.
> AMQP 0-9-1 is absurdly similar to 0-8 and 0-9, which is one reason we
> found the 'interop delta' so frustrating.
>
> For RabbitMQ users this means a migration path not much more complex
> than (say) moving from RabbitMQ 1.3 to 1.4.  Existing deployments will
> continue to work but some methods - eg. access tickets - are now
> formally deprecated.  For implementors of clients, the cost of
> upgrading to 0-9-1 should not be more than a day's coding in most
> cases.  RabbitMQ will provide updated client codegen tools when an
> 0-9-1 broker is released.
>
> In terms of timing and details of the RabbitMQ 1.x broker roadmap, I
> refer you to the development team.  For discussions on this as well as
> packaging dependencies, and client release plans, we strongly urge the
> community to come forward with comments, questions and offers of
> assistance.
>
> We hope the RabbitMQ community places a high value on 0-9-1 interop -
> as high as we do as providers of the product.  I cannot speak here for
> the other implementations but we have good reason to believe that
> their respective communities will value 0-9-1 interop equally highly.
> But if you see gaps - please jump in and help with some code or
> requirements.  Or - even better - provide some test harnesses.  And if
> you see any errata then you can also list them here.
>
> What about 2009?
>
> With interest growing in AMQP around the community, and the Working
> Group being joined by Microsoft, we think AMQP is in good shape for
> the future.
>
> Members of the RabbitMQ community who wish to contribute to the
> development of the protocol as we move towards 1.0, should not be shy
> of speaking up on this list.  We aim to track this spec and invite
> implementation ideas for RabbitMQ 2.0.  We don't want to rush things -
> RabbitMQ's existing implementations set a high bar.  Stability at
> scale, and ease of use, are of the utmost importance.
>
> So - finally - I think this is a very good time to say a big thank-you
> to everyone who has made RabbitMQ successful so far.   Thank-you!
>
> Best wishes,
>
> alexis
>



From dmitriy.samovskiy at cohesiveft.com  Mon Nov 24 16:54:45 2008
From: dmitriy.samovskiy at cohesiveft.com (Dmitriy Samovskiy)
Date: Mon, 24 Nov 2008 10:54:45 -0600
Subject: [rabbitmq-discuss] py-amqplib status messages
In-Reply-To: <49266EC0.9000903@lshift.net>
References: <84fb38e30811201750l2d5dd947vb30a96c1afc8b72b@mail.gmail.com>
	<49266EC0.9000903@lshift.net>
Message-ID: <492ADC55.5030802@cohesiveft.com>


Hi Matthias,

Matthias Radestock wrote:
>>
>> def main():
>>   conn = A.Connection('localhost', userid='tsuraan', password='tsuraan')
>>   chan = conn.channel()
>>
>>   for i in range(1000):
>>     m = A.Message(str(i), delivery_mode=2)
>>     chan.basic_publish(m, 'rawmsg', 'standard', mandatory=True, immediate=False)
>>
>> if __name__ == "__main__":
>>   main()
> 
> The above program exits without closing the channel or connection 
> properly first. As a result, any messages that are "in flight" will be lost.
> 

How do you define "messages in flight" in this scenario?

I played with this code and tcpdump, and discovered that there could be a single TCP 
packet (ack'ed by broker's network stack) with multiple basic.publish methods inside, and 
some of those methods were processed by rabbit, and some were not. Furthermore, there 
could be more TCP packets after this one that also were TCP-ack'ed but were not processed 
by broker.

In rabbit_reader.erl, in mainloop function, I see this:

{inet_async, Sock, Ref, {error, closed}} ->
    if State#v1.connection_state =:= closed ->
       State;
    true ->
       throw(connection_closed_abruptly)
    end;


Maybe before raising an exception, broker could look in its incoming buffer and see if 
there is more data there? It can maybe disregard all methods that require a response 
(because a TCP connection is no longer established at this point), but if it finds 
basic.publish or other methods that do not require response - maybe it could process them?

Is it a fair assumption that if a TCP packet was ack'ed, it means its contents reached the 
broker and would be processed eventually?


- Dmitriy



From matthias at lshift.net  Mon Nov 24 18:09:17 2008
From: matthias at lshift.net (Matthias Radestock)
Date: Mon, 24 Nov 2008 18:09:17 +0000
Subject: [rabbitmq-discuss] py-amqplib status messages
In-Reply-To: <492ADC55.5030802@cohesiveft.com>
References: <84fb38e30811201750l2d5dd947vb30a96c1afc8b72b@mail.gmail.com>	<49266EC0.9000903@lshift.net>
	<492ADC55.5030802@cohesiveft.com>
Message-ID: <492AEDCD.2030103@lshift.net>

Dmitriy,

Dmitriy Samovskiy wrote:
> Is it a fair assumption that if a TCP packet was ack'ed, it means its 
> contents reached the broker and would be processed eventually?

All kinds of stuff can go wrong after the TCP packet has been ack'ed. 
The broker may die before it even gets a chance to look at the data. Or 
some process involved in the handling of the message may die.

Also note that so-called asynchronous commands like basic.publish can 
still fail and solicit an error response, for example when the specified 
exchange does not exist.

So unless the sender has received some application level ack - such as a 
channel/connection.close-ok, or a tx.commit-ok - there is no way for it 
to be sure that the messages it has sent have been
processed.


Matthias.



From 0x6e6562 at gmail.com  Mon Nov 24 19:45:04 2008
From: 0x6e6562 at gmail.com (Ben Hood)
Date: Mon, 24 Nov 2008 19:45:04 +0000
Subject: [rabbitmq-discuss] Form Submission - Add A Question
In-Reply-To: <05C51FE5-19DE-46BC-9D05-432CA78CCD2F@soundcloud.com>
References: <24034744.598691227004627209.JavaMail.root@web2>
	<269388e30811180255n118356e6l2e2dcc9860f51439@mail.gmail.com>
	<199B1EFC-9BFC-492A-BBFA-879D652ADC6A@soundcloud.com>
	<269388e30811201455g71b3794fqae2133fb86c57b91@mail.gmail.com>
	<A5DDED21-0EF4-47CB-8E2F-4E51764569D7@soundcloud.com>
	<269388e30811211554u283a5da6s88e300b9009666bb@mail.gmail.com>
	<05C51FE5-19DE-46BC-9D05-432CA78CCD2F@soundcloud.com>
Message-ID: <269388e30811241145v27bfdbf6v49a88b73333f372b@mail.gmail.com>

Sean,

On Mon, Nov 24, 2008 at 1:09 PM, Sean Treadway <sean at soundcloud.com> wrote:
> Ben,
>
> On Nov 22, 2008, at 00: 54, Ben Hood wrote:
> If I could control the consumer's channel's socket to minimize the number of
> mid-flight messages, what socket options should I set?

I think you've understood me out of context - this is what I originally said:

>> This will depend in part on how your client behaves, e.g. whether it
>> absorbs socket back pressure or not.

What I meant by absorbing back pressure would be an example where the
consuming client pulls every message from the socket and buffers it
internally. This would negate the effect of back pressure and just
exercise memory pressure on the client application to compensate for
this. This would an example where you would be throwing away the flow
control provided by TCP (under the assumption that you are using TCP
as a transport).

> This makes it clearer:
> http://lettuce.squarespace.com/faq/queues/when-declaring-a-queue-what-does-the-message-count-field-mea.html
> But on a practical level, I think it's important to remind explicitly that
> mid-flight messages for a consumer with no_ack=false are not included in
> this count.

Sorry, I don't quite follow this. Can you explain?

> One our use cases, parallelizing long running jobs, emphasizes reliability
> and accountability over throughput, so we would like to measure all
> unacknowledged messages in a queue or limit the number of messages consumed
> to one at a time.  Our goal is to keep the queue depth around 0-20 un-ack'd
> messages by controlling the number consumers..

This sounds more like an application of basic.qos because you would to
distribute messages based on the various consumers' ability to process
units of work. By setting the prefetch window, you get more fine
grained consumer flow control.

> It looks like branch 19684 (rabbitmqctl list_queues messages_ready) gives us
> the statistic we can use to tune our consumer pools.  Are there any plans of
> also exposing the 'messages_ready' statistic over AMQP?

Hmmm, difficult question. Some of the Redhat guys have been talking
about putting more managementy stuff into the protocol, but I don't
know what the current situation.

And coincidentally we have talking about using the codegen to add some
propriety methods to Rabbit, but this is just talk.

There were further discussions about SNMP as well.

I think for now now backing an embedded RPC handler using JSON as a
codec will pay even money. This would be quite simple to knock up with
the Erlang client for example.

> Or would branch 18577 (basic.qos) with pre-fetch set to 1 give us the count
> of un-acknowledged messages we're looking for from a passive queue.declare?

I'm not sure I understand - if you set the prefetch size to be one,
only one outstanding message per channel is allowed - I don't think
this answers your question though.

>> http://lettuce.squarespace.com/faq/flow-control/how-long-does-it-take-to-redeliver-an-un-acknowledged-messag.html
>
> :) A question about this answer... When you say "this can be done _manually_
> with basic.get", does this imply that the redelivered message will be
> prioritized to the channel that issued the basic.get over a channel with a
> consumer?

No, this just a way to quickly grab that one message that wasn't
acked. It would make no difference if you were to start another
consumer for the same queue on a different channel - this is 6 of one
and half a dozen of the other.

HTH,

Ben



From 0x6e6562 at gmail.com  Mon Nov 24 20:13:37 2008
From: 0x6e6562 at gmail.com (Ben Hood)
Date: Mon, 24 Nov 2008 20:13:37 +0000
Subject: [rabbitmq-discuss] Strange behavior found under Mac OS X
In-Reply-To: <8bbb93d50811240634w3bbd46c1k21e3157e28573298@mail.gmail.com>
References: <19728F05-A125-46A9-9D16-F39DC8F2A903@gmail.com>
	<F764B8B0-28DA-4766-9760-F000785BB073@gmail.com>
	<269388e30811232239u33a43abblf4a22a1e986c86d1@mail.gmail.com>
	<269388e30811232251t6b94b169lac95d4c10dd0955c@mail.gmail.com>
	<8bbb93d50811240633x24b273aet492b351a89c02c88@mail.gmail.com>
	<8bbb93d50811240634w3bbd46c1k21e3157e28573298@mail.gmail.com>
Message-ID: <269388e30811241213r551f62a7l56a28258bba28ed0@mail.gmail.com>

Andres,

On Mon, Nov 24, 2008 at 2:34 PM, Andres Rodriguez <andresr83 at gmail.com> wrote:
> chafla: ~/ $ uptime
>   9:33am  up   0:22,  2 users,  load average: 0.74, 0.80, 0.59
>
> As you see, I'm not getting commas. Could there be another reason?

I don't know. But your symptom does look suspiciously like a previous
problem with commas -  according to your stack trace, the root cause
is a problem with fread trying to parse a float.

And BTW, this is the output of my uptime:

$ uptime
20:10  up 23:07, 4 users, load averages: 0.24 0.28 0.30

note the absence of commas :-(

This is on OS X 10.5.5

> On Mon, Nov 24, 2008 at 9:33 AM, Andres Rodriguez <andresr83 at gmail.com>
> wrote:
>>
>> chafla: ~/ $ locale
>> LANG=
>> LC_COLLATE="C"
>> LC_CTYPE="UTF-8"
>> LC_MESSAGES="C"
>> LC_MONETARY="C"
>> LC_NUMERIC="C"
>> LC_TIME="C"
>> LC_ALL=

This is my locale:

$ locale
LANG="en_GB.UTF-8"
LC_COLLATE="en_GB.UTF-8"
LC_CTYPE="en_GB.UTF-8"
LC_MESSAGES="en_GB.UTF-8"
LC_MONETARY="en_GB.UTF-8"
LC_NUMERIC="en_GB.UTF-8"
LC_TIME="en_GB.UTF-8"
LC_ALL=

Sorry I wasn't able to help.

Ben



From 0x6e6562 at gmail.com  Mon Nov 24 20:20:00 2008
From: 0x6e6562 at gmail.com (Ben Hood)
Date: Mon, 24 Nov 2008 20:20:00 +0000
Subject: [rabbitmq-discuss] py-amqplib status messages
In-Reply-To: <492ADC55.5030802@cohesiveft.com>
References: <84fb38e30811201750l2d5dd947vb30a96c1afc8b72b@mail.gmail.com>
	<49266EC0.9000903@lshift.net> <492ADC55.5030802@cohesiveft.com>
Message-ID: <269388e30811241220p2fb5e188o1150e7c903373e59@mail.gmail.com>

Dmitriy,

On Mon, Nov 24, 2008 at 4:54 PM, Dmitriy Samovskiy
<dmitriy.samovskiy at cohesiveft.com> wrote:
> How do you define "messages in flight" in this scenario?

On a related note, there is an FAQ on this:

http://lettuce.squarespace.com/faq/flow-control/what-is-a-message-in-mid-flight.html

Ben



From nathan at mcommons.com  Tue Nov 25 01:11:05 2008
From: nathan at mcommons.com (Nathan Woodhull)
Date: Mon, 24 Nov 2008 20:11:05 -0500
Subject: [rabbitmq-discuss] Consumer Throttling
Message-ID: <99cca2da0811241711q57be4afdh59c6d9cb354a0abb@mail.gmail.com>

In our application we have a third party service that we are only
allowed to make requests to 10 times/per second. If we exceed the
10msgs/second throttle, we are charged a fine for breaking the
contractual agreement.

Our application generates requests in large spurts, so we would like
to use a queue to throttle the outgoing messages to the external
service to comply with the SLA. Is there a good way to do this through
RabbitMQ configuration? Doing this in the producer or consumer itself
does not seem like it is likely to work since they are both
distributed. Basically, we want to implement this pattern:

http://activemq.apache.org/camel/throttler.html

-Nathan



From subdragon at gmail.com  Tue Nov 25 08:25:07 2008
From: subdragon at gmail.com (Yin Chen)
Date: Tue, 25 Nov 2008 16:25:07 +0800
Subject: [rabbitmq-discuss] about rabbitmq best practice
Message-ID: <d1306e840811250025h31609339m1456abec7147902e@mail.gmail.com>

Hi:
  I want to ask a question about the rabbitmq best practice. I just want an
end to end message queue that assure all the message delivered would be
handled by an consumer. I think I should declare an exchange on the consumer
end with auto_delete off and durable on, bind the exchange with a queue with
durable on and auto_delete off. On the publisher end I declare exchange with
passive on( prevent exchange name typo). But the question is that if
consumer is down, the message delivered by the publisher during the down
time can not be fetched by the consumer. And I found in this situation, even
with the basic publish function's mandatory and immediate both on, the java
client would keep silent and the python(amqplib) client would throw a
exception until the channel close. Does the server receive the message and
how should I consume the message after the consumer has restarted?
  Any comment or suggustion is welcome! Thanks!

-- 
Yin Chen
http://www.douban.com/people/subdragon/
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20081125/a0c0cb04/attachment.htm 

From majek04 at gmail.com  Tue Nov 25 11:25:34 2008
From: majek04 at gmail.com (majek04)
Date: Tue, 25 Nov 2008 11:25:34 +0000
Subject: [rabbitmq-discuss] nonblocking py-amqplib issues
Message-ID: <3bb0d9710811250325q2ed1e770yc1cb7a53ea84ca11@mail.gmail.com>

I tried to use amqplib.nbclient_0_8, but I had some problems with it.
I attached the code [1].

1. More than one message in the queue:
console #1:
$ ./rec_2.py  (this is the attached code)
<I pressed ctrl+z to suspend the program>
[1]+  Stopped                 ./rec_2.py

console #2:
$ ./demo_send.py 1 (standard amqplib demo program)
$ ./demo_send.py 2

back to console #1:
$ fg (to resume the program)
Traceback (most recent call last):
  File "./rec_2.py", line 31, in <module>
    amqp.nbloop([ch])
  File "build/bdist.linux-i686/egg/amqplib/nbclient_0_8.py", line 176, in nbloop
  File "build/bdist.linux-i686/egg/amqplib/client_0_8.py", line 203, in wait
  File "build/bdist.linux-i686/egg/amqplib/client_0_8.py", line 117,
in _dispatch
  File "build/bdist.linux-i686/egg/amqplib/client_0_8.py", line 2854,
in _basic_deliver
  File "./rec_2.py", line 7, in callback
    msg.channel.basic_ack(msg.delivery_tag)
  File "build/bdist.linux-i686/egg/amqplib/client_0_8.py", line 2609,
in basic_ack
  File "build/bdist.linux-i686/egg/amqplib/client_0_8.py", line 127,
in _send_method_frame
  File "build/bdist.linux-i686/egg/amqplib/client_0_8.py", line 384,
in _send_channel_method_frame
  File "build/bdist.linux-i686/egg/amqplib/nbclient_0_8.py", line 74, in write
<P?' read_buf='&<!amq.ctag-rdYQarPUansf8+2dGsnFAQ==?6<<!amq.ctag-rdYQarPUansf8+2dGsnFAQ==myfan2<?
text/plainfooIbarSbaz?1?6<<!amq.ctag-rdYQarPUansf8+2dGsnFAQ==myfan2<?
text/plainfooIbarSbaz?2?' read_p='175'

2. Order of the messages is wrong.
I just changed the callback function and disabled basic_ack:

def callback(msg):
    m.append( msg.body )
    #### msg.channel.basic_ack(msg.delivery_tag) # disable ack

Console #1:
$ ./rec2_py

Console #2:
$ ./demo_send.py 1
$ ./demo_send.py 2
$ ./demo_send.py 3
$ ./demo_send.py 4

Back to console #1:
['1', '1']
['2', '1', '2']
['3', '1', '2', '3']
['4', '1', '2', '3', '4']


3. no_ack option for basic_consume is not working.
With disabled basic_ack, and added no_ack to basic_consume:
    ch.consumer_tag = ch.basic_consume(qname, callback=callback, no_ack=True)
I get exactly the same results as before.



I hope there is something that can be done to address this issues.

Cheers!
 Marek Majkowski


[1] The code of rec_2.py:
http://www.lshift.net/~majek/rec_2.py
I paste it also here:

import amqplib.nbclient_0_8 as amqp

m = []
def callback(msg):
    m.append( msg.body )
    msg.channel.basic_ack(msg.delivery_tag)

class NoActivityException(Exception):pass

def my_nb_callback(ch): raise NoActivityException

if __name__ == '__main__':
    conn = amqp.NonBlockingConnection('localhost',
         userid='guest', password='guest',
         nb_callback=my_nb_callback, insist=True, nb_sleep=0.0)

    ch = conn.channel()
    ch.access_request('/data', active=True, read=True)

    ch.exchange_declare('myfan', 'fanout', auto_delete=True)
    qname, _, _ = ch.queue_declare()
    ch.queue_bind(qname, 'myfan')
    ch.consumer_tag = ch.basic_consume(qname, callback=callback)

    while True:
        conn.sock.sock.setblocking(1)
        conn.sock.sock.recv(0)
        conn.sock.sock.setblocking(0)
        try:
            amqp.nbloop([ch])
        except NoActivityException, e:
            pass
        print "%r" % (m,)
        while m: m.pop()

From 0x6e6562 at gmail.com  Tue Nov 25 14:51:36 2008
From: 0x6e6562 at gmail.com (Ben Hood)
Date: Tue, 25 Nov 2008 14:51:36 +0000
Subject: [rabbitmq-discuss] Consumer Throttling
In-Reply-To: <99cca2da0811241711q57be4afdh59c6d9cb354a0abb@mail.gmail.com>
References: <99cca2da0811241711q57be4afdh59c6d9cb354a0abb@mail.gmail.com>
Message-ID: <269388e30811250651m1e529968m45346e0d6af4d526@mail.gmail.com>

Nathan,

On Tue, Nov 25, 2008 at 1:11 AM, Nathan Woodhull <nathan at mcommons.com> wrote:
> In our application we have a third party service that we are only
> allowed to make requests to 10 times/per second. If we exceed the
> 10msgs/second throttle, we are charged a fine for breaking the
> contractual agreement.
>
> Our application generates requests in large spurts, so we would like
> to use a queue to throttle the outgoing messages to the external
> service to comply with the SLA. Is there a good way to do this through
> RabbitMQ configuration? Doing this in the producer or consumer itself
> does not seem like it is likely to work since they are both
> distributed. Basically, we want to implement this pattern:
>
> http://activemq.apache.org/camel/throttler.html

Off the top of my head I can't see how you can do this without
creating a custom queue implementation that implements this sliding
window check before delivering to a consumer.

Whilst this would probably be doable, it wouldn't be available in
Rabbit OOTB, i.e. you would have to try it with a patched version.

HTH,

Ben



From alexis.richardson at cohesiveft.com  Tue Nov 25 15:24:55 2008
From: alexis.richardson at cohesiveft.com (Alexis Richardson)
Date: Tue, 25 Nov 2008 15:24:55 +0000
Subject: [rabbitmq-discuss] rabbitmq and couchdb?
Message-ID: <167204d20811250724l7c7417cemb2cc2210c558a34@mail.gmail.com>

Folks, FYI

This is a new project on github..

http://github.com/deguzman/couchdb-solr2/tree/master

"CouchDB-Solr2 provides a distributed architecture for full-text
indexing and searching with CouchDB. Update notifications from CouchDB
are sent to an AMQP exchange. An intermediary server then listens on
that exchange for incoming AMQP messages and directly alerts Solr of
the changes."

I confess to always being super excited when I see this sort of thing
due to the potential for combining different erlang based products
into applications.

alexis



From 0x6e6562 at gmail.com  Tue Nov 25 15:49:24 2008
From: 0x6e6562 at gmail.com (Ben Hood)
Date: Tue, 25 Nov 2008 15:49:24 +0000
Subject: [rabbitmq-discuss] about rabbitmq best practice
In-Reply-To: <d1306e840811250025h31609339m1456abec7147902e@mail.gmail.com>
References: <d1306e840811250025h31609339m1456abec7147902e@mail.gmail.com>
Message-ID: <269388e30811250749i2dfec1c3ud22c6f612fb905ee@mail.gmail.com>

Yin Chen,

On Tue, Nov 25, 2008 at 8:25 AM, Yin Chen <subdragon at gmail.com> wrote:

> But the question is that if
> consumer is down, the message delivered by the publisher during the down
> time can not be fetched by the consumer.

http://lettuce.squarespace.com/faq/sending-messages/what-happens-to-messages-that-are-published-after-a-consumer.html

> And I found in this situation, even
> with the basic publish function's mandatory and immediate both on, the java
> client would keep silent and the python(amqplib) client would throw a
> exception until the channel close. Does the server receive the message and
> how should I consume the message after the consumer has restarted?

http://lettuce.squarespace.com/faq/sending-messages/if-i-set-the-mandatory-flag-how-do-i-know-when-a-message-cou.html

HTH,

Ben



From dmitriy.samovskiy at cohesiveft.com  Tue Nov 25 16:20:14 2008
From: dmitriy.samovskiy at cohesiveft.com (Dmitriy Samovskiy)
Date: Tue, 25 Nov 2008 10:20:14 -0600
Subject: [rabbitmq-discuss] nonblocking py-amqplib issues
In-Reply-To: <3bb0d9710811250325q2ed1e770yc1cb7a53ea84ca11@mail.gmail.com>
References: <3bb0d9710811250325q2ed1e770yc1cb7a53ea84ca11@mail.gmail.com>
Message-ID: <492C25BE.3050401@cohesiveft.com>

Hi Marek,

majek04 wrote:
> console #1:
> $ ./rec_2.py  (this is the attached code)
> <I pressed ctrl+z to suspend the program>
> [1]+  Stopped                 ./rec_2.py
> 
> console #2:
> $ ./demo_send.py 1 (standard amqplib demo program)
> $ ./demo_send.py 2
> 
> back to console #1:
> $ fg (to resume the program)
> Traceback (most recent call last):
>   File "./rec_2.py", line 31, in <module>
>     amqp.nbloop([ch])
>   File "build/bdist.linux-i686/egg/amqplib/nbclient_0_8.py", line 176, in nbloop
>   File "build/bdist.linux-i686/egg/amqplib/nbclient_0_8.py", line 74, in write
> <P?' read_buf='&<!amq.ctag-rdYQarPUansf8+2dGsnFAQ==?6<<!amq.ctag-rdYQarPUansf8+2dGsnFAQ==myfan2<?
> text/plainfooIbarSbaz?1?6<<!amq.ctag-rdYQarPUansf8+2dGsnFAQ==myfan2<?
> text/plainfooIbarSbaz?2?' read_p='175'
I was not able to reproduce this problem with python2.5 on debian etch, but I will revisit 
code to see what may be causing it.

> 
> 2. Order of the messages is wrong.
> I just changed the callback function and disabled basic_ack:
> ['4', '1', '2', '3', '4']
I was able to reproduce this problem, and will look into it. It's not only the order but 
also looks like client calls callback() more than once for some messages, which would be 
wrong.


> 
> 
> 3. no_ack option for basic_consume is not working.
> With disabled basic_ack, and added no_ack to basic_consume:
>     ch.consumer_tag = ch.basic_consume(qname, callback=callback, no_ack=True)
> I get exactly the same results as before.
May I ask what was the expected outcome? With no_ack=False, if your consumer doesn't ack 
and disconnects, unack'ed messages will be requeued for another consumer. With 
no_ack=True, broker automatically marks all messages it sends to your consumer as ack'ed.

http://lettuce.squarespace.com/faq/receiving-messages/how-are-messages-acknowledged-when-using-basicconsume.html
http://lettuce.squarespace.com/faq/receiving-messages/when-does-a-message-get-removed-from-a-queue.html

In other words, I think you won't see any difference in output from your script whether 
you use no_ack=True or no_ack=False, because they affect requeueing *after* your script 
disconnects.


I will see if I can find time to look into the issues above in the near future, but can't 
offer any guarantees.


Cheers,
Dmitriy




From dmitriy.samovskiy at cohesiveft.com  Tue Nov 25 17:08:32 2008
From: dmitriy.samovskiy at cohesiveft.com (Dmitriy Samovskiy)
Date: Tue, 25 Nov 2008 11:08:32 -0600
Subject: [rabbitmq-discuss] py-amqplib status messages
In-Reply-To: <492AEDCD.2030103@lshift.net>
References: <84fb38e30811201750l2d5dd947vb30a96c1afc8b72b@mail.gmail.com>	<49266EC0.9000903@lshift.net>
	<492ADC55.5030802@cohesiveft.com> <492AEDCD.2030103@lshift.net>
Message-ID: <492C3110.6030605@cohesiveft.com>



Matthias Radestock wrote:
> 
> So unless the sender has received some application level ack - such as a 
> channel/connection.close-ok, or a tx.commit-ok - there is no way for it 
> to be sure that the messages it has sent have been
> processed.
> 
Understood. So if I don't receive an application level ack, I can't know how many messages 
  that I already sent, have been received by broker. Consider:

for i in range(1000): ch.basic_publish(Message(str(i)), 'amq.fanout')
and I get socket.error exception when i==500.

This means that I either have to do buffering inside producer in order to be able to 
resend them all, or I have to wrap each basic.publish in tx.

In latter case, it's a total of 5 methods (tx.select, tx.select-ok, basic.publish, 
tx.commit, tx.commit-ok). *If* AMQP spec offered a synchronous publish, it would be only 2 
methods (basic.publish-with-confirmation, basic.publish-ok).

I take it there must be a reason why only async version of publish method is provided in 
AMQP spec? Is anyone familiar with reasoning behind this decision?


On a side note, I found that if I sleep after each send in the above loop, I get 
consistently higher success rates of received vs not received messages with py-amqplib on 
Linux (essentially no message loss due to being in flight).

for i in range(1000):
   ch.basic_publish(Message(str(i)), 'amq.fanout')
   time.sleep(0.0001)

Without sleeps, tcpdump shows multiple basic.publish methods packed in a single TCP 
packet. With sleeps, there are more TCP packets that carry the same number of 
basic.publish methods. Note that this may not be the case for other client implementations 
and could be OS dependent as well (not tested).

This may not be a good pattern to rely on, but in limited testing it worked for me.


- Dmitriy



From majek04 at gmail.com  Tue Nov 25 17:23:26 2008
From: majek04 at gmail.com (majek04)
Date: Tue, 25 Nov 2008 17:23:26 +0000
Subject: [rabbitmq-discuss] nonblocking py-amqplib issues
In-Reply-To: <492C25BE.3050401@cohesiveft.com>
References: <3bb0d9710811250325q2ed1e770yc1cb7a53ea84ca11@mail.gmail.com>
	<492C25BE.3050401@cohesiveft.com>
Message-ID: <3bb0d9710811250923t61f3873bide2fb71b1025e9db@mail.gmail.com>

On Tue, Nov 25, 2008 at 16:20, Dmitriy Samovskiy
<dmitriy.samovskiy at cohesiveft.com> wrote:
>>  File "build/bdist.linux-i686/egg/amqplib/nbclient_0_8.py", line 74, in
>> write
>> <P?'
>> read_buf='&<!amq.ctag-rdYQarPUansf8+2dGsnFAQ==?6<<!amq.ctag-rdYQarPUansf8+2dGsnFAQ==myfan2<?
>> text/plainfooIbarSbaz?1?6<<!amq.ctag-rdYQarPUansf8+2dGsnFAQ==myfan2<?
>> text/plainfooIbarSbaz?2?' read_p='175'
>
> I was not able to reproduce this problem with python2.5 on debian etch, but
> I will revisit code to see what may be causing it.

The exception comes from this code:

   def write(self, data):
       # detect a potential deadlock.
       # This might happen if we get a request to write from high-level
       # (i.e., not from read() via __do_write), while not all data
       # have been written yet.
       if data and self.read_p < len(self.read_buf):
           raise Exception("Deadlock: data=%r read_buf=%r read_p='%d'" %
               (data, self.read_buf, self.read_p))
       assert self.read_p == len(self.read_buf)

>> ['4', '1', '2', '3', '4']
>
> I was able to reproduce this problem, and will look into it. It's not only
> the order but also looks like client calls callback() more than once for
> some messages, which would be wrong.


Thanks for help.

Cheers!
 MM

From alexis.richardson at cohesiveft.com  Tue Nov 25 17:35:39 2008
From: alexis.richardson at cohesiveft.com (Alexis Richardson)
Date: Tue, 25 Nov 2008 17:35:39 +0000
Subject: [rabbitmq-discuss] rabbitmq and nanite
Message-ID: <167204d20811250935i3267e1d3j6a66a29ffdd4e3f6@mail.gmail.com>

Hi all,

George Palmer gave a talk on Nanite and RabbitMQ recently - fyi:

http://www.slideshare.net/Georgio_1999/rubymanor-presentation/

alexis



From matthias at lshift.net  Tue Nov 25 21:07:05 2008
From: matthias at lshift.net (Matthias Radestock)
Date: Tue, 25 Nov 2008 21:07:05 +0000
Subject: [rabbitmq-discuss] py-amqplib status messages
In-Reply-To: <492C3110.6030605@cohesiveft.com>
References: <84fb38e30811201750l2d5dd947vb30a96c1afc8b72b@mail.gmail.com>	<49266EC0.9000903@lshift.net>	<492ADC55.5030802@cohesiveft.com>
	<492AEDCD.2030103@lshift.net> <492C3110.6030605@cohesiveft.com>
Message-ID: <492C68F9.4010102@lshift.net>

Dmitriy,

Dmitriy Samovskiy wrote:

> This means that I either have to do buffering inside producer in order 
> to be able to resend them all, or I have to wrap each basic.publish in tx.
> 
> In latter case, it's a total of 5 methods (tx.select, tx.select-ok, 
> basic.publish, tx.commit, tx.commit-ok).

You only need the tx.select/select-ok before the first message. And 
there is nothing forcing you to commit after *every* message. Instead 
keep a bounded buffer of n messages and commit every n. That's far more 
efficient than requiring an ack for every single message.

The downside is that even with this optimised usage tx is quite 
expensive and does a lot more than what you want here.

There is an alternative to using tx: issue *any* synchronous command. 
The response constitutes a guarantee that all messages published prior 
to the request will have been processed by the channel process on the 
server. They may still get lost on their way too queues, but that only 
happens in case of a server fault. Furthermore, if the basic.publish has 
the mandatory flag set then in the latter case a basic.return is 
guaranteed to be sent prior to the synchronous command response.

AFAIK that behaviour is not mandated by the spec though.


Matthias.



From maarten at iridia.nl  Wed Nov 26 10:49:47 2008
From: maarten at iridia.nl (Maarten Engelen)
Date: Wed, 26 Nov 2008 11:49:47 +0100
Subject: [rabbitmq-discuss] Connection problems with Rabbitmq 1.4.0
Message-ID: <ff4cfc80811260249l17d28f2fycbb3a6a22cb53959@mail.gmail.com>

Hi,

At the moment I have a problem connecting to the RabbitMQ broker. I'm
running version 1.4.0 on Erlang R12B4. The OS is OS X 10.5.5. Before
running any examples I did a reset of the rabbitmq broker.

I tried connecting with a ruby client and had problems connecting. The
ruby eventmachine loop quit unexpectedly so I tried to use the
RabbitMQ Java client to see if I had better luck with that library.
But also this library crashes when connecting to the broker.

I attached the error message I get from running one of the examples:

 > java -classpath
.:rabbitmq-client.jar:commons-cli-1.1.jar:commons-io-1.2.jar
com/rabbitmq/examples/TestMain
/com/rabbitmq/examples/TestMain.class
com.rabbitmq.examples.TestMain : javac v49.0 on 1.5.0_16
AMQConnection.mainLoop: connection close
AMQConnection.mainLoop: connection close
Main thread caught exception: java.io.IOException
java.io.IOException
        at com.rabbitmq.client.impl.AMQChannel.wrap(AMQChannel.java:105)
        at com.rabbitmq.client.impl.AMQConnection.open(AMQConnection.java:359)
        at com.rabbitmq.client.impl.AMQConnection.<init>(AMQConnection.java:193)
        at com.rabbitmq.client.impl.AMQConnection.<init>(AMQConnection.java:164)
        at com.rabbitmq.client.ConnectionFactory.newConnection(ConnectionFactory.java:159)
        at com.rabbitmq.client.ConnectionFactory.newConnection(ConnectionFactory.java:207)
        at com.rabbitmq.client.ConnectionFactory.newConnection(ConnectionFactory.java:221)
        at com.rabbitmq.client.ConnectionFactory.newConnection(ConnectionFactory.java:232)
        at com.rabbitmq.examples.TestMain.runConnectionNegotiationTest(TestMain.java:118)
        at com.rabbitmq.examples.TestMain.main(TestMain.java:61)
Caused by: com.rabbitmq.client.ShutdownSignalException (connection
error; reason: java.io.EOFException)
        at com.rabbitmq.client.impl.AMQConnection.shutdown(AMQConnection.java:588)
        at com.rabbitmq.client.impl.AMQConnection$MainLoop.run(AMQConnection.java:458)
Caused by: java.io.EOFException
        at java.io.DataInputStream.readUnsignedByte(DataInputStream.java:264)
        at com.rabbitmq.client.impl.Frame.readFrom(Frame.java:111)
        at com.rabbitmq.client.impl.SocketFrameHandler.readFrame(SocketFrameHandler.java:143)
        at com.rabbitmq.client.impl.AMQConnection.readFrame(AMQConnection.java:284)
        at com.rabbitmq.client.impl.AMQConnection$MainLoop.run(AMQConnection.java:427)

I get similar errors when trying to set up a connection with my own
Java code. Any ideas on what may cause this are greatly appreciated.

Regards,

Maarten



From sean at soundcloud.com  Wed Nov 26 12:39:45 2008
From: sean at soundcloud.com (Sean Treadway)
Date: Wed, 26 Nov 2008 13:39:45 +0100
Subject: [rabbitmq-discuss] Form Submission - Add A Question
In-Reply-To: <269388e30811241145v27bfdbf6v49a88b73333f372b@mail.gmail.com>
References: <24034744.598691227004627209.JavaMail.root@web2>
	<269388e30811180255n118356e6l2e2dcc9860f51439@mail.gmail.com>
	<199B1EFC-9BFC-492A-BBFA-879D652ADC6A@soundcloud.com>
	<269388e30811201455g71b3794fqae2133fb86c57b91@mail.gmail.com>
	<A5DDED21-0EF4-47CB-8E2F-4E51764569D7@soundcloud.com>
	<269388e30811211554u283a5da6s88e300b9009666bb@mail.gmail.com>
	<05C51FE5-19DE-46BC-9D05-432CA78CCD2F@soundcloud.com>
	<269388e30811241145v27bfdbf6v49a88b73333f372b@mail.gmail.com>
Message-ID: <06A79B1A-C57C-4293-8A6C-CFA7A43CF442@soundcloud.com>

Ben,

On Nov 24, 2008, at 8:45 PM, Ben Hood wrote:
> What I meant by absorbing back pressure would be an example where the
> consuming client pulls every message from the socket and buffers it
> internally. This would negate the effect of back pressure and just
> exercise memory pressure on the client application to compensate for
> this. This would an example where you would be throwing away the flow
> control provided by TCP (under the assumption that you are using TCP
> as a transport).

That the client library is snarfing up anything the broker is sending  
it was what I initially thought you meant.  But then I looked hard and  
I'm pretty sure this Ruby client doesn't pull all frames off the  
socket and parse them.  With the test case provided there is some  
logging of the protocol parsing, and the decoding of each frame only  
happens when the processing of each message returns control back to  
the event loop (every 10 seconds).  So then I thought that setting the  
TCP window size to something very small could kick in TCP flow control  
earlier to limit the bytes and hence messages sent by the broker.

>> This makes it clearer:
>> http://lettuce.squarespace.com/faq/queues/when-declaring-a-queue-what-does-the-message-count-field-mea.html
>> But on a practical level, I think it's important to remind  
>> explicitly that
>> mid-flight messages for a consumer with no_ack=false are not  
>> included in
>> this count.
>
> Sorry, I don't quite follow this. Can you explain?

This is just a suggestion to include a bit more information in the FAQ  
entry.  Coming from our application's point of view rather than the  
broker's point of view, it was tough for me to put together a picture  
of how all the pieces fit together.

This is what I was seeing when understanding 'message count':

The producer publishes 3 messages, the broker accepts these 3 and  
increments the message count for each.  A consumer connects, the  
broker puts the 3 messages in a packet on the wire and decrements the  
broker's message count by 3.  The consumer parses the frames from the  
wire and delivers 1 message to the application, the client application  
updates its message count by 1.

At this point, 3 messages exist - the producer has a count of 0, the  
broker has a count of 0, the consumer application has a count of 1.

There are 2 unaccounted messages somewhere.  I went on a hunt for  
these messages.  With your and Matthias' help, I believe they exist in  
consumer's socket's read buffer.

These messages in the read buffer are the ones that are in mid- 
flight.  Our client application logic per consumer could take up to 10  
minutes per unit of work before the next message is parsed and handed  
to our application, so those extra messages that are in "mid-fight",  
are looking like they're in "mid-flight" for 10-20 minutes which isn't  
very intuitive by the name.  In the meantime, we could have started up  
another client application to begin working on those mid-flight  
messages if we knew that they existed by checking the 'message count'.
>


> This sounds more like an application of basic.qos because you would to
> distribute messages based on the various consumers' ability to process
> units of work. By setting the prefetch window, you get more fine
> grained consumer flow control.

Indeed this is just what we're looking for.

>> It looks like branch 19684 (rabbitmqctl list_queues messages_ready)  
>> gives us
>> the statistic we can use to tune our consumer pools.  Are there any  
>> plans of
>> also exposing the 'messages_ready' statistic over AMQP?
>
> Hmmm, difficult question. Some of the Redhat guys have been talking
> about putting more managementy stuff into the protocol, but I don't
> know what the current situation.
>
> And coincidentally we have talking about using the codegen to add some
> propriety methods to Rabbit, but this is just talk.
>
> There were further discussions about SNMP as well.
>
> I think for now now backing an embedded RPC handler using JSON as a
> codec will pay even money. This would be quite simple to knock up with
> the Erlang client for example.

However the management numbers are exposed, I would plan on writing a  
task that reads and publishes the numbers to a "statistics" exchange,  
so consumers can adjust themselves without introducing dependencies on  
other protocols.  This would put the management protocol/setup/ 
dependency cost on 1 producer, verses having to have that cost to read  
some stats on N consumers across M machine installations.

Ideally, the system management numbers could be consumed by queues  
bound to system exchanges, without introducing the step of  
republishing them.  Like 'amq.statistics.messages-per-second.queue- 
name'.   But, but, the monitoring/security requirements probably vary  
greatly between applications, so we'd all probably end up writing  
custom solutions to meet our application needs no matter what is  
decided.

>> Or would branch 18577 (basic.qos) with pre-fetch set to 1 give us  
>> the count
>> of un-acknowledged messages we're looking for from a passive  
>> queue.declare?
>
> I'm not sure I understand - if you set the prefetch size to be one,
> only one outstanding message per channel is allowed - I don't think
> this answers your question though.

I'm pretty sure that with only 1 outstanding channel message, the  
message count will be something we can use for smaller queue depths,  
because the window of time before the message is parsed from the wire  
and in the client application's control is a fraction of the time that  
it takes before the client application acknowledges the message.  Then  
here, we'll just need to setup our client applications to have 1  
consumer per channel.

If pre-fetch was 2, the message count would be 2 less per channel,  
even though the client application was only working on 1 message.  One  
message would be on the client's socket, the other message would be in  
the client's logic/worker loop.  For us, message count for these  
queues should be interpreted as "number of messages that are not  
currently within client application logic", so we'll set the pre-fetch  
to 1, to make sure there are 0 messages left on the client's socket.

> No, this just a way to quickly grab that one message that wasn't
> acked. It would make no difference if you were to start another
> consumer for the same queue on a different channel - this is 6 of one
> and half a dozen of the other.

Good to know that the delivery priorities between basic.consume and  
basic.get are equivalent.

Thanks, I hope this help you understand one of our uses of RabbitMQ,
Sean



From matthias at lshift.net  Wed Nov 26 19:49:19 2008
From: matthias at lshift.net (Matthias Radestock)
Date: Wed, 26 Nov 2008 19:49:19 +0000
Subject: [rabbitmq-discuss] Connection problems with Rabbitmq 1.4.0
In-Reply-To: <ff4cfc80811260249l17d28f2fycbb3a6a22cb53959@mail.gmail.com>
References: <ff4cfc80811260249l17d28f2fycbb3a6a22cb53959@mail.gmail.com>
Message-ID: <492DA83F.3080801@lshift.net>

Maarten,

Maarten Engelen wrote:
> At the moment I have a problem connecting to the RabbitMQ broker. I'm
> running version 1.4.0 on Erlang R12B4. The OS is OS X 10.5.5. Before
> running any examples I did a reset of the rabbitmq broker.

What do you mean by "reset"? Did you run the "rabbitmqctl reset" 
command? If so, did you subsequently restart the rabbit app with 
"rabbitmqctl start_app"?

>  > java -classpath
> .:rabbitmq-client.jar:commons-cli-1.1.jar:commons-io-1.2.jar
> com/rabbitmq/examples/TestMain
> /com/rabbitmq/examples/TestMain.class
> com.rabbitmq.examples.TestMain : javac v49.0 on 1.5.0_16
> AMQConnection.mainLoop: connection close
> AMQConnection.mainLoop: connection close
> Main thread caught exception: java.io.IOException
> java.io.IOException
>         at com.rabbitmq.client.impl.AMQChannel.wrap(AMQChannel.java:105)
>         at com.rabbitmq.client.impl.AMQConnection.open(AMQConnection.java:359)
>         at com.rabbitmq.client.impl.AMQConnection.<init>(AMQConnection.java:193)
>         at com.rabbitmq.client.impl.AMQConnection.<init>(AMQConnection.java:164)
>         at com.rabbitmq.client.ConnectionFactory.newConnection(ConnectionFactory.java:159)

My guess would be that either the the Erlang node isn't running at all 
or the Rabbit application inside it isn't running.

What does "rabbitmqctl status" return?


Matthias.



From john.f.butler at credit-suisse.com  Thu Nov 27 09:00:51 2008
From: john.f.butler at credit-suisse.com (Butler John (KIRX 19))
Date: Thu, 27 Nov 2008 10:00:51 +0100
Subject: [rabbitmq-discuss] RabbitMQ on Windows XP - Failed to create cookie
	file
Message-ID: <2C7E92C7E7E92A4E850BC32CB8347DB402CF5206@chsa1068.share.beluni.net>

Hi,

Im trying to get started with RabbitMQ and have Erlang RTP set up
without problem.

Any attempt to start rabbitmq always ends up with a "Failed to create
cookie file" message

Y:\rabbitmq_server-1.4.0\sbin>rabbitmq-server.bat
{error_logger,{{2008,11,27},{9,21,45}},"Failed to create cookie
file",[]}
{error_logger,{{2008,11,27},{9,21,45}},crash_report,[[{pid,<0.20.0>},{re
gistered
_name,auth},{error_info,{"Failed to create cookie
file",[{auth,init_cookie,0},{a
uth,init,1},{gen_server,init_it,6},{proc_lib,init_p,5}]}},{initial_call,
{gen,ini
t_it,[gen_server,<0.18.0>,<0.18.0>,{local,auth},auth,[],[]]}},{ancestors
,[net_su
p,kernel_sup,<0.9.0>]},{messages,[]},{links,[<0.18.0>]},{dictionary,[]},
{trap_ex
it,true},{status,running},{heap_size,987},{stack_size,21},{reductions,69
9}],[]]}

Looking around on the google pages gave some hints that the environment
settings for HOME or HOMEDRIVE or HOMEPATH might be important so these
have all been set to Y:\rabbitmq_server-1.4.0.

Any other hints would be great

Thanks


-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20081127/8986bb07/attachment.htm 

From matthias at lshift.net  Thu Nov 27 11:49:43 2008
From: matthias at lshift.net (Matthias Radestock)
Date: Thu, 27 Nov 2008 11:49:43 +0000
Subject: [rabbitmq-discuss] Connection problems with Rabbitmq 1.4.0
In-Reply-To: <ff4cfc80811270315v6fe1d498lbe157c4d4a2ce04f@mail.gmail.com>
References: <ff4cfc80811260249l17d28f2fycbb3a6a22cb53959@mail.gmail.com>	<492DA83F.3080801@lshift.net>
	<ff4cfc80811270315v6fe1d498lbe157c4d4a2ce04f@mail.gmail.com>
Message-ID: <492E8957.4010700@lshift.net>

Maarten,

Maarten Engelen wrote:
> I do a rabbitmqctl stop_app, followed by a reset and start_app command.

ok. That's fine.

>> What does "rabbitmqctl status" return?
> 
> It returns the following:
> 
> Starting...Status of node rabbit at Workstation ...
> [{running_applications,[{rabbit,"RabbitMQ","1.4.0"},
>                         {mnesia,"MNESIA  CXC 138 12","4.4.5"},
>                         {os_mon,"CPO  CXC 138 46","2.1.7"},
>                         {sasl,"SASL  CXC 138 11","2.1.5.3"},
>                         {stdlib,"ERTS  CXC 138 10","1.15.4"},
>                         {kernel,"ERTS  CXC 138 10","2.12.4"}]},
>  {nodes,[rabbit at Workstation]},
>  {running_nodes,[rabbit at Workstation]}]

That all looks fine.

> Also connecting directly to port 5672 allows me to connect.
> 
> I just saw the following error in the logs which I didn't notive
> before when running TestMain:
> [...]
> =ERROR REPORT==== 27-Nov-2008::12:11:55 ===
> error on TCP connection <0.1837.0> from 127.0.0.1:63516
> {bad_version,0,1}

That is normal. TestMain runs various tests, including some that are 
designed to provoke error cases, such as protocol version mismatches.

> When running ProducerMain or ConsumerMain I get the same Java error,

That's strange. The fact that you can connect to the port means rabbit 
is listening. Furthermore, the log messages show that TestMain was able 
to connect, but only once.

Please run the test through the tracer, i.e. start the tracer with
   sh runjava.sh com.rabbitmq.tools.Tracer
and then run TestMain with
   sh runjava.sh com.rabbitmq.examples.TestMain localhost 5673
and send me the output from the tracer.


Regards,

Matthias.
PS: please keep the list cc'ed.



From maarten at iridia.nl  Thu Nov 27 12:14:39 2008
From: maarten at iridia.nl (Maarten Engelen)
Date: Thu, 27 Nov 2008 13:14:39 +0100
Subject: [rabbitmq-discuss] Connection problems with Rabbitmq 1.4.0
In-Reply-To: <492E8957.4010700@lshift.net>
References: <ff4cfc80811260249l17d28f2fycbb3a6a22cb53959@mail.gmail.com>
	<492DA83F.3080801@lshift.net>
	<ff4cfc80811270315v6fe1d498lbe157c4d4a2ce04f@mail.gmail.com>
	<492E8957.4010700@lshift.net>
Message-ID: <ff4cfc80811270414y43b1c3eesb0c77a5bfbee52c7@mail.gmail.com>

Matthias,

2008/11/27 Matthias Radestock <matthias at lshift.net>:
>> When running ProducerMain or ConsumerMain I get the same Java error,
>
> That's strange. The fact that you can connect to the port means rabbit is
> listening. Furthermore, the log messages show that TestMain was able to
> connect, but only once.
>
> Please run the test through the tracer, i.e. start the tracer with
>  sh runjava.sh com.rabbitmq.tools.Tracer
> and then run TestMain with
>  sh runjava.sh com.rabbitmq.examples.TestMain localhost 5673
> and send me the output from the tracer.

The following output came back from the Tracer:

com.rabbitmq.tools.Tracer.WITHHOLD_INBOUND_HEARTBEATS = false
com.rabbitmq.tools.Tracer.WITHHOLD_OUTBOUND_HEARTBEATS = false
com.rabbitmq.tools.Tracer.NO_ASSEMBLE_FRAMES = false
com.rabbitmq.tools.Tracer.NO_DECODE_FRAMES = false
java.io.EOFException
        at java.io.DataInputStream.readUnsignedByte(DataInputStream.java:264)
        at com.rabbitmq.client.impl.Frame.readFrom(Frame.java:111)
        at com.rabbitmq.tools.Tracer$DirectionHandler.readFrame(Tracer.java:167)
        at com.rabbitmq.tools.Tracer$DirectionHandler.doFrame(Tracer.java:198)
        at com.rabbitmq.tools.Tracer$DirectionHandler.run(Tracer.java:231)
        at java.lang.Thread.run(Thread.java:613)
java.io.EOFException
        at java.io.DataInputStream.readUnsignedByte(DataInputStream.java:264)
        at com.rabbitmq.client.impl.Frame.readFrom(Frame.java:111)
        at com.rabbitmq.tools.Tracer$DirectionHandler.readFrame(Tracer.java:167)
        at com.rabbitmq.tools.Tracer$DirectionHandler.doFrame(Tracer.java:198)
        at com.rabbitmq.tools.Tracer$DirectionHandler.run(Tracer.java:231)
        at java.lang.Thread.run(Thread.java:613)

The error message from TestMain is the same as before.

Regards,

Maarten



From hubert at lshift.net  Thu Nov 27 12:39:12 2008
From: hubert at lshift.net (Hubert Plociniczak)
Date: Thu, 27 Nov 2008 12:39:12 +0000
Subject: [rabbitmq-discuss] RabbitMQ on Windows XP - Failed to create
 cookie	file
In-Reply-To: <2C7E92C7E7E92A4E850BC32CB8347DB402CF5206@chsa1068.share.beluni.net>
References: <2C7E92C7E7E92A4E850BC32CB8347DB402CF5206@chsa1068.share.beluni.net>
Message-ID: <492E94F0.3030601@lshift.net>

Hi John,

I am not able to replicate the problem on my test machine so we would 
need some more information about your system.
Are you running XP or Vista? Which version of erlang/otp do you run?

In erlang shell (started by bin\erl.exe) what do you get when running:
 > init:get_argument(home).

Does this agree with what you have set as environmental variable?
I assume you have write permissions to this directory, but I want to 
make sure.

Thanks,
Hubert

Butler John (KIRX 19) wrote:
>
> Hi,
>
> Im trying to get started with RabbitMQ and have Erlang RTP set up 
> without problem.
>
> Any attempt to start rabbitmq always ends up with a "Failed to create 
> cookie file" message
>
> Y:\rabbitmq_server-1.4.0\sbin>rabbitmq-server.bat
> {error_logger,{{2008,11,27},{9,21,45}},"Failed to create cookie file",[]}
> {error_logger,{{2008,11,27},{9,21,45}},crash_report,[[{pid,<0.20.0>},{registered 
>
> _name,auth},{error_info,{"Failed to create cookie 
> file",[{auth,init_cookie,0},{a
> uth,init,1},{gen_server,init_it,6},{proc_lib,init_p,5}]}},{initial_call,{gen,ini 
>
> t_it,[gen_server,<0.18.0>,<0.18.0>,{local,auth},auth,[],[]]}},{ancestors,[net_su 
>
> p,kernel_sup,<0.9.0>]},{messages,[]},{links,[<0.18.0>]},{dictionary,[]},{trap_ex 
>
> it,true},{status,running},{heap_size,987},{stack_size,21},{reductions,699}],[]]} 
>
>
> Looking around on the google pages gave some hints that the 
> environment settings for HOME or HOMEDRIVE or HOMEPATH might be 
> important so these have all been set to Y:\rabbitmq_server-1.4.0.
>
> Any other hints would be great
>
> Thanks
>
>
> ------------------------------------------------------------------------
>
> _______________________________________________
> rabbitmq-discuss mailing list
> rabbitmq-discuss at lists.rabbitmq.com
> http://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss
>   


-- 
 [][][] Hubert Plociniczak
   [][] LShift Ltd
 []  [] www.lshift.net




From john.f.butler at credit-suisse.com  Thu Nov 27 13:08:55 2008
From: john.f.butler at credit-suisse.com (Butler John (KIRX 19))
Date: Thu, 27 Nov 2008 14:08:55 +0100
Subject: [rabbitmq-discuss] RabbitMQ on Windows XP - Failed to create
	cookie	file
In-Reply-To: <492E94F0.3030601@lshift.net>
References: <2C7E92C7E7E92A4E850BC32CB8347DB402CF5206@chsa1068.share.beluni.net>
	<492E94F0.3030601@lshift.net>
Message-ID: <2C7E92C7E7E92A4E850BC32CB8347DB402CF53AB@chsa1068.share.beluni.net>

Hi Hubert,

Got it solved - thanks for the help - but maybe something others might
come across....

Firstly the system details are : 

Erlang OTP version 5.5.5
Windows XP Professional 5.1 Service Pack 2
Rabbit MQ 1.4.0

ERLANG picks up the standard value of the PC environment variables

Eshell V5.5.5  (abort with ^G)
1> init:get_argument(home).
{ok,[["Y:\\Data\\Profiles\\John"]]}

But this directory does not exist !!! (the correct directory would be
C:\Data\Profiles\John

I then check the standard system settings and see

HOMEDRIVE=Y:
HOMEPATH=\Data\Profiles\John

Clearly ERLANG puts these two together to form the HOME directory. This
is a work PC and its the first time I have ever come across this
situation - no other application would appear to marge these two values
to create HOME.

By changing the HOMEDRIVE to C:, the HOME for ERLANG is then corect all
starts ok

When trying to find this solution via google yesterday some other users
hinted at this problem but did not give specifics - but clearly others
have run into when when using a network drive for HOMEDRIVE and ERLANG 

Thanks

John

-----Original Message-----
From: Hubert Plociniczak [mailto:hubert at lshift.net] 
Sent: Thursday, November 27, 2008 1:39 PM
To: Butler John (KIRX 19)
Cc: rabbitmq-discuss at lists.rabbitmq.com
Subject: Re: [rabbitmq-discuss] RabbitMQ on Windows XP - Failed to
create cookie file

Hi John,

I am not able to replicate the problem on my test machine so we would 
need some more information about your system.
Are you running XP or Vista? Which version of erlang/otp do you run?

In erlang shell (started by bin\erl.exe) what do you get when running:
 > init:get_argument(home).

Does this agree with what you have set as environmental variable?
I assume you have write permissions to this directory, but I want to 
make sure.

Thanks,
Hubert

Butler John (KIRX 19) wrote:
>
> Hi,
>
> Im trying to get started with RabbitMQ and have Erlang RTP set up 
> without problem.
>
> Any attempt to start rabbitmq always ends up with a "Failed to create 
> cookie file" message
>
> Y:\rabbitmq_server-1.4.0\sbin>rabbitmq-server.bat
> {error_logger,{{2008,11,27},{9,21,45}},"Failed to create cookie
file",[]}
>
{error_logger,{{2008,11,27},{9,21,45}},crash_report,[[{pid,<0.20.0>},{re
gistered 
>
> _name,auth},{error_info,{"Failed to create cookie 
> file",[{auth,init_cookie,0},{a
>
uth,init,1},{gen_server,init_it,6},{proc_lib,init_p,5}]}},{initial_call,
{gen,ini 
>
>
t_it,[gen_server,<0.18.0>,<0.18.0>,{local,auth},auth,[],[]]}},{ancestors
,[net_su 
>
>
p,kernel_sup,<0.9.0>]},{messages,[]},{links,[<0.18.0>]},{dictionary,[]},
{trap_ex 
>
>
it,true},{status,running},{heap_size,987},{stack_size,21},{reductions,69
9}],[]]} 
>
>
> Looking around on the google pages gave some hints that the 
> environment settings for HOME or HOMEDRIVE or HOMEPATH might be 
> important so these have all been set to Y:\rabbitmq_server-1.4.0.
>
> Any other hints would be great
>
> Thanks
>
>
>
------------------------------------------------------------------------
>
> _______________________________________________
> rabbitmq-discuss mailing list
> rabbitmq-discuss at lists.rabbitmq.com
> http://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss
>   


-- 
 [][][] Hubert Plociniczak
   [][] LShift Ltd
 []  [] www.lshift.net




From matthias at lshift.net  Thu Nov 27 14:05:36 2008
From: matthias at lshift.net (Matthias Radestock)
Date: Thu, 27 Nov 2008 14:05:36 +0000
Subject: [rabbitmq-discuss] Connection problems with Rabbitmq 1.4.0
In-Reply-To: <ff4cfc80811270414y43b1c3eesb0c77a5bfbee52c7@mail.gmail.com>
References: <ff4cfc80811260249l17d28f2fycbb3a6a22cb53959@mail.gmail.com>	<492DA83F.3080801@lshift.net>	<ff4cfc80811270315v6fe1d498lbe157c4d4a2ce04f@mail.gmail.com>	<492E8957.4010700@lshift.net>
	<ff4cfc80811270414y43b1c3eesb0c77a5bfbee52c7@mail.gmail.com>
Message-ID: <492EA930.7040203@lshift.net>

Maarten,

Maarten Engelen wrote:
> The following output came back from the Tracer:
> 
> com.rabbitmq.tools.Tracer.WITHHOLD_INBOUND_HEARTBEATS = false
> com.rabbitmq.tools.Tracer.WITHHOLD_OUTBOUND_HEARTBEATS = false
> com.rabbitmq.tools.Tracer.NO_ASSEMBLE_FRAMES = false
> com.rabbitmq.tools.Tracer.NO_DECODE_FRAMES = false
> java.io.EOFException
>         at java.io.DataInputStream.readUnsignedByte(DataInputStream.java:264)
>         at com.rabbitmq.client.impl.Frame.readFrom(Frame.java:111)
>         at com.rabbitmq.tools.Tracer$DirectionHandler.readFrame(Tracer.java:167)
>         at com.rabbitmq.tools.Tracer$DirectionHandler.doFrame(Tracer.java:198)
>         at com.rabbitmq.tools.Tracer$DirectionHandler.run(Tracer.java:231)
>         at java.lang.Thread.run(Thread.java:613)

Looks like tracing at the AMQP level isn't getting us anywhere :(

So let's try tracing at the network level. You will need to have tcpdump 
installed and be able to get root privileges. Run
   sudo /usr/sbin/tcpdump -i lo dst port 5672 -w trace.pcap
then run TestMain and send me the resulting trace.pcap.


Matthias.



From maarten at iridia.nl  Thu Nov 27 14:10:18 2008
From: maarten at iridia.nl (Maarten Engelen)
Date: Thu, 27 Nov 2008 15:10:18 +0100
Subject: [rabbitmq-discuss] Connection problems with Rabbitmq 1.4.0
In-Reply-To: <492EA930.7040203@lshift.net>
References: <ff4cfc80811260249l17d28f2fycbb3a6a22cb53959@mail.gmail.com>
	<492DA83F.3080801@lshift.net>
	<ff4cfc80811270315v6fe1d498lbe157c4d4a2ce04f@mail.gmail.com>
	<492E8957.4010700@lshift.net>
	<ff4cfc80811270414y43b1c3eesb0c77a5bfbee52c7@mail.gmail.com>
	<492EA930.7040203@lshift.net>
Message-ID: <ff4cfc80811270610g6d512430rb545822a1b1043b@mail.gmail.com>

Hi Matthias,

2008/11/27 Matthias Radestock <matthias at lshift.net>:
>> The following output came back from the Tracer:
>>
>> com.rabbitmq.tools.Tracer.WITHHOLD_INBOUND_HEARTBEATS = false
>> com.rabbitmq.tools.Tracer.WITHHOLD_OUTBOUND_HEARTBEATS = false
>> com.rabbitmq.tools.Tracer.NO_ASSEMBLE_FRAMES = false
>> com.rabbitmq.tools.Tracer.NO_DECODE_FRAMES = false
>> java.io.EOFException
>>        at
>> java.io.DataInputStream.readUnsignedByte(DataInputStream.java:264)
>>        at com.rabbitmq.client.impl.Frame.readFrom(Frame.java:111)
>>        at
>> com.rabbitmq.tools.Tracer$DirectionHandler.readFrame(Tracer.java:167)
>>        at
>> com.rabbitmq.tools.Tracer$DirectionHandler.doFrame(Tracer.java:198)
>>        at com.rabbitmq.tools.Tracer$DirectionHandler.run(Tracer.java:231)
>>        at java.lang.Thread.run(Thread.java:613)
>
> Looks like tracing at the AMQP level isn't getting us anywhere :(
>
> So let's try tracing at the network level. You will need to have tcpdump
> installed and be able to get root privileges. Run
>  sudo /usr/sbin/tcpdump -i lo dst port 5672 -w trace.pcap
> then run TestMain and send me the resulting trace.pcap.

I have attached the zipped trace.pcap. It contains a single run of TestMain.

Maarten
-------------- next part --------------
A non-text attachment was scrubbed...
Name: trace.pcap.zip
Type: application/zip
Size: 445 bytes
Desc: not available
Url : http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20081127/44b465f3/attachment.zip 

From matthias at lshift.net  Thu Nov 27 14:50:51 2008
From: matthias at lshift.net (Matthias Radestock)
Date: Thu, 27 Nov 2008 14:50:51 +0000
Subject: [rabbitmq-discuss] Connection problems with Rabbitmq 1.4.0
In-Reply-To: <ff4cfc80811270628o5d2939fbxe694eff05898f031@mail.gmail.com>
References: <ff4cfc80811260249l17d28f2fycbb3a6a22cb53959@mail.gmail.com>	<492DA83F.3080801@lshift.net>	<ff4cfc80811270315v6fe1d498lbe157c4d4a2ce04f@mail.gmail.com>	<492E8957.4010700@lshift.net>	<ff4cfc80811270414y43b1c3eesb0c77a5bfbee52c7@mail.gmail.com>	<492EA930.7040203@lshift.net>	<ff4cfc80811270610g6d512430rb545822a1b1043b@mail.gmail.com>	<492EADA2.6040706@lshift.net>
	<ff4cfc80811270628o5d2939fbxe694eff05898f031@mail.gmail.com>
Message-ID: <492EB3CB.5020101@lshift.net>

Maarten,

Maarten Engelen wrote:
> Attached the new file. The contents have been captured
> with `tcpdump -i lo0 -w trace.pcap port 5672`

It looks like the client is sending a perfectly correct protocol header 
but the server just closes the socket rather than sending a 
connection.start method.

Are there any errors in the rabbit-sasl.log?

Also, how do you start rabbit, and do you experience the same problems 
right after starting it?


Matthias.



From maarten at iridia.nl  Thu Nov 27 15:29:27 2008
From: maarten at iridia.nl (Maarten Engelen)
Date: Thu, 27 Nov 2008 16:29:27 +0100
Subject: [rabbitmq-discuss] Connection problems with Rabbitmq 1.4.0
In-Reply-To: <492EB3CB.5020101@lshift.net>
References: <ff4cfc80811260249l17d28f2fycbb3a6a22cb53959@mail.gmail.com>
	<492DA83F.3080801@lshift.net>
	<ff4cfc80811270315v6fe1d498lbe157c4d4a2ce04f@mail.gmail.com>
	<492E8957.4010700@lshift.net>
	<ff4cfc80811270414y43b1c3eesb0c77a5bfbee52c7@mail.gmail.com>
	<492EA930.7040203@lshift.net>
	<ff4cfc80811270610g6d512430rb545822a1b1043b@mail.gmail.com>
	<492EADA2.6040706@lshift.net>
	<ff4cfc80811270628o5d2939fbxe694eff05898f031@mail.gmail.com>
	<492EB3CB.5020101@lshift.net>
Message-ID: <ff4cfc80811270729p34e13cd3s8393391de4bd8b69@mail.gmail.com>

Matthias,

2008/11/27 Matthias Radestock <matthias at lshift.net>:
>> Attached the new file. The contents have been captured
>> with `tcpdump -i lo0 -w trace.pcap port 5672`
>
> It looks like the client is sending a perfectly correct protocol header but
> the server just closes the socket rather than sending a connection.start
> method.

Ok, that fits my experience with the other libraries I used.

>
> Are there any errors in the rabbit-sasl.log?

Actually, there are:

=CRASH REPORT==== 27-Nov-2008::15:52:27 ===
  crasher:
    pid: <0.1925.0>
    registered_name: []
    exception error: undefined function rabbit_log:message/4
      in function  rabbit_writer:assemble_frames/2
      in call from rabbit_writer:internal_send_command/3
      in call from rabbit_reader:send_on_channel0/2
      in call from rabbit_reader:handle_input/3
      in call from rabbit_reader:mainloop/3
      in call from rabbit_reader:start_connection/3
    initial call: rabbit_reader:init(<0.1303.0>)
    ancestors: [rabbit_tcp_client_sup,rabbit_sup,<0.1161.0>]
    messages: []
    links: [<0.1303.0>,#Port<0.522>]
    dictionary: []
    trap_exit: true
    status: running
    heap_size: 987
    stack_size: 23
    reductions: 286
  neighbours:

=SUPERVISOR REPORT==== 27-Nov-2008::15:52:27 ===
     Supervisor: {local,rabbit_tcp_client_sup}
     Context:    child_terminated
     Reason:     undef
     Offender:   [{pid,<0.1925.0>},
                  {name,tcp_client},
                  {mfa,{rabbit_reader,start_link,[]}},
                  {restart_type,temporary},
                  {shutdown,brutal_kill},
                  {child_type,worker}]

And this actually makes a lot of sense. After having problems running
my code I rebuild rabbit with debugging set to on. I totally forgot
that I was running rabbit with this flag on true during compilation.
The debug flag makes this define in rabbit.hrl active:

-define(LOGMESSAGE(D,C,M,Co), rabbit_log:message(D,C,M,Co)).

rabbit_log:message does not exist in rabbit_log.erl and ?LOGMESSAGE is
called in the first line of rabbit_writer:assemble_frames/2. Which
creates on obvious crash.

After recompiling rabbit the examples work as expected.

Matthias, thank you for your help with this (ending up as a minor) problem.

Maarten



From toby.o.h.white at googlemail.com  Thu Nov 27 15:41:59 2008
From: toby.o.h.white at googlemail.com (Toby White)
Date: Thu, 27 Nov 2008 15:41:59 +0000
Subject: [rabbitmq-discuss] Rabbitmq falling over & losing messages
Message-ID: <0CCF395F-1E6A-4F7F-A167-E41F824F9076@gmail.com>

I'm seeing a failure condition in Rabbit, where I seem to lose a whole  
queue's worth of messages.

I'm using RabbitMQ-1.4.0, and talking to it with py-amqplib.

If I push small messages at Rabbit as fast as I can (both client and  
server on the same host) in transacted batches of 1000:

 >>> t = str(time.time())
 >>> ch.tx_select()
 >>> for i in xrange(1000):
...     msgs = [str(1000*i+j)+" "+t for j in xrange(1000)]
...     for j in xrange(1000):
...         ch.basic_publish(amqp.Message(msgs[j], delivery_mode=2),  
'amq.direct', routing_key='TX')
...     print i
...     ch.tx_commit()
...     ch.tx_select()

then initially rabbit accepts the connections, and I can see the  
messages arriving on the queue, in their batches, from the broker's  
shell (there is no consumer running, so all messages are building up  
in the broker queue.)

However, after anywhere between 50,000 and 100,000 messages have been  
published, the client gets an exception, RabbitMQ crashes, and the  
queue vanishes from the server, along with all unconsumed messages.  
Recreating the queue shows it empty; restarting the server entirely is  
a hit-and-miss affair; sometimes it works fine (though the messages  
are still missing); sometimes it fails due to a timeout on the  
persister process, and the only way to restart seems to be to delete / 
var/lib/rabbitmq/mnesia.

This is all entirely reproducible, the only variable being the number  
of messages published/consumed before Rabbit falls over.

At the time of crashing, the erlang process is taking about 40% of the  
host's CPU, and about 10% of its memory; the Python process doing the  
publishing is taking a small amount of CPU and memory, nothing else of  
significance is consuming any resources.

The client exception looks like:

Traceback (most recent call last):
  File "<stdin>", line 6, in <module>
  File "/usr/lib/python2.5/site-packages/amqplib/client_0_8.py", line  
3336, in tx_commit
    (90, 21),    # Channel.tx_commit_ok
  File "/usr/lib/python2.5/site-packages/amqplib/client_0_8.py", line  
183, in wait
    frame_type, payload = self._next_frame()
  File "/usr/lib/python2.5/site-packages/amqplib/client_0_8.py", line  
123, in _next_frame
    return self.connection._wait_channel(self.channel_id)
  File "/usr/lib/python2.5/site-packages/amqplib/client_0_8.py", line  
430, in _wait_channel
    self.wait()
  File "/usr/lib/python2.5/site-packages/amqplib/client_0_8.py", line  
203, in wait
    return self._dispatch(method_sig, args, content)
  File "/usr/lib/python2.5/site-packages/amqplib/client_0_8.py", line  
115, in _dispatch
    return amqp_method(self, args)
  File "/usr/lib/python2.5/site-packages/amqplib/client_0_8.py", line  
563, in _close
    raise AMQPConnectionException(reply_code, reply_text, (class_id,  
method_id))
amqplib.client_0_8.AMQPConnectionException: (541, u'INTERNAL_ERROR',  
(0, 0), '')


Looking in the Rabbit logs, this happens at the crash:

=ERROR REPORT==== 27-Nov-2008::12:00:45 ===
connection <0.283.0> (running), channel 1 - error:
{commit_failed,
    [{exit,
         {timeout,
             {gen_server,
                 call,
                 [<0.273.0>,{commit,{{1,<0.288.0>},1080079}}]}}}]}

=WARNING REPORT==== 27-Nov-2008::12:00:45 ===
Non-AMQP exit reason '{commit_failed,
                          [{exit,
                               {timeout,
                                   {gen_server,
                                       call,
                                       [<0.273.0>,
                                        {commit,{{1,<0.288.0>}, 
1080079}}]}}}]}'

=INFO REPORT==== 27-Nov-2008::12:00:45 ===
closing TCP connection <0.283.0> from 127.0.0.1:57226

=ERROR REPORT==== 27-Nov-2008::12:01:36 ===
** Generic server <0.273.0> terminating
** Last message in was {commit,{{1,<0.288.0>},1080079}}
** When Server state == {q,
                         {amqqueue,
                          {resource,<<"/">>,queue,<<"TX_queue">>},
                          true,
                          false,
                          [],
                          [],
                          none},
                         none,
                         none,
                         true,
                         1,
[...]
                           {{basic_message,
                              
{resource,<<"/">>,exchange,<<"amq.direct">>},
                             <<"TX">>,
                             {content,
                              60,
                              {'P_basic',
                               undefined,
                               undefined,
                               undefined,
                               2,
                               undefined,
                               undefined,
                               undefined,
                               undefined,
                               undefined,
                               undefined,
                               undefined,
                               undefined,
                               undefined,
                               undefined},
                              <<16,0,2>>,
                              [<<"78999 1227785600.85">>]},
                             {{1,<0.288.0>},1080078}},
                            false}]},
                         {[],[]}}
** Reason for termination ==
** {timeout,
       {gen_server,
           call,
           [rabbit_persister,
            {commit_transaction,
                {{{1,<0.288.0>},1080079},
                 {resource,<<"/">>,queue,<<"TX_queue">>}}}]}}


with the entire contents of the queue (79000 messages in this case)  
inside the server state.

What can I do to fix this?

Toby




From alexis.richardson at cohesiveft.com  Thu Nov 27 16:11:21 2008
From: alexis.richardson at cohesiveft.com (Alexis Richardson)
Date: Thu, 27 Nov 2008 16:11:21 +0000
Subject: [rabbitmq-discuss] some questions about rabbitmq clustering,
	answered
Message-ID: <167204d20811270811q7d40995u9242b5c9afd1ed6f@mail.gmail.com>

Hi all,

We were approached by Gunnar Djurberg, a RabbitMQ user, off-list who
had some questions about clusters in RabbitMQ.  Thank-you Gunnar for
bringing these up and giving permission to share the conversation
here.

Here are the (edited) questions and answers:

> I would like to understand how clustering works.  I.e. what
> information/state is shared across nodes in the cluster,
> and what really constitutes a cluster-node.

The cluster is a set of nodes that shares a routing table.  The
concept of node is specific to RabbitMQ and not to AMQP, and is
derived from the underlying erlang/OTP, "node".   Each AMQP queue
exists on at most one node in the cluster, and if it is persistent then
it persists to a disk accessible from that node.  By contrast the
routing table is defined by a set of AMQP exchanges, and that data is
shared across all nodes in the cluster.

A message arriving at a given node will be routed to appropriate
queues via AMQP bindings and exchange routing rules.  For queues on
that node, this means 'zero hops', and for queues on other nodes, this
means 'one hop'.


> For example, I would expect exchanges, queues and bindings to be
> accesible to each other (ie to exist) across RabbitMQ nodes within the
> cluster.

Bindings are routing rules expressing a relationship between exchanges
and queues.  The cluster's routing table is the collection of all
these rules as expressed in this way using bindings and exchanges.
This routing table is shared across the cluster.  Queues are *visible*
and *accessible* throughout the cluster because messages can be routed
to them.  However each queue's data lives on one node (and possibly
also on disk).


> I would have thought that the cluster could be described as a
> virtual host that extends across several nodes/physical
> nodes - but is this correct?

Typically a set of physical nodes would be some machines on a LAN.  A
cluster would extend across this.  In erlang/OTP you can run more than
one node per physical machine, for example you might have one per
processing unit on an SMP.

> a queue is accessible (to consumers) across the cluster
> though it is located on a specific node?

Correct.

This is in the same sense that in a web application, you might access
a data store, located in one place, through a number of web sessions,
located in multiple places.


> Does this mean that the cluster handles the delivery of message from
> queue to consumer or does the consumer need to know the physical
> location of the queue and connect to that node?

A RabbitMQ cluster is a single logical AMQP server. Consumers and
producers are AMQP clients. It does not matter which node in the cluster
they connect to. End-to-end message routing involves at most two hops
inside the cluster: from the node to which the producer is connected to
the node on which the queue resides, and from there to the node to
which the consumer is connected.

So:

* RabbitMQ clusters are responsible for pushing data to consumers.
  So yes the cluster handles the delivery of the message.

* There is also a sense in which each queue is responsible for
   buffering messages on behalf of the consumer that has created
   that queue (or: consumers that share that queue).
   Therefore the consumer must have a physical connection with
   any nodes containing queues from which messages are being
   delivered to it.  But the cluster takes care of this for you.

Best wishes,

alexis



From 0x6e6562 at gmail.com  Thu Nov 27 16:33:20 2008
From: 0x6e6562 at gmail.com (Ben Hood)
Date: Thu, 27 Nov 2008 16:33:20 +0000
Subject: [rabbitmq-discuss] Rabbitmq falling over & losing messages
In-Reply-To: <0CCF395F-1E6A-4F7F-A167-E41F824F9076@gmail.com>
References: <0CCF395F-1E6A-4F7F-A167-E41F824F9076@gmail.com>
Message-ID: <269388e30811270833s34f2e442r2fb219092e4ff35a@mail.gmail.com>

Toby,

On Thu, Nov 27, 2008 at 3:41 PM, Toby White
<toby.o.h.white at googlemail.com> wrote:
> However, after anywhere between 50,000 and 100,000 messages have been
> published, the client gets an exception, RabbitMQ crashes, and the
> queue vanishes from the server, along with all unconsumed messages.
> Recreating the queue shows it empty; restarting the server entirely is
> a hit-and-miss affair; sometimes it works fine (though the messages
> are still missing); sometimes it fails due to a timeout on the
> persister process, and the only way to restart seems to be to delete /
> var/lib/rabbitmq/mnesia.

I won't get time to look at this properly until next week (but
somebody else might), but as a quick thought, have you tried the
lastest version from the reporsitory (which is very close to be
released)?

Also, can you tell us what queues and bindings you have set up?

Ben



From terry at jon.es  Fri Nov 28 12:47:18 2008
From: terry at jon.es (Terry Jones)
Date: Fri, 28 Nov 2008 13:47:18 +0100
Subject: [rabbitmq-discuss] rabbitmqctl_real writes error messages to stdout
Message-ID: <18735.59478.588065.653303@jon.es>

Is there a reason why rabbitmqctl_real writes error messages to stdout
instead of stderr?

    $ rabbitmqctl_real delete_user guest
    Deleting user "guest" ...
    rabbit_control action delete_user failed:
    {error,{no_such_user,<<"guest">>}}

    $ rabbitmqctl_real delete_user guest > /dev/null

It's no big deal, and I don't need anyone to fix it, and it didn't even
slow me down. But it could have and it's unconventional. At least the exit
status is non-zero :-)

Terry



From hubert at lshift.net  Fri Nov 28 15:24:56 2008
From: hubert at lshift.net (Hubert Plociniczak)
Date: Fri, 28 Nov 2008 15:24:56 +0000
Subject: [rabbitmq-discuss] rabbitmqctl_real writes error messages to
 stdout
In-Reply-To: <18735.59478.588065.653303@jon.es>
References: <18735.59478.588065.653303@jon.es>
Message-ID: <49300D48.5010809@lshift.net>

Hi Terry,

thanks for reporting this. This is indeed a wrong behavior. We will fix 
it in the next release.

Hubert

Terry Jones wrote:
> Is there a reason why rabbitmqctl_real writes error messages to stdout
> instead of stderr?
>
>     $ rabbitmqctl_real delete_user guest
>     Deleting user "guest" ...
>     rabbit_control action delete_user failed:
>     {error,{no_such_user,<<"guest">>}}
>
>     $ rabbitmqctl_real delete_user guest > /dev/null
>
> It's no big deal, and I don't need anyone to fix it, and it didn't even
> slow me down. But it could have and it's unconventional. At least the exit
> status is non-zero :-)
>
> Terry
>
> _______________________________________________
> rabbitmq-discuss mailing list
> rabbitmq-discuss at lists.rabbitmq.com
> http://lists.rabbitmq.com/cgi-bin/mailman/listinfo/rabbitmq-discuss
>   


-- 
  [][][] Hubert Plociniczak
    [][] LShift Ltd
  []  [] www.lshift.net




From 0x6e6562 at gmail.com  Sat Nov 29 00:06:18 2008
From: 0x6e6562 at gmail.com (Ben Hood)
Date: Sat, 29 Nov 2008 00:06:18 +0000
Subject: [rabbitmq-discuss] Rabbitmq falling over & losing messages
In-Reply-To: <C24403B9-3526-4FC9-80EE-19CF181F2DE7@gmail.com>
References: <0CCF395F-1E6A-4F7F-A167-E41F824F9076@gmail.com>
	<269388e30811270833s34f2e442r2fb219092e4ff35a@mail.gmail.com>
	<C24403B9-3526-4FC9-80EE-19CF181F2DE7@gmail.com>
Message-ID: <269388e30811281606v68eddbddxd8cf6821ac3c417b@mail.gmail.com>

Toby,

On Fri, Nov 28, 2008 at 10:47 AM, Toby White
<toby.o.h.white at googlemail.com> wrote:
> I've pulled the latest repository version, and run the same tests. (This
> also required me to upgrade the version of Erlang I was running on from 11b5
> to 12b3)
> The outcome is basically the same, but I get slightly different errors
> logged.

So are you saying that with the latest version of Rabbit you are still
losing messages that are marked as persistent (as you indicated in
your first post)?

> The publishing script gets an exception like so:
...
> [{exit,{timeout,{gen_server,call,[<0.230.0>,{commit,{{1,<0.247.0>},82082}},5000]}}}]',
> (90, 20), 'Channel.tx_commit')

This client side trace looks normal for a server crash.

> and the rabbit error message is very slightly different:
>
> =ERROR REPORT==== 28-Nov-2008::10:11:40 ===
> connection <0.242.0> (running), channel 1 - error:
> {amqp,internal_error,
>      "commit failed:
> [{exit,{timeout,{gen_server,call,[<0.230.0>,{commit,{{1,<0.247.0>},82082}},5000]}}}]",
>      'tx.commit'}
>
> (followed by a dump of the whole queue as before.)
>
> Furthermore, the following appears on the console:
>
> (rabbit at domU-12-31-39-02-61-F6)3>
> /usr/lib/erlang/lib/os_mon-2.1.6/priv/bin/memsup: Erlang has closed.
>
>                           Erlang has closed
>
> Crash dump was written to: erl_crash.dump
> eheap_alloc: Cannot allocate 729810240 bytes of memory (of type "heap").
> Aborted

Ok, this looks normal for a case when Rabbit runs out of memory
because you have flooded it with messages.

Currently the only preventative action against this is the
channel.flow command - see this article for the background :
http://hopper.squarespace.com/blog/2008/11/9/flow-control-in-rabbitmq.html

ATM producer throttling requires a well behaved client, i.e. one that
obeys the channel.flow command - the Python client currently isn't
well behaved in this respect.

> even though, as best I can tell from watching the output of top, the erlang
> process never took more than about 10% of available memory.

Do you not see anything in the log about an alarm handler for memory, e.g.

=INFO REPORT==== 9-Nov-2008::15:13:31 ===
    alarm_handler: {set,{system_memory_high_watermark,[]}}

?

I find the memory statistic a bit strange - the alarm handler kicks in
by default at 95%.

Simon is currently looking into a issue with the way Erlang reports on
memory consumption on Linux - maybe he can can shed some light on what
may be going on with your installation.

Also, can you give some more details about your environment? Are you
running Xen?

Ben



From 0x6e6562 at gmail.com  Sat Nov 29 00:25:28 2008
From: 0x6e6562 at gmail.com (Ben Hood)
Date: Sat, 29 Nov 2008 00:25:28 +0000
Subject: [rabbitmq-discuss] Form Submission - Add A Question
In-Reply-To: <17337314.140771227723860981.JavaMail.root@web1>
References: <17337314.140771227723860981.JavaMail.root@web1>
Message-ID: <269388e30811281625w71f1dce7u8fb90c224a4972cf@mail.gmail.com>

Drew,

On Wed, Nov 26, 2008 at 6:24 PM, Squarespace Services
<services at squarespace.com> wrote:
> This email was transmitted via lettuce.squarespace.com.
>
> Submitted from address 157.166.167.129/157.166.167.129.
>
> ----------------------------------------------------------------------
>
>
> Your Question: Two answers in this FAQ seem to contradict each other.  Namely:
>
> FAQ > Clustering > If we connect multiple nodes together will the in-memory queues will be replicated across all nodes?
>
> "... only broker entities are replicated (exchanges, queues and bindings)"
>
> This seems to imply that queue declarations are replicated across the cluster.
>
> FAQ > Clustering > If I make a queue persistent, will a copy of the queue be stored on each node in the cluster?
>
> "A queue only exists on one node in the cluster"
>
> This implies the opposite.  Which is it?  Most importantly, when a persistent queue is created I'm hoping the queue and its bindings are stored on all disk nodes.  That is the behavior I've observed at least from a consumer's perspective by testing shutting down nodes.

Fair point.

Although it appears contradictory, it is actually correct - I think
the confusion is down to the differentiation between a queue entity
and a queue process, which I have tried to clarify in this FAQ:

http://lettuce.squarespace.com/faq/queues/what-is-the-difference-between-a-queue-record-and-a-queue-pr.html

HTH,

Ben



From brian.noguchi at gmail.com  Sun Nov 30 21:33:52 2008
From: brian.noguchi at gmail.com (Brian Noguchi)
Date: Sun, 30 Nov 2008 13:33:52 -0800
Subject: [rabbitmq-discuss] Name of particular mercurial branch for
	basic.qos feature?
Message-ID: <efc1839e0811301333m2d61e5c5mebb4b0f3808c727a@mail.gmail.com>

I am trying to access the experimental basic.qos feature.  What mercurial
branch name should I update my source tree to in order to try out this
feature?

Thanks,
--Brian
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.rabbitmq.com/pipermail/rabbitmq-discuss/attachments/20081130/81b5a231/attachment.htm 

From matthias at lshift.net  Sun Nov 30 22:25:17 2008
From: matthias at lshift.net (Matthias Radestock)
Date: Sun, 30 Nov 2008 22:25:17 +0000
Subject: [rabbitmq-discuss] Name of particular mercurial branch
 for	basic.qos feature?
In-Reply-To: <efc1839e0811301333m2d61e5c5mebb4b0f3808c727a@mail.gmail.com>
References: <efc1839e0811301333m2d61e5c5mebb4b0f3808c727a@mail.gmail.com>
Message-ID: <493312CD.7020709@lshift.net>

Brian,

Brian Noguchi wrote:
> I am trying to access the experimental basic.qos feature.  What 
> mercurial branch name should I update my source tree to in order to try 
> out this feature?

The branch name is bug18557. However, this feature is still at a fairly 
early stage of development, so I would not recommend running that 
branch. In fact I'd advise against running code on any of the branches. 
By contrast, 'default', i.e. the trunk, is pretty safe.


Matthias.



From matthias at lshift.net  Sun Nov 30 22:48:03 2008
From: matthias at lshift.net (Matthias Radestock)
Date: Sun, 30 Nov 2008 22:48:03 +0000
Subject: [rabbitmq-discuss] Name of particular mercurial branch
 for	basic.qos feature?
In-Reply-To: <efc1839e0811301431t27d03ee5n29703e2321f0dcbd@mail.gmail.com>
References: <efc1839e0811301333m2d61e5c5mebb4b0f3808c727a@mail.gmail.com>	<493312CD.7020709@lshift.net>
	<efc1839e0811301431t27d03ee5n29703e2321f0dcbd@mail.gmail.com>
Message-ID: <49331823.3060204@lshift.net>

Brian,

Brian Noguchi wrote:
> If I don't use the branch, what strategy would you 
> suggest in order to make sure that several consumers of a queue are 
> consuming an equal number of messages without all the messages piling up 
> into the local buffer of a consumer?  Any other alternatives than just 
> doing a Basic.get periodically?

That depends on the use case.

Is the number of consumers constant?

Can you arrange for all consumers to subscribe before messages are being 
published?

Are all your consumers operating at approximately the same rate?

Is the total rate of consumption greater than the rate of publication? 
(It better be, or you will run out of memory eventually)


Depending on the answers to the above, the normal round-robin 
distribution mechanisms employed by queues may suffice.


Matthias
PS: please keep the list cc'ed.



From holger at wizards.de  Sun Nov 30 23:14:58 2008
From: holger at wizards.de (=?ISO-8859-1?Q?Holger_Hoffst=E4tte?=)
Date: Mon, 01 Dec 2008 00:14:58 +0100
Subject: [rabbitmq-discuss] (OT) List replies and email clients -
	Thunderbird fix
Message-ID: <49331E72.2020909@wizards.de>


I've noticed that many conversations partially disappear because the
default reply-to-sender behaviour is apparently too confusing. Without
going into the reasons why or why not reply-to-list is
useful/evil/whatever [1], I can at least offer a tip for anybody using
Thunderbird and looking for a workaround. The simplest fix, apart from
having to remember to press Reply-All (IMHO unacceptable), is a useful
plugin at http://www.juergen-ernst.de/addons/replytolist.html. It will add
a new "Reply to List" button/shortcut that will correctly reply to the
list if the mail has the necessary list headers.
I'm using it with TB 2.0.0.18 and it works fine.

hope this helps!
Holger

[1] http://www.google.com/search?q=reply-to+considered+harmful




